antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,46.443]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[1,43.476,2,22.808]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[3,27.167,4,29.598]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[5,28.646]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[6,48.495]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1",[7,59.681]],["name/1",[7,2.509]],["text/1",[0,3.421,1,0.9,2,0.472,3,3.476,4,3.178,5,2.426,6,1.45,7,0.975,8,2.497,9,1.685,10,2.247,11,2.069,12,3.623,13,1.129,14,2.728,15,0.807,16,1.431,17,2.905,18,2.86,19,1.878,20,2.216,21,2.761,22,1.389,23,0.803,24,1.262,25,1.185,26,0.768,27,0.651,28,1.003,29,0.768,30,1.05,31,1.093,32,1.257,33,0.837,34,1.388,35,2.119,36,1.025,37,0.724,38,3.231,39,1.346,40,0.485,41,0.597,42,2.23,43,2.067,44,2.067,45,2.919,46,2.444,47,0.758,48,0.758,49,1.286,50,0.778,51,2.506,52,0.653,53,0.9,54,0.861,55,1.025,56,0.993,57,0.586,58,0.722,59,0.877,60,0.68,61,0.984,62,0.888,63,1.322,64,0.61,65,0.709,66,1.614,67,0.727,68,0.717,69,0.966,70,2.493,71,0.542,72,0.882,73,0.993,74,0.697,75,0.941,76,0.927,77,2.471,78,2.896,79,2.697,80,1.905,81,1.9,82,1.402,83,2.194,84,0.695,85,0.746,86,0.792,87,1.711,88,0.714,89,0.837,90,1.171,91,0.741,92,1.845,93,1.261,94,0.851,95,0.68,96,0.613,97,2.386,98,1.149,99,2.975,100,0.882,101,2.146,102,1.785,103,0.682,104,1.724,105,0.819,106,0.672,107,1.197,108,0.934,109,0.792,110,0.622,111,2.208,112,2.393,113,0.871,114,0.9,115,1.576,116,0.841,117,0.861,118,1.037,119,0.949,120,0.941,121,1.627,122,1.769,123,0.984,124,0.771,125,1.025,126,0.796,127,0.984,128,0.647,129,0.788,130,1.457,131,0.872,132,1.26,133,0.722,134,0.576,135,1.367,136,1.037,137,0.752,138,1.131,139,0.938,140,2.104,141,1.45,142,1.707,143,0.517,144,1.227,145,1.627,146,1.26,147,1.26,148,0.871,149,1.078,150,0.856,151,1.3,152,1.037,153,0.927,154,1.802,155,0.957,156,0.7,157,0.949,158,1.351,159,0.758,160,0.697,161,1.149,162,0.551,163,0.593,164,1.522,165,0.823,166,1.351,167,1.05,168,0.658,169,0.654,170,3.843,171,1.863,172,1.122,173,5.11,174,0.803,175,1.129,176,0.949,177,0.807,178,3.596,179,0.913,180,0.722,181,1.129,182,0.934,183,0.431,184,1.11,185,1.226,186,1.11,187,1.3,188,0.92,189,1.456,190,1.037,191,0.596,192,1.26,193,1.129,194,1.627,195,0.888,196,0.807,197,1.838,198,1.249,199,1.22,200,0.702,201,0.832,202,0.768,203,1.383,204,0.752,205,0.877,206,0.906,207,1.129,208,0.785,209,0.934,210,1.197,211,1.923,212,0.807,213,0.841,214,1.637,215,1.171,216,0.533,217,0.871,218,0.605,219,0.48]],["component/1",[220,0.615]],["title/2-1",[5,22.593,221,60.833]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[36,40.884,88,28.475,222,40.436]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[223,56.58,224,41.359,225,24.678]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2-4",[14,20.977,144,26.705,226,53.866]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["title/2-5",[41,23.801,109,31.575,227,34.116]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["title/2-6",[3,27.167,4,29.598]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["title/2-7",[12,32.023,43,45.004,44,45.004]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["title/2",[8,10.45,228,19.217,229,51.683,230,51.683]],["name/2",[8,0.468,231,2.316]],["textcomponent/2",[220,0.615]],["title/3",[381,45.47,382,68.537]],["name/3",[381,1.432,382,2.159]],["text/3",[16,4.112,20,5.146,22,2.765,41,4.346,110,4.529,169,4.764,319,6.158,381,6.854,383,5.964,384,9.835]],["component/3",[220,0.615]],["title/4",[8,12.273,74,27.811,220,12.681]],["name/4",[385,2.02]],["text/4",[0,2.035,4,1.645,8,2.5,14,1.412,16,2.432,22,1.019,35,1.814,38,1.944,39,4.534,40,1.301,41,1.602,42,2.665,45,2.033,46,2.364,48,2.035,49,1.362,61,2.896,64,1.637,74,1.872,77,1.47,79,2.825,92,1.097,99,1.641,103,1.831,104,2.526,106,1.803,110,1.669,112,1.562,128,1.737,129,2.115,143,1.389,169,4.419,189,1.542,220,0.854,233,1.995,248,3.994,251,2.115,264,2.338,273,2.283,279,2.666,287,2.569,291,1.792,292,4.64,317,1.047,323,1.325,324,1.318,326,2.061,328,1.329,329,1.814,344,1.965,351,5.597,360,2.722,378,2.135,380,3.029,386,3.032,387,4.78,388,3.289,389,3.091,390,1.923,391,4.088,392,3.85,393,2.383,394,2.64,395,2.506,396,3.263,397,2.722,398,1.539,399,2.106,400,3.289,401,2.106,402,2.666,403,4.64,404,2.592,405,3.212,406,4.086,407,2.934,408,2.052,409,2.666,410,2.784,411,3.083,412,4.922,413,3.38,414,3.705,415,2.893,416,2.125,417,1.637,418,2.893,419,4.086,420,1.93,421,3.144,422,3.144]],["component/4",[220,0.615]],["title/5-1",[368,63.523]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["title/5-2",[369,33.688,423,31.788]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["title/5-3",[144,32.349,424,36.335]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["title/5-4",[425,39.17,426,37.404]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["title/5-5",[4,20.805,134,19.549,347,15.956,423,22.344]],["name/5-5",[]],["text/5-5",[]],["component/5-5",[]],["title/5-6",[4,20.805,40,16.452,134,19.549,267,27.533]],["name/5-6",[]],["text/5-6",[]],["component/5-6",[]],["title/5-7",[4,16.04,40,12.684,134,15.071,268,30.073,269,32.082,270,25.056]],["name/5-7",[]],["text/5-7",[]],["component/5-7",[]],["title/5-8",[4,24.435,134,22.959,347,18.74]],["name/5-8",[]],["text/5-8",[]],["component/5-8",[]],["title/5-9",[427,71.74]],["name/5-9",[]],["text/5-9",[]],["component/5-9",[]],["title/5-10",[14,25.409,47,36.628]],["name/5-10",[]],["text/5-10",[]],["component/5-10",[]],["title/5-11",[208,31.289,347,18.74,428,40.011]],["name/5-11",[]],["text/5-11",[]],["component/5-11",[]],["title/5-12",[4,24.435,8,12.273,134,22.959]],["name/5-12",[]],["text/5-12",[]],["component/5-12",[]],["title/5-13",[225,16.2,353,26.838,429,20.358,430,20.098,431,25.056,432,18.197]],["name/5-13",[]],["text/5-13",[]],["component/5-13",[]],["title/5-14",[14,25.409,433,53.626]],["name/5-14",[]],["text/5-14",[]],["component/5-14",[]],["title/5",[8,9.098,14,15.551,248,17.482,369,20.617,426,22.892]],["name/5",[14,0.8,426,1.178]],["text/5",[3,1.725,4,3.755,6,0.458,8,2.652,10,0.414,11,1.573,14,2.875,16,1.903,22,1.04,24,1.102,25,2.18,26,1.203,27,0.714,32,0.397,34,1.092,35,1.059,39,0.807,41,0.655,42,2.268,43,0.652,45,0.273,46,0.221,47,0.832,49,1.209,51,0.462,52,3.122,54,0.497,60,0.155,61,1.96,62,0.28,64,1.216,66,1.269,67,0.42,71,0.595,74,0.765,76,0.535,78,1.678,82,2.538,91,0.428,92,0.236,93,0.398,95,0.393,110,0.975,112,0.639,115,1.24,116,1.318,130,1.586,134,3.656,138,0.357,139,0.562,141,0.869,143,0.568,144,2.054,148,0.956,152,1.138,160,1.662,162,2.835,163,1.182,167,0.607,168,1.031,169,1.025,180,0.792,189,1.574,198,0.394,200,0.406,202,0.444,208,1.87,217,0.956,219,0.277,224,0.599,225,1.475,232,0.524,233,0.43,236,0.44,239,0.433,241,0.789,248,2.83,250,0.535,258,0.58,260,0.513,266,0.708,267,2.221,270,2.281,271,0.568,272,0.517,274,1.465,281,0.544,283,2.232,284,1.218,285,0.877,286,0.492,291,0.733,292,2.149,294,1.668,298,0.751,308,1.785,310,2.278,312,0.486,313,0.944,317,0.611,320,0.776,332,1.138,337,0.886,338,0.489,344,0.804,347,2.057,353,1.607,356,0.607,359,0.642,361,1.135,362,0.524,364,1.127,366,0.918,369,1.662,376,0.677,377,0.599,378,1.247,383,1.284,386,1.725,389,1.932,390,1.963,391,0.832,392,1.065,394,1.079,395,0.54,396,1.055,398,1.758,408,0.442,409,0.574,410,0.599,412,0.528,413,0.728,414,0.497,423,2.217,424,2.745,425,1.617,426,5.146,427,1.285,428,2,429,1.551,430,1.531,431,1.5,432,0.402,433,2.213,434,0.88,435,0.574,436,0.486,437,0.531,438,0.528,439,0.88,440,1.101,441,0.708,442,0.708,443,0.708,444,0.535,445,0.664,446,0.728,447,0.42,448,0.82,449,1.482,450,0.728,451,0.652,452,1.892,453,1.05,454,0.599,455,0.88,456,1.67,457,0.82,458,0.82,459,0.652,460,0.614,461,0.677,462,0.88,463,0.88,464,2.568,465,0.599,466,0.691,467,1.152,468,0.599,469,3.987,470,1.345,471,1.138,472,0.623,473,0.781,474,2.592,475,0.82,476,0.691,477,0.642,478,0.751,479,0.804,480,1.382,481,0.918,482,1.846,483,0.88,484,0.751,485,0.677,486,0.728,487,1.67,488,1.67,489,0.751,490,0.708,491,0.531,492,0.88,493,0.614,494,0.476,495,0.751,496,0.82,497,1.607,498,1.607,499,1.069,500,0.751,501,0.853,502,1.382,503,1.382,504,0.728,505,0.708,506,0.781,507,0.781,508,0.677,509,1.261,510,0.642,511,0.599,512,0.52,513,1.586,514,0.677,515,1.086,516,0.82,517,3.405,518,0.5,519,0.444,520,0.52,521,1.072,522,0.46,523,0.558,524,0.568,525,0.832,526,0.652,527,0.393,528,0.531,529,0.592,530,0.607,531,0.88,532,0.548,533,1.67,534,1.67,535,0.988,536,0.632,537,1.069,538,1.183,539,1.167,540,1.28,541,1.427,542,1.813,543,1.313,544,1.261,545,0.883,546,1.285,547,1.082,548,2.995,549,0.768,550,0.82,551,0.57,552,0.708,553,0.85,554,0.918,555,0.382,556,0.865,557,0.478,558,1.033,559,0.82,560,0.451,561,0.507,562,0.531,563,0.751,564,0.88,565,1.983,566,0.82,567,1.382,568,1.419,569,1.261,570,1.67,571,0.483,572,0.728,573,0.781,574,0.88,575,0.88,576,0.88,577,0.88,578,0.88,579,0.728,580,0.88,581,0.503,582,0.642,583,0.82,584,0.82,585,0.82,586,0.607,587,0.632,588,0.728,589,1.297,590,0.728,591,0.553,592,0.677,593,0.751,594,0.677,595,0.478,596,0.54,597,0.903,598,1.167,599,0.82,600,0.88,601,0.623,602,0.88,603,0.82,604,1.125,605,0.88,606,0.88,607,0.586,608,0.82,609,0.494]],["component/5",[220,0.615]],["title/6-1",[368,63.523]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["title/6-2",[317,18.84,428,48.467]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["title/6-3",[428,48.467,610,62.794]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["title/6",[8,9.098,248,17.482,317,11.53,428,29.662,610,38.43]],["name/6",[317,0.593,428,1.527]],["text/6",[8,2.429,14,1.98,16,2.126,34,2.062,42,3.299,52,3.649,61,3.004,110,3.479,144,4.947,167,3.952,189,2.163,239,2.82,241,2.707,248,4.668,260,3.343,264,3.279,267,3.052,270,3.603,275,3.037,285,3.008,308,2.82,317,1.468,359,4.179,378,2.994,383,4.581,408,2.878,409,6.628,410,3.904,424,5.938,426,4.331,428,7.92,445,4.324,464,4.057,467,3.952,468,3.904,469,8.675,470,4.613,471,3.904,472,4.057,474,4.893,475,5.341,476,4.504,477,4.179,478,4.893,482,2.536,597,3.099,611,5.73,612,3.3,613,4.741,614,4.613,615,4.003,616,5.73]],["component/6",[220,0.615]],["title/7-1",[8,14.867,134,27.811]],["name/7-1",[]],["text/7-1",[]],["component/7-1",[]],["title/7-2",[183,26.392]],["name/7-2",[]],["text/7-2",[]],["component/7-2",[]],["title/7-3",[568,43.584]],["name/7-3",[]],["text/7-3",[]],["component/7-3",[]],["title/7-4",[134,35.263]],["name/7-4",[]],["text/7-4",[]],["component/7-4",[]],["title/7-5",[22,18.346,134,27.811]],["name/7-5",[]],["text/7-5",[]],["component/7-5",[]],["title/7-6",[551,25.084,617,62.794]],["name/7-6",[]],["text/7-6",[]],["component/7-6",[]],["title/7-7",[134,27.811,138,29.819]],["name/7-7",[]],["text/7-7",[]],["component/7-7",[]],["title/7-8",[320,43.288]],["name/7-8",[]],["text/7-8",[]],["component/7-8",[]],["title/7-9",[618,75.064]],["name/7-9",[]],["text/7-9",[]],["component/7-9",[]],["title/7-10",[568,43.584]],["name/7-10",[]],["text/7-10",[]],["component/7-10",[]],["title/7-11",[63,34.859,423,31.788]],["name/7-11",[]],["text/7-11",[]],["component/7-11",[]],["title/7-12",[4,29.598,134,27.811]],["name/7-12",[]],["text/7-12",[]],["component/7-12",[]],["title/7-13",[14,25.409,42,23.88]],["name/7-13",[]],["text/7-13",[]],["component/7-13",[]],["title/7-14",[45,28.919]],["name/7-14",[]],["text/7-14",[]],["component/7-14",[]],["title/7-15",[46,23.467]],["name/7-15",[]],["text/7-15",[]],["component/7-15",[]],["title/7-16",[64,24.316,134,22.959,619,45.004]],["name/7-16",[]],["text/7-16",[]],["component/7-16",[]],["title/7-17",[4,29.598,134,27.811]],["name/7-17",[]],["text/7-17",[]],["component/7-17",[]],["title/7",[134,35.263]],["name/7",[134,1.483]],["text/7",[0,0.447,2,0.278,3,1.254,4,2.267,5,0.276,8,1.722,10,0.422,11,0.899,14,2.495,16,0.769,20,1.284,21,0.445,22,2.068,24,1.375,25,1.032,26,0.232,27,0.383,32,0.935,34,0.471,35,0.205,37,0.219,38,0.266,39,0.223,40,0.417,41,0.181,42,1.761,45,2.33,46,2.567,47,0.23,48,0.447,49,1.228,50,0.236,52,0.198,55,0.31,57,2.168,58,0.425,60,0.428,61,0.976,62,0.773,63,2.246,64,0.973,65,0.61,66,0.712,69,0.292,71,0.606,72,0.52,74,0.411,77,0.746,78,0.213,79,0.387,80,0.583,82,2.781,83,0.262,84,0.598,85,0.44,88,0.421,89,0.253,92,1.567,93,0.208,94,0.258,95,0.401,96,1.113,102,0.574,106,0.578,108,0.283,112,0.343,113,0.513,115,0.188,116,0.255,117,0.261,121,0.269,124,0.233,126,0.241,128,0.196,130,0.469,131,2.16,133,0.219,134,4.721,135,0.44,136,2.702,137,0.647,138,2.199,139,1.038,142,0.165,143,1.439,144,0.576,148,0.513,150,0.259,152,0.314,159,0.23,160,0.411,162,1.533,163,0.349,167,0.318,168,0.566,169,0.386,171,0.223,172,0.361,173,0.283,174,1.094,177,0.475,180,0.425,182,0.283,183,1.199,189,1.598,191,0.18,194,0.269,197,0.304,198,0.402,199,0.392,200,0.213,201,0.252,202,0.232,204,0.443,208,0.877,209,0.283,212,0.694,213,0.255,216,0.314,217,0.264,218,0.183,219,0.283,220,0.274,222,0.307,225,1.255,233,0.225,239,0.441,241,0.424,246,0.169,247,0.428,248,0.509,251,0.464,254,0.469,258,0.304,262,0.865,274,0.223,277,0.292,283,0.247,285,0.471,286,0.258,288,0.331,292,0.635,294,1.334,299,0.43,300,0.233,304,0.331,308,0.838,310,0.614,311,0.261,313,0.962,315,0.672,317,0.118,318,0.105,320,0.416,322,0.381,323,0.149,326,0.232,328,0.15,337,0.244,338,0.498,344,0.431,347,3.251,354,0.276,361,0.219,362,1.235,364,1.147,365,0.899,366,0.253,367,0.483,377,0.314,380,0.665,383,0.483,386,0.484,389,0.641,390,0.801,395,0.283,396,0.961,398,0.781,399,0.238,401,0.462,403,0.326,408,0.232,414,0.507,417,0.185,420,0.218,423,2.048,424,1.025,425,0.246,426,1.406,428,0.591,429,0.458,430,0.452,432,0.41,435,1.353,438,0.276,441,0.722,447,0.626,451,0.342,452,0.559,454,0.893,466,0.705,477,0.336,479,0.63,480,0.267,481,0.253,482,0.397,489,0.394,494,0.249,499,1.239,501,0.458,511,0.314,513,0.469,515,0.21,517,0.955,520,0.775,521,0.207,522,0.469,524,0.298,525,0.447,527,0.206,530,0.318,535,0.53,537,1.328,538,0.635,539,0.322,540,0.552,541,0.394,542,1.056,543,0.362,544,0.348,545,0.768,546,0.355,547,1.254,549,0.782,551,2.183,555,1.475,557,1.32,561,0.516,565,1.511,568,3.303,588,0.381,589,0.925,590,0.381,591,0.29,592,0.355,593,0.394,594,0.355,595,0.251,596,0.283,607,0.307,609,0.259,612,0.265,618,0.722,619,0.665,620,0.712,621,0.796,622,0.728,623,0.513,624,0.381,625,0.53,626,1.65,627,0.409,628,0.409,629,1.008,630,1.958,631,0.31,632,0.766,633,0.262,634,0.647,635,0.381,636,0.461,637,0.461,638,0.825,639,0.935,640,1.31,641,0.331,642,0.292,643,0.516,644,0.326,645,0.452,646,0.281,647,0.314,648,1.008,649,1.172,650,0.307,651,0.786,652,0.394,653,0.903,654,0.705,655,0.285,656,0.336,657,0.461,658,0.461,659,1.221,660,0.228,661,2.275,662,0.559,663,0.58,664,2.154,665,0.705,666,1.453,667,1.084,668,0.362,669,0.371,670,0.766,671,0.722,672,0.461,673,0.43,674,0.538,675,0.409,676,0.325,677,0.48,678,0.485,679,0.394,680,0.394,681,0.381,682,0.461,683,0.43,684,0.331,685,0.307,686,0.355,687,0.298,688,0.394,689,0.397,690,0.307,691,0.897,692,0.43,693,0.461,694,0.43,695,0.31,696,0.461,697,0.251,698,0.336,699,0.58,700,0.31,701,2.236,702,1.781,703,0.848,704,1.367,705,0.7,706,0.307,707,0.43,708,0.195,709,0.461,710,0.318,711,0.394,712,0.43,713,0.461,714,0.461,715,0.314,716,0.542,717,0.362,718,0.409,719,0.362,720,0.234,721,0.177,722,0.208,723,0.394,724,0.274,725,0.301,726,0.836,727,0.29,728,1.931,729,0.55,730,1.206,731,0.295,732,0.43,733,0.804,734,1.663,735,0.461,736,0.246,737,0.43,738,0.461,739,0.831,740,0.971,741,0.882,742,0.461,743,0.461,744,0.258,745,0.348,746,1.061,747,0.381,748,0.619,749,0.256,750,0.381,751,0.371,752,0.259,753,0.889,754,0.355,755,0.355,756,0.371,757,0.461,758,0.461,759,0.461,760,0.461,761,0.298,762,0.627,763,0.766,764,0.336,765,0.461,766,0.301,767,0.461,768,0.43,769,0.461,770,0.461,771,0.394,772,0.394,773,0.43,774,0.355,775,0.585,776,0.307,777,0.461,778,0.897,779,3.403,780,2.778,781,0.941,782,0.98,783,0.461,784,0.665,785,0.461,786,0.807,787,0.461,788,0.371,789,0.461,790,0.355,791,0.461,792,0.342,793,0.371,794,0.43,795,0.314,796,0.759,797,0.461,798,0.214,799,0.461,800,0.261,801,0.461,802,0.461,803,0.348,804,0.267,805,0.461,806,0.304,807,0.461,808,0.248,809,0.331,810,0.796,811,0.461,812,1.141,813,0.461,814,0.394,815,0.855,816,0.381,817,0.461,818,0.461,819,0.43,820,0.461,821,0.287,822,0.362,823,0.461,824,0.742,825,0.322,826,0.301,827,0.836,828,0.461,829,0.292,830,0.53,831,0.461,832,0.516,833,0.409,834,0.362,835,0.326,836,0.29,837,0.48,838,0.292,839,0.461,840,0.461,841,0.461,842,0.461,843,0.336,844,0.292,845,0.355,846,0.461,847,0.897,848,0.409,849,0.292,850,0.461,851,0.371,852,0.461,853,0.654,854,0.955,855,0.304,856,0.461,857,0.461,858,0.722,859,0.585,860,0.461,861,0.394,862,0.307,863,0.461,864,0.527,865,0.461,866,1.119,867,0.381,868,0.307,869,0.742,870,0.461,871,0.461,872,0.461,873,0.43,874,0.461,875,1.084,876,0.318,877,0.461,878,0.307,879,0.362,880,0.355,881,0.461,882,0.665,883,0.534,884,0.574,885,0.665,886,0.461,887,0.258,888,0.43,889,0.43,890,0.342,891,0.331,892,0.635,893,0.326,894,0.278,895,0.461,896,0.409,897,0.604,898,0.285,899,0.461,900,1.221,901,0.461,902,1.162,903,0.461,904,0.461,905,0.461,906,0.461,907,0.461,908,0.278,909,0.265,910,0.48,911,0.331,912,0.461,913,0.461,914,0.627,915,0.523,916,0.202,917,0.409,918,0.461,919,0.591,920,0.362,921,0.461,922,0.722,923,0.43,924,0.461,925,0.253,926,0.461,927,0.461,928,0.597,929,0.301,930,0.381,931,0.252,932,0.461,933,0.461,934,0.461,935,0.322,936,0.461,937,0.461,938,0.461,939,0.394,940,0.362,941,0.326,942,0.43,943,0.461,944,0.409,945,0.461,946,0.705,947,0.409,948,0.461,949,0.461,950,0.342,951,0.394,952,0.394,953,0.409,954,0.362]],["component/7",[220,0.615]],["title/8-1",[676,17.814]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[8,9.098,24,11.896,248,17.482,423,19.454,894,27.186]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[2,13.958,24,11.896,248,17.482,423,19.454,894,27.186]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8",[24,16.047,423,26.242,451,45.004]],["name/8",[894,2.368]],["text/8",[2,1.826,3,0.447,6,1.173,8,0.802,15,1.195,16,0.837,21,2.921,22,1.598,24,3.518,25,0.514,34,0.435,38,0.359,39,0.584,40,0.385,41,0.474,48,0.603,52,1.357,60,0.558,61,0.427,65,0.564,66,2.462,71,0.803,74,1.451,82,1.701,85,0.593,86,0.629,99,1.594,106,1.751,113,0.692,115,0.494,125,1.519,131,0.99,139,2.818,142,1.42,143,1.349,150,1.78,153,2.416,160,0.554,162,0.438,169,0.52,172,0.487,174,0.638,182,0.742,189,0.457,195,0.706,208,0.624,210,0.951,216,0.424,218,0.897,227,0.68,228,0.45,232,0.72,248,2.287,249,1.502,251,0.626,262,0.431,267,1.201,286,0.676,291,0.531,299,0.58,310,0.813,314,0.824,317,1.362,320,1.843,326,2.002,344,0.582,347,0.696,365,0.524,366,0.665,368,0.824,369,0.554,371,0.748,386,0.447,392,0.424,401,2.046,423,4.38,424,0.598,431,2.943,433,0.882,450,1.001,451,0.897,457,2.102,482,0.998,494,1.219,499,1.01,501,0.618,515,2.131,519,4.782,521,0.544,542,4.317,545,0.448,547,0.549,560,0.621,565,1.731,586,0.834,591,1.991,626,1.772,638,1.259,674,0.726,676,0.431,708,0.513,728,1.575,730,4.027,755,0.931,772,1.033,773,2.952,774,0.931,808,1.213,829,0.767,882,0.897,892,2.242,893,0.857,894,4.409,919,3.881,950,0.897,955,2.496,956,0.651,957,2.255,958,0.815,959,3.315,960,1.081,961,1.21,962,0.644,963,1.001,964,0.731,965,0.992,966,1.536,967,4.261,968,0.974,969,0.593,970,8.398,971,0.913,972,1.702,973,2.009,974,1.773,975,2.549,976,1.128,977,3.166,978,1.644,979,1.21,980,2.158,981,1.21,982,0.688,983,1.21,984,1.21,985,1.21,986,7.66,987,1.21,988,0.742,989,1.21,990,1.21,991,1.21,992,1.21,993,0.882,994,1.21,995,1.926,996,1.21,997,1.21,998,3.27,999,1.21,1000,3.006,1001,3.776,1002,1.21,1003,1.128,1004,0.782,1005,1.21,1006,1.555,1007,1.21,1008,1.21,1009,1.21,1010,1.943,1011,1.21,1012,2.109,1013,1.21,1014,1.21,1015,1.21,1016,2.255,1017,1.672,1018,0.731,1019,1.21,1020,0.797,1021,1.21,1022,1.21,1023,2.704,1024,1.21,1025,1.21,1026,1.21,1027,1.21,1028,3.522,1029,5.316,1030,2.255,1031,2.255,1032,0.815,1033,0.897,1034,1.074,1035,0.869,1036,1.21,1037,1.21,1038,1.21,1039,1.21,1040,1.21,1041,1.21,1042,1.21,1043,1.21,1044,1.21,1045,3.166,1046,1.21,1047,2.81,1048,1.406,1049,1.486,1050,1.21,1051,0.71,1052,1.21,1053,1.21,1054,1.21,1055,1.21,1056,0.782,1057,1.21,1058,1.418,1059,0.736,1060,0.797,1061,1.21,1062,1.21,1063,1.21,1064,2.437,1065,0.951,1066,1.21,1067,1.21,1068,0.897,1069,1.502,1070,1.21,1071,0.54,1072,1.033,1073,0.676,1074,0.931,1075,1.21,1076,3.166,1077,0.845,1078,2.255,1079,1.21,1080,1.21,1081,1.21,1082,0.68,1083,1.21]],["component/8",[220,0.615]],["title/9-1",[1084,63.523]],["name/9-1",[]],["text/9-1",[]],["component/9-1",[]],["title/9-2",[626,24.043]],["name/9-2",[]],["text/9-2",[]],["component/9-2",[]],["title/9-3",[77,26.457,92,19.751]],["name/9-3",[]],["text/9-3",[]],["component/9-3",[]],["title/9-4",[5,28.646]],["name/9-4",[]],["text/9-4",[]],["component/9-4",[]],["title/9-5",[626,18.962,808,39.564]],["name/9-5",[]],["text/9-5",[]],["component/9-5",[]],["title/9-6",[539,51.361,547,33.362]],["name/9-6",[]],["text/9-6",[]],["component/9-6",[]],["title/9-7",[134,35.263]],["name/9-7",[]],["text/9-7",[]],["component/9-7",[]],["title/9-8",[57,35.892]],["name/9-8",[]],["text/9-8",[]],["component/9-8",[]],["title/9-9",[1085,47.224]],["name/9-9",[]],["text/9-9",[]],["component/9-9",[]],["title/9-10",[5,22.593,255,29.526]],["name/9-10",[]],["text/9-10",[]],["component/9-10",[]],["title/9-11",[79,31.697,425,39.17]],["name/9-11",[]],["text/9-11",[]],["component/9-11",[]],["title/9-12",[1086,82.733]],["name/9-12",[]],["text/9-12",[]],["component/9-12",[]],["title/9-13",[1087,56.752]],["name/9-13",[]],["text/9-13",[]],["component/9-13",[]],["title/9",[316,43.476,1088,47.978]],["name/9",[385,2.02]],["text/9",[2,0.444,3,2.215,4,2.871,5,0.809,6,0.744,8,0.532,11,0.62,14,0.91,16,0.531,22,2.278,24,2.013,25,1.556,26,1.328,27,1.126,29,0.722,32,0.645,34,1.317,35,0.635,38,1.085,39,1.272,40,1.165,41,2.084,42,2.142,45,2.619,46,2.726,50,0.731,52,0.613,53,0.846,54,0.809,57,2.046,58,1.249,59,0.824,62,0.455,63,0.678,65,1.227,66,0.598,71,1.304,77,1.317,79,1.578,80,0.49,83,1.498,88,0.671,92,2.609,99,0.574,102,0.916,103,1.64,109,1.37,110,1.495,112,2.033,131,2.516,134,0.996,135,1.291,139,0.886,142,0.512,144,0.629,156,0.658,157,0.892,162,2.17,168,0.618,169,0.615,171,1.272,174,0.755,177,0.758,180,0.678,183,0.746,184,1.043,185,1.152,188,3.211,189,2.262,191,0.56,193,2.713,194,3.497,195,0.835,197,0.943,198,2.382,199,1.152,202,0.722,205,0.824,209,1.616,218,0.569,219,0.83,220,0.299,227,0.804,236,0.716,239,1.801,241,1.244,246,0.525,248,0.556,251,1.364,253,0.924,255,0.574,257,1.84,260,1.536,262,0.938,273,0.799,274,1.272,275,2.409,277,1.671,281,1.629,283,0.766,284,1.043,285,0.751,294,0.786,299,0.686,310,0.516,313,0.809,316,0.846,317,0.367,325,0.846,337,0.758,340,1.013,344,1.267,345,0.933,347,1.85,348,0.824,354,0.858,355,0.871,363,1.08,365,1.142,378,0.748,383,0.77,389,0.539,390,0.673,391,1.312,395,0.878,396,1.272,398,0.539,407,1.028,408,1.323,414,0.809,417,1.82,418,1.013,422,2.816,423,0.618,425,0.762,436,0.79,440,0.943,447,1.258,477,1.043,493,0.999,494,0.774,509,1.08,513,0.748,525,0.713,545,0.53,547,0.649,551,0.898,553,0.728,555,1.145,557,0.778,561,4.107,568,0.669,604,0.964,615,0.999,620,0.778,622,2.033,623,0.819,626,2.075,631,0.964,638,2.384,639,1.237,649,2.069,663,1.702,668,1.125,685,1.754,690,2.438,701,0.943,705,1.534,706,0.953,708,0.606,710,1.816,722,2.397,730,0.624,731,0.916,748,1.816,749,1.463,752,0.804,808,2.445,849,0.908,882,1.061,887,0.799,910,0.766,915,0.835,925,0.786,935,0.999,951,1.222,965,1.159,967,0.643,982,0.814,1032,0.964,1058,1.656,1069,0.953,1085,2.693,1087,2.228,1088,0.933,1089,2.455,1090,2.179,1091,1.431,1092,1.08,1093,1.333,1094,4.959,1095,0.77,1096,0.987,1097,1.043,1098,0.987,1099,1.125,1100,1.222,1101,1.152,1102,1.27,1103,0.615,1104,1.061,1105,1.222,1106,1.028,1107,1.222,1108,1.152,1109,1.27,1110,1.333,1111,1.333,1112,1.333,1113,1.333,1114,1.333,1115,1.043,1116,1.333,1117,1.333,1118,1.568,1119,1.125,1120,1.27,1121,0.814,1122,1.152,1123,1.222,1124,1.27,1125,1.507,1126,1.27,1127,1.27,1128,1.222,1129,1.27,1130,1.333,1131,0.924,1132,1.061,1133,1.27,1134,1.028,1135,1.333,1136,1.028,1137,1.061,1138,0.734,1139,1.333,1140,1.27,1141,1.222,1142,0.999,1143,1.333,1144,1.061,1145,1.101,1146,1.27,1147,0.953,1148,1.101,1149,0.835,1150,0.916,1151,0.766,1152,1.892,1153,1.333,1154,0.975,1155,1.865,1156,1.333,1157,1.333,1158,1.333,1159,1.27,1160,1.333,1161,1.333,1162,1.333,1163,1.08,1164,1.333,1165,1.333]],["component/9",[220,0.615]],["title/10-1",[8,12.273,216,21.255,248,23.582]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["title/10-2",[8,10.45,41,20.265,109,26.884,248,20.079]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["title/10-3",[8,12.273,58,28.778,248,23.582]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["title/10-4",[8,10.45,248,30.604,329,22.944]],["name/10-4",[]],["text/10-4",[]],["component/10-4",[]],["title/10",[1166,45.004,1167,56.58,1168,40.011]],["name/10",[385,2.02]],["text/10",[4,1.526,8,2.589,14,1.763,15,2.009,16,0.794,22,1.273,36,1.442,38,2.503,41,2,42,1.231,45,0.664,46,1.553,49,0.713,52,0.918,57,1.459,58,5.417,59,1.233,61,0.755,67,1.022,73,1.397,74,0.981,80,0.733,91,1.041,92,1.018,103,1.698,104,1.324,109,2.654,130,1.119,142,0.766,143,0.728,156,1.742,171,1.033,219,1.608,227,1.203,232,1.274,247,1.81,248,5.023,267,1.14,277,1.358,300,1.084,310,0.772,326,2.573,328,1.66,338,1.189,368,1.458,378,2.666,383,3.319,386,1.401,390,1.008,398,0.806,401,3.636,403,1.515,414,1.21,426,1.089,427,2.917,444,1.303,460,1.495,465,1.458,472,3.612,485,5.428,486,3.136,522,1.119,545,0.792,558,2.344,645,1.08,687,1.383,722,0.965,754,1.647,792,1.587,838,1.358,868,4.109,916,0.936,958,1.442,967,0.962,968,1.723,1020,4.066,1084,1.458,1155,1.515,1166,1.587,1167,4.756,1168,3.363,1169,4.756,1170,1.899,1171,1.771,1172,1.587,1173,1.899,1174,1.411,1175,1.561,1176,10.523,1177,3.237,1178,2.14,1179,3.533,1180,3.791,1181,5.102,1182,5.102,1183,1.249,1184,5.102,1185,8.989,1186,8.989,1187,0.95,1188,1.647,1189,5.75,1190,3.364,1191,3.052,1192,7.8,1193,7.8,1194,7.8,1195,1.426,1196,5.268,1197,4.656,1198,3.851,1199,2.14,1200,2.14,1201,2.14,1202,2.14,1203,3.364,1204,1.723,1205,2.14,1206,3.533,1207,2.14,1208,1.723,1209,2.14,1210,1.828,1211,2.14,1212,2.14,1213,1.411,1214,1.995,1215,1.995,1216,1.995,1217,3.052,1218,1.647,1219,2.14,1220,2.14,1221,2.14,1222,1.995,1223,3.791,1224,3.791,1225,2.14]],["component/10",[220,0.615]],["title/11-1",[142,26.301,216,25.746]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["title/11",[112,28.118,225,29.893]],["name/11",[112,1.499]],["text/11",[2,2.141,3,1.177,4,1.283,8,2.093,14,1.101,21,1.581,22,2.583,24,1.413,26,1.607,27,1.362,34,1.923,40,2.572,45,0.988,46,0.802,49,1.781,52,2.291,61,2.435,62,1.701,64,2.765,65,3.216,71,1.904,82,1.158,105,1.715,110,1.302,112,4.583,131,0.996,134,3.685,139,1.071,142,4.477,152,3.641,159,1.587,162,3.931,163,1.241,168,2.984,169,1.37,183,1.513,188,1.925,189,1.203,216,3.152,234,1.871,269,2.565,294,1.751,299,1.527,341,1.706,347,3.008,361,1.516,364,2.525,369,1.46,386,1.975,389,2.013,390,3.249,396,1.107,398,1.2,412,1.911,426,4.11,429,4.128,430,5.882,453,2.004,497,2.146,501,1.628,535,1.884,539,2.226,542,1.385,545,2.556,551,1.087,553,1.621,589,1.732,594,5.311,595,1.732,601,2.256,609,4.541,626,1.378,689,1.41,721,1.227,749,1.77,752,1.791,965,3.037,1000,1.801,1226,1.859,1227,3.186,1228,3.186,1229,5.344,1230,3.186,1231,1.681,1232,2.721,1233,2.828,1234,3.186,1235,2.828,1236,2.828,1237,2.828,1238,2.828,1239,3.186,1240,2.256,1241,3.186]],["component/11",[220,0.615]],["title/12-1",[1242,69.122]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12",[1242,45.004,1243,51.839,1244,39.608]],["name/12",[1245,3.478]],["text/12",[49,3.95,383,6.377,1242,8.787,1243,10.122,1244,7.734]],["component/12",[220,0.615]],["title/13-1",[7,47.069,295,46.644]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[1,43.476,2,22.808]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[3,27.167,4,29.598]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13",[7,47.069,8,14.867]],["name/13",[7,1.483,8,0.468]],["text/13",[1,1.503,3,3.943,4,3.728,5,3.011,7,1.627,8,2.402,14,2.981,16,1.635,22,0.634,24,0.672,32,1.987,34,1.586,38,3.165,42,1.431,45,3.519,46,2.926,49,1.944,60,0.777,62,0.809,63,1.205,65,1.184,77,3.694,78,3.992,79,3.394,80,2.696,81,3.975,82,2.12,83,3.959,84,1.161,85,1.246,86,1.322,87,2.703,88,2.067,89,1.397,90,1.956,91,1.237,92,2.758,93,1.15,94,1.42,95,1.135,96,1.023,97,3.608,98,1.918,99,2.343,100,1.473,101,3.391,102,2.821,103,1.139,104,2.725,105,2.371,106,1.945,107,1.998,108,1.559,109,1.322,110,1.039,111,2.522,112,2.662,113,1.454,114,1.503,115,2.384,116,1.404,117,1.437,118,1.732,119,1.585,120,1.572,121,1.483,122,2.795,123,1.642,124,1.287,125,1.712,126,1.328,127,1.642,128,1.08,129,1.316,130,2.303,131,0.795,132,2.103,133,1.205,134,0.961,135,2.161,136,1.732,137,1.256,138,2.366,139,1.482,140,3.326,141,2.292,142,2.816,143,0.864,144,1.939,145,3.403,146,3.646,147,3.646,148,1.454,149,1.8,150,1.428,151,2.171,224,1.732,238,1.658,239,1.251,247,1.214,250,1.547,295,1.612,359,1.854,482,1.125,549,1.168,581,3.338,689,1.125,868,1.693,1147,1.693,1246,2.171,1247,2.255,1248,1.712,1249,2.171,1250,2.542,1251,2.542,1252,2.171,1253,2.171,1254,2.103]],["component/13",[220,0.615]],["title/14-1",[497,62.794]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["title/14-2",[1255,66.009]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["title/14-3",[426,47.427]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["title/14",[8,12.273,426,30.879,497,40.884]],["name/14",[8,0.332,426,0.836,497,1.107]],["text/14",[0,4.872,8,2.901,22,1.732,42,2.254,49,2.313,52,2.975,78,3.212,106,3.063,144,4.303,162,3.541,180,3.29,189,2.619,241,3.279,272,4.076,281,4.292,284,5.062,337,3.679,365,3.009,383,3.735,389,2.614,392,2.435,416,3.61,423,3.001,424,6.077,426,4.976,472,4.914,496,6.469,497,7.628,498,4.675,509,5.238,519,3.501,523,4.403,553,3.531,1248,4.675,1256,5.927,1257,4.364,1258,5.341,1259,4.022,1260,5.588]],["component/14",[220,0.615]],["title/15-1",[40,23.406,46,18.508]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[92,16.305,142,21.712,310,21.885]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[92,19.751,310,26.51]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[8,14.867,40,23.406]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[42,23.88,46,18.508]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15",[46,23.467]],["name/15",[8,0.332,35,0.73,46,0.414]],["text/15",[7,1.458,8,1.973,14,1.852,16,0.845,22,1.833,24,0.602,25,1.702,26,1.149,32,1.027,34,1.441,35,1.011,38,1.913,40,2.78,42,2.836,46,3.173,49,0.759,51,1.196,57,2.483,59,1.311,60,0.944,61,0.804,64,1.604,78,2.479,79,1.726,80,2.208,92,3.495,96,0.917,99,1.608,103,1.794,105,1.225,106,1.005,115,0.931,119,1.42,122,1.445,123,1.472,131,2.016,142,0.815,143,0.774,144,1.762,149,3.794,163,0.887,181,1.688,189,1.511,195,3.126,216,0.797,233,1.112,254,1.19,262,1.427,264,1.303,267,1.213,273,1.273,274,1.933,290,5.507,291,0.999,308,1.971,310,2.648,318,0.52,320,1.057,337,3.894,338,1.265,366,1.251,375,1.232,381,1.408,383,1.225,386,0.841,389,1.508,391,1.134,392,2.262,396,0.791,398,2.018,417,0.912,420,1.076,425,1.213,482,1.772,521,4.574,525,4.351,527,3.281,558,2.476,638,3.22,639,0.77,643,1.311,644,1.612,645,1.149,646,1.386,651,1.734,699,1.472,703,1.134,721,2.828,736,2.133,776,2.667,825,1.591,838,1.445,916,1.751,965,2.357,969,1.117,1087,1.386,1172,1.688,1175,1.661,1187,2.379,1248,1.534,1259,2.32,1261,1.688,1262,1.571,1263,1.834,1264,2.367,1265,1.834,1266,2.123,1267,2.021,1268,1.719,1269,3.022,1270,1.288,1271,1.636,1272,2.639,1273,1.472,1274,1.661,1275,2.587,1276,2.277,1277,2.277,1278,1.688,1279,1.884,1280,3.794,1281,5.507,1282,1.661,1283,2.761,1284,3.148,1285,2.028,1286,2.021,1287,2.021,1288,1.432,1289,1.636,1290,1.486,1291,1.591,1292,2.021,1293,2.977,1294,3.651,1295,1.591,1296,1.752]],["component/15",[220,0.615]],["title/16-1",[40,23.406,45,22.808]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["title/16-2",[77,21.842,142,21.712,310,21.885]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["title/16-3",[77,26.457,310,26.51]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["title/16-4",[8,14.867,40,23.406]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["title/16",[45,28.919]],["name/16",[8,0.332,35,0.73,45,0.51]],["text/16",[1,1.689,5,0.878,7,1.828,8,2.262,14,2.201,16,1.06,22,1.589,24,0.755,34,1.753,38,0.847,40,3.127,42,1.582,45,4.055,46,2.316,48,1.423,51,1.5,60,0.859,61,1.008,64,1.952,71,1.018,77,4.646,80,3.15,81,1.946,82,2.315,104,1.766,106,1.26,115,1.991,131,1.992,135,1.4,138,1.158,142,1.022,144,1.257,149,4.51,189,1.839,195,3.716,227,1.605,236,1.429,248,1.893,251,1.479,262,1.736,264,1.634,274,1.379,290,6.429,308,1.406,310,2.714,311,1.615,320,1.326,337,3.991,338,1.587,371,1.766,381,1.766,389,1.835,390,1.345,391,1.423,392,1.002,396,0.993,398,2.399,426,1.453,437,1.725,480,1.655,482,2.156,521,5.029,525,3.75,527,3.774,536,2.051,558,3.013,571,1.569,638,2.533,703,1.423,708,1.211,721,2.452,736,1.521,776,1.903,882,2.118,910,1.529,916,2.131,1187,2.828,1226,1.666,1248,1.924,1259,3.692,1261,2.118,1262,1.97,1267,2.534,1268,2.156,1269,3.677,1270,1.615,1271,2.051,1273,1.846,1274,2.083,1275,1.846,1278,2.118,1279,2.363,1280,4.51,1281,6.429,1282,2.083,1283,3.36,1284,3.83,1285,2.468,1286,2.534,1288,1.796,1297,2.534,1298,1.677,1299,2.662,1300,2.856,1301,1.846,1302,2.534]],["component/16",[220,0.615]],["title/17-1",[8,10.45,35,22.944,248,20.079,389,19.464]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["title/17-2",[8,10.45,35,22.944,106,22.806,1261,38.319]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["title/17",[8,14.867,35,32.642]],["name/17",[8,0.468,35,1.028]],["text/17",[0,2.609,3,1.935,4,3.204,5,1.609,6,2.725,8,2.837,12,4.198,14,1.81,16,1.943,22,1.307,24,1.385,32,2.362,35,5.616,39,2.529,40,2.533,42,1.701,45,3.334,46,2.706,50,4.066,60,1.696,131,1.638,169,2.252,248,3.739,267,4.239,268,3.953,270,3.294,273,2.927,281,3.239,320,2.432,337,2.777,378,2.737,388,4.217,389,2.997,392,1.838,398,1.973,401,2.7,482,2.318,502,4.334,503,4.334,520,3.097,545,3.563,554,2.878,638,2.083,643,3.016,646,3.189,756,4.217,776,5.301,964,3.165,969,2.568,1248,5.36,1303,4.217,1304,4.118,1305,3.213,1306,3.659,1307,4.118,1308,2.763,1309,5.238,1310,2.588,1311,5.238]],["component/17",[220,0.615]],["title/18",[236,36.779,375,39.768]],["name/18",[8,0.332,236,0.822,375,0.889]],["text/18",[3,3.177,4,2.338,6,4.473,8,2.289,13,6.376,14,2.007,15,3.079,16,2.155,22,1.449,40,3.26,42,2.793,45,3.176,46,2.577,49,2.866,57,3.311,61,3.034,77,2.09,92,1.56,110,2.373,143,1.974,194,3.388,213,3.209,232,5.12,239,4.233,240,6.924,241,4.837,248,2.256,254,3.035,283,3.109,316,3.434,338,3.227,359,4.236,360,3.869,396,2.988,420,2.744,442,4.676,493,4.057,519,2.929,582,4.236,607,5.728,654,4.566,722,2.619,893,4.112,894,3.509,916,2.54,973,3.684,1060,3.828,1088,3.79,1259,3.366,1260,6.924,1308,3.064,1312,4.805,1313,7.062,1314,4.306]],["component/18",[220,0.615]],["title/19-1",[8,14.867,35,32.642]],["name/19-1",[]],["text/19-1",[]],["component/19-1",[]],["title/19-2",[8,14.867,9,44.422]],["name/19-2",[]],["text/19-2",[]],["component/19-2",[]],["title/19-3",[8,14.867,17,44.759]],["name/19-3",[]],["text/19-3",[]],["component/19-3",[]],["title/19-4",[8,14.867,42,23.88]],["name/19-4",[]],["text/19-4",[]],["component/19-4",[]],["title/19-5",[8,14.867,51,38.606]],["name/19-5",[]],["text/19-5",[]],["component/19-5",[]],["title/19-6",[8,14.867,66,30.754]],["name/19-6",[]],["text/19-6",[]],["component/19-6",[]],["title/19-7",[8,14.867,247,35.112]],["name/19-7",[]],["text/19-7",[]],["component/19-7",[]],["title/19-8",[8,14.867,70,47.513]],["name/19-8",[]],["text/19-8",[]],["component/19-8",[]],["title/19",[0,36.628,8,14.867]],["name/19",[0,1.154,8,0.468]],["text/19",[0,2.71,3,3.094,4,1.75,5,0.599,6,0.704,8,2.446,9,0.817,10,2.856,11,1.306,12,2.074,13,0.523,14,1.762,15,0.374,16,1.613,17,2.124,18,1.446,19,0.911,20,0.628,21,2.156,22,0.486,23,0.372,24,1.039,25,0.575,26,0.356,27,0.301,28,0.465,29,0.356,30,0.486,31,0.507,32,0.318,33,1.071,34,0.254,35,1.746,36,0.475,37,0.336,38,0.209,39,0.941,40,0.621,41,0.765,42,1.538,43,1.003,44,1.003,45,0.776,46,1.853,47,0.351,48,0.351,49,0.451,50,0.36,51,2.677,52,0.836,53,0.417,54,0.399,55,0.475,56,0.46,57,0.751,58,0.334,59,0.406,60,0.124,61,0.477,62,0.431,63,1.864,64,1.002,65,0.329,66,1.459,67,0.646,68,0.332,69,0.447,70,2.541,71,0.251,72,0.409,73,0.46,74,0.323,75,0.837,76,0.429,78,0.326,79,0.304,80,0.856,82,1.58,85,1.226,88,0.635,92,0.672,96,0.284,99,1.004,110,0.288,112,0.27,115,2.597,122,0.447,131,3.153,134,0.267,135,0.663,137,0.669,139,1.322,142,0.484,143,0.24,168,0.585,172,1.404,173,0.433,189,0.266,199,4.359,219,2.64,232,0.42,233,0.344,247,1.666,248,1.171,250,0.429,264,0.404,267,2.315,270,2.733,271,0.456,272,0.414,283,0.378,286,1.398,291,0.309,302,0.602,318,0.309,320,2.367,325,1.479,347,0.772,348,3.494,386,0.261,389,2.856,391,0.351,392,0.475,396,0.245,411,0.532,412,0.423,414,0.399,423,0.305,424,1.236,425,2.522,426,0.688,452,0.44,464,3.077,482,1.924,502,0.584,503,0.584,504,1.119,505,0.568,506,1.201,507,0.626,510,0.514,512,5.155,542,0.588,548,1.797,551,0.853,568,0.632,569,2.968,591,0.444,715,0.922,725,0.883,746,1.56,829,0.447,837,0.378,866,1.155,868,0.901,896,1.201,909,0.779,967,0.317,993,3.453,1000,0.765,1001,0.388,1051,1.145,1103,0.303,1138,0.694,1257,0.444,1275,0.874,1285,0.988,1315,0.499,1316,0.626,1317,0.657,1318,0.584,1319,1.73,1320,3.51,1321,3.573,1322,3.573,1323,2.198,1324,2.274,1325,2.274,1326,3.573,1327,3.573,1328,0.602,1329,3.026,1330,1.119,1331,1.119,1332,1.201,1333,0.705,1334,3.337,1335,1.041,1336,0.705,1337,0.532,1338,0.705,1339,0.705,1340,0.83,1341,2.501,1342,1.261,1343,1.261,1344,2.22,1345,0.657,1346,0.657,1347,1.353,1348,0.626,1349,3.417,1350,3.643,1351,2.369,1352,1.824,1353,2.332,1354,1.041,1355,1.155,1356,0.602,1357,3.499,1358,0.602,1359,8.197,1360,5.763,1361,0.657,1362,1.261,1363,3.707,1364,5.117,1365,5.117,1366,1.119,1367,2.22,1368,5.117,1369,5.117,1370,1.201,1371,1.201,1372,1.089,1373,4.218,1374,4.218,1375,1.155,1376,1.201,1377,1.261,1378,1.261,1379,0.911,1380,1.353,1381,3.013,1382,1.261,1383,4.346,1384,1.353,1385,1.261,1386,1.261,1387,0.945,1388,1.817,1389,2.979,1390,1.261,1391,1.382,1392,2.332,1393,1.261,1394,0.657,1395,1.817,1396,1.797,1397,2.22,1398,0.602,1399,0.657,1400,3.358,1401,1.95,1402,1.201,1403,1.201,1404,0.945,1405,1.201,1406,0.752,1407,1.201,1408,1.201,1409,0.972,1410,1.95,1411,0.626,1412,0.543,1413,0.554,1414,0.44,1415,0.554,1416,0.657,1417,0.657,1418,1.73,1419,0.657,1420,0.626]],["component/19",[220,0.615]],["title/20-1",[5,18.651,36,40.884,272,35.647]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[224,63.523]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20-3",[144,32.349,332,50.099]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["title/20-4",[22,18.346,199,32.158]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["title/20",[8,14.867,248,28.565]],["name/20",[8,0.822]],["text/20",[4,1.934,5,1.476,8,2.48,13,2.083,14,0.971,15,2.546,16,1.042,22,1.198,24,0.743,32,2.166,35,1.247,36,4.238,38,3.813,39,3.595,40,0.894,42,1.56,45,2.31,46,2.106,48,2.393,49,0.936,54,1.588,55,3.235,58,1.332,71,1.001,75,1.737,78,1.3,80,0.962,82,1.021,83,1.598,88,1.318,99,1.128,101,2.162,102,1.798,103,2.152,104,3.891,105,1.512,106,2.12,110,1.963,112,2.848,115,2.571,117,1.588,122,4.724,130,1.468,143,0.955,144,1.236,156,1.291,171,1.356,172,1.131,180,2.277,189,2.81,191,1.099,196,1.489,199,1.229,203,1.394,217,1.608,224,1.914,225,2.558,227,1.579,232,3.747,234,1.65,239,1.383,248,2.893,269,2.262,272,3.695,274,2.319,276,2.083,277,1.782,279,1.833,281,1.737,288,2.018,291,1.232,295,1.782,299,1.346,300,1.423,303,2.618,304,2.018,307,2.618,310,1.013,317,0.72,318,1.912,319,1.561,320,1.304,321,1.496,323,0.911,324,0.906,325,1.661,326,1.417,328,0.914,329,1.247,332,1.914,334,1.989,347,0.867,356,1.937,365,1.218,395,1.723,396,0.976,416,1.461,420,1.327,421,2.162,422,2.162,426,1.429,432,1.283,433,2.049,436,1.552,446,2.324,499,2.152,511,3.273,556,1.455,597,1.519,598,1.962,660,1.388,677,2.572,721,1.081,884,1.798,955,1.766,1059,1.71,1142,1.962,1149,1.639,1187,1.247,1295,1.962,1421,2.618,1422,2.809,1423,5.206,1424,2.324,1425,1.892,1426,2.809,1427,1.852,1428,2.809,1429,2.262,1430,2.399,1431,2.618,1432,2.618,1433,2.809,1434,2.493,1435,2.809,1436,2.208,1437,2.618,1438,1.962,1439,2.493,1440,2.083,1441,2.809,1442,2.809,1443,2.399,1444,1.989,1445,2.809,1446,2.208,1447,1.914,1448,1.752,1449,2.324,1450,1.723,1451,2.12,1452,2.809]],["component/20",[220,0.615]],["title/21-1",[389,27.691,416,38.247]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21",[]],["name/21",[385,2.02]],["text/21",[0,4.012,6,4.189,7,5.155,8,2.764,35,3.575,45,2.498,46,2.027,91,3.918,106,3.553,116,4.45,131,2.518,189,3.039,203,3.995,236,4.028,238,7.07,295,5.108,359,5.873,360,5.364,368,5.487,375,4.355,379,3.832,412,6.498,425,4.29,426,4.097,440,5.308,497,5.424,749,4.474,969,3.948,1246,6.877,1247,7.146,1261,5.971,1423,6.662,1453,7.146]],["component/21",[220,0.615]],["title/22-1",[8,12.273,24,16.047,525,30.238]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22",[]],["name/22",[24,0.612,525,1.154]],["text/22",[0,3.466,2,1,3,1.191,8,1.645,16,1.196,22,1.736,23,1.7,24,3.813,35,1.431,40,1.717,45,1,46,0.811,49,1.074,57,1.241,60,1.226,61,2.455,62,1.026,64,1.291,74,1.476,75,1.993,78,1.491,80,1.103,82,1.171,95,1.439,100,1.868,106,1.422,110,2.843,121,3.147,131,1.687,134,2.041,137,1.592,159,1.605,162,4.239,172,1.297,194,1.88,196,1.708,225,1.31,236,1.612,271,2.082,281,1.993,283,1.725,296,2.251,300,1.632,310,1.162,312,1.781,317,0.826,320,1.496,337,1.708,341,1.725,343,2.082,365,1.397,386,1.993,396,1.875,423,2.332,425,1.717,460,2.251,479,2.595,482,1.426,493,2.251,495,2.752,499,1.444,501,1.646,511,2.196,513,1.684,519,1.625,522,1.684,525,4.881,537,2.063,542,4.261,545,1.193,619,4,620,1.752,626,0.831,703,1.605,721,2.679,776,2.147,780,1.993,798,1.496,832,1.856,854,2.35,894,3.259,923,3.004,925,1.771,954,2.533,967,1.448,1004,3.486,1136,2.314,1149,1.88,1226,1.88,1231,1.7,1260,2.594,1261,2.389,1293,1.79,1308,1.7,1454,3.004,1455,3.222,1456,5.159,1457,9.133,1458,6.414,1459,4.344,1460,3.004,1461,1.892,1462,3.004,1463,2.48,1464,3.004,1465,2.389,1466,2.196,1467,2.86,1468,3.222,1469,3.004,1470,4.072,1471,3.004,1472,3.222]],["component/22",[220,0.615]],["title/23-1",[24,16.047,56,39.608,776,40.436]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[24,16.047,56,39.608,1473,42.977]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[24,16.047,110,24.803,157,37.848]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23",[110,30.044,157,45.846]],["name/23",[8,0.332,35,0.73,157,1.025]],["text/23",[3,2.499,8,0.725,12,1.06,13,1.49,20,0.933,22,0.501,24,3.733,25,1.524,29,1.808,34,0.723,36,1.353,38,1.063,45,1.828,46,1.483,47,1.001,50,1.831,52,3.933,53,3.999,56,3.165,60,0.855,61,1.265,64,3.006,71,0.716,77,1.29,78,0.93,82,0.73,88,0.943,89,1.104,92,0.54,94,2.711,95,0.898,104,2.216,106,0.887,110,0.821,154,2.316,157,8.005,162,2.946,168,0.869,172,0.809,180,0.953,218,0.799,222,3.231,227,1.129,233,0.981,247,0.96,279,1.311,281,1.243,299,0.963,308,2.9,310,3.308,311,1.136,321,1.909,386,1.324,393,1.172,394,1.298,398,0.757,399,1.036,417,0.805,481,1.969,482,1.586,499,5.003,513,1.05,521,3.658,522,1.05,525,1.785,527,0.898,549,0.924,556,1.04,562,2.165,613,4.013,614,1.618,626,0.924,643,3.393,645,1.808,674,1.205,676,0.384,689,0.889,721,3.976,724,1.196,776,3.925,854,2.614,897,1.353,966,1.369,967,0.903,988,1.233,1071,1.601,1095,1.081,1125,6.957,1149,1.172,1174,1.325,1175,1.466,1231,4.294,1244,1.311,1268,1.517,1289,1.443,1291,1.404,1308,1.06,1310,1.771,1473,1.423,1474,2.009,1475,3.584,1476,3.584,1477,1.873,1478,1.783,1479,1.716,1480,1.325,1481,1.423,1482,1.286,1483,3.813,1484,1.873,1485,2.009,1486,1.98,1487,2.817,1488,1.663,1489,3.435,1490,3.079,1491,2.574,1492,1.783,1493,2.538,1494,2.009,1495,3.661,1496,1.716,1497,5.032,1498,4.789,1499,2.574,1500,2.274,1501,1.58,1502,4.305,1503,2.705,1504,2.009]],["component/23",[220,0.615]],["title/24-1",[1,43.476,40,23.406]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["title/24-2",[45,22.808,60,12.959]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["title/24-3",[45,18.829,60,10.698,77,21.842]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["title/24-4",[46,18.508,60,12.959]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["title/24-5",[46,15.279,60,10.698,92,16.305]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["title/24-6",[8,14.867,60,12.959]],["name/24-6",[]],["text/24-6",[]],["component/24-6",[]],["title/24",[8,9.098,35,19.977,525,22.417,1272,29.662,1483,35.375]],["name/24",[8,0.258,35,0.566,525,0.635,1483,1.001]],["text/24",[1,3.951,2,0.8,5,0.793,8,2.445,14,1.346,16,0.356,22,0.644,24,0.682,25,1.39,27,3.145,32,0.818,34,0.928,35,0.426,38,1.478,39,0.876,40,2.439,41,1.75,42,1.265,45,3.249,46,2.734,47,0.478,49,1.298,51,1.355,54,0.543,57,2.707,58,0.86,59,0.553,60,1.448,61,1.374,62,0.821,63,2.116,64,2.188,66,0.759,67,1.232,68,1.214,71,0.646,77,4.402,78,1.513,79,1.41,80,1.87,83,1.467,89,0.527,90,0.738,92,3.09,95,1.152,103,0.813,106,1.443,109,2.322,110,1.054,112,0.367,121,1.058,128,0.771,129,0.939,130,1.348,131,0.3,133,0.455,138,0.389,139,0.323,141,2.322,142,2.111,143,1.517,156,0.441,163,1.738,172,2.198,183,1.103,189,0.974,190,1.236,191,0.375,192,0.794,198,0.43,202,1.301,204,0.896,214,0.564,219,2.415,222,0.639,239,0.472,241,0.453,246,0.947,251,0.939,254,1.709,262,1.165,264,0.549,272,0.564,273,1.442,283,0.514,287,1.141,289,1.104,296,0.67,300,0.919,308,3.289,310,1.969,317,0.246,319,0.533,329,0.426,343,1.172,347,1.686,379,0.457,386,0.355,392,0.636,393,0.56,398,1.467,425,2.655,438,0.576,453,0.603,479,4.394,480,0.556,481,1.418,482,0.425,521,3.571,522,4.004,525,4.334,527,0.429,530,1.251,532,0.598,549,0.441,555,0.417,568,0.848,607,1.209,626,0.468,629,1.396,638,0.721,639,1.846,643,3.632,646,1.104,674,2.336,676,1.044,678,0.519,703,0.904,705,0.324,708,1.651,715,1.236,721,1.5,736,0.511,756,0.773,779,0.56,786,0.455,826,1.184,882,0.712,931,0.992,969,0.889,1071,1.994,1073,1.014,1174,0.633,1175,0.7,1187,0.805,1231,3.113,1257,0.603,1274,0.7,1275,1.667,1280,0.679,1291,0.67,1293,0.533,1305,1.113,1363,0.56,1447,0.654,1448,0.598,1450,0.589,1458,0.679,1480,1.701,1483,5.253,1505,1.814,1506,1.549,1507,0.478,1508,0.852,1509,0.773,1510,3.042,1511,0.895,1512,0.738,1513,0.96,1514,0.639,1515,1.547,1516,0.495,1517,1.827,1518,0.712,1519,4.293,1520,4.958,1521,1.251,1522,1.501,1523,1.501,1524,1.461,1525,0.7,1526,0.754,1527,0.679,1528,1.369,1529,1.814,1530,1.691,1531,1.691,1532,0.773,1533,0.567,1534,0.82,1535,0.82,1536,0.773,1537,0.852,1538,0.96,1539,0.754,1540,1.501,1541,1.381,1542,1.719]],["component/24",[220,0.615]],["title/25-1",[8,12.273,67,28.986,416,31.575]],["name/25-1",[]],["text/25-1",[]],["component/25-1",[]],["title/25-2",[3,16.626,4,18.114,8,9.098,67,21.488,389,16.947]],["name/25-2",[]],["text/25-2",[]],["component/25-2",[]],["title/25-3",[0,19.85,8,12.987,22,9.942,67,19.028,1543,37.141]],["name/25-3",[]],["text/25-3",[]],["component/25-3",[]],["title/25-4",[1082,52.399]],["name/25-4",[]],["text/25-4",[]],["component/25-4",[]],["title/25",[8,14.867,67,35.112]],["name/25",[8,0.468,67,1.106]],["text/25",[0,1.673,3,3.266,4,3.362,8,2.748,9,1.129,10,0.88,14,1.93,16,0.693,21,0.927,22,0.466,24,1.702,32,0.843,35,2.03,40,2.049,41,1.317,42,2.533,49,3.218,52,0.801,57,0.719,61,0.659,62,1.069,64,1.345,66,2.336,67,6.015,71,0.666,74,0.856,82,2.835,93,0.845,110,0.764,116,1.033,130,0.977,131,3.316,134,2.435,139,1.129,162,1.216,163,0.728,168,0.808,169,0.803,172,1.352,189,0.705,198,1.505,219,0.589,233,0.913,239,0.92,248,1.777,272,1.097,274,0.902,293,1.742,310,0.674,312,1.033,315,1.723,320,0.868,337,1.78,347,1.037,364,0.883,365,0.81,369,1.539,378,2.39,381,3.453,387,1.363,389,2.937,392,0.656,397,2.237,425,1.789,438,1.121,444,5.084,476,1.469,480,1.083,482,0.827,501,0.955,537,3.575,542,1.46,545,1.243,555,0.813,557,1.016,582,1.363,589,1.016,626,1.18,645,0.943,676,0.357,689,0.827,736,0.996,752,1.05,796,1.083,821,1.165,940,1.469,965,0.822,1000,1.057,1004,2.17,1010,1.146,1059,1.138,1082,2.571,1103,0.803,1131,1.208,1163,1.41,1168,1.232,1183,1.09,1196,3.906,1217,3.683,1244,1.219,1252,1.596,1259,1.083,1268,1.41,1285,0.947,1298,1.097,1308,2.413,1310,2.26,1334,2.832,1363,1.09,1434,1.658,1450,1.146,1489,1.323,1491,1.342,1493,3.238,1507,1.673,1544,1.273,1545,1.273,1546,1.342,1547,1.869,1548,3.596,1549,3.336,1550,3.906,1551,1.742,1552,4.574,1553,1.869,1554,1.869,1555,3.358,1556,1.869,1557,1.869,1558,1.869,1559,1.869,1560,1.742,1561,1.658,1562,1.869,1563,1.869,1564,1.869,1565,3.13,1566,3.358,1567,1.869,1568,1.596,1569,2.98,1570,1.596,1571,1.596,1572,2.779,1573,4.14,1574,1.869,1575,1.869,1576,1.869,1577,1.869,1578,1.742,1579,3.238,1580,5.326,1581,3.358,1582,3.358,1583,4.574,1584,1.105,1585,1.273,1586,1.869,1587,1.869,1588,1.869,1589,2.98,1590,1.869,1591,1.245,1592,2.704,1593,3.358,1594,1.869,1595,1.105,1596,1.363,1597,1.505,1598,1.869,1599,0.913,1600,1.869,1601,1.505]],["component/25",[220,0.615]],["title/26-1",[8,14.867,35,32.642]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26",[]],["name/26",[385,2.02]],["text/26",[4,1.809,5,2.685,6,3.677,8,2.691,12,3.729,14,1.553,16,2.623,24,2.848,35,5.313,36,3.027,39,2.17,40,1.431,42,2.296,45,3.073,46,2.494,48,2.239,50,5.844,51,3.712,52,4.247,53,4.18,55,3.027,56,2.932,61,1.586,64,1.8,65,2.094,67,3.376,74,2.059,105,2.418,110,3.57,143,1.528,157,4.408,266,3.618,271,2.904,273,2.511,283,3.785,292,3.182,313,2.541,337,3.747,359,5.156,360,2.994,378,2.348,383,2.418,392,1.577,417,2.832,418,3.182,423,1.943,437,2.715,442,3.618,525,4.936,555,1.954,587,3.228,646,2.736,722,3.187,967,2.02,1282,5.156,1454,6.589,1480,4.66,1483,5.557,1602,5.557,1603,3.838,1604,4.494,1605,3.182,1606,4.494,1607,3.718]],["component/26",[220,0.615]],["title/27-1",[676,17.814]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[962,49.665]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[14,17.861,368,35.215,651,16.729,969,25.339]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27-4",[216,32.645]],["name/27-4",[]],["text/27-4",[]],["component/27-4",[]],["title/27-5",[131,18.98,241,28.676,476,47.718]],["name/27-5",[]],["text/27-5",[]],["component/27-5",[]],["title/27-6",[225,37.903]],["name/27-6",[]],["text/27-6",[]],["component/27-6",[]],["title/27-7",[134,27.811,423,31.788]],["name/27-7",[]],["text/27-7",[]],["component/27-7",[]],["title/27",[14,25.409,50,37.567]],["name/27",[14,0.8,50,1.183]],["text/27",[3,1.509,4,0.937,6,1.211,8,2.422,11,1.415,13,0.928,14,3.678,15,0.664,16,0.864,22,2.403,24,1.97,25,0.532,27,0.995,32,0.565,35,3.924,38,0.968,42,1.06,45,1.87,46,1.767,49,1.088,50,1.667,52,0.537,53,1.929,56,0.817,60,1.876,62,0.399,63,1.104,64,2.415,65,0.583,68,0.59,70,1.505,71,1.455,74,1.495,75,1.44,76,1.986,77,2.527,78,0.58,82,3.316,87,1.428,92,2.292,99,0.935,106,1.027,112,0.89,116,0.692,117,0.708,118,0.853,130,0.654,131,0.728,133,0.594,134,2.478,141,1.211,143,0.426,152,0.853,153,0.762,156,0.576,159,0.624,160,0.574,163,0.907,168,1.411,169,0.538,172,1.935,196,0.664,198,1.043,200,0.578,216,0.815,218,0.926,222,0.834,225,2.217,241,1.542,246,1.499,248,2.895,249,0.834,254,1.217,266,1.008,271,0.809,281,0.774,287,1.464,295,0.794,308,2.366,320,0.581,326,1.174,341,1.247,343,0.809,347,1.484,365,0.543,386,0.86,389,0.877,392,0.817,393,0.731,398,0.472,411,0.945,412,0.751,414,1.316,423,1.411,426,0.637,440,1.535,453,1.464,476,1.83,481,1.28,491,1.407,495,1.069,499,1.462,512,0.74,513,1.705,517,0.913,519,0.632,520,1.929,521,2.944,525,4.545,526,1.726,546,1.792,547,2.181,549,1.07,551,0.427,568,1.089,571,0.688,614,1.875,619,3.027,626,0.842,633,0.712,639,0.423,642,2.59,643,3.772,644,0.887,645,0.632,646,3.319,647,1.587,651,1.321,674,0.751,676,0.445,689,0.554,699,0.809,708,0.987,715,0.853,721,0.482,746,0.781,756,1.875,776,2.174,826,0.817,830,1.929,832,0.721,853,0.913,894,1.971,910,1.747,915,1.358,940,0.984,967,1.047,973,0.794,974,0.984,975,1.008,1071,0.559,1103,0.538,1136,0.899,1150,0.802,1154,0.853,1175,1.698,1177,2.59,1187,0.556,1226,0.731,1231,4.327,1244,1.519,1270,2.718,1272,2.151,1280,0.887,1282,0.913,1291,0.875,1293,0.696,1305,0.768,1310,0.619,1409,0.899,1457,2.17,1471,2.17,1473,0.887,1480,0.825,1482,2.089,1508,2.066,1509,1.875,1510,0.853,1512,3.142,1541,0.67,1591,0.834,1592,1.875,1603,1.989,1608,1.036,1609,1.252,1610,5.633,1611,1.252,1612,1.252,1613,1.551,1614,1.252,1615,0.964,1616,1.111,1617,1.252,1618,0.899,1619,1.252,1620,3.806,1621,1.167,1622,2.328,1623,1.252,1624,5.594,1625,3.263,1626,3.263,1627,1.252,1628,2.978,1629,1.069,1630,1.252,1631,1.83,1632,1.252,1633,0.887,1634,1.252,1635,0.834,1636,1.008,1637,1.252,1638,1.252,1639,1.926,1640,1.069,1641,1.167,1642,1.069,1643,0.762]],["component/27",[220,0.615]],["title/28-1",[676,17.814]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28-2",[962,49.665]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["title/28",[38,18.004,50,31.013,104,37.537]],["name/28",[38,0.488,50,0.84,104,1.017]],["text/28",[8,1.514,16,3.826,24,1.98,35,3.324,38,2.221,40,2.384,41,2.936,42,2.432,45,3.942,46,3.199,50,5.269,104,4.631,308,3.686,337,3.969,386,3.81,389,4.786,390,3.525,398,2.82,412,6.184,416,5.364,417,3,598,5.231,638,4.101,643,4.312,651,2.424,715,5.102,1280,5.302,1282,5.461,1480,4.936,1602,5.887,1644,5.552,1645,4.709]],["component/28",[220,0.615]],["title/29-1",[676,17.814]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[386,27.167,581,42.078]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29-3",[1458,66.009]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["title/29-4",[962,49.665]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["title/29-5",[279,33.724,393,30.149,394,33.397,825,36.103]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["title/29-6",[162,16.289,279,29.363,394,29.078,645,22.697,651,14.565]],["name/29-6",[]],["text/29-6",[]],["component/29-6",[]],["title/29-7",[643,42.342,721,28.307]],["name/29-7",[]],["text/29-7",[]],["component/29-7",[]],["title/29-8",[195,42.892,1646,62.794]],["name/29-8",[]],["text/29-8",[]],["component/29-8",[]],["title/29-9",[137,36.335,1458,52.06]],["name/29-9",[]],["text/29-9",[]],["component/29-9",[]],["title/29-10",[45,18.829,46,15.279,522,31.721]],["name/29-10",[]],["text/29-10",[]],["component/29-10",[]],["title/29",[50,31.013,80,20.784,386,22.428]],["name/29",[50,0.84,80,0.563,386,0.607]],["text/29",[2,0.504,5,0.499,8,0.598,14,1.734,20,1.891,22,0.405,24,0.782,27,0.694,35,0.721,38,3.415,42,0.96,45,3.399,46,2.646,49,1.357,50,4.607,57,2.517,60,0.521,61,2.057,62,1.296,64,0.65,71,0.578,77,3.595,80,4.403,92,2.069,94,0.907,104,1.829,105,0.874,108,0.996,110,0.663,126,0.849,128,0.69,131,1.273,134,1.898,137,2.012,138,0.658,139,1.369,143,0.552,163,0.632,168,2.826,171,2.815,172,0.654,174,0.857,177,0.861,180,0.77,189,0.613,195,1.725,198,1.825,199,0.71,201,2.226,202,0.819,203,0.806,205,0.935,216,0.569,222,1.082,233,0.793,241,1.924,246,0.596,260,0.947,262,2.744,279,1.93,285,0.852,308,1.456,322,1.343,337,1.568,338,0.902,341,1.583,347,2.528,361,1.407,365,1.766,366,0.892,367,0.874,368,1.106,386,3.792,389,1.534,391,2.905,393,0.947,394,2.631,395,2.498,396,2.026,398,1.114,401,0.837,417,0.65,432,1.86,447,0.775,479,1.959,481,0.892,482,0.719,512,0.96,513,2.622,521,3.216,522,0.849,528,0.981,547,0.737,551,0.554,555,1.771,565,0.887,581,0.929,614,1.307,626,1.05,634,0.802,638,1.176,639,2.768,643,4.715,644,2.094,645,1.492,651,2.493,653,1.12,676,0.778,689,1.309,715,1.106,721,2.245,722,2.629,776,3.884,798,0.754,825,1.134,854,1.184,909,0.935,910,1.583,916,1.781,925,0.892,931,1.616,967,1.329,969,0.796,988,0.996,1059,0.988,1071,1.321,1087,0.988,1098,1.12,1142,3.505,1231,2.148,1258,1.249,1274,2.157,1275,1.911,1280,1.15,1282,1.184,1293,0.902,1294,2.775,1298,0.954,1305,0.996,1310,0.802,1334,0.714,1451,4.401,1458,2.883,1473,1.15,1480,1.07,1482,1.039,1635,1.082,1646,1.387,1647,1.225,1648,1.513,1649,2.232,1650,1.624,1651,1.249,1652,1.441,1653,1.624,1654,3.478,1655,1.307,1656,2.066,1657,1.387,1658,1.441,1659,0.907,1660,1.204,1661,1.225,1662,1.249]],["component/29",[220,0.615]],["title/30-1",[676,17.814]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["title/30-2",[24,19.438,78,34.025]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["title/30-3",[157,45.846,227,41.326]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["title/30-4",[676,17.814]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["title/30-5",[157,58.13]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["title/30-6",[157,45.846,1310,36.335]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["title/30-7",[78,34.025,157,45.846]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["title/30",[24,16.047,50,31.013,56,39.608]],["name/30",[24,0.435,50,0.84,56,1.073]],["text/30",[2,1.437,3,1.712,6,1.401,8,1.464,12,1.421,20,1.251,22,0.672,23,1.421,24,3.577,29,1.359,32,1.215,35,1.196,36,3.121,38,1.374,40,0.858,45,1.891,46,1.535,48,1.342,49,0.898,50,4.554,52,1.155,53,1.593,56,5.816,57,1.037,60,0.817,61,0.951,64,1.079,77,0.969,78,3.351,79,1.161,88,2.174,89,1.48,92,0.724,104,2.866,106,2.045,143,0.916,157,5.949,159,1.342,162,2.954,172,1.084,199,1.178,204,1.331,205,1.551,222,3.087,225,1.095,227,1.514,236,1.347,241,1.273,279,1.758,283,1.442,299,2.922,308,4.016,310,0.971,313,1.523,317,0.69,337,3.839,348,1.551,365,1.168,370,2.511,377,1.836,386,2.253,389,1.015,392,0.945,394,1.741,398,2.727,411,3.497,412,1.616,413,2.229,414,1.523,415,1.907,425,2.469,426,1.37,460,1.882,465,1.836,482,1.192,499,4.514,508,2.073,512,1.593,519,1.359,521,2.083,527,1.203,540,1.136,545,0.997,558,1.666,562,1.628,623,1.542,633,1.532,638,1.843,643,3.511,645,2.337,651,2.344,689,1.192,715,1.836,721,2.788,722,1.215,736,1.435,766,1.758,776,4.062,854,1.965,955,1.694,1004,1.741,1071,2.07,1125,3.489,1132,1.997,1274,1.965,1280,1.907,1282,1.965,1310,1.331,1427,1.776,1459,3.731,1461,1.582,1462,2.511,1463,2.073,1464,2.511,1465,1.997,1466,1.836,1473,1.907,1480,1.776,1482,1.724,1487,3.643,1491,3.328,1493,3.281,1495,2.033,1497,2.301,1498,4.317,1499,1.935,1502,6.426,1503,3.497,1649,3.497,1663,2.391,1664,2.169,1665,1.907,1666,2.694,1667,2.694,1668,2.511,1669,2.301,1670,1.653,1671,1.666,1672,2.301]],["component/30",[220,0.615]],["title/31-1",[676,17.814]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[962,49.665]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[2,22.808,1473,52.06]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[12,38.79,1298,43.18]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[651,30.176]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31",[5,22.593,50,37.567]],["name/31",[5,0.712,50,1.183]],["text/31",[2,3.215,3,3.226,5,3.917,6,3.084,8,1.199,12,3.128,22,2.178,32,2.673,40,3.299,50,4.461,64,2.375,71,2.112,110,2.423,168,2.563,254,3.098,279,5.697,364,2.801,365,2.571,386,2.191,393,3.459,394,5.642,398,3.288,481,3.258,482,2.624,512,3.506,520,3.506,521,3.924,522,4.563,562,3.582,633,3.372,643,5.028,645,5.227,651,1.919,715,4.04,776,5.816,964,3.582,1071,2.648,1174,3.908,1280,4.198,1282,4.324,1298,7.943,1473,6.182,1480,3.908,1482,3.795,1673,4.324,1674,4.258,1675,3.728,1676,4.324]],["component/31",[220,0.615]],["title/32-1",[676,17.814]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["title/32",[50,37.567,58,34.859]],["name/32",[50,1.183,58,1.098]],["text/32",[2,1.814,8,1.182,20,2.715,22,2.565,37,2.782,45,2.681,46,2.175,48,2.913,50,5.253,57,3.958,58,5.384,60,1.031,62,1.861,71,3.079,80,4.493,99,2.348,112,2.236,128,3.674,143,3.86,168,2.528,171,2.823,201,3.196,219,1.843,225,2.377,386,2.161,481,4.749,508,4.5,525,2.913,542,2.543,551,1.995,626,1.508,639,2.922,643,3.367,644,4.14,705,1.973,721,3.958,724,3.482,798,2.715,939,4.994,967,2.628,1097,4.265,1213,3.855,1231,4.559,1293,3.249,1305,3.587,1379,3.939,1459,4.708,1599,2.856,1677,4.538,1678,5.189,1679,3.816]],["component/32",[220,0.615]],["title/33-1",[50,37.567,225,29.893]],["name/33-1",[]],["text/33-1",[]],["component/33-1",[]],["title/33-2",[676,17.814]],["name/33-2",[]],["text/33-2",[]],["component/33-2",[]],["title/33",[]],["name/33",[50,1.183,225,0.942]],["text/33",[2,3.689,8,1.876,24,2.453,37,4.414,50,4.74,64,3.716,218,3.69,225,5.627,275,4.918,368,6.321,381,5.737,426,4.719,545,3.435,626,2.392,643,6.848,676,1.773,1174,6.115,1231,4.894,1680,6.766,1681,5.448]],["component/33",[220,0.615]],["title/34-1",[676,17.814]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["title/34",[50,37.567,51,38.606]],["name/34",[50,1.183,51,1.216]],["text/34",[0,2.953,2,2.708,3,3.226,5,3.184,8,2.312,10,2.791,11,2.571,20,2.753,22,1.479,33,3.258,35,3.876,45,1.839,46,2.198,48,2.953,50,5.295,51,6.921,60,1.045,71,2.112,77,2.133,82,3.173,86,3.084,92,2.345,106,3.853,121,3.459,135,4.281,168,3.775,196,3.143,199,3.819,218,2.358,262,2.112,308,4.297,341,3.174,465,4.04,479,2.852,527,2.648,545,2.195,549,2.725,555,2.578,626,1.529,643,3.414,644,4.198,676,1.133,721,2.283,812,3.604,967,2.665,1103,2.549,1138,3.043,1231,3.128,1387,4.141,1391,3.276,1682,4.774,1683,5.526]],["component/34",[220,0.615]],["title/35",[8,12.273,35,26.947,50,31.013]],["name/35",[50,2.003]],["text/35",[5,2.321,8,1.527,14,2.611,22,1.885,24,1.997,38,2.241,44,5.601,50,6.517,51,3.966,56,6.77,58,3.581,64,3.026,80,2.587,104,4.672,106,4.578,143,2.568,195,4.407,198,3.385,225,3.071,279,4.929,386,2.791,393,4.407,479,3.634,499,3.385,521,3.395,523,4.792,597,4.086,598,5.277,643,4.35,715,7.069,722,3.406,776,5.032,1274,7.567,1280,7.346,1282,7.567,1480,6.839]],["component/35",[220,0.615]],["title/36-1",[216,25.746,1480,48.467]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["title/36-2",[45,18.829,46,15.279,1480,40.011]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["title/36-3",[50,37.567,1480,48.467]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["title/36",[8,14.867,1480,48.467]],["name/36",[1480,2.584]],["text/36",[1,6.939,4,0.794,5,1.083,8,1.5,22,1.666,24,1.263,27,0.843,32,1.589,34,1.268,35,0.876,38,0.585,40,1.122,45,2.301,46,1.681,50,4.644,51,1.851,56,2.3,58,0.935,60,0.348,61,0.696,62,0.628,74,0.904,77,2.403,80,1.207,92,1.284,95,0.881,104,1.22,110,3.516,131,4.591,134,2.198,135,2.85,137,1.742,183,0.558,189,0.744,195,2.056,198,1.579,202,1.778,218,0.784,220,0.412,225,0.802,233,0.963,236,0.987,251,2.474,268,2.66,283,1.056,308,5.194,386,0.729,393,2.056,394,1.274,398,0.743,408,0.991,417,1.412,428,1.3,453,2.216,480,1.143,481,1.084,482,0.873,499,1.579,512,2.084,513,1.842,520,1.166,521,2.148,530,1.36,546,3.677,560,1.012,630,1.396,633,1.122,642,1.251,644,1.396,645,1.778,703,0.983,708,0.836,715,9.163,716,2.129,717,1.551,721,4.063,722,0.889,723,1.684,724,1.174,725,1.287,734,0.967,764,1.438,766,1.287,779,1.151,1004,1.274,1051,1.158,1071,1.574,1115,1.438,1174,1.3,1187,0.876,1226,2.056,1270,4.193,1280,6.739,1284,2.771,1287,1.75,1308,1.041,1352,2.571,1409,1.417,1458,2.496,1480,4.403,1483,1.551,1484,1.838,1506,1.684,1519,1.551,1524,1.588,1525,2.571,1579,1.396,1599,1.721,1631,1.551,1635,1.314,1644,1.462,1662,2.712,1673,1.438,1684,1.518,1685,1.972,1686,1.588,1687,1.972,1688,1.684,1689,1.684,1690,1.838,1691,1.838,1692,1.972,1693,1.972,1694,1.378,1695,1.588,1696,5.418,1697,5.704,1698,3.128,1699,1.972,1700,1.489]],["component/36",[220,0.615]],["title/37-1",[676,17.814]],["name/37-1",[]],["text/37-1",[]],["component/37-1",[]],["title/37-2",[93,33.256,960,35.24]],["name/37-2",[]],["text/37-2",[]],["component/37-2",[]],["title/37-3",[14,32.218]],["name/37-3",[]],["text/37-3",[]],["component/37-3",[]],["title/37-4",[5,22.593,68,34.614]],["name/37-4",[]],["text/37-4",[]],["component/37-4",[]],["title/37-5",[2,16.032,5,15.881,61,18.237,1187,22.944]],["name/37-5",[]],["text/37-5",[]],["component/37-5",[]],["title/37-6",[5,15.881,61,18.237,1187,22.944,1298,30.352]],["name/37-6",[]],["text/37-6",[]],["component/37-6",[]],["title/37-7",[5,22.593,1298,43.18]],["name/37-7",[]],["text/37-7",[]],["component/37-7",[]],["title/37-8",[5,18.651,1226,35.409,1298,35.647]],["name/37-8",[]],["text/37-8",[]],["component/37-8",[]],["title/37-9",[5,18.651,1071,27.113,1298,35.647]],["name/37-9",[]],["text/37-9",[]],["component/37-9",[]],["title/37-10",[68,34.614,225,29.893]],["name/37-10",[]],["text/37-10",[]],["component/37-10",[]],["title/37-11",[2,16.032,61,18.237,225,21.012,609,29.048]],["name/37-11",[]],["text/37-11",[]],["component/37-11",[]],["title/37-12",[2,13.958,61,15.878,225,18.295,609,25.291,1095,24.214]],["name/37-12",[]],["text/37-12",[]],["component/37-12",[]],["title/37-13",[68,34.614,80,25.176]],["name/37-13",[]],["text/37-13",[]],["component/37-13",[]],["title/37-14",[46,15.279,80,20.784,1701,42.977]],["name/37-14",[]],["text/37-14",[]],["component/37-14",[]],["title/37-15",[68,24.33,80,17.696,168,22.344,386,19.096]],["name/37-15",[]],["text/37-15",[]],["component/37-15",[]],["title/37-16",[37,34.985,80,25.176]],["name/37-16",[]],["text/37-16",[]],["component/37-16",[]],["title/37-17",[80,31.922]],["name/37-17",[]],["text/37-17",[]],["component/37-17",[]],["title/37-18",[80,25.176,1670,45.108]],["name/37-18",[]],["text/37-18",[]],["component/37-18",[]],["title/37",[8,10.45,67,24.68,1450,31.707,1702,34.429]],["name/37",[385,2.02]],["text/37",[0,0.536,2,3.047,3,1.33,4,0.813,5,2.895,8,1.095,14,2.201,15,0.57,22,1.215,24,1.129,34,0.387,35,0.478,37,2.578,38,0.319,41,0.422,42,1.921,45,0.334,46,1.805,49,0.952,57,0.414,59,0.619,60,0.503,61,1.506,63,0.958,64,0.809,66,0.45,67,2.326,68,3.544,71,0.383,80,3.297,85,0.99,93,0.914,124,1.824,125,0.725,128,0.457,131,3.879,134,1.843,139,3.366,143,0.366,159,1.006,162,1.034,163,1.112,168,2.106,172,0.813,199,0.884,200,0.496,218,0.428,219,2.261,225,2.59,232,0.64,241,2.017,246,0.742,248,0.785,254,0.562,273,0.601,318,0.246,320,2.262,324,0.347,326,0.543,328,0.657,329,0.478,347,0.624,386,1.8,387,3.553,389,1.076,390,0.951,396,0.374,423,0.873,425,0.573,447,0.965,482,0.476,498,0.725,515,2.217,517,1.473,520,0.636,535,1.689,542,3.674,549,0.494,551,0.689,562,0.65,565,0.588,568,0.503,571,1.11,609,1.605,625,0.636,626,1.85,633,1.149,638,1.136,639,0.364,653,0.742,655,3.658,660,4.034,676,0.386,689,0.894,734,0.527,762,0.751,808,1.087,887,0.601,960,0.968,967,0.483,969,1.4,988,2.989,1051,4.212,1071,1.608,1085,0.545,1095,0.579,1118,2.144,1168,3.571,1187,3.184,1226,1.666,1298,3.182,1310,0.532,1337,0.812,1450,2.989,1467,0.955,1514,0.717,1580,0.89,1585,0.733,1635,0.717,1644,2.117,1661,0.812,1670,1.752,1677,1.499,1701,0.762,1702,1.346,1703,2.02,1704,1.076,1705,0.89,1706,1.076,1707,1.076,1708,1.076,1709,1.076,1710,1.076,1711,0.89,1712,0.676,1713,0.89,1714,1.076,1715,1.076,1716,0.89,1717,1.076,1718,4.363,1719,7.876,1720,6.685,1721,1.076,1722,1.076,1723,1.076,1724,1.076,1725,1.076,1726,1.076,1727,1.076,1728,1.076,1729,1.076,1730,1.076,1731,1.076,1732,1.076,1733,1.076,1734,1.076,1735,1.076,1736,1.076,1737,1.076,1738,1.076,1739,2.02,1740,2.856,1741,1.076,1742,2.02,1743,2.02,1744,2.02,1745,1.076,1746,1.346,1747,1.076,1748,1.076,1749,1.076,1750,1.076,1751,1.076,1752,1.076,1753,1.076,1754,1.076,1755,1.076,1756,1.076,1757,1.076,1758,1.451,1759,1.588,1760,1.883,1761,1.671,1762,2.02,1763,1.725,1764,2.856,1765,3.066,1766,1.003,1767,1.076,1768,1.076,1769,1.076,1770,1.076,1771,1.076,1772,1.076,1773,2.856,1774,1.076,1775,2.02,1776,1.076,1777,5.418,1778,5.418,1779,5.418,1780,2.856,1781,1.076,1782,1.076,1783,1.076,1784,1.076,1785,1.076,1786,2.02,1787,1.076,1788,1.076,1789,1.076,1790,1.076,1791,1.076,1792,1.076,1793,1.076,1794,1.076,1795,1.076,1796,1.076,1797,3.601,1798,1.076,1799,1.076,1800,1.076,1801,1.076,1802,1.076,1803,1.076,1804,1.076,1805,1.076,1806,1.076,1807,1.076,1808,1.076,1809,1.076,1810,1.076,1811,1.076,1812,1.076,1813,1.076,1814,1.076,1815,1.076,1816,1.076,1817,1.076,1818,1.076,1819,1.076,1820,1.076,1821,1.076,1822,1.076,1823,1.076,1824,1.076,1825,1.076,1826,1.076,1827,1.076,1828,1.076,1829,1.076,1830,1.076,1831,1.076,1832,1.076,1833,1.076,1834,1.076,1835,1.076,1836,1.076]],["component/37",[220,0.615]],["title/38-1",[8,12.273,42,19.714,60,10.698]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38-2",[87,37.238,88,28.475,180,28.778]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["title/38-3",[139,31.349]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["title/38-4",[139,24.724,568,34.374]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["title/38-5",[962,39.17,1032,49.524]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["title/38-6",[551,20.708,716,36.672,962,32.336]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["title/38-7",[551,20.708,589,33.002,962,32.336]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["title/38-8",[551,20.708,1837,41.863,1838,42.977]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["title/38",[8,14.867,42,23.88]],["name/38",[385,2.02]],["text/38",[0,0.492,3,1.882,4,1.606,5,1.226,8,1.951,9,0.597,10,1.878,11,0.429,14,1.379,16,1.244,22,1.786,24,0.887,34,1.436,41,0.732,42,3.192,45,1.58,46,2.1,49,1.118,52,0.8,57,1.02,60,0.983,61,2.124,62,0.315,63,0.885,64,0.396,65,0.461,77,0.671,78,0.457,80,1.564,82,0.678,87,1.625,88,0.875,103,0.836,106,0.823,110,0.762,115,3.184,128,3.044,131,2.831,139,0.627,159,0.929,169,0.802,172,0.751,174,0.984,199,3.649,200,0.456,203,0.49,204,0.488,216,0.653,218,0.393,219,2.456,232,0.589,248,0.725,250,0.602,254,2.387,262,1.195,267,1.786,268,1.408,270,1.666,273,2.552,274,0.477,308,0.918,318,0.426,320,2.365,337,0.524,364,2.407,365,0.429,367,1.426,386,0.979,389,1.919,392,0.929,397,0.659,399,0.962,414,2.256,423,1.145,425,3.627,426,0.503,464,0.7,479,0.476,480,1.535,481,1.025,482,1.766,498,1.257,499,0.836,501,1.354,504,2.192,505,2.133,512,4.026,523,0.627,535,2.359,540,0.417,542,0.43,551,1.558,553,0.949,568,2.135,569,0.746,589,1.44,591,0.622,626,1.553,638,0.742,676,0.356,716,1.601,717,0.777,730,0.814,734,0.915,748,0.682,764,1.932,766,1.729,771,0.844,809,1.34,812,0.408,829,1.184,884,0.633,929,1.217,931,0.54,962,0.994,967,0.444,969,2.498,993,0.721,1103,1.715,1115,1.361,1144,0.733,1187,1.489,1231,0.522,1285,0.945,1288,0.622,1293,1.472,1320,0.733,1321,0.746,1322,0.746,1323,0.721,1324,0.746,1325,0.746,1326,0.746,1327,0.746,1329,0.761,1334,2.01,1340,1.625,1349,4.005,1350,3.515,1351,3.591,1352,3.331,1353,2.469,1355,0.844,1357,3.678,1358,0.844,1361,0.921,1362,1.739,1363,4.711,1364,6.273,1365,6.273,1366,1.544,1367,2.976,1368,6.273,1369,6.273,1370,1.656,1371,1.656,1372,1.502,1373,5.32,1374,5.32,1375,1.593,1376,1.656,1377,1.739,1378,1.739,1379,1.257,1382,1.739,1490,1.752,1549,1.361,1579,0.7,1585,1.805,1599,0.911,1658,0.877,1673,1.361,1686,1.502,1694,0.691,1712,1.666,1713,2.192,1758,1.34,1759,1.467,1761,0.818,1763,1.593,1839,0.989,1840,0.989,1841,0.989,1842,2.7,1843,2.351,1844,1.866,1845,1.502,1846,1.502,1847,1.866,1848,3.353,1849,3.076,1850,1.739,1851,0.71,1852,0.989,1853,0.989,1854,0.633,1855,0.505,1856,0.733,1857,0.652,1858,0.818,1859,10.158,1860,7.16,1861,1.866,1862,0.71,1863,7.487,1864,1.866,1865,0.989,1866,2.976,1867,1.656,1868,0.989,1869,0.921,1870,0.989,1871,0.921,1872,0.989]],["component/38",[220,0.615]],["title/39-1",[676,17.814]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[60,16.431]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39",[8,14.867,51,38.606]],["name/39",[385,2.02]],["text/39",[0,2.578,3,4.476,4,3.845,8,1.046,10,2.436,11,2.243,14,2.725,22,1.291,33,4.333,51,6.614,52,3.38,60,1.39,62,3.041,64,2.073,66,2.164,71,1.844,77,1.862,79,2.231,82,3.472,86,5.557,92,1.39,110,2.114,142,1.851,168,3.409,177,2.743,189,1.953,199,3.448,225,2.104,241,2.445,251,2.679,321,2.757,347,1.597,386,1.912,391,2.578,395,3.174,396,1.798,414,4.458,424,2.557,551,3.259,612,2.98,622,2.875,626,2.033,676,1.507,766,3.376,812,2.136,1051,3.039,1065,4.068,1138,4.046,1187,2.297,1340,6.553,1350,3.982,1391,2.859,1579,3.664,1599,5.615,1682,6.348,1758,3.717,1842,4.166,1873,4.823]],["component/39",[220,0.615]],["title/40-1",[676,17.814]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["title/40-2",[45,22.808,80,25.176]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["title/40-3",[94,41.087,1677,38.606]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["title/40-4",[60,16.431]],["name/40-4",[]],["text/40-4",[]],["component/40-4",[]],["title/40",[67,28.986,68,28.575,1874,46.709]],["name/40",[67,0.785,68,0.774,1875,1.532]],["text/40",[2,1.189,5,0.666,10,2.426,11,0.94,14,1.325,16,1.912,22,1.553,23,1.143,24,1.013,25,0.921,26,1.093,34,0.78,37,4.305,38,0.643,42,2.022,45,3.693,46,1.567,47,1.08,49,1.278,57,1.476,60,0.676,61,1.353,62,1.22,64,1.536,66,2.155,67,5.234,68,5.987,74,1.756,77,1.379,80,3.845,82,0.788,94,4.748,95,0.968,96,0.873,105,1.166,131,3.427,134,3.604,139,0.729,159,3.101,160,0.993,163,1.493,168,0.937,169,0.932,172,2.074,177,2.032,179,1.3,182,1.33,194,1.264,196,1.149,219,1.624,228,1.425,262,1.366,285,1.138,318,0.495,320,1.006,337,1.149,347,1.591,386,1.416,392,0.76,396,0.753,404,1.375,408,1.089,416,1.127,438,1.3,482,0.959,515,3.578,545,2.305,555,0.942,557,1.178,561,1.248,568,3.973,626,2.191,638,1.524,655,1.34,660,3.884,674,1.3,676,0.414,708,0.919,722,0.977,748,1.495,815,1.414,931,1.185,960,1.039,1018,2.316,1073,2.88,1095,2.063,1103,1.648,1168,3.397,1244,1.414,1258,1.668,1290,1.414,1308,1.143,1391,1.198,1579,1.535,1659,1.211,1661,1.636,1675,1.363,1677,3.735,1686,3.086,1719,2.02,1720,3.573,1758,1.557,1759,1.704,1765,1.557,1874,6.963,1875,6.63,1876,1.923,1877,1.668,1878,3.397,1879,2.142,1880,2.168,1881,1.636,1882,1.636,1883,1.923,1884,2.168,1885,2.168,1886,3.833,1887,5.153,1888,3.833,1889,2.168,1890,2.168,1891,2.168,1892,2.168,1893,3.573,1894,2.168,1895,2.168,1896,2.168,1897,2.168,1898,1.668,1899,2.02,1900,2.02,1901,1.581,1902,2.168,1903,1.46]],["component/40",[220,0.615]],["title/41-1",[8,10.45,66,21.617,389,19.464,909,29.762]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[22,18.346,216,25.746]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[8,8.056,10,18.758,11,17.276,66,16.666,389,15.006,568,18.628]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[8,9.098,14,15.551,24,11.896,66,18.821,389,16.947]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41-5",[14,25.409,1006,50.71]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["title/41-6",[57,19.898,66,21.617,172,20.805,969,25.339]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["title/41-7",[8,10.45,66,21.617,389,19.464,444,31.462]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["title/41-8",[8,12.273,66,25.389,909,34.955]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["title/41-9",[940,57.803,1121,41.82]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["title/41-10",[10,24.33,11,22.408,66,21.617,1677,27.136]],["name/41-10",[]],["text/41-10",[]],["component/41-10",[]],["title/41-11",[10,24.33,11,22.408,46,13.009,1677,27.136]],["name/41-11",[]],["text/41-11",[]],["component/41-11",[]],["title/41-12",[10,24.33,11,22.408,45,16.032,1677,27.136]],["name/41-12",[]],["text/41-12",[]],["component/41-12",[]],["title/41-13",[8,10.45,66,21.617,142,18.487,1591,34.429]],["name/41-13",[]],["text/41-13",[]],["component/41-13",[]],["title/41-14",[8,10.45,66,21.617,67,24.68,68,24.33]],["name/41-14",[]],["text/41-14",[]],["component/41-14",[]],["title/41",[8,14.867,66,30.754]],["name/41",[385,2.02]],["text/41",[2,0.451,3,1.895,4,1.96,5,0.446,8,2.215,10,1.892,11,0.432,14,2.093,16,0.191,17,0.313,20,0.239,21,2.282,22,1.4,23,0.766,24,1.287,25,0.219,27,0.22,32,0.232,33,0.283,34,0.359,35,0.228,37,2.317,38,0.153,39,0.248,40,0.462,41,2.201,42,2.282,45,2.715,46,2.142,49,0.627,52,0.22,57,1.974,59,0.574,60,0.811,61,1.623,62,1.18,63,0.473,64,0.4,65,0.24,66,4.475,67,0.899,68,1.892,69,0.326,71,0.183,73,0.336,74,0.236,77,1.446,78,0.871,80,1.478,82,0.684,85,0.922,86,0.519,92,0.138,94,3.004,99,0.401,106,0.83,115,1.381,121,0.3,128,0.8,130,0.269,131,3.346,134,0.549,135,0.712,138,0.209,139,1.808,142,0.357,143,0.494,162,0.361,163,0.2,169,0.221,171,0.482,172,1.075,179,0.308,180,0.244,200,0.868,201,0.281,202,0.259,203,0.255,204,0.493,213,0.551,216,0.935,217,0.294,219,0.721,220,0.107,225,0.406,233,0.919,239,0.491,241,0.471,247,0.476,254,0.983,262,0.355,264,0.294,267,1.423,268,0.388,270,1.679,271,0.645,273,0.812,283,0.275,286,0.287,298,0.439,299,0.696,300,0.26,304,0.369,310,0.185,318,0.693,319,0.554,320,1.866,321,2.299,325,3.938,337,0.529,338,0.554,342,0.336,347,0.448,348,0.574,364,0.471,367,0.277,369,1.048,378,0.269,379,0.475,386,0.369,389,2.711,390,0.242,393,0.3,396,0.179,397,0.664,398,0.861,399,1.377,402,0.336,414,0.564,423,0.628,424,0.718,425,0.274,426,0.739,436,0.551,437,0.311,444,1.145,452,0.321,464,1.619,480,0.578,481,0.283,482,0.833,486,1.557,493,0.359,494,0.278,499,0.23,501,0.263,506,4.322,507,4.77,519,0.259,525,0.256,530,0.355,535,0.304,542,0.632,545,0.19,548,1.351,549,0.459,553,0.262,554,0.283,555,0.434,556,0.266,568,0.24,569,0.753,589,0.542,591,0.323,622,0.554,625,0.304,626,1.447,633,0.292,638,0.397,645,0.259,655,0.617,660,0.254,666,0.439,676,0.191,677,0.778,680,0.439,688,1.24,689,0.441,705,0.174,715,0.35,721,0.384,722,0.45,734,2.388,744,0.557,748,0.688,756,0.414,762,0.697,764,1.668,766,2.816,774,2.055,779,0.847,780,0.318,786,0.244,798,0.463,808,0.277,809,0.369,866,1.607,868,0.664,884,0.329,885,0.381,893,0.706,896,0.885,900,0.93,909,1.084,910,0.534,919,0.657,940,2.099,962,0.774,963,0.425,965,0.226,967,0.653,969,0.712,993,0.727,1000,1.293,1001,1.468,1004,0.645,1006,0.355,1010,1.154,1023,4.159,1035,0.369,1082,0.289,1097,0.375,1132,0.381,1134,0.369,1155,0.364,1174,0.339,1176,1.67,1183,0.3,1187,0.835,1195,0.664,1248,0.346,1285,0.953,1293,0.286,1301,0.332,1305,0.315,1308,0.271,1314,0.381,1316,1.67,1320,0.74,1321,0.753,1322,0.753,1323,1.668,1324,0.388,1325,0.388,1326,0.753,1327,0.753,1329,0.768,1334,2.757,1344,0.885,1350,1.448,1354,0.396,1359,0.439,1363,3.656,1364,2.443,1365,2.15,1366,0.425,1368,2.443,1369,2.443,1370,0.456,1373,1.557,1374,1.557,1379,0.978,1396,1.043,1397,1.67,1399,1.354,1400,2.591,1402,0.885,1403,0.885,1404,1.015,1405,0.456,1406,0.554,1407,0.456,1408,0.456,1409,0.369,1490,0.269,1507,0.256,1541,0.534,1548,0.404,1549,3.921,1550,0.439,1561,3.83,1585,0.35,1608,0.425,1647,0.388,1660,0.381,1671,0.318,1675,0.323,1677,0.988,1694,0.697,1702,0.343,1712,0.323,1713,0.425,1718,0.298,1758,0.716,1842,1.169,1843,1.67,1849,0.672,1850,0.93,1857,0.339,1862,1.043,1874,0.396,1904,2.51,1905,4.551,1906,1.882,1907,1.452,1908,0.514,1909,0.318,1910,0.514,1911,0.885,1912,1.452,1913,0.439,1914,0.514,1915,2.287,1916,3.166,1917,0.514,1918,0.439,1919,2.828,1920,0.479,1921,0.514,1922,0.997,1923,0.997,1924,1.452,1925,0.514,1926,0.439,1927,0.93,1928,0.326,1929,0.784,1930,0.514,1931,0.514,1932,0.364,1933,0.948,1934,0.514,1935,1.452,1936,0.514,1937,0.997,1938,0.381,1939,0.479,1940,0.514,1941,0.997,1942,1.882,1943,0.514,1944,0.514,1945,1.882,1946,0.439,1947,0.997,1948,0.514,1949,1.452,1950,1.452,1951,0.456,1952,0.514,1953,0.514,1954,0.514,1955,0.997,1956,0.514,1957,0.514,1958,0.514,1959,0.514,1960,0.514,1961,0.456,1962,0.997,1963,0.997,1964,0.997,1965,0.514,1966,0.514,1967,0.514,1968,0.514,1969,1.607,1970,0.514,1971,0.318,1972,0.514,1973,0.514,1974,0.514,1975,0.514,1976,0.514,1977,0.514,1978,0.514,1979,0.514,1980,0.514,1981,0.514,1982,0.514,1983,0.456,1984,0.514,1985,0.514,1986,0.514,1987,0.514,1988,0.514,1989,0.479,1990,0.852,1991,1.354,1992,0.359,1993,0.997,1994,0.997,1995,0.514,1996,0.997,1997,0.997,1998,0.997,1999,0.997,2000,0.997,2001,9.687,2002,0.514,2003,0.514,2004,0.514,2005,0.514,2006,0.514,2007,3.379,2008,0.514,2009,0.514,2010,0.514,2011,0.514,2012,0.514,2013,0.997,2014,0.997,2015,0.997,2016,0.997,2017,0.997,2018,0.997,2019,0.514,2020,0.514,2021,3.034,2022,4.316,2023,0.514,2024,1.452,2025,0.514,2026,0.997,2027,0.997,2028,4.599,2029,2.132,2030,0.514,2031,0.514,2032,0.479,2033,0.302,2034,0.425,2035,0.306,2036,0.803]],["component/41",[220,0.615]],["title/42-1",[2037,86.901]],["name/42-1",[]],["text/42-1",[]],["component/42-1",[]],["title/42-2",[2038,86.901]],["name/42-2",[]],["text/42-2",[]],["component/42-2",[]],["title/42-3",[2039,86.901]],["name/42-3",[]],["text/42-3",[]],["component/42-3",[]],["title/42-4",[2040,86.901]],["name/42-4",[]],["text/42-4",[]],["component/42-4",[]],["title/42-5",[2041,86.901]],["name/42-5",[]],["text/42-5",[]],["component/42-5",[]],["title/42-6",[94,52.097]],["name/42-6",[]],["text/42-6",[]],["component/42-6",[]],["title/42-7",[2042,86.901]],["name/42-7",[]],["text/42-7",[]],["component/42-7",[]],["title/42-8",[2043,86.901]],["name/42-8",[]],["text/42-8",[]],["component/42-8",[]],["title/42-9",[2044,86.901]],["name/42-9",[]],["text/42-9",[]],["component/42-9",[]],["title/42-10",[80,25.176,2045,54.515]],["name/42-10",[]],["text/42-10",[]],["component/42-10",[]],["title/42-11",[46,18.508,2046,56.58]],["name/42-11",[]],["text/42-11",[]],["component/42-11",[]],["title/42-12",[45,22.808,2046,56.58]],["name/42-12",[]],["text/42-12",[]],["component/42-12",[]],["title/42-13",[46,18.508,300,37.244]],["name/42-13",[]],["text/42-13",[]],["component/42-13",[]],["title/42-14",[45,22.808,300,37.244]],["name/42-14",[]],["text/42-14",[]],["component/42-14",[]],["title/42-15",[92,19.751,1535,62.794]],["name/42-15",[]],["text/42-15",[]],["component/42-15",[]],["title/42-16",[46,15.279,80,20.784,389,22.86]],["name/42-16",[]],["text/42-16",[]],["component/42-16",[]],["title/42-17",[46,18.508,389,27.691]],["name/42-17",[]],["text/42-17",[]],["component/42-17",[]],["title/42-18",[45,22.808,389,27.691]],["name/42-18",[]],["text/42-18",[]],["component/42-18",[]],["title/42-19",[46,18.508,909,42.342]],["name/42-19",[]],["text/42-19",[]],["component/42-19",[]],["title/42-20",[45,22.808,909,42.342]],["name/42-20",[]],["text/42-20",[]],["component/42-20",[]],["title/42",[8,9.098,66,18.821,67,21.488,68,21.184,368,30.661]],["name/42",[1702,1.543,2033,1.36]],["text/42",[2,1.367,8,0.514,11,0.774,12,0.942,14,0.326,22,1.346,23,4.669,24,0.852,27,0.403,34,0.34,37,4.885,40,0.3,41,0.7,45,3.349,46,3.176,49,1.469,59,1.028,60,0.568,62,0.568,66,2.44,67,0.451,68,0.444,77,0.34,80,2.598,82,1.602,84,1.472,92,1.032,94,5.063,131,2.278,135,0.875,139,3.588,143,0.321,159,1.606,163,0.367,171,0.456,182,0.579,200,2.032,212,0.5,216,1.89,219,0.297,262,3.846,300,3.159,310,0.916,320,0.438,347,0.291,355,0.574,361,0.449,368,0.643,369,0.432,381,3.337,383,3.356,386,1.191,389,2.621,423,0.408,425,0.503,515,1.749,529,1.203,535,1.056,549,0.434,551,0.322,568,4.329,626,3.208,639,1.299,646,1.087,676,1.731,705,0.318,739,0.599,741,2.588,779,3.148,780,3.857,786,0.447,812,0.39,853,0.688,855,2.125,858,0.76,861,0.806,891,0.678,908,0.57,909,3.592,959,1.585,969,1.884,978,0.688,1018,6.202,1032,0.636,1049,0.622,1060,0.622,1073,0.998,1074,0.726,1259,0.547,1270,1.01,1285,0.478,1297,7.854,1400,1.525,1465,2.39,1532,3.094,1535,3.282,1599,1.574,1635,0.629,1677,0.496,1765,2.315,1881,1.348,1898,4.153,1899,1.664,1900,1.664,2037,0.88,2038,0.88,2039,0.88,2040,0.88,2041,0.88,2042,0.88,2043,0.88,2044,0.88,2045,2.849,2046,1.374,2047,0.944,2048,2.369,2049,3.41,2050,0.944,2051,0.944,2052,0.944,2053,0.944,2054,0.944,2055,0.944,2056,0.944,2057,0.944,2058,3.224,2059,3.843,2060,1.786,2061,2.046,2062,1.799,2063,0.944,2064,0.944,2065,0.944,2066,0.944,2067,0.944,2068,0.944,2069,0.944,2070,0.944,2071,0.944,2072,0.944,2073,0.944,2074,0.944,2075,0.944,2076,0.944,2077,0.944,2078,0.944,2079,0.944,2080,0.944,2081,0.944,2082,0.944,2083,1.374,2084,0.944,2085,2.541,2086,0.944,2087,0.944,2088,0.944,2089,0.944,2090,0.944,2091,0.944,2092,0.944,2093,1.786,2094,1.786,2095,0.944,2096,0.944,2097,2.541,2098,0.837,2099,0.944,2100,0.944,2101,0.944,2102,0.944,2103,0.944,2104,0.944,2105,0.944,2106,0.944,2107,0.944,2108,0.944,2109,0.944,2110,0.944,2111,0.944,2112,0.944,2113,0.944,2114,0.944,2115,0.944,2116,0.944,2117,0.944,2118,0.944,2119,0.944,2120,0.944,2121,0.944,2122,0.944,2123,0.944,2124,0.944,2125,0.944,2126,0.944,2127,0.944,2128,0.944,2129,0.944,2130,0.944,2131,0.944,2132,0.944,2133,0.944,2134,0.944,2135,0.944,2136,0.944,2137,0.944,2138,0.944,2139,0.944,2140,0.944,2141,0.944,2142,0.944,2143,0.944,2144,0.944,2145,0.944,2146,0.944,2147,0.944,2148,0.944,2149,0.944,2150,0.944,2151,0.944,2152,0.944,2153,0.944,2154,0.944,2155,0.944,2156,0.944,2157,0.944,2158,0.944,2159,0.944,2160,0.944,2161,1.585,2162,0.944,2163,0.944,2164,0.944,2165,0.944,2166,2.541,2167,2.541,2168,2.541,2169,2.541,2170,2.541,2171,0.944,2172,1.786,2173,0.944,2174,0.944,2175,0.944,2176,0.944,2177,0.944,2178,0.944,2179,0.944,2180,0.944,2181,0.944]],["component/42",[220,0.615]],["title/43-1",[1084,63.523]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[5,18.651,67,28.986,68,28.575]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[2182,73.291]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[60,16.431]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43-5",[8,12.273,14,20.977,66,25.389]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["title/43-6",[22,18.346,68,34.614]],["name/43-6",[]],["text/43-6",[]],["component/43-6",[]],["title/43-7",[22,8.92,93,16.17,764,26.075,1018,21.599,1106,25.679,2183,30.532,2184,30.532]],["name/43-7",[]],["text/43-7",[]],["component/43-7",[]],["title/43-8",[568,34.374,1018,44.422]],["name/43-8",[]],["text/43-8",[]],["component/43-8",[]],["title/43-9",[1168,61.453]],["name/43-9",[]],["text/43-9",[]],["component/43-9",[]],["title/43-10",[139,24.724,1018,44.422]],["name/43-10",[]],["text/43-10",[]],["component/43-10",[]],["title/43",[67,35.112,68,34.614]],["name/43",[67,1.106,68,1.09]],["text/43",[2,1.515,5,1.962,8,1.712,14,2.207,16,1.063,22,0.715,23,1.512,24,0.758,25,2.077,26,2.464,38,1.449,41,1.124,42,0.931,46,2.32,49,1.628,60,1.126,61,1.724,64,1.148,66,4.686,67,4.699,68,5.434,80,2.899,82,1.042,84,1.309,92,1.715,94,2.73,96,3.408,106,2.818,134,3.722,135,1.405,138,1.162,139,0.964,144,1.261,159,2.434,163,1.902,172,2.571,183,1.383,189,1.844,198,1.284,219,3.102,239,2.405,241,1.354,267,1.527,270,1.802,274,2.359,285,1.505,316,1.694,317,0.734,318,0.655,320,1.331,338,1.592,345,3.188,347,2.329,386,1.059,392,1.005,396,2.219,408,1.439,417,1.148,436,2.7,515,4.718,519,1.445,523,1.818,551,2.179,568,3.527,623,2.796,626,2.789,633,2.779,635,2.371,674,1.719,676,0.934,708,1.215,761,1.852,803,3.687,812,1.183,837,1.534,960,3.061,1018,5.945,1103,2.1,1131,1.852,1168,4.21,1257,1.802,1303,2.307,1396,2.058,1661,2.163,1670,1.758,1718,1.661,1759,2.253,1765,6.62,1878,1.889,1903,4.301,1919,4.554,1992,2.002,2182,2.253,2185,2.447,2186,2.671,2187,2.866,2188,2.866,2189,2.866,2190,2.866,2191,2.543,2192,2.09,2193,2.866]],["component/43",[220,0.615]],["title/44-1",[962,49.665]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["title/44-2",[60,16.431]],["name/44-2",[]],["text/44-2",[]],["component/44-2",[]],["title/44-3",[139,31.349]],["name/44-3",[]],["text/44-3",[]],["component/44-3",[]],["title/44-4",[8,14.867,139,24.724]],["name/44-4",[]],["text/44-4",[]],["component/44-4",[]],["title/44-5",[8,12.273,66,25.389,139,20.411]],["name/44-5",[]],["text/44-5",[]],["component/44-5",[]],["title/44",[8,14.867,17,44.759]],["name/44",[8,0.468,17,1.41]],["text/44",[0,2.589,4,2.092,5,2.071,8,2.771,10,3.724,11,2.254,17,7.213,18,8.785,19,3.501,20,2.413,21,6.452,22,1.974,23,2.742,24,2.335,25,2.21,26,1.555,27,1.318,28,2.032,29,1.555,30,2.126,31,2.214,32,1.39,33,1.694,34,1.109,45,0.956,46,0.776,60,0.916,66,4.478,131,0.964,216,2.77,219,2.494,267,2.769,270,3.269,286,2.905,347,1.605,348,4.556,389,2.98,424,2.569,464,3.68,545,1.925,548,3.733,676,0.589,962,1.642,993,5.77,1320,5.866,1321,5.971,1322,5.971,1323,3.791,1324,3.923,1325,3.923,1326,5.971,1327,5.971,1342,7.375,1343,7.375,1344,7.021,1345,4.845,1346,4.845,1348,4.613,1354,4,2194,2.874,2195,5.198,2196,8.621,2197,4.845,2198,5.198]],["component/44",[220,0.615]],["title/45-1",[8,14.867,35,32.642]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[962,49.665]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45",[]],["name/45",[8,0.468,35,1.028]],["text/45",[4,3.735,8,2.893,35,5.279,36,6.249,37,4.414,39,4.48,42,3.013,206,5.524,227,5.214,239,4.566,248,3.604,267,4.942,268,7.002,269,7.47,270,5.834,389,3.494,502,7.676,505,7.47,568,4.337,655,5.737]],["component/45",[220,0.615]],["title/46-1",[962,49.665]],["name/46-1",[]],["text/46-1",[]],["component/46-1",[]],["title/46-2",[139,31.349]],["name/46-2",[]],["text/46-2",[]],["component/46-2",[]],["title/46",[8,14.867,247,35.112]],["name/46",[8,0.468,247,1.106]],["text/46",[0,0.915,2,1.71,3,0.679,4,1.331,5,1.016,8,1.433,10,0.865,11,0.796,14,1.558,22,0.825,23,2.379,24,3.429,40,0.585,42,0.596,52,1.417,57,0.707,60,0.583,61,1.591,62,0.585,63,2.613,64,0.736,82,0.668,87,1.127,92,0.493,99,2.213,103,1.481,112,0.702,131,3.747,134,1.706,142,1.972,155,2.836,160,0.841,162,3.327,163,0.715,189,0.693,213,1.015,219,1.738,225,2.241,247,5.644,248,0.714,267,0.978,270,1.155,313,1.038,315,0.943,347,0.567,365,0.796,379,0.874,386,0.679,391,0.915,392,0.644,398,0.692,399,0.947,414,2.549,420,3.349,429,0.938,464,1.3,537,4.072,540,1.901,549,0.844,555,0.799,626,0.474,638,0.73,705,1.86,725,1.198,730,0.801,749,1.02,762,1.283,764,2.411,766,1.198,837,0.983,892,1.3,893,1.3,962,2.402,971,1.386,1115,1.34,1118,1.969,1177,1.165,1191,1.479,1226,4.825,1231,0.969,1293,1.02,1340,2.028,1350,2.544,1352,1.34,1409,2.375,1414,5.46,1416,1.712,1417,1.712,1429,1.479,1430,1.568,1470,3.403,1490,0.96,1549,1.34,1573,4.087,1579,1.3,1686,2.662,1758,2.375,1842,1.479,1878,1.211,1904,2.736,2183,1.568,2199,1.413,2200,1.837,2201,2.495,2202,6.04,2203,1.63,2204,1.63,2205,1.63,2206,3.306,2207,9.926,2208,3.306,2209,5.138,2210,3.306,2211,3.306,2212,12.411,2213,9.578,2214,12.411,2215,1.837,2216,1.837,2217,1.837,2218,1.837,2219,4.509,2220,1.837,2221,1.837,2222,1.837,2223,1.837,2224,1.568,2225,1.837,2226,1.837,2227,1.837,2228,1.837,2229,3.306,2230,1.837,2231,1.837,2232,3.306,2233,9.19,2234,1.837,2235,1.712,2236,1.837,2237,1.187,2238,1.837]],["component/46",[220,0.615]],["title/47-1",[139,31.349]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47",[8,14.867,51,38.606]],["name/47",[8,0.468,51,1.216]],["text/47",[0,1.117,3,3.87,4,2.567,5,0.689,8,1.861,10,2.491,11,0.972,22,1.591,33,3.995,46,0.994,51,6.097,52,2.268,60,0.696,62,1.257,63,4.365,79,1.702,86,3.317,87,2.422,92,1.061,131,4.187,139,0.754,159,1.117,168,3.143,172,1.589,177,2.093,199,5.856,219,1.245,241,1.865,267,1.194,270,1.41,286,1.253,347,0.692,348,2.274,386,1.459,389,1.487,414,2.992,424,1.108,425,3.397,464,1.587,512,6.866,548,1.61,551,2.736,569,2.98,626,1.644,676,0.428,748,2.723,766,3.453,812,3.001,962,2.819,993,2.88,1051,2.319,1115,2.88,1138,3.731,1293,2.194,1320,2.927,1321,2.98,1322,2.98,1323,1.635,1324,1.692,1325,1.692,1326,2.98,1327,2.98,1329,3.038,1330,1.854,1331,1.854,1334,4.445,1340,4.46,1349,3.104,1350,6.171,1354,1.725,1385,3.68,1386,3.68,1387,2.758,1388,4.932,1389,6.849,1390,5.943,1391,4.431,1392,5.943,1393,3.68,1394,2.089,1395,4.932,1490,2.063,1579,2.796,1682,5.134,1758,2.836,1842,3.179,2239,2.241,2240,2.241,2241,2.241]],["component/47",[220,0.615]],["title/48-1",[0,16.15,8,10.963,35,14.393,70,35.038,248,12.595,1543,30.22]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48",[]],["name/48",[8,0.468,70,1.497]],["text/48",[0,5.975,8,2.863,16,2.437,24,1.736,35,2.915,52,2.815,70,8.789,71,2.34,72,3.806,73,4.285,74,3.009,75,4.061,76,3.998,88,3.081,139,2.208,219,2.964,233,3.207,248,2.551,267,3.498,270,4.129,291,2.881,320,3.049,348,5.415,389,4.137,391,3.271,392,2.304,396,2.282,411,4.956,412,3.938,464,4.65,482,2.907,542,2.855,568,4.396,916,2.872,967,2.952,1285,3.326,1418,9.749,1419,6.121,1420,5.828]],["component/48",[220,0.615]],["title/49-1",[0,36.628,8,14.867]],["name/49-1",[]],["text/49-1",[]],["component/49-1",[]],["title/49",[]],["name/49",[385,2.02]],["text/49",[0,5.502,8,3.069,9,5.007,16,3.075,17,5.045,35,4.904,39,4.001,42,2.691,51,4.351,64,3.32,66,3.466,70,5.355,232,4.934,247,3.957,283,4.437,313,4.685,343,5.355,357,6.672,368,5.647,377,5.647,383,4.459,417,3.32,967,3.725,1602,6.515]],["component/49",[220,0.615]],["title/50-1",[1084,63.523]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[42,12.941,46,10.03,49,13.28,67,19.028,68,18.758,444,24.256]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[67,21.488,68,21.184,369,20.617,375,24.338,734,22.062]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50-4",[46,13.009,200,23.837,375,27.953,1444,36.593]],["name/50-4",[]],["text/50-4",[]],["component/50-4",[]],["title/50-5",[14,15.551,38,13.347,204,22.237,375,24.338,2242,32.819]],["name/50-5",[]],["text/50-5",[]],["component/50-5",[]],["title/50-6",[4,13.051,14,11.204,144,14.263,198,14.526,213,17.914,347,10.009,365,14.056,375,17.535]],["name/50-6",[]],["text/50-6",[]],["component/50-6",[]],["title/50-7",[49,11.916,198,16.019,347,11.037,375,19.336,389,13.464,444,21.763,744,19.978]],["name/50-7",[]],["text/50-7",[]],["component/50-7",[]],["title/50-8",[67,21.488,68,21.184,375,24.338,660,22.237,1020,29.662]],["name/50-8",[]],["text/50-8",[]],["component/50-8",[]],["title/50-9",[2243,93.229]],["name/50-9",[]],["text/50-9",[]],["component/50-9",[]],["title/50",[8,10.45,67,24.68,68,24.33,248,20.079]],["name/50",[8,0.21,67,0.497,68,0.49,248,0.404,444,0.633]],["text/50",[0,0.845,2,0.75,3,2.222,4,3.073,5,1.594,8,1.9,11,0.387,14,1.941,21,0.443,22,1.401,24,0.971,25,0.38,34,0.321,35,0.397,37,1.151,38,1.784,39,1.485,40,1.788,41,0.665,42,0.999,45,0.954,46,2.111,47,1.205,48,1.205,49,3.296,52,0.383,57,0.931,60,0.426,61,1.296,62,0.979,64,0.679,65,0.79,66,3.193,67,4.309,68,4.337,69,0.567,73,0.583,74,0.409,80,1.618,82,0.325,84,1.928,88,1.135,91,0.435,92,0.826,93,0.404,94,0.499,96,0.974,99,0.359,112,1.614,115,1.501,118,0.609,122,1.075,130,0.467,131,2.387,133,0.424,134,1.787,139,2.146,141,0.465,142,1.314,143,0.576,144,0.393,150,0.953,153,0.544,154,0.577,159,1.205,160,0.409,162,0.323,163,1.84,165,0.917,167,0.616,168,1.046,169,0.384,171,0.431,172,0.36,179,0.536,180,0.804,183,1.04,189,0.64,190,0.609,191,0.349,196,0.899,198,1.646,199,0.391,203,1.2,213,0.937,219,1.331,224,1.155,227,0.953,228,0.332,233,0.436,242,2.321,246,0.328,248,2.614,250,0.544,258,2.027,262,1.504,264,0.97,275,0.474,277,0.567,278,0.642,281,1.048,285,0.469,291,1.061,296,0.624,308,0.44,309,0.572,310,0.322,314,1.155,317,0.229,320,1.123,332,0.609,338,0.496,341,0.908,343,0.577,345,0.583,347,1.134,348,0.976,352,0.609,359,0.652,364,1.143,365,1.593,366,0.491,367,0.481,368,0.609,369,1.108,371,1.048,375,1.664,378,0.467,379,0.425,381,3.208,386,0.33,387,2.68,389,1.779,392,0.313,396,0.31,398,0.911,402,0.583,410,0.609,412,1.017,414,0.958,417,0.679,418,0.633,422,0.687,423,0.386,424,0.441,429,0.866,430,0.855,432,0.774,437,1.024,444,5.371,454,0.609,465,0.609,467,0.616,497,0.602,499,0.4,501,0.866,515,0.772,542,0.737,545,0.896,549,2.582,551,0.578,560,0.458,568,1.718,589,0.922,594,0.687,595,0.486,604,0.602,615,1.184,625,1.002,626,1.735,627,0.793,633,1.376,638,1.223,651,0.289,660,3.324,674,0.536,676,0.171,680,1.448,684,0.642,689,0.395,703,0.445,705,0.301,712,0.833,721,0.344,722,0.764,724,0.532,730,0.739,756,0.719,803,0.674,808,0.481,838,0.567,859,0.583,864,1.806,890,1.794,916,1.345,922,1.365,928,0.595,950,1.794,958,1.142,960,0.813,965,0.393,967,1.897,969,1.508,988,1.04,1001,1.329,1006,0.616,1018,0.54,1035,0.642,1085,0.859,1103,0.384,1120,0.793,1151,0.478,1216,2.255,1226,0.521,1231,0.471,1253,0.763,1257,1.066,1259,0.518,1268,0.674,1272,0.589,1278,0.662,1293,0.496,1316,0.793,1319,0.793,1356,0.763,1406,0.942,1429,0.719,1430,0.763,1436,1.333,1438,0.624,1444,0.633,1449,0.739,1450,2.898,1470,0.674,1493,1.2,1500,1.535,1548,0.702,1549,1.236,1568,0.763,1569,0.793,1570,0.763,1571,0.763,1572,0.739,1573,4.459,1579,1.2,1591,2.447,1597,0.719,1601,1.365,1657,0.763,1661,0.674,1662,1.305,1674,0.642,1675,0.562,1676,0.652,1677,0.469,1701,0.633,1874,0.687,1877,1.305,1903,0.602,1909,1.048,1911,0.793,1920,0.833,1932,0.633,1938,0.662,1939,0.833,1971,0.552,2033,1.421,2045,0.662,2242,0.652,2244,0.662,2245,0.793,2246,0.739,2247,0.719,2248,1.549,2249,0.674,2250,0.833,2251,0.763,2252,0.893,2253,0.793,2254,0.793,2255,0.763,2256,0.687,2257,0.893,2258,0.763,2259,0.893,2260,0.833,2261,1.448,2262,0.719,2263,0.893,2264,0.702,2265,0.602,2266,0.739,2267,0.793,2268,0.652,2269,0.893,2270,2.422,2271,2.072,2272,1.403,2273,1.695,2274,0.893,2275,0.793,2276,0.763,2277,1.333,2278,0.702,2279,0.893,2280,0.833,2281,0.833,2282,0.793,2283,0.893,2284,0.833,2285,0.893,2286,0.833,2287,1.695,2288,0.893,2289,0.893,2290,0.833,2291,2.066,2292,0.833,2293,0.833,2294,0.833,2295,0.893,2296,0.793,2297,0.702,2298,0.893,2299,0.893,2300,0.833,2301,0.893,2302,0.589,2303,0.893,2304,0.833,2305,1.695,2306,1.695,2307,0.893,2308,0.833,2309,0.833,2310,0.893,2311,0.833,2312,0.893,2313,0.833,2314,0.893,2315,0.893,2316,0.893,2317,0.893,2318,0.893,2319,0.893,2320,0.893,2321,0.893,2322,0.893,2323,0.633,2324,0.893,2325,0.739,2326,0.893,2327,0.719,2328,0.702]],["component/50",[220,0.615]],["title/51-1",[412,55.912]],["name/51-1",[]],["text/51-1",[]],["component/51-1",[]],["title/51",[]],["name/51",[385,2.02]],["text/51",[8,2.754,14,3.073,22,2.218,42,2.888,45,2.758,46,2.238,49,2.963,55,5.988,67,4.246,68,4.186,79,3.833,113,5.088,114,5.257,122,5.64,130,4.646,248,5.486,383,4.784,412,5.332,444,5.412,581,5.088,1087,5.412,2329,6.842]],["component/51",[220,0.615]],["title/52-1",[113,42.078,114,43.476]],["name/52-1",[]],["text/52-1",[]],["component/52-1",[]],["title/52-2",[114,55.125]],["name/52-2",[]],["text/52-2",[]],["component/52-2",[]],["title/52-3",[113,53.352]],["name/52-3",[]],["text/52-3",[]],["component/52-3",[]],["title/52-4",[113,42.078,647,50.099]],["name/52-4",[]],["text/52-4",[]],["component/52-4",[]],["title/52",[]],["name/52",[113,1.325,114,1.37]],["text/52",[2,1.526,6,1.321,8,0.651,11,0.773,14,0.877,16,1.195,22,1.817,23,2.025,24,1.925,25,0.401,27,0.403,29,0.475,30,0.65,32,1.145,34,1.159,35,0.419,37,0.849,38,3.59,40,0.808,42,0.306,46,1.751,47,1.604,48,0.47,49,0.595,52,0.404,54,1.009,60,0.568,61,0.629,62,0.3,64,2.16,66,0.394,67,0.45,68,0.444,71,1.921,79,2.325,80,0.611,82,0.343,89,0.518,92,2.717,93,0.807,94,0.527,95,0.421,99,0.379,101,1.373,106,0.416,110,0.729,111,1.453,112,2.66,113,5.953,114,6.151,115,2.382,124,1.945,139,2.096,141,0.49,143,1.672,160,0.817,165,0.51,168,0.408,171,2.126,172,0.379,173,1.094,180,0.447,183,1.392,184,1.301,189,2.352,191,4.221,194,0.55,196,0.5,197,1.176,198,2.204,200,0.823,202,0.9,203,0.885,204,0.882,205,0.543,208,3.753,218,2.766,219,0.562,241,1.521,242,0.711,246,0.932,259,0.699,260,0.55,262,0.336,274,1.226,275,0.5,277,2.043,279,0.615,282,0.725,283,0.955,286,0.527,289,1.546,291,1.413,296,0.659,299,1.217,309,0.603,310,0.34,314,0.642,319,3.239,331,0.879,332,0.642,334,0.667,343,1.153,345,0.615,347,1.8,355,0.574,361,2.095,365,1.909,369,0.817,371,0.583,378,1.327,386,1.19,389,1.213,392,0.331,395,2.701,396,1.53,398,0.672,412,0.565,414,0.533,416,0.49,420,0.445,432,0.431,447,1.212,448,0.879,479,0.453,480,1.034,499,2.793,509,0.711,511,0.642,512,0.557,513,0.932,523,0.598,525,0.47,540,1.071,545,0.349,547,0.809,549,0.433,551,0.866,555,0.776,561,1.462,573,0.837,582,0.688,587,0.677,597,1.742,626,0.243,634,0.466,639,2.461,645,0.9,647,4.502,660,0.466,663,0.609,677,3.537,689,1.425,697,1.38,698,0.688,699,0.609,700,1.201,705,1.296,720,0.48,721,0.687,722,0.425,736,2.62,745,0.711,752,0.53,753,0.493,782,0.543,798,0.438,806,0.621,858,0.759,916,0.412,941,0.667,965,0.785,967,0.424,1010,1.094,1060,1.674,1071,0.421,1099,0.741,1131,0.609,1149,0.55,1150,0.603,1168,0.621,1183,1.041,1187,2.588,1232,0.805,1263,0.759,1272,2.123,1285,0.478,1298,0.554,1301,2.481,1306,0.659,1308,0.497,1313,0.65,1391,1.78,1425,0.635,1432,0.879,1438,0.659,1439,3.407,1440,5.398,1443,1.523,1461,1.048,1480,0.621,1486,0.521,1503,0.711,1507,1.265,1510,0.642,1521,0.65,1526,0.741,1536,1.436,1539,0.741,1584,1.055,1659,0.997,1676,0.688,1677,2.016,1702,1.188,1718,0.546,1918,0.805,2033,0.554,2062,0.667,2199,0.725,2246,0.78,2271,0.635,2330,3.854,2331,0.879,2332,0.759,2333,2.168,2334,0.943,2335,0.943,2336,0.943,2337,0.741,2338,1.346,2339,0.659,2340,0.659,2341,1.932,2342,0.837,2343,0.943,2344,0.879,2345,0.78,2346,0.688,2347,0.943,2348,0.55,2349,0.805,2350,0.965,2351,0.805,2352,0.943,2353,0.837,2354,0.65,2355,0.837,2356,0.659,2357,0.711,2358,0.78,2359,2.532,2360,0.879,2361,0.837,2362,0.837,2363,0.879,2364,0.879,2365,0.879,2366,0.642,2367,0.667,2368,0.78,2369,0.659,2370,0.497,2371,0.725,2372,1.784,2373,0.879,2374,0.943,2375,0.943,2376,0.943,2377,0.667,2378,0.943,2379,0.609,2380,0.741,2381,1.583,2382,0.943,2383,0.805,2384,0.837,2385,0.533,2386,0.78,2387,0.879]],["component/52",[220,0.615]],["title/53-1",[5,10.985,40,11.381,46,8.999,57,13.764,135,17.528,200,16.489,375,19.336]],["name/53-1",[]],["text/53-1",[]],["component/53-1",[]],["title/53-2",[40,10.32,46,13.648,57,12.481,92,8.709,204,16.021,375,17.535,398,12.21]],["name/53-2",[]],["text/53-2",[]],["component/53-2",[]],["title/53-3",[14,12.355,92,9.604,213,19.754,218,14.218,219,11.27,310,12.89,375,19.336]],["name/53-3",[]],["text/53-3",[]],["component/53-3",[]],["title/53-4",[42,12.941,46,10.03,57,15.34,375,21.551,392,13.979,744,22.266]],["name/53-4",[]],["text/53-4",[]],["component/53-4",[]],["title/53-5",[236,36.779,375,39.768]],["name/53-5",[]],["text/53-5",[]],["component/53-5",[]],["title/53",[46,18.508,57,28.307]],["name/53",[46,0.414,57,1.151]],["text/53",[2,0.482,3,1.791,4,0.625,5,1.735,8,1.282,14,3.046,22,2.199,24,1.037,38,1.881,39,0.75,40,2.542,41,0.609,42,1.834,45,0.881,46,3.525,48,0.774,49,0.518,50,0.793,51,0.815,56,1.013,57,5.204,60,1.226,62,0.494,64,0.622,71,1.012,78,0.719,79,0.669,80,2.382,82,1.032,88,0.728,92,2.894,96,0.625,103,1.272,106,0.685,108,0.953,110,1.981,112,2.425,115,1.603,117,0.878,131,1.516,134,1.074,135,1.392,139,2.133,142,2.488,143,0.528,144,0.683,156,2.228,159,0.774,162,0.562,163,2.198,171,0.75,172,0.625,183,0.804,189,0.586,191,0.607,198,0.696,199,1.242,201,1.552,202,1.432,216,1.697,217,0.889,218,4.005,219,2.517,228,1.056,236,0.777,238,1.853,241,0.734,246,0.57,247,1.356,248,2.193,250,0.945,258,1.024,283,0.831,308,1.931,310,1.024,313,0.878,316,0.918,338,1.578,343,1.003,347,1.211,354,0.931,364,0.734,369,0.711,379,0.739,383,0.836,386,2.343,389,1.069,392,2.225,396,0.54,398,2.126,417,1.137,420,1.341,423,0.671,425,0.827,426,0.79,436,0.858,437,0.938,479,0.747,480,0.9,482,1.257,493,1.085,521,2.851,525,0.774,527,0.694,530,1.071,532,1.77,547,0.705,549,0.714,551,0.969,622,1.578,626,2.171,638,0.618,639,0.525,663,1.003,708,0.658,720,1.444,721,2.174,722,1.28,730,0.677,749,2.18,853,1.133,910,1.52,916,0.679,931,0.849,956,0.836,965,0.683,967,1.276,1049,1.024,1088,1.013,1090,1.285,1125,0.889,1142,2.74,1168,1.024,1226,2.288,1231,0.819,1255,1.099,1259,2.273,1262,1.958,1269,1.172,1270,0.878,1271,1.115,1278,1.151,1288,0.976,1293,0.863,1295,1.085,1305,0.953,1334,0.683,1461,0.912,1467,1.378,1507,0.774,1521,1.071,1605,1.099,1659,2.192,1971,0.96,2182,1.221,2186,1.447,2265,1.912,2350,2.122,2367,1.099,2370,0.819,2388,1.378,2389,1.553,2390,1.447,2391,1.151,2392,1.378,2393,1.285,2394,1.378,2395,1.378,2396,1.447,2397,0.918,2398,1.553,2399,1.447,2400,1.058]],["component/53",[220,0.615]],["title/54-1",[5,10.985,40,11.381,45,11.09,57,13.764,135,17.528,200,16.489,375,19.336]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[40,10.32,45,10.057,46,8.161,57,12.481,92,8.709,204,16.021,375,17.535,398,12.21]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[14,12.355,92,9.604,213,19.754,218,14.218,219,11.27,310,12.89,375,19.336]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54-4",[42,12.941,45,12.36,57,15.34,375,21.551,392,13.979,744,22.266]],["name/54-4",[]],["text/54-4",[]],["component/54-4",[]],["title/54-5",[236,36.779,375,39.768]],["name/54-5",[]],["text/54-5",[]],["component/54-5",[]],["title/54",[45,22.808,57,28.307]],["name/54",[45,0.51,57,1.151]],["text/54",[0,0.8,2,0.498,3,1.838,4,0.646,5,1.528,8,1.169,12,0.847,14,2.962,22,1.909,24,1.066,38,1.715,39,0.775,40,2.261,41,0.629,42,1.878,43,1.19,45,3.949,46,2.843,48,0.8,49,0.535,50,0.82,51,0.843,52,0.688,53,0.949,57,5.145,60,1.252,62,0.511,64,0.643,71,1.043,78,0.743,79,0.692,80,2.935,82,1.064,92,2.873,96,0.646,103,1.807,106,1.292,108,0.985,110,1.648,112,2.481,115,2.363,117,0.908,121,0.936,126,0.839,130,0.839,131,1.555,134,0.607,135,1.435,139,1.945,142,2.541,143,0.546,144,0.706,156,2.659,159,0.8,162,0.581,163,2.252,171,0.775,172,0.646,183,0.829,195,0.936,198,0.719,199,0.702,201,1.6,216,1.742,217,0.919,218,4.062,219,2.565,228,1.088,238,1.91,241,0.758,246,0.589,247,0.767,248,1.137,250,0.977,258,1.058,278,1.153,283,0.859,304,1.153,308,1.985,310,1.055,313,0.908,337,0.851,338,1.626,343,1.891,347,1.245,354,0.963,360,1.069,369,0.736,379,0.764,383,0.864,386,2.625,389,0.605,392,2.276,396,0.558,398,2.178,417,1.172,420,1.383,423,0.694,426,0.817,436,1.617,437,0.97,479,0.772,480,0.93,482,1.295,493,1.121,521,2.916,525,0.8,527,0.717,530,1.107,532,1.001,547,0.728,549,0.738,551,0.998,561,0.924,622,1.626,626,2.211,638,0.638,639,0.543,663,1.037,697,0.873,720,1.489,721,2.227,722,0.724,749,2.241,853,1.171,910,1.567,931,0.877,956,0.864,965,0.706,967,0.722,1049,1.058,1090,1.328,1125,0.919,1142,2.818,1168,1.058,1226,2.353,1231,0.847,1259,2.338,1262,2.019,1269,1.212,1270,0.908,1271,1.153,1288,1.009,1293,0.892,1305,0.985,1334,0.706,1446,1.262,1461,0.943,1507,0.8,1521,1.107,1605,1.137,1659,2.254,1971,0.993,2182,1.262,2265,1.971,2350,2.69,2367,1.137,2370,0.847,2388,1.425,2390,1.496,2391,1.19,2393,1.328,2394,1.425,2395,1.425,2396,1.496,2397,0.949,2399,1.496,2400,1.094,2401,1.069,2402,1.605,2403,1.496,2404,1.496,2405,1.605,2406,1.605]],["component/54",[220,0.615]],["title/55-1",[27,13.859,80,11.101,131,10.137,262,11.551,639,18.331,965,14.263,2407,26.823]],["name/55-1",[]],["text/55-1",[]],["component/55-1",[]],["title/55-2",[45,18.829,46,15.279,649,34.318]],["name/55-2",[]],["text/55-2",[]],["component/55-2",[]],["title/55-3",[46,18.508,649,41.57]],["name/55-3",[]],["text/55-3",[]],["component/55-3",[]],["title/55-4",[46,13.009,80,17.696,262,18.414,649,29.22]],["name/55-4",[]],["text/55-4",[]],["component/55-4",[]],["title/55-5",[46,11.327,80,15.408,262,16.033,639,15.213,649,25.441]],["name/55-5",[]],["text/55-5",[]],["component/55-5",[]],["title/55-6",[24,10.534,46,10.03,80,13.643,262,14.197,626,10.276,649,22.527]],["name/55-6",[]],["text/55-6",[]],["component/55-6",[]],["title/55-7",[27,15.283,38,10.604,46,8.999,649,33.246,705,12.065,1527,25.313]],["name/55-7",[]],["text/55-7",[]],["component/55-7",[]],["title/55-8",[46,11.327,92,12.088,219,14.185,649,25.441,1308,23.74]],["name/55-8",[]],["text/55-8",[]],["component/55-8",[]],["title/55-9",[45,22.808,649,41.57]],["name/55-9",[]],["text/55-9",[]],["component/55-9",[]],["title/55-10",[45,16.032,80,17.696,262,18.414,649,29.22]],["name/55-10",[]],["text/55-10",[]],["component/55-10",[]],["title/55-11",[45,13.958,80,15.408,262,16.033,639,15.213,649,25.441]],["name/55-11",[]],["text/55-11",[]],["component/55-11",[]],["title/55-12",[24,10.534,45,12.36,80,13.643,262,14.197,626,10.276,649,22.527]],["name/55-12",[]],["text/55-12",[]],["component/55-12",[]],["title/55-13",[45,13.958,92,12.088,219,14.185,649,25.441,1308,23.74]],["name/55-13",[]],["text/55-13",[]],["component/55-13",[]],["title/55-14",[77,18.597,379,24.591,528,47.592]],["name/55-14",[]],["text/55-14",[]],["component/55-14",[]],["title/55-15",[198,32.944,2061,59.201]],["name/55-15",[]],["text/55-15",[]],["component/55-15",[]],["title/55",[8,12.273,248,23.582,1087,36.95]],["name/55",[8,0.332,248,0.639,1087,1.001]],["text/55",[0,0.337,2,1.045,3,1.245,6,0.676,8,1.132,11,2.681,14,1.314,16,0.251,20,0.871,22,1.145,24,1.112,25,0.287,27,3.577,34,1.368,37,0.618,38,1.128,39,0.327,40,0.597,42,2.405,45,3.294,46,3.074,47,0.337,49,0.433,57,3.287,60,0.741,61,0.662,62,1.21,64,0.965,77,2.225,79,0.56,80,3.032,82,0.876,84,0.593,87,0.797,90,1.443,92,2.248,94,0.726,95,0.58,96,0.755,99,0.968,105,0.699,110,0.276,112,0.922,115,2.741,124,0.658,126,1.519,128,0.552,130,0.353,131,2.018,133,0.616,134,1.099,139,0.631,143,2.517,162,0.245,163,0.506,172,0.272,180,0.616,183,1.076,189,0.708,190,0.885,191,0.734,198,0.303,199,0.296,200,0.599,201,1.317,208,3.188,216,0.455,219,0.213,227,0.73,233,0.33,238,1.224,239,0.333,240,0.544,241,1.138,247,0.323,248,1.309,251,1.969,262,3.099,264,0.744,273,0.378,274,1.403,275,0.358,276,0.501,282,0.52,283,0.696,304,0.486,310,0.469,318,0.551,319,0.722,320,1.765,332,0.461,337,0.994,343,0.84,347,0.401,348,0.748,355,0.412,361,0.618,362,0.403,365,0.293,369,0.31,376,0.52,378,1.259,379,0.892,386,0.25,389,1.269,392,0.456,395,0.415,396,1.321,398,0.255,401,0.349,409,0.848,412,0.406,417,0.965,425,0.36,426,0.344,427,1,436,0.718,437,1.133,450,1.994,479,0.325,480,1.087,482,0.575,499,0.582,511,0.461,513,0.679,515,0.308,528,1.756,540,0.285,549,1.108,551,2.11,554,0.372,555,0.565,563,0.578,568,1.359,591,0.425,622,1.042,626,0.75,631,0.455,634,0.334,639,3.494,649,3.793,651,0.941,653,7.26,669,0.544,676,0.248,677,0.362,697,1.832,700,0.455,702,0.682,705,0.633,710,0.466,722,0.846,744,0.378,749,0.376,752,0.73,753,0.679,800,4.528,812,0.995,826,0.441,830,0.768,849,0.429,875,3.146,887,0.378,897,0.455,909,0.389,916,0.82,958,0.455,965,1.06,1020,0.446,1071,0.58,1085,0.658,1087,6.571,1097,0.948,1103,0.806,1129,0.6,1131,0.437,1177,1.529,1188,1,1248,0.455,1259,0.392,1285,1.926,1294,0.885,1305,0.415,1306,0.472,1308,0.686,1334,0.572,1340,0.415,1363,2.676,1364,2.34,1365,2.34,1366,1.075,1368,2.34,1369,2.34,1373,0.559,1374,1.075,1379,1.263,1414,0.81,1479,1.602,1507,0.647,1526,1.474,1533,0.4,1534,0.578,1544,0.461,1670,0.415,1675,0.425,1746,0.45,1901,0.948,1992,0.472,2029,1.211,2338,0.51,2380,0.532,2385,0.735,2407,1.075,2408,0.466,2409,0.446,2410,0.466,2411,1.299,2412,0.676,2413,3.387,2414,0.493,2415,1.299,2416,9.42,2417,5.9,2418,1.876,2419,0.676,2420,1.876,2421,0.676,2422,1.299,2423,0.676,2424,1.299,2425,1.299,2426,7.184,2427,0.63,2428,4.945,2429,0.63,2430,0.676,2431,1.299,2432,0.676,2433,0.676,2434,0.676,2435,0.676,2436,1.11,2437,0.885,2438,1.075,2439,2.246,2440,2.246,2441,2.246,2442,0.682,2443,1.299,2444,1.299,2445,1.046,2446,0.981,2447,1.299,2448,1.299,2449,1.299,2450,2.246,2451,1.299,2452,1.299,2453,1.299,2454,1.299,2455,1.299,2456,1.299,2457,1.299,2458,1.211,2459,0.578,2460,0.6,2461,0.433,2462,0.479,2463,0.578,2464,0.63,2465,0.676]],["component/55",[220,0.615]],["title/56-1",[248,28.565,2329,56.58]],["name/56-1",[]],["text/56-1",[]],["component/56-1",[]],["title/56-2",[42,14.614,248,17.482,444,27.393,2278,35.375,2329,34.627]],["name/56-2",[]],["text/56-2",[]],["component/56-2",[]],["title/56-3",[8,8.056,248,24.954,916,17.427,1265,32.082,2329,30.661]],["name/56-3",[]],["text/56-3",[]],["component/56-3",[]],["title/56-4",[42,16.785,387,37.695,916,22.604,1265,41.613]],["name/56-4",[]],["text/56-4",[]],["component/56-4",[]],["title/56-5",[22,12.895,134,19.549,568,24.162,1265,41.613]],["name/56-5",[]],["text/56-5",[]],["component/56-5",[]],["title/56-6",[248,20.079,1218,39.771,1265,41.613,2329,39.771]],["name/56-6",[]],["text/56-6",[]],["component/56-6",[]],["title/56-7",[1858,77.133]],["name/56-7",[]],["text/56-7",[]],["component/56-7",[]],["title/56",[42,14.614,45,13.958,46,11.327,248,17.482,2329,34.627]],["name/56",[8,0.258,42,0.414,248,0.495,2329,0.98]],["text/56",[3,2.314,4,2.182,5,0.15,6,0.254,8,1.625,9,0.295,11,0.779,14,1.622,16,0.811,20,0.227,21,0.471,22,1.936,24,1.706,25,0.404,26,0.479,34,0.646,35,0.217,37,0.233,38,0.282,39,0.669,40,0.925,42,2.375,43,0.704,45,1.456,46,2.119,47,0.69,49,1.287,52,0.21,56,0.319,57,1.487,59,1.035,60,0.512,61,0.489,62,0.441,64,0.555,65,0.442,66,0.204,69,0.31,74,0.224,78,0.226,80,0.325,82,0.795,84,0.434,86,0.934,87,0.583,88,0.843,91,0.238,95,0.619,96,1.305,98,0.717,103,0.98,105,0.511,106,0.216,110,0.2,115,1.324,121,0.285,122,2.056,123,0.316,128,0.589,131,3.554,134,1.675,138,0.385,139,1.396,154,0.316,156,0.225,159,0.244,161,0.369,162,2.121,163,0.19,168,0.211,169,0.21,171,0.236,172,0.197,183,0.269,189,1.343,190,0.333,194,0.808,198,1.145,199,0.415,200,2.797,202,0.247,203,0.471,216,0.333,220,0.102,228,0.182,232,0.566,233,0.239,236,0.475,238,3.958,239,0.682,240,0.765,241,1.373,247,2.241,248,3.818,250,0.298,254,0.496,264,0.28,271,0.316,274,0.669,277,0.879,278,0.995,283,0.508,285,0.257,294,0.761,299,0.455,310,1.048,311,0.276,313,0.783,315,0.251,318,0.217,320,1.35,321,0.26,334,0.346,336,0.362,337,0.503,338,0.272,339,0.786,347,0.151,352,0.333,356,0.337,357,0.394,359,0.693,361,0.233,363,0.369,365,0.412,377,0.647,378,0.255,379,0.233,381,0.856,383,0.745,387,0.693,388,0.765,389,0.963,390,0.447,391,0.244,392,0.333,395,0.3,396,0.76,398,0.358,400,0.394,410,0.333,414,0.276,417,0.555,423,0.211,425,1.727,426,0.483,432,0.434,436,0.993,437,1.085,441,1.115,444,2.857,480,1.041,481,0.269,482,0.795,499,0.98,501,0.485,514,0.376,521,0.807,525,0.244,532,0.305,537,1.861,539,0.342,542,0.951,549,0.225,551,1.214,553,0.249,554,0.987,555,0.602,558,0.587,567,0.404,568,2.194,581,0.28,582,1.01,591,0.597,596,0.3,597,0.264,620,0.753,626,0.75,631,0.933,638,0.714,643,0.547,645,0.247,649,0.276,651,0.158,661,0.481,676,0.265,685,0.326,721,0.188,722,0.986,734,0.24,736,0.26,739,0.31,744,0.273,746,0.592,749,0.998,750,0.786,752,0.275,755,0.731,782,0.282,786,0.232,809,0.351,812,0.202,864,0.287,868,0.633,875,0.404,879,0.384,884,0.887,885,1.027,887,0.273,908,0.574,909,0.282,916,0.606,954,0.384,958,0.64,965,0.215,967,0.807,968,0.394,969,1.253,982,0.54,1000,0.537,1004,0.316,1010,0.3,1020,0.322,1035,0.351,1115,0.357,1131,0.316,1138,0.251,1145,0.376,1166,0.362,1168,0.322,1174,0.322,1175,0.357,1177,0.31,1190,6.348,1195,0.633,1210,0.811,1218,4.343,1226,0.554,1231,1.153,1248,0.933,1249,0.418,1252,0.418,1259,0.803,1264,0.289,1265,8.168,1266,0.456,1268,0.717,1285,0.248,1288,0.307,1289,0.351,1290,0.319,1291,0.342,1292,1.229,1305,0.3,1310,3.535,1334,1.426,1340,0.583,1349,0.747,1357,0.394,1363,1.696,1364,2.058,1365,2.058,1366,0.404,1367,0.434,1368,2.058,1369,2.058,1371,0.434,1373,1.486,1374,1.809,1379,0.329,1423,0.404,1425,0.64,1478,0.434,1486,0.27,1489,0.672,1509,0.394,1524,0.394,1541,0.508,1548,1.089,1568,1.534,1570,1.534,1571,1.534,1573,1.027,1584,0.289,1599,0.239,1601,2.341,1607,0.404,1608,0.404,1645,0.307,1654,0.418,1676,0.357,1688,0.418,1746,0.326,1857,1.184,1969,2.768,1992,1.527,2062,0.981,2278,3.036,2328,0.384,2329,8.709,2351,0.418,2354,0.337,2366,0.333,2383,0.418,2427,0.885,2436,0.418,2437,0.333,2466,0.394,2467,0.489,2468,0.404,2469,0.319,2470,0.765,2471,0.489,2472,0.376,2473,0.489,2474,0.489,2475,0.731,2476,0.434,2477,0.489,2478,0.489,2479,0.434,2480,0.489,2481,1.719,2482,0.489,2483,0.489,2484,0.434,2485,7.153,2486,0.95,2487,0.885,2488,0.885,2489,1.291,2490,0.786,2491,0.489,2492,0.489,2493,0.95,2494,2.556,2495,0.489,2496,0.489,2497,0.489,2498,3.93,2499,0.489,2500,0.95,2501,0.95,2502,0.489,2503,0.489,2504,0.489,2505,0.489,2506,0.489,2507,0.489,2508,0.489,2509,0.489,2510,0.489,2511,0.489,2512,0.489,2513,0.456,2514,0.489,2515,0.489,2516,0.489,2517,0.489,2518,0.489,2519,0.489,2520,0.489,2521,0.489,2522,0.489,2523,0.489,2524,0.418,2525,3.241,2526,0.357,2527,0.489,2528,0.95,2529,0.95,2530,2.556,2531,2.556,2532,0.95,2533,0.489,2534,0.489,2535,0.95,2536,0.95,2537,0.95,2538,0.95,2539,1.675,2540,0.95,2541,1.675,2542,1.675,2543,0.95,2544,1.675,2545,2.186,2546,0.95,2547,1.675,2548,0.489,2549,0.394,2550,0.489,2551,0.456,2552,0.434,2553,0.489,2554,0.489,2555,0.456,2556,0.786,2557,0.489,2558,0.95,2559,1.385,2560,0.489,2561,0.489,2562,0.489,2563,1.385,2564,0.489,2565,0.489,2566,0.434,2567,0.489,2568,0.456,2569,0.489,2570,0.489,2571,0.489,2572,0.376,2573,0.489,2574,0.489,2575,0.489,2576,0.95,2577,0.489,2578,0.95,2579,0.95,2580,0.95,2581,0.489,2582,0.95,2583,0.489,2584,0.489,2585,0.489,2586,0.489,2587,0.95,2588,0.489,2589,0.404,2590,0.404,2591,0.434,2592,0.489,2593,2.907,2594,5.261,2595,5.189,2596,1.385,2597,0.489,2598,0.489,2599,0.489,2600,0.95,2601,0.489,2602,0.489,2603,0.489,2604,0.489,2605,0.489,2606,0.489,2607,0.489,2608,0.434,2609,0.456,2610,0.434,2611,0.489,2612,0.95,2613,1.796,2614,0.489,2615,0.489,2616,1.385,2617,0.489,2618,0.489,2619,0.489,2620,3.684,2621,6.639,2622,4.152,2623,0.95,2624,1.675,2625,0.95,2626,0.489,2627,0.95,2628,0.489,2629,0.489,2630,0.489,2631,0.376,2632,0.489,2633,0.456]],["component/56",[220,0.615]],["title/57-1",[8,10.45,45,16.032,77,18.597,361,24.591]],["name/57-1",[]],["text/57-1",[]],["component/57-1",[]],["title/57-2",[80,25.176,83,41.82]],["name/57-2",[]],["text/57-2",[]],["component/57-2",[]],["title/57-3",[80,17.696,81,35.215,83,29.396,677,27.67]],["name/57-3",[]],["text/57-3",[]],["component/57-3",[]],["title/57-4",[1858,77.133]],["name/57-4",[]],["text/57-4",[]],["component/57-4",[]],["title/57",[8,9.098,45,13.958,80,15.408,83,25.594,248,17.482]],["name/57",[45,0.51,80,0.563,83,0.935]],["text/57",[1,1.214,6,1.068,7,1.314,8,1.666,11,0.89,16,1.355,22,0.911,24,0.543,34,0.739,38,0.609,42,3.151,45,4.312,46,2.074,57,1.406,60,0.87,62,0.653,74,0.941,77,4.458,80,4.005,81,5.614,82,1.328,83,7.572,87,2.241,88,1.714,89,1.128,103,0.92,106,1.612,112,0.785,115,0.839,118,1.399,137,1.014,139,1.228,143,1.242,155,1.291,163,1.422,165,1.11,171,0.991,180,0.973,181,1.522,186,1.497,189,0.775,199,3.001,200,2.276,204,2.439,206,1.222,208,1.058,211,2.519,216,0.719,218,0.816,238,1.34,239,1.01,240,1.653,241,0.97,248,1.419,262,0.731,276,1.522,283,1.956,294,1.128,299,0.984,304,1.475,311,1.161,315,2.532,319,3.812,337,1.936,338,1.141,339,3.022,355,3.643,361,1.738,362,1.222,364,0.97,367,1.105,369,0.941,388,1.653,389,2.584,396,2.384,398,0.773,401,1.883,424,1.014,428,1.353,436,1.134,441,1.653,451,1.522,452,1.28,481,2.007,482,3.037,513,1.073,521,1.642,532,1.28,542,0.893,552,1.653,557,1.986,561,1.182,571,1.128,591,2.297,643,1.182,653,4.732,671,1.653,677,1.099,689,0.909,690,1.368,736,1.094,830,1.214,851,1.653,916,1.598,965,0.903,969,1.007,1049,1.353,1060,1.353,1095,1.105,1154,1.399,1168,1.353,1231,1.083,1261,1.522,1285,1.04,1288,2.297,1334,4.081,1363,1.198,1427,3.253,1482,1.314,1490,1.073,1522,1.698,1540,1.698,1541,1.099,1542,1.368,1605,2.586,1700,2.757,2182,3.879,2255,1.753,2276,3.12,2472,1.58,2634,7.603,2635,1.822,2636,6.861,2637,6.861,2638,1.698,2639,1.753]],["component/57",[220,0.615]],["title/58-1",[676,17.814]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58-2",[60,16.431]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["title/58-3",[16,27.281,386,27.167]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["title/58",[67,28.986,68,28.575,1874,46.709]],["name/58",[2640,3.92]],["text/58",[8,0.964,16,1.77,22,2.265,29,2.406,37,3.524,40,1.518,42,2.405,45,3.924,46,1.201,47,2.376,49,1.59,60,1.305,61,1.683,62,1.518,66,1.995,67,5.843,68,6.115,80,2.536,94,5.719,131,1.491,134,4.191,139,1.604,172,2.981,177,2.529,179,2.861,194,2.783,196,2.529,228,2.754,262,1.7,308,3.645,341,2.554,364,2.253,383,2.567,392,1.673,398,2.789,416,2.481,515,3.371,540,2.011,626,2.341,660,4.486,676,0.911,721,2.851,832,2.747,925,4.07,931,2.607,962,2.541,969,2.339,1073,5.073,1095,2.567,1103,2.05,1257,3,1677,4.767,1765,3.426,1874,8.526,1876,4.233,1877,3.67,1878,4.882,2385,2.697]],["component/58",[220,0.615]],["title/59-1",[676,17.814]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[156,33.799,225,29.893]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[60,16.431]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59-4",[1334,41.017]],["name/59-4",[]],["text/59-4",[]],["component/59-4",[]],["title/59",[24,16.047,329,26.947,678,32.83]],["name/59",[24,0.435,329,0.73,678,0.889]],["text/59",[2,1.814,22,3.023,24,3.562,32,2.636,46,2.175,60,1.031,61,2.063,62,1.861,92,1.571,115,2.389,183,3.814,219,1.843,289,6.258,329,5.826,364,4.857,556,4.475,626,2.929,676,1.964,678,7.287,705,1.973,730,2.55,914,7.181,1389,4.994,2641,3.163,2642,3.306,2643,4.994,2644,5.451,2645,7.381,2646,7.67,2647,5.848,2648,5.451,2649,5.451,2650,5.848]],["component/59",[220,0.615]],["title/60-1",[156,33.799,225,29.893]],["name/60-1",[]],["text/60-1",[]],["component/60-1",[]],["title/60-2",[60,16.431]],["name/60-2",[]],["text/60-2",[]],["component/60-2",[]],["title/60-3",[1334,41.017]],["name/60-3",[]],["text/60-3",[]],["component/60-3",[]],["title/60",[38,21.809,347,22.7]],["name/60",[38,0.687,347,0.715]],["text/60",[2,1.754,3,2.089,22,3.126,24,2.664,38,4.178,41,3.952,46,2.122,60,0.996,61,1.995,62,1.8,82,2.055,93,2.557,109,4.385,115,3.444,138,2.293,162,3.051,183,2.386,262,2.015,289,3.442,346,4.351,347,4.451,399,2.914,556,2.928,581,3.236,626,3.231,634,2.794,639,1.911,676,1.926,701,3.727,705,2.845,730,2.466,1226,3.298,1521,3.899,1599,2.761,2341,3.391,2641,3.058,2642,3.197,2651,3.587,2652,4.552,2653,5.27]],["component/60",[220,0.615]],["title/61-1",[676,17.814]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["title/61-2",[60,16.431]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["title/61-3",[38,21.809,2654,68.537]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["title/61",[38,18.004,80,20.784,1451,45.812]],["name/61",[38,0.488,80,0.563,1451,1.241]],["text/61",[2,1.072,8,0.699,14,1.195,16,1.283,22,2.121,34,1.244,38,4.129,46,1.44,60,1.008,71,1.232,72,3.315,79,2.466,80,2.911,82,4.476,85,5.266,92,2.726,106,1.526,143,1.944,160,3.895,219,3.541,248,1.343,262,1.232,378,1.807,425,1.842,435,2.256,454,3.897,482,1.53,513,4.443,547,3.858,551,2.901,565,3.999,579,2.86,626,1.475,638,1.375,639,3.939,661,4.307,676,1.625,684,2.483,721,1.331,784,2.563,815,2.256,916,2.502,941,2.448,969,2.804,1297,3.068,1312,2.86,1334,4.943,1451,10.218,1635,4.874,1656,2.415,2490,2.86,2641,4.599,2654,6.819,2655,3.457,2656,3.457,2657,5.394,2658,2.784]],["component/61",[220,0.615]],["title/62-1",[676,17.814]],["name/62-1",[]],["text/62-1",[]],["component/62-1",[]],["title/62-2",[60,16.431]],["name/62-2",[]],["text/62-2",[]],["component/62-2",[]],["title/62-3",[2,16.032,60,9.109,65,24.079,168,22.344]],["name/62-3",[]],["text/62-3",[]],["component/62-3",[]],["title/62-4",[24,19.438,168,31.788]],["name/62-4",[]],["text/62-4",[]],["component/62-4",[]],["title/62-5",[168,31.788,321,39.17]],["name/62-5",[]],["text/62-5",[]],["component/62-5",[]],["title/62-6",[58,34.859,168,31.788]],["name/62-6",[]],["text/62-6",[]],["component/62-6",[]],["title/62-7",[2036,75.064]],["name/62-7",[]],["text/62-7",[]],["component/62-7",[]],["title/62",[80,20.784,168,26.242,386,22.428]],["name/62",[80,0.563,168,0.711,386,0.607]],["text/62",[2,3.292,8,2.146,16,2.559,22,2.43,24,2.264,38,2.54,45,1.351,46,1.097,50,2.226,57,3.297,58,3.27,59,3.972,60,1.716,65,2.03,66,4.073,71,1.552,80,4.724,82,1.583,103,4.755,112,2.638,126,2.277,160,1.996,162,2.497,168,5.705,169,1.873,225,3.481,248,1.692,300,2.207,320,2.023,321,4.562,386,5.206,396,1.514,423,1.883,432,1.989,542,1.894,547,1.977,571,2.394,626,1.779,638,1.733,639,1.473,676,1.636,703,2.17,724,2.594,796,3.998,853,3.177,855,2.872,858,3.508,2659,4.061,2660,4.061,2661,2.843,2662,3.866]],["component/62",[220,0.615]],["title/63-1",[676,17.814]],["name/63-1",[]],["text/63-1",[]],["component/63-1",[]],["title/63-2",[156,33.799,225,29.893]],["name/63-2",[]],["text/63-2",[]],["component/63-2",[]],["title/63-3",[60,16.431]],["name/63-3",[]],["text/63-3",[]],["component/63-3",[]],["title/63-4",[1334,41.017]],["name/63-4",[]],["text/63-4",[]],["component/63-4",[]],["title/63",[8,14.867,66,30.754]],["name/63",[8,0.468,66,0.969]],["text/63",[8,2.331,16,2.662,21,3.559,22,2.498,60,1.764,66,5.489,67,5.506,69,4.551,80,3.427,82,2.607,86,3.732,94,4.009,130,3.749,144,3.156,150,4.032,298,6.126,321,3.822,347,2.215,392,3.512,626,2.973,676,1.371,678,3.88,786,3.401,803,5.414,919,4.729,969,3.517,1000,4.056,1001,5.501,1010,4.401,1257,4.511,1406,3.986,1597,5.776,1599,3.503,1909,4.436,2652,5.776,2663,7.174,2664,7.174]],["component/63",[220,0.615]],["title/64-1",[2,22.808,5,22.593]],["name/64-1",[]],["text/64-1",[]],["component/64-1",[]],["title/64",[]],["name/64",[385,2.02]],["text/64",[2,3.052,3,1.805,5,3.639,8,2.187,12,1.512,14,2.207,23,1.512,24,1.995,34,1.031,35,1.272,38,2.238,41,2.504,42,2.75,45,3.215,46,3.253,49,0.955,50,1.464,57,3.259,58,3.577,59,2.813,61,1.011,64,1.148,66,3.156,67,3.05,68,3.006,71,2.688,80,1.673,82,1.042,92,0.77,106,1.265,109,1.491,111,2.796,112,2.442,131,0.896,135,1.405,138,3.434,142,4.129,155,1.802,156,2.936,159,2.434,160,2.238,161,2.163,162,2.312,163,1.116,180,1.359,189,1.082,191,1.121,202,2.464,216,1.003,219,2.013,225,1.986,281,1.772,289,1.744,300,1.452,310,1.033,318,0.655,325,1.694,329,2.169,345,1.87,346,2.205,347,2.329,366,1.575,385,1.477,388,2.307,426,1.458,532,3.046,556,5.6,581,1.64,607,1.909,612,1.65,626,0.739,639,1.652,676,0.548,678,1.55,701,1.889,705,0.967,731,1.834,803,2.163,898,1.772,929,1.87,1259,1.661,1391,1.583,1446,2.253,1447,3.329,1448,3.046,1500,1.818,1514,1.909,1515,2.93,1516,2.518,1517,3.459,1518,3.622,1521,1.976,1677,1.505,1874,3.759,2380,2.253,2409,1.889,2469,1.87,2651,1.818,2665,2.671,2666,1.852,2667,1.889]],["component/64",[220,0.615]],["title/65-1",[676,17.814]],["name/65-1",[]],["text/65-1",[]],["component/65-1",[]],["title/65-2",[156,33.799,225,29.893]],["name/65-2",[]],["text/65-2",[]],["component/65-2",[]],["title/65-3",[60,16.431]],["name/65-3",[]],["text/65-3",[]],["component/65-3",[]],["title/65-4",[41,23.801,227,34.116,1334,26.705]],["name/65-4",[]],["text/65-4",[]],["component/65-4",[]],["title/65",[142,26.301,1447,50.099]],["name/65",[142,0.828,1447,1.578]],["text/65",[2,1.72,3,2.048,19,5.595,21,2.751,22,2.485,60,0.977,62,2.644,74,2.54,82,2.015,85,2.718,86,5.181,92,1.489,99,3.336,103,2.484,112,3.809,142,4.238,148,3.173,219,1.748,225,2.254,254,2.897,325,3.278,347,2.564,361,2.638,556,2.871,626,2.569,676,1.059,705,1.871,747,4.587,796,5.773,883,5.931,919,5.475,1000,3.134,1001,4.565,1006,3.824,1082,4.669,1136,5.966,1283,5.729,1396,3.982,1447,8.475,1929,6.53,2062,3.925,2337,4.358,2668,4.587,2669,5.544,2670,5.544,2671,5.544,2672,5.544,2673,5.544,2674,5.544,2675,5.168,2676,5.544,2677,4.735,2678,5.168,2679,4.735,2680,4.587,2681,5.544]],["component/65",[220,0.615]],["title/66-1",[676,17.814]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[156,33.799,225,29.893]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66-3",[60,16.431]],["name/66-3",[]],["text/66-3",[]],["component/66-3",[]],["title/66-4",[41,23.801,227,34.116,1334,26.705]],["name/66-4",[]],["text/66-4",[]],["component/66-4",[]],["title/66",[1515,44.096,1516,37.901]],["name/66",[1515,1.389,1516,1.194]],["text/66",[22,2.19,27,2.552,37,2.841,40,1.9,60,1.052,61,2.107,72,3.46,82,2.17,113,5.022,131,1.867,138,2.421,143,2.029,191,4.781,227,7.617,234,3.506,274,2.883,340,4.227,556,3.091,626,2.684,639,2.018,676,1.141,678,3.229,744,3.336,915,3.483,1150,5.618,1515,8.651,1516,6.3,2651,3.787,2652,4.807,2682,8.776,2683,5.97,2684,5.97,2685,8.776,2686,5.97,2687,8.776,2688,8.776,2689,8.776,2690,5.97,2691,5.97,2692,5.97]],["component/66",[220,0.615]],["title/67-1",[676,17.814]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[1334,41.017]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[156,33.799,225,29.893]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[60,16.431]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67",[46,18.508,57,28.307]],["name/67",[46,0.583,57,0.892]],["text/67",[3,1.554,5,1.292,14,1.454,22,1.049,29,2.122,42,3.101,46,3.807,50,2.149,57,5.679,60,0.741,71,1.499,80,4.382,82,1.529,85,4.681,86,2.188,92,1.13,103,1.885,112,1.609,115,2.741,126,2.198,130,2.198,137,2.079,139,2.256,156,1.934,172,1.693,191,1.645,202,4.22,354,5.018,360,2.802,369,1.927,379,3.192,386,3.528,389,3.151,392,1.476,532,2.623,549,1.934,597,2.275,626,1.73,676,0.804,697,2.287,931,3.666,1142,2.938,1198,3.175,1285,2.131,1334,1.851,1446,3.307,2391,3.119,2392,3.733,2401,2.802,2661,4.377,2693,3.921,2694,4.206,2695,3.733]],["component/67",[220,0.615]],["title/68-1",[676,17.814]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[156,33.799,225,29.893]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68-3",[60,16.431]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["title/68-4",[1334,41.017]],["name/68-4",[]],["text/68-4",[]],["component/68-4",[]],["title/68",[46,18.508,1517,52.06]],["name/68",[46,0.583,1517,1.64]],["text/68",[1,1.735,2,1.546,3,1.842,5,2.355,8,0.593,11,1.272,22,0.732,24,1.318,38,3.688,42,1.619,46,3.679,48,1.462,49,0.978,50,1.499,57,2.502,60,0.517,61,1.035,62,0.934,71,1.046,77,1.056,80,1.707,82,1.067,85,1.439,92,2.507,96,1.181,99,1.178,103,1.315,106,1.295,110,1.199,115,2.656,130,1.534,131,1.559,139,0.987,143,0.997,162,1.062,163,1.143,172,1.181,183,0.831,191,1.148,202,2.515,205,1.69,216,3.269,219,1.571,233,1.433,239,2.454,248,1.14,262,1.776,291,2.851,337,1.556,343,1.896,355,1.786,366,2.74,384,5.768,391,1.462,392,1.03,513,1.534,549,1.349,597,1.587,626,1.286,638,1.167,639,0.992,676,0.561,684,2.108,697,5.938,705,1.682,781,2.108,1049,1.934,1142,5.353,1334,2.86,1363,1.712,1451,2.215,1461,1.723,1517,9.822,2265,1.977,2391,6.366,2392,6.8,2657,1.862,2695,4.424,2696,2.506,2697,2.363,2698,2.935,2699,8.586,2700,8.586,2701,2.735,2702,2.935,2703,4.647,2704,2.935,2705,2.935,2706,2.935,2707,2.935]],["component/68",[220,0.615]],["title/69-1",[676,17.814]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[156,33.799,225,29.893]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[60,16.431]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69-4",[1334,41.017]],["name/69-4",[]],["text/69-4",[]],["component/69-4",[]],["title/69",[14,20.977,42,19.714,46,15.279]],["name/69",[42,0.534,46,0.414,537,1.052]],["text/69",[2,1.645,8,1.961,14,4.39,16,1.968,22,2.699,38,2.383,42,3.972,46,3.651,55,3.572,60,0.935,61,1.871,64,2.124,80,4.188,82,1.927,144,2.333,168,3.473,318,3.171,320,3.73,321,2.825,323,1.719,324,1.711,328,1.725,329,4.802,386,2.968,392,1.86,426,2.698,432,2.422,482,2.347,556,2.746,597,2.868,626,2.072,676,1.853,721,2.042,969,3.938,1264,3.136,1451,6.063,2652,4.27]],["component/69",[220,0.615]],["title/70-1",[676,17.814]],["name/70-1",[]],["text/70-1",[]],["component/70-1",[]],["title/70-2",[156,33.799,225,29.893]],["name/70-2",[]],["text/70-2",[]],["component/70-2",[]],["title/70-3",[60,16.431]],["name/70-3",[]],["text/70-3",[]],["component/70-3",[]],["title/70-4",[1334,41.017]],["name/70-4",[]],["text/70-4",[]],["component/70-4",[]],["title/70",[41,23.801,46,15.279,109,31.575]],["name/70",[41,0.645,46,0.414,109,0.855]],["text/70",[2,1.409,16,1.685,22,2.702,38,2.61,39,3.442,41,5.765,46,3.132,60,1.256,61,2.515,65,2.116,80,2.441,82,1.651,86,2.362,92,1.915,93,2.054,109,6.25,112,3.365,134,2.696,142,3.147,202,2.291,214,2.667,216,1.59,219,1.432,262,3.135,300,2.301,322,3.758,332,3.095,345,2.964,346,5.485,347,3.077,348,4.105,392,1.593,542,1.975,551,1.549,556,2.352,560,4.515,626,2.269,676,1.681,701,2.994,705,1.533,721,1.749,910,2.432,931,2.482,969,2.227,1095,2.444,1103,1.952,1204,3.657,1391,3.939,1599,2.218,1671,2.809,1718,2.632,1855,2.32,2271,4.801,2652,3.657,2708,3.657,2709,4.542,2710,4.233]],["component/70",[220,0.615]],["title/71-1",[676,17.814]],["name/71-1",[]],["text/71-1",[]],["component/71-1",[]],["title/71-2",[156,33.799,225,29.893]],["name/71-2",[]],["text/71-2",[]],["component/71-2",[]],["title/71-3",[60,16.431]],["name/71-3",[]],["text/71-3",[]],["component/71-3",[]],["title/71-4",[216,32.645]],["name/71-4",[]],["text/71-4",[]],["component/71-4",[]],["title/71-5",[438,55.912]],["name/71-5",[]],["text/71-5",[]],["component/71-5",[]],["title/71-6",[60,16.431]],["name/71-6",[]],["text/71-6",[]],["component/71-6",[]],["title/71-7",[1334,41.017]],["name/71-7",[]],["text/71-7",[]],["component/71-7",[]],["title/71",[112,23.213,142,21.712,156,27.902]],["name/71",[142,0.828,1412,1.782]],["text/71",[2,2.158,8,0.652,16,1.196,21,1.599,22,1.736,24,0.852,38,1.6,42,1.047,60,1.597,61,2.455,62,2.215,65,3.242,77,1.16,80,1.103,82,1.171,85,3.412,92,0.866,108,1.977,112,4.803,113,1.844,114,1.905,120,3.336,131,1.008,142,4.642,156,2.48,189,3.419,199,3.043,206,1.919,214,5.754,216,2.85,218,4.138,219,1.016,220,0.673,233,1.574,286,3.888,317,2.085,318,1.59,337,1.708,364,1.522,386,1.191,392,1.893,429,1.646,430,1.625,432,1.472,467,2.222,482,1.426,540,3.431,556,2.793,596,1.977,598,2.251,599,3.004,604,3.634,609,1.811,626,1.794,634,2.666,639,1.824,660,1.592,676,1.33,677,1.725,705,1.087,721,2.679,796,1.868,806,2.124,908,1.947,960,1.544,969,1.58,1000,1.822,1106,2.314,1136,2.314,1150,2.063,1237,4.787,1240,2.282,1273,2.082,1291,2.251,1507,1.605,1516,1.661,1599,1.574,1701,2.282,1837,3.721,1838,2.282,2237,2.082,2271,3.634,2330,1.993,2341,1.933,2350,5.3,2356,2.251,2359,2.533,2385,1.822,2397,1.905,2711,2.86,2712,5.558,2713,2.147,2714,2.86,2715,2.533,2716,2.86,2717,3.222,2718,4.787,2719,2.251,2720,3.222]],["component/71",[220,0.615]],["title/72-1",[676,17.814]],["name/72-1",[]],["text/72-1",[]],["component/72-1",[]],["title/72-2",[156,33.799,225,29.893]],["name/72-2",[]],["text/72-2",[]],["component/72-2",[]],["title/72-3",[60,16.431]],["name/72-3",[]],["text/72-3",[]],["component/72-3",[]],["title/72-4",[1334,41.017]],["name/72-4",[]],["text/72-4",[]],["component/72-4",[]],["title/72",[142,26.301,1518,54.515]],["name/72",[142,0.828,1518,1.717]],["text/72",[21,4.867,22,2.448,60,1.729,142,4.818,556,5.08,626,3.177,676,1.874,705,3.311,919,6.466,1000,5.546,1001,5.391,1406,5.451,1518,9.986,1599,4.791,1909,6.067]],["component/72",[220,0.615]],["title/73-1",[676,17.814]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[1334,41.017]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[156,33.799,225,29.893]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73-4",[60,16.431]],["name/73-4",[]],["text/73-4",[]],["component/73-4",[]],["title/73",[45,22.808,57,28.307]],["name/73",[45,0.718,57,0.892]],["text/73",[3,1.57,5,1.305,14,1.468,22,1.06,29,2.143,42,3.118,45,4.538,46,3.152,50,2.17,57,5.687,60,0.749,71,1.514,80,4.395,82,1.544,85,4.707,86,2.21,92,1.141,103,1.903,112,1.625,115,2.763,126,2.22,130,2.22,137,2.099,139,2.274,156,1.953,172,1.71,191,1.662,202,2.143,354,5.051,360,2.83,369,1.946,379,3.217,386,3.548,389,3.172,392,1.49,532,2.649,549,1.953,597,2.298,626,1.744,676,0.812,697,2.31,931,3.696,1142,2.967,1198,3.206,1285,2.152,1334,1.869,1446,3.34,2391,3.15,2401,2.83,2403,3.96,2661,4.412,2693,3.96,2695,3.77,2721,4.248]],["component/73",[220,0.615]],["title/74-1",[676,17.814]],["name/74-1",[]],["text/74-1",[]],["component/74-1",[]],["title/74-2",[156,33.799,225,29.893]],["name/74-2",[]],["text/74-2",[]],["component/74-2",[]],["title/74-3",[60,16.431]],["name/74-3",[]],["text/74-3",[]],["component/74-3",[]],["title/74-4",[1334,41.017]],["name/74-4",[]],["text/74-4",[]],["component/74-4",[]],["title/74",[42,19.714,45,18.829,537,38.857]],["name/74",[42,0.534,45,0.51,537,1.052]],["text/74",[2,2.75,8,2.335,14,4.248,16,2.247,22,2.618,38,1.796,42,4.171,45,4.436,60,1.067,77,2.179,79,2.61,80,3.954,82,3.223,86,3.15,143,2.058,168,3.833,318,2.397,320,4.871,321,4.724,344,2.913,386,3.276,389,2.28,392,2.124,426,3.08,491,5.357,556,3.135,597,3.275,626,2.287,676,2.005,686,6.823,689,2.68,969,2.969,2652,4.875]],["component/74",[220,0.615]],["title/75-1",[254,48.721]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[676,17.814]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75-3",[144,32.349,254,38.425]],["name/75-3",[]],["text/75-3",[]],["component/75-3",[]],["title/75-4",[8,12.273,35,26.947,57,23.369]],["name/75-4",[]],["text/75-4",[]],["component/75-4",[]],["title/75-5",[0,36.628,57,28.307]],["name/75-5",[]],["text/75-5",[]],["component/75-5",[]],["title/75-6",[57,28.307,225,29.893]],["name/75-6",[]],["text/75-6",[]],["component/75-6",[]],["title/75-7",[77,33.547]],["name/75-7",[]],["text/75-7",[]],["component/75-7",[]],["title/75-8",[57,28.307,103,32.944]],["name/75-8",[]],["text/75-8",[]],["component/75-8",[]],["title/75-9",[2,22.808,5,22.593]],["name/75-9",[]],["text/75-9",[]],["component/75-9",[]],["title/75-10",[46,18.508,57,28.307]],["name/75-10",[]],["text/75-10",[]],["component/75-10",[]],["title/75-11",[45,22.808,57,28.307]],["name/75-11",[]],["text/75-11",[]],["component/75-11",[]],["title/75-12",[50,47.633]],["name/75-12",[]],["text/75-12",[]],["component/75-12",[]],["title/75-13",[58,44.2]],["name/75-13",[]],["text/75-13",[]],["component/75-13",[]],["title/75-14",[92,25.043]],["name/75-14",[]],["text/75-14",[]],["component/75-14",[]],["title/75-15",[57,28.307,103,32.944]],["name/75-15",[]],["text/75-15",[]],["component/75-15",[]],["title/75-16",[225,29.893,309,47.069]],["name/75-16",[]],["text/75-16",[]],["component/75-16",[]],["title/75",[57,35.892]],["name/75",[57,0.892,425,1.234]],["text/75",[0,2.513,8,2.425,9,1.798,16,3.718,20,3.049,22,1.929,24,2.044,35,2.915,38,1.496,39,1.437,42,2.133,45,2.917,46,2.653,49,0.992,50,1.52,57,5.452,58,2.392,62,0.947,65,2.35,71,2.339,77,1.071,80,2.648,92,2.077,103,4.213,106,1.313,112,1.138,126,3.431,128,2.144,141,2.624,154,1.923,162,1.826,177,1.577,180,1.411,189,1.123,191,1.164,201,1.626,202,1.501,216,2.708,225,2.051,254,5.237,260,1.736,273,2.819,283,2.701,309,1.905,347,2.027,383,4.657,386,3.474,392,3.036,396,1.034,423,2.181,425,1.585,432,1.359,532,3.145,543,2.339,544,2.246,551,1.721,612,1.713,623,1.703,625,1.759,639,1.705,676,0.569,751,2.396,808,1.601,812,1.228,849,1.888,969,4.913,1059,1.811,1098,2.052,1145,3.882,1226,1.736,1434,2.64,1490,1.555,1585,2.027,1712,3.172,1713,2.462,1718,1.724,1878,5.097,2034,2.462,2275,2.64,2414,2.17,2722,2.64,2723,2.773,2724,2.773,2725,2.773,2726,2.975,2727,2.975,2728,2.975,2729,4.702]],["component/75",[220,0.615]],["title/76-1",[46,18.508,57,28.307]],["name/76-1",[]],["text/76-1",[]],["component/76-1",[]],["title/76-2",[60,16.431]],["name/76-2",[]],["text/76-2",[]],["component/76-2",[]],["title/76-3",[92,25.043]],["name/76-3",[]],["text/76-3",[]],["component/76-3",[]],["title/76-4",[45,22.808,57,28.307]],["name/76-4",[]],["text/76-4",[]],["component/76-4",[]],["title/76-5",[60,16.431]],["name/76-5",[]],["text/76-5",[]],["component/76-5",[]],["title/76-6",[92,25.043]],["name/76-6",[]],["text/76-6",[]],["component/76-6",[]],["title/76-7",[46,18.508,1517,52.06]],["name/76-7",[]],["text/76-7",[]],["component/76-7",[]],["title/76-8",[60,16.431]],["name/76-8",[]],["text/76-8",[]],["component/76-8",[]],["title/76-9",[92,25.043]],["name/76-9",[]],["text/76-9",[]],["component/76-9",[]],["title/76",[1145,71.74]],["name/76",[57,0.892,1145,1.782]],["text/76",[2,1.384,5,1.53,8,0.787,11,1.934,16,0.956,20,1.517,22,0.643,24,0.253,27,1.102,33,0.996,34,1.176,35,0.805,37,2.37,38,1.154,40,1.585,42,1.772,45,3.567,46,3.333,49,1.965,57,4.832,60,0.962,62,1.585,66,0.758,77,3.768,80,4,87,0.588,92,3.266,94,1.826,96,0.73,99,0.385,124,0.486,128,1.654,129,0.496,131,0.567,135,2.891,137,2.204,143,2.699,144,0.797,163,0.373,172,2.537,179,1.087,180,0.859,183,2.395,191,0.709,201,0.524,202,0.483,213,0.53,219,1.03,225,0.39,254,0.947,262,0.342,274,0.875,275,1.732,281,0.593,291,2.764,310,0.929,321,0.511,343,0.619,347,0.296,354,1.959,366,1.416,379,2.37,386,2.328,389,2.22,396,0.63,398,1.23,408,0.91,417,2.675,423,0.414,435,1.183,482,0.802,525,0.478,527,0.809,551,0.618,553,0.488,554,0.527,622,1.007,626,1.975,633,1.858,638,0.721,639,0.613,645,0.914,646,0.584,660,1.274,674,1.959,676,1.127,677,0.513,689,0.802,705,0.323,706,0.639,708,0.768,730,0.79,749,1.007,761,1.171,796,0.556,798,3.555,800,5.161,812,4.531,832,1.044,931,1.786,958,0.646,965,0.797,969,1.602,1032,0.646,1097,0.699,1098,0.661,1101,1.459,1103,1.917,1132,0.711,1142,2.718,1145,1.395,1258,1.395,1272,0.632,1275,1.171,1285,0.918,1308,0.506,1334,0.797,1363,1.906,1379,1.221,1404,0.67,1507,0.478,1517,2.313,1655,0.772,1671,0.593,1901,3.632,2033,1.064,2191,1.608,2385,0.542,2409,0.632,2442,0.503,2641,0.518,2642,0.542,2661,3.561,2730,0.819,2731,4.843,2732,1.825,2733,1.812,2734,1.322,2735,1.608,2736,0.819,2737,0.894,2738,0.894,2739,0.894,2740,0.894,2741,0.851,2742,0.894,2743,0.894,2744,0.894,2745,0.851,2746,0.894,2747,0.894,2748,0.894,2749,0.894,2750,0.894,2751,0.894,2752,0.894,2753,0.894,2754,0.894,2755,0.894,2756,0.894,2757,0.894,2758,0.894,2759,0.894,2760,0.894,2761,0.894,2762,0.894,2763,0.894,2764,0.894,2765,0.959,2766,0.894,2767,0.894,2768,0.894,2769,0.894,2770,0.894,2771,0.894,2772,0.894,2773,0.894,2774,0.894,2775,0.894,2776,0.894,2777,0.894,2778,0.688,2779,0.894,2780,0.894,2781,0.894,2782,0.67,2783,0.894,2784,0.894,2785,0.894,2786,0.894,2787,0.894,2788,0.894,2789,0.894,2790,0.894,2791,0.894,2792,0.894,2793,0.894]],["component/76",[220,0.615]],["title/77-1",[8,12.273,18,45.004,21,30.116]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["title/77-2",[8,10.45,18,38.319,21,25.643,66,21.617]],["name/77-2",[]],["text/77-2",[]],["component/77-2",[]],["title/77-3",[8,9.098,17,43.077,18,33.363,21,22.326]],["name/77-3",[]],["text/77-3",[]],["component/77-3",[]],["title/77-4",[21,36.48,225,29.893]],["name/77-4",[]],["text/77-4",[]],["component/77-4",[]],["title/77",[21,44.073,225,24.678]],["name/77",[21,1.945]],["text/77",[5,1.22,8,2.476,16,1.474,17,5.623,18,9.079,20,1.844,21,6.604,22,0.991,24,1.05,25,1.688,28,4.223,40,2.039,49,1.324,64,1.591,66,3.368,82,2.328,88,1.863,96,1.599,99,2.573,112,2.45,129,2.056,131,4.019,139,2.154,142,2.292,160,4.233,163,1.546,180,1.883,212,2.105,225,2.605,274,4.461,291,1.742,292,2.812,325,4.761,371,3.962,386,1.467,392,1.393,452,2.476,482,2.835,549,1.826,626,1.024,710,2.739,734,1.947,736,2.116,826,2.591,837,2.126,919,2.618,953,3.524,967,2.879,1000,3.622,1001,2.182,1231,2.095,1240,5.701,1396,2.853,1412,3.056,1671,2.456,2048,3.702,2196,3.198,2197,3.702,2369,2.774,2479,3.524,2794,3.702,2795,3.392,2796,3.972,2797,3.524,2798,3.524,2799,3.972,2800,3.972,2801,3.972,2802,3.972,2803,3.972,2804,3.972,2805,3.972,2806,3.972,2807,3.972,2808,2.739,2809,3.972,2810,3.972,2811,3.972,2812,3.972,2813,3.972,2814,3.972,2815,3.972,2816,3.524]],["component/77",[220,0.615]],["title/78-1",[46,18.508,110,30.044]],["name/78-1",[]],["text/78-1",[]],["component/78-1",[]],["title/78-2",[7,59.681]],["name/78-2",[]],["text/78-2",[]],["component/78-2",[]],["title/78-3",[40,23.406,46,18.508]],["name/78-3",[]],["text/78-3",[]],["component/78-3",[]],["title/78-4",[46,15.279,92,16.305,310,21.885]],["name/78-4",[]],["text/78-4",[]],["component/78-4",[]],["title/78-5",[8,10.45,32,23.302,92,13.883,310,18.634]],["name/78-5",[]],["text/78-5",[]],["component/78-5",[]],["title/78-6",[46,18.508,63,34.859]],["name/78-6",[]],["text/78-6",[]],["component/78-6",[]],["title/78",[40,23.406,46,18.508]],["name/78",[40,0.737,46,0.583]],["text/78",[1,1.03,2,0.978,3,0.34,5,0.763,8,1.85,10,0.433,14,1.089,16,1.17,22,0.787,24,0.656,25,0.391,27,1.608,32,1.119,34,1.554,38,2.922,40,2.07,41,2.404,42,1.024,46,3.06,48,0.458,49,0.306,51,0.483,52,0.747,55,0.619,57,1.662,60,0.307,61,0.324,62,1.374,63,2.289,64,0.368,65,0.812,71,1.34,74,0.421,77,0.331,78,1.741,79,2.283,80,1.653,82,0.633,83,2.139,85,0.854,86,0.906,87,0.564,91,0.447,92,3.698,93,0.416,94,0.973,95,0.778,96,1.269,99,1.734,100,1.827,101,0.707,102,0.589,103,1.685,105,0.495,106,1.391,109,1.957,110,0.712,111,0.526,112,0.949,115,0.376,119,0.573,122,0.583,123,1.126,126,1.647,127,0.594,128,0.741,129,0.902,130,0.91,131,0.776,133,0.436,135,1.217,138,1.278,139,0.309,141,1.64,142,0.329,143,1.468,148,0.526,149,1.758,160,0.421,163,0.358,165,0.942,168,0.397,172,0.999,179,0.551,183,1.366,189,0.657,195,1.448,196,0.487,198,0.412,199,0.762,206,0.547,208,0.898,216,0.61,217,0.526,218,1.496,219,1.361,232,0.547,233,1.54,236,1.242,238,0.6,239,0.453,241,0.823,246,0.338,253,0.594,254,0.91,262,1.72,271,0.594,272,0.54,273,0.514,274,0.444,276,0.682,277,0.583,278,0.66,283,0.492,290,2.692,291,0.403,294,0.505,299,0.835,300,1.597,308,0.857,310,2.21,311,0.52,315,1.274,336,3.579,337,1.316,338,0.511,340,0.651,343,0.594,346,1.91,347,2.762,355,0.56,362,0.547,365,0.399,375,0.497,378,0.48,379,0.437,381,1.077,389,0.656,392,0.323,395,0.564,396,0.863,397,1.16,398,0.935,399,0.474,417,0.994,420,0.434,425,0.49,436,0.508,437,0.555,440,0.606,453,1.095,479,1.194,480,0.533,481,1.364,482,1.911,499,0.412,513,1.647,514,1.34,518,0.523,520,1.03,521,3.224,522,1.966,525,2.151,527,1.68,528,0.555,532,0.573,545,0.919,551,0.314,555,0.4,556,0.476,558,1.077,560,0.472,565,0.503,568,1.474,581,0.526,596,0.564,597,1.343,626,1.366,638,0.366,639,1.79,643,0.529,645,0.464,646,1.06,651,1.02,668,0.723,674,1.045,676,1.309,677,0.933,684,0.66,697,0.5,699,0.594,701,0.606,703,0.868,705,1.629,711,0.785,721,1.662,736,0.928,745,0.694,764,1.27,771,0.785,786,0.436,795,0.626,796,0.533,798,0.809,800,0.985,821,0.573,826,2.454,830,0.544,834,0.723,882,0.682,884,0.589,922,1.403,931,0.952,964,1.052,965,0.404,969,0.451,1048,3.01,1049,0.606,1071,0.778,1103,1.355,1174,0.606,1187,1.102,1204,2.538,1226,0.536,1231,1.984,1259,0.533,1263,0.74,1264,0.544,1269,1.315,1270,1.403,1271,0.66,1273,0.594,1274,0.671,1280,1.758,1281,3.212,1282,0.671,1283,1.201,1284,1.369,1285,0.882,1286,0.816,1293,2.399,1299,0.857,1308,0.485,1315,0.651,1363,1.016,1458,1.233,1482,0.589,1490,1.966,1515,1.045,1520,1.369,1523,1.441,1527,0.651,1535,0.785,1671,0.569,1675,1.561,1677,1.303,1701,1.233,2062,0.651,2270,0.606,2341,0.551,2366,1.187,2370,0.485,2377,0.651,2385,0.52,2638,0.761,2639,0.785,2661,1.137,2817,0.857,2818,0.6,2819,1.488,2820,0.816,2821,0.723,2822,0.919,2823,0.919,2824,0.919,2825,0.919,2826,0.857,2827,0.761,2828,0.626,2829,0.785,2830,0.919,2831,0.919,2832,0.919,2833,0.919,2834,0.919,2835,0.919,2836,0.919,2837,0.919,2838,0.919,2839,0.785,2840,0.857,2841,0.857]],["component/78",[220,0.615]],["title/79-1",[46,15.279,128,25.804,129,31.431]],["name/79-1",[]],["text/79-1",[]],["component/79-1",[]],["title/79",[]],["name/79",[2842,3.654]],["text/79",[8,2.037,14,1.039,34,1.082,40,2.478,45,2.053,46,2.956,47,1.498,49,1.002,60,1.166,62,1.62,64,1.205,71,2.774,78,1.391,79,1.296,82,1.093,88,2.388,92,3.155,99,2.044,111,1.721,115,1.229,128,5.998,129,6.081,131,2.069,137,1.486,139,1.011,143,2.646,172,2.049,183,1.873,191,1.176,196,1.594,199,2.894,202,1.517,203,1.492,219,1.604,222,2.003,253,1.943,299,1.441,308,1.48,315,1.543,317,1.696,337,1.594,357,2.421,383,1.618,386,1.111,392,1.055,395,1.845,396,2.3,420,1.42,481,2.797,482,1.331,491,1.817,521,1.351,525,2.535,532,1.875,607,2.003,613,2.488,620,1.635,639,2.632,643,2.931,676,1.264,689,3.446,697,1.635,721,1.158,761,3.289,784,2.229,786,1.426,798,2.363,812,1.241,815,4.318,941,2.129,965,1.323,1059,1.83,1244,1.962,1272,1.982,1308,1.586,1499,2.16,1542,3.39,1605,2.129,1631,4.001,1635,2.003,1639,2.488,1643,1.83,1659,1.68,1855,3.381,2442,4.572,2843,5.682,2844,3.007,2845,5.089,2846,2.803,2847,2.668,2848,4.457,2849,3.007,2850,4.939,2851,2.421,2852,2.488]],["component/79",[220,0.615]],["title/80-1",[776,62.106]],["name/80-1",[]],["text/80-1",[]],["component/80-1",[]],["title/80",[]],["name/80",[8,0.332,46,0.414,222,1.095]],["text/80",[3,2.431,4,2.648,12,2.166,16,1.523,32,2.966,40,2.094,41,2.58,42,1.333,46,3.267,47,2.045,48,2.045,62,2.094,64,1.644,77,1.477,78,3.81,79,1.77,80,2.819,92,3.606,103,1.839,106,1.811,109,3.422,110,1.677,247,1.96,273,3.676,283,3.522,337,2.176,383,2.209,389,1.546,392,1.44,393,4.803,453,5.921,547,1.863,642,2.604,643,2.364,644,5.829,645,4.152,646,4.005,676,0.784,721,5.409,736,2.187,776,5.484,851,3.305,909,3.789,1174,6.207,1248,2.765,1261,3.044,1267,3.643,1270,2.321,1308,2.166,1340,4.036,1532,5.297,1605,5.829,1648,3.826,1690,6.132,1691,6.132,1697,10.849,1698,5.838,2853,4.105]],["component/80",[220,0.615]],["title/81-1",[5,22.593,255,29.526]],["name/81-1",[]],["text/81-1",[]],["component/81-1",[]],["title/81-2",[5,18.651,110,24.803,255,24.375]],["name/81-2",[]],["text/81-2",[]],["component/81-2",[]],["title/81-3",[5,15.881,255,20.754,273,28.881,2854,44.138]],["name/81-3",[]],["text/81-3",[]],["component/81-3",[]],["title/81-4",[5,18.651,255,24.375,1679,39.608]],["name/81-4",[]],["text/81-4",[]],["component/81-4",[]],["title/81-5",[92,19.751,317,18.84]],["name/81-5",[]],["text/81-5",[]],["component/81-5",[]],["title/81",[5,22.593,255,29.526]],["name/81",[5,0.712,255,0.93]],["text/81",[1,0.83,3,0.519,5,2.917,6,0.73,8,0.523,10,0.345,14,1.401,16,0.272,17,0.446,20,0.938,22,0.646,23,1.9,24,2.677,25,0.597,27,0.313,32,0.331,34,0.931,38,1.203,39,0.678,40,0.233,41,0.287,42,1.317,45,0.436,46,2.658,47,0.365,49,0.244,57,0.997,58,2.123,59,0.809,60,0.356,63,0.666,64,0.562,65,0.342,66,0.307,67,0.35,68,0.345,74,0.643,78,0.339,80,1.233,82,0.734,88,0.659,92,2.193,94,0.785,99,1.04,103,0.328,106,0.892,109,0.381,112,0.537,113,1.156,114,1.841,115,1.272,119,0.875,122,0.465,127,0.474,129,0.38,130,0.383,131,0.809,133,0.958,134,0.531,138,0.569,139,0.472,141,0.73,143,0.88,144,0.323,159,1.007,162,0.508,163,0.285,171,0.678,175,0.544,183,1.675,184,1.024,189,0.977,191,2.314,196,0.389,199,0.614,201,0.401,205,1.491,208,1.334,209,0.861,212,0.744,214,1.829,216,1.42,218,1.238,219,2.634,228,0.522,233,0.686,234,0.431,239,0.361,247,0.35,248,0.785,250,0.855,254,0.383,255,3.867,256,0.59,257,4.132,258,0.483,259,0.544,261,1.309,262,1.283,267,0.391,273,0.41,277,0.891,282,1.08,283,0.393,284,0.535,286,0.41,289,1.896,291,0.322,295,0.465,308,0.361,310,1.298,311,0.414,317,0.518,322,0.607,329,2.892,337,0.744,344,0.675,347,0.799,361,0.349,362,0.437,365,1.561,366,1.11,369,0.643,386,0.747,391,0.365,392,0.493,395,0.45,398,0.276,420,0.663,423,0.317,424,0.998,425,0.748,436,0.776,437,0.443,468,1.377,479,0.353,482,0.621,499,0.629,511,0.957,512,0.433,513,0.383,515,0.334,519,0.37,529,0.494,540,0.852,551,1.907,552,1.131,553,0.714,555,0.879,560,0.721,561,0.422,562,0.443,587,0.527,609,0.412,626,0.929,633,0.417,634,0.362,639,2.76,642,0.891,649,1.142,651,0.237,660,0.362,661,0.711,674,0.44,677,0.393,684,0.527,705,3.053,710,0.506,720,0.714,721,0.541,730,0.612,754,0.564,775,0.478,779,6.327,780,9.048,786,0.666,798,0.34,806,0.483,808,0.756,812,0.834,829,0.465,830,0.83,848,0.651,849,0.465,855,0.483,897,0.946,915,1.179,935,0.512,956,0.394,959,1.26,967,1.822,969,0.359,973,0.891,982,0.417,1010,0.861,1048,0.457,1049,0.483,1065,0.576,1071,0.902,1085,1.311,1103,0.604,1138,0.376,1150,0.469,1151,1.667,1155,0.519,1168,0.483,1183,0.819,1213,0.926,1240,0.519,1310,0.694,1313,0.506,1314,1.041,1315,0.519,1334,1.37,1363,0.428,1391,0.405,1404,0.512,1440,0.544,1447,1.377,1448,0.875,1461,0.825,1463,0.564,1486,0.776,1490,0.383,1503,0.553,1507,1.007,1516,0.378,1517,0.519,1518,0.544,1546,1.008,1599,0.358,1656,0.512,1665,0.519,1670,1.24,1671,0.453,1677,0.385,1679,0.478,1681,1.52,1695,0.59,1701,0.519,1702,0.488,1712,0.461,1718,1.171,1746,1.346,1903,0.494,2045,1.041,2244,1.041,2248,0.469,2262,0.59,2266,0.607,2271,0.494,2330,2.227,2333,0.626,2341,0.44,2345,0.607,2348,0.428,2350,1.4,2356,0.981,2357,0.553,2358,0.607,2359,1.104,2370,0.387,2391,0.544,2400,0.957,2401,1.724,2407,0.607,2408,0.506,2461,0.469,2475,0.564,2651,0.891,2657,0.465,2658,0.59,2666,0.474,2667,0.926,2712,1.91,2715,0.576,2818,0.916,2850,0.465,2851,0.59,2854,1.199,2855,0.683,2856,0.544,2857,1.404,2858,0.733,2859,0.59,2860,0.733,2861,0.733,2862,0.733,2863,0.733,2864,0.733,2865,0.733,2866,0.5,2867,0.576,2868,0.527,2869,0.607,2870,0.446,2871,1.588,2872,0.916,2873,1.06,2874,1.008,2875,1.104,2876,1.08,2877,0.527,2878,0.576,2879,1.131,2880,0.535,2881,0.607,2882,0.607,2883,0.607,2884,0.626,2885,0.607,2886,0.59,2887,0.626,2888,0.59,2889,0.564,2890,0.564,2891,1.131,2892,0.576,2893,0.733,2894,1.06,2895,1.008,2896,0.564,2897,0.494,2898,0.553,2899,0.59,2900,2.053,2901,0.544,2902,0.564,2903,0.59,2904,0.59,2905,0.651,2906,0.494,2907,0.607,2908,0.626,2909,0.607,2910,0.59,2911,0.59,2912,0.607]],["component/81",[220,0.615]],["title/82-1",[38,15.33,115,21.119,931,28.249,1515,30.996]],["name/82-1",[]],["text/82-1",[]],["component/82-1",[]],["title/82-2",[1147,40.436,2913,51.839,2914,56.58]],["name/82-2",[]],["text/82-2",[]],["component/82-2",[]],["title/82-3",[38,15.33,218,20.554,251,26.762,1515,30.996]],["name/82-3",[]],["text/82-3",[]],["component/82-3",[]],["title/82-4",[22,18.346,1515,44.096]],["name/82-4",[]],["text/82-4",[]],["component/82-4",[]],["title/82-5",[22,15.145,38,18.004,2915,56.58]],["name/82-5",[]],["text/82-5",[]],["component/82-5",[]],["title/82-6",[1515,44.096,2667,48.467]],["name/82-6",[]],["text/82-6",[]],["component/82-6",[]],["title/82",[1515,55.912]],["name/82",[1515,2.351]],["text/82",[1,0.731,7,0.791,8,0.465,14,1.115,16,0.459,22,1.491,24,1.068,25,0.978,26,0.623,27,4.958,29,0.623,31,0.888,32,1.037,34,1.712,38,3.404,40,1.286,42,0.747,46,1.359,60,0.218,62,0.393,65,1.072,66,0.962,71,0.82,72,1.87,78,0.572,79,0.992,80,1.105,82,0.836,83,2.297,92,3.503,93,1.04,96,1.626,99,1.296,105,1.736,110,0.94,115,0.94,123,1.486,133,1.53,138,0.933,139,1.085,143,0.782,144,0.544,153,0.752,163,1.256,165,0.668,183,0.651,186,0.901,189,1.796,191,0.484,198,2.132,202,2.037,203,0.613,204,0.611,216,0.433,217,3.42,218,2.376,219,0.725,225,0.503,233,1.123,234,1.351,236,0.618,239,0.608,246,1.185,247,0.59,248,0.48,251,0.64,258,0.815,262,1.439,274,0.597,291,1.009,294,0.679,295,0.784,308,0.608,317,0.317,340,0.875,347,1.469,350,0.916,352,0.842,361,1.922,364,1.087,365,0.997,366,1.773,375,1.244,379,0.588,383,1.238,389,1.215,404,0.784,405,0.972,416,1.197,420,1.087,432,0.564,435,0.807,453,3.758,480,0.716,481,2.968,482,2.106,499,0.554,510,0.901,521,0.556,525,0.616,540,0.521,545,0.458,551,1.101,555,2.598,557,0.672,560,0.634,561,0.712,567,2.669,625,0.731,626,1.042,631,0.832,638,0.492,639,3.79,643,0.712,646,1.964,660,0.611,662,0.771,663,0.799,685,1.532,689,0.547,697,0.672,705,1.089,721,0.886,736,2.152,752,0.695,779,0.721,781,3.418,795,3.243,798,0.574,800,0.699,812,0.95,858,0.995,864,1.351,890,0.916,910,0.662,911,0.888,915,2.776,916,1.767,965,2.376,1060,1.516,1092,0.933,1121,0.703,1147,1.532,1183,1.342,1195,0.823,1259,0.716,1263,0.995,1264,1.36,1272,0.815,1285,1.165,1288,0.777,1295,1.607,1304,0.972,1306,1.607,1391,0.683,1415,0.972,1436,0.972,1461,2.372,1481,0.875,1510,0.842,1515,7.821,1516,4.198,1527,0.875,1528,0.933,1536,1.852,1584,1.36,1615,1.77,1616,2.041,1651,0.951,1660,1.705,1670,4.776,1671,0.764,1679,0.807,1718,1.87,1854,0.791,1879,2.257,2237,2.085,2248,1.473,2253,2.041,2256,3.108,2276,1.056,2338,0.933,2438,1.023,2446,0.933,2461,0.791,2657,3.791,2667,4.873,2680,1.023,2828,0.842,2867,0.972,2914,5.57,2915,2.144,2916,1.097,2917,1.236,2918,1.023,2919,1.236,2920,2.144,2921,1.236,2922,0.951,2923,2.3,2924,1.236,2925,1.236,2926,2.144,2927,2.041,2928,0.842,2929,1.097,2930,2.144,2931,1.236,2932,2.3,2933,1.023,2934,1.236]],["component/82",[220,0.615]],["title/83-1",[41,23.801,109,31.575,189,22.909]],["name/83-1",[]],["text/83-1",[]],["component/83-1",[]],["title/83-2",[41,20.265,109,26.884,1254,42.76,1308,27.266]],["name/83-2",[]],["text/83-2",[]],["component/83-2",[]],["title/83-3",[41,23.801,109,31.575,144,26.705]],["name/83-3",[]],["text/83-3",[]],["component/83-3",[]],["title/83-4",[40,19.323,41,23.801,109,31.575]],["name/83-4",[]],["text/83-4",[]],["component/83-4",[]],["title/83-5",[38,13.347,41,17.644,60,7.931,109,23.407,347,13.892]],["name/83-5",[]],["text/83-5",[]],["component/83-5",[]],["title/83-6",[38,15.33,40,16.452,310,18.634,347,15.956]],["name/83-6",[]],["text/83-6",[]],["component/83-6",[]],["title/83-7",[41,23.801,42,19.714,109,31.575]],["name/83-7",[]],["text/83-7",[]],["component/83-7",[]],["title/83-8",[41,17.644,92,12.088,109,23.407,300,22.794,1204,36.231]],["name/83-8",[]],["text/83-8",[]],["component/83-8",[]],["title/83-9",[41,20.265,80,17.696,109,26.884,2662,45.864]],["name/83-9",[]],["text/83-9",[]],["component/83-9",[]],["title/83-10",[41,20.265,42,16.785,45,16.032,109,26.884]],["name/83-10",[]],["text/83-10",[]],["component/83-10",[]],["title/83-11",[41,20.265,42,16.785,46,13.009,109,26.884]],["name/83-11",[]],["text/83-11",[]],["component/83-11",[]],["title/83",[41,23.801,46,15.279,109,31.575]],["name/83",[41,0.645,46,0.414,109,0.855]],["text/83",[2,0.456,3,0.284,5,0.649,7,0.493,8,1.168,14,0.266,16,0.546,22,1.524,24,0.714,25,0.327,26,0.388,27,0.329,29,0.388,33,0.423,34,0.529,35,0.938,38,3.594,39,1.566,40,1.607,41,5.126,42,1.877,45,1.006,46,2.655,49,0.256,50,0.751,55,0.518,57,0.813,60,0.372,61,0.745,62,0.86,64,1.082,65,0.358,71,0.524,77,0.76,78,0.356,79,0.332,80,1.283,82,0.982,86,0.4,87,0.472,92,2.914,93,0.348,96,2.032,99,3.282,103,1.678,106,0.649,109,5.786,110,0.601,112,0.562,115,1.104,128,0.625,131,2.419,134,0.799,135,0.377,138,1.519,139,1.26,141,4.814,142,0.755,143,0.918,160,0.968,162,0.765,163,1.052,165,0.416,168,0.636,171,0.372,179,0.882,180,0.365,183,0.918,196,0.408,197,0.507,198,0.659,199,0.924,200,0.355,202,0.388,203,0.382,205,1.216,206,0.458,208,0.397,217,0.44,219,1.926,221,0.637,233,2.268,238,0.502,239,0.724,241,0.364,246,0.283,253,0.497,272,0.452,275,0.408,287,0.925,289,0.895,291,0.645,300,3.401,308,1.04,310,0.277,311,0.435,315,0.395,318,0.176,320,0.683,330,0.605,337,1.986,344,1.299,345,3.294,346,5.582,347,3.665,348,0.443,349,0.683,352,0.524,356,0.531,361,0.366,366,0.423,374,0.717,386,0.284,391,0.383,392,0.741,396,0.939,398,0.795,405,0.605,408,0.386,409,0.502,413,0.637,417,0.589,421,0.592,423,0.333,425,0.41,442,0.62,458,3.024,479,1.016,480,0.852,481,0.423,482,1.196,499,0.659,500,0.657,519,0.388,520,0.455,521,2.269,522,0.402,523,0.488,525,2.879,526,0.57,528,0.888,532,1.684,540,0.324,542,0.335,545,0.782,549,0.354,551,0.721,555,0.639,560,1.922,561,0.443,597,0.416,612,0.847,614,0.62,625,0.455,626,0.966,631,0.99,638,0.306,639,1.707,643,2.675,644,0.545,660,1.044,674,0.461,676,0.281,677,0.787,695,0.518,697,1.148,702,0.404,705,2.686,708,0.326,721,1.788,722,0.347,727,0.484,730,0.336,734,0.377,736,0.783,752,0.432,776,0.513,786,0.365,798,0.357,826,0.96,832,0.443,849,0.488,910,0.787,928,0.513,931,0.804,941,0.545,1049,1.781,1085,0.745,1103,0.908,1121,0.438,1128,0.657,1204,4.368,1218,0.592,1231,1.114,1244,0.502,1259,0.852,1264,0.455,1272,1.392,1273,0.497,1285,0.745,1290,1.763,1363,1.892,1364,2.175,1365,2.175,1368,2.175,1369,2.175,1379,0.99,1461,1.24,1483,2.124,1490,0.402,1510,0.524,1527,0.545,1541,0.412,1565,3.492,1647,0.581,1665,0.545,1670,0.472,1677,0.404,1678,0.683,1680,0.561,1712,0.484,1718,0.446,1854,1.352,1855,1.914,2341,0.461,2459,0.657,2481,0.605,2635,0.683,2653,1.371,2657,0.933,2710,0.717,2890,0.592,2935,0.683,2936,0.581,2937,0.717,2938,0.57,2939,0.545,2940,0.769,2941,0.657,2942,4.091,2943,0.717,2944,0.683,2945,0.717,2946,0.62,2947,0.769,2948,0.717,2949,5.778,2950,5.778,2951,2.112,2952,1.471,2953,0.769,2954,2.112,2955,1.471,2956,0.769,2957,4.329,2958,1.471,2959,0.769,2960,1.471,2961,1.471,2962,3.746,2963,1.471]],["component/83",[220,0.615]],["title/84-1",[46,18.508,368,50.099]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["title/84-2",[46,13.009,106,22.806,139,17.379,1261,38.319]],["name/84-2",[]],["text/84-2",[]],["component/84-2",[]],["title/84-3",[236,36.779,375,39.768]],["name/84-3",[]],["text/84-3",[]],["component/84-3",[]],["title/84",[46,23.467]],["name/84",[46,0.987]],["text/84",[5,0.77,6,1.303,8,1.858,14,0.865,16,2.557,24,2.429,34,1.565,36,1.687,38,3.791,39,1.209,40,0.797,42,2.238,45,2.42,46,3.403,48,1.248,54,1.416,71,0.892,77,0.901,78,2.013,79,2.487,83,2.474,85,1.228,86,1.303,87,1.536,92,3.237,94,1.399,96,1.008,99,4.259,103,3.087,104,1.549,106,2.545,110,1.023,111,2.49,112,1.664,113,3.301,114,1.481,115,3.188,124,1.269,128,1.065,129,1.297,139,0.842,142,0.896,143,1.479,163,0.975,171,1.209,191,1.702,195,1.461,217,1.433,218,1.73,219,0.789,222,1.668,232,1.491,239,1.233,248,0.973,251,1.297,255,1.006,273,1.399,276,1.857,283,1.341,291,1.099,295,2.76,311,2.46,312,1.384,313,1.416,315,1.285,329,1.112,341,1.341,360,1.668,365,1.086,377,1.706,378,2.274,380,1.857,383,1.348,386,0.925,389,2.595,392,1.526,395,2.669,401,1.291,407,1.799,416,1.303,420,1.183,425,1.334,432,1.144,436,1.384,437,2.628,460,3.039,481,1.376,482,1.926,532,1.561,549,1.151,596,3.539,620,1.362,639,1.471,643,1.442,646,1.524,663,1.618,677,2.329,684,3.125,705,0.845,752,1.408,816,2.072,849,1.589,920,1.969,965,1.914,1093,2.334,1152,5.603,1231,1.321,1308,1.321,1363,1.461,1391,2.404,1427,1.651,1491,1.799,1515,1.502,1528,1.89,1533,3.411,1605,1.773,1677,1.315,1681,3.387,2248,1.603,2265,2.93,2350,3.727,2366,1.706,2370,3.043,2481,1.969,2490,2.072,2638,2.072,2639,2.139,2818,1.634,2964,2.334,2965,4.055,2966,2.334,2967,2.504,2968,2.504]],["component/84",[220,0.615]],["title/85-1",[42,23.88,46,18.508]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["title/85-2",[46,18.508,646,44.759]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["title/85-3",[46,18.508,273,41.087]],["name/85-3",[]],["text/85-3",[]],["component/85-3",[]],["title/85",[42,16.785,46,13.009,273,28.881,646,31.462]],["name/85",[42,0.414,46,0.321,273,0.712,646,0.776]],["text/85",[2,0.59,14,2.724,22,1.626,24,0.503,25,0.809,26,0.959,27,0.813,34,1.67,40,0.605,42,3.468,46,2.965,48,0.948,49,0.634,57,3.882,60,0.335,64,0.762,77,1.228,79,1.471,80,2.482,82,0.691,84,0.869,92,3.06,94,1.907,95,0.85,99,1.37,105,2.497,122,2.943,128,3.975,129,1.767,143,2.867,163,2.203,165,1.845,172,0.766,197,1.254,198,0.852,201,1.865,218,1.357,219,2.484,236,0.951,239,0.936,251,0.985,254,3.788,262,3.332,264,1.088,267,1.013,273,4.713,275,1.809,285,1.792,310,0.686,318,0.78,320,1.584,365,0.825,366,1.045,367,2.497,389,0.716,392,1.197,396,1.613,398,1.285,425,1.013,437,1.149,481,1.045,482,1.51,499,1.529,519,0.959,520,3.853,521,2.543,525,3.611,526,1.41,527,2.073,529,1.281,555,0.827,556,0.985,571,1.875,597,1.029,626,0.491,638,1.357,639,3.161,641,1.366,643,3.752,644,2.416,645,2.854,646,5.693,651,1.502,676,0.652,705,1.151,721,3.247,736,1.013,795,2.325,804,1.102,825,1.329,859,1.241,909,1.095,965,0.837,968,3.736,969,2.275,1097,1.387,1172,3.44,1174,3.059,1175,3.384,1231,1.003,1275,2.205,1284,1.495,1287,1.688,1288,2.918,1289,1.366,1290,2.226,1291,3.241,1293,4.956,1294,4.44,1295,1.329,1363,2.707,1379,2.298,1490,0.994,1499,3.333,1506,1.624,1507,1.7,1532,2.747,1533,2.018,1585,2.325,1596,1.387,1605,1.347,1659,1.907,1711,1.574,1712,1.196,1855,1.743,2251,1.624,2370,1.8,2436,1.624,2827,1.574,2843,1.241,2846,1.773,2957,1.773,2969,3.412,2970,1.773,2971,1.902,2972,1.902,2973,1.902,2974,1.902,2975,3.18,2976,1.574,2977,1.574]],["component/85",[220,0.615]],["title/86",[92,19.751,225,29.893]],["name/86",[92,1.053]],["text/86",[5,1.471,8,0.309,10,0.719,17,0.93,20,1.299,22,1.194,23,3.309,24,2.981,27,0.653,38,1.861,40,0.486,41,0.599,42,0.496,45,0.868,46,1.205,49,0.509,57,1.843,58,3.263,59,1.611,63,1.326,64,0.612,66,0.639,67,0.73,68,0.719,74,1.282,78,0.707,80,1.91,92,1.685,94,0.854,103,0.685,109,0.795,112,1.07,113,2.214,114,3.299,115,1.581,119,1.744,127,0.987,131,1.497,133,1.326,134,1.058,138,1.135,143,0.951,159,1.928,171,0.738,175,1.133,183,1.949,191,3.265,199,0.668,205,1.611,208,1.442,209,1.716,212,1.483,214,2.811,216,1.355,218,2.219,219,3.439,228,1.04,247,0.73,248,0.594,255,0.614,262,1.705,267,0.814,286,0.854,310,2.012,326,1.952,329,3.705,344,1.861,347,1.195,360,1.018,378,0.798,383,0.822,386,1.034,392,0.981,423,0.661,424,1.912,436,0.844,467,1.054,468,1.041,499,1.253,512,0.903,513,0.798,515,0.695,519,0.771,540,1.631,551,2.14,553,1.968,560,1.436,609,0.859,626,0.721,634,0.755,639,3.688,642,0.969,649,1.582,660,0.755,661,1.417,677,0.818,698,1.114,705,3.913,720,1.423,721,0.588,775,0.997,786,0.724,806,1.007,808,0.822,812,1.597,855,1.007,897,1.029,915,2.257,935,1.067,959,0.953,973,1.775,988,0.937,1010,1.716,1048,0.953,1049,1.007,1065,1.201,1071,1.728,1085,1.96,1103,0.657,1138,0.784,1150,0.978,1168,1.007,1183,1.632,1213,1.007,1240,1.082,1310,1.382,1314,2.074,1334,1.231,1363,0.891,1391,0.844,1404,1.067,1440,1.133,1447,2.636,1448,2.413,1461,1.643,1463,1.176,1486,0.844,1490,0.798,1503,1.153,1507,1.928,1516,0.788,1517,1.082,1518,1.133,1546,2.009,1656,1.067,1677,0.802,1681,1.643,1695,1.23,1701,1.082,1702,1.018,1712,0.961,1718,1.621,1746,1.864,1903,1.029,2183,1.305,2244,2.074,2248,0.978,2262,1.23,2266,1.264,2271,1.029,2330,3.879,2341,0.916,2345,1.264,2350,2.589,2356,1.067,2357,1.153,2358,1.264,2359,2.199,2370,0.806,2391,1.133,2400,1.906,2401,3.188,2408,1.054,2461,0.978,2658,1.23,2665,1.424,2666,0.987,2712,2.936,2715,1.201,2818,2.525,2850,0.969,2866,1.041,2867,1.201,2868,2.009,2869,1.264,2870,0.93,2871,2.374,2872,1.825,2873,2.111,2874,2.009,2876,2.153,2877,1.097,2878,1.201,2880,1.114,2881,1.264,2882,1.264,2883,1.264,2884,1.305,2885,1.264,2887,1.305,2888,1.23,2889,1.176,2890,1.176,2891,2.252,2892,1.201,2894,2.111,2895,2.009,2896,1.176,2897,1.029,2898,1.153,2900,3.678,2901,1.133,2903,1.23,2904,1.23,2906,1.029,2907,1.264,2908,1.305,2909,1.264,2910,1.23,2911,1.23,2912,1.264,2978,1.528,2979,1.528,2980,1.981]],["component/86",[220,0.615]],["title/87-1",[8,14.867,225,29.893]],["name/87-1",[]],["text/87-1",[]],["component/87-1",[]],["title/87-2",[77,33.547]],["name/87-2",[]],["text/87-2",[]],["component/87-2",[]],["title/87-3",[92,25.043]],["name/87-3",[]],["text/87-3",[]],["component/87-3",[]],["title/87-4",[1290,47.978,2981,73.528]],["name/87-4",[]],["text/87-4",[]],["component/87-4",[]],["title/87-5",[92,25.043]],["name/87-5",[]],["text/87-5",[]],["component/87-5",[]],["title/87-6",[2982,86.901]],["name/87-6",[]],["text/87-6",[]],["component/87-6",[]],["title/87",[225,29.893,309,47.069]],["name/87",[225,0.942,309,1.483]],["text/87",[3,2.058,4,1.348,6,1.742,8,2.401,22,1.39,24,1.473,32,1.51,46,0.843,47,1.668,49,1.116,52,1.435,64,1.341,78,1.55,80,1.147,126,2.911,133,1.588,154,3.6,163,1.304,219,2.917,225,3.763,232,3.317,233,1.635,248,3.239,272,1.967,312,1.85,317,1.833,318,1.905,323,1.086,326,3.608,330,2.633,349,4.943,386,2.058,398,1.261,410,2.282,423,1.448,452,4.46,460,2.339,519,1.689,553,1.704,581,1.916,680,2.86,699,2.164,705,3.123,736,1.784,753,1.75,890,2.483,966,2.282,967,3.215,975,4.485,1073,1.871,1152,2.405,1272,2.207,1273,2.164,1351,2.633,1473,5.064,1490,1.75,1514,2.231,1539,2.633,1605,6.553,1656,3.891,1661,2.527,1971,2.071,2244,2.483,2270,3.672,2462,2.371,2469,2.185,2470,4.485,2729,5.193,2868,2.405,2980,3.944,2982,3.121,2983,2.696,2984,3.349,2985,5.571,2986,7.153,2987,5.571,2988,5.571,2989,3.349,2990,3.349,2991,4.001,2992,3.121,2993,2.972,2994,3.349,2995,3.349,2996,3.349,2997,3.349,2998,5.571,2999,3.349,3000,3.349,3001,3.349,3002,3.349,3003,5.571,3004,6.667,3005,7.153,3006,3.349,3007,3.349,3008,3.121,3009,3.349,3010,6.667,3011,7.153,3012,3.349,3013,5.571,3014,5.193,3015,3.349,3016,3.349,3017,7.153,3018,3.349,3019,5.571,3020,3.349,3021,3.349,3022,3.349,3023,3.349]],["component/87",[220,0.615]],["title/88-1",[225,37.903]],["name/88-1",[]],["text/88-1",[]],["component/88-1",[]],["title/88",[]],["name/88",[225,1.594]],["text/88",[2,2.482,3,2.349,5,1.209,8,1.858,14,1.36,15,3.371,21,1.952,32,1.774,35,1.747,40,1.253,41,1.543,42,2.065,49,1.311,50,2.01,52,1.687,58,4.356,73,2.568,74,1.803,77,2.288,92,1.708,106,1.736,112,1.505,130,2.056,139,1.323,141,2.047,142,1.408,153,5.593,157,2.453,159,1.96,163,1.532,168,2.749,189,1.485,200,2.933,219,1.24,225,5.607,241,1.859,242,2.97,247,1.879,248,3.109,249,4.236,260,2.295,273,2.199,275,2.086,318,0.899,323,1.276,324,1.269,326,5.442,328,1.28,329,1.747,330,3.093,337,3.371,363,2.97,378,2.056,379,1.872,391,1.96,398,1.482,423,1.701,426,2.002,440,2.594,479,1.893,499,1.763,501,2.01,545,1.457,551,1.342,554,2.162,581,3.639,598,2.749,638,1.565,705,1.328,849,2.496,892,2.786,893,2.786,894,4.834,965,1.731,973,6.398,974,4.999,1085,1.993,1127,3.492,1145,3.028,1307,3.093,1313,2.714,1404,2.749,1431,3.668,1448,5.729,1486,2.174,1489,2.786,1510,2.681,1546,4.567,1645,2.474,2873,2.97,3024,3.935,3025,3.36,3026,3.36,3027,3.935,3028,3.492,3029,2.786]],["component/88",[220,0.615]],["title/89",[3,27.167,225,29.893]],["name/89",[3,1.448]],["text/89",[]],["component/89",[220,0.615]],["title/90-1",[14,25.409,24,19.438]],["name/90-1",[]],["text/90-1",[]],["component/90-1",[]],["title/90-2",[3,22.428,14,20.977,619,45.004]],["name/90-2",[]],["text/90-2",[]],["component/90-2",[]],["title/90-3",[3,27.167,14,25.409]],["name/90-3",[]],["text/90-3",[]],["component/90-3",[]],["title/90-4",[134,35.263]],["name/90-4",[]],["text/90-4",[]],["component/90-4",[]],["title/90-5",[3,27.167,137,36.335]],["name/90-5",[]],["text/90-5",[]],["component/90-5",[]],["title/90-6",[4,29.598,14,25.409]],["name/90-6",[]],["text/90-6",[]],["component/90-6",[]],["title/90-7",[3,19.096,10,24.33,11,22.408,14,17.861]],["name/90-7",[]],["text/90-7",[]],["component/90-7",[]],["title/90-8",[10,28.575,11,26.317,14,20.977]],["name/90-8",[]],["text/90-8",[]],["component/90-8",[]],["title/90-9",[4,29.598,40,23.406]],["name/90-9",[]],["text/90-9",[]],["component/90-9",[]],["title/90-10",[4,24.435,134,22.959,347,18.74]],["name/90-10",[]],["text/90-10",[]],["component/90-10",[]],["title/90-11",[4,29.598,1071,32.842]],["name/90-11",[]],["text/90-11",[]],["component/90-11",[]],["title/90-12",[3,22.428,14,20.977,225,24.678]],["name/90-12",[]],["text/90-12",[]],["component/90-12",[]],["title/90",[3,19.096,4,20.805,12,27.266,438,30.996]],["name/90",[438,2.351]],["text/90",[0,0.507,3,4.331,4,4.718,5,0.589,6,0.53,8,2.31,9,2.077,10,1.923,11,0.441,12,0.537,13,0.755,14,2.928,22,1.019,24,2.833,25,0.433,35,0.851,39,1.313,40,1.812,42,0.883,47,0.507,49,0.339,52,0.436,53,0.602,57,0.392,60,0.917,62,1.094,63,0.483,78,0.471,82,2.983,85,2.29,86,0.998,100,1.112,106,0.449,131,4.467,134,2.88,135,0.499,136,0.694,137,1.344,138,1.657,139,0.342,145,1.119,146,1.587,147,1.587,152,0.694,160,0.879,162,2.223,163,1.059,172,0.772,177,0.54,180,0.483,194,1.119,200,1.254,203,1.349,204,2.019,219,1.641,225,0.414,234,0.598,239,0.501,241,0.906,254,0.532,267,1.449,270,1.71,285,1.428,286,1.52,299,0.488,310,0.692,337,1.442,343,0.658,347,1.896,348,2.69,365,0.441,389,1.538,390,0.479,391,0.955,392,0.357,398,0.722,399,0.989,408,0.963,423,0.829,424,1.344,426,0.518,453,1.206,464,1.925,494,0.551,499,0.456,517,1.399,522,0.532,537,5.07,540,1.45,548,1.953,551,0.654,553,0.518,554,0.559,556,0.527,569,3.526,626,1.054,638,1.625,660,0.503,661,1.378,676,0.657,678,0.551,705,0.344,706,1.278,708,0.432,746,4.748,748,1.323,762,0.711,786,0.483,808,1.85,830,0.602,859,1.775,885,1.422,925,0.559,956,0.548,993,3.407,1004,1.239,1071,1.215,1137,0.755,1183,1.119,1248,0.686,1308,0.537,1318,3.865,1320,3.464,1321,3.526,1322,3.526,1323,1.983,1324,2.052,1325,2.052,1326,3.526,1327,3.526,1328,3.99,1329,3.595,1330,2.25,1331,1.587,1332,0.903,1334,1.196,1335,0.783,1337,2.052,1354,1.476,1387,0.711,1396,0.731,1398,0.869,1573,3.029,1599,0.937,1675,0.64,1716,1.587,2196,0.82,2237,0.658,2339,1.34,2369,1.34,2941,0.869,3030,2.413,3031,2.25,3032,2.322,3033,2.25,3034,2.25,3035,2.25,3036,2.322,3037,0.903,3038,1.702,3039,1.702,3040,0.949,3041,0.949,3042,0.949,3043,0.949,3044,0.869,3045,0.949,3046,0.949,3047,0.949,3048,1.788,3049,0.903,3050,1.018,3051,1.918,3052,1.018,3053,1.018,3054,1.018,3055,1.018,3056,1.018,3057,1.018,3058,1.018,3059,1.018,3060,1.018,3061,1.018,3062,7.651,3063,1.638,3064,0.903,3065,6.153,3066,1.702,3067,0.903,3068,0.903,3069,2.413,3070,0.903,3071,1.702,3072,0.903,3073,2.322,3074,0.903,3075,0.842,3076,0.869,3077,2.413,3078,0.869,3079,0.842,3080,1.638,3081,1.378,3082,0.869]],["component/90",[220,0.615]],["title/91-1",[7,47.069,224,50.099]],["name/91-1",[]],["text/91-1",[]],["component/91-1",[]],["title/91-2",[3,34.447]],["name/91-2",[]],["text/91-2",[]],["component/91-2",[]],["title/91-3",[4,37.529]],["name/91-3",[]],["text/91-3",[]],["component/91-3",[]],["title/91",[3,22.428,4,24.435,131,18.98]],["name/91",[385,2.02]],["text/91",[3,4.95,4,4.826,5,1.919,8,2.159,12,1.467,14,3.351,16,1.032,22,1.846,24,2.823,25,2.025,34,2.248,35,1.235,38,0.825,39,4.682,40,0.885,41,1.868,42,0.903,45,1.477,46,1.199,52,2.677,53,2.816,61,0.982,65,1.296,66,2.612,74,1.274,78,1.287,82,1.011,99,1.117,104,1.72,110,1.946,111,3.574,112,2.389,116,1.537,130,1.454,131,0.87,134,4.04,136,1.895,137,1.375,138,2.533,139,1.602,142,1.704,143,0.945,154,1.797,157,1.734,160,2.862,162,2.261,163,1.083,169,1.196,189,1.798,227,1.563,239,1.369,254,3.264,277,4.693,281,1.72,294,1.529,308,1.369,311,1.573,313,1.573,316,1.645,342,1.815,347,2.568,355,1.693,361,1.324,364,1.314,365,2.708,369,2.182,380,2.062,389,1.048,390,1.309,392,1.671,396,2.171,398,1.048,423,2.059,426,1.415,427,2.14,494,1.504,512,1.645,516,2.593,517,2.029,538,3.372,542,1.21,545,1.764,546,2.14,549,1.279,551,2.131,556,2.466,568,1.3,581,1.592,597,2.576,626,1.228,746,1.734,748,3.285,752,3.511,808,1.497,816,2.301,884,1.781,956,1.497,965,2.096,1048,1.734,1077,1.943,1088,1.815,1095,1.497,1262,1.918,1391,1.537,1396,1.998,1591,1.853,2732,3.372,2808,1.918,3025,2.376,3075,2.301,3083,2.593,3084,2.593,3085,2.468,3086,2.468]],["component/91",[220,0.615]],["title/92-1",[3,27.167,5,22.593]],["name/92-1",[]],["text/92-1",[]],["component/92-1",[]],["title/92",[]],["name/92",[5,1.204]],["text/92",[3,3.912,4,1.521,5,3.698,14,3.413,21,1.875,22,0.943,24,2.057,34,1.36,40,1.959,41,1.481,42,1.998,45,1.908,46,1.959,49,2.051,50,1.93,57,3.454,58,2.917,59,2.176,63,1.791,64,1.514,66,1.58,67,1.804,68,1.779,93,1.709,106,1.667,109,1.965,111,3.521,112,2.976,121,2.204,129,1.956,130,1.974,131,4.601,134,2.944,135,3.016,138,2.495,142,3.787,143,2.645,156,1.737,157,2.356,160,2.819,161,5.874,162,2.227,241,1.785,254,4.067,274,1.824,347,1.166,425,2.013,480,2.19,482,1.672,501,1.93,523,2.397,525,1.882,549,1.737,551,1.289,552,3.042,626,0.974,678,2.044,744,2.111,746,2.356,919,2.491,944,3.353,1000,2.136,1001,2.076,1109,3.353,1406,2.099,1412,2.907,1446,2.97,1447,2.574,1448,2.356,1514,2.517,1515,2.266,1517,2.675,1518,2.801,1909,2.337,2377,2.675,3044,3.227,3087,6.152,3088,3.778,3089,6.152,3090,3.778,3091,3.778,3092,3.778]],["component/92",[220,0.615]],["title/93-1",[3,27.167,40,23.406]],["name/93-1",[]],["text/93-1",[]],["component/93-1",[]],["title/93-2",[4,29.598,40,23.406]],["name/93-2",[]],["text/93-2",[]],["component/93-2",[]],["title/93-3",[3,19.096,4,20.805,32,23.302,512,30.56]],["name/93-3",[]],["text/93-3",[]],["component/93-3",[]],["title/93-4",[3,22.428,522,31.721,1071,27.113]],["name/93-4",[]],["text/93-4",[]],["component/93-4",[]],["title/93-5",[4,24.435,522,31.721,1071,27.113]],["name/93-5",[]],["text/93-5",[]],["component/93-5",[]],["title/93",[3,27.167,4,29.598]],["name/93",[3,0.856,4,0.932]],["text/93",[2,0.712,3,4.938,4,5.338,5,1.657,8,0.464,12,1.211,14,2.241,16,0.852,22,1.345,24,2.319,29,1.158,32,1.035,34,1.451,35,1.019,38,1.196,39,1.108,40,2.967,41,2.114,45,0.712,46,0.578,47,1.144,49,0.765,61,1.902,63,3.857,65,1.07,69,2.558,74,1.847,80,1.381,82,1.96,93,1.824,109,2.097,128,0.976,131,0.718,134,3.318,136,2.747,137,1.134,142,0.821,159,1.144,160,2.47,161,1.733,162,3.374,163,1.57,168,2.331,200,1.059,204,1.134,218,1.604,227,1.29,254,1.2,275,1.217,277,1.456,308,4.004,310,2.338,317,1.033,347,1.665,355,1.397,378,1.2,392,0.805,396,0.798,398,2.442,499,1.807,501,2.06,511,1.564,512,3.835,513,2.107,521,4.189,522,3.858,525,1.144,527,4.726,540,1.7,542,1.753,545,0.85,546,1.767,549,1.055,551,1.376,556,2.088,591,1.444,626,1.904,676,1.411,721,2.497,752,1.29,776,1.529,859,4.232,955,1.444,965,1.01,1004,3.484,1058,2.536,1059,1.397,1071,2.897,1118,1.367,1122,1.848,1137,1.702,1187,1.019,1244,1.498,1308,1.211,1461,1.348,1500,2.558,1507,1.144,1591,1.529,1610,8.237,1849,1.546,2264,4.239,2819,1.961,2941,1.961,3026,3.444,3044,1.961,3081,2.896,3093,3.578,3094,5.392,3095,5.392,3096,2.296]],["component/93",[220,0.615]],["title/94-1",[22,18.346,134,27.811]],["name/94-1",[]],["text/94-1",[]],["component/94-1",[]],["title/94-2",[77,18.597,1282,37.695,1284,40.63,1480,34.068]],["name/94-2",[]],["text/94-2",[]],["component/94-2",[]],["title/94-3",[3,27.167,4,29.598]],["name/94-3",[]],["text/94-3",[]],["component/94-3",[]],["title/94",[1096,50.71,3097,68.537]],["name/94",[385,2.02]],["text/94",[1,4.392,3,2.979,4,3.245,5,1.085,8,1.742,10,0.931,11,1.531,14,2.012,16,1.31,22,2.473,24,0.523,25,0.84,26,0.997,27,2.489,34,1.271,40,0.629,45,2.823,46,2.399,47,0.985,49,0.659,52,0.847,57,0.761,61,2.621,63,0.937,74,1.618,77,2.901,80,0.677,82,2.93,92,1.995,93,0.894,106,0.872,112,0.756,116,1.092,130,2.502,131,1.82,134,3.996,136,1.347,137,1.745,138,0.802,141,1.028,142,0.707,152,1.347,160,1.618,162,3.294,163,0.77,168,0.855,174,1.043,180,0.937,183,0.56,189,1.333,194,1.153,212,1.872,218,0.786,219,0.623,225,2.72,241,0.934,251,3.464,254,1.033,264,1.131,267,2.55,283,1.891,292,2.501,294,1.086,300,1.001,308,2.356,310,0.713,316,1.169,344,1.699,347,2.489,361,0.941,364,2.262,365,1.531,366,1.086,386,1.305,390,2.254,392,1.239,396,0.687,398,1.803,423,2.892,426,3.403,429,1.805,430,1.782,452,1.233,481,1.086,499,0.886,508,1.521,513,1.033,515,0.9,517,2.576,521,2.617,525,0.985,535,1.169,537,1.266,538,2.501,539,1.381,540,0.834,541,1.688,542,2.532,543,1.554,544,1.492,545,1.308,546,1.521,547,0.897,549,0.909,551,1.986,555,1.536,568,0.924,571,1.086,582,1.442,588,1.636,589,2.603,590,1.636,591,1.243,592,1.521,593,1.688,594,1.521,595,1.075,596,1.213,619,1.466,630,1.4,638,0.786,649,1.997,651,1.143,677,1.058,679,1.688,715,5.061,716,2.134,717,1.554,721,2.241,729,1.213,749,1.098,830,2.831,1088,1.29,1096,1.363,1187,2.125,1231,1.043,1259,1.146,1269,1.492,1270,1.118,1275,3.762,1280,3.39,1284,2.777,1305,1.213,1391,1.092,1506,6.885,1519,1.554,1525,3.492,1579,1.4,1659,1.105,1854,1.266,1904,2.922,1992,2.467,2668,1.636,2778,2.537,3097,1.843,3098,1.977,3099,3.292,3100,1.843,3101,1.843,3102,1.843,3103,1.843,3104,1.843,3105,3.532]],["component/94",[220,0.615]],["title/95-1",[1334,41.017]],["name/95-1",[]],["text/95-1",[]],["component/95-1",[]],["title/95",[]],["name/95",[1334,1.724]],["text/95",[3,3.829,5,1.822,8,2.095,16,2.2,22,1.479,45,3.954,46,3.068,49,1.976,77,3.142,80,2.03,92,2.784,110,2.423,135,2.907,139,1.994,161,6.589,162,4.412,251,3.07,299,2.842,308,2.918,310,2.138,337,3.143,347,1.83,363,4.475,367,3.19,376,4.562,390,2.791,391,2.953,404,3.761,417,2.375,426,3.016,499,2.656,501,3.029,509,4.475,545,2.195,597,3.207,626,1.529,649,3.352,1004,3.831,1231,3.128,1334,5.951,1335,4.562,1486,3.276,1883,5.261,2355,5.261,2414,4.324,2461,3.795,2936,4.475,3106,5.929,3107,5.929]],["component/95",[220,0.615]],["title/96-1",[433,67.995]],["name/96-1",[]],["text/96-1",[]],["component/96-1",[]],["title/96",[]],["name/96",[433,2.859]],["text/96",[8,2.248,16,3.105,38,2.482,49,2.789,58,5.271,65,3.899,110,3.419,248,4.319,317,2.849,326,4.221,343,5.408,386,4.108,389,3.152,390,3.939,396,2.908,433,9.702,479,4.026,545,3.098,554,4.599,950,6.205,967,3.761,973,5.309,1242,6.205,1448,5.218,1605,5.925,2475,6.439,3108,7.147]],["component/96",[220,0.615]],["title/97-1",[966,63.523]],["name/97-1",[]],["text/97-1",[]],["component/97-1",[]],["title/97-2",[14,32.218]],["name/97-2",[]],["text/97-2",[]],["component/97-2",[]],["title/97-3",[24,19.438,3109,52.06]],["name/97-3",[]],["text/97-3",[]],["component/97-3",[]],["title/97-4",[134,35.263]],["name/97-4",[]],["text/97-4",[]],["component/97-4",[]],["title/97-5",[401,37.901,547,33.362]],["name/97-5",[]],["text/97-5",[]],["component/97-5",[]],["title/97-6",[41,28.83,962,39.17]],["name/97-6",[]],["text/97-6",[]],["component/97-6",[]],["title/97",[892,52.06,893,52.06]],["name/97",[892,1.164,893,1.164,894,0.993]],["text/97",[0,1.695,2,1.055,4,1.369,8,2.156,9,2.055,10,1.602,11,1.475,14,3.226,15,1.803,22,2.1,24,2.951,35,3.211,40,2.303,41,1.334,49,1.134,55,2.291,61,1.2,65,1.585,67,1.625,68,1.602,74,2.586,82,2.051,99,1.366,105,1.831,106,1.501,110,2.306,131,2.632,134,3.531,139,1.144,153,3.436,162,1.232,163,2.198,168,1.471,169,1.462,174,1.795,189,2.73,204,1.681,248,1.322,253,2.198,274,2.725,308,1.675,316,2.012,342,2.22,347,3.575,367,1.831,369,1.559,398,1.281,401,2.909,423,1.471,436,3.119,454,4.929,459,2.522,482,1.506,515,2.569,519,5.078,520,2.012,521,1.529,527,1.52,537,2.178,547,2.561,551,1.926,565,1.859,579,2.815,619,2.522,622,1.89,623,1.947,638,2.245,661,1.723,703,1.695,746,2.121,752,1.912,809,2.444,854,2.481,888,3.171,889,6.742,891,4.054,892,6.61,893,3.996,925,1.87,941,2.409,966,2.318,971,4.26,972,2.568,1004,2.198,1071,1.52,1088,2.22,1187,4.145,1275,2.198,1340,2.087,1427,2.243,1461,3.315,1490,1.778,3109,2.409,3110,5.009,3111,3.019,3112,2.674,3113,3.019,3114,2.568,3115,3.019,3116,3.402,3117,5.009,3118,3.402,3119,5.009,3120,3.402,3121,3.402,3122,3.402,3123,2.815]],["component/97",[220,0.615]],["title/98-1",[966,63.523]],["name/98-1",[]],["text/98-1",[]],["component/98-1",[]],["title/98-2",[14,32.218]],["name/98-2",[]],["text/98-2",[]],["component/98-2",[]],["title/98-3",[41,28.83,962,39.17]],["name/98-3",[]],["text/98-3",[]],["component/98-3",[]],["title/98",[153,44.759,973,46.644]],["name/98",[153,0.776,894,0.77,973,0.808,974,1.001]],["text/98",[0,1.934,2,1.204,8,2.283,9,2.345,10,1.827,11,1.683,14,2.739,22,2.499,24,3.108,35,3.519,41,1.522,60,1.606,105,2.088,110,1.586,131,3.902,143,1.319,152,2.645,153,6.872,162,1.405,163,1.511,168,1.678,174,2.048,179,2.328,189,2.373,194,2.264,213,2.145,308,1.91,315,1.992,319,2.157,342,2.533,347,1.941,361,2.992,391,1.934,398,1.462,515,1.767,519,3.172,520,2.295,521,1.744,524,2.508,525,1.934,527,1.734,547,2.853,554,2.133,623,2.221,626,1.622,638,2.501,703,1.934,728,2.711,731,2.485,746,2.42,814,3.315,854,2.831,891,4.517,894,3.799,925,2.133,966,2.645,973,8.722,974,3.051,1187,4.046,1275,2.508,1318,3.211,1337,2.929,1427,2.558,1461,3.693,1643,6.872,2462,4.452,2818,5.173,3123,3.211,3124,3.881,3125,5.58,3126,3.444,3127,3.444,3128,3.444,3129,3.881,3130,3.881,3131,3.881]],["component/98",[220,0.615]],["title/99-1",[966,63.523]],["name/99-1",[]],["text/99-1",[]],["component/99-1",[]],["title/99-2",[14,32.218]],["name/99-2",[]],["text/99-2",[]],["component/99-2",[]],["title/99-3",[41,28.83,962,39.17]],["name/99-3",[]],["text/99-3",[]],["component/99-3",[]],["title/99",[894,44.422,975,59.201]],["name/99",[894,1.399,975,1.865]],["text/99",[0,1.925,2,1.943,8,2.163,9,2.334,14,3.141,22,2.268,24,2.828,35,3.508,40,3.181,41,1.515,60,1.104,62,1.23,105,3.371,110,1.579,131,1.208,152,2.633,160,1.77,163,1.505,168,1.67,169,1.661,189,2.365,198,1.731,216,1.353,228,1.437,271,2.497,275,2.048,308,3.084,315,1.983,342,2.521,347,2.44,371,2.389,383,2.079,423,1.67,515,1.759,519,6.286,520,2.285,521,4.086,524,2.497,525,1.925,527,1.726,551,1.318,553,1.966,572,3.197,623,2.211,626,0.996,638,3.143,651,1.251,690,2.574,699,2.497,703,1.925,708,1.638,721,2.412,746,2.409,749,3.481,825,2.699,854,2.818,887,2.159,891,4.5,925,2.123,966,2.633,967,1.737,975,10.641,1275,2.497,1293,2.147,1372,3.111,1427,2.547,1461,3.679,1597,9.45,1659,3.501,2033,3.679,2484,3.429,2906,7.59,3123,3.197,3132,3.601,3133,3.864,3134,3.864,3135,5.84,3136,3.864,3137,3.864]],["component/99",[220,0.615]],["title/100-1",[966,63.523]],["name/100-1",[]],["text/100-1",[]],["component/100-1",[]],["title/100-2",[14,32.218]],["name/100-2",[]],["text/100-2",[]],["component/100-2",[]],["title/100-3",[41,28.83,962,39.17]],["name/100-3",[]],["text/100-3",[]],["component/100-3",[]],["title/100",[15,27.398,153,31.462,326,26.069,894,31.225]],["name/100",[15,0.675,153,0.776,326,0.643,894,0.77]],["text/100",[2,2.307,4,1.931,8,1.842,9,2.898,14,3.149,15,5.889,20,2.227,22,2.273,24,3.35,25,2.039,35,3.302,41,1.881,60,0.845,68,4.832,105,2.581,110,3.039,131,3.675,134,1.814,152,3.268,153,4.528,159,3.705,168,2.074,189,1.81,216,1.68,274,2.316,308,2.361,315,3.817,326,5.928,342,3.13,390,2.258,423,2.074,515,2.183,519,3.752,521,2.156,524,3.1,525,2.39,527,2.143,542,2.086,638,2.958,651,1.553,660,2.37,703,2.39,746,2.991,749,2.665,761,3.1,774,5.724,808,2.581,809,3.445,854,3.498,891,3.445,925,2.636,966,3.268,1187,4.557,1275,3.1,1314,3.556,1461,2.817,1643,6.249,3112,3.771,3123,3.969,3138,4.797,3139,4.257,3140,7.438,3141,4.797,3142,4.797,3143,4.471]],["component/100",[220,0.615]],["title/101-1",[966,63.523]],["name/101-1",[]],["text/101-1",[]],["component/101-1",[]],["title/101-2",[14,32.218]],["name/101-2",[]],["text/101-2",[]],["component/101-2",[]],["title/101-3",[41,28.83,962,39.17]],["name/101-3",[]],["text/101-3",[]],["component/101-3",[]],["title/101",[249,40.436,326,30.616,894,36.672]],["name/101",[249,1.095,326,0.829,894,0.993]],["text/101",[0,1.858,2,1.157,8,2.341,9,2.253,14,3.636,22,1.924,24,3.061,25,1.585,35,3.952,37,1.774,41,1.462,42,1.977,60,1.359,62,1.938,80,1.277,105,4.15,110,3.151,131,3.471,152,2.541,159,1.858,162,3.222,163,3.003,168,1.612,169,1.603,189,2.297,216,1.306,249,7.713,271,3.933,308,3.796,315,1.914,319,2.072,326,5.84,337,3.227,342,2.433,408,1.873,417,1.494,423,1.612,515,1.697,519,1.881,520,2.205,521,1.676,524,2.41,525,1.858,527,1.666,542,2.647,553,1.897,623,2.134,638,3.54,651,1.207,703,1.858,746,2.325,749,3.382,809,2.678,854,2.72,887,2.084,891,2.678,916,1.631,925,2.049,960,1.787,966,2.541,976,8.297,1059,2.27,1082,2.096,1095,2.006,1183,2.175,1226,2.175,1275,2.41,1406,2.072,1427,2.458,1461,3.574,1490,1.949,1694,2.605,1928,2.365,2906,6.606,3109,5.461,3123,3.085,3144,3.309,3145,3.309,3146,3.729,3147,3.729,3148,3.729,3149,3.729,3150,3.729,3151,3.476,3152,3.729]],["component/101",[220,0.615]],["title/102-1",[77,26.457,225,29.893]],["name/102-1",[]],["text/102-1",[]],["component/102-1",[]],["title/102",[]],["name/102",[77,1.41]],["text/102",[8,1.569,22,2.637,38,3.564,40,2.47,42,2.52,45,4.002,46,1.953,77,4.856,78,3.591,79,3.345,80,2.657,84,3.544,85,3.805,86,4.037,87,4.761,88,4.957,89,4.264,96,3.124,106,3.424,111,4.441,115,3.171,128,3.299,135,3.805,236,3.882,249,5.169,421,5.971,440,5.115,830,4.588,1147,5.169,1363,4.527,1540,6.42,1655,6.248]],["component/102",[220,0.615]],["title/103-1",[7,59.681]],["name/103-1",[]],["text/103-1",[]],["component/103-1",[]],["title/103-2",[1444,66.009]],["name/103-2",[]],["text/103-2",[]],["component/103-2",[]],["title/103-3",[45,18.829,77,21.842,310,21.885]],["name/103-3",[]],["text/103-3",[]],["component/103-3",[]],["title/103-4",[45,22.808,63,34.859]],["name/103-4",[]],["text/103-4",[]],["component/103-4",[]],["title/103",[40,23.406,45,22.808]],["name/103",[40,0.737,45,0.718]],["text/103",[1,1.004,2,0.955,8,2.453,10,0.799,14,1.795,22,1.68,24,1.373,27,1.317,32,2.342,34,0.611,37,0.808,40,2.672,45,4.174,46,2.564,52,1.32,55,1.144,57,2.593,60,0.299,61,0.599,62,0.98,63,3.193,65,0.791,71,1.506,74,0.778,77,4.709,78,0.786,80,2.519,82,0.617,83,1.752,87,1.042,88,0.797,91,0.826,93,0.768,94,1.721,95,1.888,96,0.683,100,3.01,104,1.05,105,0.914,106,1.359,111,0.972,115,0.694,117,0.96,123,1.99,128,1.309,129,2.689,131,0.531,135,1.51,138,1.249,139,1.036,141,2.702,142,1.102,160,0.778,162,1.115,163,2.022,168,0.734,172,0.683,179,1.018,198,0.761,216,0.595,236,0.849,246,1.131,254,1.61,271,1.097,272,0.997,275,0.9,277,1.077,292,1.202,294,0.933,308,0.836,310,1.11,347,1.603,365,1.833,379,0.808,389,1.592,390,0.799,392,1.483,396,0.59,397,2.052,398,1.592,417,1.234,425,0.904,436,0.938,437,1.026,447,0.811,480,0.984,481,0.933,482,1.871,499,1.38,513,2.714,514,1.307,520,1.821,521,3.554,522,3.845,525,2.106,526,1.259,527,0.758,529,1.144,539,1.186,545,0.629,551,0.579,556,0.879,568,2.428,581,0.972,613,1.405,626,1.737,641,1.22,643,4.237,645,0.856,651,1.368,674,1.847,676,1.762,715,1.157,721,2.318,764,2.246,779,0.99,786,1.46,798,1.43,826,2.758,830,1.004,838,1.077,884,1.087,916,0.743,925,0.933,988,1.042,1048,1.059,1071,1.376,1103,2.233,1226,0.99,1263,1.367,1270,0.96,1275,1.097,1289,1.22,1293,4.088,1303,1.367,1363,0.99,1458,1.202,1481,1.202,1482,1.972,1490,0.887,1499,1.22,1520,2.421,1523,1.405,1540,2.548,1541,3.223,1542,2.052,1544,2.099,1655,1.367,1659,0.949,1671,1.05,1701,2.181,1855,0.867,2270,1.119,2357,1.281,2366,2.099,2472,1.307,2826,1.583,2827,1.405,2839,1.45,2840,1.583,2866,2.88,2948,1.583,3153,1.171,3154,1.698,3155,1.698,3156,1.583]],["component/103",[220,0.615]],["title/104-1",[42,19.714,45,18.829,916,26.548]],["name/104-1",[]],["text/104-1",[]],["component/104-1",[]],["title/104",[42,19.714,45,18.829,273,33.919]],["name/104",[42,0.534,45,0.51,273,0.919]],["text/104",[14,3.094,22,1.164,25,1.983,26,2.353,34,1.679,40,1.485,42,3.774,45,4.093,46,2.253,57,4.834,80,3.065,82,1.696,84,2.131,128,3.095,198,2.09,219,3.188,241,2.204,254,5.731,262,3.189,272,2.74,273,4.068,275,2.473,310,1.682,318,1.066,320,3.38,337,2.473,375,2.523,398,2.742,425,3.878,437,6.11,459,3.459,480,4.219,482,2.065,521,3.272,525,4.459,526,3.459,527,3.252,529,3.143,556,2.416,626,1.203,631,3.143,639,2.461,645,2.353,676,0.892,721,1.796,776,3.108,859,3.044,969,4.389,1175,3.403,1259,2.704,1275,4.704,1285,2.363,1288,2.934,1291,3.259,1302,4.14,1585,4.96,1659,4.068,1711,3.86,1712,2.934,2370,3.841]],["component/104",[220,0.615]],["title/105-1",[45,28.919]],["name/105-1",[]],["text/105-1",[]],["component/105-1",[]],["title/105-2",[45,22.808,368,50.099]],["name/105-2",[]],["text/105-2",[]],["component/105-2",[]],["title/105-3",[45,16.032,106,22.806,139,17.379,1261,38.319]],["name/105-3",[]],["text/105-3",[]],["component/105-3",[]],["title/105-4",[236,36.779,375,39.768]],["name/105-4",[]],["text/105-4",[]],["component/105-4",[]],["title/105",[]],["name/105",[45,1.216]],["text/105",[4,1.026,8,2.16,14,0.881,22,0.636,24,1.844,29,2.228,32,1.149,34,2.104,36,3.938,38,2.34,39,1.231,40,0.811,42,2.265,45,4.24,46,2.779,48,2.201,71,0.908,77,4.722,78,2.044,79,1.905,80,1.513,81,1.737,82,0.927,87,4.279,89,1.401,90,1.962,92,0.685,94,4.408,95,3.115,96,1.026,104,3.616,106,1.95,110,1.805,115,1.042,116,1.409,119,1.589,120,1.576,121,1.487,122,1.617,123,1.647,128,1.878,129,2.288,139,1.486,142,0.912,143,0.866,163,2.716,189,0.962,191,0.997,206,1.518,233,1.245,239,2.175,248,0.99,251,1.32,262,0.908,273,1.424,276,1.89,295,1.617,300,2.238,310,0.919,313,2.498,321,1.358,341,1.365,355,3.559,361,1.213,365,1.105,367,2.377,377,3.01,378,3.056,379,2.102,380,1.89,383,1.372,389,3.696,390,2.08,396,0.886,401,1.314,407,1.831,432,1.164,437,1.54,480,1.477,481,1.401,482,1.128,499,1.142,549,1.172,613,2.109,620,1.386,622,1.416,626,0.657,653,1.758,677,1.365,689,1.955,699,1.647,700,1.717,755,1.962,838,2.803,908,1.54,916,2.557,965,2.572,1069,2.943,1071,1.139,1074,1.962,1247,2.262,1285,2.238,1289,1.831,1308,1.345,1427,1.68,1528,1.924,1540,4.838,1541,4.223,1542,3.895,1633,1.805,1659,1.424,1855,2.987,2045,1.89,2297,2.004,2340,3.086,2350,1.379,2437,1.737,2459,2.177,2638,2.109,2639,2.177,2734,1.859,2818,1.663,2964,2.376,3081,3.173,3157,2.549,3158,2.549,3159,2.549]],["component/105",[220,0.615]],["title/106",[468,50.099,519,37.087]],["name/106",[519,1.977]],["text/106",[2,2.188,8,1.426,22,2.469,24,1.865,40,2.246,52,3.024,60,1.243,62,2.246,91,3.432,92,1.895,99,2.833,103,4.433,110,2.883,112,4.737,142,3.539,156,3.243,162,2.554,169,4.253,183,1.997,219,2.224,285,3.704,398,2.657,429,3.605,430,5.763,432,3.222,468,4.807,519,3.559,542,3.068,545,3.663,622,3.92,626,1.819,687,4.559,960,3.381,1310,3.486,1599,3.446,3160,7.055,3161,7.055,3162,7.055,3163,6.576,3164,6.576,3165,6.025,3166,7.055,3167,7.055,3168,7.055]],["component/106",[220,0.615]],["title/107-1",[404,59.142]],["name/107-1",[]],["text/107-1",[]],["component/107-1",[]],["title/107-2",[1515,55.912]],["name/107-2",[]],["text/107-2",[]],["component/107-2",[]],["title/107",[248,28.565,1208,59.201]],["name/107",[248,0.9,1208,1.865]],["text/107",[2,1.777,5,1.761,8,2.054,42,1.861,52,2.456,62,1.824,65,2.67,85,2.809,91,2.788,131,2.662,139,1.927,141,2.981,142,2.05,156,2.634,162,2.074,163,3.315,169,3.66,183,2.41,189,2.163,216,2.006,218,4.04,248,2.226,310,4.054,347,2.628,396,1.991,404,3.635,429,2.928,430,4.294,432,2.617,438,3.436,545,3.152,645,2.89,651,1.855,660,2.832,678,4.605,689,2.536,720,2.915,730,2.499,960,2.746,1150,5.45,1208,6.855,1310,2.832,1412,4.409,1515,6.744,1599,2.798,2397,6.006,3169,5.341,3170,5.73,3171,5.73,3172,8.675,3173,5.73,3174,5.341,3175,5.73,3176,5.73,3177,5.341,3178,5.73,3179,5.73,3180,5.73]],["component/107",[220,0.615]],["title/108",[3181,82.733]],["name/108",[3181,3.478]],["text/108",[2,2.975,8,1.939,52,4.111,60,1.69,91,4.666,156,4.408,162,3.471,169,5.221,429,4.9,430,6.126,432,4.379,545,4.497,595,5.214,960,4.596,1310,4.739,1516,4.943,1599,4.683,3182,9.59,3183,9.59]],["component/108",[220,0.615]],["title/109",[647,50.099,3184,65.249]],["name/109",[647,2.671]],["text/109",[2,2.758,8,1.798,52,3.811,60,1.567,91,4.326,142,4.138,156,4.087,162,3.218,169,4.973,398,3.348,429,4.543,430,6.487,432,4.06,545,3.292,595,4.834,960,4.261,1136,6.386,1310,4.394,1599,5.65,2939,6.295,3184,7.89,3185,8.891,3186,8.891,3187,7.89]],["component/109",[220,0.615]],["title/110",[3188,86.901]],["name/110",[3188,3.654]],["text/110",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,4.529,595,5.273,960,4.648,1310,4.793,1599,4.737,3189,9.04,3190,9.699,3191,9.699]],["component/110",[220,0.615]],["title/111",[3192,79.619]],["name/111",[3192,3.347]],["text/111",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3193,9.59]],["component/111",[220,0.615]],["title/112",[248,28.565,3194,65.249]],["name/112",[3194,3.478]],["text/112",[2,2.498,8,1.628,22,2.009,24,2.129,52,3.452,60,1.419,91,3.918,156,3.702,162,2.915,169,4.658,365,3.491,396,2.799,429,6.257,430,6.177,432,3.678,491,4.865,545,4.012,560,4.133,595,4.378,736,4.29,960,5.193,1310,3.979,1599,3.933,2526,5.873,3194,9.615,3195,8.053,3196,10.835,3197,8.053,3198,8.053,3199,8.053]],["component/112",[220,0.615]],["title/113",[248,28.565,2886,59.201]],["name/113",[2886,3.156]],["text/113",[2,2.303,8,1.501,16,2.754,22,2.558,52,3.182,60,1.308,91,4.987,156,3.412,162,2.687,169,4.406,232,4.42,248,2.884,386,2.743,408,3.728,429,5.999,430,6.386,432,3.39,510,5.414,545,2.748,555,3.228,595,4.036,604,6.904,638,2.952,835,5.256,960,4.913,1001,5.633,1310,3.668,1599,5.006,1677,3.897,2260,6.919,2466,5.977,2886,9.453,3200,6.587,3201,7.423]],["component/113",[220,0.615]],["title/114",[3202,82.733]],["name/114",[3202,3.478]],["text/114",[2,2.407,8,1.569,12,4.094,14,2.682,52,3.327,60,1.368,62,2.47,91,3.775,112,4.595,115,4.318,156,3.567,162,2.809,169,3.336,208,4,281,4.799,423,3.355,429,3.965,430,6.061,432,3.544,542,3.374,545,2.873,549,3.567,595,4.219,626,2.001,960,3.719,1103,3.336,1310,3.835,1599,3.79,2350,4.197,3202,11.448,3203,7.233,3204,7.76,3205,7.76,3206,10.567]],["component/114",[220,0.615]],["title/115",[3207,86.901]],["name/115",[3207,3.654]],["text/115",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,3.591,595,5.273,960,4.648,1310,4.793,1599,5.974,3208,9.699,3209,9.699]],["component/115",[220,0.615]],["title/116",[3210,86.901]],["name/116",[3210,3.654]],["text/116",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3211,9.59]],["component/116",[220,0.615]],["title/117-1",[8,4.775,353,15.907,430,20.851,431,25.995,545,8.745,1233,20.958,3212,36.684,3213,28.876]],["name/117-1",[]],["text/117-1",[]],["component/117-1",[]],["title/117-2",[426,13.902,430,23.662,431,29.5,545,17.369,1585,18.62,2874,19.628,3212,24.251]],["name/117-2",[]],["text/117-2",[]],["component/117-2",[]],["title/117",[326,37.087,2874,52.812]],["name/117",[3214,3.92]],["text/117",[2,1.351,8,1.969,15,6.269,22,1.087,41,2.705,49,1.452,52,1.867,60,0.768,61,1.537,68,2.051,91,3.356,131,1.362,156,2.003,159,2.17,162,1.577,169,2.965,234,2.558,248,1.692,258,2.872,295,2.764,326,6.185,362,2.594,429,3.524,430,5.353,431,9.132,432,1.989,545,2.554,563,3.72,595,2.368,955,2.739,959,2.716,960,2.088,1082,2.448,1233,3.866,1310,2.153,1536,3.508,1599,3.369,1696,4.061,1879,2.434,2033,5.029,2874,4.954,2975,4.061,3212,6.121,3213,3.043,3215,4.356,3216,5.031,3217,12.263,3218,4.356,3219,4.356,3220,6.898,3221,4.356,3222,4.356,3223,11.825,3224,6.43,3225,6.898,3226,6.898,3227,8.563,3228,4.356,3229,4.356,3230,4.356]],["component/117",[220,0.615]],["title/118",[3231,86.901]],["name/118",[3231,3.654]],["text/118",[2,2.878,8,1.876,52,3.977,60,1.635,91,4.514,156,4.265,162,3.358,169,5.112,225,3.772,430,5.998,432,4.237,545,3.435,595,5.044,960,4.446,1240,6.569,1310,4.584,1599,4.531,3232,9.277,3233,9.277,3234,9.277,3235,9.277,3236,9.277,3237,9.277]],["component/118",[220,0.615]],["title/119",[3238,86.901]],["name/119",[3238,3.654]],["text/119",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,4.529,595,5.273,960,4.648,1310,4.793,1599,4.737,3239,9.699,3240,9.699]],["component/119",[220,0.615]],["title/120",[3241,86.901]],["name/120",[3241,3.654]],["text/120",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,4.529,595,5.273,960,4.648,1310,4.793,1599,4.737,3242,9.699,3243,9.699]],["component/120",[220,0.615]],["title/121",[2271,49.524,3244,68.537]],["name/121",[3244,3.654]],["text/121",[2,2.878,8,1.876,22,2.315,52,3.977,60,1.635,91,4.514,112,3.548,156,4.265,162,3.358,169,5.112,225,3.772,429,4.74,430,6.62,432,4.237,545,3.435,595,5.044,604,8.009,960,4.446,1310,4.584,1599,4.531,3245,9.277]],["component/121",[220,0.615]],["title/122",[3246,86.901]],["name/122",[3246,3.654]],["text/122",[2,2.942,8,1.917,52,4.065,60,1.671,91,5.867,156,4.359,162,3.433,169,5.184,429,4.845,430,6.688,432,4.331,545,3.511,595,5.156,960,4.545,1310,4.686,1599,5.889,3247,9.483,3248,9.483]],["component/122",[220,0.615]],["title/123",[3249,86.901]],["name/123",[3249,3.654]],["text/123",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3250,8.939]],["component/123",[220,0.615]],["title/124",[3251,86.901]],["name/124",[3251,3.654]],["text/124",[2,2.942,8,1.917,52,4.065,60,1.671,91,4.614,112,3.627,156,4.359,162,3.433,169,5.184,426,4.824,429,4.845,430,6.082,432,4.331,545,4.465,595,5.156,960,4.545,1310,4.686,1599,5.889,3252,9.483]],["component/124",[220,0.615]],["title/125",[3184,65.249,3187,65.249]],["name/125",[3187,3.478]],["text/125",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3253,9.59]],["component/125",[220,0.615]],["title/126",[3254,73.528,3255,73.528]],["name/126",[3256,3.92]],["text/126",[2,3.043,8,1.983,52,4.205,60,1.729,91,4.773,156,4.509,162,3.551,169,5.296,429,5.012,430,6.214,432,4.48,545,3.632,595,5.334,960,4.702,1310,4.848,1599,6.017,3257,9.81]],["component/126",[220,0.615]],["title/127",[3200,82.733]],["name/127",[3200,3.478]],["text/127",[2,2.909,8,1.896,52,4.021,60,1.653,91,5.826,112,3.587,156,4.311,162,3.395,169,5.148,225,3.813,429,4.792,430,6.654,432,4.283,545,3.473,595,5.099,604,6.317,960,4.495,1310,4.635,1599,4.581,3258,9.379]],["component/127",[220,0.615]],["title/128",[2892,73.291]],["name/128",[2892,3.081]],["text/128",[2,2.975,8,1.939,52,4.111,60,1.69,91,4.666,160,4.394,162,3.471,169,5.221,429,4.9,430,6.126,432,4.379,545,4.497,595,5.214,634,4.739,960,4.596,1310,4.739,1599,4.683,3259,8.51,3260,9.59]],["component/128",[220,0.615]],["title/129",[796,42.613,3261,65.249]],["name/129",[3262,3.654]],["text/129",[2,3.854,8,1.676,22,2.756,40,2.638,52,3.552,60,1.461,75,5.125,91,5.374,112,4.224,142,3.951,156,3.809,162,3,169,4.748,398,3.121,429,4.234,430,6.683,432,3.785,545,3.068,595,4.506,960,3.972,1310,4.095,1599,5.394,1679,5.408,3263,8.287,3264,8.287]],["component/129",[220,0.615]],["title/130-1",[93,18.022,131,12.459,227,22.395,267,21.227,1082,36.101]],["name/130-1",[]],["text/130-1",[]],["component/130-1",[]],["title/130-2",[112,17.208,142,16.096,156,20.685,429,22.991,430,22.697]],["name/130-2",[]],["text/130-2",[]],["component/130-2",[]],["title/130-3",[66,18.821,112,17.208,142,16.096,2350,38.273]],["name/130-3",[]],["text/130-3",[]],["component/130-3",[]],["title/130-4",[66,14.953,75,22.109,142,12.788,2270,23.566,2350,19.336,2854,30.532,3265,31.726]],["name/130-4",[]],["text/130-4",[]],["component/130-4",[]],["title/130",[75,37.537,796,35.179,3261,53.866]],["name/130",[3266,3.92]],["text/130",[1,3.368,2,2.034,5,1.057,8,0.695,10,0.903,12,3.005,14,2.266,17,1.168,22,1.636,24,1.506,25,1.462,26,1.735,27,1.47,29,0.968,40,0.611,42,0.623,52,1.474,60,0.824,65,0.894,66,4.941,68,2.2,75,2.127,85,1.686,91,1.673,112,2.178,128,0.816,130,1.003,131,2.279,142,3.834,143,1.169,148,3.26,150,1.933,156,2.148,162,1.245,163,0.747,169,2.009,172,1.385,180,0.91,199,1.504,216,1.204,227,1.933,258,1.265,267,3.034,271,2.223,275,1.017,288,2.47,299,0.92,308,3.588,311,1.085,317,0.881,320,1.597,347,0.592,369,0.879,381,1.187,389,0.723,391,1.713,392,0.673,398,1.295,424,0.948,426,3.335,429,4.048,430,4.275,432,0.876,468,2.344,479,0.923,481,1.055,482,0.849,497,1.293,498,1.293,499,2.094,501,0.981,521,3.561,527,0.857,529,1.293,545,0.711,551,2.237,554,1.055,560,0.985,592,1.477,595,1.043,622,1.066,626,1.691,638,2.265,645,1.735,651,2.122,689,0.849,701,1.265,721,0.739,796,1.993,812,0.792,825,1.341,838,1.217,909,1.105,916,0.839,960,0.92,967,0.863,988,2.867,993,2.509,1001,4.354,1082,2.627,1150,2.202,1152,4.091,1195,1.278,1226,1.12,1272,1.265,1305,1.177,1310,0.948,1320,2.55,1404,3.979,1406,1.911,1482,2.202,1486,1.06,1509,1.545,1544,1.308,1584,1.135,1599,0.937,1610,1.378,1670,1.177,1855,1.757,1909,2.89,1916,1.639,1928,1.217,1933,2.244,2032,1.789,2083,1.477,2237,1.24,2350,6.569,2437,1.308,2608,1.703,2928,2.344,2930,1.789,2983,1.545,3109,1.359,3261,1.703,3265,5.818,3267,1.919,3268,1.919,3269,1.919,3270,1.639,3271,1.919,3272,1.919,3273,1.919,3274,1.919,3275,1.919,3276,1.919,3277,1.919,3278,3.44,3279,3.44,3280,1.919,3281,3.44,3282,1.919,3283,1.919,3284,1.919,3285,1.919,3286,1.919,3287,1.919,3288,1.919,3289,1.919,3290,1.919,3291,5.055,3292,5.696,3293,1.919,3294,1.919,3295,1.588,3296,1.919,3297,2.937,3298,1.24,3299,4.674,3300,1.639,3301,1.919,3302,1.341,3303,1.919]],["component/130",[220,0.615]],["title/131",[604,62.794]],["name/131",[604,2.64]],["text/131",[2,3.609,8,1.475,22,2.903,25,3.102,26,3.68,40,2.323,52,3.128,60,1.286,91,4.928,110,2.981,112,2.79,142,2.61,156,3.354,162,2.641,169,4.354,189,2.754,232,4.344,247,3.484,429,3.728,430,6.893,432,3.332,479,3.51,510,5.321,542,3.173,545,2.701,595,3.967,604,7.836,721,2.809,741,4.914,960,3.497,1310,3.605,1584,4.314,1599,4.947,2939,5.166,3304,7.296,3305,7.296]],["component/131",[220,0.615]],["title/132",[3306,86.901]],["name/132",[3306,3.654]],["text/132",[2,2.942,8,1.917,52,4.065,60,1.671,91,4.614,112,3.627,156,4.359,162,3.433,169,5.184,426,4.824,429,4.845,430,6.082,432,4.331,545,4.465,595,5.156,960,4.545,1310,4.686,1599,5.889,3307,9.483]],["component/132",[220,0.615]],["title/133-1",[40,23.406,142,26.301]],["name/133-1",[]],["text/133-1",[]],["component/133-1",[]],["title/133",[467,64.298]],["name/133",[467,2.703]],["text/133",[2,3.345,8,1.617,22,2.41,28,3.474,38,2.865,40,1.678,52,2.259,60,0.929,63,2.499,68,3.764,82,1.916,91,3.89,112,4.433,131,1.648,142,1.885,156,2.423,162,1.908,169,3.437,177,2.794,188,3.184,200,2.431,213,2.912,248,2.048,274,2.545,347,1.627,389,1.985,396,1.832,429,4.085,430,4.873,432,2.407,467,5.514,545,1.951,558,3.259,595,2.865,626,2.989,676,1.007,730,4.213,786,2.499,798,3.712,804,3.054,806,5.27,837,2.822,887,5.398,919,3.474,960,2.526,1001,2.896,1085,2.67,1310,2.604,1599,3.905,2939,3.732,3085,4.677,3308,5.27,3309,5.27,3310,5.27,3311,5.27,3312,5.27,3313,7.995,3314,5.27,3315,5.27,3316,7.453,3317,5.27,3318,5.27,3319,5.27]],["component/133",[220,0.615]],["title/134",[467,50.71,3320,73.528]],["name/134",[3321,3.92]],["text/134",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3322,9.59]],["component/134",[220,0.615]],["title/135",[1240,66.009]],["name/135",[1240,2.775]],["text/135",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,4.529,595,5.273,960,4.648,1310,4.793,1599,4.737,3323,9.699,3324,9.699]],["component/135",[220,0.615]],["title/136",[3325,77.133]],["name/136",[3325,3.243]],["text/136",[2,2.942,8,1.917,52,4.065,60,1.671,91,4.614,112,3.627,156,4.359,162,3.433,169,5.184,225,3.856,429,4.845,430,6.082,432,4.331,545,4.465,595,5.156,960,4.545,1240,6.714,1310,4.686,3326,9.483,3327,9.483]],["component/136",[220,0.615]],["title/137",[2271,40.884,3328,60.7,3329,60.7]],["name/137",[3330,3.92]],["text/137",[2,2.942,8,1.917,52,4.065,60,1.671,91,4.614,112,3.627,156,4.359,162,3.433,169,5.184,426,4.824,429,4.845,430,6.082,432,4.331,545,4.465,595,5.156,960,4.545,1310,4.686,1599,5.889,3331,9.483]],["component/137",[220,0.615]],["title/138",[2902,71.74]],["name/138",[2902,3.016]],["text/138",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,4.529,595,5.273,960,4.648,1310,4.793,1599,4.737,3332,9.699,3333,9.699]],["component/138",[220,0.615]],["title/139",[3334,73.528,3335,68.537]],["name/139",[3335,3.654]],["text/139",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3336,9.59]],["component/139",[220,0.615]],["title/140",[3337,86.901]],["name/140",[3337,3.654]],["text/140",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,4.529,595,5.273,960,4.648,1310,4.793,1599,4.737,3338,9.699,3339,9.699]],["component/140",[220,0.615]],["title/141",[3340,82.733]],["name/141",[3340,3.478]],["text/141",[2,2.942,8,1.917,52,4.065,60,1.671,91,4.614,112,3.627,156,4.359,162,3.433,169,5.184,426,4.824,429,4.845,430,6.082,432,4.331,545,4.465,595,5.156,960,4.545,1310,4.686,1599,5.889,3341,9.483]],["component/141",[220,0.615]],["title/142",[3340,65.249,3342,73.528]],["name/142",[3343,3.92]],["text/142",[2,2.909,8,1.896,52,4.021,60,1.653,91,4.563,112,3.587,162,3.395,169,5.148,426,4.771,429,4.792,430,6.04,432,4.283,545,4.434,595,5.099,634,4.635,960,4.495,1310,4.635,1599,5.848,3344,9.379,3345,9.379]],["component/142",[220,0.615]],["title/143",[2715,73.291]],["name/143",[2715,3.081]],["text/143",[2,3.078,8,2.007,60,1.749,91,6.037,156,4.562,162,3.592,169,5.335,429,5.07,430,6.829,432,4.532,595,5.396,960,4.756,1310,4.904,1599,4.847,3346,9.924]],["component/143",[220,0.615]],["title/144",[3347,73.528,3348,59.201]],["name/144",[3348,3.156]],["text/144",[2,2.942,8,1.917,52,4.065,60,1.671,91,4.614,112,3.627,156,4.359,162,3.433,169,5.184,426,4.824,429,4.845,430,6.082,432,4.331,545,4.465,595,5.156,960,4.545,1310,4.686,1599,5.889,3349,9.483]],["component/144",[220,0.615]],["title/145",[3350,86.901]],["name/145",[3350,3.654]],["text/145",[2,3.008,8,1.961,52,4.157,60,1.709,91,4.719,156,4.458,162,3.511,169,5.258,429,4.955,430,6.17,432,4.429,545,3.591,595,5.273,960,4.648,1310,4.793,1599,5.974,3250,9.04,3351,9.699]],["component/145",[220,0.615]],["title/146",[3352,79.619]],["name/146",[3352,3.347]],["text/146",[2,2.975,8,1.939,52,4.111,60,1.69,91,5.909,156,4.408,162,3.471,169,5.221,429,4.9,430,6.723,432,4.379,545,3.551,595,5.214,960,4.596,1310,4.739,1599,5.931,3353,9.59]],["component/146",[220,0.615]],["title/147",[]],["name/147",[8,0.178,9,0.531,15,0.466,153,0.535,973,0.557,974,0.691]],["text/147",[22,2.946,24,2.426,361,4.367,398,3.456,547,4.164,894,7.134,973,9.262,1187,5.243,1643,7.189,2462,8.361,2818,7.706,3125,8.144,3126,8.144,3127,8.144,3128,8.144]],["component/147",[220,0.615]],["title/148",[]],["name/148",[8,0.178,9,0.531,15,0.885,153,0.535,326,0.443]],["text/148",[14,3.553,15,6.725,24,3.354,68,5.972,159,5.122,326,6.399,542,4.471,1187,5.632,1643,7.722,3139,9.125]],["component/148",[220,0.615]],["title/149",[]],["name/149",[8,0.21,9,0.628,15,0.551,249,0.693,326,0.525]],["text/149",[14,4.167,24,3.188,159,4.724,162,4.365,249,9.296,326,7.038,542,5.244,2906,8.122,3109,8.538,3144,8.416,3145,8.416]],["component/149",[220,0.615]],["title/150-1",[10,28.575,11,26.317,14,20.977]],["name/150-1",[]],["text/150-1",[]],["component/150-1",[]],["title/150-2",[4,29.598,40,23.406]],["name/150-2",[]],["text/150-2",[]],["component/150-2",[]],["title/150-3",[4,24.435,134,22.959,347,18.74]],["name/150-3",[]],["text/150-3",[]],["component/150-3",[]],["title/150-4",[4,29.598,1071,32.842]],["name/150-4",[]],["text/150-4",[]],["component/150-4",[]],["title/150-5",[3,22.428,14,20.977,225,24.678]],["name/150-5",[]],["text/150-5",[]],["component/150-5",[]],["title/150",[]],["name/150",[3,0.607,8,0.332,9,0.993]],["text/150",[3,3.875,4,5.169,6,0.795,8,2.345,9,2.338,10,2.253,14,3.02,22,1.194,24,2.981,35,0.678,39,1.868,40,2.364,42,1.257,57,0.588,60,1.213,62,1.524,82,2.502,85,0.749,86,0.795,100,1.621,131,4.066,134,2.992,137,1.382,139,0.514,162,1.013,163,1.089,180,0.724,203,1.92,219,1.977,225,0.621,234,0.897,241,0.722,267,2.061,270,2.433,285,0.802,286,2.162,299,0.732,310,1.009,337,1.483,343,0.987,347,2.125,348,3.612,389,2.101,391,0.761,398,1.054,399,1.442,408,1.405,424,1.912,464,2.74,522,0.798,537,5.595,540,2.018,548,2.779,551,0.954,553,0.777,556,0.791,569,4.734,626,1.234,638,1.539,661,0.774,676,0.915,678,0.826,706,1.864,708,0.648,746,3.479,748,1.929,762,1.067,786,0.724,808,2.082,830,0.903,859,2.525,925,0.84,993,4.575,1071,1.728,1318,5.19,1320,4.651,1321,4.734,1322,4.734,1323,2.822,1324,2.92,1325,2.92,1326,4.734,1327,4.734,1328,5.357,1329,4.827,1330,3.201,1331,2.314,1337,2.92,1354,2.153,1396,1.097,1398,1.305,1573,4.137,1599,1.366,1675,0.961,2196,1.23,2339,1.954,2369,1.954,3031,2.314,3032,2.389,3033,2.314,3034,2.314,3035,2.314,3036,2.389,3062,9.143,3063,2.389,3064,1.356,3065,7.756,3066,2.483,3067,1.356,3068,1.356,3069,3.434,3070,1.356,3071,2.483,3072,1.356,3073,3.304,3074,1.356,3075,1.264,3076,1.305,3077,3.434,3078,1.305,3079,1.264,3080,2.389,3081,2.009,3082,1.305]],["component/150",[220,0.615]],["title/151",[]],["name/151",[8,0.21,9,0.628,42,0.338,1664,0.837,1665,0.736]],["text/151",[3,2.282,4,1.419,5,0.71,8,0.596,10,0.4,14,1.218,22,1.851,24,0.779,34,2.345,38,3.039,40,0.515,42,1.145,45,0.501,46,1.796,62,0.938,65,0.396,80,1.557,82,1.475,92,3.595,95,4.886,96,0.342,99,2.617,113,0.925,114,1.742,129,5.434,131,3.892,133,0.766,134,0.875,138,0.345,139,0.544,141,0.841,143,0.289,160,0.389,162,0.308,168,0.699,172,0.651,189,0.321,199,2.702,200,3.969,201,0.465,203,0.422,204,0.799,216,4.586,219,1.279,248,1.144,267,0.453,270,0.534,283,0.455,286,0.475,318,0.528,329,1.801,337,0.451,338,1.637,347,0.499,348,0.931,365,0.368,366,0.888,386,0.597,389,1.109,391,0.423,416,5.034,418,0.602,420,4.419,424,0.42,464,0.602,481,0.467,494,0.46,504,1.338,505,0.684,512,3.437,542,1.005,548,0.61,568,0.397,569,1.22,581,1.686,591,1.454,626,0.417,705,0.994,706,0.566,731,0.544,744,0.903,761,0.549,762,0.594,766,0.555,779,2.367,910,0.455,956,0.457,993,1.179,1103,0.695,1163,0.641,1246,0.726,1248,0.572,1264,2.689,1320,1.199,1321,1.22,1322,1.22,1323,0.62,1324,0.641,1325,0.641,1326,1.22,1327,1.22,1329,1.244,1334,2.2,1335,0.654,1354,0.654,1355,1.381,1356,0.726,1357,4.366,1358,0.726,1359,10.534,1425,2.374,1525,2.959,1670,2.489,1673,2.959,1759,2.316,2237,0.549,2330,1.822,2524,0.726,2643,2.516,2657,1.026,3354,0.726,3355,2.155,3356,2.746,3357,8.719,3358,1.435,3359,7.197,3360,1.302,3361,6.286,3362,6.621,3363,1.435,3364,3.782,3365,1.507,3366,4.495,3367,1.435,3368,3.357,3369,3.601,3370,3.357,3371,2.312,3372,7.136,3373,5.813,3374,0.792,3375,0.792,3376,0.754,3377,0.754,3378,0.792,3379,0.792]],["component/151",[220,0.615]],["title/152-1",[962,49.665]],["name/152-1",[]],["text/152-1",[]],["component/152-1",[]],["title/152-2",[3,22.428,134,22.959,139,20.411]],["name/152-2",[]],["text/152-2",[]],["component/152-2",[]],["title/152-3",[962,39.17,1032,49.524]],["name/152-3",[]],["text/152-3",[]],["component/152-3",[]],["title/152-4",[551,20.708,716,36.672,962,32.336]],["name/152-4",[]],["text/152-4",[]],["component/152-4",[]],["title/152-5",[551,20.708,589,33.002,962,32.336]],["name/152-5",[]],["text/152-5",[]],["component/152-5",[]],["title/152-6",[551,20.708,1837,41.863,1838,42.977]],["name/152-6",[]],["text/152-6",[]],["component/152-6",[]],["title/152-7",[3,22.428,14,20.977,962,32.336]],["name/152-7",[]],["text/152-7",[]],["component/152-7",[]],["title/152-8",[10,28.575,11,26.317,14,20.977]],["name/152-8",[]],["text/152-8",[]],["component/152-8",[]],["title/152-9",[4,29.598,40,23.406]],["name/152-9",[]],["text/152-9",[]],["component/152-9",[]],["title/152-10",[4,24.435,134,22.959,347,18.74]],["name/152-10",[]],["text/152-10",[]],["component/152-10",[]],["title/152-11",[4,29.598,1071,32.842]],["name/152-11",[]],["text/152-11",[]],["component/152-11",[]],["title/152-12",[3,22.428,14,20.977,225,24.678]],["name/152-12",[]],["text/152-12",[]],["component/152-12",[]],["title/152-13",[42,19.714,45,18.829,46,15.279]],["name/152-13",[]],["text/152-13",[]],["component/152-13",[]],["title/152-14",[14,20.977,15,32.178,153,36.95]],["name/152-14",[]],["text/152-14",[]],["component/152-14",[]],["title/152-15",[67,24.68,68,24.33,892,36.593,971,39.007]],["name/152-15",[]],["text/152-15",[]],["component/152-15",[]],["title/152-16",[973,59.142]],["name/152-16",[]],["text/152-16",[]],["component/152-16",[]],["title/152-17",[326,47.024]],["name/152-17",[]],["text/152-17",[]],["component/152-17",[]],["title/152-18",[15,32.178,153,36.95,326,30.616]],["name/152-18",[]],["text/152-18",[]],["component/152-18",[]],["title/152-19",[249,48.981,326,37.087]],["name/152-19",[]],["text/152-19",[]],["component/152-19",[]],["title/152",[0,17.81,8,11.89,9,21.599,10,16.83,11,15.501,14,12.355]],["name/152",[8,0.468,9,1.399]],["text/152",[0,0.251,3,4.615,4,4.638,5,1.305,6,0.262,8,1.594,9,1.356,10,1.403,11,0.218,12,1.383,14,2.569,15,1.189,22,1.321,24,2.77,25,0.415,35,0.434,38,0.884,39,1.083,40,2.031,41,1.028,42,0.599,45,0.442,46,0.66,49,0.326,52,0.791,57,0.194,60,0.975,61,2.108,62,2.092,64,0.391,68,1.056,80,0.898,82,1.836,85,0.247,86,0.262,87,0.599,92,1.062,93,1.92,95,0.636,96,0.203,100,2.29,109,0.96,113,0.288,114,0.578,129,1.543,131,3.925,133,0.239,134,2.871,136,0.343,137,1.295,138,0.748,139,0.62,141,0.262,159,1.969,162,2.446,163,0.38,168,0.218,172,0.573,180,0.239,200,0.851,203,1.113,216,1.854,218,0.2,219,0.939,225,0.397,234,0.296,241,0.238,246,0.359,248,0.38,249,2.633,262,0.657,267,0.983,270,1.16,277,0.62,285,0.264,286,1.031,299,0.241,310,0.352,326,2.671,329,0.434,337,0.518,338,0.28,343,0.325,344,0.47,347,1.844,348,1.716,361,0.465,364,1.568,366,0.277,386,0.361,389,1.25,391,0.251,397,0.335,398,1.25,399,0.504,402,0.637,408,0.491,414,1.043,416,0.74,418,0.356,424,0.912,426,0.497,431,1.16,464,1.306,479,0.47,481,0.277,482,0.223,494,0.528,501,0.499,504,0.808,522,0.263,535,1.327,537,4.208,540,0.778,542,1.584,547,0.443,548,1.325,549,0.231,551,1.448,553,0.497,556,1.543,568,0.457,569,2.506,589,1.805,590,0.416,591,2.291,592,1.095,626,1.594,638,0.566,661,0.255,674,0.302,676,0.696,677,1.403,678,0.272,689,0.432,705,0.33,706,0.651,708,0.213,716,0.86,730,0.621,746,1.858,748,2.513,761,0.325,762,0.352,766,0.929,768,1.327,786,0.239,808,1.786,812,0.208,829,0.319,830,0.298,832,0.29,859,2.166,884,0.322,894,1.115,910,0.269,925,0.277,935,0.682,962,0.52,973,2.693,993,2.421,1004,3.72,1071,1.896,1103,0.793,1115,0.713,1118,0.582,1122,0.787,1163,0.38,1187,2.128,1264,0.842,1293,0.791,1318,2.169,1319,1.263,1320,2.462,1321,2.506,1322,2.506,1323,1.346,1324,1.392,1325,1.392,1326,2.506,1327,2.506,1328,2.239,1329,2.555,1330,1.178,1331,0.808,1334,0.812,1337,1.693,1340,0.599,1354,1.095,1355,0.834,1356,0.43,1357,2.111,1358,0.43,1359,3.626,1396,0.362,1398,0.43,1425,0.658,1461,0.574,1490,0.511,1545,1.257,1549,1.636,1573,1.664,1579,0.692,1599,0.901,1643,2.021,1655,0.787,1670,0.873,1675,0.316,1758,1.612,1759,1.119,1761,0.416,1763,0.834,1843,1.263,1866,1.637,1867,0.867,1869,0.469,1871,0.469,2196,0.405,2330,0.604,2339,0.682,2369,0.682,2377,0.692,2462,1.306,2643,1.216,2657,0.319,2818,1.204,2906,1.511,3026,1.576,3031,0.808,3032,0.834,3033,0.808,3034,0.808,3035,0.808,3036,0.834,3062,5.101,3063,0.834,3064,0.447,3065,3.768,3066,0.867,3067,0.447,3068,0.447,3069,1.263,3070,0.447,3071,0.867,3072,0.447,3073,1.216,3074,0.447,3075,0.416,3076,0.43,3077,2.326,3078,0.43,3079,0.416,3080,0.834,3081,1.883,3082,1.216,3093,1.637,3109,1.589,3125,0.867,3126,0.867,3127,1.263,3128,1.263,3139,1.263,3144,1.263,3145,1.263,3354,0.43,3355,1.327,3356,0.911,3357,3.095,3358,0.447,3359,1.095,3360,0.405,3361,0.752,3362,0.387,3363,0.447,3380,1.327,3381,1.423,3382,0.911,3383,1.423,3384,1.327,3385,1.263,3386,0.977,3387,0.977,3388,1.423,3389,0.977,3390,0.977,3391,1.423,3392,1.423,3393,1.423,3394,1.178,3395,1.423,3396,1.423,3397,1.423,3398,1.423,3399,1.423,3400,0.977,3401,1.423,3402,1.423,3403,1.423,3404,0.977,3405,0.977,3406,1.845,3407,1.327,3408,1.423,3409,1.423,3410,1.263,3411,1.423,3412,1.845,3413,0.977,3414,0.977,3415,0.503,3416,0.503,3417,0.503,3418,0.503,3419,0.503,3420,0.503,3421,0.503]],["component/152",[220,0.615]],["title/153-1",[676,17.814]],["name/153-1",[]],["text/153-1",[]],["component/153-1",[]],["title/153-2",[60,16.431]],["name/153-2",[]],["text/153-2",[]],["component/153-2",[]],["title/153",[142,26.301,1448,45.846]],["name/153",[142,0.828,1448,1.444]],["text/153",[5,1.954,6,2.047,8,1.618,11,1.706,12,2.076,20,1.827,21,3.155,22,2.293,34,1.416,35,1.747,40,2.547,50,2.01,60,1.121,62,3.762,66,2.66,77,1.416,80,1.347,92,1.057,103,2.849,108,3.901,112,1.505,117,2.225,131,2.502,139,1.323,142,4.366,143,1.338,150,3.574,159,1.96,162,1.424,195,3.709,209,2.414,213,2.174,218,2.529,347,1.215,354,2.36,365,2.757,391,1.96,396,1.367,408,1.976,420,3.004,520,2.327,521,1.769,522,3.323,525,1.96,527,2.84,540,1.659,626,1.64,645,1.985,676,0.752,689,1.742,708,1.668,720,2.002,721,3.08,804,3.685,821,2.453,883,3.786,898,2.433,919,5.274,965,1.731,969,3.118,978,2.87,980,4.333,988,2.414,1000,3.595,1001,5.543,1082,3.574,1274,2.87,1448,6.727,1516,4.736,1613,2.621,1929,3.093,2265,2.65,2397,2.327,2680,3.256,3298,4.109,3422,3.168,3423,3.935,3424,3.168,3425,10.075,3426,3.093,3427,3.668,3428,3.668,3429,3.935]],["component/153",[220,0.615]],["title/154-1",[676,17.814]],["name/154-1",[]],["text/154-1",[]],["component/154-1",[]],["title/154-2",[69,46.644,74,33.688]],["name/154-2",[]],["text/154-2",[]],["component/154-2",[]],["title/154-3",[60,12.959,425,39.17]],["name/154-3",[]],["text/154-3",[]],["component/154-3",[]],["title/154-4",[60,12.959,1933,47.978]],["name/154-4",[]],["text/154-4",[]],["component/154-4",[]],["title/154-5",[15,27.398,58,24.503,68,24.33,1913,44.138]],["name/154-5",[]],["text/154-5",[]],["component/154-5",[]],["title/154-6",[60,12.959,438,44.096]],["name/154-6",[]],["text/154-6",[]],["component/154-6",[]],["title/154-7",[142,16.096,392,15.787,796,26.079,883,26.794,3430,41.945]],["name/154-7",[]],["text/154-7",[]],["component/154-7",[]],["title/154-8",[142,18.487,565,28.249,796,29.953,3431,45.864]],["name/154-8",[]],["text/154-8",[]],["component/154-8",[]],["title/154-9",[547,27.542,565,33.177,3432,51.839]],["name/154-9",[]],["text/154-9",[]],["component/154-9",[]],["title/154-10",[142,18.487,417,20.704,796,29.953,3433,48.175]],["name/154-10",[]],["text/154-10",[]],["component/154-10",[]],["title/154-11",[417,18.026,565,24.595,796,26.079,2572,34.627,2856,33.363]],["name/154-11",[]],["text/154-11",[]],["component/154-11",[]],["title/154-12",[220,15.361,960,35.24]],["name/154-12",[]],["text/154-12",[]],["component/154-12",[]],["title/154",[58,34.859,142,26.301]],["name/154",[58,1.098,142,0.828]],["text/154",[4,1.357,5,0.741,6,0.676,8,0.487,11,0.564,12,0.686,14,2.138,15,0.689,16,0.894,17,1.467,21,2.454,22,2.554,24,0.344,25,0.553,26,0.656,32,0.586,34,0.867,35,0.577,40,1.34,41,1.322,42,0.783,45,0.403,46,0.327,47,0.648,50,0.664,52,1.033,54,0.735,57,0.5,58,4.27,60,1.637,61,0.851,62,1.073,64,0.521,66,2.343,68,0.612,69,0.825,71,2.204,74,1.104,79,1.453,82,2.248,99,0.522,103,0.582,105,0.699,109,0.676,110,0.985,112,2.748,120,0.804,128,0.553,130,0.679,131,0.406,134,0.492,138,0.527,142,4.629,143,0.442,150,0.731,159,0.648,162,0.471,163,0.506,171,0.628,172,1.694,177,1.278,180,0.616,189,0.91,195,1.406,199,1.054,200,1.112,203,0.645,209,0.797,216,0.844,218,0.517,220,0.504,228,0.483,233,0.635,246,0.477,260,2.455,262,1.762,263,1.819,271,1.558,274,0.628,286,0.726,288,0.934,300,0.658,301,1.076,315,0.667,325,0.769,344,0.625,347,2.072,361,0.619,364,0.614,366,1.325,386,0.891,391,0.648,392,1.965,396,0.452,398,0.908,404,1.529,414,0.735,417,1.981,425,0.693,427,1,430,2.123,438,1.446,447,2.01,461,1,499,0.582,515,0.592,520,0.769,521,0.584,522,1.26,525,0.648,530,0.897,536,3.023,540,0.548,547,1.094,551,3.258,555,0.565,557,1.311,565,4.378,568,1.127,571,0.714,579,1.994,589,0.707,596,0.797,621,1.154,626,0.869,631,0.876,638,0.959,645,0.656,660,0.642,674,0.78,676,0.644,677,0.696,689,0.575,695,0.876,697,0.707,699,0.84,708,0.551,722,0.586,727,0.817,734,1.653,744,1.347,749,0.722,753,0.679,796,2.867,804,0.753,849,0.825,855,0.857,883,3.683,885,3.12,910,2.253,919,1.589,929,1.573,930,1.076,931,0.711,956,0.699,960,1.155,966,1.643,967,1.083,970,2.544,982,0.739,988,0.797,1000,1.906,1001,3.078,1006,0.897,1012,0.866,1020,0.857,1032,0.876,1056,0.84,1073,1.347,1095,0.699,1152,2.421,1187,0.577,1198,0.981,1213,0.857,1244,0.848,1264,0.769,1274,0.948,1275,1.558,1285,1.707,1315,0.92,1376,1.154,1406,2.338,1423,1.076,1450,2.068,1528,3.176,1542,0.866,1584,0.769,1613,0.866,1635,0.866,1679,2.199,1854,1.543,1877,1,1879,0.726,1909,2.084,1913,2.059,1928,0.825,1933,3.655,1971,0.804,2247,1.941,2270,0.857,2337,1.022,2346,0.948,2354,2.325,2384,1.154,2409,0.857,2410,0.897,2572,3.238,2827,1.076,2856,2.499,2922,1.855,2928,0.886,2939,0.92,3114,1.819,3298,0.84,3422,1.047,3430,2.247,3431,4.97,3432,6.505,3433,5.221,3434,1.3,3435,1.3,3436,2.714,3437,1.212,3438,2.411,3439,1.941,3440,1.3,3441,1.3,3442,1.3,3443,1.11,3444,1.212,3445,3.923,3446,1.758,3447,1,3448,1.11,3449,1.047,3450,2.247,3451,1.3,3452,3.308,3453,1.154,3454,1.11,3455,1.047,3456,1.3,3457,2.411,3458,1.11,3459,1.3,3460,1,3461,2.139,3462,1.3,3463,2.247,3464,1.212,3465,1.076,3466,1.3,3467,1.3,3468,1.3,3469,1.3,3470,1.3,3471,1.3,3472,1.212,3473,1.212,3474,1.3,3475,1.3]],["component/154",[220,0.615]],["title/155-1",[676,17.814]],["name/155-1",[]],["text/155-1",[]],["component/155-1",[]],["title/155",[58,28.778,59,34.955,1514,40.436]],["name/155",[58,1.098,3476,2.316]],["text/155",[22,2.34,58,4.447,59,8.003,63,5.677,71,3.342,92,2.519,138,3.804,142,3.355,183,2.655,219,2.956,401,4.835,556,4.857,705,3.165,898,7.405,956,5.047,1085,4.751,1514,7.977,2469,6.12]],["component/155",[220,0.615]],["title/156-1",[676,17.814]],["name/156-1",[]],["text/156-1",[]],["component/156-1",[]],["title/156-2",[60,16.431]],["name/156-2",[]],["text/156-2",[]],["component/156-2",[]],["title/156-3",[59,42.342,1514,48.981]],["name/156-3",[]],["text/156-3",[]],["component/156-3",[]],["title/156",[2,18.829,58,28.778,168,26.242]],["name/156",[2,0.51,58,0.779,168,0.711]],["text/156",[2,1.962,22,1.578,25,3.891,26,4.616,27,4.598,40,2.913,45,1.962,58,6.182,59,5.27,77,3.293,79,3.945,80,4.036,99,2.539,103,2.833,112,2.418,142,3.847,160,4.193,168,4.65,189,2.387,225,2.571,352,4.309,385,6.448,386,4.622,396,2.198,416,3.289,527,4.088,626,1.631,645,3.19,1149,3.689,1231,3.336,1293,3.514,1514,4.213,1520,7.195,2397,3.739,2404,5.895,2437,4.309,3165,5.401]],["component/156",[220,0.615]],["title/157-1",[676,17.814]],["name/157-1",[]],["text/157-1",[]],["component/157-1",[]],["title/157-2",[14,32.218]],["name/157-2",[]],["text/157-2",[]],["component/157-2",[]],["title/157-3",[3477,93.229]],["name/157-3",[]],["text/157-3",[]],["component/157-3",[]],["title/157-4",[316,43.476,1088,47.978]],["name/157-4",[]],["text/157-4",[]],["component/157-4",[]],["title/157-5",[8,14.867,17,44.759]],["name/157-5",[]],["text/157-5",[]],["component/157-5",[]],["title/157",[21,22.326,212,23.855,274,21.728,736,23.972,2816,39.933]],["name/157",[3478,3.92]],["text/157",[3,1.32,4,3.492,8,2.616,14,1.235,17,6.277,21,6.521,22,2.841,24,2.293,25,1.519,26,1.802,28,3.874,34,1.286,37,1.7,39,1.725,41,2.305,42,1.16,61,1.261,62,2.762,63,3.55,65,1.665,71,1.273,85,1.752,99,1.435,105,1.922,131,1.117,134,2.832,160,3.43,175,2.649,189,1.348,202,1.802,212,5.777,219,1.126,225,3.044,246,1.312,274,4.189,277,2.266,285,1.876,313,2.02,317,0.915,347,1.814,365,1.549,377,2.434,408,1.795,423,2.541,482,1.581,490,2.877,535,4.427,557,1.942,568,1.67,622,3.266,638,1.421,686,2.749,687,2.309,699,3.798,708,1.515,716,3.551,736,1.903,762,4.105,782,2.057,808,1.922,812,1.475,873,3.33,956,1.922,967,1.606,1094,2.956,1095,1.922,1187,3.851,1195,2.38,1303,2.877,1348,5.216,1481,2.53,1596,2.606,1928,3.728,2816,9.15,2896,2.749,3479,3.33,3480,5.019,3481,3.573,3482,3.573,3483,3.051,3484,3.573,3485,3.573,3486,3.573,3487,5.877,3488,3.573,3489,3.573,3490,3.573]],["component/157",[220,0.615]],["title/158-1",[1255,66.009]],["name/158-1",[]],["text/158-1",[]],["component/158-1",[]],["title/158-2",[3,11.979,8,6.555,42,10.529,46,8.161,248,21.065,329,14.393,1334,14.263]],["name/158-2",[]],["text/158-2",[]],["component/158-2",[]],["title/158-3",[236,36.779,375,39.768]],["name/158-3",[]],["text/158-3",[]],["component/158-3",[]],["title/158",[15,18.952,42,11.611,248,13.889,326,18.033,328,11.631,329,15.872,1334,15.729]],["name/158",[328,0.535,329,0.73,1334,0.723]],["text/158",[3,2.923,4,0.383,5,0.553,8,1.752,10,0.448,14,2.168,15,4.043,16,0.353,22,1.746,24,1.85,25,1.886,26,1.638,34,1.169,35,0.799,36,0.641,38,2.076,40,2.759,42,2.656,46,2.476,49,0.6,50,1.309,53,0.563,54,0.538,57,1.251,60,0.317,62,0.573,68,2.333,75,1.584,79,0.41,80,1.112,82,1.181,92,2.768,95,2.802,99,1.554,103,0.427,104,0.589,105,0.512,110,0.736,115,0.736,129,3.039,131,2.845,134,1.229,141,1.69,143,0.324,153,3.016,159,0.897,160,0.436,162,1.401,167,0.657,172,1.308,189,2.05,190,0.649,194,0.555,199,3.061,200,1.785,202,0.908,206,0.567,211,0.657,216,3.256,218,0.379,219,1.024,232,0.567,236,1.625,238,2.526,239,0.886,241,0.45,248,2.963,250,1.096,251,0.493,260,1.05,270,0.599,272,0.559,274,0.46,278,0.684,283,0.51,289,1.096,292,0.674,304,0.684,308,1.261,318,0.742,319,0.529,320,0.836,321,0.959,326,4.484,328,2.742,329,3.107,334,0.674,337,0.955,338,0.529,347,0.791,353,0.641,361,0.453,362,0.567,365,0.413,369,0.436,375,0.515,383,1.748,386,0.352,389,1.458,390,0.448,391,0.897,392,1.358,393,1.05,395,0.584,416,2.578,420,2.566,422,0.733,423,0.779,431,3.415,432,0.435,453,1.611,482,0.421,497,0.641,499,1.455,500,1.538,501,0.486,509,0.719,512,4.51,514,0.733,515,0.433,518,0.542,519,0.908,521,1.151,522,0.498,527,0.425,535,0.563,542,0.414,551,0.325,572,0.788,581,1.031,582,2.369,597,0.974,626,0.838,638,0.379,641,0.684,643,0.548,644,0.674,651,1.051,656,0.694,660,0.471,675,0.845,678,0.515,687,0.615,697,0.979,702,0.945,705,1.306,721,0.986,725,2.12,729,0.584,736,0.959,744,0.532,745,1.359,749,2.151,809,0.684,838,1.142,868,2.164,891,1.84,916,1.12,941,0.674,942,0.888,972,5.019,982,1.024,1004,0.615,1073,1.006,1084,0.649,1103,0.409,1108,0.767,1163,0.719,1175,0.694,1187,1.137,1248,0.641,1255,0.674,1257,0.599,1259,1.485,1262,0.657,1275,0.615,1288,1.132,1289,0.684,1291,0.665,1294,1.746,1310,0.471,1334,1.952,1363,1.05,1389,0.813,1406,0.529,1427,2.141,1466,0.649,1488,0.788,1498,1.275,1507,0.474,1521,0.657,1541,0.51,1544,1.227,1545,3.376,1603,0.813,1605,0.674,1643,2.701,1659,0.532,1702,0.634,1877,0.733,1909,1.114,2033,2.91,2045,0.706,2265,0.641,2291,0.813,2481,0.749,2608,1.598,2649,0.888,3109,0.674,3111,0.845,3112,0.749,3359,3.414,3361,2.978,3362,3.414,3367,0.845,3368,2.12,3369,2.273,3370,2.12,3491,0.813,3492,0.952,3493,0.952,3494,0.952,3495,0.952,3496,0.888,3497,1.598,3498,0.845,3499,0.845,3500,0.952,3501,0.952,3502,0.694,3503,0.733,3504,0.952,3505,0.952,3506,0.952,3507,0.952,3508,0.952,3509,1.801,3510,0.952,3511,0.952,3512,0.845,3513,0.952,3514,0.888,3515,8.666,3516,2.562,3517,7.628,3518,0.952]],["component/158",[220,0.615]],["title/159",[42,11.611,248,13.889,329,26.106,1264,21.139,1334,15.729,3519,24.974]],["name/159",[329,0.566,1264,0.753,1334,0.56,3519,0.89]],["text/159",[0,1.503,3,1.886,8,1.915,14,1.043,16,1.12,22,1.655,35,1.34,38,3.277,39,1.457,40,0.961,41,2.601,42,1.658,46,3.156,47,2.543,62,0.961,71,1.075,72,1.749,74,1.383,79,2.201,80,3.243,82,1.855,88,1.416,92,2.096,95,1.348,109,2.655,110,1.233,121,1.76,122,1.914,129,3.435,131,2.44,143,1.026,168,1.305,172,2.055,180,1.431,189,1.139,196,2.706,200,1.392,211,2.081,216,4.118,219,1.609,248,2.577,259,2.237,272,1.772,273,2.852,297,2.577,308,1.485,318,0.689,320,3.08,321,1.607,323,0.978,324,0.973,325,1.784,329,4.205,344,1.452,347,0.932,350,2.237,365,1.308,389,1.922,392,1.791,414,1.706,416,2.655,431,1.897,452,1.881,481,1.658,482,1.336,530,2.081,626,0.778,639,2.243,788,2.43,952,2.577,969,1.479,1136,2.167,1171,2.497,1257,1.897,1264,5.966,1288,1.897,1334,1.328,1363,1.76,1514,3.4,1545,2.056,1656,3.566,1855,1.542,2353,2.678,2644,2.813,2645,8.09,2646,2.678,2928,3.478,3359,2.322,3361,2.322,3362,2.322,3519,7.409,3520,2.678,3521,2.678,3522,2.577,3523,2.678,3524,10.961,3525,5.105,3526,6.634,3527,8.726,3528,2.813,3529,3.017]],["component/159",[220,0.615]],["title/160-1",[324,30.075]],["name/160-1",[]],["text/160-1",[]],["component/160-1",[]],["title/160-2",[246,14.631,320,18.501,324,12.854,325,23.56,389,15.006,898,24.641]],["name/160-2",[]],["text/160-2",[]],["component/160-2",[]],["title/160-3",[14,17.861,42,16.785,324,16.673,1195,34.429]],["name/160-3",[]],["text/160-3",[]],["component/160-3",[]],["title/160-4",[8,14.867,35,32.642]],["name/160-4",[]],["text/160-4",[]],["component/160-4",[]],["title/160-5",[42,23.88,324,23.719]],["name/160-5",[]],["text/160-5",[]],["component/160-5",[]],["title/160",[42,12.941,248,24.954,324,12.854,329,17.689,1334,17.53]],["name/160",[324,0.53,329,0.73,1334,0.723]],["text/160",[2,1.711,3,0.873,4,0.512,5,1.496,8,1.74,10,1.558,14,2.451,16,0.472,22,1.214,24,1.094,25,1.005,26,1.192,34,1.191,35,1.837,38,2.553,40,0.752,41,0.499,42,3.421,46,2.381,50,1.691,52,2.365,60,0.417,61,0.834,64,0.51,80,2.088,82,0.463,83,0.724,92,1.307,95,0.569,96,0.952,99,0.949,104,0.787,106,1.043,110,0.52,129,1.714,131,4.235,134,1.252,139,0.795,144,1.04,150,1.329,159,0.634,162,0.461,163,0.496,168,1.022,171,0.615,180,0.603,194,0.743,195,0.743,198,1.059,200,1.09,201,0.696,204,1.168,209,0.781,213,0.703,216,2.898,218,0.506,219,1.304,225,0.517,238,0.831,239,0.626,241,1.117,246,1.215,248,0.918,262,0.453,278,0.914,291,0.558,294,0.699,315,0.653,317,0.848,318,0.54,320,1.921,323,0.413,324,3.884,325,2.446,329,2.707,337,1.253,338,0.707,342,0.831,347,1.277,367,0.685,369,0.583,376,0.979,378,0.665,379,0.606,383,0.685,386,0.47,389,2.493,390,0.599,391,0.634,392,0.447,396,0.442,398,0.479,399,1.219,416,1.722,424,0.629,431,1.487,436,0.703,437,0.769,479,0.612,480,1.37,481,0.699,482,1.465,497,1.592,498,1.592,513,0.665,515,0.579,519,0.642,522,0.665,524,0.822,535,0.753,582,0.928,609,1.329,626,1.829,631,0.857,638,0.506,639,0.799,655,2.558,701,0.839,705,0.43,721,0.49,725,3.176,741,0.857,746,0.794,749,0.707,796,0.738,804,0.738,835,0.901,859,0.831,867,1.956,898,1.462,931,0.696,941,0.901,967,0.572,969,0.624,1035,0.914,1073,0.711,1101,1.025,1103,1.016,1137,0.944,1195,1.575,1231,1.247,1255,1.674,1285,0.645,1294,0.867,1334,1.04,1363,2.839,1408,1.13,1450,0.781,1489,1.674,1492,1.13,1539,1.001,1545,2.255,1603,1.087,1618,0.914,1645,0.8,1646,1.087,1656,5.255,1665,0.901,1971,0.787,2049,4.895,2249,0.961,2256,0.979,2258,3.533,2526,2.414,2645,6.057,2646,2.937,2712,0.781,2718,1.13,2899,1.025,2922,0.979,3359,0.979,3361,0.979,3362,0.979,3366,3.805,3497,1.13,3512,1.13,3524,5.142,3528,1.186,3530,1.186,3531,1.13,3532,1.273,3533,1.273,3534,1.186,3535,1.186,3536,1.273,3537,1.273,3538,1.273,3539,2.203,3540,1.273,3541,3.609,3542,1.273,3543,1.273,3544,1.13,3545,1.186,3546,1.13,3547,1.186,3548,1.053,3549,3.31,3550,1.186,3551,2.364,3552,2.019,3553,1.273,3554,1.273,3555,1.273,3556,4.137,3557,1.001,3558,2.364,3559,2.364,3560,1.273,3561,1.273,3562,1.273,3563,5.516,3564,5.516,3565,5.516,3566,4.245,3567,1.273,3568,5.516,3569,4.137,3570,4.137,3571,1.087,3572,2.364,3573,2.364,3574,1.273]],["component/160",[220,0.615]],["title/161-1",[1255,66.009]],["name/161-1",[]],["text/161-1",[]],["component/161-1",[]],["title/161-2",[323,30.227]],["name/161-2",[]],["text/161-2",[]],["component/161-2",[]],["title/161-3",[246,14.631,320,18.501,323,12.919,325,23.56,389,15.006,898,24.641]],["name/161-3",[]],["text/161-3",[]],["component/161-3",[]],["title/161-4",[42,14.614,46,11.327,323,14.59,1334,19.798,3557,35.375]],["name/161-4",[]],["text/161-4",[]],["component/161-4",[]],["title/161",[42,12.941,248,24.954,323,12.919,329,17.689,1334,17.53]],["name/161",[323,0.533,329,0.73,1334,0.723]],["text/161",[3,0.763,4,1.173,5,1.128,8,0.879,10,1.728,14,2.235,16,0.408,22,1.237,24,1.31,25,0.468,26,0.555,27,0.47,34,1.049,37,0.524,38,0.864,40,0.928,42,2.945,46,2.341,50,0.562,52,2.361,57,1.122,60,0.364,61,0.388,67,0.986,69,0.698,75,0.681,80,1.886,82,0.4,92,1.331,95,0.922,96,0.443,98,0.831,99,0.442,100,1.196,105,0.592,106,0.486,115,1.776,122,0.698,129,1.901,131,3.724,133,0.979,134,0.781,139,0.694,141,1.074,159,1.028,162,0.398,163,0.429,165,1.116,168,0.476,171,0.997,180,0.522,183,0.584,186,1.505,189,0.779,194,0.642,195,0.642,196,0.583,198,0.493,199,0.481,200,2.005,202,0.555,204,0.544,206,0.655,208,0.567,209,0.675,213,0.608,215,1.588,216,2.264,218,0.438,219,2.038,232,0.655,233,1.008,238,1.902,239,0.542,241,0.975,246,1.348,248,1.132,258,0.725,260,1.7,283,0.589,294,0.605,299,0.528,317,0.94,318,0.251,320,1.704,321,0.586,323,3.437,325,1.723,329,1.93,347,0.34,353,0.741,369,0.504,378,0.575,379,0.524,383,1.111,386,0.407,389,2.074,391,0.548,392,1.022,398,0.777,399,0.567,408,0.553,416,1.909,423,0.476,424,1.814,430,0.555,431,1.298,436,0.608,447,1.392,479,0.529,480,2.127,482,1.625,497,0.741,498,1.39,499,1.645,501,1.055,513,0.575,515,0.501,519,0.555,524,0.711,535,1.22,549,0.506,553,1.05,560,0.565,598,0.769,609,1.16,626,1.42,638,0.438,649,0.622,651,0.356,655,3.065,660,1.02,702,0.578,705,1.467,721,0.424,734,1.012,746,0.686,772,0.94,814,0.94,826,0.718,838,0.698,892,0.779,898,1.276,909,2.114,916,0.481,919,0.725,960,0.989,967,0.495,969,1.012,971,0.831,1035,0.791,1058,1.298,1060,2.419,1071,0.922,1077,0.769,1096,0.759,1103,0.887,1126,0.977,1179,1.924,1226,0.642,1231,0.581,1255,1.461,1259,0.638,1272,0.725,1305,1.266,1310,5.08,1334,1.913,1363,2.141,1375,0.94,1406,1.147,1449,0.911,1450,2.667,1489,1.461,1545,1.406,1584,0.651,1591,1.375,1646,0.94,1665,0.779,1670,0.675,1916,0.94,1938,0.816,1971,0.681,1990,0.94,2035,0.655,2224,0.94,2339,2.564,2407,0.911,2648,2.717,2716,1.832,3359,1.588,3361,1.588,3362,1.588,3368,0.911,3498,0.977,3541,3.223,3546,0.977,3548,0.911,3550,1.026,3552,1.763,3557,3.896,3575,0.911,3576,1.101,3577,1.026,3578,2.064,3579,1.101,3580,2.064,3581,1.924,3582,2.914,3583,2.064,3584,3.67,3585,1.101,3586,2.064,3587,1.101,3588,1.026,3589,1.101,3590,2.064,3591,1.101,3592,1.101,3593,1.101,3594,2.064,3595,1.101,3596,1.101,3597,1.026,3598,10.75,3599,2.064,3600,1.101,3601,0.769,3602,1.026,3603,1.101,3604,1.101,3605,1.026,3606,0.886,3607,1.101,3608,2.064,3609,1.101,3610,1.101,3611,1.101,3612,1.101,3613,1.101,3614,1.101,3615,0.911,3616,1.026,3617,1.101,3618,5.508,3619,1.101,3620,4.956,3621,2.064,3622,8.265,3623,1.101,3624,1.026,3625,3.67,3626,1.101,3627,1.026,3628,1.101,3629,2.914,3630,1.101,3631,1.101,3632,3.67,3633,1.101,3634,2.064,3635,1.101,3636,1.101,3637,3.67,3638,3.67,3639,6.466,3640,2.064,3641,2.064,3642,2.064,3643,1.101,3644,1.101,3645,2.914,3646,2.064,3647,1.101,3648,1.101,3649,1.101,3650,1.101,3651,1.101,3652,1.101,3653,1.101,3654,1.101,3655,1.101,3656,1.101]],["component/161",[220,0.615]],["title/162-1",[1255,66.009]],["name/162-1",[]],["text/162-1",[]],["component/162-1",[]],["title/162-2",[78,28.089,324,19.581,446,50.22]],["name/162-2",[]],["text/162-2",[]],["component/162-2",[]],["title/162-3",[139,24.724,1195,48.981]],["name/162-3",[]],["text/162-3",[]],["component/162-3",[]],["title/162-4",[324,23.719,387,53.626]],["name/162-4",[]],["text/162-4",[]],["component/162-4",[]],["title/162-5",[80,31.922]],["name/162-5",[]],["text/162-5",[]],["component/162-5",[]],["title/162-6",[57,28.307,336,54.515]],["name/162-6",[]],["text/162-6",[]],["component/162-6",[]],["title/162-7",[1862,66.962]],["name/162-7",[]],["text/162-7",[]],["component/162-7",[]],["title/162",[8,7.229,22,8.92,42,11.611,46,8.999,78,16.544,324,11.533,446,29.579]],["name/162",[8,0.178,42,0.285,46,0.221,78,0.407,324,0.283,3657,0.819]],["text/162",[0,0.967,3,0.381,4,0.415,5,2.148,6,0.537,8,2.341,10,0.486,12,2.773,14,1.986,22,1.744,23,0.544,24,1.638,25,1.17,27,1.176,32,0.465,35,0.862,38,1.704,40,1.107,42,2.771,46,2.325,49,1.915,52,0.442,57,1.817,61,0.364,62,0.618,64,0.413,67,0.493,68,0.914,78,1.911,80,1.414,82,0.375,83,1.565,89,0.567,92,1.664,94,1.085,95,1.229,96,0.415,106,0.455,116,0.57,121,0.602,122,0.654,126,0.539,129,2.443,131,3.62,139,0.653,142,0.369,155,0.649,159,2.618,160,0.473,162,1.258,163,1.354,169,0.443,171,0.498,186,1.416,189,0.389,191,0.404,194,1.133,195,0.602,198,0.462,199,0.451,200,2.65,204,0.96,208,1.001,213,0.57,216,2.687,218,0.41,219,0.867,225,0.419,227,0.58,238,2.268,241,0.917,248,1.604,257,0.721,281,0.638,285,1.445,315,0.997,318,0.236,320,0.479,324,3.766,325,1.148,329,2.75,334,3.721,336,0.765,347,0.318,365,0.447,378,0.539,379,0.924,381,1.702,387,3.011,389,2.333,396,0.675,398,0.388,399,1.418,408,0.975,412,1.165,416,2.148,424,0.51,425,0.549,426,0.525,431,2.186,446,3.416,472,0.73,481,0.567,482,0.86,515,0.47,520,1.148,535,0.61,551,1.793,554,0.567,561,0.594,568,0.482,609,1.091,623,0.59,626,2.325,633,0.587,638,1.094,639,0.657,655,2.918,660,1.36,689,0.86,705,0.348,708,0.823,724,0.614,725,4.313,734,2.024,741,0.695,744,0.576,749,0.573,774,0.794,808,0.555,849,0.654,867,0.853,887,0.576,892,3.721,916,0.451,920,0.811,925,0.567,967,0.464,968,0.831,969,0.506,971,0.778,972,0.778,973,0.654,1001,1.067,1034,0.915,1060,3.788,1071,0.867,1072,0.881,1096,0.711,1101,0.831,1103,1.183,1132,0.765,1195,2.75,1255,0.73,1259,1.595,1268,1.466,1308,1.452,1334,0.454,1337,1.466,1352,2.007,1397,3.085,1407,0.915,1498,0.73,1545,2.369,1573,0.765,1601,0.831,1618,0.741,1656,0.721,1665,1.375,1670,0.633,1675,1.221,1701,0.73,1718,0.598,1862,0.741,1971,1.201,2083,0.794,2346,0.752,2354,0.711,2475,0.794,2481,1.527,2645,0.881,2678,0.961,2712,0.633,2879,2.799,2913,0.881,2933,2.876,2936,1.466,3081,0.741,3117,0.915,3119,0.915,3224,0.961,3359,2.117,3361,2.117,3362,2.117,3394,0.853,3407,0.961,3514,4.399,3519,0.721,3541,0.765,3545,1.81,3546,0.915,3548,0.853,3552,1.659,3566,0.794,3571,0.881,3657,0.961,3658,1.032,3659,1.032,3660,1.032,3661,1.032,3662,0.961,3663,3.476,3664,1.942,3665,1.942,3666,2.04,3667,3.476,3668,1.032,3669,2.752,3670,1.942,3671,1.032,3672,1.607,3673,1.032,3674,1.942,3675,1.032,3676,1.032,3677,1.032,3678,1.032,3679,1.032,3680,1.032,3681,1.032,3682,1.032,3683,1.032,3684,1.942,3685,1.032,3686,1.942,3687,1.942,3688,1.032,3689,1.032,3690,1.032,3691,1.032,3692,1.032,3693,1.032,3694,1.942,3695,1.032,3696,1.032,3697,1.032,3698,0.961,3699,1.032,3700,1.357,3701,1.942,3702,1.032,3703,5.256,3704,1.032,3705,4.129,3706,4.129,3707,0.961,3708,1.032,3709,1.032,3710,3.476,3711,0.915,3712,1.032,3713,1.032,3714,1.032,3715,1.032,3716,1.942,3717,1.032,3718,1.032,3719,1.032,3720,5.256,3721,1.032,3722,4.719,3723,1.032,3724,1.032]],["component/162",[220,0.615]],["title/163-1",[248,28.565,329,32.642]],["name/163-1",[]],["text/163-1",[]],["component/163-1",[]],["title/163-2",[110,38.095]],["name/163-2",[]],["text/163-2",[]],["component/163-2",[]],["title/163-3",[8,12.273,22,15.145,329,26.947]],["name/163-3",[]],["text/163-3",[]],["component/163-3",[]],["title/163-4",[52,26.02,317,15.553,402,39.608]],["name/163-4",[]],["text/163-4",[]],["component/163-4",[]],["title/163-5",[46,18.508,80,25.176]],["name/163-5",[]],["text/163-5",[]],["component/163-5",[]],["title/163-6",[65,28.28,92,16.305,329,26.947]],["name/163-6",[]],["text/163-6",[]],["component/163-6",[]],["title/163-7",[92,19.751,3348,59.201]],["name/163-7",[]],["text/163-7",[]],["component/163-7",[]],["title/163-8",[92,19.751,610,62.794]],["name/163-8",[]],["text/163-8",[]],["component/163-8",[]],["title/163-9",[107,73.291]],["name/163-9",[]],["text/163-9",[]],["component/163-9",[]],["title/163-10",[431,46.237,1545,50.099]],["name/163-10",[]],["text/163-10",[]],["component/163-10",[]],["title/163-11",[24,16.047,329,26.947,678,32.83]],["name/163-11",[]],["text/163-11",[]],["component/163-11",[]],["title/163-12",[447,35.112,479,35.37]],["name/163-12",[]],["text/163-12",[]],["component/163-12",[]],["title/163",[248,20.079,329,22.944,389,19.464,416,26.884]],["name/163",[329,0.73,389,0.619,416,0.855]],["text/163",[2,0.257,3,0.306,5,0.694,6,1.794,8,1.868,10,0.39,14,0.545,15,0.439,16,0.585,20,0.384,22,1.95,23,0.437,24,1.178,25,2.085,26,1.138,27,2.097,30,0.571,34,0.812,35,1.278,36,0.557,37,0.394,38,2.518,40,0.916,41,0.618,42,1.593,46,2.584,47,0.412,52,1.703,54,0.891,55,0.557,58,0.747,62,0.263,64,0.904,65,1.607,70,0.535,71,1.229,72,1.999,73,0.54,76,0.504,77,0.298,78,0.383,79,0.973,80,2.303,82,0.301,83,1.961,88,1.864,92,3.167,93,0.713,99,1.595,103,1.011,105,0.848,106,0.365,107,0.651,109,0.431,110,1.623,112,0.603,113,0.474,114,0.932,115,0.338,117,3.008,120,0.512,129,1.491,131,1.785,133,1.635,134,0.313,138,0.336,139,1.499,143,1.515,144,0.364,159,0.412,162,0.571,163,0.614,165,0.448,167,0.571,169,0.678,177,1.197,179,1.354,180,0.392,183,0.446,189,1.086,190,0.564,191,1.349,194,0.92,196,0.439,198,1.29,199,0.987,200,0.382,201,0.452,202,0.795,204,0.779,205,0.908,206,0.493,208,1.164,216,1.561,217,0.474,218,0.898,219,1.546,225,1.17,228,0.839,232,0.493,233,0.404,234,1.326,241,0.391,246,1.057,247,0.395,248,1.905,251,0.429,257,0.578,262,0.295,272,1.326,273,0.881,274,1.918,281,0.512,283,0.844,285,0.828,287,0.52,288,0.594,289,0.504,291,0.363,299,0.397,300,0.799,313,0.891,315,0.809,317,1.018,318,1.84,320,1.048,321,0.441,323,1.288,324,1.438,325,0.489,326,0.417,328,1.45,329,5.201,334,0.586,337,0.439,338,0.46,346,0.637,347,1.065,348,0.908,355,0.504,356,0.571,365,0.979,371,0.512,377,0.564,378,0.824,379,0.394,380,0.614,389,0.312,391,0.412,394,1.019,395,0.508,396,0.288,398,0.312,399,0.427,402,0.54,408,0.416,409,0.54,417,1.381,420,1.36,423,0.358,424,0.779,426,0.421,431,2.802,435,1.029,436,0.457,438,0.496,440,0.546,447,1.078,453,0.52,461,1.213,471,0.564,473,0.734,479,0.758,480,0.48,482,0.366,508,1.213,512,0.489,515,0.377,520,0.489,521,0.709,542,0.36,545,0.836,547,0.715,549,0.38,551,1.355,555,1.499,556,0.429,557,0.857,558,0.512,561,0.908,562,0.5,563,0.707,565,0.452,568,0.387,571,0.455,587,0.594,597,0.448,609,0.465,610,0.707,620,0.45,623,0.902,626,0.213,633,0.471,638,0.898,639,2.469,646,1.374,661,0.419,678,0.448,685,1.05,687,0.535,689,0.366,697,0.45,705,1.164,706,0.551,708,0.668,721,0.607,722,0.711,725,0.54,729,0.508,731,1.843,744,0.462,749,0.46,751,0.666,761,1.019,762,0.578,763,0.707,774,0.637,781,1.132,782,0.477,795,1.074,808,0.848,812,0.651,822,1.774,830,0.489,832,0.477,849,0.525,861,0.707,869,0.685,915,0.483,916,0.362,935,0.578,956,1.215,967,1.014,982,0.471,1058,0.52,1059,1.374,1073,0.462,1090,0.685,1092,0.625,1095,0.445,1098,1.087,1103,0.356,1118,0.493,1131,0.535,1170,0.734,1187,0.367,1213,0.546,1242,0.614,1262,1.087,1264,0.932,1294,1.074,1305,0.508,1308,0.437,1310,0.409,1323,0.604,1413,1.239,1424,0.685,1436,0.651,1437,0.771,1491,0.594,1507,0.785,1510,0.564,1514,1.05,1532,0.666,1544,0.564,1545,3.037,1584,0.932,1596,0.604,1661,0.625,1663,0.734,1675,0.52,1681,0.926,1697,0.707,1718,0.48,1837,1.557,1849,0.557,2033,2.025,2061,0.666,2249,2.603,2262,0.666,2266,0.685,2330,0.512,2340,0.578,2341,0.945,2370,0.832,2377,0.586,2409,0.546,2437,0.564,2438,0.685,2470,0.666,2549,0.666,2591,0.734,2661,0.54,2719,1.101,2734,0.604,2855,0.771,2874,1.132,2898,0.625,2916,0.734,3115,0.734,3165,1.346,3169,0.771,3216,0.604,3348,0.666,3394,0.685,3436,0.666,3445,0.771,3519,1.577,3531,1.399,3534,5.321,3535,1.469,3577,1.469,3581,1.469,3662,0.771,3725,0.828,3726,0.771,3727,0.828,3728,0.828,3729,4.905,3730,1.576,3731,0.828,3732,0.828,3733,0.828,3734,2.257,3735,2.257,3736,0.828,3737,1.576,3738,0.771,3739,0.828,3740,0.828,3741,0.828,3742,0.828,3743,0.828,3744,0.828,3745,0.771,3746,1.576,3747,1.576,3748,0.828,3749,0.828,3750,0.828,3751,0.828,3752,1.576,3753,0.771,3754,0.707,3755,0.828,3756,0.828,3757,0.828,3758,0.828,3759,0.828,3760,0.828,3761,0.734,3762,0.828,3763,0.637,3764,0.771,3765,0.828,3766,0.828,3767,0.828,3768,0.828,3769,0.828,3770,2.257,3771,0.707,3772,0.828,3773,0.828,3774,0.734,3775,0.828,3776,0.734,3777,0.771,3778,0.685,3779,0.707,3780,0.828,3781,0.734,3782,0.666]],["component/163",[220,0.615]],["title/164-1",[1255,66.009]],["name/164-1",[]],["text/164-1",[]],["component/164-1",[]],["title/164-2",[424,46.07]],["name/164-2",[]],["text/164-2",[]],["component/164-2",[]],["title/164-3",[3,27.167,1334,32.349]],["name/164-3",[]],["text/164-3",[]],["component/164-3",[]],["title/164-4",[8,10.45,378,27.009,431,32.5,1545,35.215]],["name/164-4",[]],["text/164-4",[]],["component/164-4",[]],["title/164-5",[3,16.626,5,13.827,323,14.59,324,14.516,535,26.607]],["name/164-5",[]],["text/164-5",[]],["component/164-5",[]],["title/164-6",[42,12.941,323,12.919,324,12.854,1264,23.56,1334,17.53,3519,27.834]],["name/164-6",[]],["text/164-6",[]],["component/164-6",[]],["title/164",[42,16.785,248,20.079,329,22.944,1334,22.738]],["name/164",[42,0.534,329,0.73,1334,0.723]],["text/164",[0,2.057,3,3.954,4,1.662,5,2.54,8,2.006,10,1.111,14,3.076,15,2.189,24,1.986,34,0.849,40,0.751,42,3.476,46,2.081,47,1.175,49,0.786,52,2.834,53,1.395,66,0.987,74,1.081,75,1.459,79,1.017,80,1.414,82,1.501,89,1.296,96,1.662,106,1.822,131,1.722,143,0.802,144,1.038,154,1.524,157,1.471,159,2.057,160,1.892,161,3.117,162,2.393,163,0.919,168,1.785,180,1.118,189,1.559,196,1.251,198,1.057,206,1.405,216,0.826,218,0.938,219,0.744,238,1.539,241,1.114,246,0.866,248,4.397,250,1.436,264,1.35,272,1.385,310,2.383,311,2.335,315,1.211,319,1.311,320,1.917,323,2.68,324,2.872,326,2.778,328,2.151,329,4.195,337,2.189,344,1.135,347,0.728,350,1.749,369,2.523,375,1.276,378,3.455,383,2.222,390,1.944,392,1.449,396,1.435,398,0.888,412,1.415,417,0.945,422,1.815,424,4.085,426,3.363,431,4.725,432,1.077,452,1.471,469,4.704,470,1.899,471,1.607,472,1.67,480,1.367,482,1.044,489,2.015,490,1.899,491,1.425,515,1.074,530,1.627,535,3.909,538,2.924,572,1.952,597,2.979,609,1.326,620,2.245,626,1.065,631,1.589,660,1.166,788,1.899,969,1.157,1004,1.524,1035,2.966,1171,1.952,1176,2.093,1203,2.093,1226,2.409,1255,1.67,1264,4.887,1272,1.555,1334,3.917,1335,1.815,1413,1.855,1482,1.51,1514,2.751,1545,3.753,2928,1.607,3519,5.248,3520,2.093,3521,2.093,3522,2.015,3557,1.855,3783,2.359,3784,2.359,3785,4.13,3786,4.13,3787,2.359,3788,3.849,3789,2.359]],["component/164",[220,0.615]],["title/165-1",[328,23.92,329,32.642]],["name/165-1",[]],["text/165-1",[]],["component/165-1",[]],["title/165-2",[14,20.977,326,30.616,328,19.747]],["name/165-2",[]],["text/165-2",[]],["component/165-2",[]],["title/165-3",[60,16.431]],["name/165-3",[]],["text/165-3",[]],["component/165-3",[]],["title/165-4",[1928,46.644,3790,60.833]],["name/165-4",[]],["text/165-4",[]],["component/165-4",[]],["title/165",[46,10.03,248,15.48,318,9.103,326,20.098,328,12.963,329,17.689]],["name/165",[46,0.321,318,0.291,328,0.414,329,0.566]],["text/165",[0,0.576,2,2.322,3,1.669,4,0.87,8,0.615,12,3.277,14,1.051,15,5.466,16,1.676,17,0.704,22,2.479,24,1.01,25,0.491,27,0.924,37,1.028,40,0.968,42,1.669,46,1.787,47,0.576,52,0.495,54,0.653,57,0.832,58,0.548,60,1.441,61,2.012,62,1.815,63,0.548,64,0.866,65,0.538,68,4.252,71,0.77,74,0.99,76,0.704,80,1.309,82,1.389,88,0.542,92,1.027,98,7.499,105,0.622,106,0.51,110,0.883,131,1.195,134,0.437,139,0.727,141,0.601,142,0.413,143,1.938,144,0.508,148,2.585,153,3.471,155,0.727,156,0.531,158,1.917,159,0.576,166,1.026,168,2.222,169,1.308,172,1.539,177,0.613,180,0.548,189,1.148,191,0.845,196,0.613,198,1.713,208,0.596,210,4.041,216,1.065,225,2.09,232,1.812,233,0.564,234,0.679,238,0.754,241,0.546,245,0.956,248,1.182,251,0.598,254,0.604,260,0.674,262,0.412,264,0.661,274,0.558,285,0.607,295,0.733,299,0.554,309,0.74,312,0.639,316,0.683,317,0.296,318,1.419,320,1.413,321,0.616,326,3.776,328,3.354,329,2.005,336,1.602,338,1.201,341,0.619,344,1.039,347,1.18,355,0.704,364,1.021,365,0.937,366,0.635,367,1.163,369,0.99,381,0.715,386,1.124,387,1.576,389,1.146,390,0.544,392,0.758,396,0.402,398,0.435,403,0.818,404,1.371,408,0.58,409,0.754,410,0.787,414,0.653,417,0.463,426,0.588,431,2.841,452,3.873,461,0.889,489,0.987,491,0.698,494,1.645,508,1.663,510,0.843,540,0.487,542,0.939,547,1.734,551,0.737,554,0.635,556,0.598,565,1.181,571,0.635,573,2.7,589,1.175,596,0.709,609,1.71,612,0.666,621,1.026,626,0.785,638,1.21,661,0.585,662,0.721,674,1.296,676,0.221,677,1.157,689,0.512,708,1.62,721,0.445,725,4.885,730,0.504,753,0.604,774,1.663,782,0.666,786,0.548,795,2.073,796,0.67,804,0.67,809,0.83,812,0.477,814,0.987,822,0.909,864,1.269,878,0.77,898,0.715,910,1.157,931,0.632,935,0.807,956,1.163,960,1.458,965,0.508,967,0.519,969,0.567,972,0.872,988,0.709,1058,0.727,1060,1.424,1068,0.857,1069,0.77,1082,0.65,1108,3.637,1150,0.74,1152,2.745,1195,0.77,1198,0.872,1257,1.359,1273,0.747,1288,2.404,1296,0.889,1310,0.571,1315,0.818,1406,0.642,1450,0.709,1498,2.154,1500,0.733,1507,0.576,1520,0.909,1545,3.078,1599,0.564,1605,0.818,1618,0.83,1643,1.852,1645,0.727,1909,1.336,1913,0.987,1928,1.371,1971,1.881,2033,1.269,2256,2.341,2268,0.843,2296,1.026,2323,2.706,2325,0.956,2339,0.807,2401,0.77,2488,1.077,2661,0.754,2734,0.843,2874,0.83,2876,0.889,2991,1.552,3143,1.077,3295,1.788,3298,0.747,3380,1.077,3431,1.026,3432,0.987,3450,1.077,3453,1.917,3502,1.576,3519,1.509,3615,0.956,3791,1.026,3792,1.156,3793,3.822,3794,1.156,3795,1.156,3796,1.156,3797,2.836,3798,5.001,3799,1.156,3800,1.156,3801,3.042,3802,1.156,3803,1.156,3804,1.156,3805,1.156,3806,1.156,3807,1.845,3808,1.156,3809,1.156,3810,1.156,3811,1.077,3812,1.156,3813,1.156,3814,2.014,3815,1.077,3816,4.009,3817,2.161,3818,1.156,3819,2.161,3820,2.161,3821,1.026,3822,1.156,3823,1.156,3824,1.845,3825,0.987,3826,0.956,3827,1.156,3828,0.987,3829,1.156,3830,1.156,3831,1.156,3832,1.156,3833,1.156,3834,2.161,3835,1.156,3836,1.156,3837,1.156]],["component/165",[220,0.615]],["title/166-1",[329,32.642,1264,43.476]],["name/166-1",[]],["text/166-1",[]],["component/166-1",[]],["title/166-2",[60,16.431]],["name/166-2",[]],["text/166-2",[]],["component/166-2",[]],["title/166",[46,11.327,248,17.482,318,10.281,329,19.977,1264,26.607]],["name/166",[46,0.321,318,0.291,329,0.566,1264,0.753]],["text/166",[0,1.655,8,1.119,14,1.148,22,2.299,24,1.463,39,2.672,41,3.253,42,1.797,46,2.889,47,2.757,48,1.655,60,0.586,61,2.51,68,1.564,71,1.184,72,1.926,74,3.801,79,2.386,80,2.435,83,1.89,88,1.559,92,2.228,98,2.508,109,2.879,115,1.358,122,2.108,130,1.736,131,1.731,143,2.82,165,1.797,168,3.075,180,1.575,191,2.165,196,2.934,209,2.038,211,2.292,212,1.761,225,4.046,248,1.291,251,1.72,260,1.938,272,1.951,273,3.093,295,2.108,297,2.838,309,2.127,312,1.836,317,0.851,320,3.852,321,1.77,325,1.965,329,2.457,344,1.598,347,1.709,350,2.463,364,1.57,365,1.441,366,1.826,367,1.788,390,2.605,392,1.166,414,1.879,417,1.331,431,3.48,452,3.451,530,2.292,542,1.445,547,2.511,556,1.72,589,1.806,609,3.998,662,2.072,676,0.635,685,2.213,734,2.714,786,1.575,788,2.675,795,4.846,796,1.926,812,1.372,822,2.612,864,3.25,878,2.213,952,2.838,1068,2.463,1069,2.213,1122,4.456,1136,2.387,1152,2.387,1171,2.749,1264,4.905,1298,4.177,1498,2.353,1514,3.687,1545,3.771,1855,1.698,2661,2.168,2928,3.771,3295,4.579,3519,6.437,3520,2.949,3521,2.949,3522,2.838,3523,2.949,3825,2.838,3826,2.749,3838,3.323,3839,2.949,3840,3.323,3841,3.323,3842,3.323,3843,3.323,3844,5.535,3845,3.323]],["component/166",[220,0.615]],["title/167-1",[324,23.719,329,32.642]],["name/167-1",[]],["text/167-1",[]],["component/167-1",[]],["title/167-2",[60,16.431]],["name/167-2",[]],["text/167-2",[]],["component/167-2",[]],["title/167-3",[42,28.85,324,19.581]],["name/167-3",[]],["text/167-3",[]],["component/167-3",[]],["title/167-4",[324,23.719,2526,53.626]],["name/167-4",[]],["text/167-4",[]],["component/167-4",[]],["title/167",[46,11.327,248,17.482,318,10.281,324,14.516,329,19.977]],["name/167",[46,0.321,318,0.291,324,0.411,329,0.566]],["text/167",[0,1.143,3,0.455,4,1.295,5,0.989,8,1.406,10,2.235,11,0.534,12,0.65,14,1.641,16,0.457,22,2.259,24,1.255,29,1.157,30,0.85,32,1.451,34,0.443,35,1.018,38,0.955,41,0.483,42,2.397,46,2.047,49,0.411,52,0.528,54,0.697,60,0.567,61,1.136,62,1.024,68,0.58,71,0.439,74,1.474,79,0.531,80,2.38,82,1.465,83,2.292,85,1.125,86,1.674,88,0.578,91,0.6,92,1.082,96,0.496,115,1.647,117,1.819,120,0.762,122,2.556,126,0.644,128,1.368,131,2.43,133,0.584,134,1.524,135,1.976,138,0.5,139,0.414,141,0.641,143,1.37,144,1.773,159,1.143,162,0.446,168,1.391,171,0.595,172,0.923,177,0.653,180,0.584,181,0.914,189,0.465,191,1.857,194,0.719,195,1.877,199,0.539,200,3.404,204,1.134,208,1.183,213,1.268,216,0.803,225,2.425,227,0.693,233,0.602,236,0.616,239,0.607,241,0.582,247,0.589,248,1.25,251,0.638,260,0.719,291,2.083,295,0.782,297,1.053,299,0.591,309,2.06,312,0.681,315,1.651,316,0.729,317,0.825,318,0.282,319,0.685,320,1.871,321,0.657,324,3.159,329,1.429,344,0.593,347,2.399,348,0.71,350,0.914,355,1.396,356,0.85,364,0.582,366,0.677,367,0.663,386,0.455,390,0.58,392,0.432,396,0.428,401,0.635,404,0.782,409,0.804,417,2.389,423,0.533,428,0.812,431,2.024,437,0.745,445,0.93,447,0.589,454,0.84,466,0.969,491,2.435,494,0.667,512,0.729,520,1.356,535,0.729,542,0.998,547,1.46,551,2.034,555,0.536,556,0.638,565,3.259,581,0.705,589,0.67,591,0.775,609,3.029,622,1.275,625,0.729,626,0.592,638,0.912,654,0.969,655,1.99,662,0.768,671,0.992,673,1.149,674,2.848,676,0.438,687,2.08,689,1.424,695,0.83,705,0.774,724,0.734,725,1.497,727,0.775,729,0.756,730,0.537,731,0.789,734,1.578,736,0.657,744,1.282,746,0.768,752,0.693,762,0.861,763,1.053,772,1.053,786,0.584,788,0.992,795,2.193,796,2.335,812,0.509,821,4.042,822,0.969,830,1.356,853,1.673,855,1.512,864,1.347,878,0.821,883,0.734,908,0.745,910,0.66,916,0.539,967,0.554,988,1.407,1004,0.796,1058,1.443,1068,0.914,1069,0.821,1072,2.748,1073,0.689,1103,1.383,1131,0.796,1137,0.914,1150,0.789,1152,0.885,1166,0.914,1187,0.547,1254,1.02,1257,0.775,1264,0.729,1272,0.812,1290,0.804,1291,0.861,1294,1.563,1298,0.724,1301,0.796,1308,0.65,1363,0.719,1406,0.685,1413,3.168,1498,0.873,1515,0.739,1532,1.847,1545,2.193,1549,0.899,1585,0.84,1592,0.992,1618,2.311,1644,0.914,1670,0.756,1855,1.644,1882,1.731,1883,1.094,1990,1.959,1992,1.602,2247,0.992,2249,1.731,2256,1.765,2265,0.83,2325,1.02,2346,0.899,2356,0.861,2437,0.84,2446,0.93,2526,0.899,2572,1.765,2661,4.23,2668,2.663,2818,0.804,2829,1.053,2872,0.804,2991,0.885,3295,1.898,3394,1.02,3443,1.053,3446,0.899,3455,0.992,3483,1.053,3499,1.094,3519,4.166,3531,1.094,3541,2.386,3547,2.138,3548,1.898,3776,2.856,3781,1.094,3791,1.094,3825,1.053,3826,1.02,3846,1.094,3847,2.036,3848,1.959,3849,1.232,3850,1.149,3851,1.232,3852,1.094,3853,8.267,3854,1.149,3855,1.053,3856,1.959,3857,1.232,3858,3,3859,1.149,3860,1.232,3861,1.232,3862,1.149,3863,1.232,3864,1.149,3865,1.232,3866,1.232,3867,1.232,3868,1.149,3869,1.094,3870,1.232,3871,1.232,3872,1.232,3873,1.149,3874,1.149,3875,1.232,3876,1.232,3877,1.149,3878,1.149,3879,1.232,3880,1.094]],["component/167",[220,0.615]],["title/168-1",[323,23.839,329,32.642]],["name/168-1",[]],["text/168-1",[]],["component/168-1",[]],["title/168-2",[60,16.431]],["name/168-2",[]],["text/168-2",[]],["component/168-2",[]],["title/168-3",[8,10.45,35,22.944,42,16.785,66,21.617]],["name/168-3",[]],["text/168-3",[]],["component/168-3",[]],["title/168-4",[42,23.88,321,39.17]],["name/168-4",[]],["text/168-4",[]],["component/168-4",[]],["title/168-5",[42,19.714,323,19.68,3557,47.718]],["name/168-5",[]],["text/168-5",[]],["component/168-5",[]],["title/168-6",[323,23.839,2526,53.626]],["name/168-6",[]],["text/168-6",[]],["component/168-6",[]],["title/168-7",[128,31.257,180,34.859]],["name/168-7",[]],["text/168-7",[]],["component/168-7",[]],["title/168",[46,11.327,248,17.482,318,10.281,323,14.59,329,19.977]],["name/168",[46,0.321,318,0.291,323,0.413,329,0.566]],["text/168",[0,1.831,3,0.531,4,1.837,5,1.129,8,1.851,10,1.246,14,1.577,16,0.533,22,2.493,24,1.206,25,0.611,26,0.725,35,1.175,38,0.785,41,0.564,42,1.733,46,2.031,49,0.479,52,0.616,60,0.94,61,1.297,62,1.17,64,1.06,66,1.537,68,1.246,74,1.212,75,0.889,80,2.449,82,0.523,89,0.79,92,1.226,95,0.642,96,0.579,99,1.062,117,3.401,120,1.636,121,1.543,128,0.611,131,2.862,134,2.275,139,0.89,142,1.315,143,1.249,144,0.633,159,1.831,162,0.52,163,0.56,168,1.589,171,0.694,172,0.579,180,1.254,189,0.543,191,2.987,194,0.839,199,0.629,200,0.663,204,0.711,213,1.462,216,0.926,225,2.69,233,0.702,241,1.25,247,0.687,248,2.337,251,0.744,258,0.948,260,0.839,285,0.755,295,0.912,309,0.92,312,0.794,316,0.85,317,0.368,318,0.328,320,1.706,321,1.409,323,3.779,325,3.155,329,2.67,344,0.692,347,1.409,350,1.066,364,0.679,366,2.02,367,0.774,386,0.531,387,1.049,389,1.384,390,0.677,391,0.716,392,0.504,394,0.929,396,0.919,401,0.741,404,0.912,408,0.722,417,1.472,423,1.589,424,1.307,426,0.731,428,0.948,430,1.335,431,2.869,454,0.98,493,1.004,501,1.352,520,1.564,535,1.564,540,0.606,542,1.15,547,1.668,554,0.79,555,1.15,556,1.37,557,1.998,565,2.009,589,0.782,591,0.904,598,1.004,609,2.999,622,1.47,626,0.682,654,1.13,655,1.636,662,0.896,676,0.506,677,0.77,685,0.958,687,1.71,697,0.782,705,0.893,706,0.958,708,0.61,724,0.856,725,1.726,730,0.627,731,0.92,744,2.054,746,0.896,752,0.808,753,0.751,762,1.004,763,1.228,781,1.033,786,0.682,795,2.504,796,2.644,803,1.085,812,0.594,822,1.13,853,1.049,864,1.554,878,0.958,898,1.636,910,0.77,950,1.066,951,1.228,956,0.774,960,0.689,967,1.652,988,1.623,995,1.228,1004,0.929,1018,0.869,1047,1.018,1051,0.844,1068,1.066,1069,0.958,1074,1.106,1103,1.58,1131,0.929,1137,1.066,1152,1.033,1166,1.066,1174,0.948,1257,0.904,1258,1.106,1269,1.085,1272,0.948,1294,3.109,1298,0.844,1301,0.929,1308,0.759,1379,0.968,1396,1.033,1406,0.799,1413,2.08,1498,1.018,1545,3.109,1591,0.958,1592,1.158,1636,1.158,1854,0.92,1855,0.735,1878,1.744,1916,1.228,1928,0.912,2268,1.049,2270,0.948,2296,1.276,2370,1.396,2393,1.19,2410,0.992,2437,0.98,2526,1.049,2552,1.276,2572,1.106,2661,2.977,2829,1.228,3259,1.276,3295,2.189,3394,1.19,3499,1.276,3519,2.567,3541,5.983,3548,2.189,3557,3.587,3605,1.34,3666,1.066,3781,1.276,3825,1.228,3826,1.19,3847,1.276,3848,1.228,3850,2.466,3853,3.261,3862,1.34,3868,1.34,3869,1.276,3873,1.34,3874,1.34,3877,1.34,3878,1.34,3880,1.276,3881,1.438,3882,1.438,3883,3.675,3884,1.438,3885,1.438,3886,1.438,3887,1.438,3888,1.438,3889,1.438,3890,2.646,3891,1.438,3892,1.438,3893,1.438,3894,1.34,3895,1.438,3896,1.438,3897,1.438,3898,1.438,3899,1.438,3900,1.438,3901,1.438,3902,1.438,3903,1.438,3904,1.438,3905,1.438,3906,1.438,3907,1.438,3908,1.438,3909,1.438,3910,1.438,3911,1.438,3912,1.438,3913,1.438]],["component/168",[220,0.615]],["title/169-1",[320,43.288]],["name/169-1",[]],["text/169-1",[]],["component/169-1",[]],["title/169-2",[60,16.431]],["name/169-2",[]],["text/169-2",[]],["component/169-2",[]],["title/169",[46,15.279,318,13.868,320,28.184]],["name/169",[46,0.321,75,0.788,318,0.291,320,0.592]],["text/169",[2,0.988,8,0.644,11,1.381,14,1.101,22,1.333,25,1.355,29,1.607,34,1.923,35,2.372,39,1.539,41,1.249,42,2.242,45,0.988,46,2.842,57,2.657,60,0.562,62,1.014,79,2.304,80,1.83,82,1.942,84,1.455,86,4.682,92,2.418,96,1.283,106,1.406,112,2.64,115,1.302,128,2.272,131,1.671,142,1.912,143,2.346,144,1.402,171,1.539,172,2.151,186,2.324,199,1.394,202,1.607,205,3.077,216,1.116,234,1.871,289,3.253,318,0.728,320,3.205,336,2.362,337,1.689,347,1.65,361,2.543,366,1.751,379,1.516,392,1.875,396,1.107,417,2.141,423,1.378,452,1.987,461,2.452,491,1.925,513,3.607,521,1.432,547,3.132,551,1.087,555,2.324,557,1.732,581,3.95,596,1.955,626,0.822,638,1.267,639,4.489,641,2.289,642,2.021,643,3.077,653,2.198,676,0.609,686,2.452,689,1.41,705,1.075,708,1.351,721,1.227,722,1.437,736,1.697,792,2.362,793,2.565,794,2.97,795,4.703,796,1.847,908,1.925,910,1.706,916,3.019,931,1.742,982,1.812,1125,4.624,1231,4.263,1294,3.641,1301,2.059,1334,3.037,1541,1.706,1542,2.123,1599,1.556,1635,2.123,1656,3.733,1659,1.781,1684,2.452,1854,2.04,1878,2.1,2658,2.565,2701,2.97,2719,2.226,2732,2.256,2856,3.962,2928,2.171,3443,2.721,3519,2.226,3914,3.186,3915,7.532,3916,5.344,3917,4.201]],["component/169",[220,0.615]],["title/170-1",[8,10.45,46,13.009,318,11.808,321,27.533]],["name/170-1",[]],["text/170-1",[]],["component/170-1",[]],["title/170-2",[60,16.431]],["name/170-2",[]],["text/170-2",[]],["component/170-2",[]],["title/170-3",[66,21.617,91,25.145,535,30.56,1060,34.068]],["name/170-3",[]],["text/170-3",[]],["component/170-3",[]],["title/170",[46,15.279,318,13.868,321,32.336]],["name/170",[46,0.321,75,0.788,318,0.291,321,0.679]],["text/170",[3,0.902,5,0.75,8,1.943,14,3.749,22,1.915,23,1.287,24,2.228,25,1.808,32,1.918,38,0.724,39,1.178,42,3.12,45,2.099,46,2.64,48,1.215,49,0.813,60,0.996,62,1.8,66,5.429,71,0.869,80,2.317,82,2.055,91,1.187,92,0.655,99,0.98,125,2.865,126,2.223,134,2.138,137,2.102,138,0.99,139,2.276,144,2.487,162,3.478,172,0.982,177,1.293,200,1.125,203,1.211,204,1.206,251,1.263,275,1.293,283,2.277,285,2.968,291,2.969,301,2.019,320,2.625,321,4.829,323,1.379,325,1.443,332,1.662,342,1.592,347,1.313,348,1.405,354,2.551,362,1.453,369,1.949,386,2.089,389,0.919,390,1.149,396,0.848,398,0.919,420,2.009,438,1.463,444,1.485,452,1.521,479,1.174,482,2.502,494,4.559,498,1.643,499,2.533,535,2.515,542,1.849,549,2.599,551,1.929,555,1.061,557,1.327,562,1.474,591,1.534,615,1.704,620,2.312,625,1.443,626,1.745,638,2.248,641,1.753,656,1.78,660,1.206,662,2.652,676,0.466,677,1.306,678,1.32,697,1.327,705,0.823,706,5.113,736,1.3,745,1.841,793,5.449,796,2.465,821,2.652,855,2.803,898,1.509,931,1.334,959,1.521,964,1.474,969,2.772,1059,1.485,1060,4.461,1085,2.864,1103,1.828,1137,3.153,1183,1.423,1255,1.728,1285,2.154,1461,1.433,1932,1.728,2366,1.662,2409,1.608,2661,2.775,3918,2.274,3919,2.274,3920,2.274,3921,2.44,3922,2.44,3923,2.274,3924,2.274,3925,2.274,3926,2.274,3927,2.165]],["component/170",[220,0.615]],["title/171-1",[676,17.814]],["name/171-1",[]],["text/171-1",[]],["component/171-1",[]],["title/171-2",[14,20.977,42,19.714,1659,33.919]],["name/171-2",[]],["text/171-2",[]],["component/171-2",[]],["title/171-3",[60,16.431]],["name/171-3",[]],["text/171-3",[]],["component/171-3",[]],["title/171-4",[651,23.799,1308,38.79]],["name/171-4",[]],["text/171-4",[]],["component/171-4",[]],["title/171-5",[134,27.811,651,23.799]],["name/171-5",[]],["text/171-5",[]],["component/171-5",[]],["title/171",[14,20.977,42,19.714,46,15.279]],["name/171",[14,0.568,42,0.534,46,0.414]],["text/171",[2,2.616,5,0.875,8,2.09,14,4.611,16,1.056,22,2.291,38,1.885,39,2.346,40,0.906,41,1.116,42,4.242,46,3.446,49,0.949,60,1.619,61,1.714,62,0.906,64,2.546,71,1.014,75,3.004,80,3.145,110,1.163,115,1.163,134,3.19,138,1.154,143,0.968,144,1.252,160,1.304,168,2.1,236,1.424,248,3.276,251,3.29,272,1.672,315,1.461,316,1.683,317,0.729,318,2.863,320,2.256,321,2.588,323,1.575,324,1.567,326,1.436,328,1.58,329,4.961,347,1.962,365,1.234,386,1.795,389,1.072,392,0.999,396,1.688,398,1.829,414,1.609,452,1.775,521,1.279,551,1.657,554,1.564,556,1.474,568,1.331,597,2.627,626,2.368,651,1.572,676,2.061,678,1.54,859,1.857,920,2.238,965,2.796,969,1.396,1090,2.355,1264,2.872,1268,2.148,1307,2.238,1308,1.502,1451,3.666,1679,1.857,1680,2.076,2732,2.015,3519,1.988,3928,2.653,3929,2.431]],["component/171",[220,0.615]],["title/172-1",[676,17.814]],["name/172-1",[]],["text/172-1",[]],["component/172-1",[]],["title/172-2",[317,18.84,318,16.799]],["name/172-2",[]],["text/172-2",[]],["component/172-2",[]],["title/172-3",[60,16.431]],["name/172-3",[]],["text/172-3",[]],["component/172-3",[]],["title/172",[2866,63.523]],["name/172",[2866,2.671]],["text/172",[8,1.572,22,2.357,38,1.507,42,1.651,46,2.871,57,4.631,60,0.896,71,1.811,82,1.847,92,3.363,115,2.077,128,3.306,139,1.709,143,2.643,199,2.223,251,2.632,254,2.656,274,2.454,318,1.161,323,1.648,324,1.639,328,1.653,549,2.336,626,2.006,638,3.757,639,4.232,650,3.386,676,0.971,684,3.65,697,2.763,705,1.715,711,4.34,734,2.492,843,3.707,887,2.84,916,2.223,982,5.373,1020,3.35,1032,3.423,1051,2.985,1099,3.995,1278,3.768,1308,2.681,1490,4.937,1854,3.253,2828,3.463,2843,3.316,2866,9.611,3454,9.038,3930,4.737,3931,4.205,3932,4.737,3933,5.082]],["component/172",[220,0.615]],["title/173-1",[676,17.814]],["name/173-1",[]],["text/173-1",[]],["component/173-1",[]],["title/173-2",[317,18.84,318,16.799]],["name/173-2",[]],["text/173-2",[]],["component/173-2",[]],["title/173-3",[60,16.431]],["name/173-3",[]],["text/173-3",[]],["component/173-3",[]],["title/173",[219,19.134,468,41.359,519,30.616]],["name/173",[3934,3.92]],["text/173",[8,1.318,24,3.16,38,2.774,40,3.805,46,2.354,60,1.149,62,2.074,71,2.322,92,2.512,112,5.038,138,2.643,142,2.331,172,3.765,216,2.282,218,4.754,219,3.768,228,2.423,246,2.393,318,1.489,323,2.113,324,2.102,328,2.12,396,2.265,398,4.12,420,3.079,468,4.44,519,6.029,547,4.244,626,3.082,676,1.245,708,2.763,1103,2.801,1125,5.352]],["component/173",[220,0.615]],["title/174-1",[676,17.814]],["name/174-1",[]],["text/174-1",[]],["component/174-1",[]],["title/174-2",[317,18.84,318,16.799]],["name/174-2",[]],["text/174-2",[]],["component/174-2",[]],["title/174-3",[60,16.431]],["name/174-3",[]],["text/174-3",[]],["component/174-3",[]],["title/174",[310,26.51,2867,57.803]],["name/174",[3935,3.92]],["text/174",[2,3.58,8,0.928,16,1.703,22,1.793,34,1.652,46,1.155,49,1.53,60,0.809,64,1.839,71,1.636,92,2.693,95,2.05,131,4.014,182,2.816,183,3.535,189,1.733,191,1.796,200,4.086,204,2.268,219,1.447,228,1.707,246,1.686,262,3.571,310,2.592,318,1.049,323,1.488,324,1.481,328,1.493,347,1.417,365,1.99,392,1.61,398,1.729,471,3.128,527,2.05,545,1.7,617,3.92,626,2.806,676,0.877,705,2.426,708,3.047,720,2.335,812,1.895,1020,3.026,1290,2.995,1490,2.399,1629,7.566,1928,4.56,2248,5.671,2867,9.817,2991,7.2,3936,4.591,3937,4.591,3938,3.696,3939,4.591,3940,6.7,3941,4.591,3942,4.074,3943,4.279,3944,4.591,3945,6.7,3946,6.139,3947,7.188,3948,7.188]],["component/174",[220,0.615]],["title/175-1",[676,17.814]],["name/175-1",[]],["text/175-1",[]],["component/175-1",[]],["title/175-2",[317,18.84,318,16.799]],["name/175-2",[]],["text/175-2",[]],["component/175-2",[]],["title/175-3",[60,16.431]],["name/175-3",[]],["text/175-3",[]],["component/175-3",[]],["title/175",[310,26.51,2400,50.099]],["name/175",[3949,3.92]],["text/175",[2,3.278,8,1.569,38,2.302,46,2.66,60,1.368,62,3.364,79,3.345,92,3.228,183,2.197,191,3.036,228,2.885,246,2.849,274,3.747,310,3.81,318,1.773,323,2.516,324,2.503,328,2.525,436,4.288,551,4.401,625,4.588,626,3.327,676,1.483,708,3.29,730,3.384,812,3.204,837,4.155,1296,5.971,2400,7.2,3446,5.66]],["component/175",[220,0.615]],["title/176-1",[676,17.814]],["name/176-1",[]],["text/176-1",[]],["component/176-1",[]],["title/176-2",[317,18.84,318,16.799]],["name/176-2",[]],["text/176-2",[]],["component/176-2",[]],["title/176-3",[60,16.431]],["name/176-3",[]],["text/176-3",[]],["component/176-3",[]],["title/176",[119,28.058,183,12.738,310,16.224,499,20.162,551,15.351]],["name/176",[3950,3.92]],["text/176",[8,1.224,16,2.247,34,2.179,46,1.524,60,1.067,61,3.129,62,2.823,92,3.102,95,2.705,119,7.664,131,1.893,133,2.871,143,2.058,163,2.358,183,3.756,189,2.285,219,1.909,228,2.251,262,2.157,310,3.197,318,1.383,323,1.963,324,1.953,328,1.97,389,3.951,417,3.552,499,5.174,551,4.527,555,2.633,623,3.465,626,2.705,639,2.998,722,3.998,965,4.616,1155,4.287,1524,7.139,2341,3.631,2462,4.287,3571,5.171]],["component/176",[220,0.615]],["title/177-1",[676,17.814]],["name/177-1",[]],["text/177-1",[]],["component/177-1",[]],["title/177-2",[317,18.84,318,16.799]],["name/177-2",[]],["text/177-2",[]],["component/177-2",[]],["title/177-3",[60,16.431]],["name/177-3",[]],["text/177-3",[]],["component/177-3",[]],["title/177",[119,45.846,310,26.51]],["name/177",[3951,3.92]],["text/177",[8,2.056,22,2.355,42,1.127,46,2.833,60,1.792,62,1.105,65,1.617,84,2.621,92,2.536,112,3.26,119,8.752,142,2.624,160,1.59,172,2.953,185,2.795,188,2.097,191,2.245,216,3.56,221,2.872,228,3.169,246,1.275,260,2.025,299,1.664,310,2.069,317,0.889,318,0.793,323,1.125,324,1.12,328,1.129,347,1.772,361,2.731,389,3.829,396,1.994,398,1.307,417,2.299,467,2.394,499,1.555,549,1.596,551,4.514,555,4.104,565,3.137,568,2.683,571,1.908,626,3.53,676,0.663,753,1.814,800,1.962,965,1.527,1073,1.94,1155,2.458,1240,2.458,1288,2.183,1516,3.782,1628,2.532,1645,2.183,1837,2.394,2271,2.338,2302,2.288,2323,2.458,2386,2.872,2413,6.863,2462,5.195,3952,2.574]],["component/177",[220,0.615]],["title/178-1",[676,17.814]],["name/178-1",[]],["text/178-1",[]],["component/178-1",[]],["title/178-2",[317,18.84,318,16.799]],["name/178-2",[]],["text/178-2",[]],["component/178-2",[]],["title/178-3",[60,16.431]],["name/178-3",[]],["text/178-3",[]],["component/178-3",[]],["title/178-4",[515,33.47,651,23.799]],["name/178-4",[]],["text/178-4",[]],["component/178-4",[]],["title/178-5",[183,20.814,651,23.799]],["name/178-5",[]],["text/178-5",[]],["component/178-5",[]],["title/178-6",[22,18.346,199,32.158]],["name/178-6",[]],["text/178-6",[]],["component/178-6",[]],["title/178-7",[38,21.809,3953,59.201]],["name/178-7",[]],["text/178-7",[]],["component/178-7",[]],["title/178-8",[219,23.177,1334,32.349]],["name/178-8",[]],["text/178-8",[]],["component/178-8",[]],["title/178-9",[5,18.651,255,24.375,317,15.553]],["name/178-9",[]],["text/178-9",[]],["component/178-9",[]],["title/178",[23,38.79,310,26.51]],["name/178",[3954,3.92]],["text/178",[2,1.225,5,1.626,8,0.453,14,0.775,22,2.16,23,5.701,24,1.044,25,0.953,37,2.518,38,1.891,46,0.564,49,0.747,55,1.51,60,0.696,62,2.314,63,1.063,64,0.898,71,0.799,92,1.953,95,1.001,96,0.902,112,1.51,131,2.273,133,1.872,137,3.151,143,1.799,144,0.986,160,1.027,172,0.902,183,2.86,189,0.846,199,0.98,200,2.941,204,4.278,212,3.38,213,4.431,216,0.785,218,0.891,219,2.01,255,1.586,262,0.799,289,1.364,299,1.074,310,1.908,317,0.574,318,0.512,323,0.727,324,0.723,328,0.729,347,1.219,367,1.206,373,3.68,390,1.055,396,0.779,398,0.844,420,1.059,447,1.07,460,4.454,482,2.342,515,1.02,545,0.83,547,1.017,551,2.175,556,1.161,557,1.219,568,1.048,597,1.212,609,2.219,625,1.325,626,2.606,638,0.891,639,1.335,651,0.726,656,1.635,661,3.23,676,1.011,704,1.477,724,2.351,730,3.17,733,2.422,739,1.422,741,4.897,744,5.145,779,1.308,780,3.943,798,1.041,812,2.632,837,1.2,965,0.986,1020,7.318,1051,3.108,1151,1.2,1177,1.422,1197,1.692,1298,5.687,1497,8.629,1499,4.58,1512,1.725,1856,2.927,1938,2.927,2035,3.151,2379,2.551,2442,1.177,2609,6.777,2641,2.862,2642,2.232,2808,5.971,3953,1.805,3955,1.375,3956,1.805,3957,4.072,3958,1.805,3959,3.038,3960,3.948,3961,2.241,3962,7.452,3963,7.27,3964,1.914,3965,2.241]],["component/178",[220,0.615]],["title/179-1",[676,17.814]],["name/179-1",[]],["text/179-1",[]],["component/179-1",[]],["title/179-2",[317,18.84,318,16.799]],["name/179-2",[]],["text/179-2",[]],["component/179-2",[]],["title/179-3",[60,16.431]],["name/179-3",[]],["text/179-3",[]],["component/179-3",[]],["title/179-4",[133,28.778,139,20.411,183,17.183]],["name/179-4",[]],["text/179-4",[]],["component/179-4",[]],["title/179",[1677,38.606,2868,52.812]],["name/179",[3966,3.92]],["text/179",[2,1.306,8,0.488,16,0.895,22,1.051,32,1.088,34,0.868,38,0.716,40,1.341,46,1.06,47,2.098,48,2.792,60,0.425,62,1.784,67,1.152,71,0.86,74,1.105,78,1.949,84,1.102,92,1.804,95,1.881,131,4.452,133,5.12,138,0.978,139,2.816,143,0.82,163,0.939,165,3.632,183,3.057,189,0.91,191,0.944,198,1.081,199,1.842,200,4.155,204,3.766,205,3.227,213,3.71,218,1.675,234,1.417,262,0.86,286,1.348,310,0.87,318,0.551,323,0.782,324,0.778,328,0.785,347,0.745,383,2.266,396,2.333,398,1.586,417,1.687,490,1.942,521,1.084,538,1.708,540,1.017,551,2.6,571,1.326,612,1.389,620,2.29,626,2.159,639,3.389,676,0.461,705,1.421,722,1.088,744,4.258,749,2.34,753,1.261,779,3.269,780,4.713,798,1.12,834,5.278,955,1.517,965,1.061,967,1.084,1020,5.023,1051,3.943,1073,1.348,1134,4.025,1285,1.222,1295,1.685,1305,1.48,1379,1.625,1424,1.996,1500,2.671,1525,4.087,1628,1.759,1645,1.517,1677,1.267,2248,2.696,2340,1.685,2346,4.897,2549,1.942,2859,1.942,2868,4.823,2933,5.555,2970,2.249,3081,1.733,3962,4.312,3967,2.412,3968,2.249,3969,1.733,3970,2.412,3971,4.211,3972,2.412,3973,5.224,3974,1.996,3975,1.789,3976,9.728,3977,10.437,3978,2.412]],["component/179",[220,0.615]],["title/180-1",[676,17.814]],["name/180-1",[]],["text/180-1",[]],["component/180-1",[]],["title/180-2",[317,18.84,318,16.799]],["name/180-2",[]],["text/180-2",[]],["component/180-2",[]],["title/180-3",[60,16.431]],["name/180-3",[]],["text/180-3",[]],["component/180-3",[]],["title/180-4",[5,18.651,255,24.375,317,15.553]],["name/180-4",[]],["text/180-4",[]],["component/180-4",[]],["title/180",[248,28.565,2869,60.833]],["name/180",[248,0.9,2869,1.916]],["text/180",[2,1.742,5,3.421,6,2.922,8,1.136,20,2.608,22,1.401,24,2.944,46,1.414,60,0.99,62,2.67,64,2.25,65,2.617,92,3.357,99,2.256,139,1.889,159,4.179,183,2.842,189,2.12,205,3.235,212,2.978,219,3.164,228,2.088,246,2.062,248,3.259,255,2.256,285,2.949,317,1.439,318,1.283,323,1.821,324,1.812,328,1.827,347,1.734,353,3.783,362,3.344,386,2.075,396,1.952,407,4.034,515,4.57,623,3.214,626,2.871,651,3.857,676,1.073,705,1.895,708,2.381,722,2.532,730,4.378,829,5.321,928,7.417,1095,3.022,1651,4.322,2869,6.94]],["component/180",[220,0.615]],["title/181-1",[676,17.814]],["name/181-1",[]],["text/181-1",[]],["component/181-1",[]],["title/181-2",[317,18.84,318,16.799]],["name/181-2",[]],["text/181-2",[]],["component/181-2",[]],["title/181-3",[60,16.431]],["name/181-3",[]],["text/181-3",[]],["component/181-3",[]],["title/181-4",[5,18.651,255,24.375,317,15.553]],["name/181-4",[]],["text/181-4",[]],["component/181-4",[]],["title/181",[191,28.763,2870,44.759]],["name/181",[2870,2.386]],["text/181",[2,1.754,5,1.737,8,2.038,16,2.098,22,1.411,34,2.034,38,3.313,40,1.8,46,1.423,60,0.996,92,3.663,99,4.047,115,2.31,165,3.058,183,2.853,191,4.674,204,2.794,219,1.782,228,2.102,246,2.076,247,2.7,255,2.27,289,3.442,317,1.449,318,1.292,319,3.142,323,1.833,324,1.824,328,1.839,385,2.914,555,4.857,597,3.058,620,3.074,626,3.081,639,3.777,676,1.08,705,1.908,708,2.397,736,3.012,916,3.687,982,3.216,1285,4.27,1301,3.654,1363,3.298,1488,4.678,2340,3.95,2641,3.058,2843,3.689,2870,3.442,3979,5.27,3980,5.27]],["component/181",[220,0.615]],["title/182-1",[676,17.814]],["name/182-1",[]],["text/182-1",[]],["component/182-1",[]],["title/182-2",[317,18.84,318,16.799]],["name/182-2",[]],["text/182-2",[]],["component/182-2",[]],["title/182-3",[60,16.431]],["name/182-3",[]],["text/182-3",[]],["component/182-3",[]],["title/182-4",[5,18.651,255,24.375,317,15.553]],["name/182-4",[]],["text/182-4",[]],["component/182-4",[]],["title/182",[175,54.515,2871,45.108]],["name/182",[175,1.717,2871,1.421]],["text/182",[2,3.273,5,2.892,8,1.903,22,1.932,24,1.336,38,2.296,46,1.272,60,0.89,62,2.996,71,1.8,92,3.056,99,2.029,118,3.442,124,2.559,139,1.699,144,2.223,159,2.517,175,5.74,183,3.939,199,2.21,228,1.878,246,1.855,255,2.029,291,4.628,314,3.442,317,1.295,318,1.154,323,1.638,324,1.63,328,1.644,386,1.867,396,1.756,408,2.538,442,4.068,527,3.458,622,2.807,626,2.934,634,2.497,676,0.965,708,3.99,721,2.981,829,3.205,837,5.648,964,3.052,1085,2.559,1425,3.403,1516,2.604,1746,3.365,2370,4.965,2401,3.365,2871,7.906,3981,5.052]],["component/182",[220,0.615]],["title/183-1",[676,17.814]],["name/183-1",[]],["text/183-1",[]],["component/183-1",[]],["title/183-2",[317,18.84,318,16.799]],["name/183-2",[]],["text/183-2",[]],["component/183-2",[]],["title/183-3",[60,16.431]],["name/183-3",[]],["text/183-3",[]],["component/183-3",[]],["title/183-4",[5,18.651,255,24.375,317,15.553]],["name/183-4",[]],["text/183-4",[]],["component/183-4",[]],["title/183",[212,38.978,2871,45.108]],["name/183",[212,1.228,2871,1.421]],["text/183",[5,2.368,8,1.896,22,1.923,46,1.264,60,1.854,62,1.599,71,1.789,92,2.825,124,2.544,160,2.301,169,3.313,183,3.934,212,4.971,216,1.759,219,3.315,228,1.867,246,1.844,255,2.017,317,1.287,318,1.147,323,1.628,324,1.62,328,1.634,365,2.178,398,1.891,401,2.589,527,3.442,545,3.472,551,2.629,626,3.402,676,0.96,705,1.695,708,2.129,721,1.934,988,3.081,1187,2.23,1257,3.158,1298,2.949,1516,5.848,1659,2.807,2370,6.786,2871,8.26,3566,5.93]],["component/183",[220,0.615]],["title/184-1",[676,17.814]],["name/184-1",[]],["text/184-1",[]],["component/184-1",[]],["title/184-2",[317,18.84,318,16.799]],["name/184-2",[]],["text/184-2",[]],["component/184-2",[]],["title/184-3",[60,16.431]],["name/184-3",[]],["text/184-3",[]],["component/184-3",[]],["title/184-4",[5,18.651,255,24.375,317,15.553]],["name/184-4",[]],["text/184-4",[]],["component/184-4",[]],["title/184",[24,16.047,705,20.484,2871,37.238]],["name/184",[24,0.435,705,0.555,2871,1.008]],["text/184",[5,1.901,8,1.251,16,2.295,24,3.084,34,2.226,46,1.557,49,3.002,60,1.09,62,1.969,92,3.134,99,4.685,143,3.062,183,3.663,219,1.95,228,2.3,246,2.272,255,2.484,260,3.609,317,1.585,318,1.413,323,2.006,324,1.996,328,2.013,447,2.954,551,2.11,565,3.381,623,3.54,626,3.198,639,3.045,676,1.182,705,2.088,708,2.623,721,2.382,965,3.963,1103,2.659,1516,3.189,1633,4.38,2370,6.155,2871,7.939,3982,5.49,3983,4.267]],["component/184",[220,0.615]],["title/185-1",[676,17.814]],["name/185-1",[]],["text/185-1",[]],["component/185-1",[]],["title/185-2",[317,18.84,318,16.799]],["name/185-2",[]],["text/185-2",[]],["component/185-2",[]],["title/185-3",[60,16.431]],["name/185-3",[]],["text/185-3",[]],["component/185-3",[]],["title/185-4",[5,18.651,255,24.375,317,15.553]],["name/185-4",[]],["text/185-4",[]],["component/185-4",[]],["title/185",[24,16.047,219,19.134,2871,37.238]],["name/185",[24,0.435,219,0.518,2871,1.008]],["text/185",[2,2.565,5,0.846,8,0.557,22,2.251,24,3.159,38,0.817,40,3.241,46,0.693,60,0.832,62,1.974,65,1.283,88,1.292,92,2.424,93,1.246,99,1.106,103,4.042,131,3.183,137,2.334,141,1.433,143,1.606,148,1.576,159,1.372,162,1.71,163,1.073,169,1.184,182,2.898,183,3.452,191,1.078,200,1.27,204,1.361,213,1.522,219,2.844,228,1.024,246,1.012,248,1.07,255,1.897,262,2.209,291,1.208,310,2.65,317,0.706,318,0.629,323,0.893,324,0.889,328,0.896,364,1.301,396,1.642,417,2.944,460,1.924,540,1.992,542,1.198,545,3.341,586,1.9,626,2.327,651,1.529,662,1.718,676,0.903,705,0.93,708,1.168,721,2.83,730,3.205,734,1.351,744,1.539,798,4.189,910,1.475,980,3.218,1020,1.816,1085,1.395,1103,5.241,1149,1.607,1226,1.607,1490,4.715,1515,2.833,1516,5.686,2370,2.492,2442,1.446,2848,3.181,2871,7.48,3566,3.635,3962,2.12,3984,4.724,3985,2.568,3986,3.082,3987,4.724,3988,2.755,3989,2.755,3990,2.755,3991,2.755,3992,2.755,3993,2.755,3994,2.755,3995,2.755]],["component/185",[220,0.615]],["title/186-1",[676,17.814]],["name/186-1",[]],["text/186-1",[]],["component/186-1",[]],["title/186-2",[317,18.84,318,16.799]],["name/186-2",[]],["text/186-2",[]],["component/186-2",[]],["title/186-3",[60,12.959,142,26.301]],["name/186-3",[]],["text/186-3",[]],["component/186-3",[]],["title/186-4",[60,12.959,579,60.833]],["name/186-4",[]],["text/186-4",[]],["component/186-4",[]],["title/186-5",[183,20.814,219,23.177]],["name/186-5",[]],["text/186-5",[]],["component/186-5",[]],["title/186-6",[60,10.698,115,24.803,117,34.318]],["name/186-6",[]],["text/186-6",[]],["component/186-6",[]],["title/186-7",[247,35.112,708,31.171]],["name/186-7",[]],["text/186-7",[]],["component/186-7",[]],["title/186",[973,32.786,1404,36.103,1546,37.122,2872,33.724]],["name/186",[973,0.808,1404,0.89,1546,0.915,2872,0.831]],["text/186",[8,0.437,15,1.146,22,1.958,24,0.572,25,0.919,26,1.091,34,1.376,37,1.82,40,0.688,42,1.67,46,2.596,49,2.071,60,1.095,62,1.217,65,1.007,80,0.74,82,0.786,92,2.427,96,1.54,99,1.536,111,1.237,115,0.883,117,6.344,119,2.385,126,2.688,131,2.454,133,1.813,142,2.807,143,2.668,148,2.189,150,2.891,153,3.783,155,1.36,159,1.077,163,0.842,165,1.169,172,0.87,183,3.246,189,2.345,191,1.496,219,3.133,232,1.287,246,0.794,250,1.316,315,1.11,318,0.494,323,0.701,324,0.697,328,0.703,354,1.297,389,0.814,398,0.814,408,1.086,416,1.125,417,2.845,424,1.068,468,1.473,482,0.957,519,1.929,547,2.334,551,0.738,553,1.1,554,2.102,555,0.94,565,2.09,626,3.242,638,0.86,639,0.731,660,1.068,685,1.44,686,1.664,689,2.276,697,1.175,700,1.456,705,1.291,708,0.917,796,1.253,800,1.222,806,1.425,812,3.929,869,1.789,908,2.311,965,0.951,973,3.942,1092,1.632,1147,1.44,1187,3.152,1403,1.919,1404,3.592,1463,3.957,1490,4.434,1507,1.905,1515,2.294,1521,1.491,1546,7.139,1643,1.316,1675,1.36,1679,1.411,1746,1.44,1866,1.919,1867,1.919,2258,1.846,2369,1.51,2370,3.278,2566,1.919,2610,1.919,2872,8.203,2890,2.943,3114,1.632,3366,1.491,3439,5.717,3566,3.957,3575,1.789,3853,1.919,3974,4.255,3996,1.919,3997,2.015,3998,1.664,3999,2.162,4000,2.162,4001,2.162,4002,2.162,4003,2.162,4004,2.162,4005,2.162,4006,2.162,4007,2.162]],["component/186",[220,0.615]],["title/187-1",[676,17.814]],["name/187-1",[]],["text/187-1",[]],["component/187-1",[]],["title/187-2",[317,18.84,318,16.799]],["name/187-2",[]],["text/187-2",[]],["component/187-2",[]],["title/187-3",[60,16.431]],["name/187-3",[]],["text/187-3",[]],["component/187-3",[]],["title/187",[973,32.786,1546,37.122,2872,33.724,2873,39.007]],["name/187",[973,0.808,1546,0.915,2872,0.831,2873,0.961]],["text/187",[8,1.004,15,2.631,22,2.323,34,1.786,49,1.654,60,0.875,68,2.337,71,1.769,92,2.501,103,2.224,110,2.028,117,4.318,126,3.992,142,2.732,143,1.687,148,4.371,155,3.122,159,2.473,172,1.998,183,2.162,189,1.874,191,1.942,219,1.565,232,2.956,247,2.37,318,1.134,323,1.609,324,1.601,328,1.615,408,2.493,424,2.453,468,3.382,519,2.504,547,2.252,551,1.693,553,2.525,554,2.728,626,2.91,650,3.307,660,3.774,708,2.104,722,2.238,812,2.049,965,2.184,973,6.631,1187,4.133,1463,5.877,1490,5.898,1546,8.917,1675,3.122,2258,4.239,2872,8.758,2873,3.746,3366,3.424,3439,9.086,3566,7.164,3996,4.405,3997,4.627,3998,3.82,4008,4.627]],["component/187",[220,0.615]],["title/188-1",[676,17.814]],["name/188-1",[]],["text/188-1",[]],["component/188-1",[]],["title/188-2",[317,18.84,318,16.799]],["name/188-2",[]],["text/188-2",[]],["component/188-2",[]],["title/188-3",[60,16.431]],["name/188-3",[]],["text/188-3",[]],["component/188-3",[]],["title/188",[329,26.947,705,20.484,2874,43.598]],["name/188",[4009,3.92]],["text/188",[2,2.722,3,3.243,8,1.774,15,4.652,22,2.19,37,5.815,38,3.402,46,1.503,60,1.547,61,2.107,80,2.044,84,2.726,92,2.795,183,3.46,218,4.562,228,2.22,246,2.192,250,3.634,262,2.127,318,2.005,323,1.936,324,1.926,326,4.426,328,1.942,329,3.896,347,1.843,557,3.246,562,3.607,626,3.296,634,2.95,676,1.141,705,3.512,721,2.298,1095,3.213,1677,4.608,2377,4.227,2874,8.778,3298,3.858,4010,5.97]],["component/188",[220,0.615]],["title/189-1",[676,17.814]],["name/189-1",[]],["text/189-1",[]],["component/189-1",[]],["title/189-2",[317,18.84,318,16.799]],["name/189-2",[]],["text/189-2",[]],["component/189-2",[]],["title/189-3",[60,16.431]],["name/189-3",[]],["text/189-3",[]],["component/189-3",[]],["title/189",[219,19.134,329,26.947,2874,43.598]],["name/189",[4011,3.92]],["text/189",[3,3.381,8,1.279,15,3.352,22,2.283,37,5.951,38,2.715,40,2.913,46,1.592,60,1.115,80,2.165,82,2.298,85,3.1,92,2.889,103,2.833,128,2.688,189,2.387,218,5.581,219,1.993,228,2.351,232,3.765,246,2.322,318,2.091,323,2.05,324,2.04,326,3.19,328,2.057,329,4.063,341,4.9,347,1.952,540,2.666,626,2.774,676,1.208,689,2.799,720,3.217,786,4.339,843,4.612,1855,3.231,2377,4.477,2713,6.097,2874,8.467]],["component/189",[220,0.615]],["title/190-1",[676,17.814]],["name/190-1",[]],["text/190-1",[]],["component/190-1",[]],["title/190-2",[317,18.84,318,16.799]],["name/190-2",[]],["text/190-2",[]],["component/190-2",[]],["title/190-3",[60,16.431]],["name/190-3",[]],["text/190-3",[]],["component/190-3",[]],["title/190",[329,26.947,705,20.484,2875,47.718]],["name/190",[4012,3.92]],["text/190",[3,3.904,8,1.569,15,5.602,22,2.637,37,6.422,38,2.302,46,1.953,60,1.368,80,2.657,92,3.228,148,6.047,218,3.086,228,2.885,246,2.849,318,2.414,323,2.516,324,2.503,326,5.33,328,2.525,329,4.691,626,3.099,676,1.483,705,3.566,2875,10.141]],["component/190",[220,0.615]],["title/191-1",[676,17.814]],["name/191-1",[]],["text/191-1",[]],["component/191-1",[]],["title/191-2",[317,18.84,318,16.799]],["name/191-2",[]],["text/191-2",[]],["component/191-2",[]],["title/191-3",[60,16.431]],["name/191-3",[]],["text/191-3",[]],["component/191-3",[]],["title/191",[219,19.134,329,26.947,2875,47.718]],["name/191",[4013,3.92]],["text/191",[3,3.276,8,1.224,15,4.7,22,2.881,37,5.849,38,1.796,46,2.232,60,1.067,61,2.136,80,2.073,92,2.818,103,3.973,148,5.074,183,3.269,218,4.593,219,1.909,228,2.251,246,2.223,291,2.656,318,2.026,323,1.963,324,1.953,326,4.472,328,1.97,329,3.936,347,1.869,551,2.066,626,3.312,634,5.707,639,2.047,676,1.157,1187,3.936,2875,10.097,3807,7.572,4014,5.644,4015,5.373]],["component/191",[220,0.615]],["title/192-1",[676,17.814]],["name/192-1",[]],["text/192-1",[]],["component/192-1",[]],["title/192-2",[317,18.84,318,16.799]],["name/192-2",[]],["text/192-2",[]],["component/192-2",[]],["title/192-3",[60,16.431]],["name/192-3",[]],["text/192-3",[]],["component/192-3",[]],["title/192",[131,14.07,329,19.977,1314,33.363,2876,34.627,2877,32.321]],["name/192",[4016,3.92]],["text/192",[2,2.303,8,1.501,15,5.434,22,2.558,46,1.868,49,2.474,60,1.308,80,2.542,92,3.154,131,2.321,183,2.902,228,2.76,246,2.726,318,2.342,323,2.407,324,2.395,326,5.17,328,2.415,329,4.55,360,7.821,626,3.028,676,1.418,812,3.064,1314,5.504,1490,6.617,2876,9.035,2877,9.094,4017,6.919]],["component/192",[220,0.615]],["title/193-1",[676,17.814]],["name/193-1",[]],["text/193-1",[]],["component/193-1",[]],["title/193-2",[317,18.84,318,16.799]],["name/193-2",[]],["text/193-2",[]],["component/193-2",[]],["title/193-3",[60,16.431]],["name/193-3",[]],["text/193-3",[]],["component/193-3",[]],["title/193",[131,14.07,329,19.977,1314,33.363,2876,34.627,2878,35.375]],["name/193",[4018,3.92]],["text/193",[2,2.136,8,1.392,15,5.977,22,1.718,46,1.733,49,2.295,60,1.213,80,2.357,92,3.029,99,2.765,131,2.153,183,2.753,219,2.17,228,2.56,246,2.528,262,2.453,318,2.222,323,2.232,324,2.221,326,5.687,328,2.24,329,4.317,360,7.511,416,3.581,626,3.46,676,1.315,812,2.842,1314,5.104,1490,5.893,2876,9.429,2878,7.645,4017,6.417,4019,11.276]],["component/193",[220,0.615]],["title/194-1",[676,17.814]],["name/194-1",[]],["text/194-1",[]],["component/194-1",[]],["title/194-2",[317,18.84,318,16.799]],["name/194-2",[]],["text/194-2",[]],["component/194-2",[]],["title/194-3",[60,16.431]],["name/194-3",[]],["text/194-3",[]],["component/194-3",[]],["title/194-4",[447,44.52]],["name/194-4",[]],["text/194-4",[]],["component/194-4",[]],["title/194",[329,19.977,705,15.186,1208,36.231,3821,39.933,4020,38.43]],["name/194",[4021,3.92]],["text/194",[2,1.826,8,1.19,22,2.575,32,2.655,38,3.062,46,1.482,52,2.524,60,1.038,84,2.689,92,3.416,99,2.364,112,3.322,131,1.841,174,3.106,183,2.922,189,2.222,218,3.455,228,2.189,246,3.19,248,2.287,318,1.345,323,1.909,324,1.899,328,1.915,329,2.614,350,4.365,364,2.782,390,2.772,417,2.359,596,3.612,626,3.392,676,1.125,705,1.987,730,2.568,812,2.431,834,4.629,835,4.169,897,3.966,915,5.067,970,6.556,1208,8.311,1670,3.612,2732,4.169,2851,4.741,3821,7.709,4020,5.028,4022,9.351,4023,5.888,4024,5.888]],["component/194",[220,0.615]],["title/195-1",[676,17.814]],["name/195-1",[]],["text/195-1",[]],["component/195-1",[]],["title/195-2",[317,18.84,318,16.799]],["name/195-2",[]],["text/195-2",[]],["component/195-2",[]],["title/195-3",[60,16.431]],["name/195-3",[]],["text/195-3",[]],["component/195-3",[]],["title/195-4",[24,19.438,678,39.768]],["name/195-4",[]],["text/195-4",[]],["component/195-4",[]],["title/195",[329,32.642,705,24.813]],["name/195",[4025,3.92]],["text/195",[2,2.412,8,1.028,12,2.681,22,2.641,24,3.631,38,1.507,40,1.618,46,1.279,56,3.316,60,1.371,61,1.793,80,1.74,92,2.538,99,3.123,138,2.061,160,2.328,168,3.362,174,4.103,183,3.945,228,1.89,246,1.866,308,2.501,318,1.777,323,1.648,324,1.639,328,1.653,329,3.453,364,3.674,398,2.929,522,4.064,540,2.143,626,3.228,676,2.022,678,7.305,705,2.624,730,3.391,914,3.55,1486,2.808,2641,4.206,2642,2.873,4022,5.984,4026,3.911,4027,4.737]],["component/195",[220,0.615]],["title/196-1",[676,17.814]],["name/196-1",[]],["text/196-1",[]],["component/196-1",[]],["title/196-2",[317,18.84,318,16.799]],["name/196-2",[]],["text/196-2",[]],["component/196-2",[]],["title/196-3",[447,44.52]],["name/196-3",[]],["text/196-3",[]],["component/196-3",[]],["title/196-4",[60,16.431]],["name/196-4",[]],["text/196-4",[]],["component/196-4",[]],["title/196-5",[862,40.436,1516,31.289,2871,37.238]],["name/196-5",[]],["text/196-5",[]],["component/196-5",[]],["title/196",[329,26.947,1746,40.436,2401,40.436]],["name/196",[4028,3.92]],["text/196",[2,2.285,4,1.112,6,1.438,8,0.559,14,2.545,15,1.465,19,1.861,22,1.838,24,0.731,25,1.175,34,0.994,37,2.254,38,0.82,40,1.508,46,0.696,57,1.064,60,1.593,61,2.193,62,0.88,64,1.107,66,1.981,71,2.215,80,0.946,82,1.004,92,1.67,99,2.496,110,1.129,115,1.935,133,2.246,134,1.045,139,0.929,148,1.582,150,1.553,177,1.465,183,2.085,189,2.78,199,1.209,219,1.493,228,1.028,246,1.015,262,1.688,317,0.708,318,1.082,323,0.896,324,0.892,325,2.801,328,0.899,329,2.759,338,1.536,347,0.853,360,3.155,364,2.238,369,1.266,395,1.695,401,1.425,402,1.803,417,3.621,447,1.32,471,1.883,479,1.329,551,3.297,568,3.444,589,2.575,626,2.493,662,1.723,676,0.528,722,2.136,812,1.955,862,5.52,887,1.544,950,2.049,956,1.487,960,2.27,1073,1.544,1082,1.553,1125,4.215,1134,3.402,1187,2.759,1290,1.803,1308,1.458,1489,1.957,1490,4.723,1516,4.982,1679,1.803,1718,1.602,1746,7.587,2264,2.173,2370,5.379,2401,7.357,2870,2.883,2871,5.929,3449,2.225,3672,2.286,3938,2.225,3974,5.143,4029,3.814,4030,4.045,4031,2.764,4032,3.919,4033,2.286,4034,2.452,4035,2.576,4036,2.36,4037,2.36,4038,2.36,4039,2.36,4040,2.36,4041,2.36,4042,2.36,4043,2.36,4044,2.36,4045,2.36,4046,2.36,4047,2.36,4048,2.36,4049,2.36,4050,2.36,4051,2.36]],["component/196",[220,0.615]],["title/197-1",[676,17.814]],["name/197-1",[]],["text/197-1",[]],["component/197-1",[]],["title/197-2",[317,18.84,318,16.799]],["name/197-2",[]],["text/197-2",[]],["component/197-2",[]],["title/197-3",[447,44.52]],["name/197-3",[]],["text/197-3",[]],["component/197-3",[]],["title/197-4",[60,16.431]],["name/197-4",[]],["text/197-4",[]],["component/197-4",[]],["title/197-5",[862,40.436,1516,31.289,2871,37.238]],["name/197-5",[]],["text/197-5",[]],["component/197-5",[]],["title/197",[329,26.947,1718,35.179,2401,40.436]],["name/197",[4052,3.92]],["text/197",[4,1.621,6,2.095,8,0.814,14,1.392,15,2.135,19,2.713,21,1.998,22,2.028,24,1.065,25,1.712,34,1.449,46,1.014,60,1.799,61,1.421,64,1.613,66,2.71,80,1.379,85,1.975,92,2.183,103,1.805,110,1.646,126,2.105,134,1.523,139,1.354,148,2.305,150,2.264,183,1.834,189,3.515,228,1.498,246,1.479,317,1.032,318,1.48,323,1.306,324,1.299,325,3.831,328,1.31,329,2.876,347,1.243,360,4.316,364,1.903,369,1.845,401,2.076,402,2.628,447,1.923,471,2.744,479,1.938,551,2.773,589,2.19,626,2.096,662,2.511,676,0.77,722,2.921,812,2.675,862,2.683,887,2.251,950,2.986,956,2.167,1000,2.277,1082,2.264,1187,3.608,1308,2.125,1490,3.386,1516,3.34,1679,2.628,1718,4.711,2370,5.385,2401,7.941,2871,4.987,2877,4.654,3449,3.243,3938,3.243,4029,5.217,4030,3.44,4033,3.332,4036,3.44,4037,3.44,4038,3.44,4039,3.44,4040,3.44,4041,3.44,4042,3.44,4043,3.44,4044,3.44,4045,3.44,4046,3.44,4047,3.44,4048,3.44,4049,3.44,4050,3.44,4051,3.44,4053,3.44,4054,5.75,4055,5.75,4056,5.75,4057,3.44,4058,3.574,4059,3.754,4060,3.754]],["component/197",[220,0.615]],["title/198-1",[676,17.814]],["name/198-1",[]],["text/198-1",[]],["component/198-1",[]],["title/198-2",[317,18.84,318,16.799]],["name/198-2",[]],["text/198-2",[]],["component/198-2",[]],["title/198-3",[447,44.52]],["name/198-3",[]],["text/198-3",[]],["component/198-3",[]],["title/198-4",[60,16.431]],["name/198-4",[]],["text/198-4",[]],["component/198-4",[]],["title/198",[329,26.947,1746,40.436,2879,48.873]],["name/198",[4061,3.92]],["text/198",[2,0.786,8,0.512,22,0.632,34,0.912,37,3.305,38,2.331,40,0.807,46,1.749,49,3.082,60,1.807,62,1.853,67,2.099,68,2.069,80,0.868,82,0.921,92,2.314,97,1.567,99,3.713,115,1.796,117,1.433,119,4.331,124,1.284,143,3.327,177,1.343,183,3.359,191,3.074,219,3.085,228,2.164,246,0.93,287,4.368,315,1.3,317,1.491,318,1.004,323,0.822,324,0.817,328,0.824,329,3.084,366,2.415,396,0.881,408,1.273,410,1.727,417,3.704,447,4.113,479,1.219,519,2.217,565,4.708,626,3.379,638,1.008,676,0.484,689,1.945,697,1.378,730,1.105,796,4.026,812,1.814,855,6.095,893,3.112,909,2.531,971,4.393,1018,3.516,1082,2.47,1092,4.393,1095,1.364,1118,2.617,1187,3.824,1259,1.469,1308,1.337,1379,1.707,1490,5.921,1515,2.636,1746,4.627,2370,3.665,2381,6.164,2871,1.555,2879,5.593,3110,3.9,3439,6.328,3443,3.754,3858,8.028,4062,6.947,4063,2.534,4064,2.362,4065,2.534,4066,2.362]],["component/198",[220,0.615]],["title/199-1",[676,17.814]],["name/199-1",[]],["text/199-1",[]],["component/199-1",[]],["title/199-2",[317,18.84,318,16.799]],["name/199-2",[]],["text/199-2",[]],["component/199-2",[]],["title/199-3",[447,44.52]],["name/199-3",[]],["text/199-3",[]],["component/199-3",[]],["title/199-4",[60,16.431]],["name/199-4",[]],["text/199-4",[]],["component/199-4",[]],["title/199",[329,26.947,1718,35.179,2879,48.873]],["name/199",[4067,3.92]],["text/199",[2,1.531,8,0.998,14,2.628,22,1.897,38,3.527,40,1.571,46,1.914,49,1.645,60,1.635,61,2.683,67,3.631,68,3.58,80,1.69,92,2.799,97,3.052,103,2.211,126,5.446,139,1.66,183,2.153,191,3.629,228,1.835,246,1.812,317,2.377,318,1.737,323,1.6,324,1.592,328,1.606,329,3.376,396,1.715,408,2.479,410,3.363,447,2.357,479,2.374,519,3.835,626,3.195,638,3.024,676,0.943,722,2.225,730,2.152,812,3.139,893,5.384,971,7.001,1018,2.982,1082,4.274,1187,5.278,1259,2.86,1308,2.604,1490,5.446,1515,4.56,1718,4.407,2871,3.028,2879,8.391,3110,6.748]],["component/199",[220,0.615]],["title/200-1",[676,17.814]],["name/200-1",[]],["text/200-1",[]],["component/200-1",[]],["title/200-2",[317,18.84,318,16.799]],["name/200-2",[]],["text/200-2",[]],["component/200-2",[]],["title/200-3",[60,16.431]],["name/200-3",[]],["text/200-3",[]],["component/200-3",[]],["title/200-4",[24,19.438,678,39.768]],["name/200-4",[]],["text/200-4",[]],["component/200-4",[]],["title/200",[219,23.177,329,32.642]],["name/200",[4068,3.92]],["text/200",[2,2.193,8,0.909,12,2.371,20,3.282,22,2.688,24,3.712,28,2.962,38,1.333,40,1.431,46,1.131,56,2.932,60,1.246,61,1.586,80,1.539,92,2.661,103,3.915,138,1.822,160,2.059,168,3.056,174,3.729,183,3.83,219,2.754,228,1.671,246,1.65,267,4.655,308,2.212,318,1.615,323,1.457,324,1.45,328,1.462,329,3.879,364,3.34,366,2.47,398,2.662,522,3.694,540,1.895,626,3.289,667,3.718,676,1.893,678,7.06,730,3.083,914,3.139,1486,2.483,2366,3.062,2641,3.823,2642,2.541,2708,3.618,4022,5.44,4026,3.458,4027,4.189,4069,3.988]],["component/200",[220,0.615]],["title/201-1",[676,17.814]],["name/201-1",[]],["text/201-1",[]],["component/201-1",[]],["title/201-2",[317,18.84,318,16.799]],["name/201-2",[]],["text/201-2",[]],["component/201-2",[]],["title/201-3",[60,16.431]],["name/201-3",[]],["text/201-3",[]],["component/201-3",[]],["title/201",[329,32.642,806,48.467]],["name/201",[4070,3.92]],["text/201",[8,1.501,22,3.159,46,1.868,49,2.474,60,1.308,80,2.542,84,3.39,92,3.154,138,3.01,141,3.861,183,3.324,191,4.01,228,2.76,246,2.726,310,2.676,318,2.342,323,2.407,324,2.395,328,2.415,329,4.55,417,5.072,423,4.431,626,3.028,676,1.418,753,3.879,786,3.519,806,8.346,2872,4.844,3298,4.797]],["component/201",[220,0.615]],["title/202-1",[676,17.814]],["name/202-1",[]],["text/202-1",[]],["component/202-1",[]],["title/202-2",[317,18.84,318,16.799]],["name/202-2",[]],["text/202-2",[]],["component/202-2",[]],["title/202-3",[60,16.431]],["name/202-3",[]],["text/202-3",[]],["component/202-3",[]],["title/202-4",[2,22.808,267,39.17]],["name/202-4",[]],["text/202-4",[]],["component/202-4",[]],["title/202-5",[287,58.626]],["name/202-5",[]],["text/202-5",[]],["component/202-5",[]],["title/202-6",[4071,86.901]],["name/202-6",[]],["text/202-6",[]],["component/202-6",[]],["title/202-7",[536,66.962]],["name/202-7",[]],["text/202-7",[]],["component/202-7",[]],["title/202-8",[619,69.122]],["name/202-8",[]],["text/202-8",[]],["component/202-8",[]],["title/202",[267,39.17,329,32.642]],["name/202",[4072,3.92]],["text/202",[2,1.157,8,0.754,16,2.258,22,1.924,31,2.678,32,1.681,34,2.775,38,1.805,46,0.939,48,1.858,49,2.57,60,0.657,62,1.187,80,1.277,82,2.212,89,2.049,92,2.072,93,1.687,116,2.06,133,1.768,183,2.979,219,1.175,228,1.386,233,1.821,246,1.369,267,7.627,287,3.828,294,3.345,310,1.344,318,1.391,323,1.209,324,1.203,328,1.213,329,3.424,347,1.879,354,2.236,355,2.27,379,2.896,389,2.292,397,4.055,398,1.404,417,4.638,480,2.161,536,4.372,545,1.381,547,2.762,565,2.038,619,4.513,626,1.989,676,0.712,753,1.949,815,3.972,883,2.22,916,1.631,922,3.002,967,1.676,1051,2.19,1092,2.814,1285,4.509,1379,6.606,1681,2.19,1718,2.161,1992,2.605,2264,4.785,2323,2.64,2461,2.387,2843,5.032,2872,8.396,2933,3.085,3436,3.002,3465,3.085,4071,8.297,4073,3.729,4074,3.184,4075,5.674,4076,6.087,4077,3.309]],["component/202",[220,0.615]],["title/203-1",[676,17.814]],["name/203-1",[]],["text/203-1",[]],["component/203-1",[]],["title/203-2",[317,18.84,318,16.799]],["name/203-2",[]],["text/203-2",[]],["component/203-2",[]],["title/203-3",[60,16.431]],["name/203-3",[]],["text/203-3",[]],["component/203-3",[]],["title/203",[92,19.751,2818,47.978]],["name/203",[4078,3.92]],["text/203",[8,0.949,16,1.741,22,1.171,24,2.907,28,4.819,34,1.688,46,1.181,48,2.337,60,0.827,82,1.705,92,3.673,95,3.266,96,2.943,110,1.917,131,1.467,160,4.116,189,2.759,208,2.418,211,3.235,219,1.479,225,1.907,228,1.744,236,3.657,246,1.723,286,2.622,318,1.072,323,1.521,324,1.513,328,1.526,341,2.512,367,2.524,390,2.208,399,2.418,416,2.44,423,2.028,424,2.318,437,2.834,501,5.182,513,4.694,547,2.129,553,2.387,571,2.578,626,2.317,639,4.112,647,3.197,662,4.559,675,4.163,676,0.896,697,2.551,705,1.583,808,2.524,859,3.061,980,4.981,1068,3.478,1069,5.984,1363,4.265,1635,3.125,1645,2.95,1659,2.622,1701,3.322,1992,3.277,2356,3.277,2461,6.493,2818,7.6,4079,8.373]],["component/203",[220,0.615]],["title/204-1",[676,17.814]],["name/204-1",[]],["text/204-1",[]],["component/204-1",[]],["title/204-2",[317,18.84,318,16.799]],["name/204-2",[]],["text/204-2",[]],["component/204-2",[]],["title/204-3",[60,16.431]],["name/204-3",[]],["text/204-3",[]],["component/204-3",[]],["title/204",[92,13.883,1363,30.149,2461,33.085,2818,33.724]],["name/204",[4080,3.92]],["text/204",[8,1.059,22,2.401,27,5.572,30,3.612,32,2.362,34,1.885,46,2.003,60,1.403,62,3.064,64,2.098,82,1.904,83,2.979,92,3.887,93,2.369,143,3.271,163,3.099,188,3.165,189,1.977,200,2.416,318,1.197,323,1.698,324,1.69,328,1.704,337,2.777,347,1.617,389,1.973,396,1.82,499,2.347,525,2.609,527,2.34,540,2.209,623,2.998,626,2.981,634,2.588,639,1.771,642,6.105,650,3.489,664,4.648,676,1.521,703,2.609,734,3.902,908,6.984,965,2.304,982,2.979,1363,4.642,1491,3.762,1618,3.762,2161,7.062,2461,3.353,4081,5.238,4082,7.958]],["component/204",[220,0.615]],["title/205-1",[676,17.814]],["name/205-1",[]],["text/205-1",[]],["component/205-1",[]],["title/205-2",[317,18.84,318,16.799]],["name/205-2",[]],["text/205-2",[]],["component/205-2",[]],["title/205-3",[60,16.431]],["name/205-3",[]],["text/205-3",[]],["component/205-3",[]],["title/205-4",[2,11.09,38,10.604,262,12.738,1245,31.726,2641,19.336,2642,20.213,4083,26.982]],["name/205-4",[]],["text/205-4",[]],["component/205-4",[]],["title/205",[2248,59.681]],["name/205",[2248,2.509]],["text/205",[2,1.858,5,0.408,8,0.14,16,0.493,20,0.321,22,1.816,23,2.652,24,1.73,25,0.294,27,0.296,29,0.349,32,2.266,34,0.689,38,1.27,40,0.22,46,0.482,47,0.345,48,1.928,62,0.61,65,0.619,72,2.481,78,0.32,80,0.842,82,0.251,84,2.45,85,0.339,88,0.324,89,0.73,92,1.04,95,0.309,96,0.278,110,0.782,124,0.35,130,0.361,131,3.196,134,0.724,135,0.339,138,0.28,141,0.36,143,1.708,160,0.877,163,0.517,171,0.641,173,0.424,174,2.042,175,0.984,177,0.367,182,0.815,183,2.396,189,1.761,192,0.572,196,0.367,197,0.875,198,0.595,199,0.837,200,2.318,202,0.349,204,0.656,212,2.473,216,0.242,218,0.275,219,0.934,239,0.942,262,1.912,279,0.866,285,1.005,291,0.303,294,0.38,299,0.331,300,3.033,305,0.645,310,2.453,313,1.39,315,0.355,316,0.409,317,0.992,318,0.158,319,0.384,323,0.224,324,0.223,328,0.225,344,0.639,347,0.41,348,0.765,361,0.329,365,0.576,369,0.877,379,0.911,390,0.625,392,0.466,393,0.775,394,0.447,396,0.665,401,1.267,407,0.497,408,2.15,409,0.451,417,1.869,420,0.327,430,0.349,447,0.33,460,0.483,465,0.471,466,0.544,480,0.769,491,0.418,493,0.483,499,1.328,515,2.288,547,0.314,549,0.61,551,2.483,553,0.352,555,0.577,560,0.355,589,0.376,596,0.424,617,2.099,620,0.376,625,0.785,650,0.461,651,0.43,655,0.821,660,0.946,661,0.673,676,0.132,687,0.447,689,0.588,702,0.697,705,1,708,2.275,724,0.412,727,0.435,728,0.927,730,0.302,733,1.175,734,1.205,736,0.707,740,0.513,741,0.466,744,1.374,753,1.285,775,0.451,786,0.328,790,0.532,798,5.334,800,4.786,808,0.372,812,4.873,821,1.194,836,1.546,837,0.37,864,0.78,868,2.852,884,0.443,887,0.386,911,4.507,916,0.581,928,1.276,931,0.378,955,0.435,956,0.372,965,0.584,967,0.597,982,0.393,986,1.134,1033,2.197,1069,0.461,1085,0.673,1095,2.083,1106,1.375,1108,1.069,1138,0.355,1144,0.513,1172,0.513,1191,0.557,1222,0.645,1226,0.403,1252,0.591,1285,3.033,1304,0.544,1409,2.128,1482,1.226,1486,0.382,1500,0.439,1539,0.544,1544,0.471,1615,7.003,1629,2.099,1631,0.544,1635,1.276,1659,0.386,1677,0.363,1678,1.699,1689,1.134,1845,0.557,1855,0.353,1856,0.984,1879,1.656,1898,1.892,1926,0.591,2184,0.591,2192,8.735,2248,6.796,2325,0.572,2338,2.591,2346,0.504,2350,0.718,2400,0.471,2472,0.532,2590,2.034,2641,1.33,2642,1.39,2677,1.134,2711,0.614,2797,0.614,2819,0.591,2851,1.069,2867,3.365,2927,0.614,2942,3.799,2946,0.557,3360,1.069,3448,0.591,3460,3.59,3480,1.635,3491,0.591,3763,0.532,3798,0.557,3855,0.591,3940,1.238,3942,1.178,3945,1.238,3955,0.424,4026,0.532,4084,0.591,4085,1.178,4086,1.178,4087,1.178,4088,2.762,4089,0.692,4090,0.692,4091,0.692,4092,0.692,4093,2.291,4094,0.522,4095,0.466,4096,0.645,4097,0.692,4098,0.692,4099,0.692,4100,0.692,4101,0.645,4102,0.692,4103,1.178,4104,0.692,4105,0.692,4106,0.692,4107,0.692,4108,0.692,4109,1.238,4110,0.692,4111,0.692,4112,1.915,4113,0.692,4114,0.692,4115,0.692,4116,0.692,4117,1.238,4118,0.692,4119,0.692,4120,0.645,4121,2.931,4122,0.645,4123,0.645,4124,0.692,4125,2.458,4126,1.044,4127,0.645,4128,2.181,4129,0.513,4130,1.328,4131,1.238,4132,3.046,4133,0.692,4134,2.291,4135,0.692,4136,0.692,4137,0.692,4138,0.692,4139,0.692,4140,1.328,4141,0.692,4142,0.692,4143,0.692,4144,0.645,4145,1.915,4146,1.328,4147,0.692,4148,0.692,4149,0.692,4150,0.692,4151,1.044,4152,1.098,4153,0.614,4154,0.572,4155,1.098,4156,0.645,4157,0.614,4158,0.692,4159,0.645,4160,1.238,4161,0.954,4162,2.291,4163,0.692,4164,0.692,4165,1.328,4166,0.692,4167,1.328,4168,0.692,4169,1.785,4170,1.328,4171,1.328,4172,0.692,4173,0.692,4174,1.785,4175,0.692,4176,0.591,4177,0.692,4178,1.328,4179,0.692,4180,0.692,4181,1.328,4182,0.614,4183,0.692,4184,0.692,4185,0.866,4186,0.614,4187,0.692,4188,0.692,4189,0.645,4190,0.645,4191,0.591]],["component/205",[220,0.615]],["title/206-1",[676,17.814]],["name/206-1",[]],["text/206-1",[]],["component/206-1",[]],["title/206-2",[317,18.84,318,16.799]],["name/206-2",[]],["text/206-2",[]],["component/206-2",[]],["title/206-3",[60,16.431]],["name/206-3",[]],["text/206-3",[]],["component/206-3",[]],["title/206",[660,29.996,2271,40.884,2356,42.401]],["name/206",[4192,3.92]],["text/206",[2,2.392,8,1.231,11,2.639,14,1.289,22,2.221,25,1.585,43,2.765,46,0.939,48,5.767,51,1.958,60,0.657,61,1.316,62,1.938,64,1.494,66,1.56,71,1.329,79,3.325,80,1.277,84,2.78,92,2.391,106,1.645,112,3.751,124,1.889,138,1.512,142,2.759,148,2.134,160,2.789,165,2.017,172,1.501,177,1.977,180,1.768,183,2.52,189,2.297,191,1.459,199,2.662,219,1.919,228,1.386,233,1.821,246,2.235,262,3.495,284,2.72,318,0.852,323,1.209,324,1.203,328,1.213,338,2.072,347,1.151,352,2.541,362,2.22,391,1.858,396,1.296,429,1.905,467,2.572,499,2.727,513,1.949,521,1.676,551,2.076,554,2.049,568,4.161,604,2.512,620,2.027,626,3.177,639,1.261,650,2.484,655,3.764,660,4.847,674,2.236,676,0.712,697,2.027,705,2.054,804,2.161,1058,2.345,1071,1.666,1073,2.084,1125,5.094,1264,2.205,1507,1.858,1618,5.539,2271,4.1,2350,2.017,2356,8.988,3298,2.41,3952,2.765,4193,3.729,4194,3.729,4195,3.729]],["component/206",[220,0.615]],["title/207-1",[676,17.814]],["name/207-1",[]],["text/207-1",[]],["component/207-1",[]],["title/207-2",[317,18.84,318,16.799]],["name/207-2",[]],["text/207-2",[]],["component/207-2",[]],["title/207-3",[60,16.431]],["name/207-3",[]],["text/207-3",[]],["component/207-3",[]],["title/207",[705,24.813,1448,45.846]],["name/207",[705,0.782,1448,1.444]],["text/207",[5,1.692,8,1.114,12,2.906,16,2.044,22,2.751,38,1.634,52,2.361,60,1.457,62,1.753,76,6.04,80,2.83,82,2.002,92,1.48,99,2.212,111,3.152,134,2.083,135,2.701,142,2.957,183,1.559,218,2.191,248,2.14,287,3.464,315,2.827,318,1.258,323,1.786,324,1.777,325,4.888,328,1.792,347,1.701,366,3.027,386,2.035,396,1.914,527,2.46,547,2.499,551,2.82,557,2.995,565,3.011,626,1.42,638,2.191,639,2.795,645,2.778,662,3.434,676,1.052,705,3.348,722,2.483,804,3.192,815,3.594,965,2.423,1084,3.753,1138,2.827,1448,8.024,1677,6.204,1854,3.526,2348,3.213,2397,3.257,2641,2.979,3298,3.559,3426,7.8,4074,4.704,4196,4.888,4197,4.888,4198,5.508,4199,5.508]],["component/207",[220,0.615]],["title/208-1",[676,17.814]],["name/208-1",[]],["text/208-1",[]],["component/208-1",[]],["title/208-2",[317,18.84,318,16.799]],["name/208-2",[]],["text/208-2",[]],["component/208-2",[]],["title/208-3",[60,16.431]],["name/208-3",[]],["text/208-3",[]],["component/208-3",[]],["title/208",[219,23.177,1448,45.846]],["name/208",[219,0.73,1448,1.444]],["text/208",[5,2.283,8,0.566,12,1.477,22,2.271,34,1.007,38,2.477,40,1.525,47,1.395,52,1.2,60,1.472,61,0.988,62,3.409,72,1.623,76,1.704,82,1.741,89,1.539,92,1.287,103,4.078,117,6.641,123,3.095,134,1.059,142,1.713,143,2.133,180,1.327,181,2.076,183,3.032,218,4.874,219,0.883,248,1.088,254,2.503,260,1.633,263,2.113,287,1.761,300,1.418,311,2.708,315,1.437,318,0.64,323,0.908,324,0.903,325,1.656,328,0.911,344,1.347,367,1.507,386,1.035,396,2.582,408,1.406,417,2.514,527,1.251,540,2.02,547,2.848,551,2.141,626,2.153,634,4.127,638,1.114,639,2.122,645,1.412,676,0.535,689,2.12,695,1.886,705,0.945,720,5.218,721,4.123,722,1.262,786,1.327,804,1.623,821,1.746,851,2.254,883,4.424,885,2.076,908,1.692,915,2.794,964,2.894,965,1.232,1071,2.139,1118,3.737,1125,2.741,1138,1.437,1187,2.786,1444,3.391,1448,5.676,1507,3.701,1677,1.47,1929,2.201,2242,4.578,2348,5.675,2708,3.856,2713,1.865,2719,1.956,3135,2.61,3172,4.09,3426,2.201,3436,2.254,3807,2.391,4032,2.316,4196,2.485,4197,2.485,4200,2.8,4201,5.851,4202,2.8,4203,2.201]],["component/208",[220,0.615]],["title/209-1",[676,17.814]],["name/209-1",[]],["text/209-1",[]],["component/209-1",[]],["title/209-2",[317,18.84,318,16.799]],["name/209-2",[]],["text/209-2",[]],["component/209-2",[]],["title/209-3",[60,16.431]],["name/209-3",[]],["text/209-3",[]],["component/209-3",[]],["title/209",[24,16.047,212,32.178,499,27.197]],["name/209",[4204,3.92]],["text/209",[8,1.01,20,3.562,24,3.481,34,1.797,40,2.442,46,2.352,49,1.664,61,2.707,62,1.589,92,2.51,131,3.279,137,2.467,144,3.375,162,2.777,183,3.382,202,2.518,212,6.332,219,2.418,228,1.856,262,3.736,291,4.599,310,3.78,318,1.141,323,1.619,324,1.611,328,1.624,392,3.278,396,2.666,420,6.066,499,3.438,626,3.081,705,2.589,721,1.922,722,2.251,910,5.002,1103,5.348,3782,6.177,4205,4.431]],["component/209",[220,0.615]],["title/210-1",[676,17.814]],["name/210-1",[]],["text/210-1",[]],["component/210-1",[]],["title/210-2",[317,18.84,318,16.799]],["name/210-2",[]],["text/210-2",[]],["component/210-2",[]],["title/210-3",[60,16.431]],["name/210-3",[]],["text/210-3",[]],["component/210-3",[]],["title/210",[24,16.047,392,21.295,2357,45.812]],["name/210",[4206,3.654]],["text/210",[8,1.348,24,3.612,46,2.393,49,3.169,61,2.353,80,2.284,85,3.27,86,3.469,92,2.977,115,2.725,116,3.685,183,3.137,202,3.364,219,2.102,228,2.48,262,3.948,310,3.428,318,1.524,323,2.162,324,2.151,328,2.17,341,3.571,392,3.887,396,2.318,432,3.046,571,3.665,626,3.424,705,2.251,931,3.645,1059,5.788,1103,4.087,1675,4.194,2357,8.363,2385,3.771,2442,3.502]],["component/210",[220,0.615]],["title/211-1",[676,17.814]],["name/211-1",[]],["text/211-1",[]],["component/211-1",[]],["title/211-2",[317,18.84,318,16.799]],["name/211-2",[]],["text/211-2",[]],["component/211-2",[]],["title/211-3",[60,16.431]],["name/211-3",[]],["text/211-3",[]],["component/211-3",[]],["title/211",[64,24.316,392,21.295,1903,40.884]],["name/211",[4207,3.92]],["text/211",[8,1.015,38,3.365,57,2.967,60,0.885,62,1.599,64,2.012,68,3.628,84,3.52,85,3.779,86,4.009,92,3.048,99,4.808,142,4.283,172,2.022,183,1.422,191,3.015,262,3.341,273,2.807,275,2.662,314,3.422,318,1.147,323,1.628,324,1.62,328,1.634,344,2.416,386,1.856,392,3.29,399,2.589,417,2.012,432,3.52,551,3.87,597,2.716,626,1.987,639,1.698,676,0.96,753,4.028,782,4.438,796,6.096,883,6.755,960,5.739,1059,3.057,1095,4.147,1607,6.376,1855,2.566,1903,5.191,2385,4.357,2409,3.311,2442,4.046,2696,6.582]],["component/211",[220,0.615]],["title/212-1",[676,17.814]],["name/212-1",[]],["text/212-1",[]],["component/212-1",[]],["title/212-2",[317,18.84,318,16.799]],["name/212-2",[]],["text/212-2",[]],["component/212-2",[]],["title/212-3",[60,16.431]],["name/212-3",[]],["text/212-3",[]],["component/212-3",[]],["title/212",[639,24.858,2880,53.626]],["name/212",[4208,3.92]],["text/212",[8,1.216,27,3.771,29,3.033,40,1.914,46,1.513,60,1.555,85,2.948,86,3.127,92,3.092,121,3.507,131,3.599,143,2.044,183,2.958,219,2.781,228,2.235,236,3.007,246,2.208,310,3.767,318,1.374,323,1.949,324,1.939,328,1.956,392,2.109,396,3.066,622,3.341,626,2.968,639,4.684,676,1.149,708,2.549,779,3.507,780,3.718,832,6.017,1671,7.118,2385,3.399,2848,4.05,2880,10.273]],["component/212",[220,0.615]],["title/213-1",[676,17.814]],["name/213-1",[]],["text/213-1",[]],["component/213-1",[]],["title/213-2",[317,18.84,318,16.799]],["name/213-2",[]],["text/213-2",[]],["component/213-2",[]],["title/213-3",[60,16.431]],["name/213-3",[]],["text/213-3",[]],["component/213-3",[]],["title/213",[2881,77.133]],["name/213",[2881,3.243]],["text/213",[8,1.086,16,1.992,37,5.18,49,2.703,60,0.946,71,1.913,73,3.504,79,2.315,92,2.924,99,2.156,137,6.305,180,2.546,183,3.479,208,2.768,216,1.88,218,3.225,219,1.693,228,1.997,254,2.806,286,3.001,299,2.574,318,1.853,323,1.741,324,1.732,328,1.747,386,1.984,392,1.884,414,3.036,586,3.703,626,3.169,639,1.815,653,8.799,661,2.72,676,1.026,705,1.812,722,2.421,724,4.829,727,5.099,734,2.633,749,2.984,786,2.546,1141,4.586,1273,3.47,1473,3.802,2248,3.437,2469,6.376,2881,8.084,3203,5.005,4132,8.671,4209,5.37,4210,8.109,4211,5.37]],["component/213",[220,0.615]],["title/214-1",[676,17.814]],["name/214-1",[]],["text/214-1",[]],["component/214-1",[]],["title/214-2",[317,18.84,318,16.799]],["name/214-2",[]],["text/214-2",[]],["component/214-2",[]],["title/214-3",[60,16.431]],["name/214-3",[]],["text/214-3",[]],["component/214-3",[]],["title/214-4",[183,26.392]],["name/214-4",[]],["text/214-4",[]],["component/214-4",[]],["title/214",[2882,77.133]],["name/214",[2882,3.243]],["text/214",[2,3.164,5,1.773,8,1.166,34,2.076,38,1.711,46,1.452,60,1.508,61,3.599,62,1.836,72,3.343,84,2.634,92,3.03,165,4.628,183,3.799,191,2.257,219,1.818,228,2.145,246,2.118,255,2.316,256,4.645,262,2.055,300,4.334,317,1.478,318,1.318,323,1.87,324,1.861,328,1.877,361,2.745,511,3.931,540,2.432,551,2.919,561,4.927,571,3.17,626,3.255,634,2.851,661,5.166,676,1.635,705,3.442,708,2.446,730,2.516,786,4.056,812,3.532,837,3.088,876,3.978,916,2.523,1131,3.728,1296,4.439,2850,5.428,2882,4.773]],["component/214",[220,0.615]],["title/215-1",[676,17.814]],["name/215-1",[]],["text/215-1",[]],["component/215-1",[]],["title/215-2",[317,18.84,318,16.799]],["name/215-2",[]],["text/215-2",[]],["component/215-2",[]],["title/215-3",[60,16.431]],["name/215-3",[]],["text/215-3",[]],["component/215-3",[]],["title/215",[540,31.002,634,36.335]],["name/215",[4212,3.92]],["text/215",[2,1.892,8,1.233,22,1.522,46,1.535,49,2.032,60,1.571,62,1.941,65,2.841,71,2.173,92,2.83,99,2.449,112,3.409,142,3.188,172,2.455,183,3.645,191,2.386,218,4.903,228,2.267,246,2.239,262,3.176,318,1.393,323,1.977,324,1.967,328,1.984,392,3.127,540,3.758,568,4.167,626,3.645,634,6.092,676,1.165,705,3.008,832,3.512,1121,3.468,1516,4.594,2385,3.448,2442,3.202,4213,7.612,4214,5.684,4215,6.098]],["component/215",[220,0.615]],["title/216-1",[676,17.814]],["name/216-1",[]],["text/216-1",[]],["component/216-1",[]],["title/216-2",[317,18.84,318,16.799]],["name/216-2",[]],["text/216-2",[]],["component/216-2",[]],["title/216-3",[60,16.431]],["name/216-3",[]],["text/216-3",[]],["component/216-3",[]],["title/216",[677,39.365,2359,57.803]],["name/216",[4216,3.92]],["text/216",[2,0.545,8,0.642,22,2.012,27,0.751,29,0.886,34,0.632,37,0.836,38,1.29,40,1.011,42,0.571,54,1.796,60,1.087,62,2.193,64,1.273,71,1.9,72,1.018,73,6.348,79,0.758,80,0.602,84,1.986,85,0.862,88,2.501,92,2.519,93,0.795,96,0.707,106,0.775,111,1.006,112,2.039,113,4.616,115,0.718,119,2.711,131,0.549,138,0.713,139,0.591,142,1.907,143,1.478,160,1.992,172,1.279,177,0.932,180,1.506,183,3.506,189,0.663,191,2.413,193,1.303,197,2.094,198,1.948,200,2.006,201,1.737,203,0.872,206,1.046,208,1.638,216,2.412,218,4.217,219,1.002,233,2.124,234,1.032,241,0.83,248,0.683,259,1.303,262,0.626,282,2.445,291,0.771,299,0.842,300,2.701,311,0.993,315,0.902,317,0.814,318,0.401,323,0.57,324,0.567,328,0.572,347,0.543,352,1.197,369,0.805,378,0.918,385,0.906,386,1.97,396,1.104,398,2.594,401,1.638,420,1.501,423,0.76,428,1.158,447,0.839,467,1.212,470,1.415,471,1.197,494,0.95,499,1.424,513,1.66,527,1.419,540,1.834,545,0.651,547,3.125,549,2.451,551,1.084,557,0.955,565,2.914,625,1.039,626,1.938,639,2.329,647,5.12,650,1.171,674,1.054,676,0.336,677,3.688,699,1.136,705,1.799,708,0.745,720,1.616,734,0.862,739,2.016,798,1.475,800,0.993,806,1.158,844,1.115,887,1.775,929,1.147,965,0.773,982,0.999,1125,2.489,1177,2.016,1187,5.78,1283,2.999,1406,0.976,1438,1.228,1440,7.213,1443,2.713,1444,1.244,1500,1.115,1507,3.744,1516,1.638,1615,1.352,1618,2.282,1669,1.501,2237,1.136,2248,2.034,2350,2.352,2360,1.638,2361,1.559,2362,1.559,2370,0.927,2461,1.125,2462,2.25,3192,1.501,3771,1.501,3946,4.553,3952,1.303,4214,1.638,4217,6.418,4218,1.454,4219,1.757,4220,1.757,4221,1.559,4222,1.638,4223,1.757,4224,1.757,4225,1.757,4226,1.638,4227,1.352]],["component/216",[220,0.615]],["title/217-1",[676,17.814]],["name/217-1",[]],["text/217-1",[]],["component/217-1",[]],["title/217-2",[317,18.84,318,16.799]],["name/217-2",[]],["text/217-2",[]],["component/217-2",[]],["title/217-3",[60,16.431]],["name/217-3",[]],["text/217-3",[]],["component/217-3",[]],["title/217-4",[216,32.645]],["name/217-4",[]],["text/217-4",[]],["component/217-4",[]],["title/217-5",[183,20.814,651,23.799]],["name/217-5",[]],["text/217-5",[]],["component/217-5",[]],["title/217",[183,20.814,2883,60.833]],["name/217",[4228,3.92]],["text/217",[2,3.331,8,0.57,11,2.088,20,3.465,22,1.574,24,1.273,32,1.271,34,1.014,38,1.429,40,0.897,48,1.404,60,1.893,61,0.994,62,1.533,71,1.004,79,1.215,92,2.005,103,1.263,110,1.152,111,1.613,124,1.428,130,1.473,131,2.621,133,2.284,143,3.317,163,1.876,165,1.524,174,2.541,176,3.933,183,3.922,196,1.494,200,1.3,217,1.613,219,1.518,246,1.035,262,1.004,274,1.361,275,1.494,296,1.969,310,1.016,318,0.644,323,0.914,324,0.909,328,0.917,347,0.87,361,1.341,364,3.525,367,1.517,390,2.268,398,1.061,420,3.96,432,2.2,477,2.056,521,1.267,549,1.296,551,0.961,555,1.225,626,2.517,638,1.121,651,2.042,661,2.44,676,1.205,704,3.175,705,0.951,720,1.434,730,3.254,733,2.955,739,1.788,744,1.575,798,2.929,812,4.971,836,1.772,837,1.509,914,4.406,956,1.517,982,1.603,1056,3.113,1073,1.575,1095,1.517,1226,1.644,1301,1.821,1315,1.995,1340,1.729,1512,3.706,1585,3.282,1849,1.898,1879,1.575,2242,2.056,2379,3.113,2410,1.944,2641,5.564,2642,2.723,2883,2.332,2942,1.995,3114,2.127,3153,1.944,3955,1.729,3956,2.269,3957,4.854,3958,2.269,3959,3.706,3969,2.024,4026,2.169,4185,1.839,4229,3.706,4230,2.332,4231,3.985,4232,2.501,4233,2.169,4234,2.501]],["component/217",[220,0.615]],["title/218-1",[676,17.814]],["name/218-1",[]],["text/218-1",[]],["component/218-1",[]],["title/218-2",[317,18.84,318,16.799]],["name/218-2",[]],["text/218-2",[]],["component/218-2",[]],["title/218-3",[60,16.431]],["name/218-3",[]],["text/218-3",[]],["component/218-3",[]],["title/218",[27,25.947,262,21.627,639,20.521]],["name/218",[4235,3.92]],["text/218",[8,1.594,16,1.92,22,1.291,27,3.37,38,2.833,40,1.647,45,3.758,46,2.894,60,0.912,64,2.073,71,2.809,77,2.837,92,3.645,96,2.083,115,2.114,121,3.019,124,3.994,199,2.263,208,2.667,228,1.924,236,2.588,246,1.9,262,4.74,274,2.498,316,3.06,318,1.182,323,1.678,324,1.669,328,1.683,347,3.298,369,2.371,386,1.912,392,1.815,519,2.61,626,2.463,639,4.664,676,0.989,687,3.344,864,4.63,956,2.784,1087,3.15,1088,3.376,1307,4.068,1849,3.485,1932,3.664,2270,3.411,2380,4.068,2409,3.411,3085,4.592]],["component/218",[220,0.615]],["title/219-1",[676,17.814]],["name/219-1",[]],["text/219-1",[]],["component/219-1",[]],["title/219-2",[317,18.84,318,16.799]],["name/219-2",[]],["text/219-2",[]],["component/219-2",[]],["title/219-3",[60,16.431]],["name/219-3",[]],["text/219-3",[]],["component/219-3",[]],["title/219",[344,29.2,2884,51.839,2885,50.22]],["name/219",[4236,3.92]],["text/219",[2,2.48,8,1.066,22,1.315,29,2.658,46,1.327,49,1.757,60,0.929,72,3.054,80,1.805,92,2.595,128,2.24,129,2.729,131,1.648,143,3.665,149,5.661,163,2.052,172,2.122,174,2.78,183,3.697,219,3.399,228,1.96,262,1.878,318,1.204,323,1.709,324,1.7,328,1.715,344,5.187,392,1.849,396,1.832,414,2.98,626,3.147,705,2.698,812,2.176,836,3.314,844,3.343,931,2.881,1138,2.705,1177,3.343,1490,4.178,2385,2.98,2442,2.767,2716,7.095,2884,10.827,2885,10.489,2991,3.785,4237,5.27,4238,4.677,4239,5.27,4240,5.27,4241,5.27,4242,5.27,4243,5.27,4244,5.27,4245,5.27,4246,4.913]],["component/219",[220,0.615]],["title/220-1",[676,17.814]],["name/220-1",[]],["text/220-1",[]],["component/220-1",[]],["title/220-2",[317,18.84,318,16.799]],["name/220-2",[]],["text/220-2",[]],["component/220-2",[]],["title/220-3",[60,16.431]],["name/220-3",[]],["text/220-3",[]],["component/220-3",[]],["title/220-4",[5,18.651,255,24.375,317,15.553]],["name/220-4",[]],["text/220-4",[]],["component/220-4",[]],["title/220",[24,16.047,705,20.484,1461,35.647]],["name/220",[4247,3.92]],["text/220",[2,1.408,5,1.394,8,1.073,11,1.14,14,0.494,20,2.465,22,1.644,24,3.206,25,0.607,26,0.72,27,1.94,34,0.514,38,1.954,42,1.944,45,0.816,46,1.336,49,1.513,60,1.34,61,1.289,62,1.69,65,2.114,71,0.937,73,0.932,75,0.883,77,0.514,79,1.956,83,3.405,84,1.201,92,2.907,93,0.646,95,1.175,96,1.059,99,4.096,103,0.64,106,0.63,110,1.074,111,0.817,112,0.546,115,1.074,130,0.746,131,1.143,133,0.677,135,0.7,138,0.579,139,0.884,143,1.805,144,0.628,148,1.505,163,0.556,165,0.772,170,4.275,172,1.471,173,3.673,174,2.394,176,0.89,177,1.394,180,0.677,183,2.82,188,0.863,189,0.539,199,1.15,202,0.72,208,0.736,210,1.123,211,0.985,212,1.937,216,0.5,218,2.111,219,0.829,228,0.531,234,1.544,236,0.714,241,0.675,246,0.524,251,0.74,253,0.923,255,1.467,260,0.833,262,1.617,285,0.75,286,0.798,299,0.684,310,1.317,313,0.807,317,1.163,318,0.326,320,0.663,323,0.463,324,0.461,325,1.555,328,0.465,342,0.932,344,0.687,347,2.199,361,1.739,362,1.566,364,1.726,386,0.528,392,0.923,396,0.914,399,0.736,401,0.736,415,1.011,417,0.572,420,2.828,421,1.099,423,0.617,435,0.932,447,0.682,453,0.898,479,1.265,485,2.023,491,0.863,518,1.496,521,1.182,527,1.175,545,0.529,547,2.059,549,2.086,551,2.042,557,0.776,589,0.776,597,1.422,620,0.776,626,2.175,634,2.624,639,2.227,646,1.601,651,0.462,660,0.706,676,0.273,685,0.951,697,1.43,705,1.532,708,0.605,721,0.55,728,0.998,729,1.613,730,2.611,731,0.914,733,0.876,739,0.906,779,0.833,782,0.822,786,0.677,795,2.49,798,1.697,800,0.807,804,0.828,812,0.59,832,0.822,837,0.765,844,0.906,864,0.839,878,3.537,894,0.863,898,0.883,914,3.17,915,0.833,916,1.15,956,1.966,964,1.589,965,1.157,1056,0.923,1059,0.869,1073,0.798,1103,2.574,1144,1.95,1151,0.765,1262,0.985,1273,0.923,1305,0.876,1334,0.628,1436,1.123,1461,3.869,1500,0.906,1536,1.15,1560,3.406,1633,2.587,1652,1.267,1662,1.099,2034,1.182,2035,2.176,2224,1.22,2327,1.15,2339,0.998,2369,0.998,2377,1.011,2379,0.923,2409,1.733,2442,0.75,2472,1.099,2631,1.099,2641,0.772,2642,0.807,2722,1.267,2818,0.932,2946,1.15,2991,1.889,3153,0.985,3366,0.985,3782,1.15,3790,1.182,3983,1.814,4015,4.027,4129,1.95,4155,1.182,4190,1.331,4248,1.428,4249,1.331,4250,1.22,4251,1.331,4252,1.267,4253,1.428,4254,2.451,4255,2.246,4256,2.246,4257,2.451,4258,1.331,4259,1.331,4260,1.267,4261,1.182,4262,1.331,4263,1.428]],["component/220",[220,0.615]],["title/221-1",[676,17.814]],["name/221-1",[]],["text/221-1",[]],["component/221-1",[]],["title/221-2",[317,18.84,318,16.799]],["name/221-2",[]],["text/221-2",[]],["component/221-2",[]],["title/221-3",[962,49.665]],["name/221-3",[]],["text/221-3",[]],["component/221-3",[]],["title/221-4",[60,16.431]],["name/221-4",[]],["text/221-4",[]],["component/221-4",[]],["title/221",[112,28.118,114,43.476]],["name/221",[4264,3.92]],["text/221",[2,1.064,8,1.471,16,1.272,22,2.111,38,2.998,42,2.748,46,0.863,49,1.143,60,0.604,61,1.21,62,1.809,63,1.626,65,1.598,71,2.592,79,1.478,84,4.282,92,3.216,95,1.532,112,3.865,113,1.963,114,5.545,131,2.932,138,3.803,139,1.153,141,1.784,142,2.032,143,2.473,163,2.212,165,3.934,172,1.38,183,2.395,198,1.537,218,1.364,228,1.275,241,1.62,246,1.259,262,2.024,275,1.818,277,2.175,291,2.492,294,1.885,313,1.939,318,0.784,323,1.112,324,1.106,328,1.116,332,2.337,345,2.238,361,1.632,369,1.571,396,1.192,447,1.638,481,1.885,482,1.518,525,1.708,551,1.17,555,1.491,560,4.342,568,4.725,571,1.885,597,3.073,625,2.028,626,1.876,639,2.459,642,5.367,676,0.655,721,2.187,727,2.157,734,1.681,808,1.845,982,1.951,1242,5.393,1290,4.747,1677,6.099,2199,2.639,2297,4.467,2348,2.001,2350,5.072,2397,2.028,2472,2.639,4265,3.429,4266,2.837,4267,3.429,4268,3.429,4269,3.429,4270,3.429,4271,3.429,4272,3.429,4273,3.429,4274,3.429,4275,2.761]],["component/221",[220,0.615]],["title/222-1",[676,17.814]],["name/222-1",[]],["text/222-1",[]],["component/222-1",[]],["title/222-2",[317,18.84,318,16.799]],["name/222-2",[]],["text/222-2",[]],["component/222-2",[]],["title/222-3",[60,16.431]],["name/222-3",[]],["text/222-3",[]],["component/222-3",[]],["title/222",[112,28.118,113,42.078]],["name/222",[3164,3.654]],["text/222",[2,1.691,8,0.299,16,0.549,22,2.145,27,1.162,38,2.16,42,0.481,46,0.373,49,0.906,54,0.837,60,0.961,61,0.959,62,0.471,64,1.089,65,0.69,71,1.663,78,1.743,79,2.013,82,0.988,84,3.08,89,0.813,92,2.406,96,1.094,106,0.653,112,4.328,113,7.012,114,1.607,115,0.605,118,1.009,122,0.939,128,1.155,129,1.951,131,2.277,133,1.288,139,1.267,140,1.117,141,0.77,142,1.347,143,0.503,148,0.847,160,2.498,165,2.037,171,2.963,172,2.471,174,1.987,176,1.694,177,0.785,180,0.702,183,2.199,187,1.264,188,1.642,190,1.009,191,1.826,193,1.097,196,1.997,198,3.022,199,0.647,200,0.683,203,0.734,208,1.401,213,0.818,217,0.847,218,4.117,219,1.472,228,0.55,233,0.723,234,0.869,236,1.359,239,0.729,241,3.669,246,0.544,247,1.298,250,0.901,262,2.403,274,0.715,288,2.706,294,0.813,299,2.238,310,1.965,315,0.76,318,0.338,323,0.48,324,0.477,328,0.482,334,1.048,360,0.986,361,1.792,362,0.881,365,2.364,391,1.354,398,1.023,414,0.837,415,1.048,417,0.593,424,1.343,443,1.192,479,0.712,482,0.655,499,0.663,518,1.546,521,1.221,524,0.956,539,1.034,547,1.233,551,3.055,555,0.644,557,1.477,560,1.933,561,0.852,591,0.931,598,1.034,612,1.565,622,0.822,626,1.739,631,0.997,634,0.731,638,1.498,639,1.843,647,6.893,660,1.861,661,0.75,674,0.888,676,0.283,689,1.203,699,0.956,705,0.5,708,1.979,716,3.293,721,1.45,734,0.726,753,0.774,782,0.852,804,0.858,812,1.122,816,2.248,830,0.875,910,0.792,916,0.647,928,0.986,940,1.164,946,1.164,964,1.642,969,0.726,988,0.908,1096,1.021,1105,1.264,1131,0.956,1155,1.048,1187,3.233,1288,2.369,1308,0.781,1481,1.048,1516,1.401,1521,1.874,1527,1.048,1533,0.875,1541,0.792,1544,1.009,1584,0.875,1595,2.227,1660,1.097,1670,0.908,1677,0.777,1682,1.192,1837,1.021,1855,3.446,1857,0.976,2332,1.192,2341,0.888,2346,1.08,2350,1.47,2370,0.781,2371,1.139,2828,1.009,2843,1.773,2859,1.192,2897,0.997,3113,1.314,3172,2.321,3298,1.756,3300,7.005,3444,1.38,3483,1.264,3969,1.063,4095,0.997,4217,1.264,4275,1.192,4276,1.48,4277,1.48,4278,1.034,4279,3.343,4280,1.38,4281,1.48,4282,1.48,4283,1.38,4284,1.48,4285,1.48,4286,1.48,4287,2.533,4288,1.164,4289,1.264]],["component/222",[220,0.615]],["title/223-1",[676,17.814]],["name/223-1",[]],["text/223-1",[]],["component/223-1",[]],["title/223-2",[317,18.84,318,16.799]],["name/223-2",[]],["text/223-2",[]],["component/223-2",[]],["title/223-3",[60,16.431]],["name/223-3",[]],["text/223-3",[]],["component/223-3",[]],["title/223-4",[5,18.651,255,24.375,317,15.553]],["name/223-4",[]],["text/223-4",[]],["component/223-4",[]],["title/223-5",[447,44.52]],["name/223-5",[]],["text/223-5",[]],["component/223-5",[]],["title/223",[38,21.809,642,46.644]],["name/223",[4290,3.92]],["text/223",[2,1.249,5,2.862,8,0.814,22,2.028,25,2.754,26,3.268,27,2.77,32,1.816,34,1.449,38,3.963,41,1.579,46,1.014,49,2.709,61,1.421,62,1.282,65,3.019,71,1.435,92,1.74,104,2.491,105,2.167,120,2.491,131,1.259,138,1.633,165,2.178,180,3.072,183,3.245,198,1.805,204,4.017,216,1.41,219,1.27,233,1.967,250,2.452,255,2.602,310,2.336,317,1.032,318,0.92,323,1.306,324,1.299,328,1.31,361,1.916,369,1.845,401,3.34,480,2.334,490,3.243,494,2.178,499,1.805,540,1.698,551,2.21,554,3.56,626,1.039,634,1.99,639,3.451,642,6.475,651,3.529,678,2.178,702,2.115,703,3.228,720,2.049,721,1.551,730,3.545,786,1.91,812,3.355,859,2.628,878,4.316,915,3.78,916,2.834,965,1.772,1058,2.533,1073,2.251,1123,3.44,1285,2.04,1460,3.754,1500,2.555,1584,2.382,1596,2.938,2242,6.793,2371,3.099,2651,2.555,3496,3.754,3955,2.471,4229,3.099,4291,4.89]],["component/223",[220,0.615]],["title/224-1",[676,17.814]],["name/224-1",[]],["text/224-1",[]],["component/224-1",[]],["title/224-2",[317,18.84,318,16.799]],["name/224-2",[]],["text/224-2",[]],["component/224-2",[]],["title/224-3",[60,16.431]],["name/224-3",[]],["text/224-3",[]],["component/224-3",[]],["title/224",[639,24.858,855,48.467]],["name/224",[855,2.584]],["text/224",[8,1.583,22,1.954,29,3.95,46,2.676,60,1.38,92,3.637,96,3.152,193,5.806,195,4.568,228,2.912,236,3.917,246,2.876,318,1.789,323,2.539,324,2.526,328,2.548,354,4.697,396,2.722,551,2.672,626,3.113,639,3.595,676,1.496,689,3.466,705,2.643,708,3.32,855,5.162,868,5.217,883,7.189,908,4.731,1285,3.967,2794,7.3,3460,6.026]],["component/224",[220,0.615]],["title/225-1",[676,17.814]],["name/225-1",[]],["text/225-1",[]],["component/225-1",[]],["title/225-2",[317,18.84,318,16.799]],["name/225-2",[]],["text/225-2",[]],["component/225-2",[]],["title/225-3",[60,16.431]],["name/225-3",[]],["text/225-3",[]],["component/225-3",[]],["title/225",[1071,41.643]],["name/225",[1071,1.751]],["text/225",[8,1.174,16,2.155,34,2.09,38,3.357,42,1.886,46,1.462,60,1.024,62,1.849,71,2.069,92,3.246,112,3.288,131,1.816,142,3.076,143,1.974,183,2.434,198,2.602,201,4.7,218,4.502,228,2.159,239,2.859,241,2.744,246,2.133,247,2.773,291,2.548,318,1.327,323,1.883,324,1.874,328,1.889,354,3.483,396,2.018,420,4.062,480,3.366,499,2.602,523,3.684,547,2.635,571,3.192,626,3.263,639,3.827,676,1.11,689,2.571,720,4.374,1071,5.056,1125,4.921,1187,2.578,1507,5.101,1516,4.433,3807,4.96,4292,5.808,4293,5.808]],["component/225",[220,0.615]],["title/226-1",[676,17.814]],["name/226-1",[]],["text/226-1",[]],["component/226-1",[]],["title/226-2",[317,18.84,318,16.799]],["name/226-2",[]],["text/226-2",[]],["component/226-2",[]],["title/226-3",[60,16.431]],["name/226-3",[]],["text/226-3",[]],["component/226-3",[]],["title/226",[191,23.745,786,28.778,897,40.884]],["name/226",[4294,3.92]],["text/226",[8,1.488,34,2.648,38,2.183,46,1.852,49,2.453,60,1.297,92,3.139,166,6.53,183,2.884,191,4.935,219,3.684,228,2.736,246,2.702,289,4.48,318,1.681,323,2.386,324,2.374,328,2.394,340,5.21,551,2.511,555,3.2,626,3.014,639,4.265,661,3.728,676,1.406,705,4.257,786,6.28,897,4.957,1477,6.859]],["component/226",[220,0.615]],["title/227-1",[676,17.814]],["name/227-1",[]],["text/227-1",[]],["component/227-1",[]],["title/227-2",[317,18.84,318,16.799]],["name/227-2",[]],["text/227-2",[]],["component/227-2",[]],["title/227-3",[60,16.431]],["name/227-3",[]],["text/227-3",[]],["component/227-3",[]],["title/227-4",[183,20.814,955,46.237]],["name/227-4",[]],["text/227-4",[]],["component/227-4",[]],["title/227-5",[651,23.799,1187,32.642]],["name/227-5",[]],["text/227-5",[]],["component/227-5",[]],["title/227-6",[183,20.814,651,23.799]],["name/227-6",[]],["text/227-6",[]],["component/227-6",[]],["title/227-7",[73,39.608,651,19.647,1187,26.947]],["name/227-7",[]],["text/227-7",[]],["component/227-7",[]],["title/227-8",[52,31.519,651,23.799]],["name/227-8",[]],["text/227-8",[]],["component/227-8",[]],["title/227-9",[216,25.746,3790,60.833]],["name/227-9",[]],["text/227-9",[]],["component/227-9",[]],["title/227-10",[48,46.443]],["name/227-10",[]],["text/227-10",[]],["component/227-10",[]],["title/227-11",[113,53.352]],["name/227-11",[]],["text/227-11",[]],["component/227-11",[]],["title/227-12",[1507,46.443]],["name/227-12",[]],["text/227-12",[]],["component/227-12",[]],["title/227-13",[5,18.651,255,24.375,317,15.553]],["name/227-13",[]],["text/227-13",[]],["component/227-13",[]],["title/227",[1440,54.515,2359,57.803]],["name/227",[4295,3.92]],["text/227",[2,2.57,5,0.637,8,0.152,12,0.398,16,0.769,22,2.161,25,1.355,26,0.727,29,0.727,30,1.43,32,0.34,33,0.414,34,0.955,37,0.359,38,1.586,40,0.459,46,0.522,47,0.376,48,0.718,49,1.063,52,3.465,60,1.062,61,0.266,62,2.017,64,0.83,65,0.351,71,0.945,73,3.718,78,0.667,79,2.456,80,0.258,84,0.659,85,0.37,92,2.114,93,0.937,95,1.424,96,0.303,97,0.466,99,0.579,106,0.333,110,0.308,111,0.825,112,2.179,113,4.101,119,1.292,124,0.382,130,1.386,131,1.555,134,0.545,138,0.585,139,1.072,141,0.392,142,1.318,143,1.69,144,0.332,156,0.347,160,0.345,163,1.242,169,0.324,171,0.364,172,1.841,173,0.462,179,0.452,183,3.282,189,0.544,191,3.457,192,0.624,197,0.497,198,0.929,199,0.631,200,1.699,202,0.38,203,1.828,204,0.713,205,0.83,206,0.449,208,0.389,213,0.417,216,1.29,217,0.825,218,3.042,220,0.301,233,0.704,237,0.703,239,0.371,241,0.681,247,0.36,253,0.932,255,0.579,259,0.559,262,0.739,274,0.364,277,0.915,283,0.404,288,1.036,291,1.616,294,0.414,299,0.691,310,1.494,313,0.426,316,0.446,317,0.531,318,0.172,319,0.419,323,0.244,324,0.243,328,0.245,341,0.772,344,0.694,347,1.412,362,0.449,365,1.797,367,0.406,371,0.466,377,0.514,378,0.394,379,1.262,385,0.389,386,0.533,389,1.722,390,0.355,391,0.376,396,0.922,398,2.27,399,1.899,408,0.379,409,0.492,417,0.302,420,0.681,423,1.792,432,0.659,467,0.52,479,1.276,482,0.638,491,0.871,494,0.408,499,2.049,513,2.39,515,0.343,518,0.429,524,3.682,527,0.644,547,1.672,549,0.953,551,2.262,554,0.792,556,0.747,557,0.41,562,0.455,565,1.45,620,0.784,622,0.419,626,1.71,628,0.669,633,0.429,634,1.024,638,0.824,639,1.926,647,3.388,650,0.502,651,0.671,661,1.344,674,0.865,676,0.609,689,0.917,699,0.487,701,0.951,703,0.376,705,0.895,708,0.611,720,2.899,721,1.228,722,0.34,729,0.462,730,0.329,733,0.462,734,1.016,745,0.569,747,0.624,750,0.624,784,0.559,786,0.684,790,0.58,798,4.808,800,1.172,812,0.595,815,0.492,822,0.593,837,0.772,910,0.404,916,0.33,920,0.593,929,0.492,956,0.776,965,0.634,969,1.016,982,0.429,1088,0.492,1099,0.593,1123,0.644,1125,1.518,1138,0.387,1144,0.559,1147,0.502,1149,0.841,1151,0.404,1155,0.534,1177,0.915,1187,3.845,1191,0.607,1197,0.569,1275,0.487,1283,0.52,1295,0.527,1301,0.487,1439,1.839,1440,8.188,1443,1.232,1444,1.021,1459,0.607,1481,0.534,1482,0.483,1489,0.534,1502,0.669,1507,4.402,1510,0.514,1516,1.068,1521,0.52,1533,0.853,1584,0.853,1615,1.11,1618,1.489,1659,0.421,1669,0.644,1677,0.396,1679,0.492,1681,0.443,1684,0.58,1694,1.007,1705,1.193,1712,0.474,1854,0.923,1882,0.569,2182,0.593,2248,0.483,2251,0.644,2268,0.55,2341,0.865,2348,0.841,2350,1.121,2359,0.593,2361,1.28,2363,0.703,2364,0.703,2365,1.932,2366,0.514,2369,0.527,2370,3.006,2385,0.815,2386,0.624,2408,3.154,2462,1.878,2641,0.408,2642,0.815,2667,0.497,2795,0.644,2808,3.688,2843,0.492,2888,0.607,2928,0.514,2938,1.069,2943,1.344,2991,0.541,3192,0.644,3448,1.232,3771,1.232,3824,0.644,3952,0.559,4035,0.703,4095,0.508,4185,0.492,4203,2.086,4222,0.703,4278,1.007,4296,0.754,4297,0.754,4298,0.754,4299,0.754,4300,3.684,4301,0.754,4302,0.754,4303,0.703,4304,0.624,4305,2.653,4306,0.754,4307,0.754,4308,0.754,4309,0.703,4310,0.754,4311,0.754,4312,1.442,4313,1.232,4314,0.754,4315,0.754,4316,0.754,4317,0.624,4318,0.754,4319,2.073,4320,0.754,4321,0.754,4322,0.754,4323,0.754,4324,0.754]],["component/227",[220,0.615]],["title/228-1",[676,17.814]],["name/228-1",[]],["text/228-1",[]],["component/228-1",[]],["title/228-2",[317,18.84,318,16.799]],["name/228-2",[]],["text/228-2",[]],["component/228-2",[]],["title/228-3",[60,16.431]],["name/228-3",[]],["text/228-3",[]],["component/228-3",[]],["title/228-4",[216,32.645]],["name/228-4",[]],["text/228-4",[]],["component/228-4",[]],["title/228-5",[2035,55.512]],["name/228-5",[]],["text/228-5",[]],["component/228-5",[]],["title/228",[214,35.647,2712,37.238,2886,48.873]],["name/228",[4325,3.92]],["text/228",[6,1.67,8,0.649,10,1.511,11,2.332,21,2.668,22,2.44,25,2.286,29,3.5,38,3.845,46,0.808,60,1.223,71,1.144,74,2.464,78,1.486,92,1.864,112,3.74,131,2.17,142,2.904,150,3.9,159,2.679,171,3.92,174,1.694,183,2.298,191,1.256,197,2.116,198,1.438,211,2.214,214,4.075,218,2.139,224,2.187,228,1.194,246,1.975,248,2.696,254,1.678,274,1.55,277,2.036,278,4.984,281,1.985,284,2.341,285,1.686,310,1.157,317,0.823,318,0.733,323,1.041,324,1.036,328,1.044,334,2.273,339,2.656,348,1.849,364,1.517,379,1.527,396,1.116,417,2.154,449,2.849,453,2.019,545,1.189,547,3.149,622,1.784,626,2.522,634,1.586,676,1.028,677,1.719,689,1.421,720,2.736,728,2.242,730,1.4,734,2.637,761,2.074,788,2.585,795,6.664,815,2.095,878,3.582,915,1.873,919,2.116,967,1.443,1001,2.955,1010,1.969,1118,1.912,1253,2.742,1285,1.626,1459,2.585,1461,4.075,1677,1.686,1878,2.116,2237,2.074,2370,1.694,2377,2.273,2397,1.898,2657,3.411,2712,1.969,2868,2.306,2886,6.537,3446,2.341,3463,5.013,4066,2.992,4126,6.382,4260,8.679,4326,3.21,4327,3.21,4328,2.742,4329,2.992,4330,3.21,4331,3.21,4332,8.118,4333,4.593,4334,3.21]],["component/228",[220,0.615]],["title/229-1",[676,17.814]],["name/229-1",[]],["text/229-1",[]],["component/229-1",[]],["title/229-2",[317,18.84,318,16.799]],["name/229-2",[]],["text/229-2",[]],["component/229-2",[]],["title/229-3",[60,16.431]],["name/229-3",[]],["text/229-3",[]],["component/229-3",[]],["title/229",[1049,48.467,1712,46.237]],["name/229",[1049,2.584]],["text/229",[8,1.798,25,3.78,38,2.637,41,3.486,48,4.429,60,1.567,92,3.455,96,3.579,183,2.517,191,3.478,203,4.411,274,4.293,289,5.412,318,2.031,323,2.883,324,2.868,328,2.892,361,4.23,555,3.866,626,2.984,676,1.699,677,4.76,859,5.802,1049,5.861,2297,6.99,4335,7.356]],["component/229",[220,0.615]],["title/230-1",[676,17.814]],["name/230-1",[]],["text/230-1",[]],["component/230-1",[]],["title/230-2",[317,18.84,318,16.799]],["name/230-2",[]],["text/230-2",[]],["component/230-2",[]],["title/230-3",[60,16.431]],["name/230-3",[]],["text/230-3",[]],["component/230-3",[]],["title/230",[639,20.521,1150,38.857,2350,32.83]],["name/230",[4336,3.92]],["text/230",[2,1.416,8,1.447,22,1.139,34,1.643,38,1.354,46,1.149,49,1.522,60,1.556,62,2.81,71,1.627,80,2.451,84,5.498,85,2.239,86,2.375,92,2.685,112,3.376,113,4.096,114,2.7,134,2.707,138,1.852,142,2.56,143,3.001,183,3.073,189,1.723,191,1.786,199,1.997,228,1.698,246,1.677,257,5,259,3.385,283,2.445,291,2.003,299,2.188,318,1.043,323,1.48,324,1.473,328,1.485,364,2.157,392,2.511,396,1.587,398,1.72,399,2.354,401,2.354,450,3.778,499,3.207,549,2.099,551,1.558,555,1.985,557,3.892,560,2.343,568,2.135,620,2.482,626,2.799,639,3.893,661,2.313,676,0.872,721,1.758,734,2.239,1150,2.923,1486,2.523,1677,3.758,1702,3.042,1712,2.871,2242,5.22,2350,6.742,2370,2.409,2371,3.514,2397,5.22,4275,3.676,4337,4.256]],["component/230",[220,0.615]],["title/231-1",[676,17.814]],["name/231-1",[]],["text/231-1",[]],["component/231-1",[]],["title/231-2",[317,18.84,318,16.799]],["name/231-2",[]],["text/231-2",[]],["component/231-2",[]],["title/231-3",[60,16.431]],["name/231-3",[]],["text/231-3",[]],["component/231-3",[]],["title/231",[23,38.79,2887,62.794]],["name/231",[4338,3.92]],["text/231",[8,1.053,14,1.799,16,2.939,20,5.638,22,1.976,23,6.66,38,2.35,49,1.735,71,1.855,92,2.576,99,2.091,131,2.998,163,3.084,169,2.238,173,3.194,183,3.264,216,1.823,219,3.022,318,1.189,323,1.688,324,1.679,328,1.694,369,2.385,393,3.037,519,2.626,551,2.702,560,2.672,626,2.973,721,2.004,724,3.1,739,5.025,749,2.893,753,4.14,786,2.468,808,2.801,837,4.241,928,3.468,965,4.218,1298,3.057,1486,2.877,1490,4.14,2062,8.163,2667,3.432,2887,9.151,3302,3.637,4075,8.937,4339,5.206,4340,4.192,4341,5.206,4342,4.62,4343,7.921]],["component/231",[220,0.615]],["title/232-1",[676,17.814]],["name/232-1",[]],["text/232-1",[]],["component/232-1",[]],["title/232-2",[317,18.84,318,16.799]],["name/232-2",[]],["text/232-2",[]],["component/232-2",[]],["title/232-3",[60,16.431]],["name/232-3",[]],["text/232-3",[]],["component/232-3",[]],["title/232-4",[216,32.645]],["name/232-4",[]],["text/232-4",[]],["component/232-4",[]],["title/232-5",[347,28.782]],["name/232-5",[]],["text/232-5",[]],["component/232-5",[]],["title/232-6",[1681,54.75]],["name/232-6",[]],["text/232-6",[]],["component/232-6",[]],["title/232",[127,39.224,705,20.484,1490,31.721]],["name/232",[4344,3.92]],["text/232",[8,0.525,21,2.227,22,2.47,34,1.615,41,2.324,60,2.015,62,2.779,66,3.916,71,2.112,89,3.258,92,1.897,99,1.802,106,1.145,117,4.509,124,6.609,127,6.05,128,1.908,131,1.403,142,3.349,143,2.711,150,2.522,162,3.897,172,2.843,183,2.258,189,0.98,199,1.135,206,1.546,216,0.909,234,2.635,291,1.139,308,1.278,315,1.332,317,0.665,318,0.593,323,0.842,324,0.837,328,0.844,334,1.838,344,1.249,347,2.695,379,2.135,386,0.959,389,1.69,391,1.293,392,2.477,396,2.06,398,0.978,407,1.864,513,1.356,527,3.154,545,0.961,547,1.178,586,1.79,623,1.485,626,1.529,633,1.476,651,0.84,676,1.524,690,1.729,700,1.748,705,1.514,721,0.999,749,1.442,808,2.415,832,2.584,916,3.088,964,1.568,1000,3.992,1006,3.095,1012,4.704,1048,7.302,1059,1.58,1082,1.459,1098,1.79,1118,1.546,1391,1.434,1490,5.174,1681,2.635,1702,1.729,1933,3.868,2035,2.672,2666,1.677,2839,3.833,2939,1.838,3763,1.997,4345,5.526,4346,8.727,4347,4.183,4348,3.833,4349,2.596,4350,2.419,4351,3.982,4352,2.09]],["component/232",[220,0.615]],["title/233-1",[676,17.814]],["name/233-1",[]],["text/233-1",[]],["component/233-1",[]],["title/233-2",[317,18.84,318,16.799]],["name/233-2",[]],["text/233-2",[]],["component/233-2",[]],["title/233-3",[60,16.431]],["name/233-3",[]],["text/233-3",[]],["component/233-3",[]],["title/233-4",[216,25.746,651,23.799]],["name/233-4",[]],["text/233-4",[]],["component/233-4",[]],["title/233-5",[24,19.438,219,23.177]],["name/233-5",[]],["text/233-5",[]],["component/233-5",[]],["title/233-6",[133,28.778,651,19.647,1187,26.947]],["name/233-6",[]],["text/233-6",[]],["component/233-6",[]],["title/233-7",[183,20.814,651,23.799]],["name/233-7",[]],["text/233-7",[]],["component/233-7",[]],["title/233-8",[708,39.524]],["name/233-8",[]],["text/233-8",[]],["component/233-8",[]],["title/233",[159,30.238,219,19.134,2888,48.873]],["name/233",[4353,3.92]],["text/233",[1,1.633,2,1.186,8,0.305,22,1.958,24,3.226,34,0.542,38,1.134,40,2.343,41,0.591,42,0.489,46,0.695,49,1.84,60,1.095,62,1.217,64,1.896,71,0.984,78,2.19,82,0.547,84,0.688,89,0.828,92,3.1,93,0.681,95,0.673,96,1.539,97,1.708,103,2.121,110,1.128,120,0.931,131,0.863,133,2.244,135,0.738,137,3.07,138,1.12,139,0.929,143,0.512,156,0.692,159,6.237,160,0.69,162,2.665,183,2.735,196,0.798,199,1.208,203,0.747,205,0.867,209,0.924,212,1.464,213,0.832,216,2.578,219,3.947,228,1.027,241,0.712,246,1.404,247,0.719,251,0.78,262,1.362,264,1.58,300,1.399,308,0.741,310,0.543,311,0.852,312,1.526,318,0.344,323,0.488,324,0.486,328,0.49,347,1.705,361,0.717,379,0.717,389,0.567,392,2.905,398,1.783,399,0.776,400,1.213,401,0.776,405,1.184,414,0.852,416,0.784,417,1.531,432,1.261,441,1.213,479,1.328,482,0.667,515,0.686,519,0.76,527,1.708,540,1.996,542,2.058,545,1.416,551,3.632,555,0.655,560,0.773,625,0.891,626,2.936,638,0.599,639,0.934,651,1.237,661,0.763,676,1.055,687,0.973,690,1.003,698,1.099,705,3.049,720,0.766,727,0.947,775,1.802,779,2.23,780,2.927,782,0.867,786,0.714,798,1.775,812,0.622,915,1.611,916,0.659,917,1.337,931,0.823,958,1.015,967,0.677,969,0.738,1017,4.094,1085,2.398,1087,0.917,1103,2.374,1187,2.451,1231,0.795,1298,4.863,1312,2.285,1334,0.663,1340,1.694,1444,1.066,1486,1.526,1837,2.637,1855,1.411,1938,1.117,1971,0.931,2061,1.213,2192,2.014,2272,1.246,2348,0.879,2442,1.45,2808,1.039,2818,3.088,2870,1.681,2888,1.213,2913,1.286,3298,0.973,3931,1.246,3983,1.039,4083,1.137,4230,3.163,4354,2.358,4355,1.404,4356,2.761,4357,1.404,4358,1.404,4359,1.337,4360,1.506,4361,2.574,4362,3.393,4363,1.506]],["component/233",[220,0.615]],["title/234-1",[676,17.814]],["name/234-1",[]],["text/234-1",[]],["component/234-1",[]],["title/234-2",[317,18.84,318,16.799]],["name/234-2",[]],["text/234-2",[]],["component/234-2",[]],["title/234-3",[60,16.431]],["name/234-3",[]],["text/234-3",[]],["component/234-3",[]],["title/234-4",[24,19.438,651,23.799]],["name/234-4",[]],["text/234-4",[]],["component/234-4",[]],["title/234-5",[2980,66.009]],["name/234-5",[]],["text/234-5",[]],["component/234-5",[]],["title/234-6",[515,42.438]],["name/234-6",[]],["text/234-6",[]],["component/234-6",[]],["title/234-7",[128,31.257,129,38.073]],["name/234-7",[]],["text/234-7",[]],["component/234-7",[]],["title/234-8",[183,20.814,651,23.799]],["name/234-8",[]],["text/234-8",[]],["component/234-8",[]],["title/234-9",[47,25.747,183,14.631,219,16.292,651,16.729]],["name/234-9",[]],["text/234-9",[]],["component/234-9",[]],["title/234",[468,41.359,705,20.484,2244,45.004]],["name/234",[4364,3.92]],["text/234",[1,0.679,2,3.01,3,0.424,5,0.353,8,0.612,11,2.881,20,1.765,22,2.032,24,3.188,25,0.488,33,2.469,38,1.127,48,1.07,49,2.485,51,0.603,54,0.649,60,1.09,61,1.067,62,2.945,63,0.544,64,0.86,71,1.078,78,0.531,79,0.495,82,1.099,84,0.524,89,1.18,92,2.188,93,0.519,95,1.351,99,2.838,108,0.704,109,0.597,115,0.877,124,1.088,128,3.005,131,0.359,133,0.544,138,0.871,139,1.017,141,0.597,143,3.224,163,0.836,168,0.928,171,0.554,172,1.217,173,3.138,176,0.716,183,3.414,189,0.433,191,0.449,199,0.502,201,1.174,203,0.57,212,2.015,216,0.402,219,1.198,228,0.427,236,0.574,239,0.565,246,0.422,247,0.548,248,0.446,264,1.229,308,0.565,310,1.09,312,2.483,314,0.782,317,0.55,318,1.027,319,0.638,323,0.372,324,0.37,328,0.373,347,0.663,364,1.014,367,0.618,369,0.984,386,0.793,389,0.432,390,1.011,392,1.061,393,0.67,395,0.704,396,1.777,399,0.592,401,0.592,403,0.813,418,0.813,423,1.308,432,0.98,447,1.025,465,0.782,468,1.463,479,1.829,482,0.95,499,0.514,501,3.395,515,0.977,521,0.965,528,1.297,542,1.653,547,0.974,551,1.032,554,1.18,557,0.624,571,0.631,589,1.167,620,0.624,626,2.696,634,1.061,638,0.854,639,2.954,642,0.728,645,0.579,646,1.307,650,0.765,651,1.23,661,0.581,666,0.98,676,0.977,677,0.615,678,0.621,689,0.95,690,0.765,702,1.996,704,1.415,705,1.726,708,0.91,721,2.558,724,1.278,727,0.722,728,0.802,729,0.704,730,1.96,733,1.317,734,0.563,739,0.728,740,1.592,741,0.773,752,0.645,761,0.742,780,0.71,786,2.13,798,2.375,804,0.665,812,2.343,829,1.362,836,1.35,859,0.749,884,0.735,909,1.236,910,0.615,916,0.502,931,0.627,965,1.331,967,0.516,969,0.563,970,2.869,1056,1.387,1095,1.155,1103,2.857,1104,0.851,1138,2.306,1154,1.463,1231,0.606,1293,0.638,1340,0.704,1466,0.782,1470,1.62,1527,0.813,1595,0.679,1636,0.924,1645,0.722,1651,0.883,1851,0.825,1855,1.097,1878,0.757,1879,0.641,1926,0.98,2035,2.263,2202,2.622,2244,5.529,2339,1.5,2370,0.606,2379,1.387,2385,0.649,2410,0.792,2446,0.866,2641,2.056,2642,1.214,2651,0.728,2713,0.765,2821,0.902,2843,1.401,2848,1.446,2929,1.019,2980,5.28,3153,0.792,3213,1.5,3298,0.742,3480,0.98,3955,1.855,4185,0.749,4230,0.95,4249,1.07,4291,2.869,4328,0.98,4354,0.98,4365,2.819,4366,2.001,4367,2.147,4368,2.147,4369,1.834,4370,3.801,4371,0.98,4372,1.148,4373,1.148,4374,1.019,4375,1.019,4376,0.98,4377,1.148,4378,0.924,4379,0.98,4380,1.148,4381,1.148,4382,1.148,4383,1.07,4384,0.883,4385,1.019,4386,1.148]],["component/234",[220,0.615]],["title/235-1",[676,17.814]],["name/235-1",[]],["text/235-1",[]],["component/235-1",[]],["title/235-2",[317,18.84,318,16.799]],["name/235-2",[]],["text/235-2",[]],["component/235-2",[]],["title/235-3",[60,16.431]],["name/235-3",[]],["text/235-3",[]],["component/235-3",[]],["title/235-4",[24,13.663,131,16.161,651,16.729,2980,36.593]],["name/235-4",[]],["text/235-4",[]],["component/235-4",[]],["title/235-5",[515,33.47,651,23.799]],["name/235-5",[]],["text/235-5",[]],["component/235-5",[]],["title/235-6",[5,18.651,255,24.375,317,15.553]],["name/235-6",[]],["text/235-6",[]],["component/235-6",[]],["title/235",[2244,54.515,2873,55.493]],["name/235",[4387,3.92]],["text/235",[2,1.216,5,1.204,8,0.632,11,2.005,14,0.412,21,0.591,22,1.901,23,0.628,24,3.091,25,1.666,26,1.121,27,1.675,29,0.601,34,0.429,38,0.659,40,2.302,46,0.3,49,1.752,54,2.216,60,1.199,62,0.379,71,0.792,72,1.288,74,0.546,82,0.433,91,1.081,92,2.591,96,0.48,97,0.737,103,4.825,110,0.487,116,1.228,120,1.374,121,0.695,127,0.77,128,0.945,130,0.622,131,1.225,135,0.584,137,1.098,139,0.401,143,2.313,144,0.524,149,0.843,162,0.805,163,0.464,169,0.955,172,0.48,182,0.731,183,2.595,189,1.179,191,1.222,195,1.822,196,1.178,198,0.996,201,1.707,203,1.103,207,0.883,208,1.146,216,0.417,219,1.657,220,0.249,233,0.582,255,1.254,257,4.753,260,1.296,262,1.113,264,0.682,275,0.631,285,1.167,296,0.832,299,0.571,308,1.929,310,0.429,311,0.673,317,1.492,318,0.272,319,1.235,320,0.553,323,0.386,324,0.384,328,0.388,341,0.638,344,0.573,347,1.428,353,0.802,366,0.655,367,0.641,379,0.567,389,1.742,391,1.107,392,2.673,398,1.476,404,0.756,408,1.116,413,0.986,420,1.476,436,0.658,447,1.061,468,1.514,479,0.573,494,0.644,499,0.534,513,1.633,515,1.422,532,0.743,540,3.504,547,1.008,551,0.406,554,2.888,555,0.518,560,1.603,596,1.363,607,0.794,626,1.502,633,1.264,634,2.878,639,3.009,669,1.789,674,0.714,676,0.884,687,1.436,689,1.383,722,0.537,730,3.48,734,1.09,782,0.686,786,0.565,796,1.811,804,0.69,819,2.072,824,2.585,832,0.686,843,0.869,851,0.959,864,1.305,876,0.822,887,0.666,908,0.72,910,0.638,916,0.972,964,0.72,967,0.999,982,0.678,998,0.832,1010,0.731,1059,3.2,1095,0.641,1103,0.955,1151,0.638,1174,0.785,1278,0.883,1280,0.843,1303,0.959,1496,1.017,1507,0.593,1521,3.19,1610,0.856,1618,0.856,1633,1.574,1659,1.242,1661,0.899,1675,0.749,1837,0.822,1854,1.423,1926,2.668,1938,0.883,2033,1.305,2035,1.323,2244,5.916,2245,1.057,2261,1.017,2323,0.843,2327,0.959,2346,0.869,2348,0.695,2383,1.017,2468,2.585,2659,1.11,2782,3.672,2870,1.902,2873,1.677,2889,5.236,2918,0.986,2980,7.624,3028,1.057,3452,3.081,3974,0.986,3983,0.822,4032,1.839,4126,6.533,4151,0.936,4365,6.739,4366,4.311,4371,1.017,4388,1.972,4389,2.222,4390,2.222,4391,2.222,4392,1.11,4393,1.191,4394,1.11,4395,9.382,4396,2.772,4397,1.191,4398,3.919,4399,1.191,4400,1.191,4401,1.191,4402,1.191,4403,3.124,4404,1.191,4405,2.072]],["component/235",[220,0.615]],["title/236-1",[676,17.814]],["name/236-1",[]],["text/236-1",[]],["component/236-1",[]],["title/236-2",[317,18.84,318,16.799]],["name/236-2",[]],["text/236-2",[]],["component/236-2",[]],["title/236-3",[60,16.431]],["name/236-3",[]],["text/236-3",[]],["component/236-3",[]],["title/236",[80,25.176,386,27.167]],["name/236",[4406,3.92]],["text/236",[2,2.4,8,0.757,22,1.93,29,1.889,37,5.292,40,1.192,46,0.943,49,3.514,51,3.207,60,1.363,71,1.334,78,4.549,79,1.615,80,4.616,85,1.836,92,2.987,99,1.504,110,1.53,131,1.91,137,3.019,139,1.259,142,1.34,165,2.026,168,3.344,172,1.508,183,3.766,189,1.413,216,1.311,219,1.926,228,1.392,239,1.843,241,2.886,246,1.375,285,1.966,294,2.058,318,0.856,323,1.214,324,1.208,328,1.218,365,2.648,386,3.632,396,2.123,432,1.71,447,3.694,545,2.262,551,1.278,557,2.036,626,2.535,634,1.851,639,2.065,676,0.716,705,3.914,721,2.978,798,1.739,800,2.117,916,2.672,956,2.015,982,2.13,1071,4.391,1285,1.897,1379,2.523,1677,1.966,1718,2.171,2385,3.454,3382,3.491,4407,5.694,4408,3.745,4409,6.606]],["component/236",[220,0.615]],["title/237-1",[676,17.814]],["name/237-1",[]],["text/237-1",[]],["component/237-1",[]],["title/237-2",[317,18.84,318,16.799]],["name/237-2",[]],["text/237-2",[]],["component/237-2",[]],["title/237-3",[60,16.431]],["name/237-3",[]],["text/237-3",[]],["component/237-3",[]],["title/237",[80,25.176,115,30.044]],["name/237",[4410,3.92]],["text/237",[8,0.814,11,4.425,22,2.028,24,1.065,38,1.195,42,1.308,45,1.249,46,2.745,60,1.142,62,2.587,77,1.449,80,2.783,84,1.839,87,5.714,92,2.742,94,2.251,115,4.455,117,2.277,128,3.959,129,2.086,131,1.259,138,2.628,150,2.264,174,2.125,183,2.889,191,4.265,203,1.998,219,3.437,228,1.498,246,2.379,262,2.308,299,3.896,318,0.92,323,1.306,324,1.299,328,1.31,347,2,365,1.746,389,2.44,392,1.413,480,2.334,549,1.851,551,2.21,553,3.296,557,2.19,626,2.956,639,2.19,650,4.316,655,2.491,676,0.77,722,3.665,727,2.533,729,2.471,730,1.756,800,2.277,810,3.574,812,3.355,878,6.204,947,3.574,1149,2.35,1508,3.574,1541,2.156,1855,3.31,2442,5.359,2778,5.838,4154,3.332,4411,4.028,4412,4.028,4413,3.754]],["component/237",[220,0.615]],["title/238-1",[676,17.814]],["name/238-1",[]],["text/238-1",[]],["component/238-1",[]],["title/238-2",[317,18.84,318,16.799]],["name/238-2",[]],["text/238-2",[]],["component/238-2",[]],["title/238-3",[60,16.431]],["name/238-3",[]],["text/238-3",[]],["component/238-3",[]],["title/238",[80,20.784,553,30.879,2350,32.83]],["name/238",[4414,3.92]],["text/238",[8,0.635,22,2.565,42,1.02,46,1.329,47,1.564,49,2.668,60,1.902,61,1.108,62,1.68,79,1.353,80,3.52,92,2.761,96,1.264,99,2.119,112,2.611,126,1.641,130,1.641,131,1.65,134,1.996,138,1.273,142,1.888,143,1.067,165,1.698,174,2.784,183,2.737,189,1.185,191,1.228,199,2.308,228,1.167,246,1.938,310,1.132,315,2.709,318,0.717,323,1.018,324,1.013,328,1.021,364,1.483,392,1.852,396,1.834,408,1.577,440,2.069,549,1.443,553,4.072,555,2.969,560,3.504,568,5.248,626,2.064,639,3.475,676,0.6,697,1.707,702,1.648,705,1.781,720,4.541,721,2.032,722,1.415,729,1.926,782,1.808,812,2.819,915,1.831,916,2.308,931,1.716,965,2.322,1033,2.328,1071,2.358,1095,1.689,1242,5.935,1285,2.674,1290,5.223,1295,2.193,1507,2.629,1596,2.29,1675,1.974,1677,1.648,1838,4.835,1845,2.528,1971,3.264,2045,2.328,2348,1.831,2350,6.071,2367,2.223,2370,1.656,2397,5.278,2732,3.737,3606,4.25,4154,2.597,4161,2.255,4337,2.926,4415,3.139,4416,3.139,4417,2.926,4418,2.681,4419,9.123]],["component/238",[220,0.615]],["title/239-1",[676,17.814]],["name/239-1",[]],["text/239-1",[]],["component/239-1",[]],["title/239-2",[317,18.84,318,16.799]],["name/239-2",[]],["text/239-2",[]],["component/239-2",[]],["title/239-3",[60,16.431]],["name/239-3",[]],["text/239-3",[]],["component/239-3",[]],["title/239-4",[708,39.524]],["name/239-4",[]],["text/239-4",[]],["component/239-4",[]],["title/239",[80,17.696,553,26.292,639,17.473,2350,27.953]],["name/239",[4420,3.92]],["text/239",[8,0.781,22,1.563,24,2.403,30,2.665,46,1.577,47,1.925,49,3.756,60,1.761,62,2.516,64,1.548,79,1.666,80,3.858,92,2.874,96,1.555,97,2.389,99,3.65,110,1.579,112,2.396,126,2.019,130,2.019,138,1.567,142,2.241,143,2.13,183,3.609,191,1.511,218,2.492,219,1.218,228,1.437,246,1.419,296,2.699,318,0.883,323,1.253,324,1.246,328,1.257,376,2.973,392,1.356,396,1.343,408,1.941,542,1.68,553,3.187,555,3.436,626,2.906,639,3.617,656,2.818,676,0.738,689,1.71,697,2.101,705,2.114,720,5.442,721,2.412,722,1.742,761,2.497,782,2.225,1071,3.53,1125,3.585,1315,2.736,1507,3.937,2045,2.865,2254,3.429,2350,6.895,2370,2.038,2397,2.285,2437,2.633,2859,3.111,4419,9.999,4421,3.864,4422,3.864]],["component/239",[220,0.615]],["title/240-1",[676,17.814]],["name/240-1",[]],["text/240-1",[]],["component/240-1",[]],["title/240-2",[317,18.84,318,16.799]],["name/240-2",[]],["text/240-2",[]],["component/240-2",[]],["title/240-3",[60,16.431]],["name/240-3",[]],["text/240-3",[]],["component/240-3",[]],["title/240",[41,23.801,80,20.784,109,31.575]],["name/240",[4423,3.92]],["text/240",[2,1.655,3,1.972,8,1.079,22,2.014,38,2.394,39,2.577,41,5.524,42,1.733,46,2.032,60,1.422,64,3.233,80,3.716,84,2.437,92,3.42,94,2.982,109,6.377,128,4.138,183,3.711,219,3.865,318,1.219,323,1.73,324,1.721,328,1.736,346,4.106,347,2.492,479,2.567,571,2.932,626,3.584,676,1.02,697,2.901,700,3.594,705,2.724,779,3.113,780,3.3,1490,2.789,2782,5.638]],["component/240",[220,0.615]],["title/241-1",[676,17.814]],["name/241-1",[]],["text/241-1",[]],["component/241-1",[]],["title/241-2",[317,18.84,318,16.799]],["name/241-2",[]],["text/241-2",[]],["component/241-2",[]],["title/241-3",[60,16.431]],["name/241-3",[]],["text/241-3",[]],["component/241-3",[]],["title/241-4",[2,22.808,1510,50.099]],["name/241-4",[]],["text/241-4",[]],["component/241-4",[]],["title/241-5",[320,43.288]],["name/241-5",[]],["text/241-5",[]],["component/241-5",[]],["title/241",[38,21.809,2391,54.515]],["name/241",[2391,2.906]],["text/241",[2,0.964,3,0.634,8,0.628,16,0.636,22,1.063,24,0.453,25,0.729,28,2.049,30,1.183,32,0.773,38,2.359,39,0.828,41,0.672,52,0.735,60,0.751,65,0.799,71,0.611,76,1.044,88,0.805,92,0.835,109,0.892,131,4.018,143,0.583,148,0.981,168,4.297,169,0.737,174,6.346,183,1.206,216,2.592,219,0.541,242,3.217,245,2.571,246,0.63,312,0.948,318,0.392,320,1.443,323,0.556,324,0.553,328,0.558,344,0.825,353,1.155,360,2.839,378,0.896,381,1.061,384,1.522,397,1.142,424,0.847,626,3.024,669,3.431,676,0.594,716,1.036,725,1.119,753,0.896,798,0.796,832,0.988,862,1.142,935,2.977,1073,0.958,1103,0.737,1106,3.061,1187,0.761,1264,1.014,1406,0.953,1495,2.346,1510,2.118,1519,1.348,1597,1.381,1616,1.522,1633,2.201,1656,1.198,1670,1.052,1837,1.183,1838,7.607,2391,3.16,2460,1.522,2468,2.571,2469,1.119,2703,2.897,2852,1.419,2872,1.119,2877,1.232,3026,1.465,3093,1.522,3348,2.502,3368,2.571,3575,1.419,3930,1.599,3942,1.522,4069,3.782,4126,1.348,4128,1.522,4217,1.465,4388,1.522,4424,1.715,4425,1.599,4426,1.715,4427,1.715,4428,1.715,4429,3.782,4430,1.715,4431,1.715,4432,1.715,4433,2.758,4434,3.108,4435,1.715,4436,1.715,4437,1.715,4438,1.715,4439,1.715,4440,1.715,4441,1.715,4442,1.715,4443,1.715,4444,1.715,4445,1.715,4446,3.108,4447,1.715,4448,1.715,4449,1.715,4450,1.715,4451,1.715,4452,1.715,4453,1.715,4454,1.715,4455,1.715,4456,1.715,4457,1.715,4458,1.715,4459,3.108,4460,1.522,4461,1.715,4462,1.715,4463,1.715,4464,3.108,4465,1.715,4466,1.715,4467,1.715,4468,1.715,4469,3.108,4470,3.108,4471,1.715,4472,1.715,4473,1.715,4474,1.715,4475,1.715,4476,1.715,4477,1.715,4478,1.715,4479,1.715,4480,1.715,4481,1.715,4482,1.522,4483,1.715,4484,1.715,4485,1.715,4486,1.599,4487,1.715,4488,1.715,4489,1.715,4490,1.715,4491,1.715,4492,1.715,4493,1.715,4494,1.715,4495,1.715,4496,1.599,4497,1.715,4498,1.715,4499,4.262,4500,1.715,4501,1.715,4502,1.715,4503,1.715,4504,1.715,4505,1.715,4506,1.715,4507,1.715,4508,1.715,4509,1.715,4510,1.715,4511,1.715,4512,1.715,4513,1.715,4514,1.715,4515,1.715,4516,1.715,4517,1.715,4518,1.715,4519,1.599,4520,1.715,4521,1.715,4522,1.715,4523,1.715,4524,1.715,4525,1.715,4526,1.715,4527,1.715,4528,1.715,4529,1.715,4530,1.715,4531,1.715,4532,1.715,4533,1.465,4534,1.715,4535,1.715,4536,1.715,4537,1.715,4538,1.715,4539,1.715,4540,1.715,4541,1.715,4542,1.715,4543,1.715,4544,1.715,4545,1.715,4546,1.715,4547,1.715,4548,1.715,4549,1.715,4550,1.715,4551,1.599,4552,2.897,4553,1.715,4554,1.715,4555,1.715,4556,1.715,4557,1.715,4558,1.715,4559,3.108,4560,1.715,4561,1.715,4562,1.715,4563,1.715,4564,1.522,4565,1.715,4566,1.715,4567,1.715,4568,1.715,4569,1.715,4570,1.715,4571,1.715,4572,1.715,4573,1.715,4574,1.715,4575,1.715,4576,1.715,4577,1.715,4578,1.715,4579,1.715,4580,1.599,4581,1.715,4582,1.715,4583,1.715,4584,1.715,4585,1.715,4586,1.715,4587,1.715,4588,1.715,4589,1.715,4590,1.715,4591,3.108,4592,1.715,4593,1.715,4594,1.715,4595,1.715,4596,1.715,4597,1.715,4598,1.715,4599,1.715,4600,3.108,4601,1.715]],["component/241",[220,0.615]],["title/242-1",[676,17.814]],["name/242-1",[]],["text/242-1",[]],["component/242-1",[]],["title/242-2",[317,18.84,318,16.799]],["name/242-2",[]],["text/242-2",[]],["component/242-2",[]],["title/242-3",[60,16.431]],["name/242-3",[]],["text/242-3",[]],["component/242-3",[]],["title/242",[24,19.438,540,31.002]],["name/242",[4602,3.654]],["text/242",[2,3.477,8,1.151,22,1.42,24,3.534,29,2.871,45,1.766,46,2.132,49,3.372,60,1.493,61,2.008,77,2.048,92,3.011,99,2.286,144,2.504,162,2.06,172,2.291,183,3.784,206,3.389,219,1.794,228,2.116,236,2.847,246,2.09,262,3.018,310,3.054,318,1.3,323,1.845,324,1.836,328,1.852,341,3.047,392,1.997,396,1.978,540,4.266,545,3.137,626,3.09,676,1.088,705,1.921,812,2.35,832,4.878,1103,5.399,1121,3.237,2385,4.789,2442,2.988,4603,5.305]],["component/242",[220,0.615]],["title/243-1",[676,17.814]],["name/243-1",[]],["text/243-1",[]],["component/243-1",[]],["title/243-2",[317,18.84,318,16.799]],["name/243-2",[]],["text/243-2",[]],["component/243-2",[]],["title/243-3",[60,16.431]],["name/243-3",[]],["text/243-3",[]],["component/243-3",[]],["title/243-4",[183,20.814,219,23.177]],["name/243-4",[]],["text/243-4",[]],["component/243-4",[]],["title/243",[5,22.593,24,19.438]],["name/243",[4604,3.92]],["text/243",[2,1.072,5,2.612,8,0.699,20,1.605,22,2.35,24,3.389,25,1.47,26,1.744,49,1.906,54,1.955,60,1.008,61,2.018,62,1.821,82,2.659,84,1.579,92,2.53,95,1.544,97,2.138,99,2.297,106,1.526,139,1.162,143,1.944,144,1.521,172,2.303,174,1.824,180,1.639,183,3.041,189,1.305,190,3.897,191,1.352,246,1.269,255,1.388,274,1.669,289,6.177,313,3.234,318,0.79,323,1.121,324,1.115,328,1.125,338,1.921,342,2.256,377,2.356,386,1.277,417,1.385,432,1.579,438,2.073,447,3.494,549,2.629,571,1.9,587,2.483,589,1.88,607,3.81,620,1.88,626,1.887,639,3.798,651,1.119,676,0.661,705,1.167,734,2.804,800,1.955,878,5.664,879,9.439,897,6.344,914,2.415,916,2.502,967,3.288,1059,3.482,1099,2.718,1103,3.655,1461,2.03,1482,2.213,1486,3.161,1635,2.303,1746,2.303,1838,2.448,2641,1.87,2642,1.955,2797,3.068,3424,2.784,3955,2.121,3983,2.384,4250,2.952,4605,3.457,4606,3.457,4607,3.457,4608,3.457,4609,6.819,4610,4.732,4611,3.457,4612,3.457,4613,3.457,4614,3.457,4615,3.457,4616,3.457]],["component/243",[220,0.615]],["title/244-1",[676,17.814]],["name/244-1",[]],["text/244-1",[]],["component/244-1",[]],["title/244-2",[317,18.84,318,16.799]],["name/244-2",[]],["text/244-2",[]],["component/244-2",[]],["title/244-3",[60,16.431]],["name/244-3",[]],["text/244-3",[]],["component/244-3",[]],["title/244-4",[183,20.814,219,23.177]],["name/244-4",[]],["text/244-4",[]],["component/244-4",[]],["title/244",[24,19.438,262,26.197]],["name/244",[4617,3.92]],["text/244",[2,2.457,5,1.6,8,1.053,11,2.257,20,4.452,22,1.299,24,3.439,40,1.657,45,2.457,46,2.413,47,2.593,57,2.004,60,1.396,77,1.873,92,3.262,99,3.181,106,2.297,115,3.237,128,3.367,130,4.14,139,1.751,183,1.474,219,1.641,228,1.936,262,3.818,299,3.796,310,2.856,318,1.189,323,1.688,324,1.679,328,1.694,347,2.445,416,2.708,417,2.085,542,2.264,549,2.393,626,2.763,676,0.995,705,2.673,753,2.721,798,2.417,806,3.432,812,5.013,864,3.057,969,2.552,1032,3.507,1103,4.122,1142,3.637,1189,4.853,1671,3.219,2782,3.637,4618,4.853,4619,5.206,4620,5.206,4621,4.853,4622,4.446,4623,4.853]],["component/244",[220,0.615]],["title/245-1",[676,17.814]],["name/245-1",[]],["text/245-1",[]],["component/245-1",[]],["title/245-2",[317,18.84,318,16.799]],["name/245-2",[]],["text/245-2",[]],["component/245-2",[]],["title/245-3",[60,16.431]],["name/245-3",[]],["text/245-3",[]],["component/245-3",[]],["title/245",[24,19.438,262,26.197]],["name/245",[4624,3.92]],["text/245",[2,2.446,8,1.594,22,2.383,24,3.743,27,2.212,40,1.647,45,2.963,46,2.689,49,1.725,60,0.912,61,3.371,64,2.073,71,1.844,77,3.437,92,2.869,115,2.114,118,3.526,139,1.74,183,2.232,191,2.024,262,4.488,274,2.498,316,3.06,318,1.182,323,1.678,324,1.669,328,1.683,347,2.949,356,3.569,362,3.081,378,2.704,386,1.912,392,1.815,396,2.74,549,2.379,586,5.438,612,2.98,620,2.813,626,2.033,662,3.226,676,0.989,687,3.344,721,3.036,864,3.039,1048,4.916,1087,3.15,1088,3.376,1103,4.106,1528,3.905,1628,3.774,1645,3.254,2380,4.068,2409,3.411,3778,4.281]],["component/245",[220,0.615]],["title/246-1",[676,17.814]],["name/246-1",[]],["text/246-1",[]],["component/246-1",[]],["title/246-2",[317,18.84,318,16.799]],["name/246-2",[]],["text/246-2",[]],["component/246-2",[]],["title/246-3",[60,16.431]],["name/246-3",[]],["text/246-3",[]],["component/246-3",[]],["title/246-4",[1681,54.75]],["name/246-4",[]],["text/246-4",[]],["component/246-4",[]],["title/246-5",[93,20.353,134,17.02,551,15.351,639,15.213,1681,26.426]],["name/246-5",[]],["text/246-5",[]],["component/246-5",[]],["title/246-6",[174,32.023,729,37.238,1681,35.647]],["name/246-6",[]],["text/246-6",[]],["component/246-6",[]],["title/246-7",[5,18.651,255,24.375,317,15.553]],["name/246-7",[]],["text/246-7",[]],["component/246-7",[]],["title/246-8",[183,14.631,729,31.707,1533,30.56,3790,42.76]],["name/246-8",[]],["text/246-8",[]],["component/246-8",[]],["title/246-9",[1334,41.017]],["name/246-9",[]],["text/246-9",[]],["component/246-9",[]],["title/246-10",[139,24.724,256,59.201]],["name/246-10",[]],["text/246-10",[]],["component/246-10",[]],["title/246",[639,24.858,1681,43.18]],["name/246",[4625,3.92]],["text/246",[2,0.919,3,1.507,5,2.369,6,0.846,7,1.041,8,0.599,16,0.604,20,1.375,22,2.421,23,3.08,24,1.078,27,0.695,34,1.066,38,1.21,40,0.518,42,0.528,45,0.505,46,1.027,48,0.81,60,0.522,61,1.439,62,0.943,64,1.187,71,0.58,78,0.753,80,0.557,83,0.925,84,1.353,85,3.209,86,3.037,92,3.349,93,1.34,95,1.323,96,0.655,100,1.717,110,0.665,116,0.899,126,1.548,131,2.933,134,1.901,139,1.963,142,1.459,144,0.716,160,1.357,163,1.154,169,0.699,174,0.858,183,2.028,189,1.539,191,0.636,195,0.949,196,0.862,199,2.198,200,1.881,202,1.494,207,1.206,213,0.899,218,1.622,219,1.286,222,1.973,254,1.548,255,2.018,256,4.701,262,0.58,264,0.931,275,0.862,281,1.006,299,0.78,304,2.128,308,0.801,310,1.812,315,0.835,317,0.417,318,0.372,319,0.904,323,0.527,324,0.525,328,0.529,347,0.915,364,0.769,365,0.705,386,0.601,391,0.81,396,0.565,481,0.894,482,0.72,499,0.729,521,2.259,522,1.548,540,1.249,542,1.774,545,0.602,549,1.362,551,1.992,555,0.707,557,0.884,568,0.76,626,0.764,629,1.252,633,0.925,638,0.647,639,3.774,645,0.821,661,0.824,662,1.847,664,1.444,676,0.311,678,0.88,687,1.051,697,0.884,698,2.161,701,1.953,703,1.476,705,1.97,721,1.935,729,1.817,730,2.192,734,2,749,0.904,779,3.406,800,1.675,812,1.684,837,0.871,844,1.032,897,1.096,956,1.594,982,0.925,1051,0.955,1071,0.727,1095,0.875,1118,2.429,1138,2.093,1151,0.871,1257,1.023,1262,1.122,1271,1.168,1298,1.74,1308,0.858,1334,2.569,1349,1.279,1391,0.899,1473,1.152,1486,0.899,1519,1.279,1520,1.279,1533,7.081,1635,1.973,1655,1.31,1665,3.558,1671,1.006,1677,2.142,1681,6.556,1857,1.072,1879,0.909,2350,2.206,2400,2.018,2476,1.444,2590,1.346,2897,2.747,2939,1.152,3174,2.761,3370,2.451,4083,1.228,4128,2.629,4129,1.206,4218,4.158,4250,1.389,4278,1.136,4354,1.389,4626,1.627,4627,1.627,4628,1.186,4629,1.627,4630,2.53,4631,2.761,4632,4.46,4633,1.516,4634,1.627,4635,1.627,4636,2.962,4637,1.627,4638,1.627,4639,1.627,4640,1.627,4641,1.627,4642,4.079,4643,2.761,4644,1.389,4645,1.516,4646,2.962]],["component/246",[220,0.615]],["title/247-1",[676,17.814]],["name/247-1",[]],["text/247-1",[]],["component/247-1",[]],["title/247-2",[317,18.84,318,16.799]],["name/247-2",[]],["text/247-2",[]],["component/247-2",[]],["title/247-3",[60,16.431]],["name/247-3",[]],["text/247-3",[]],["component/247-3",[]],["title/247-4",[222,48.981,2889,56.58]],["name/247-4",[]],["text/247-4",[]],["component/247-4",[]],["title/247-5",[708,39.524]],["name/247-5",[]],["text/247-5",[]],["component/247-5",[]],["title/247-6",[48,46.443]],["name/247-6",[]],["text/247-6",[]],["component/247-6",[]],["title/247-7",[425,39.17,3798,59.201]],["name/247-7",[]],["text/247-7",[]],["component/247-7",[]],["title/247-8",[131,29.151]],["name/247-8",[]],["text/247-8",[]],["component/247-8",[]],["title/247-9",[131,29.151]],["name/247-9",[]],["text/247-9",[]],["component/247-9",[]],["title/247-10",[131,29.151]],["name/247-10",[]],["text/247-10",[]],["component/247-10",[]],["title/247-11",[131,29.151]],["name/247-11",[]],["text/247-11",[]],["component/247-11",[]],["title/247-12",[131,29.151]],["name/247-12",[]],["text/247-12",[]],["component/247-12",[]],["title/247-13",[]],["name/247-13",[]],["text/247-13",[]],["component/247-13",[]],["title/247-14",[131,29.151]],["name/247-14",[]],["text/247-14",[]],["component/247-14",[]],["title/247-15",[131,29.151]],["name/247-15",[]],["text/247-15",[]],["component/247-15",[]],["title/247-16",[4278,65.124]],["name/247-16",[]],["text/247-16",[]],["component/247-16",[]],["title/247-17",[131,29.151]],["name/247-17",[]],["text/247-17",[]],["component/247-17",[]],["title/247-18",[131,29.151]],["name/247-18",[]],["text/247-18",[]],["component/247-18",[]],["title/247-19",[131,29.151]],["name/247-19",[]],["text/247-19",[]],["component/247-19",[]],["title/247-20",[131,29.151]],["name/247-20",[]],["text/247-20",[]],["component/247-20",[]],["title/247-21",[131,29.151]],["name/247-21",[]],["text/247-21",[]],["component/247-21",[]],["title/247-22",[131,29.151]],["name/247-22",[]],["text/247-22",[]],["component/247-22",[]],["title/247-23",[2556,77.133]],["name/247-23",[]],["text/247-23",[]],["component/247-23",[]],["title/247-24",[798,43.288]],["name/247-24",[]],["text/247-24",[]],["component/247-24",[]],["title/247-25",[4647,86.901]],["name/247-25",[]],["text/247-25",[]],["component/247-25",[]],["title/247-26",[911,66.962]],["name/247-26",[]],["text/247-26",[]],["component/247-26",[]],["title/247-27",[911,66.962]],["name/247-27",[]],["text/247-27",[]],["component/247-27",[]],["title/247-28",[4648,86.901]],["name/247-28",[]],["text/247-28",[]],["component/247-28",[]],["title/247-29",[4649,86.901]],["name/247-29",[]],["text/247-29",[]],["component/247-29",[]],["title/247-30",[4650,86.901]],["name/247-30",[]],["text/247-30",[]],["component/247-30",[]],["title/247-31",[3460,71.74]],["name/247-31",[]],["text/247-31",[]],["component/247-31",[]],["title/247-32",[868,62.106]],["name/247-32",[]],["text/247-32",[]],["component/247-32",[]],["title/247-33",[2338,70.362]],["name/247-33",[]],["text/247-33",[]],["component/247-33",[]],["title/247-34",[4651,86.901]],["name/247-34",[]],["text/247-34",[]],["component/247-34",[]],["title/247-35",[4652,86.901]],["name/247-35",[]],["text/247-35",[]],["component/247-35",[]],["title/247-36",[1259,54.031]],["name/247-36",[]],["text/247-36",[]],["component/247-36",[]],["title/247-37",[4653,86.901]],["name/247-37",[]],["text/247-37",[]],["component/247-37",[]],["title/247-38",[4654,86.901]],["name/247-38",[]],["text/247-38",[]],["component/247-38",[]],["title/247-39",[1285,47.224]],["name/247-39",[]],["text/247-39",[]],["component/247-39",[]],["title/247-40",[417,37.346]],["name/247-40",[]],["text/247-40",[]],["component/247-40",[]],["title/247-41",[4655,86.901]],["name/247-41",[]],["text/247-41",[]],["component/247-41",[]],["title/247-42",[4656,82.733]],["name/247-42",[]],["text/247-42",[]],["component/247-42",[]],["title/247-43",[4657,86.901]],["name/247-43",[]],["text/247-43",[]],["component/247-43",[]],["title/247-44",[4658,93.229]],["name/247-44",[]],["text/247-44",[]],["component/247-44",[]],["title/247-45",[4659,86.901]],["name/247-45",[]],["text/247-45",[]],["component/247-45",[]],["title/247-46",[2942,66.009]],["name/247-46",[]],["text/247-46",[]],["component/247-46",[]],["title/247-47",[4660,86.901]],["name/247-47",[]],["text/247-47",[]],["component/247-47",[]],["title/247-48",[4661,86.901]],["name/247-48",[]],["text/247-48",[]],["component/247-48",[]],["title/247-49",[4662,86.901]],["name/247-49",[]],["text/247-49",[]],["component/247-49",[]],["title/247-50",[3410,82.733]],["name/247-50",[]],["text/247-50",[]],["component/247-50",[]],["title/247-51",[386,34.447]],["name/247-51",[]],["text/247-51",[]],["component/247-51",[]],["title/247-52",[1659,52.097]],["name/247-52",[]],["text/247-52",[]],["component/247-52",[]],["title/247-53",[2657,59.142]],["name/247-53",[]],["text/247-53",[]],["component/247-53",[]],["title/247-54",[4663,93.229]],["name/247-54",[]],["text/247-54",[]],["component/247-54",[]],["title/247-55",[4664,93.229]],["name/247-55",[]],["text/247-55",[]],["component/247-55",[]],["title/247-56",[4665,93.229]],["name/247-56",[]],["text/247-56",[]],["component/247-56",[]],["title/247-57",[128,39.632]],["name/247-57",[]],["text/247-57",[]],["component/247-57",[]],["title/247-58",[4666,93.229]],["name/247-58",[]],["text/247-58",[]],["component/247-58",[]],["title/247-59",[4667,93.229]],["name/247-59",[]],["text/247-59",[]],["component/247-59",[]],["title/247-60",[4668,93.229]],["name/247-60",[]],["text/247-60",[]],["component/247-60",[]],["title/247-61",[4669,93.229]],["name/247-61",[]],["text/247-61",[]],["component/247-61",[]],["title/247-62",[4670,93.229]],["name/247-62",[]],["text/247-62",[]],["component/247-62",[]],["title/247-63",[4671,93.229]],["name/247-63",[]],["text/247-63",[]],["component/247-63",[]],["title/247-64",[4672,93.229]],["name/247-64",[]],["text/247-64",[]],["component/247-64",[]],["title/247-65",[4673,93.229]],["name/247-65",[]],["text/247-65",[]],["component/247-65",[]],["title/247-66",[4674,93.229]],["name/247-66",[]],["text/247-66",[]],["component/247-66",[]],["title/247-67",[4675,93.229]],["name/247-67",[]],["text/247-67",[]],["component/247-67",[]],["title/247-68",[4676,93.229]],["name/247-68",[]],["text/247-68",[]],["component/247-68",[]],["title/247-69",[4677,86.901]],["name/247-69",[]],["text/247-69",[]],["component/247-69",[]],["title/247-70",[551,31.805]],["name/247-70",[]],["text/247-70",[]],["component/247-70",[]],["title/247-71",[1147,62.106]],["name/247-71",[]],["text/247-71",[]],["component/247-71",[]],["title/247-72",[]],["name/247-72",[]],["text/247-72",[]],["component/247-72",[]],["title/247-73",[86,48.495]],["name/247-73",[]],["text/247-73",[]],["component/247-73",[]],["title/247-74",[]],["name/247-74",[]],["text/247-74",[]],["component/247-74",[]],["title/247-75",[4678,93.229]],["name/247-75",[]],["text/247-75",[]],["component/247-75",[]],["title/247-76",[4679,93.229]],["name/247-76",[]],["text/247-76",[]],["component/247-76",[]],["title/247-77",[]],["name/247-77",[]],["text/247-77",[]],["component/247-77",[]],["title/247-78",[]],["name/247-78",[]],["text/247-78",[]],["component/247-78",[]],["title/247-79",[85,45.709]],["name/247-79",[]],["text/247-79",[]],["component/247-79",[]],["title/247-80",[4680,86.901]],["name/247-80",[]],["text/247-80",[]],["component/247-80",[]],["title/247-81",[3300,79.619]],["name/247-81",[]],["text/247-81",[]],["component/247-81",[]],["title/247-82",[4681,93.229]],["name/247-82",[]],["text/247-82",[]],["component/247-82",[]],["title/247-83",[4682,93.229]],["name/247-83",[]],["text/247-83",[]],["component/247-83",[]],["title/247-84",[4683,93.229]],["name/247-84",[]],["text/247-84",[]],["component/247-84",[]],["title/247-85",[4684,93.229]],["name/247-85",[]],["text/247-85",[]],["component/247-85",[]],["title/247-86",[4685,93.229]],["name/247-86",[]],["text/247-86",[]],["component/247-86",[]],["title/247-87",[4686,93.229]],["name/247-87",[]],["text/247-87",[]],["component/247-87",[]],["title/247-88",[4687,93.229]],["name/247-88",[]],["text/247-88",[]],["component/247-88",[]],["title/247-89",[4688,93.229]],["name/247-89",[]],["text/247-89",[]],["component/247-89",[]],["title/247-90",[4689,82.733]],["name/247-90",[]],["text/247-90",[]],["component/247-90",[]],["title/247-91",[4117,86.901]],["name/247-91",[]],["text/247-91",[]],["component/247-91",[]],["title/247-92",[677,49.913]],["name/247-92",[]],["text/247-92",[]],["component/247-92",[]],["title/247-93",[1425,62.794]],["name/247-93",[]],["text/247-93",[]],["component/247-93",[]],["title/247-94",[4690,82.733]],["name/247-94",[]],["text/247-94",[]],["component/247-94",[]],["title/247-95",[4691,93.229]],["name/247-95",[]],["text/247-95",[]],["component/247-95",[]],["title/247-96",[3852,82.733]],["name/247-96",[]],["text/247-96",[]],["component/247-96",[]],["title/247-97",[313,52.709]],["name/247-97",[]],["text/247-97",[]],["component/247-97",[]],["title/247-98",[4692,93.229]],["name/247-98",[]],["text/247-98",[]],["component/247-98",[]],["title/247-99",[3575,77.133]],["name/247-99",[]],["text/247-99",[]],["component/247-99",[]],["title/247-100",[4693,93.229]],["name/247-100",[]],["text/247-100",[]],["component/247-100",[]],["title/247-101",[287,58.626]],["name/247-101",[]],["text/247-101",[]],["component/247-101",[]],["title/247-102",[4093,86.901]],["name/247-102",[]],["text/247-102",[]],["component/247-102",[]],["title/247-103",[4694,93.229]],["name/247-103",[]],["text/247-103",[]],["component/247-103",[]],["title/247-104",[4405,86.901]],["name/247-104",[]],["text/247-104",[]],["component/247-104",[]],["title/247-105",[4603,86.901]],["name/247-105",[]],["text/247-105",[]],["component/247-105",[]],["title/247-106",[4695,93.229]],["name/247-106",[]],["text/247-106",[]],["component/247-106",[]],["title/247-107",[4094,70.362]],["name/247-107",[]],["text/247-107",[]],["component/247-107",[]],["title/247-108",[4094,70.362]],["name/247-108",[]],["text/247-108",[]],["component/247-108",[]],["title/247-109",[4696,86.901]],["name/247-109",[]],["text/247-109",[]],["component/247-109",[]],["title/247-110",[57,35.892]],["name/247-110",[]],["text/247-110",[]],["component/247-110",[]],["title/247-111",[4697,86.901]],["name/247-111",[]],["text/247-111",[]],["component/247-111",[]],["title/247-112",[815,60.834]],["name/247-112",[]],["text/247-112",[]],["component/247-112",[]],["title/247-113",[784,69.122]],["name/247-113",[]],["text/247-113",[]],["component/247-113",[]],["title/247-114",[4238,82.733]],["name/247-114",[]],["text/247-114",[]],["component/247-114",[]],["title/247-115",[779,54.385]],["name/247-115",[]],["text/247-115",[]],["component/247-115",[]],["title/247-116",[4698,93.229]],["name/247-116",[]],["text/247-116",[]],["component/247-116",[]],["title/247-117",[4699,93.229]],["name/247-117",[]],["text/247-117",[]],["component/247-117",[]],["title/247-118",[4103,82.733]],["name/247-118",[]],["text/247-118",[]],["component/247-118",[]],["title/247-119",[4700,86.901]],["name/247-119",[]],["text/247-119",[]],["component/247-119",[]],["title/247-120",[4701,86.901]],["name/247-120",[]],["text/247-120",[]],["component/247-120",[]],["title/247-121",[276,69.122]],["name/247-121",[]],["text/247-121",[]],["component/247-121",[]],["title/247-122",[4702,86.901]],["name/247-122",[]],["text/247-122",[]],["component/247-122",[]],["title/247-123",[4703,86.901]],["name/247-123",[]],["text/247-123",[]],["component/247-123",[]],["title/247-124",[4704,86.901]],["name/247-124",[]],["text/247-124",[]],["component/247-124",[]],["title/247-125",[4705,86.901]],["name/247-125",[]],["text/247-125",[]],["component/247-125",[]],["title/247-126",[1615,71.74]],["name/247-126",[]],["text/247-126",[]],["component/247-126",[]],["title/247-127",[4706,93.229]],["name/247-127",[]],["text/247-127",[]],["component/247-127",[]],["title/247-128",[4707,93.229]],["name/247-128",[]],["text/247-128",[]],["component/247-128",[]],["title/247-129",[4227,71.74]],["name/247-129",[]],["text/247-129",[]],["component/247-129",[]],["title/247-130",[4708,86.901]],["name/247-130",[]],["text/247-130",[]],["component/247-130",[]],["title/247-131",[4709,93.229]],["name/247-131",[]],["text/247-131",[]],["component/247-131",[]],["title/247-132",[4087,82.733]],["name/247-132",[]],["text/247-132",[]],["component/247-132",[]],["title/247-133",[4710,75.064]],["name/247-133",[]],["text/247-133",[]],["component/247-133",[]],["title/247-134",[4711,93.229]],["name/247-134",[]],["text/247-134",[]],["component/247-134",[]],["title/247-135",[512,55.125]],["name/247-135",[]],["text/247-135",[]],["component/247-135",[]],["title/247-136",[4712,93.229]],["name/247-136",[]],["text/247-136",[]],["component/247-136",[]],["title/247-137",[4713,93.229]],["name/247-137",[]],["text/247-137",[]],["component/247-137",[]],["title/247-138",[4714,93.229]],["name/247-138",[]],["text/247-138",[]],["component/247-138",[]],["title/247-139",[4715,93.229]],["name/247-139",[]],["text/247-139",[]],["component/247-139",[]],["title/247-140",[4716,86.901]],["name/247-140",[]],["text/247-140",[]],["component/247-140",[]],["title/247-141",[4717,93.229]],["name/247-141",[]],["text/247-141",[]],["component/247-141",[]],["title/247-142",[4718,86.901]],["name/247-142",[]],["text/247-142",[]],["component/247-142",[]],["title/247-143",[4719,75.064]],["name/247-143",[]],["text/247-143",[]],["component/247-143",[]],["title/247-144",[20,43.288]],["name/247-144",[]],["text/247-144",[]],["component/247-144",[]],["title/247-145",[131,29.151]],["name/247-145",[]],["text/247-145",[]],["component/247-145",[]],["title/247-146",[4129,69.122]],["name/247-146",[]],["text/247-146",[]],["component/247-146",[]],["title/247-147",[102,59.681]],["name/247-147",[]],["text/247-147",[]],["component/247-147",[]],["title/247-148",[88,43.735]],["name/247-148",[]],["text/247-148",[]],["component/247-148",[]],["title/247-149",[4229,71.74]],["name/247-149",[]],["text/247-149",[]],["component/247-149",[]],["title/247-150",[4720,86.901]],["name/247-150",[]],["text/247-150",[]],["component/247-150",[]],["title/247-151",[587,66.962]],["name/247-151",[]],["text/247-151",[]],["component/247-151",[]],["title/247-152",[391,46.443]],["name/247-152",[]],["text/247-152",[]],["component/247-152",[]],["title/247-153",[287,58.626]],["name/247-153",[]],["text/247-153",[]],["component/247-153",[]],["title/247-154",[393,54.385]],["name/247-154",[]],["text/247-154",[]],["component/247-154",[]],["title/247-155",[4721,86.901]],["name/247-155",[]],["text/247-155",[]],["component/247-155",[]],["title/247-156",[2719,65.124]],["name/247-156",[]],["text/247-156",[]],["component/247-156",[]],["title/247-157",[4722,82.733]],["name/247-157",[]],["text/247-157",[]],["component/247-157",[]],["title/247-158",[4722,82.733]],["name/247-158",[]],["text/247-158",[]],["component/247-158",[]],["title/247-159",[335,79.619]],["name/247-159",[]],["text/247-159",[]],["component/247-159",[]],["title/247-160",[560,47.843]],["name/247-160",[]],["text/247-160",[]],["component/247-160",[]],["title/247-161",[4723,86.901]],["name/247-161",[]],["text/247-161",[]],["component/247-161",[]],["title/247-162",[645,47.024]],["name/247-162",[]],["text/247-162",[]],["component/247-162",[]],["title/247-163",[4724,86.901]],["name/247-163",[]],["text/247-163",[]],["component/247-163",[]],["title/247-164",[51,48.95]],["name/247-164",[]],["text/247-164",[]],["component/247-164",[]],["title/247-165",[4725,93.229]],["name/247-165",[]],["text/247-165",[]],["component/247-165",[]],["title/247-166",[4161,66.962]],["name/247-166",[]],["text/247-166",[]],["component/247-166",[]],["title/247-167",[2201,70.362]],["name/247-167",[]],["text/247-167",[]],["component/247-167",[]],["title/247-168",[20,43.288]],["name/247-168",[]],["text/247-168",[]],["component/247-168",[]],["title/247-169",[176,58.13]],["name/247-169",[]],["text/247-169",[]],["component/247-169",[]],["title/247-170",[4726,86.901]],["name/247-170",[]],["text/247-170",[]],["component/247-170",[]],["title/247-171",[1104,69.122]],["name/247-171",[]],["text/247-171",[]],["component/247-171",[]],["title/247-172",[1291,65.124]],["name/247-172",[]],["text/247-172",[]],["component/247-172",[]],["title/247-173",[4727,82.733]],["name/247-173",[]],["text/247-173",[]],["component/247-173",[]],["title/247",[2889,71.74]],["name/247",[2889,3.016]],["text/247",[2,0.689,8,0.08,16,0.376,20,4.254,22,1.554,24,0.104,25,0.222,27,0.114,29,0.264,30,0.183,31,0.096,32,0.955,34,1.075,37,0.126,38,0.301,40,0.246,41,0.444,42,0.043,46,0.132,48,1.79,49,0.257,51,0.715,52,0.278,54,0.076,60,0.199,61,0.44,62,0.54,64,0.106,65,0.416,70,0.086,71,0.275,72,0.79,74,0.122,78,0.123,79,0.17,80,0.046,81,0.356,82,0.454,84,5.291,85,2.317,86,0.825,88,0.846,89,0.287,92,0.335,93,1.094,95,0.06,96,0.159,100,0.229,102,0.253,106,0.499,108,0.082,110,0.51,111,0.226,115,0.161,119,0.166,123,0.255,128,1.07,129,0.069,131,3.007,133,0.248,134,0.198,138,0.212,139,2.58,143,3.595,148,0.077,163,0.154,165,0.144,169,0.332,173,0.474,174,3.314,176,0.166,181,0.481,182,0.082,183,0.896,189,0.1,194,0.155,195,0.66,196,0.071,198,0.507,199,0.789,200,3.429,202,0.134,203,0.383,204,2.369,206,0.158,209,1.107,212,0.537,213,1.6,216,0.047,217,0.152,218,0.307,222,0.432,226,0.464,234,0.156,239,0.131,241,0.063,245,0.22,246,0.145,247,0.127,248,0.052,251,0.336,254,0.07,258,0.088,262,2.828,263,0.2,274,0.065,275,0.071,276,0.839,278,0.191,279,0.087,285,0.207,286,0.221,287,0.167,288,0.096,291,0.173,299,0.189,300,0.513,308,0.257,310,0.188,313,0.573,317,0.166,318,0.031,319,0.074,320,0.936,323,0.043,324,0.043,328,0.044,338,0.148,341,0.072,342,0.341,344,0.128,345,0.087,347,0.557,348,0.373,350,0.099,352,0.356,354,0.314,356,0.183,357,0.108,361,0.308,364,0.187,365,0.591,366,0.146,369,0.181,371,0.981,375,0.144,377,0.091,379,0.308,383,0.143,385,0.522,386,0.146,389,1.646,390,0.477,391,0.323,392,0.183,393,0.989,394,0.499,395,0.082,396,0.137,397,0.089,398,0.911,399,0.069,401,0.583,403,0.095,409,0.087,414,0.076,417,1.268,423,0.386,425,0.345,432,0.296,436,1.282,437,0.081,440,0.175,443,0.108,447,0.31,453,1.583,454,0.269,459,1.01,460,0.624,461,0.204,465,0.091,468,0.091,470,0.108,472,0.095,477,0.288,479,0.816,481,0.074,484,0.227,486,0.536,494,0.144,499,0.454,510,0.194,512,0.157,513,0.339,515,0.061,521,0.178,523,0.251,528,0.239,530,0.092,539,0.094,540,0.22,542,0.058,545,0.146,547,0.061,549,0.062,551,2.695,554,0.074,555,0.389,557,0.352,560,0.814,561,0.373,565,0.216,568,1.438,571,0.356,587,0.466,589,0.073,596,0.082,607,0.177,612,0.153,615,0.094,620,0.073,622,0.497,623,0.077,625,0.157,626,0.135,633,0.369,634,0.131,638,0.496,639,0.177,645,0.571,651,0.043,655,0.981,660,0.131,661,0.2,663,0.086,667,0.432,676,1.517,677,0.142,678,0.144,689,0.501,690,0.263,695,0.09,697,0.073,699,0.086,702,1.058,703,0.067,705,0.261,706,0.089,708,0.765,711,0.114,716,0.754,720,0.068,721,0.25,724,0.158,727,1.201,728,0.186,730,0.924,733,1.887,734,2.867,736,1.018,737,0.125,739,0.49,740,0.099,741,1.142,744,0.632,745,0.2,749,0.148,750,0.111,752,0.222,753,0.139,761,0.086,766,0.087,779,0.86,782,0.373,784,0.388,786,1.416,792,0.388,798,3.08,800,3.209,812,2.343,815,0.258,825,0.276,829,0.251,830,0.234,834,0.607,836,0.562,837,2.011,844,0.936,849,0.168,851,0.108,853,0.194,859,0.173,864,0.156,868,1.342,878,0.089,884,0.086,887,0.075,910,0.212,911,3.634,916,0.881,928,0.983,931,0.073,955,0.084,956,0.281,958,0.09,960,0.064,963,0.432,964,0.392,965,0.117,967,0.509,969,0.194,982,0.369,986,0.446,1017,0.481,1018,0.16,1020,1.046,1032,0.09,1034,0.351,1051,0.381,1085,0.068,1088,0.173,1089,0.248,1092,0.101,1095,1.406,1098,0.183,1104,1.01,1106,0.284,1121,0.151,1138,3.773,1141,0.659,1147,1.546,1154,0.356,1174,0.088,1177,0.864,1190,0.351,1191,0.522,1197,1.751,1198,0.2,1210,0.227,1214,0.125,1215,0.125,1217,0.214,1231,0.14,1243,0.114,1257,0.167,1259,0.303,1271,0.096,1272,0.427,1279,0.111,1285,0.968,1291,0.365,1293,0.22,1295,0.094,1296,0.103,1298,0.079,1304,0.105,1305,0.082,1306,0.453,1308,0.071,1313,0.092,1315,0.095,1334,0.34,1340,0.163,1350,0.103,1352,0.098,1387,0.365,1391,0.625,1414,0.246,1427,0.345,1449,0.432,1450,0.836,1458,0.095,1482,0.086,1496,0.659,1511,0.125,1521,0.183,1525,0.381,1533,0.079,1542,0.089,1584,0.234,1596,0.288,1599,1.95,1615,3.132,1631,0.311,1633,1.713,1635,0.754,1643,0.162,1644,1.094,1651,0.103,1654,0.337,1656,0.624,1659,0.362,1660,0.099,1671,0.164,1679,0.087,1680,0.194,1684,0.204,1686,0.108,1698,0.119,1705,0.111,1718,0.376,1746,0.089,1758,0.375,1761,0.111,1838,0.188,1842,0.214,1851,0.191,1855,0.136,1856,0.099,1857,5.232,1878,0.088,1879,0.148,1938,0.572,1969,0.114,2192,0.098,2199,0.103,2201,3.868,2235,0.248,2244,0.099,2246,0.111,2247,0.108,2248,2.026,2268,0.098,2272,0.327,2277,0.209,2304,0.125,2323,0.718,2327,0.108,2331,0.125,2332,0.108,2338,2.711,2339,0.186,2341,0.314,2346,0.288,2348,0.231,2366,0.181,2373,0.248,2379,0.086,2381,0.464,2383,0.554,2385,0.076,2387,0.125,2393,0.111,2400,1.081,2408,0.532,2437,0.181,2475,0.103,2490,0.936,2556,0.639,2568,0.487,2589,0.111,2590,0.22,2620,0.119,2631,0.204,2641,2.324,2642,0.367,2657,0.864,2660,0.125,2667,0.088,2677,0.866,2711,0.575,2713,0.754,2719,0.539,2723,0.248,2724,0.368,2734,0.098,2782,4.987,2827,0.739,2828,0.091,2843,0.341,2850,0.411,2872,0.087,2883,0.22,2889,2.436,2920,0.125,2926,0.487,2927,0.351,2928,0.091,2933,0.111,2939,0.965,2942,2.716,3010,0.248,3083,0.248,3114,0.2,3213,0.276,3259,0.119,3300,0.227,3316,0.125,3360,0.816,3385,0.236,3410,0.351,3447,0.204,3448,0.446,3452,2.203,3455,0.214,3460,1.221,3465,0.22,3522,6.81,3523,0.236,3530,0.248,3544,0.351,3601,0.186,3627,0.125,3707,0.125,3711,0.351,3779,0.114,3798,2.331,3839,0.119,3852,0.685,3855,0.227,3929,0.114,3931,0.327,3962,0.402,3964,0.114,3980,1.055,3996,0.119,4083,0.101,4084,0.114,4085,0.119,4086,0.575,4087,0.236,4088,0.125,4094,1.113,4095,1.287,4096,0.368,4103,1.107,4120,0.125,4121,2.066,4122,0.604,4123,0.604,4126,0.105,4129,0.197,4144,0.368,4151,1.502,4152,0.739,4161,0.284,4185,0.423,4186,0.236,4218,0.327,4227,0.688,4229,0.871,4238,0.119,4252,0.236,4261,0.432,4278,0.365,4279,0.236,4291,0.101,4309,0.248,4340,0.421,4369,0.227,4371,0.114,4383,0.125,4385,0.119,4394,0.72,4395,0.248,4486,0.125,4564,0.793,4622,0.866,4623,0.125,4628,0.194,4630,0.227,4632,0.236,4647,0.248,4648,0.125,4649,0.125,4650,0.125,4651,0.125,4652,0.125,4653,0.248,4654,0.125,4655,0.368,4656,0.793,4657,0.248,4659,0.368,4660,0.248,4661,0.368,4662,0.248,4677,0.125,4680,0.125,4696,0.125,4697,0.125,4700,0.368,4701,0.487,4702,0.125,4703,0.604,4704,0.368,4705,0.125,4708,0.248,4710,0.911,4716,0.125,4718,0.125,4719,0.214,4720,0.125,4721,0.487,4722,0.464,4723,0.125,4724,0.248,4726,0.125,4727,0.119,4728,0.134,4729,0.134,4730,0.134,4731,0.327,4732,0.327,4733,0.327,4734,0.134,4735,0.134,4736,0.351,4737,0.266,4738,0.134,4739,0.134,4740,0.266,4741,5.597,4742,0.395,4743,0.134,4744,0.134,4745,0.134,4746,0.134,4747,0.134,4748,0.134,4749,1.479,4750,0.134,4751,0.266,4752,0.395,4753,0.395,4754,0.772,4755,0.134,4756,0.134,4757,0.134,4758,0.134,4759,0.134,4760,0.395,4761,0.134,4762,0.134,4763,0.134,4764,0.134,4765,0.894,4766,0.134,4767,0.134,4768,0.134,4769,0.119,4770,0.134,4771,1.362,4772,0.134,4773,0.96,4774,0.134,4775,0.134,4776,0.134,4777,0.134,4778,0.134,4779,0.134,4780,0.134,4781,0.248,4782,0.266,4783,0.395,4784,0.395,4785,0.134,4786,0.134,4787,0.772,4788,0.966,4789,0.266,4790,0.266,4791,0.134,4792,0.134,4793,0.266,4794,0.134,4795,0.134,4796,0.134,4797,0.266,4798,0.894,4799,0.134,4800,0.134,4801,0.266,4802,0.134,4803,0.134,4804,0.125,4805,0.134,4806,0.134,4807,0.134,4808,0.134,4809,0.134,4810,0.134,4811,0.266,4812,0.134,4813,0.134,4814,0.134,4815,0.134,4816,0.266,4817,0.134,4818,0.125,4819,0.266,4820,0.134,4821,0.134,4822,0.134,4823,0.368,4824,0.134,4825,0.266,4826,0.134,4827,0.134,4828,0.134,4829,0.523,4830,0.772,4831,0.772,4832,0.134,4833,0.134,4834,0.134,4835,0.134,4836,0.134,4837,0.134,4838,0.134,4839,0.134,4840,0.134,4841,0.134,4842,0.134,4843,0.134,4844,0.134,4845,0.134,4846,0.134,4847,0.266,4848,0.72,4849,0.134,4850,0.134,4851,0.266,4852,0.134,4853,0.395,4854,0.894,4855,0.134,4856,0.134,4857,0.134,4858,0.134,4859,0.134,4860,0.134,4861,0.134,4862,0.134,4863,0.134,4864,0.134,4865,0.134,4866,0.134,4867,0.134,4868,0.134,4869,0.134,4870,0.134,4871,0.134,4872,0.134,4873,0.134,4874,0.134,4875,0.266,4876,0.134,4877,0.134,4878,0.134,4879,0.134,4880,0.134,4881,0.134,4882,0.134,4883,0.134,4884,0.395,4885,0.134,4886,0.134,4887,0.134,4888,0.134,4889,0.134,4890,0.134,4891,0.134,4892,0.134,4893,0.134,4894,0.134,4895,0.134,4896,0.134,4897,0.134,4898,0.266,4899,0.134,4900,0.134,4901,0.134,4902,0.134,4903,0.134,4904,0.266,4905,0.134,4906,0.134,4907,0.134,4908,0.134,4909,0.134,4910,0.134,4911,0.134,4912,0.134,4913,0.266,4914,0.248,4915,0.266,4916,0.134,4917,0.134,4918,0.134,4919,0.134,4920,0.134,4921,0.134,4922,0.659,4923,0.134,4924,0.134,4925,0.134,4926,0.134,4927,0.134,4928,0.134,4929,0.134,4930,0.134,4931,0.134,4932,0.134,4933,0.134,4934,0.134,4935,0.523,4936,0.134,4937,0.266,4938,0.134,4939,0.134,4940,0.134,4941,0.266,4942,0.134,4943,0.134,4944,0.134,4945,0.134,4946,0.134,4947,0.134,4948,0.266,4949,0.134,4950,0.134,4951,0.134,4952,0.134,4953,0.134,4954,0.134,4955,0.134,4956,0.134,4957,0.134,4958,0.523,4959,0.134,4960,0.134,4961,0.134,4962,0.134,4963,0.134,4964,0.134,4965,0.266,4966,0.134,4967,0.134,4968,0.134,4969,0.134,4970,0.134,4971,0.523,4972,0.266,4973,0.134,4974,0.648,4975,0.134,4976,0.134,4977,0.134,4978,1.013,4979,0.134,4980,0.134,4981,0.134,4982,0.134,4983,0.421,4984,0.134,4985,0.134,4986,0.134,4987,0.134,4988,0.134,4989,0.134,4990,0.134,4991,0.134,4992,0.134,4993,0.266,4994,0.134,4995,0.134,4996,0.134,4997,0.134,4998,0.134,4999,0.134,5000,0.134,5001,0.266,5002,0.134,5003,0.134,5004,0.134,5005,0.134,5006,0.134,5007,0.266,5008,0.134,5009,0.134,5010,0.134,5011,0.134,5012,0.134,5013,0.248,5014,0.134,5015,0.134,5016,0.134,5017,0.134,5018,0.134,5019,0.395,5020,0.134,5021,0.134,5022,0.134,5023,0.134,5024,0.395,5025,0.134,5026,0.134,5027,0.134,5028,0.134,5029,0.134,5030,0.134,5031,0.134,5032,0.266,5033,0.368,5034,0.134,5035,0.266,5036,0.134,5037,0.134,5038,0.134,5039,0.134,5040,0.134,5041,0.134,5042,0.134,5043,0.134,5044,0.134,5045,0.134,5046,0.134,5047,0.266,5048,0.134,5049,0.134,5050,0.134,5051,0.134,5052,0.134,5053,0.134,5054,0.134,5055,0.523,5056,0.266,5057,0.134,5058,0.134,5059,0.134,5060,0.266,5061,0.134,5062,0.134,5063,0.134,5064,0.134,5065,0.134,5066,0.266,5067,0.134,5068,0.134,5069,0.134,5070,0.134,5071,0.134,5072,0.134,5073,0.134,5074,0.134,5075,0.134,5076,0.395,5077,0.266,5078,0.134,5079,0.134,5080,0.648,5081,0.134,5082,0.134,5083,0.134,5084,0.134,5085,0.134,5086,0.134,5087,0.134,5088,0.134,5089,0.134,5090,0.134,5091,0.134,5092,0.134,5093,0.134,5094,0.134,5095,0.134,5096,0.125,5097,0.772,5098,0.523,5099,0.464,5100,0.134,5101,0.134,5102,0.134,5103,0.134,5104,0.134,5105,0.134,5106,0.134,5107,0.134,5108,0.523,5109,0.134,5110,0.487,5111,0.134,5112,0.134,5113,0.266,5114,0.395,5115,1.013,5116,0.134,5117,0.134,5118,0.266,5119,0.134,5120,0.134,5121,0.134,5122,0.134,5123,0.134,5124,0.134,5125,0.134,5126,0.134,5127,0.266,5128,0.134,5129,0.134,5130,0.134,5131,0.134,5132,0.134,5133,0.134,5134,0.134,5135,0.134,5136,0.134,5137,0.266,5138,0.134,5139,0.134,5140,0.134,5141,0.134,5142,0.134,5143,0.134,5144,0.351,5145,0.134,5146,0.134,5147,0.134,5148,0.134,5149,0.421,5150,0.134,5151,0.248,5152,0.134,5153,0.134,5154,0.134,5155,0.266,5156,0.134,5157,0.134,5158,0.134,5159,0.134,5160,0.134,5161,0.134,5162,0.266,5163,0.266,5164,0.134,5165,0.134,5166,0.134,5167,0.648,5168,0.134,5169,0.134,5170,0.134,5171,0.134,5172,0.266,5173,0.266,5174,0.134,5175,0.134,5176,0.134,5177,0.134,5178,0.134,5179,0.134,5180,0.134,5181,0.134,5182,0.134,5183,0.134,5184,0.134,5185,0.134,5186,0.134,5187,0.395,5188,0.134,5189,0.134,5190,0.266,5191,0.266,5192,0.134,5193,0.266,5194,0.134,5195,0.134,5196,0.134,5197,0.134,5198,0.134,5199,0.134,5200,0.134,5201,0.134,5202,0.395,5203,0.395,5204,0.134,5205,0.134,5206,0.134,5207,0.134,5208,0.72,5209,0.134,5210,0.134,5211,0.134,5212,0.395,5213,0.134,5214,0.266,5215,0.134,5216,0.134,5217,0.266,5218,0.395,5219,0.134,5220,0.134,5221,0.134,5222,0.266,5223,0.134,5224,0.134,5225,0.134,5226,0.134,5227,0.134,5228,0.134,5229,0.134,5230,0.266,5231,0.248,5232,0.266,5233,0.523,5234,0.266,5235,0.266,5236,0.266,5237,0.266,5238,0.266,5239,0.266,5240,0.395,5241,0.266,5242,0.266,5243,0.134,5244,0.134,5245,0.134,5246,0.134,5247,0.134,5248,0.134,5249,0.266,5250,0.134,5251,0.134,5252,0.134,5253,0.134,5254,0.134,5255,0.134,5256,0.134,5257,0.134,5258,0.134,5259,0.134,5260,0.134,5261,0.134,5262,0.134,5263,0.134,5264,0.134,5265,0.395,5266,0.134,5267,0.134,5268,0.134,5269,0.134,5270,0.134,5271,0.134,5272,0.134,5273,0.266,5274,0.648,5275,0.134,5276,0.134,5277,0.134,5278,0.134,5279,0.266,5280,0.134,5281,0.266,5282,0.134,5283,0.523,5284,0.395,5285,0.134,5286,0.134,5287,0.368,5288,0.266,5289,0.134,5290,0.134,5291,0.134,5292,0.134,5293,0.134,5294,0.134,5295,0.134,5296,0.134,5297,0.134,5298,0.125,5299,0.266,5300,0.134,5301,0.134,5302,0.134,5303,0.395,5304,0.134,5305,0.134,5306,0.134,5307,0.134,5308,0.134,5309,0.248,5310,0.134,5311,0.134,5312,0.134,5313,0.134,5314,0.134,5315,0.134,5316,0.134,5317,0.134]],["component/247",[220,0.615]],["title/248-1",[676,17.814]],["name/248-1",[]],["text/248-1",[]],["component/248-1",[]],["title/248-2",[317,18.84,318,16.799]],["name/248-2",[]],["text/248-2",[]],["component/248-2",[]],["title/248-3",[60,16.431]],["name/248-3",[]],["text/248-3",[]],["component/248-3",[]],["title/248-4",[216,25.746,651,23.799]],["name/248-4",[]],["text/248-4",[]],["component/248-4",[]],["title/248-5",[183,20.814,651,23.799]],["name/248-5",[]],["text/248-5",[]],["component/248-5",[]],["title/248",[1391,40.627,2358,60.833]],["name/248",[5318,3.92]],["text/248",[8,0.357,16,0.655,22,2.017,29,2.201,32,2.411,34,1.57,38,0.523,46,0.444,47,0.879,49,1.063,60,1.09,61,1.54,62,1.015,64,1.278,65,0.822,74,0.808,76,1.941,84,4.451,88,0.828,92,2.303,93,2.419,113,3.061,119,1.1,123,1.14,124,0.894,138,2.169,139,0.593,143,1.084,148,1.01,163,0.687,172,0.71,174,0.931,179,1.058,180,2.069,183,2.55,189,1.647,191,2.42,199,0.772,202,1.609,212,4.286,234,1.036,240,2.568,241,1.507,246,1.602,251,1.651,262,1.555,272,1.036,286,4.518,310,0.636,318,0.403,319,1.772,323,0.572,324,0.569,328,0.574,347,0.545,352,1.202,361,0.84,364,3.263,365,1.383,385,0.91,391,0.879,392,0.619,415,2.258,454,2.173,480,5.445,499,0.791,518,1.004,522,0.922,545,0.653,551,3.98,560,1.637,626,2.514,634,0.872,651,0.571,656,1.287,676,0.609,678,0.954,720,0.898,727,1.11,736,4.307,753,0.922,812,4.024,836,2.744,844,1.119,897,1.188,916,0.772,955,1.11,965,1.403,1059,1.074,1071,1.424,1095,0.949,1106,1.267,1187,0.783,1283,2.199,1301,1.14,1304,1.387,1306,1.233,1307,1.387,1308,0.931,1387,1.233,1391,5.562,1425,1.188,1482,2.793,1585,2.173,1628,1.287,1642,2.724,1645,1.11,1674,1.267,1686,1.421,1758,1.267,1849,4.166,1971,1.091,2248,4.421,2255,1.507,2341,1.913,2351,1.507,2358,1.46,2367,2.258,2675,1.645,2817,1.645,2916,3.872,2991,7.628,2992,1.645,3360,1.421,3452,1.387,4131,5.766,4132,1.566,4134,7.023,4151,5.43,4152,1.46,4169,4.985,4174,6.438,4176,3.726,4278,2.228,4283,2.973,4496,1.645,4710,1.421,4749,1.645,5319,3.189,5320,3.189,5321,3.189,5322,3.189,5323,6.907,5324,1.645,5325,1.765,5326,1.765,5327,1.765,5328,6.186,5329,5.766,5330,1.765,5331,1.765,5332,1.645,5333,1.765,5334,1.765,5335,1.765,5336,1.765,5337,3.189,5338,3.189,5339,1.765,5340,1.765,5341,1.765,5342,1.765]],["component/248",[220,0.615]],["title/249-1",[676,17.814]],["name/249-1",[]],["text/249-1",[]],["component/249-1",[]],["title/249-2",[317,18.84,318,16.799]],["name/249-2",[]],["text/249-2",[]],["component/249-2",[]],["title/249-3",[60,16.431]],["name/249-3",[]],["text/249-3",[]],["component/249-3",[]],["title/249",[216,21.255,551,20.708,1656,42.401]],["name/249",[5343,3.92]],["text/249",[2,3.465,8,1.143,16,2.098,22,1.411,32,2.549,38,1.677,60,0.996,88,3.954,92,2.707,93,2.557,131,3.151,143,3.797,179,3.391,200,2.608,216,4.184,228,3.134,286,4.71,318,1.292,323,1.833,324,1.824,328,1.839,396,1.965,470,4.552,471,5.743,551,2.876,626,2.174,676,1.08,734,2.772,744,3.159,800,6.316,812,4.612,1073,3.159,1082,4.738,1490,4.405,1629,4.829,1656,9.964,1766,7.857,3348,6.787,5344,7.857,5345,5.654,5346,5.654,5347,5.654]],["component/249",[220,0.615]],["title/250-1",[676,17.814]],["name/250-1",[]],["text/250-1",[]],["component/250-1",[]],["title/250-2",[317,18.84,318,16.799]],["name/250-2",[]],["text/250-2",[]],["component/250-2",[]],["title/250-3",[60,16.431]],["name/250-3",[]],["text/250-3",[]],["component/250-3",[]],["title/250-4",[24,19.438,651,23.799]],["name/250-4",[]],["text/250-4",[]],["component/250-4",[]],["title/250-5",[515,33.47,651,23.799]],["name/250-5",[]],["text/250-5",[]],["component/250-5",[]],["title/250-6",[183,20.814,651,23.799]],["name/250-6",[]],["text/250-6",[]],["component/250-6",[]],["title/250-7",[5,18.651,255,24.375,317,15.553]],["name/250-7",[]],["text/250-7",[]],["component/250-7",[]],["title/250",[23,38.79,38,21.809]],["name/250",[5348,3.92]],["text/250",[2,2.898,3,0.518,5,1.105,8,0.523,20,0.651,22,2.466,23,6.238,24,3.056,25,0.596,32,0.632,33,1.421,34,0.505,38,2.854,45,0.802,46,0.906,47,0.699,49,0.862,51,0.736,54,2.034,60,0.923,61,1.578,62,2.242,63,1.226,65,1.205,71,0.921,74,0.643,77,0.505,84,0.64,89,1.977,92,2.34,93,0.634,95,2.339,96,0.565,99,3.195,108,0.86,110,0.573,115,0.573,124,1.31,128,1.099,129,0.726,131,3.09,133,1.226,138,1.459,139,0.869,143,1.223,144,0.617,156,0.645,168,1.555,169,2.541,171,0.677,173,3.626,176,1.612,177,0.743,180,0.665,183,2.559,188,0.847,191,2.312,197,0.924,198,0.628,199,0.613,200,0.647,202,0.707,204,0.693,208,0.723,212,1.371,213,0.775,218,0.558,219,2.22,228,0.521,236,0.701,239,0.69,246,1.321,255,1.038,262,1.866,274,0.677,275,1.907,291,2.593,310,1.888,317,0.359,318,0.32,323,0.455,324,0.452,328,0.456,330,1.102,344,1.731,347,0.433,361,0.667,362,1.54,369,1.185,391,0.699,392,0.907,396,1.554,399,1.333,408,1.299,435,0.915,447,1.235,479,0.675,482,1.144,491,1.562,501,1.321,515,1.177,521,0.63,527,0.626,528,2.174,540,0.591,542,1.564,545,1.332,549,0.645,551,2.567,555,0.61,557,0.762,560,0.72,561,0.808,568,0.656,596,0.86,612,2.072,620,0.762,626,1.94,634,1.278,638,1.431,639,1.771,642,0.89,651,0.837,661,0.71,676,0.687,677,0.751,678,0.758,704,2.371,705,1.995,708,1.096,721,2.276,727,0.882,730,1.128,733,1.586,734,0.688,786,1.706,800,0.793,812,0.579,829,2.282,837,0.751,844,1.64,898,4.025,929,0.915,931,2.445,960,2.833,967,0.63,1010,0.86,1018,0.847,1087,2.19,1103,3.028,1138,2.295,1150,1.655,1151,0.751,1231,0.74,1293,0.779,1298,2.627,1308,0.74,1334,1.138,1595,0.829,1599,0.685,1610,1.007,1684,1.99,2202,0.967,2302,0.924,2353,1.244,2379,1.671,2498,1.244,2641,1.399,2642,1.462,2651,0.89,2782,1.806,2808,2.481,2898,1.058,2906,3.013,2909,2.139,2938,1.04,3566,1.99,3672,1.16,3782,2.082,3955,0.86,3983,0.967,4342,6.676,4374,1.244,4375,1.244,4983,2.082,5349,1.402,5350,1.402,5351,1.402,5352,1.402,5353,1.402,5354,1.402,5355,1.402,5356,2.586,5357,1.058,5358,1.198]],["component/250",[220,0.615]],["title/251-1",[676,17.814]],["name/251-1",[]],["text/251-1",[]],["component/251-1",[]],["title/251-2",[317,18.84,318,16.799]],["name/251-2",[]],["text/251-2",[]],["component/251-2",[]],["title/251-3",[962,49.665]],["name/251-3",[]],["text/251-3",[]],["component/251-3",[]],["title/251-4",[24,19.438,651,23.799]],["name/251-4",[]],["text/251-4",[]],["component/251-4",[]],["title/251-5",[1681,54.75]],["name/251-5",[]],["text/251-5",[]],["component/251-5",[]],["title/251-6",[24,11.896,399,23.196,929,29.363,969,22.062,4983,36.231]],["name/251-6",[]],["text/251-6",[]],["component/251-6",[]],["title/251",[1103,40.077]],["name/251",[5359,3.92]],["text/251",[2,0.852,8,0.952,16,1.019,20,1.275,22,1.175,24,3.562,33,1.509,34,0.988,51,1.442,60,0.484,61,0.969,62,2.867,71,1.678,79,1.184,84,3.349,92,1.662,93,1.242,105,2.535,106,1.212,115,2.528,124,4.562,128,1.167,138,1.114,139,0.923,143,2.493,162,1.705,168,2.036,172,1.105,183,1.333,189,1.036,191,1.074,199,3.61,203,2.337,216,0.961,218,1.092,219,1.485,241,1.297,246,1.008,262,0.978,274,2.274,275,1.456,286,1.534,299,1.316,310,0.99,312,2.603,315,1.409,318,0.627,323,0.89,324,0.886,328,0.893,330,6.489,347,1.91,348,1.581,365,1.191,367,1.478,386,2.286,396,0.954,399,4.255,423,1.187,432,1.254,447,2.249,501,1.403,512,1.624,540,1.158,542,3.189,545,1.744,547,1.246,554,1.509,556,1.422,557,1.493,561,1.581,568,1.284,597,1.485,607,1.829,626,1.595,633,1.562,638,1.092,639,3.591,651,2.002,702,1.442,705,0.927,721,1.813,736,1.463,749,2.617,909,3.562,929,5.877,965,1.208,969,3.033,970,2.072,988,2.89,1056,1.774,1103,3.548,1138,2.417,1278,2.036,1340,1.685,1490,1.435,1595,1.624,1652,2.437,1659,1.534,1681,3.633,1684,2.113,1694,1.918,1855,1.403,2277,2.159,2302,1.81,2348,3.608,2371,2.113,2377,1.944,2651,1.742,2795,2.345,2850,3.924,2897,1.849,3498,2.437,3983,1.894,4618,2.559,4983,6.645,5360,2.746,5361,2.746,5362,2.746,5363,2.746,5364,2.746,5365,2.746,5366,2.746,5367,4.71,5368,4.391,5369,2.559,5370,3.555,5371,2.746,5372,2.559]],["component/251",[220,0.615]],["title/252-1",[676,17.814]],["name/252-1",[]],["text/252-1",[]],["component/252-1",[]],["title/252-2",[317,18.84,318,16.799]],["name/252-2",[]],["text/252-2",[]],["component/252-2",[]],["title/252-3",[60,16.431]],["name/252-3",[]],["text/252-3",[]],["component/252-3",[]],["title/252-4",[24,19.438,651,23.799]],["name/252-4",[]],["text/252-4",[]],["component/252-4",[]],["title/252-5",[515,33.47,651,23.799]],["name/252-5",[]],["text/252-5",[]],["component/252-5",[]],["title/252",[24,16.047,639,20.521,2657,38.506]],["name/252",[5373,3.92]],["text/252",[2,2.343,8,1.527,24,3.74,33,4.151,60,1.828,92,2.787,143,2.568,219,2.381,318,1.726,323,2.449,324,2.437,328,2.458,347,2.332,364,4.901,501,3.86,545,2.797,626,1.948,639,4.67,646,4.599,676,1.982,721,2.908,1138,3.877,1231,3.985,2442,5.447,2657,8.481,3983,5.21]],["component/252",[220,0.615]],["title/253-1",[676,17.814]],["name/253-1",[]],["text/253-1",[]],["component/253-1",[]],["title/253-2",[317,18.84,318,16.799]],["name/253-2",[]],["text/253-2",[]],["component/253-2",[]],["title/253-3",[60,16.431]],["name/253-3",[]],["text/253-3",[]],["component/253-3",[]],["title/253-4",[5,18.651,255,24.375,317,15.553]],["name/253-4",[]],["text/253-4",[]],["component/253-4",[]],["title/253",[191,28.763,2370,38.79]],["name/253",[5374,3.92]],["text/253",[2,3.51,5,3.222,8,1.01,22,1.914,27,2.134,38,1.481,45,2.898,46,2.352,49,1.664,60,1.352,84,2.28,92,3.449,95,3.427,96,3.088,143,4.06,144,2.197,182,3.063,183,3.382,191,1.953,202,2.518,216,1.748,255,3.081,262,2.734,317,1.279,318,1.141,323,1.619,324,1.611,328,1.624,348,2.875,390,2.351,545,1.849,626,2.41,639,1.688,649,2.823,676,0.954,703,5.223,782,2.875,790,3.842,798,2.318,800,2.823,804,2.894,806,3.291,812,3.857,836,3.14,1056,3.226,1151,2.673,1406,2.774,1647,3.768,2370,5.532,2385,2.823,2410,3.444,2442,2.622,2641,4.15,2642,2.823,3153,3.444,3298,3.226,4185,3.258,4533,4.264,5375,4.431]],["component/253",[220,0.615]],["title/254-1",[676,17.814]],["name/254-1",[]],["text/254-1",[]],["component/254-1",[]],["title/254-2",[317,18.84,318,16.799]],["name/254-2",[]],["text/254-2",[]],["component/254-2",[]],["title/254-3",[60,16.431]],["name/254-3",[]],["text/254-3",[]],["component/254-3",[]],["title/254-4",[5,18.651,255,24.375,317,15.553]],["name/254-4",[]],["text/254-4",[]],["component/254-4",[]],["title/254",[262,26.197,639,24.858]],["name/254",[5376,3.92]],["text/254",[2,3.397,5,2.877,8,1.32,22,1.629,27,1.738,38,1.937,45,2.537,46,2.581,49,1.355,60,1.151,64,1.629,84,1.857,92,3.316,95,2.916,96,2.628,106,1.794,124,2.06,138,1.649,143,3.722,144,1.789,182,2.494,183,3.494,189,1.535,202,2.051,216,1.424,219,1.282,228,1.512,246,1.493,255,2.622,262,3.654,274,1.963,316,2.404,317,1.042,318,0.929,323,1.318,324,1.312,328,1.323,348,2.341,378,2.125,390,1.914,392,1.426,545,1.505,626,2.415,639,4.044,649,2.299,676,0.777,687,2.627,703,5.109,782,2.341,790,3.129,798,1.888,800,2.299,804,2.356,806,2.68,812,4.234,836,2.557,1056,4.219,1087,3.974,1088,2.653,1151,2.177,1307,3.196,1406,2.259,1647,3.069,2380,3.196,2385,2.299,2409,2.68,2410,2.804,2442,2.135,2641,4.424,2642,2.299,3153,2.804,3298,2.627,4185,2.653,4533,3.472,5375,3.608]],["component/254",[220,0.615]],["title/255-1",[676,17.814]],["name/255-1",[]],["text/255-1",[]],["component/255-1",[]],["title/255-2",[317,18.84,318,16.799]],["name/255-2",[]],["text/255-2",[]],["component/255-2",[]],["title/255-3",[60,16.431]],["name/255-3",[]],["text/255-3",[]],["component/255-3",[]],["title/255-4",[162,26.617,651,23.799]],["name/255-4",[]],["text/255-4",[]],["component/255-4",[]],["title/255-5",[347,22.7,651,23.799]],["name/255-5",[]],["text/255-5",[]],["component/255-5",[]],["title/255",[626,18.962,2666,47.513]],["name/255",[5377,3.92]],["text/255",[8,1.207,22,1.49,24,1.578,46,1.503,49,2.925,60,1.547,71,3.127,92,2.795,96,2.403,138,2.421,143,2.983,162,2.161,183,3.618,219,3.28,271,3.858,299,2.861,310,3.164,318,1.364,320,2.772,323,1.936,324,1.926,328,1.942,416,3.106,447,4.191,499,2.675,501,5.861,522,3.12,542,4.988,545,2.211,626,3.152,639,3.518,676,1.677,721,2.298,752,3.356,925,3.281,1071,3.92,1628,4.354,1645,3.754,2442,3.135,2666,6.724,5357,6.623,5378,10.406]],["component/255",[220,0.615]],["title/256-1",[676,17.814]],["name/256-1",[]],["text/256-1",[]],["component/256-1",[]],["title/256-2",[317,18.84,318,16.799]],["name/256-2",[]],["text/256-2",[]],["component/256-2",[]],["title/256-3",[60,16.431]],["name/256-3",[]],["text/256-3",[]],["component/256-3",[]],["title/256-4",[2,22.808,386,27.167]],["name/256-4",[]],["text/256-4",[]],["component/256-4",[]],["title/256",[423,31.788,1310,36.335]],["name/256",[5379,3.92]],["text/256",[1,0.842,2,1.404,3,0.526,4,0.573,8,0.737,11,2.85,20,0.661,23,0.751,24,1.197,27,1.558,38,1.081,42,0.851,45,3.229,46,2.369,49,0.474,57,2.039,60,0.251,61,0.502,64,1.813,65,0.663,66,1.096,74,0.652,77,3.579,84,1.197,87,0.873,92,2.039,93,2.047,94,0.795,95,4.443,99,0.572,100,1.519,110,1.489,115,1.071,124,1.846,126,0.744,128,0.605,134,0.538,138,0.577,143,0.484,183,0.742,186,1.038,191,1.025,201,0.778,208,3.079,216,0.498,218,2.106,219,0.826,228,0.529,236,4.556,246,0.963,262,0.934,272,0.836,275,0.755,286,0.795,287,0.895,318,0.325,323,0.462,324,0.459,328,0.463,347,1.397,379,3.818,386,2.207,389,3.171,396,0.911,417,1.813,423,3.281,424,0.703,428,3.491,450,2.169,451,1.055,477,2.657,479,1.261,499,0.638,513,6.544,518,0.81,545,0.527,547,2.403,571,0.782,626,2.069,638,2.106,639,0.886,676,0.501,677,0.762,705,0.885,716,1.584,728,3.699,752,0.8,781,1.022,798,3.909,815,0.929,821,0.888,909,0.82,911,8.994,916,4.238,919,1.728,988,0.873,1018,0.86,1056,2.355,1071,0.636,1097,1.038,1125,0.815,1151,2.423,1244,0.929,1288,0.895,1310,1.295,1406,1.457,1507,0.709,1909,1.621,2268,1.038,2338,6.625,2408,4.903,2489,2.444,2620,4.017,2828,3.084,2848,6.135,2942,4.229,2945,2.444,4121,8.275,4160,5.567,4303,9.702,4656,4.017,5380,4.219,5381,10.992,5382,4.526,5383,1.263]],["component/256",[220,0.615]],["title/257-1",[676,17.814]],["name/257-1",[]],["text/257-1",[]],["component/257-1",[]],["title/257-2",[317,18.84,318,16.799]],["name/257-2",[]],["text/257-2",[]],["component/257-2",[]],["title/257-3",[60,16.431]],["name/257-3",[]],["text/257-3",[]],["component/257-3",[]],["title/257-4",[5,22.593,255,29.526]],["name/257-4",[]],["text/257-4",[]],["component/257-4",[]],["title/257",[218,29.242,626,18.962]],["name/257",[5384,3.92]],["text/257",[2,2.148,5,2.64,8,0.885,22,2.144,40,1.394,46,1.743,49,3.77,60,0.772,71,1.56,92,2.858,96,2.788,112,1.675,131,1.369,135,6.023,142,3.073,144,1.926,183,3.58,218,3.884,219,3.987,255,2.781,310,2.497,317,1.122,318,1,323,1.42,324,1.413,328,1.424,416,2.278,423,2.994,545,4.796,626,3.408,676,0.837,1305,4.249,1444,3.1,1516,6.812,1628,3.194,1645,2.753,2350,2.368,2356,4.838,2385,2.476,2397,2.589,2442,5.128,4020,7.337,4213,3.739,5385,6.926]],["component/257",[220,0.615]],["title/258-1",[676,17.814]],["name/258-1",[]],["text/258-1",[]],["component/258-1",[]],["title/258-2",[317,18.84,318,16.799]],["name/258-2",[]],["text/258-2",[]],["component/258-2",[]],["title/258-3",[60,16.431]],["name/258-3",[]],["text/258-3",[]],["component/258-3",[]],["title/258-4",[5,18.651,255,24.375,317,15.553]],["name/258-4",[]],["text/258-4",[]],["component/258-4",[]],["title/258",[134,35.263]],["name/258",[5386,3.92]],["text/258",[2,2.701,4,0.912,5,1.639,8,0.458,10,1.066,11,0.982,22,2.781,29,2.01,38,1.905,40,1.269,42,0.736,45,1.236,46,2.648,60,0.399,61,0.799,62,2.569,71,1.901,73,1.478,81,1.543,84,1.82,92,2.727,95,1.78,96,0.912,115,0.926,128,2.731,131,2.289,133,1.074,134,4.408,137,1.969,138,0.919,139,2.461,143,3.308,144,0.997,163,0.882,176,1.412,182,1.39,183,2.755,189,2.763,219,0.714,220,0.473,255,1.6,310,0.817,315,1.162,317,0.58,318,0.518,319,1.259,323,0.734,324,0.731,328,0.737,341,2.134,347,1.23,354,2.39,355,1.379,367,1.219,389,2.009,390,1.066,393,2.325,398,1.501,423,2.777,428,1.493,481,1.245,494,2.155,545,0.839,551,3.158,555,0.985,561,1.304,571,1.245,589,2.167,626,1.657,630,1.604,635,1.874,638,1.585,639,2.172,645,2.01,649,1.281,651,0.733,655,1.401,676,0.433,689,1.003,694,2.111,698,2.907,699,2.575,700,1.526,703,2.658,704,1.493,705,1.801,708,0.96,715,1.543,716,2.408,717,1.781,718,2.01,719,1.781,720,1.152,721,2.054,722,1.021,723,1.935,724,1.349,725,1.478,730,1.738,733,1.39,734,1.111,744,1.266,790,1.743,798,2.477,800,1.281,812,3.595,836,1.424,837,1.213,982,1.288,1056,2.575,1151,1.213,1310,1.119,1340,1.39,1509,3.209,1526,1.781,1599,1.946,1628,1.652,1645,1.424,1702,3.554,1857,1.493,2242,1.652,2379,2.575,2385,2.253,2410,1.562,2641,2.886,2642,1.281,2942,1.604,3153,1.562,3957,1.743,3958,1.824,4185,1.478,4203,1.781,5375,2.01,5387,2.01,5388,2.265,5389,2.265,5390,3.985,5391,3.985,5392,3.133,5393,5.336,5394,5.336,5395,5.336,5396,2.265,5397,2.265,5398,1.935,5399,2.265]],["component/258",[220,0.615]],["title/259-1",[676,17.814]],["name/259-1",[]],["text/259-1",[]],["component/259-1",[]],["title/259-2",[317,18.84,318,16.799]],["name/259-2",[]],["text/259-2",[]],["component/259-2",[]],["title/259-3",[14,32.218]],["name/259-3",[]],["text/259-3",[]],["component/259-3",[]],["title/259-4",[60,16.431]],["name/259-4",[]],["text/259-4",[]],["component/259-4",[]],["title/259-5",[142,18.487,326,26.069,347,15.956,2868,37.122]],["name/259-5",[]],["text/259-5",[]],["component/259-5",[]],["title/259-6",[678,39.768,1677,38.606]],["name/259-6",[]],["text/259-6",[]],["component/259-6",[]],["title/259-7",[183,26.392]],["name/259-7",[]],["text/259-7",[]],["component/259-7",[]],["title/259-8",[447,35.112,547,33.362]],["name/259-8",[]],["text/259-8",[]],["component/259-8",[]],["title/259",[326,30.616,705,20.484,2868,43.598]],["name/259",[326,1.168,2868,1.664]],["text/259",[3,2.49,8,1.363,15,2.755,16,1.144,22,1.297,24,0.815,34,1.109,37,1.467,38,2.62,39,2.51,40,0.981,41,1.209,56,2.012,60,0.916,61,1.834,62,3.049,63,3.751,64,1.235,68,4.159,82,1.12,84,1.408,92,0.828,93,2.351,99,2.087,124,2.633,127,3.359,131,0.964,138,2.108,143,1.767,163,2.024,169,1.325,172,1.241,180,1.462,183,2.501,189,2.543,198,1.381,205,2.993,248,2.019,318,0.704,323,1,324,0.994,326,5.976,328,1.003,344,1.483,347,1.605,379,2.473,386,1.139,389,1.958,392,1.082,396,1.806,447,2.482,519,1.555,521,2.336,538,2.183,542,1.34,547,1.399,549,1.417,626,1.34,639,2.278,646,3.164,676,0.993,677,1.65,700,2.076,703,3.357,705,1.754,730,2.267,734,1.511,744,1.723,798,4.448,804,1.787,956,1.659,967,3.029,1187,2.308,1257,1.939,1294,5.391,1406,1.713,1440,4.996,1450,3.189,1643,5.378,1677,5.352,2033,5.188,2254,2.736,2282,2.736,2302,4.442,2466,2.482,2868,7.69,3112,2.424,3132,4.845,3503,2.372,4731,6.546,4732,6.546,4733,6.546,5400,7.912,5401,3.083,5402,3.083]],["component/259",[220,0.615]],["title/260-1",[676,17.814]],["name/260-1",[]],["text/260-1",[]],["component/260-1",[]],["title/260-2",[317,18.84,318,16.799]],["name/260-2",[]],["text/260-2",[]],["component/260-2",[]],["title/260-3",[60,16.431]],["name/260-3",[]],["text/260-3",[]],["component/260-3",[]],["title/260-4",[68,28.575,651,19.647,1643,36.95]],["name/260-4",[]],["text/260-4",[]],["component/260-4",[]],["title/260-5",[651,23.799,4291,55.493]],["name/260-5",[]],["text/260-5",[]],["component/260-5",[]],["title/260-6",[183,20.814,651,23.799]],["name/260-6",[]],["text/260-6",[]],["component/260-6",[]],["title/260",[326,30.616,705,20.484,2980,42.977]],["name/260",[326,0.829,705,0.555,2980,1.164]],["text/260",[2,1.875,3,1.366,8,0.747,11,1.603,15,1.96,16,1.372,22,0.922,24,2.027,34,1.33,37,2.876,38,1.096,39,1.785,41,1.449,60,1.065,61,2.133,62,3.108,64,2.421,68,4.933,82,1.344,92,1.623,99,3.078,127,2.389,133,1.753,138,1.499,142,1.322,155,2.324,159,3.819,172,1.488,176,2.305,183,2.507,249,5.899,285,1.941,318,0.845,323,1.198,324,1.192,326,6.779,328,1.203,369,1.694,386,1.366,392,1.297,396,2.1,511,6.652,519,1.864,521,3.446,527,3.424,540,1.559,626,1.977,638,1.47,669,2.976,676,1.155,705,1.247,721,2.327,730,1.612,733,2.268,809,2.655,868,2.462,878,2.462,883,3.599,916,1.617,925,4.213,982,2.102,1010,2.268,1020,2.437,1121,2.102,1187,3.931,1257,2.324,1450,3.708,1490,1.932,1541,3.236,1643,6.379,2033,4.502,2642,2.09,2946,2.976,2980,6.913,3109,4.279,4291,9.012,4369,7.562,5403,5.633]],["component/260",[220,0.615]],["title/261-1",[676,17.814]],["name/261-1",[]],["text/261-1",[]],["component/261-1",[]],["title/261-2",[317,18.84,318,16.799]],["name/261-2",[]],["text/261-2",[]],["component/261-2",[]],["title/261-3",[60,16.431]],["name/261-3",[]],["text/261-3",[]],["component/261-3",[]],["title/261-4",[68,28.575,651,19.647,1643,36.95]],["name/261-4",[]],["text/261-4",[]],["component/261-4",[]],["title/261-5",[651,23.799,4291,55.493]],["name/261-5",[]],["text/261-5",[]],["component/261-5",[]],["title/261",[219,19.134,326,30.616,2980,42.977]],["name/261",[219,0.518,326,0.829,2980,1.164]],["text/261",[2,1.607,3,1.135,8,0.621,11,1.332,14,1.062,15,1.628,16,1.14,22,0.766,24,2.331,34,1.865,37,1.462,38,0.911,39,1.483,40,3.403,41,1.204,60,1.185,62,3.044,68,5.239,74,2.374,82,1.116,92,1.392,103,1.376,127,5.101,142,1.099,155,5.544,159,3.348,172,2.086,183,1.467,203,1.524,219,0.968,249,7.121,264,2.966,318,0.702,323,0.996,324,0.991,326,6.114,328,0.999,369,1.407,386,1.135,392,1.818,396,1.067,398,2.531,466,2.415,482,1.36,511,6.007,519,1.549,521,1.381,527,1.372,540,4.031,625,1.816,626,2.036,638,1.222,645,2.614,663,1.985,676,0.99,708,1.302,721,1.183,753,1.605,809,2.206,868,2.046,883,3.086,925,3.693,1010,1.884,1020,2.025,1121,1.747,1187,4.517,1257,1.932,1450,3.179,1490,1.605,1541,2.774,1591,2.046,1596,2.24,1643,7.004,2033,3.947,2035,1.829,2368,4.287,2870,3.154,2922,2.364,2980,7.204,3109,3.669,3112,2.415,4291,8.931,4369,5.74,5403,4.83,5404,3.072,5405,2.863,5406,3.072,5407,3.072,5408,4.83]],["component/261",[220,0.615]],["title/262-1",[676,17.814]],["name/262-1",[]],["text/262-1",[]],["component/262-1",[]],["title/262-2",[317,18.84,318,16.799]],["name/262-2",[]],["text/262-2",[]],["component/262-2",[]],["title/262-3",[60,16.431]],["name/262-3",[]],["text/262-3",[]],["component/262-3",[]],["title/262",[133,44.2]],["name/262",[5409,3.92]],["text/262",[1,1.387,2,1.275,8,0.831,11,3.246,16,0.87,22,1.643,24,1.979,28,2.709,31,2.952,32,1.058,34,0.844,38,1.219,60,1.452,62,2.825,64,0.94,72,3.178,82,0.853,92,2.213,93,1.061,129,1.215,131,2.059,133,5.591,140,1.771,143,3.505,160,1.075,172,3.014,183,3.115,189,0.885,199,1.797,200,1.895,203,2.039,205,3.792,208,1.209,216,1.439,218,1.634,219,1.729,251,1.215,262,1.954,272,1.378,275,2.179,277,1.488,291,1.029,310,2.374,313,1.326,317,1.053,318,0.536,323,0.761,324,0.757,328,0.763,342,1.531,364,3.892,366,1.289,369,1.075,396,1.906,398,2.065,423,1.014,454,1.599,501,2.802,513,2.148,521,1.054,538,1.661,545,2.438,551,3.518,557,1.276,565,1.282,581,1.343,589,1.276,617,3.51,626,2.125,634,2.031,639,4.06,655,1.451,661,3.336,676,0.448,705,2.527,722,1.058,727,1.475,734,1.15,736,1.25,779,1.369,781,5.377,808,2.951,812,2.264,832,2.367,858,1.889,916,1.797,955,1.475,965,2.897,982,2.338,1069,4.387,1073,2.297,1074,1.805,1149,1.369,1334,1.032,1387,1.639,1482,1.502,1718,1.36,1879,3.065,2083,4.22,2248,1.502,2354,1.618,2385,1.326,2463,2.004,2657,3.479,2677,2.004,3931,1.941,3969,1.685,4157,2.082,4229,5.067,4580,2.187,4689,4.867,4710,3.309,5033,3.831,5410,2.187,5411,2.187,5412,2.346,5413,4.11,5414,4.11,5415,2.346]],["component/262",[220,0.615]],["title/263-1",[676,17.814]],["name/263-1",[]],["text/263-1",[]],["component/263-1",[]],["title/263-2",[317,18.84,318,16.799]],["name/263-2",[]],["text/263-2",[]],["component/263-2",[]],["title/263-3",[60,16.431]],["name/263-3",[]],["text/263-3",[]],["component/263-3",[]],["title/263-4",[1245,82.733]],["name/263-4",[]],["text/263-4",[]],["component/263-4",[]],["title/263-5",[92,12.088,206,26.794,340,31.861,1010,27.606,1183,26.25]],["name/263-5",[]],["text/263-5",[]],["component/263-5",[]],["title/263-6",[92,13.883,1010,31.707,1183,30.149,5416,45.864]],["name/263-6",[]],["text/263-6",[]],["component/263-6",[]],["title/263",[1010,45.108,1183,42.892]],["name/263",[1010,2.405]],["text/263",[8,1.101,21,2.702,22,1.75,25,1.386,38,0.967,46,0.82,47,1.624,48,1.624,49,1.086,60,1.445,62,1.734,66,2.934,71,1.161,79,1.405,84,1.488,88,2.555,91,1.586,92,3.159,93,2.463,94,1.821,95,1.456,96,2.824,110,2.225,138,2.209,141,1.695,142,1.948,143,1.851,150,1.832,160,3.755,172,2.192,183,3.329,189,1.23,200,1.503,206,1.941,216,1.907,228,1.212,245,2.697,246,1.197,262,2.5,317,1.396,318,0.745,323,1.057,324,1.051,328,1.06,340,2.308,396,1.133,417,2.81,425,2.901,436,1.801,530,2.248,549,2.504,551,1.112,568,2.546,626,3.25,639,1.841,655,2.016,660,2.691,676,0.623,705,1.1,752,1.832,786,1.545,812,2.248,821,2.032,883,3.243,908,3.29,919,2.148,931,2.977,960,5.46,967,1.465,1000,1.843,1001,2.993,1010,7.731,1012,5.46,1082,3.061,1183,5.318,1271,3.912,1285,1.651,1689,4.651,1849,2.195,1881,5.295,1903,2.195,1929,2.562,1992,2.277,2035,3.243,2348,1.901,2442,1.711,4333,2.783,4407,3.038,5416,4.833,5417,3.259,5418,3.259,5419,3.259,5420,3.038]],["component/263",[220,0.615]],["title/264-1",[676,17.814]],["name/264-1",[]],["text/264-1",[]],["component/264-1",[]],["title/264-2",[317,18.84,318,16.799]],["name/264-2",[]],["text/264-2",[]],["component/264-2",[]],["title/264-3",[60,16.431]],["name/264-3",[]],["text/264-3",[]],["component/264-3",[]],["title/264-4",[216,25.746,651,23.799]],["name/264-4",[]],["text/264-4",[]],["component/264-4",[]],["title/264-5",[183,12.738,568,21.037,651,14.565,1765,32.321,2035,26.794]],["name/264-5",[]],["text/264-5",[]],["component/264-5",[]],["title/264-6",[183,14.631,568,24.162,651,16.729,1677,27.136]],["name/264-6",[]],["text/264-6",[]],["component/264-6",[]],["title/264",[1010,45.108,1168,48.467]],["name/264",[5421,3.92]],["text/264",[8,0.395,10,0.92,21,1.734,22,2.364,24,2.505,34,1.258,38,1.037,49,2.458,60,1.509,62,1.838,65,0.91,66,1.984,67,2.265,68,0.92,78,1.618,82,2.098,88,1.64,92,0.525,94,1.954,95,0.873,96,1.407,110,0.799,124,1.771,126,1.021,128,1.486,131,1.093,138,3.248,142,2.864,143,0.664,150,1.098,165,2.565,172,0.787,177,1.036,183,3.538,200,0.901,203,0.97,204,0.966,208,1.802,212,1.853,216,1.661,219,1.102,233,1.707,258,2.304,259,2.592,262,1.246,283,1.046,294,1.921,308,0.962,318,0.446,323,0.634,324,0.63,328,0.636,347,0.603,369,1.602,386,0.722,392,1.664,396,2.006,417,3.796,423,0.845,479,0.94,514,2.69,515,1.591,519,0.986,523,1.24,527,1.562,530,3.271,551,2.92,557,1.063,568,4.915,625,3.413,626,2.333,639,0.661,650,3.16,651,2.148,660,0.966,676,0.906,702,1.026,721,1.346,722,1.576,752,1.098,780,1.209,808,1.052,821,4.139,861,2.986,868,1.302,883,3.437,887,2.65,891,1.404,908,4.455,919,1.288,960,4.89,965,0.86,969,1.714,988,1.199,1000,1.976,1001,1.921,1010,5.252,1012,3.846,1018,5.465,1082,1.965,1085,2.924,1149,2.039,1168,7.116,1406,1.086,1450,2.145,1521,2.411,1670,2.91,1677,1.026,1765,4.146,1855,0.998,1879,1.092,1881,2.638,1909,1.209,1929,2.748,2035,3.437,2270,1.288,2328,1.536,2442,2.49,2821,1.536,2922,1.504,3153,1.348,3557,2.748,4333,1.669,5422,1.954,5423,4.776,5424,1.822,5425,3.496,5426,1.954,5427,3.496]],["component/264",[220,0.615]],["title/265-1",[676,17.814]],["name/265-1",[]],["text/265-1",[]],["component/265-1",[]],["title/265-2",[317,18.84,318,16.799]],["name/265-2",[]],["text/265-2",[]],["component/265-2",[]],["title/265-3",[60,16.431]],["name/265-3",[]],["text/265-3",[]],["component/265-3",[]],["title/265",[191,20.218,286,28.881,513,27.009,639,17.473]],["name/265",[5428,3.92]],["text/265",[8,1.527,22,1.885,46,2.611,60,1.331,85,5.087,86,3.93,92,3.183,138,3.064,183,3.354,191,4.058,216,3.633,262,2.692,286,4.221,318,1.726,323,2.449,324,2.437,328,2.458,513,6.666,626,2.675,639,4.312,650,6.911,676,1.443,782,4.35,1290,4.929,1628,5.51,1645,4.75,2385,5.865,2442,3.966,5429,7.554]],["component/265",[220,0.615]],["title/266-1",[676,17.814]],["name/266-1",[]],["text/266-1",[]],["component/266-1",[]],["title/266-2",[317,18.84,318,16.799]],["name/266-2",[]],["text/266-2",[]],["component/266-2",[]],["title/266-3",[5,18.651,255,24.375,317,15.553]],["name/266-3",[]],["text/266-3",[]],["component/266-3",[]],["title/266",[661,47.224]],["name/266",[5430,3.92]],["text/266",[2,2.385,5,3.675,8,1.555,22,1.919,46,1.936,65,4.893,92,3.213,96,3.096,115,4.887,130,4.019,143,2.614,144,3.383,183,3.638,255,4.217,317,1.971,318,1.757,323,2.493,324,2.481,328,2.502,367,6.436,551,2.624,560,3.946,626,1.983,639,4.043,661,5.32,798,3.571,812,3.175,1095,4.138]],["component/266",[220,0.615]],["title/267-1",[676,17.814]],["name/267-1",[]],["text/267-1",[]],["component/267-1",[]],["title/267-2",[317,18.84,318,16.799]],["name/267-2",[]],["text/267-2",[]],["component/267-2",[]],["title/267-3",[60,16.431]],["name/267-3",[]],["text/267-3",[]],["component/267-3",[]],["title/267",[2890,71.74]],["name/267",[2890,3.016]],["text/267",[2,2.695,8,1.756,22,2.167,24,1.557,38,1.746,46,2.868,60,1.038,62,2.765,92,3.264,99,2.364,112,2.252,143,4.131,183,1.667,191,2.303,194,3.435,219,1.856,255,3.488,272,3.458,318,1.345,323,1.909,324,1.899,328,1.915,378,3.077,390,2.772,396,2.046,417,2.359,424,2.91,626,2.662,639,2.937,676,1.125,705,2.931,729,3.612,798,4.033,812,4.704,836,3.703,859,3.842,1056,5.613,1340,3.612,1746,3.922,1989,5.488,2033,3.458,2385,3.329,2401,3.922,2410,4.061,2442,3.091,2641,5.583,2642,3.329,2890,4.531,3153,4.061,4185,3.842,4231,4.871]],["component/267",[220,0.615]],["title/268-1",[676,17.814]],["name/268-1",[]],["text/268-1",[]],["component/268-1",[]],["title/268-2",[317,18.84,318,16.799]],["name/268-2",[]],["text/268-2",[]],["component/268-2",[]],["title/268-3",[60,16.431]],["name/268-3",[]],["text/268-3",[]],["component/268-3",[]],["title/268",[131,18.98,720,30.879,1507,30.238]],["name/268",[5431,3.92]],["text/268",[8,0.822,16,1.509,22,1.629,32,1.833,34,1.463,38,2.426,40,1.294,42,1.321,46,1.023,60,0.717,61,1.435,62,2.981,71,2.915,78,1.882,79,2.814,92,2.197,105,2.188,112,2.497,113,3.736,131,3.424,142,2.335,143,1.382,163,1.583,172,1.637,183,2.903,188,2.457,198,1.822,201,3.568,216,1.424,218,5.037,228,1.512,241,1.921,246,1.493,247,1.942,291,1.784,318,0.929,323,1.318,324,1.312,328,1.323,354,2.439,385,2.096,396,2.269,398,1.531,399,3.365,420,3.084,499,1.822,521,1.827,527,1.816,545,1.505,547,1.845,551,2.227,555,2.839,612,2.341,620,2.211,626,2.824,634,2.009,639,3.467,661,4.144,676,0.777,689,1.8,699,2.627,720,4.764,779,2.372,916,1.778,1125,3.736,1187,4.157,1507,5.959,1516,3.365,1584,2.404,1712,2.557,2341,3.915,2350,4.424,2354,2.804,2714,5.794,5432,4.066]],["component/268",[220,0.615]],["title/269-1",[676,17.814]],["name/269-1",[]],["text/269-1",[]],["component/269-1",[]],["title/269-2",[317,18.84,318,16.799]],["name/269-2",[]],["text/269-2",[]],["component/269-2",[]],["title/269-3",[60,16.431]],["name/269-3",[]],["text/269-3",[]],["component/269-3",[]],["title/269-4",[139,31.349]],["name/269-4",[]],["text/269-4",[]],["component/269-4",[]],["title/269",[424,36.335,1681,43.18]],["name/269",[5433,3.92]],["text/269",[8,0.928,16,1.703,22,1.145,34,1.652,38,2.132,46,1.155,49,1.53,60,1.561,71,1.636,72,4.166,74,3.293,79,1.979,85,2.251,86,2.388,88,2.153,92,3.595,93,2.076,131,2.77,138,2.915,139,1.544,183,2.035,191,3.466,201,4.842,217,2.627,228,1.707,246,1.686,318,1.049,323,1.488,324,1.481,328,1.493,365,1.99,424,5.704,482,2.032,551,1.566,597,2.483,626,2.285,638,1.826,639,3.389,662,4.482,676,0.877,705,1.549,716,2.773,736,2.445,812,3.657,946,3.609,1106,3.297,1138,5.585,1301,2.966,1334,2.02,1391,5.539,1533,6.825,1681,7.085,2362,4.074,2385,2.595,2397,2.714,2400,3.128,2847,4.074,2850,5.62,3986,4.69,5434,4.591,5435,4.591,5436,4.591]],["component/269",[220,0.615]],["title/270-1",[676,17.814]],["name/270-1",[]],["text/270-1",[]],["component/270-1",[]],["title/270-2",[317,18.84,318,16.799]],["name/270-2",[]],["text/270-2",[]],["component/270-2",[]],["title/270-3",[962,49.665]],["name/270-3",[]],["text/270-3",[]],["component/270-3",[]],["title/270-4",[139,31.349]],["name/270-4",[]],["text/270-4",[]],["component/270-4",[]],["title/270-5",[48,30.238,775,39.608,825,42.401]],["name/270-5",[]],["text/270-5",[]],["component/270-5",[]],["title/270-6",[775,47.978,825,51.361]],["name/270-6",[]],["text/270-6",[]],["component/270-6",[]],["title/270-7",[2,22.808,553,37.404]],["name/270-7",[]],["text/270-7",[]],["component/270-7",[]],["title/270-8",[183,20.814,218,29.242]],["name/270-8",[]],["text/270-8",[]],["component/270-8",[]],["title/270-9",[135,25.339,775,33.724,864,30.352,2033,30.352]],["name/270-9",[]],["text/270-9",[]],["component/270-9",[]],["title/270-10",[139,31.349]],["name/270-10",[]],["text/270-10",[]],["component/270-10",[]],["title/270-11",[183,14.631,392,18.132,540,21.792,639,17.473]],["name/270-11",[]],["text/270-11",[]],["component/270-11",[]],["title/270-12",[183,14.631,310,18.634,398,19.464,639,17.473]],["name/270-12",[]],["text/270-12",[]],["component/270-12",[]],["title/270-13",[551,25.084,844,46.644]],["name/270-13",[]],["text/270-13",[]],["component/270-13",[]],["title/270-14",[639,24.858,1681,43.18]],["name/270-14",[]],["text/270-14",[]],["component/270-14",[]],["title/270-15",[22,12.895,183,14.631,626,13.328,716,31.225]],["name/270-15",[]],["text/270-15",[]],["component/270-15",[]],["title/270",[775,60.834]],["name/270",[775,2.558]],["text/270",[2,1.699,5,0.296,8,0.368,10,0.454,11,0.418,22,1.841,24,0.255,27,0.779,34,0.656,38,1.329,40,0.825,41,1.287,42,0.313,46,0.459,48,3.513,49,0.863,53,0.57,61,0.643,62,2.133,64,0.386,69,1.156,71,0.649,74,0.835,79,1.117,80,1.876,82,1.193,88,1.215,89,0.53,92,2.459,97,1.602,100,1.056,103,0.432,110,1.058,115,1.83,118,0.657,124,0.488,128,0.774,131,3.785,134,3.114,135,1.27,138,0.739,139,0.613,143,0.619,148,1.878,149,0.683,159,0.48,163,1.278,165,0.521,172,0.388,174,0.509,177,0.511,180,0.457,183,3.045,188,0.582,191,0.377,199,1.436,200,1.195,202,0.486,203,0.478,204,0.476,211,1.256,213,0.533,216,0.907,218,0.725,219,2.325,220,0.381,227,0.542,236,0.482,246,0.354,247,0.46,254,0.952,282,0.742,291,0.423,294,1.001,299,0.462,300,1.98,308,0.474,310,2.542,313,0.545,315,0.935,317,0.247,318,0.416,323,0.313,324,0.311,328,0.314,338,0.536,341,0.516,347,2.069,352,1.241,355,0.587,361,0.459,369,0.835,371,0.596,378,0.952,379,0.459,380,0.715,389,0.363,390,0.454,393,0.562,396,0.335,398,1.883,418,0.683,424,0.476,437,0.582,471,0.657,479,1.579,482,0.427,491,0.582,494,0.521,513,0.504,520,0.57,521,2.462,522,0.504,525,0.908,527,1.466,530,0.665,540,0.406,545,0.675,549,0.837,551,2.406,553,5.908,554,0.53,555,0.419,556,0.499,560,1.329,562,2.362,609,0.542,615,0.673,626,1.818,638,0.725,639,3.451,643,0.555,644,0.683,645,1.307,651,2.282,654,0.758,676,0.348,689,0.427,702,0.506,703,0.48,705,1.849,716,3.021,720,0.927,721,0.997,722,0.435,729,0.591,734,1.27,736,0.514,744,1.018,775,6.454,779,0.562,780,0.596,782,0.555,798,0.448,800,1.03,812,0.752,825,3.129,837,0.516,844,0.612,849,0.612,864,0.566,898,0.596,916,1.436,965,1.444,967,0.819,982,1.036,1017,0.715,1020,0.635,1051,0.566,1059,0.587,1071,0.431,1138,0.935,1147,0.642,1148,0.742,1177,0.612,1187,1.15,1191,0.776,1197,0.728,1238,0.855,1264,0.57,1271,1.86,1272,0.635,1273,0.623,1281,0.823,1293,1.824,1302,2.913,1305,0.591,1306,0.673,1315,2.768,1334,1.14,1391,0.533,1409,2.358,1473,0.683,1482,1.658,1486,0.533,1499,0.692,1500,0.612,1521,0.665,1533,1.077,1539,0.758,1584,0.57,1585,0.657,1610,1.309,1613,0.642,1633,1.29,1659,1.447,1681,0.566,1700,0.728,1851,0.692,1856,1.921,1857,1.201,2033,0.566,2268,2.394,2277,0.758,2323,0.683,2348,1.511,2371,0.742,2400,3.733,2442,0.957,2461,0.617,2476,0.855,2498,0.855,2631,1.402,2641,0.985,2642,1.03,2651,0.612,2736,0.823,2898,0.728,2928,0.657,3213,1.809,3962,0.742,4064,0.899,4185,0.629,4218,0.798,4317,0.798,4433,0.855,4628,0.703,4630,0.823,4631,0.899,4719,6.414,4731,0.798,4732,0.798,4733,0.798,4823,0.899,5398,0.823,5437,0.964,5438,1.822,5439,1.822,5440,0.964,5441,0.964,5442,0.964,5443,0.964,5444,0.964,5445,0.964,5446,0.964,5447,0.964,5448,0.964,5449,0.964,5450,0.964,5451,0.964,5452,2.59,5453,0.964,5454,1.822,5455,1.822,5456,0.964,5457,0.964,5458,0.964,5459,0.964,5460,0.964,5461,0.964,5462,0.964,5463,0.964,5464,0.964,5465,0.964,5466,0.964,5467,0.964,5468,0.964,5469,3.644,5470,2.414,5471,1.698,5472,0.899,5473,0.964,5474,0.964,5475,0.823,5476,0.964,5477,0.823,5478,0.964,5479,1.822,5480,0.964,5481,1.822,5482,0.964,5483,0.964,5484,0.899,5485,0.899,5486,0.964,5487,2.59,5488,0.855,5489,0.964,5490,0.964,5491,0.964]],["component/270",[220,0.615]],["title/271-1",[676,17.814]],["name/271-1",[]],["text/271-1",[]],["component/271-1",[]],["title/271-2",[317,18.84,318,16.799]],["name/271-2",[]],["text/271-2",[]],["component/271-2",[]],["title/271-3",[651,19.647,655,37.537,1879,33.919]],["name/271-3",[]],["text/271-3",[]],["component/271-3",[]],["title/271-4",[183,17.183,219,19.134,651,19.647]],["name/271-4",[]],["text/271-4",[]],["component/271-4",[]],["title/271",[5,22.593,429,37.567]],["name/271",[5492,3.654]],["text/271",[2,1.414,5,3.333,8,0.535,13,1.96,22,2.201,38,0.784,52,1.133,53,3.555,60,1.666,61,0.933,62,2.276,65,1.232,71,1.625,91,1.286,92,0.71,96,1.835,97,1.635,111,1.513,112,1.011,119,1.648,121,1.542,135,2.947,142,0.946,183,3.67,191,1.784,199,2.629,218,2.844,219,2.78,233,1.291,283,1.415,286,1.477,299,2.185,300,4.086,310,0.953,316,1.563,318,0.604,323,0.857,324,0.853,328,0.86,369,1.211,375,4.771,392,3.094,408,1.328,424,1.307,429,1.351,443,2.129,494,2.466,518,1.504,527,1.181,535,1.563,545,0.979,551,2.051,557,1.437,562,2.755,596,1.622,597,1.43,629,2.034,633,1.504,634,4.359,638,4.786,639,2.417,642,2.892,648,2.034,650,1.761,651,2.314,655,6.925,660,2.253,661,1.339,676,0.505,700,1.781,703,1.317,705,0.892,721,2.753,824,2.187,830,1.563,910,1.415,956,1.423,965,1.163,982,1.504,1035,1.899,1058,1.663,1098,1.823,1187,2.669,1263,2.129,1283,1.823,1450,1.622,1481,1.872,1516,2.35,1671,1.635,1674,1.899,1680,1.928,1718,1.532,1879,6.062,2199,3.509,2348,2.66,2635,2.346,2828,1.801,4020,2.258,4417,2.464,5492,2.464,5493,4.56,5494,2.644,5495,2.644,5496,2.644,5497,4.56,5498,2.644,5499,2.644,5500,2.644,5501,2.644,5502,2.644,5503,2.644,5504,2.644,5505,2.644,5506,2.644,5507,2.644,5508,2.644,5509,2.644,5510,2.644,5511,2.346,5512,2.644,5513,2.644,5514,2.644,5515,2.644]],["component/271",[220,0.615]],["title/272-1",[676,17.814]],["name/272-1",[]],["text/272-1",[]],["component/272-1",[]],["title/272-2",[317,18.84,318,16.799]],["name/272-2",[]],["text/272-2",[]],["component/272-2",[]],["title/272-3",[60,16.431]],["name/272-3",[]],["text/272-3",[]],["component/272-3",[]],["title/272-4",[5,18.651,255,24.375,317,15.553]],["name/272-4",[]],["text/272-4",[]],["component/272-4",[]],["title/272",[114,43.476,639,24.858]],["name/272",[5516,3.92]],["text/272",[5,2.861,8,1.004,16,1.842,22,1.239,24,2.763,28,5.035,38,3.101,46,1.923,54,2.806,60,0.875,62,2.431,71,1.769,92,3.531,96,1.998,99,3.738,114,2.935,143,3.164,144,2.184,160,2.274,183,1.405,191,1.942,199,2.171,207,3.68,208,2.559,210,3.902,216,1.738,219,1.565,228,1.846,246,1.823,255,3.067,277,3.149,317,1.272,318,1.134,323,1.609,324,1.601,328,1.615,347,1.533,369,2.274,396,2.654,423,3.302,447,2.37,501,3.902,547,2.252,626,2.696,639,4.029,647,7.123,676,0.948,677,4.984,689,2.197,703,2.473,705,1.675,815,3.239,1068,3.68,1069,6.202,1074,3.82,1151,2.658,1308,2.619,1425,3.343,1533,2.935,1718,2.877,2333,4.239,4079,4.627,5517,4.964]],["component/272",[220,0.615]],["title/273-1",[676,17.814]],["name/273-1",[]],["text/273-1",[]],["component/273-1",[]],["title/273-2",[1096,64.298]],["name/273-2",[]],["text/273-2",[]],["component/273-2",[]],["title/273-3",[139,31.349]],["name/273-3",[]],["text/273-3",[]],["component/273-3",[]],["title/273-4",[317,18.84,318,16.799]],["name/273-4",[]],["text/273-4",[]],["component/273-4",[]],["title/273-5",[60,16.431]],["name/273-5",[]],["text/273-5",[]],["component/273-5",[]],["title/273-6",[24,19.438,651,23.799]],["name/273-6",[]],["text/273-6",[]],["component/273-6",[]],["title/273-7",[515,33.47,651,23.799]],["name/273-7",[]],["text/273-7",[]],["component/273-7",[]],["title/273-8",[183,20.814,651,23.799]],["name/273-8",[]],["text/273-8",[]],["component/273-8",[]],["title/273-9",[47,25.747,183,14.631,219,16.292,651,16.729]],["name/273-9",[]],["text/273-9",[]],["component/273-9",[]],["title/273-10",[3790,77.133]],["name/273-10",[]],["text/273-10",[]],["component/273-10",[]],["title/273-11",[5,18.651,255,24.375,317,15.553]],["name/273-11",[]],["text/273-11",[]],["component/273-11",[]],["title/273",[159,36.628,705,24.813]],["name/273",[5518,3.92]],["text/273",[2,1.313,3,0.628,5,0.745,8,0.745,11,0.389,14,0.588,16,0.333,20,0.79,22,1.975,24,2.618,27,0.383,29,1.858,33,2.857,34,0.322,37,2.014,38,1.255,42,0.291,46,0.428,47,0.847,49,2.008,51,0.893,54,0.507,60,1.062,61,0.316,62,2.813,64,0.972,77,0.322,78,0.415,79,0.386,82,0.882,84,1.108,89,0.934,92,2.054,95,1.378,96,1.241,99,1.902,100,0.519,115,1.935,119,0.559,121,0.523,124,1.229,128,1.031,131,2.885,133,0.806,134,0.339,138,0.69,139,2.267,142,0.608,143,1.048,144,0.394,159,5.007,163,1.648,168,1.333,169,0.385,176,1.06,183,3.694,189,0.338,191,0.949,199,0.392,200,1.699,203,0.844,204,1.82,208,0.462,213,1.34,215,0.69,216,0.314,217,0.513,218,1.465,219,1.9,232,0.534,236,0.448,255,0.683,262,2.279,267,0.477,291,3.876,292,0.635,299,0.815,300,1.229,308,0.441,310,1.526,312,1.34,314,0.611,315,0.46,317,0.23,318,0.205,323,0.291,324,0.289,328,0.292,341,0.48,344,0.431,347,0.525,353,0.604,355,1.035,362,0.534,367,0.482,369,0.779,386,1.139,389,0.338,390,0.8,392,0.314,396,0.311,401,0.462,403,1.204,415,0.635,417,0.359,423,0.387,424,0.443,447,1.158,499,0.762,501,2.419,513,1.268,515,0.408,519,0.452,521,1.656,522,0.468,523,1.079,527,0.76,528,1.027,542,3.325,545,1.364,547,0.772,549,0.412,551,2.056,561,0.516,607,0.597,622,0.498,626,2.513,629,1.308,631,0.604,634,1.199,638,0.676,639,1.601,651,1.533,661,3.052,676,0.589,678,0.92,698,2.686,703,0.847,704,0.591,705,2.581,721,3.87,724,1.012,727,0.564,730,2.94,733,1.043,741,0.604,744,1.723,753,1.268,779,0.992,786,1.462,798,1.71,800,0.507,806,1.599,812,1.273,826,1.583,827,0.835,830,1.005,836,0.564,837,0.48,838,0.569,844,0.569,849,0.569,875,0.741,884,0.574,909,0.516,916,0.744,925,0.492,928,1.616,955,1.069,960,1.163,964,0.541,965,0.394,970,2.328,1018,0.541,1071,0.4,1073,0.501,1085,0.454,1095,0.482,1103,2.42,1138,3.459,1149,0.523,1151,0.48,1154,0.611,1177,0.569,1183,0.523,1196,0.765,1203,1.509,1231,0.473,1248,0.604,1259,0.519,1273,0.579,1285,0.454,1293,0.945,1298,1.425,1334,1.357,1349,0.705,1391,0.94,1458,0.635,1470,1.283,1486,0.94,1519,0.705,1544,0.611,1595,1.824,1647,0.676,1649,0.676,1671,0.554,1680,0.654,1681,0.526,1702,1.616,1854,0.574,1855,0.458,1879,0.501,1938,1.261,2202,0.618,2348,0.992,2368,0.741,2370,1.28,2379,1.099,2385,0.507,2641,0.92,2642,0.507,2666,1.099,2843,1.11,2897,1.145,2918,1.407,3213,2.956,3955,0.55,3957,0.69,3959,1.308,3983,0.618,4086,0.795,4151,0.705,4185,0.585,4266,0.741,4335,0.741,4731,1.407,4732,1.407,4733,0.741,4736,0.795,4983,0.722,5357,0.676,5358,1.452,5369,0.835,5519,1.7,5520,0.896,5521,1.7,5522,0.896,5523,0.896,5524,0.896,5525,0.896,5526,0.896,5527,0.896,5528,0.835,5529,0.896,5530,0.835,5531,0.896,5532,0.896,5533,0.896,5534,0.896,5535,0.896,5536,0.896,5537,1.7,5538,1.7,5539,0.896,5540,0.896,5541,0.896,5542,0.896,5543,0.896,5544,0.896,5545,0.896,5546,0.896,5547,0.896,5548,0.896]],["component/273",[220,0.615]],["title/274-1",[676,17.814]],["name/274-1",[]],["text/274-1",[]],["component/274-1",[]],["title/274-2",[317,18.84,318,16.799]],["name/274-2",[]],["text/274-2",[]],["component/274-2",[]],["title/274-3",[60,16.431]],["name/274-3",[]],["text/274-3",[]],["component/274-3",[]],["title/274-4",[216,25.746,651,23.799]],["name/274-4",[]],["text/274-4",[]],["component/274-4",[]],["title/274-5",[347,22.7,554,40.405]],["name/274-5",[]],["text/274-5",[]],["component/274-5",[]],["title/274-6",[24,16.047,219,19.134,554,33.356]],["name/274-6",[]],["text/274-6",[]],["component/274-6",[]],["title/274-7",[183,20.814,651,23.799]],["name/274-7",[]],["text/274-7",[]],["component/274-7",[]],["title/274-8",[5,18.651,255,24.375,317,15.553]],["name/274-8",[]],["text/274-8",[]],["component/274-8",[]],["title/274-9",[491,44.422,835,52.06]],["name/274-9",[]],["text/274-9",[]],["component/274-9",[]],["title/274",[159,36.628,219,23.177]],["name/274",[5549,3.92]],["text/274",[1,4.395,2,1.202,5,1.191,8,0.309,16,0.568,22,1.719,24,3.21,34,0.551,38,2.205,39,0.739,40,1.778,41,0.6,46,0.975,49,0.934,60,1.107,61,0.54,62,0.892,64,1.552,67,0.731,68,0.721,71,0.998,78,2.218,82,1.018,84,0.699,92,2.878,93,0.692,96,2.249,97,0.947,103,2.503,129,0.793,131,4.405,135,1.374,137,2.368,139,0.515,143,0.52,144,0.673,159,4.985,162,2.022,163,1.091,169,0.658,172,1.128,183,2.242,196,0.811,199,0.669,200,2.211,204,2.368,212,1.485,213,3.808,216,2.413,219,3.747,228,1.042,246,0.562,255,1.125,262,0.998,264,1.604,308,0.753,310,0.552,312,1.548,317,0.392,318,0.35,323,0.496,324,0.494,328,0.498,347,1.196,364,0.723,365,0.664,386,0.566,389,0.576,392,2.778,398,1.459,401,0.789,414,0.865,417,1.122,432,0.699,436,0.846,479,1.348,491,4.491,519,0.772,523,0.971,527,1.252,540,1.634,542,1.685,545,1.435,551,4.142,555,0.666,625,0.905,626,3.066,638,0.609,639,1.889,651,0.907,656,2.044,676,0.74,677,0.819,705,2.119,722,0.69,744,2.678,775,1.828,798,1.799,803,1.155,834,1.203,835,4.879,916,1.695,931,0.837,965,1.233,1017,2.078,1085,1.419,1103,2.402,1151,0.819,1187,0.679,1231,0.807,1285,1.419,1298,2.815,1312,1.266,1313,1.056,1444,1.084,1486,0.846,1679,0.999,1855,0.782,1971,0.947,2192,1.116,2270,1.009,2442,0.804,2818,5.167,2820,1.358,2848,2.61,2870,1.706,3983,1.056,4230,3.206,4355,1.427,4357,1.427,4361,1.427,5550,1.427]],["component/274",[220,0.615]],["title/275-1",[676,17.814]],["name/275-1",[]],["text/275-1",[]],["component/275-1",[]],["title/275-2",[317,18.84,318,16.799]],["name/275-2",[]],["text/275-2",[]],["component/275-2",[]],["title/275-3",[60,16.431]],["name/275-3",[]],["text/275-3",[]],["component/275-3",[]],["title/275-4",[216,32.645]],["name/275-4",[]],["text/275-4",[]],["component/275-4",[]],["title/275-5",[1195,62.106]],["name/275-5",[]],["text/275-5",[]],["component/275-5",[]],["title/275-6",[117,52.709]],["name/275-6",[]],["text/275-6",[]],["component/275-6",[]],["title/275-7",[183,26.392]],["name/275-7",[]],["text/275-7",[]],["component/275-7",[]],["title/275-8",[183,20.814,262,26.197]],["name/275-8",[]],["text/275-8",[]],["component/275-8",[]],["title/275-9",[60,16.431]],["name/275-9",[]],["text/275-9",[]],["component/275-9",[]],["title/275-10",[128,31.257,129,38.073]],["name/275-10",[]],["text/275-10",[]],["component/275-10",[]],["title/275-11",[862,40.436,1516,31.289,2871,37.238]],["name/275-11",[]],["text/275-11",[]],["component/275-11",[]],["title/275",[1746,48.981,2401,48.981]],["name/275",[5551,3.92]],["text/275",[2,1.015,4,0.506,6,0.653,8,0.472,12,0.663,14,0.807,15,0.666,16,0.466,19,0.846,22,1.021,24,0.617,25,0.534,34,1.177,37,0.598,38,2.087,42,1.063,45,0.39,46,2.3,49,0.419,57,0.484,60,1.448,61,0.443,62,1.739,63,1.551,64,0.503,65,1.524,66,1.712,74,0.575,80,1.401,81,0.856,82,1.189,84,0.574,92,2.207,96,0.506,99,0.504,108,0.771,110,0.513,115,3.05,117,2.314,119,0.783,123,1.509,128,2.79,129,1.209,133,2.59,134,0.475,137,1.154,138,0.947,139,1.1,143,2.231,148,1.336,155,0.79,160,0.575,163,0.489,165,0.679,169,0.54,182,0.771,183,1.364,189,1.545,191,2.567,198,0.563,199,1.431,200,0.579,203,0.623,216,0.818,217,0.719,218,0.5,219,0.736,228,0.467,234,0.738,236,0.628,246,0.857,248,0.907,260,1.362,278,0.902,285,0.659,286,1.305,288,0.902,289,1.421,291,0.551,300,0.636,314,3.283,317,0.322,318,0.287,323,0.407,324,0.405,325,0.743,328,0.409,336,1.731,347,1.687,352,0.856,355,1.992,360,4.025,362,0.748,364,0.593,367,0.676,369,1.07,386,0.464,389,1.541,393,0.733,396,1.422,401,1.204,402,0.82,404,0.797,417,2.189,423,0.543,437,0.759,447,0.6,453,2.057,465,0.856,471,0.856,493,0.877,511,0.856,521,0.565,532,0.783,542,2.095,545,1.211,547,1.059,551,2.061,555,0.546,571,1.283,581,1.336,589,0.683,597,0.679,626,1.925,638,0.5,651,1.059,660,0.621,662,1.456,668,0.987,676,0.782,684,0.902,685,1.555,689,0.556,697,1.779,703,2.4,705,1.381,708,0.532,720,0.639,721,0.484,722,1.053,730,1.785,731,0.804,734,1.145,752,0.706,753,1.22,786,0.595,796,0.728,800,0.71,806,1.539,812,0.518,821,0.783,862,0.837,887,0.702,909,1.345,916,0.549,925,0.69,931,0.686,950,0.931,955,1.468,956,0.676,964,0.759,965,2.658,1035,0.902,1051,1.371,1082,0.706,1085,0.636,1118,3.253,1125,1.336,1187,1.817,1218,0.966,1226,1.362,1294,0.856,1295,0.877,1304,0.987,1379,2.204,1489,0.889,1490,4.105,1493,0.889,1510,1.591,1515,4.219,1516,1.204,1536,1.011,1602,0.987,1659,1.305,1679,0.82,1718,0.728,1746,6.854,1855,0.642,1882,0.948,1961,1.115,1992,2.285,2256,0.966,2268,1.703,2271,0.846,2337,1.835,2357,0.948,2370,6.151,2385,0.71,2401,7.316,2408,0.866,2414,0.916,2463,1.073,2657,0.797,2866,1.591,2870,0.765,2871,1.432,2872,0.82,2877,1.677,2878,1.835,2890,1.797,2936,0.948,2938,0.931,3270,1.073,3449,1.011,3938,1.011,3974,1.932,4029,1.88,4030,1.073,4033,1.039,4034,1.115,4036,1.073,4037,1.073,4038,1.073,4039,1.073,4040,1.073,4041,1.073,4042,1.073,4043,1.073,4044,1.073,4045,1.073,4046,1.073,4047,1.073,4048,1.073,4049,1.073,4050,1.073,4051,1.073,4053,1.073,4054,2.072,4055,2.072,4056,2.072,4057,1.073,4095,0.846,4191,1.073,5324,1.171,5552,4.491,5553,1.073,5554,1.256,5555,1.256,5556,1.256,5557,1.171,5558,1.171,5559,1.256,5560,1.171,5561,1.171,5562,1.171,5563,1.171,5564,1.171,5565,5.093,5566,1.171,5567,1.256,5568,1.256,5569,1.256,5570,1.256,5571,1.256]],["component/275",[220,0.615]],["title/276-1",[676,17.814]],["name/276-1",[]],["text/276-1",[]],["component/276-1",[]],["title/276-2",[317,18.84,318,16.799]],["name/276-2",[]],["text/276-2",[]],["component/276-2",[]],["title/276-3",[60,16.431]],["name/276-3",[]],["text/276-3",[]],["component/276-3",[]],["title/276-4",[60,16.431]],["name/276-4",[]],["text/276-4",[]],["component/276-4",[]],["title/276-5",[862,40.436,1516,31.289,2871,37.238]],["name/276-5",[]],["text/276-5",[]],["component/276-5",[]],["title/276",[1718,42.613,2401,48.981]],["name/276",[5572,3.92]],["text/276",[4,1.223,6,1.581,8,0.614,14,1.775,15,1.611,19,2.047,21,1.508,22,1.281,24,0.803,25,2.183,32,1.37,34,1.848,37,1.446,49,1.013,60,1.784,61,1.072,63,3.162,64,1.217,66,3.279,71,1.83,82,1.866,85,1.49,92,2.106,93,1.374,98,2.294,110,1.242,126,1.588,134,1.149,139,1.022,142,1.087,148,1.739,169,1.306,183,1.454,189,2.959,191,1.189,198,1.362,228,1.13,248,1.181,278,2.183,286,2.87,291,1.333,314,2.071,318,0.694,323,0.985,324,0.98,325,1.797,328,0.989,347,1.585,360,4.442,361,1.446,364,1.436,365,1.318,369,1.392,386,1.123,401,1.566,402,1.983,417,1.217,453,3.229,471,2.071,493,2.123,519,1.533,542,1.321,545,1.901,551,2.275,589,1.652,626,1.72,638,1.209,651,0.984,662,1.895,676,0.581,703,1.514,705,1.026,722,2.315,730,2.239,731,1.945,862,2.024,887,1.698,898,1.879,950,2.253,955,1.911,956,1.635,964,1.836,966,2.071,1000,1.718,1018,1.836,1035,2.183,1082,1.708,1183,3.89,1187,3.48,1489,2.152,1490,4.579,1510,2.071,1515,3.08,1516,2.647,1528,2.294,1679,1.983,1718,2.976,1746,2.024,1961,2.697,2337,2.389,2370,4.136,2401,7.853,2414,2.216,2871,3.15,2877,4.79,2878,2.389,3270,2.595,3449,2.447,3894,2.833,3938,2.447,4029,4.135,4030,2.595,4033,2.514,4034,2.697,4036,2.595,4037,2.595,4038,2.595,4039,2.595,4040,2.595,4041,2.595,4042,2.595,4043,2.595,4044,2.595,4045,2.595,4046,2.595,4047,2.595,4048,2.595,4049,2.595,4050,2.595,4051,2.595,4053,2.595,4054,4.557,4055,4.557,4056,4.557,4057,2.595,4058,2.697,4059,2.833,4060,2.833,5557,2.833,5558,2.833,5560,2.833,5561,2.833,5562,2.833,5563,2.833,5564,2.833,5573,2.833]],["component/276",[220,0.615]],["title/277-1",[676,17.814]],["name/277-1",[]],["text/277-1",[]],["component/277-1",[]],["title/277-2",[317,18.84,318,16.799]],["name/277-2",[]],["text/277-2",[]],["component/277-2",[]],["title/277-3",[216,25.746,651,23.799]],["name/277-3",[]],["text/277-3",[]],["component/277-3",[]],["title/277-4",[51,38.606,651,23.799]],["name/277-4",[]],["text/277-4",[]],["component/277-4",[]],["title/277-5",[438,44.096,651,23.799]],["name/277-5",[]],["text/277-5",[]],["component/277-5",[]],["title/277-6",[183,20.814,651,23.799]],["name/277-6",[]],["text/277-6",[]],["component/277-6",[]],["title/277",[705,24.813,2891,59.201]],["name/277",[5574,3.92]],["text/277",[2,2.407,8,0.502,14,0.858,21,2.843,22,1.936,34,0.893,38,1.281,41,1.693,46,0.625,49,1.91,51,4.803,60,1.5,64,0.994,66,2.865,71,0.885,74,1.137,84,3.128,92,1.84,93,3.85,95,1.109,96,1.738,99,0.997,109,1.291,131,0.776,133,1.177,135,1.217,139,0.835,141,1.291,142,1.544,143,3.294,150,2.427,160,1.978,163,0.967,172,2.757,176,2.692,182,1.523,183,3.336,205,1.43,219,1.361,228,0.923,246,1.585,247,1.185,254,1.297,260,1.448,262,2.041,310,0.895,317,1.106,318,0.567,319,1.379,323,0.805,324,0.801,328,0.808,347,0.766,364,2.04,383,2.323,386,0.917,390,2.033,393,1.448,416,1.291,417,1.73,432,1.134,447,3.271,479,1.194,501,2.206,515,1.965,528,1.5,542,1.079,545,0.919,547,1.126,551,2.337,554,1.364,556,1.285,562,2.608,589,2.347,626,2.359,630,4.849,639,1.937,645,1.252,651,0.804,676,1.309,690,1.654,700,1.672,704,1.636,705,1.457,708,1.052,721,0.956,722,1.119,730,2.987,733,2.649,739,1.575,798,1.153,812,3.514,836,2.715,890,1.841,898,2.67,931,2.36,1000,2.441,1001,2.373,1048,1.548,1082,3.849,1095,1.336,1150,2.764,1154,2.942,1187,1.102,1391,1.372,1406,1.379,1498,1.758,1599,1.212,1681,5.372,1851,1.783,1879,1.387,1909,1.535,1946,4.893,2379,2.79,2442,3.008,2445,1.999,2641,2.335,2642,2.441,2808,2.978,2821,1.952,2891,9.053,3955,1.523,4185,1.62,4233,1.91,5357,3.259,5575,2.203,5576,2.314,5577,5.34,5578,2.483]],["component/277",[220,0.615]],["title/278-1",[676,17.814]],["name/278-1",[]],["text/278-1",[]],["component/278-1",[]],["title/278-2",[317,18.84,318,16.799]],["name/278-2",[]],["text/278-2",[]],["component/278-2",[]],["title/278-3",[216,25.746,651,23.799]],["name/278-3",[]],["text/278-3",[]],["component/278-3",[]],["title/278-4",[347,28.782]],["name/278-4",[]],["text/278-4",[]],["component/278-4",[]],["title/278-5",[183,20.814,651,23.799]],["name/278-5",[]],["text/278-5",[]],["component/278-5",[]],["title/278",[219,23.177,2891,59.201]],["name/278",[5579,3.92]],["text/278",[8,0.654,14,1.118,21,3.462,22,2.035,38,0.959,41,2.122,46,0.814,49,2.326,51,2.841,60,1.438,64,1.296,66,3.412,71,1.152,74,1.482,78,1.497,89,2.974,92,2.191,93,1.463,96,2.179,103,1.449,129,1.675,142,1.936,143,1.099,150,3.042,160,2.48,163,2.717,172,2.179,183,3.215,191,1.265,219,1.706,228,1.203,241,1.528,246,1.188,310,1.166,318,0.739,323,1.049,324,1.043,328,1.052,341,2.897,386,1.195,389,1.218,391,1.611,398,2.038,501,2.765,522,1.69,540,1.364,542,1.406,551,1.103,554,1.777,556,1.675,562,4.215,571,3.834,591,2.034,626,3.106,676,1.333,720,1.645,890,2.398,910,1.732,931,3.814,982,3.078,1000,3.06,1001,2.974,1006,2.231,1071,3.117,1082,4.585,1085,1.638,1406,1.797,1507,3.476,1855,1.653,1909,2,1933,3.531,1946,5.959,2354,3.732,2442,3.663,2445,2.604,2808,2.231,2891,9.442,2901,2.398,2939,3.832,3828,2.762,5298,3.015,5573,8.462,5575,2.87,5576,8.462,5577,6.504,5580,8.157,5581,3.235,5582,9.078,5583,8.157,5584,5.412,5585,3.235,5586,3.015,5587,5.412]],["component/278",[220,0.615]],["title/279-1",[676,17.814]],["name/279-1",[]],["text/279-1",[]],["component/279-1",[]],["title/279-2",[317,18.84,318,16.799]],["name/279-2",[]],["text/279-2",[]],["component/279-2",[]],["title/279-3",[60,16.431]],["name/279-3",[]],["text/279-3",[]],["component/279-3",[]],["title/279-4",[24,19.438,651,23.799]],["name/279-4",[]],["text/279-4",[]],["component/279-4",[]],["title/279-5",[515,33.47,651,23.799]],["name/279-5",[]],["text/279-5",[]],["component/279-5",[]],["title/279-6",[183,20.814,651,23.799]],["name/279-6",[]],["text/279-6",[]],["component/279-6",[]],["title/279-7",[47,30.238,219,19.134,651,19.647]],["name/279-7",[]],["text/279-7",[]],["component/279-7",[]],["title/279-8",[527,41.643]],["name/279-8",[]],["text/279-8",[]],["component/279-8",[]],["title/279",[24,13.663,171,24.955,208,26.641,515,23.526]],["name/279",[5588,3.92]],["text/279",[2,2.343,8,0.481,22,1.038,24,3.476,33,3.654,38,0.706,49,3.457,60,1.464,64,0.953,71,2.369,72,1.379,78,1.101,84,1.086,89,3.654,92,1.117,93,2.507,109,1.237,124,1.205,131,0.744,133,1.128,138,0.965,143,2.567,171,3.647,176,2.594,183,3.839,203,1.18,208,2.857,212,2.205,216,0.833,219,2.096,239,1.171,247,1.136,262,1.482,271,1.537,299,1.14,310,2.397,312,3.063,317,0.61,318,0.543,319,1.322,320,1.105,323,0.771,324,0.767,328,0.774,364,1.124,386,0.879,390,1.958,393,1.388,396,0.827,401,1.226,403,2.945,423,1.028,432,1.086,447,1.986,501,2.832,513,2.897,515,3.027,523,1.509,528,1.437,542,3.888,545,2.462,547,1.079,551,1.419,589,2.262,626,2.675,639,3.208,645,1.2,646,3.374,676,1.443,690,1.585,703,2.072,704,1.568,721,2.908,724,2.477,730,2.417,733,2.552,739,1.509,740,1.764,779,1.388,780,1.471,786,3.581,804,1.379,836,2.616,884,1.523,925,1.307,970,5.018,1103,4.755,1138,3.412,1154,2.834,1231,1.255,1298,1.397,1470,3.14,1599,1.162,1851,1.709,1879,1.329,2379,2.688,2385,1.345,2442,1.249,2641,2.25,2642,2.352,2668,1.968,2821,1.87,3213,2.906,3955,1.459,3983,1.641,4185,1.552,4335,3.442,4340,1.915,5357,3.14,5589,2.217]],["component/279",[220,0.615]],["title/280-1",[676,17.814]],["name/280-1",[]],["text/280-1",[]],["component/280-1",[]],["title/280-2",[317,18.84,318,16.799]],["name/280-2",[]],["text/280-2",[]],["component/280-2",[]],["title/280-3",[60,16.431]],["name/280-3",[]],["text/280-3",[]],["component/280-3",[]],["title/280-4",[1406,51.802]],["name/280-4",[]],["text/280-4",[]],["component/280-4",[]],["title/280-5",[66,38.994]],["name/280-5",[]],["text/280-5",[]],["component/280-5",[]],["title/280-6",[127,47.513,1490,38.425]],["name/280-6",[]],["text/280-6",[]],["component/280-6",[]],["title/280-7",[24,19.438,586,50.71]],["name/280-7",[]],["text/280-7",[]],["component/280-7",[]],["title/280-8",[381,45.47,2526,53.626]],["name/280-8",[]],["text/280-8",[]],["component/280-8",[]],["title/280",[1048,58.13]],["name/280",[1048,2.444]],["text/280",[2,0.489,5,0.884,8,0.803,11,0.683,12,0.831,17,2.417,19,1.061,20,1.844,21,1.97,22,2.703,24,2.607,27,1.23,33,1.581,34,1.035,37,1.89,38,1.178,40,1.264,46,0.724,49,1.634,60,1.333,61,2.26,62,1.264,66,2.937,68,0.742,71,0.561,74,0.722,92,1.067,95,0.704,115,0.644,125,3.843,126,2.562,127,7.912,131,0.9,138,2.314,142,0.564,143,1.35,162,1.042,163,0.614,165,0.852,168,1.244,171,0.761,172,0.634,174,0.831,183,3.124,191,1.918,196,0.835,199,0.689,212,1.525,216,1.008,228,0.586,236,2.452,246,1.057,247,1.896,254,2.075,286,1.608,299,1.379,318,0.36,323,0.511,324,0.508,328,0.513,341,0.844,347,1.226,361,0.75,364,1.876,381,3.032,386,1.063,390,0.742,392,3.241,396,2.226,453,2.497,515,4.042,545,1.815,547,1.306,571,2.694,586,6.595,620,0.857,626,2.382,633,0.896,638,0.627,651,1.847,676,1.09,677,0.844,689,0.697,703,0.785,716,2.399,728,1.101,730,1.255,731,1.009,736,2.116,753,0.823,754,1.213,798,1.336,864,0.925,887,0.881,919,1.039,959,4.717,960,0.755,969,0.773,1000,2.245,1001,1.581,1006,1.985,1032,1.061,1048,3.057,1082,3.946,1095,0.848,1103,3.818,1134,2.067,1138,1.477,1150,4.101,1340,0.967,1387,2.01,1406,4.934,1490,1.504,1595,2.348,1643,0.959,1647,1.189,1649,1.189,1765,3.522,1898,3.773,1909,0.974,1928,1.825,1933,1.028,1951,1.398,2035,0.938,2268,2.099,2442,1.511,2526,1.149,2651,1.825,2666,1.859,2782,2.01,2904,2.317,3503,1.213,3828,2.457,3986,1.878,4266,5.3,4348,2.457,4352,3.197,4773,1.213,5590,6.714,5591,4.873,5592,2.554,5593,1.469,5594,2.878,5595,1.469,5596,1.576,5597,2.682,5598,1.576,5599,4.056,5600,1.576,5601,2.878,5602,1.576,5603,1.576,5604,1.576,5605,1.469]],["component/280",[220,0.615]],["title/281-1",[676,17.814]],["name/281-1",[]],["text/281-1",[]],["component/281-1",[]],["title/281-2",[317,18.84,318,16.799]],["name/281-2",[]],["text/281-2",[]],["component/281-2",[]],["title/281-3",[60,16.431]],["name/281-3",[]],["text/281-3",[]],["component/281-3",[]],["title/281",[705,24.813,1085,37.244]],["name/281",[705,0.782,1085,1.173]],["text/281",[8,1.598,22,1.972,38,2.344,46,3.419,92,2.874,137,3.906,183,3.029,318,1.806,323,2.563,324,2.55,328,2.571,362,4.706,396,2.747,401,4.074,494,5.787,556,5.54,626,2.038,660,3.906,705,4.387,739,5.014,967,3.552,1058,4.97,1085,7.092,1092,5.965,1148,6.082]],["component/281",[220,0.615]],["title/282-1",[676,17.814]],["name/282-1",[]],["text/282-1",[]],["component/282-1",[]],["title/282-2",[317,18.84,318,16.799]],["name/282-2",[]],["text/282-2",[]],["component/282-2",[]],["title/282",[219,23.177,1085,37.244]],["name/282",[219,0.73,1085,1.173]],["text/282",[8,1.917,38,2.813,46,3.512,92,3.239,137,5.959,191,3.71,219,3.801,318,2.167,323,3.075,324,3.059,328,3.085,556,4.91,660,4.686,703,4.724,1085,6.716]],["component/282",[220,0.615]],["title/283-1",[676,17.814]],["name/283-1",[]],["text/283-1",[]],["component/283-1",[]],["title/283-2",[317,18.84,318,16.799]],["name/283-2",[]],["text/283-2",[]],["component/283-2",[]],["title/283-3",[60,16.431]],["name/283-3",[]],["text/283-3",[]],["component/283-3",[]],["title/283-4",[5,18.651,255,24.375,317,15.553]],["name/283-4",[]],["text/283-4",[]],["component/283-4",[]],["title/283",[133,34.859,208,37.901]],["name/283",[5606,3.92]],["text/283",[5,2.84,8,0.992,16,1.821,22,2.592,25,2.086,38,1.455,46,1.906,54,2.774,60,1.629,92,3.519,96,1.975,115,2.005,124,2.486,133,5.861,143,2.573,144,2.159,172,1.975,183,3.178,198,2.199,203,2.435,205,4.359,207,5.613,208,5.356,228,1.824,246,1.802,255,3.04,262,2.697,272,2.882,275,4.013,313,2.774,317,1.257,318,1.121,323,1.591,324,1.583,328,1.596,369,3.468,378,2.564,396,1.705,527,2.192,545,1.817,626,2.383,638,1.951,639,4.18,676,0.938,677,2.627,705,2.555,727,3.086,734,2.406,753,2.564,781,5.437,969,2.406,982,4.306,1073,4.23,1151,2.627,2277,3.858,2354,3.384,2657,4.802,2784,4.574]],["component/283",[220,0.615]],["title/284-1",[676,17.814]],["name/284-1",[]],["text/284-1",[]],["component/284-1",[]],["title/284-2",[317,18.84,318,16.799]],["name/284-2",[]],["text/284-2",[]],["component/284-2",[]],["title/284-3",[60,16.431]],["name/284-3",[]],["text/284-3",[]],["component/284-3",[]],["title/284",[114,43.476,2330,45.47]],["name/284",[5607,3.92]],["text/284",[2,2.469,8,1.059,22,2.401,32,2.362,38,3.429,60,1.403,79,2.258,92,3.657,99,3.196,114,8.05,131,1.638,183,2.253,191,2.049,205,5.542,258,3.453,264,4.554,279,5.193,317,1.342,318,1.197,323,1.698,324,1.69,328,1.704,347,1.617,365,2.271,393,5.614,394,5.142,545,1.939,597,2.833,639,1.771,645,4.854,676,1.001,705,1.768,736,2.79,916,4.209,1122,4.217,1187,5.132,1285,4.875,2246,4.334,2330,4.921,2332,6.408,2348,3.056,3447,4.031,4095,3.528,4275,9.801]],["component/284",[220,0.615]],["title/285-1",[676,17.814]],["name/285-1",[]],["text/285-1",[]],["component/285-1",[]],["title/285-2",[317,18.84,318,16.799]],["name/285-2",[]],["text/285-2",[]],["component/285-2",[]],["title/285-3",[962,49.665]],["name/285-3",[]],["text/285-3",[]],["component/285-3",[]],["title/285-4",[60,16.431]],["name/285-4",[]],["text/285-4",[]],["component/285-4",[]],["title/285-5",[5,18.651,255,24.375,317,15.553]],["name/285-5",[]],["text/285-5",[]],["component/285-5",[]],["title/285",[639,20.521,1503,45.812,2330,37.537]],["name/285",[5608,3.92]],["text/285",[5,1.91,8,0.559,16,1.025,22,1.838,29,1.394,32,1.246,34,0.994,38,2.867,40,0.88,46,1.192,49,1.579,53,1.634,60,0.487,62,2.638,92,3.141,93,2.811,95,1.234,96,1.112,118,3.227,126,1.444,139,0.929,144,1.216,180,1.31,183,3.31,189,1.043,191,3.241,199,1.209,216,0.968,218,1.099,219,2.322,255,1.902,291,1.212,299,1.325,317,0.708,318,0.631,319,2.632,323,0.896,324,0.892,328,0.899,365,2.054,396,0.96,398,3.12,399,3.797,417,1.107,420,1.306,423,1.195,494,5.227,499,2.122,512,1.634,513,1.444,521,2.129,528,1.67,551,3.297,581,1.582,622,2.632,626,1.603,639,4.75,660,1.366,676,0.528,720,2.41,722,1.246,736,3.311,798,1.283,806,3.122,832,6.133,956,1.487,965,2.084,1071,2.116,1151,1.48,1187,4.728,1301,4.017,1391,2.617,1438,1.93,1503,3.575,1507,1.377,1671,3.844,1701,1.957,1718,2.745,2330,7.043,2341,7.568,2442,1.451,4278,1.93,5609,2.764,5610,2.576,5611,2.764]],["component/285",[220,0.615]],["title/286-1",[676,17.814]],["name/286-1",[]],["text/286-1",[]],["component/286-1",[]],["title/286-2",[317,18.84,318,16.799]],["name/286-2",[]],["text/286-2",[]],["component/286-2",[]],["title/286-3",[60,16.431]],["name/286-3",[]],["text/286-3",[]],["component/286-3",[]],["title/286",[5,22.593,705,24.813]],["name/286",[5,0.712,705,0.782]],["text/286",[1,4.428,2,3.659,3,2.767,5,3.905,8,2.085,16,3.826,34,3.711,62,3.283,92,2.77,112,2.864,135,3.671,139,2.518,142,2.678,156,3.442,183,2.12,189,2.826,219,3.718,275,3.969,318,1.711,323,2.428,324,2.416,328,2.436,386,2.767,447,3.576,479,3.602,519,3.777,626,1.931,638,2.978,695,5.044,705,2.527,721,2.883,1412,5.762,1681,6.927]],["component/286",[220,0.615]],["title/287-1",[676,17.814]],["name/287-1",[]],["text/287-1",[]],["component/287-1",[]],["title/287-2",[317,18.84,318,16.799]],["name/287-2",[]],["text/287-2",[]],["component/287-2",[]],["title/287-3",[962,49.665]],["name/287-3",[]],["text/287-3",[]],["component/287-3",[]],["title/287-4",[60,16.431]],["name/287-4",[]],["text/287-4",[]],["component/287-4",[]],["title/287-5",[216,32.645]],["name/287-5",[]],["text/287-5",[]],["component/287-5",[]],["title/287-6",[5,18.651,255,24.375,651,19.647]],["name/287-6",[]],["text/287-6",[]],["component/287-6",[]],["title/287-7",[5,19.737,92,10.703,255,25.793,1151,21.333]],["name/287-7",[]],["text/287-7",[]],["component/287-7",[]],["title/287-8",[60,12.959,651,23.799]],["name/287-8",[]],["text/287-8",[]],["component/287-8",[]],["title/287",[5,22.593,255,29.526]],["name/287",[5612,3.92]],["text/287",[2,0.754,5,3.428,8,0.492,14,1.721,16,0.487,22,1.684,24,2.128,34,0.472,38,1.672,39,1.174,40,0.774,41,0.514,42,1.618,46,3.057,49,0.437,52,0.562,60,1.35,61,1.496,62,2.3,63,2.673,64,0.526,71,0.866,72,0.76,74,0.601,77,0.472,79,0.566,80,0.449,82,0.477,92,3.501,96,2.269,99,2.902,100,0.76,106,0.579,111,0.751,112,0.502,121,3.631,133,2.01,134,0.92,138,0.532,139,1.675,144,1.07,156,0.603,162,0.475,163,1.651,183,3.312,184,0.957,189,0.918,191,2.435,199,0.574,216,0.459,217,0.751,218,0.967,220,0.508,246,0.482,248,0.51,255,4.917,256,3.414,257,6.517,259,0.973,262,0.866,271,0.848,273,0.733,289,1.48,291,3.532,308,0.646,311,0.742,316,1.438,318,0.3,323,0.425,324,0.423,328,0.427,347,1.309,362,0.781,364,0.62,365,1.838,367,0.706,369,0.601,380,0.973,396,0.845,404,0.832,408,0.659,417,0.974,420,4.407,423,0.567,425,1.295,451,0.973,479,2.04,482,0.581,521,1.527,525,0.654,529,1.638,542,2.451,549,0.603,551,2.747,552,1.056,555,1.477,556,1.259,568,0.613,620,0.713,626,1.741,634,0.648,639,0.444,642,0.832,650,0.874,651,1.1,676,0.81,677,0.702,678,0.71,697,0.713,702,0.689,703,3.101,705,1.146,708,0.556,720,1.728,721,3.483,724,1.448,736,0.699,786,0.622,804,0.76,830,0.776,837,0.702,848,1.164,864,0.77,910,1.302,925,0.721,929,0.856,955,0.825,956,0.706,965,1.865,967,1.093,969,0.643,1085,2.148,1088,0.856,1103,1.46,1149,1.982,1150,2.714,1151,3.332,1177,1.542,1187,1.079,1226,0.765,1231,0.692,1232,1.12,1273,0.848,1293,0.729,1305,0.805,1334,0.577,1461,0.77,1482,0.84,1526,1.031,1665,1.721,1671,0.811,1675,0.825,1879,0.733,1971,0.811,2302,0.865,2348,0.765,2384,1.164,2400,4.6,2437,0.894,2641,1.315,2642,1.375,2843,1.586,2854,1.12,2888,1.056,5613,1.312,5614,1.312,5615,1.312,5616,1.312,5617,1.312,5618,1.223,5619,1.223,5620,1.312,5621,1.312,5622,1.312,5623,1.223,5624,1.312,5625,2.431,5626,1.312,5627,1.312,5628,1.312,5629,1.312]],["component/287",[220,0.615]],["title/288-1",[676,17.814]],["name/288-1",[]],["text/288-1",[]],["component/288-1",[]],["title/288-2",[317,18.84,318,16.799]],["name/288-2",[]],["text/288-2",[]],["component/288-2",[]],["title/288-3",[60,16.431]],["name/288-3",[]],["text/288-3",[]],["component/288-3",[]],["title/288",[5,18.651,191,23.745,1486,33.54]],["name/288",[5630,3.92]],["text/288",[2,2.657,5,1.775,8,0.708,22,0.873,38,2.541,49,4.019,60,0.617,92,2.742,99,1.405,143,1.964,183,4.257,191,1.369,219,3.897,318,0.8,323,1.135,324,1.129,328,1.139,545,5.027,551,1.194,626,3.419,639,3.205,676,0.669,689,1.549,705,1.95,730,4.135,844,2.22,1159,3.106,1486,3.193,1527,7.647,1633,6.065,1671,5.297,1718,3.349,2641,4.633,2642,4.843,2657,3.665,2782,5.984,3455,2.818,3955,5.817,4385,5.127,5631,5.386]],["component/288",[220,0.615]],["title/289-1",[676,17.814]],["name/289-1",[]],["text/289-1",[]],["component/289-1",[]],["title/289-2",[317,18.84,318,16.799]],["name/289-2",[]],["text/289-2",[]],["component/289-2",[]],["title/289-3",[60,16.431]],["name/289-3",[]],["text/289-3",[]],["component/289-3",[]],["title/289-4",[216,32.645]],["name/289-4",[]],["text/289-4",[]],["component/289-4",[]],["title/289-5",[216,21.255,347,18.74,651,19.647]],["name/289-5",[]],["text/289-5",[]],["component/289-5",[]],["title/289-6",[347,18.74,651,19.647,2892,47.718]],["name/289-6",[]],["text/289-6",[]],["component/289-6",[]],["title/289-7",[183,17.183,219,19.134,651,19.647]],["name/289-7",[]],["text/289-7",[]],["component/289-7",[]],["title/289",[214,35.647,2712,37.238,2892,47.718]],["name/289",[5632,3.92]],["text/289",[2,0.863,8,1.263,10,2.242,12,1.467,20,1.292,22,2.263,24,2.199,27,2.036,38,3.168,46,0.7,49,3.023,57,1.834,62,2.648,71,1.697,80,0.952,84,1.27,92,2.234,112,2.829,135,1.364,139,0.935,142,1.704,143,0.945,168,2.059,170,3.835,171,3.572,172,1.12,173,2.922,174,1.467,183,3.462,184,2.029,191,1.088,197,1.834,198,1.246,199,1.217,208,1.434,212,2.525,214,4.344,216,1.668,217,1.592,218,4.067,219,0.877,228,1.034,234,1.634,236,1.391,291,1.22,300,1.409,311,1.573,318,0.636,323,0.902,324,0.897,328,0.905,347,2.284,364,2.25,386,1.028,396,0.967,416,1.447,420,5.231,435,1.815,440,3.14,508,2.14,520,1.645,527,1.242,529,1.874,547,2.161,551,3.308,626,1.611,639,1.61,651,2.022,661,3.164,676,1.414,689,2.108,705,1.607,708,1.179,720,1.415,721,1.834,730,2.724,739,1.765,780,2.945,786,1.319,795,3.245,798,1.292,812,2.578,832,1.602,837,1.489,864,1.634,914,3.327,925,1.529,1069,1.853,1085,1.409,1295,3.327,1447,1.895,1516,3.22,1584,1.645,1837,1.918,1838,3.372,1846,2.24,1932,1.969,2348,4.315,2350,1.504,2397,2.816,2712,1.706,2713,1.853,2820,2.468,2850,1.765,2892,7.13,2913,2.376,3151,2.593,3986,3.108,5411,2.593,5633,2.782,5634,2.782,5635,2.782,5636,2.782,5637,2.593]],["component/289",[220,0.615]],["title/290-1",[676,17.814]],["name/290-1",[]],["text/290-1",[]],["component/290-1",[]],["title/290-2",[317,18.84,318,16.799]],["name/290-2",[]],["text/290-2",[]],["component/290-2",[]],["title/290-3",[60,16.431]],["name/290-3",[]],["text/290-3",[]],["component/290-3",[]],["title/290-4",[216,32.645]],["name/290-4",[]],["text/290-4",[]],["component/290-4",[]],["title/290-5",[60,10.698,651,19.647,1071,27.113]],["name/290-5",[]],["text/290-5",[]],["component/290-5",[]],["title/290-6",[1071,32.842,1677,38.606]],["name/290-6",[]],["text/290-6",[]],["component/290-6",[]],["title/290-7",[139,20.411,1071,27.113,1677,31.871]],["name/290-7",[]],["text/290-7",[]],["component/290-7",[]],["title/290",[1071,32.842,1447,50.099]],["name/290",[5638,3.92]],["text/290",[8,0.722,22,2.392,32,3.376,38,1.06,46,0.899,47,1.78,61,1.261,62,1.137,78,2.72,80,1.223,82,1.299,92,2.575,93,3.386,96,2.366,103,2.633,112,2.248,131,2.713,142,2.102,143,1.998,159,4.322,163,1.391,169,4.685,172,3.014,183,3.339,191,2.929,195,2.084,200,2.711,204,2.904,218,1.421,228,1.328,318,0.816,323,1.158,324,1.153,328,1.162,369,1.637,386,1.32,520,2.113,521,1.606,542,3.772,581,5.487,626,2.659,638,1.421,639,1.987,661,1.81,674,3.525,676,0.683,705,1.206,753,3.071,855,3.874,916,1.563,965,2.586,1071,5.559,1149,2.084,1285,3.792,1447,8.036,1613,2.38,1677,5.414,1849,2.406,2341,3.525,2348,5.593,2370,1.885,2572,6.675,2922,4.523,4278,5.23,5639,3.171,5640,5.216,5641,3.573,5642,3.573,5643,3.171,5644,5.019,5645,3.573,5646,3.573,5647,3.573]],["component/290",[220,0.615]],["title/291-1",[676,17.814]],["name/291-1",[]],["text/291-1",[]],["component/291-1",[]],["title/291-2",[317,18.84,318,16.799]],["name/291-2",[]],["text/291-2",[]],["component/291-2",[]],["title/291-3",[60,16.431]],["name/291-3",[]],["text/291-3",[]],["component/291-3",[]],["title/291-4",[216,32.645]],["name/291-4",[]],["text/291-4",[]],["component/291-4",[]],["title/291-5",[60,10.698,651,19.647,705,20.484]],["name/291-5",[]],["text/291-5",[]],["component/291-5",[]],["title/291-6",[651,23.799,1677,38.606]],["name/291-6",[]],["text/291-6",[]],["component/291-6",[]],["title/291-7",[183,20.814,651,23.799]],["name/291-7",[]],["text/291-7",[]],["component/291-7",[]],["title/291-8",[139,31.349]],["name/291-8",[]],["text/291-8",[]],["component/291-8",[]],["title/291-9",[1138,37.733,1677,38.606]],["name/291-9",[]],["text/291-9",[]],["component/291-9",[]],["title/291-10",[46,18.508,781,52.812]],["name/291-10",[]],["text/291-10",[]],["component/291-10",[]],["title/291",[705,24.813,1447,50.099]],["name/291",[5648,3.92]],["text/291",[2,2.348,3,0.618,5,0.271,8,0.614,22,1.955,29,2.105,31,1.715,32,0.397,33,0.484,34,0.859,38,2.324,46,1.906,47,0.833,48,0.439,49,1.21,51,0.878,53,0.521,60,1.114,61,1.072,62,1.896,63,0.417,64,0.353,65,1.944,66,0.368,71,0.596,74,0.403,76,0.536,78,1.406,79,1.029,80,0.301,82,0.608,84,2.539,92,1.379,93,0.398,95,0.393,96,0.354,99,0.354,100,0.51,112,0.913,115,0.36,120,0.545,124,1.209,127,0.569,131,4.414,133,0.793,138,0.678,139,1.221,142,1.086,143,0.568,159,4.258,160,0.403,163,1.625,165,1.963,169,3.578,172,0.961,183,3.586,189,0.332,195,0.514,199,0.385,200,1.674,205,2.403,216,0.836,217,0.957,218,0.95,219,2.203,228,0.327,236,0.44,246,1.532,248,0.342,262,0.851,267,0.469,317,0.226,318,0.201,323,0.285,324,0.284,328,0.286,347,0.737,364,0.416,365,1.574,383,0.9,385,1.566,386,1.341,389,0.332,391,1.513,396,1.262,397,0.587,401,0.454,404,0.559,424,0.435,447,0.42,454,0.6,459,0.653,480,0.51,481,0.484,491,2.193,494,0.476,518,0.951,520,0.521,521,1.073,522,0.874,524,0.569,526,3.094,527,0.747,529,0.593,535,0.521,542,1.579,545,0.884,551,2.84,554,0.484,555,0.727,565,0.914,581,3.815,589,0.479,604,2.046,609,0.495,626,2.61,638,0.35,639,0.807,646,1.849,651,1.512,655,0.545,660,0.435,663,0.569,676,0.319,677,0.471,678,1.291,703,2.328,705,1.732,708,0.373,721,2.434,722,0.397,734,0.432,736,1.272,753,0.874,775,0.575,780,0.545,781,5.438,784,0.653,786,0.417,798,0.776,812,2.119,815,0.575,829,0.559,867,1.383,916,0.385,929,0.575,965,1.597,967,0.396,969,0.432,1017,4.122,1018,1.442,1085,0.446,1138,3.586,1149,1.772,1187,0.742,1197,0.665,1293,2.852,1298,1.402,1334,2.446,1391,0.924,1447,6.235,1469,0.821,1479,0.752,1486,0.924,1533,0.521,1613,0.587,1645,2.283,1651,0.678,1670,3.149,1673,2.215,1677,5.077,1681,0.982,1682,0.709,1857,1.102,1879,0.492,2201,1.262,2350,0.476,2366,0.6,2370,1.602,2397,0.521,2414,0.642,2594,0.821,2843,0.575,2850,0.559,2897,0.593,2976,0.728,2977,1.975,2993,0.781,3366,0.607,3370,2.513,4095,1.608,4176,0.752,4429,3.703,4710,0.709,4736,0.781,4773,1.287,5528,0.821,5649,1.672,5650,1.975,5651,0.881,5652,1.559,5653,0.881,5654,0.881,5655,0.881,5656,0.881,5657,0.881,5658,1.672,5659,0.881,5660,0.881,5661,0.881,5662,1.672,5663,0.881,5664,0.881,5665,0.881,5666,0.881,5667,0.881,5668,1.672,5669,4.673,5670,0.821,5671,0.728,5672,0.881]],["component/291",[220,0.615]],["title/292-1",[676,17.814]],["name/292-1",[]],["text/292-1",[]],["component/292-1",[]],["title/292-2",[317,18.84,318,16.799]],["name/292-2",[]],["text/292-2",[]],["component/292-2",[]],["title/292-3",[60,16.431]],["name/292-3",[]],["text/292-3",[]],["component/292-3",[]],["title/292-4",[216,32.645]],["name/292-4",[]],["text/292-4",[]],["component/292-4",[]],["title/292-5",[60,10.698,219,19.134,651,19.647]],["name/292-5",[]],["text/292-5",[]],["component/292-5",[]],["title/292-6",[169,22.217,183,14.631,651,16.729,5640,45.864]],["name/292-6",[]],["text/292-6",[]],["component/292-6",[]],["title/292-7",[139,31.349]],["name/292-7",[]],["text/292-7",[]],["component/292-7",[]],["title/292-8",[38,21.809,705,24.813]],["name/292-8",[]],["text/292-8",[]],["component/292-8",[]],["title/292-9",[169,26.093,183,17.183,678,32.83]],["name/292-9",[]],["text/292-9",[]],["component/292-9",[]],["title/292-10",[169,31.608,1486,40.627]],["name/292-10",[]],["text/292-10",[]],["component/292-10",[]],["title/292-11",[385,31.289,651,19.647,5673,53.866]],["name/292-11",[]],["text/292-11",[]],["component/292-11",[]],["title/292-12",[139,20.411,385,31.289,5673,53.866]],["name/292-12",[]],["text/292-12",[]],["component/292-12",[]],["title/292",[219,23.177,1447,50.099]],["name/292",[5674,3.92]],["text/292",[8,0.403,16,0.74,22,2.336,29,1.423,32,0.478,34,1.281,38,1.591,40,1.708,46,0.267,47,0.529,53,1.668,60,0.85,61,0.704,62,2.98,64,0.425,71,0.711,78,4.005,79,1.216,80,1.651,82,0.725,89,0.583,92,1.295,93,0.48,100,5.297,103,1.595,112,1.361,115,0.434,117,1.127,124,0.537,131,3.519,138,1.444,139,0.671,142,0.713,143,0.959,159,1.773,163,1.644,165,0.574,169,4.619,172,0.427,177,0.562,180,0.503,183,3.627,185,0.854,196,0.562,200,1.301,201,1.09,204,0.524,214,0.623,217,0.607,218,0.422,219,1.52,228,1.57,236,0.531,246,0.39,251,0.549,308,0.522,318,0.242,323,0.344,324,0.342,328,0.345,341,2.872,344,0.51,347,1.656,354,0.636,361,0.949,364,0.501,365,0.46,385,4.825,386,1.315,398,1.59,417,0.425,420,0.942,499,0.475,513,1.474,518,0.603,521,0.477,524,0.686,525,0.529,527,0.891,540,3.149,542,2.332,547,0.905,551,3.118,555,0.461,560,1.827,581,4.637,589,0.577,597,0.574,607,0.707,612,0.611,618,0.854,626,2.011,634,1.759,638,0.422,639,0.954,646,0.646,651,1.736,661,1.803,667,0.878,676,0.539,678,0.574,689,1.575,695,1.343,702,0.557,703,1.405,705,0.358,719,0.834,720,3.966,721,2.43,722,0.478,730,0.87,753,1.042,779,4.149,780,3.317,816,0.878,855,0.699,867,2.945,890,2.092,908,0.641,915,0.619,916,2.346,919,0.699,958,0.715,965,0.467,967,0.477,1001,0.583,1017,1.479,1071,0.474,1098,0.732,1149,0.619,1154,1.359,1155,0.751,1177,0.673,1231,1.052,1264,0.627,1285,1.01,1293,0.59,1391,5.05,1406,1.568,1444,0.751,1447,5.088,1486,1.967,1491,0.762,1507,4.663,1533,1.668,1613,1.328,1633,0.751,1635,0.707,1641,3.936,1674,0.762,1855,1.019,1879,1.577,2062,0.751,2265,0.715,2348,3.682,2370,1.878,2414,0.774,2513,0.989,2572,2.171,2708,0.854,2713,0.707,2870,0.646,2901,5.537,2918,1.65,2922,1.535,2976,1.65,2977,0.878,3439,3.4,3447,0.816,3452,0.834,3839,0.942,4083,2.129,4335,0.878,4628,0.774,4769,0.942,5640,4.278,5673,0.942,5675,1.061,5676,0.989,5677,4.821,5678,1.859,5679,1.061,5680,1.061,5681,0.989,5682,1.061,5683,1.061,5684,1.061,5685,1.061,5686,1.061,5687,1.061,5688,1.061,5689,1.061,5690,1.061,5691,1.994,5692,2.821,5693,2.821,5694,1.994,5695,1.994,5696,1.061]],["component/292",[220,0.615]],["title/293-1",[676,17.814]],["name/293-1",[]],["text/293-1",[]],["component/293-1",[]],["title/293-2",[317,18.84,318,16.799]],["name/293-2",[]],["text/293-2",[]],["component/293-2",[]],["title/293-3",[60,16.431]],["name/293-3",[]],["text/293-3",[]],["component/293-3",[]],["title/293-4",[5,18.651,255,24.375,317,15.553]],["name/293-4",[]],["text/293-4",[]],["component/293-4",[]],["title/293",[114,35.891,2330,37.537,2345,50.22]],["name/293",[5697,3.92]],["text/293",[2,3.319,5,3.727,8,1.598,22,1.972,38,2.344,46,1.989,60,1.393,92,3.648,96,3.182,114,7.686,144,3.477,183,2.237,191,3.092,255,4.297,264,4.523,317,2.025,318,1.806,323,2.563,324,2.55,328,2.571,361,3.761,626,2.759,676,1.51,705,2.667,1151,4.231,2330,4.888,2332,6.364,2345,6.539,4275,6.364]],["component/293",[220,0.615]],["title/294-1",[676,17.814]],["name/294-1",[]],["text/294-1",[]],["component/294-1",[]],["title/294-2",[317,18.84,318,16.799]],["name/294-2",[]],["text/294-2",[]],["component/294-2",[]],["title/294-3",[60,12.959,5698,65.249]],["name/294-3",[]],["text/294-3",[]],["component/294-3",[]],["title/294",[58,34.859,1213,48.467]],["name/294",[58,1.098,1213,1.527]],["text/294",[2,1.162,8,0.757,16,2.266,22,2.227,34,1.348,37,1.782,38,1.812,40,1.945,49,2.036,58,4.231,60,1.363,61,1.321,62,2.462,71,1.334,80,2.649,84,4.075,88,1.757,92,2.078,96,1.508,97,2.316,99,1.504,103,1.678,106,1.653,131,3.074,134,1.417,139,3.001,141,4.024,183,1.729,196,1.985,198,1.678,200,1.727,203,1.858,219,2.438,236,1.873,310,1.35,317,0.96,318,0.856,319,3.394,323,1.214,324,1.208,328,1.218,365,1.624,403,2.652,424,1.851,430,1.889,471,2.552,551,3.354,554,2.058,555,1.628,561,2.157,568,5.422,581,3.496,597,2.026,623,2.143,626,2.535,639,3.565,660,1.851,676,0.716,705,2.611,708,1.588,710,2.583,716,2.263,722,1.689,734,1.836,775,2.444,837,2.005,965,1.648,1085,4.98,1131,3.947,1213,6.48,1933,2.444,2356,2.616,2366,2.552,2397,5.813,3461,3.323,4161,4.387,5671,8.724,5699,3.745,5700,3.745,5701,3.745,5702,6.108,5703,6.108,5704,3.491]],["component/294",[220,0.615]],["title/295-1",[676,17.814]],["name/295-1",[]],["text/295-1",[]],["component/295-1",[]],["title/295-2",[317,18.84,318,16.799]],["name/295-2",[]],["text/295-2",[]],["component/295-2",[]],["title/295-3",[60,16.431]],["name/295-3",[]],["text/295-3",[]],["component/295-3",[]],["title/295",[58,28.778,216,21.255,1461,35.647]],["name/295",[58,1.098,5705,2.316]],["text/295",[0,2.17,2,3.021,8,0.881,22,2.137,24,3.242,28,5.644,30,3.004,38,2.046,46,1.097,49,2.854,58,4.06,59,4.931,60,0.768,82,1.583,92,2.616,93,1.97,103,3.091,129,2.256,131,2.677,162,3.525,171,2.103,183,3.195,189,1.644,201,2.381,205,2.509,208,2.246,216,3.952,217,2.493,228,3.946,247,4.089,250,2.652,294,3.791,318,0.995,323,1.412,324,1.405,328,1.417,399,3.556,408,2.188,436,2.407,482,1.928,513,3.605,561,2.509,620,2.368,626,1.123,676,0.832,692,4.061,708,1.847,898,5.295,916,3.017,1103,3.681,1187,1.934,1283,3.004,1461,7.202,1599,3.369,1674,4.954,1837,3.004,2281,6.43,2469,4.501,5287,6.43,5706,4.356,5707,4.356,5708,3.866,5709,4.061]],["component/295",[220,0.615]],["title/296-1",[676,17.814]],["name/296-1",[]],["text/296-1",[]],["component/296-1",[]],["title/296-2",[317,18.84,318,16.799]],["name/296-2",[]],["text/296-2",[]],["component/296-2",[]],["title/296-3",[60,16.431]],["name/296-3",[]],["text/296-3",[]],["component/296-3",[]],["title/296",[57,23.369,58,28.778,1310,29.996]],["name/296",[58,1.098,5710,2.316]],["text/296",[8,1.415,16,2.596,22,1.746,38,2.075,45,3.051,46,2.863,50,3.575,57,4.38,58,5.393,59,4.029,60,1.233,92,3.315,124,3.544,318,1.599,323,2.269,324,2.257,328,2.276,379,4.68,386,2.585,389,3.705,392,2.455,626,2.537,676,1.337,798,5.282,939,5.976,969,3.431,1095,6.641,1310,3.458,1677,3.674,2408,8.511,5711,6.997,5712,6.997,5713,6.997,5714,6.997]],["component/296",[220,0.615]],["title/297-1",[676,17.814]],["name/297-1",[]],["text/297-1",[]],["component/297-1",[]],["title/297-2",[317,18.84,318,16.799]],["name/297-2",[]],["text/297-2",[]],["component/297-2",[]],["title/297-3",[447,44.52]],["name/297-3",[]],["text/297-3",[]],["component/297-3",[]],["title/297-4",[1096,50.71,1514,48.981]],["name/297-4",[]],["text/297-4",[]],["component/297-4",[]],["title/297-5",[80,25.176,1096,50.71]],["name/297-5",[]],["text/297-5",[]],["component/297-5",[]],["title/297-6",[60,12.959,5698,65.249]],["name/297-6",[]],["text/297-6",[]],["component/297-6",[]],["title/297",[58,28.778,59,34.955,219,19.134]],["name/297",[58,1.098,5715,2.316]],["text/297",[2,1.022,8,0.37,11,0.793,22,2.18,25,1.4,26,1.661,31,1.314,32,2.859,34,1.185,38,2.284,40,2.25,42,0.594,46,0.46,49,1.098,58,3.912,59,6.696,60,0.322,62,3.043,63,3.351,64,0.733,65,3.293,71,1.174,77,1.185,80,0.626,82,1.197,84,2.509,89,1.005,92,1.704,93,1.49,103,2.013,117,2.54,129,0.947,131,2.989,133,0.867,138,1.822,142,1.178,165,1.781,172,0.736,180,0.867,183,3.18,198,0.819,199,1.441,204,0.904,216,1.924,217,1.047,219,1.038,222,1.218,228,0.68,233,1.609,239,0.9,241,1.556,247,0.873,262,0.652,291,1.971,294,1.005,310,0.659,316,1.081,317,0.469,318,0.418,323,0.593,324,0.59,328,0.595,344,2.162,345,2.149,347,0.565,365,0.793,366,1.81,379,0.87,385,3.269,392,0.642,396,2.456,420,2.123,436,1.01,437,1.105,447,0.873,509,1.38,511,1.246,524,1.182,527,1.471,547,1.494,551,2.626,555,0.795,561,1.053,620,0.994,626,1.417,638,0.727,639,0.618,651,2.053,661,0.926,676,0.349,689,0.809,705,1.854,721,3.68,722,1.485,744,1.022,754,1.407,782,1.053,808,0.984,830,1.081,832,1.897,898,7.495,910,0.979,916,1.441,967,1.48,1059,1.113,1085,5.018,1187,1.995,1213,2.962,1274,1.334,1283,3.789,1391,1.01,1481,1.295,1507,5.236,1514,7.001,1643,1.113,1660,1.356,2330,2.779,2397,2.657,2469,6.671,2991,1.314,3081,1.314,3366,6.833,3763,1.407,4203,1.438,4741,3.277,5671,1.513,5716,1.829,5717,1.829,5718,1.829,5719,1.829,5720,3.294]],["component/297",[220,0.615]],["title/298-1",[676,17.814]],["name/298-1",[]],["text/298-1",[]],["component/298-1",[]],["title/298-2",[317,18.84,318,16.799]],["name/298-2",[]],["text/298-2",[]],["component/298-2",[]],["title/298",[58,34.859,247,35.112]],["name/298",[58,1.098,247,1.106]],["text/298",[2,1.878,4,0.689,6,0.89,8,0.346,10,2.003,11,1.345,19,2.09,22,1.689,24,1.381,37,1.476,38,2.008,42,0.556,46,0.431,47,0.853,49,1.418,53,1.012,54,2.406,57,2.606,58,3.766,60,0.75,62,2.354,63,0.811,64,1.704,71,0.61,79,1.834,82,1.128,83,0.973,85,1.521,86,4.815,89,3.327,92,1.143,93,1.403,99,1.709,109,0.89,111,0.979,112,1.186,128,1.319,131,0.97,133,0.811,139,0.576,143,2.7,149,1.212,153,1.888,162,1.54,172,0.689,174,0.903,176,1.934,179,1.026,183,2.093,189,0.646,208,3.49,219,0.978,246,0.628,247,5.335,251,0.886,260,0.998,264,1.775,291,1.361,317,0.439,318,0.391,323,0.555,324,0.552,328,0.557,341,4.747,347,0.528,361,1.476,379,0.814,389,0.645,392,0.6,400,2.498,403,2.197,415,1.212,420,0.809,428,2.045,454,1.166,477,1.248,482,0.758,494,2.301,518,0.973,524,3.912,542,1.349,547,1.408,549,1.956,551,2.065,555,1.85,561,0.986,565,0.935,566,4.871,567,3.52,571,4.633,586,1.18,596,1.903,612,0.986,615,1.196,624,6.975,626,1.097,634,1.533,647,4.125,661,0.867,663,2.005,683,1.595,685,1.14,687,1.106,689,0.758,695,2.09,705,2.285,728,1.196,730,0.746,753,0.894,782,1.786,786,1.471,792,1.269,795,2.114,812,2.499,815,2.024,853,1.248,890,1.269,897,1.153,898,5.483,916,0.749,931,2.326,956,2.289,958,1.153,965,0.753,967,0.769,969,0.839,1017,1.269,1032,2.09,1033,1.269,1103,1.334,1105,1.462,1152,1.229,1213,1.128,1257,1.076,1315,1.212,1461,1.005,1482,1.096,1486,0.946,1631,1.345,1674,1.229,1838,3.013,1855,0.874,1878,1.128,2035,1.019,2202,6.384,2237,1.106,2267,1.519,2277,1.345,2291,5.17,2327,2.498,2332,1.378,2340,1.196,2409,1.128,2446,1.292,2469,3.41,2718,1.519,2719,1.196,2872,1.117,3446,2.263,3454,1.462,3472,1.595,3597,2.892,3616,2.892,3814,1.595,3815,1.595,3846,1.519,3848,4.463,4077,1.519,4094,1.292,4126,1.345,4185,1.117,4288,1.345,4289,1.462,4773,1.317,5383,4.637,5398,1.462,5410,1.595,5423,2.567,5721,1.711,5722,1.711,5723,1.711,5724,1.711,5725,1.595,5726,1.595,5727,1.595,5728,1.711,5729,1.711,5730,3.102,5731,1.711,5732,1.711,5733,1.711,5734,1.711,5735,1.711,5736,1.711,5737,1.595,5738,1.711,5739,1.595]],["component/298",[220,0.615]],["title/299-1",[676,17.814]],["name/299-1",[]],["text/299-1",[]],["component/299-1",[]],["title/299-2",[317,18.84,318,16.799]],["name/299-2",[]],["text/299-2",[]],["component/299-2",[]],["title/299-3",[962,49.665]],["name/299-3",[]],["text/299-3",[]],["component/299-3",[]],["title/299-4",[3366,64.298]],["name/299-4",[]],["text/299-4",[]],["component/299-4",[]],["title/299-5",[60,12.959,5698,65.249]],["name/299-5",[]],["text/299-5",[]],["component/299-5",[]],["title/299",[58,34.859,219,23.177]],["name/299",[58,1.098,219,0.73]],["text/299",[2,1.273,8,0.83,22,2.744,25,3.5,26,3.318,34,2.962,40,2.621,41,1.61,58,1.946,60,1.159,61,1.449,62,1.307,63,3.119,71,1.463,77,1.477,79,3.549,92,2.211,93,1.857,112,1.57,113,3.765,116,2.268,117,2.321,133,1.946,134,1.553,183,2.666,196,2.176,211,2.831,216,2.304,219,1.294,228,1.526,246,1.507,279,2.679,313,2.321,318,0.938,319,2.281,323,1.331,324,1.324,328,1.335,369,1.881,385,3.391,386,1.517,394,2.653,398,1.546,408,2.062,418,2.907,525,2.045,527,1.834,547,1.863,551,2.809,553,2.088,561,2.364,568,1.919,615,2.868,622,2.281,645,2.071,661,3.332,671,3.305,676,0.784,687,4.251,708,1.74,736,4.386,761,2.653,786,1.946,887,2.294,898,7.856,967,1.845,1204,3.305,1213,4.337,1283,2.831,1444,2.907,1481,2.907,1507,3.277,2330,5.091,2354,2.831,2366,2.797,2369,2.868,2370,2.166,2397,4.868,2437,2.797,2469,6.144,2651,4.174,2856,3.044,3366,5.678,3446,2.994,3774,3.643,4313,3.506,4741,2.994,5740,4.105,5741,4.105,5742,3.826]],["component/299",[220,0.615]],["title/300-1",[676,17.814]],["name/300-1",[]],["text/300-1",[]],["component/300-1",[]],["title/300-2",[317,18.84,318,16.799]],["name/300-2",[]],["text/300-2",[]],["component/300-2",[]],["title/300-3",[60,16.431]],["name/300-3",[]],["text/300-3",[]],["component/300-3",[]],["title/300",[58,28.778,59,34.955,915,35.409]],["name/300",[58,0.779,59,0.947,915,0.959]],["text/300",[2,3.721,8,1.328,22,1.638,37,5.227,38,1.948,46,2.367,49,2.189,58,4.458,59,7.606,60,1.157,63,4.458,82,2.387,92,2.951,103,4.213,183,3.938,219,3.463,318,1.5,323,2.129,324,2.118,328,2.136,347,2.903,626,2.833,676,1.255,898,6.794,915,6.409,2469,7.168,5708,5.828,5743,6.567,5744,6.567]],["component/300",[220,0.615]],["title/301-1",[676,17.814]],["name/301-1",[]],["text/301-1",[]],["component/301-1",[]],["title/301-2",[317,18.84,318,16.799]],["name/301-2",[]],["text/301-2",[]],["component/301-2",[]],["title/301-3",[5,18.651,255,24.375,317,15.553]],["name/301-3",[]],["text/301-3",[]],["component/301-3",[]],["title/301",[661,47.224]],["name/301",[5745,3.654]],["text/301",[5,3.763,8,1.628,22,2.703,46,2.027,62,2.563,92,3.518,96,3.242,144,3.543,183,3.708,255,4.351,310,2.903,317,2.063,318,1.84,323,2.611,324,2.598,328,2.62,347,2.486,551,4.178,612,4.637,661,5.488,705,2.718,786,3.818,967,3.619,1151,4.311,3969,5.784,4095,5.424]],["component/301",[220,0.615]],["title/302-1",[676,17.814]],["name/302-1",[]],["text/302-1",[]],["component/302-1",[]],["title/302-2",[317,18.84,318,16.799]],["name/302-2",[]],["text/302-2",[]],["component/302-2",[]],["title/302-3",[60,16.431]],["name/302-3",[]],["text/302-3",[]],["component/302-3",[]],["title/302",[143,24.993,2408,50.71]],["name/302",[5746,3.92]],["text/302",[8,1.207,40,1.9,46,1.503,60,1.052,62,1.9,82,2.17,84,2.726,92,2.795,133,2.83,143,2.983,183,3.46,219,2.766,228,2.22,246,2.192,272,7.505,318,1.364,323,1.936,324,1.926,328,1.942,392,2.095,416,4.565,432,2.726,454,4.068,551,4.623,626,3.152,650,3.977,676,1.141,705,2.962,753,3.12,844,3.787,1291,8.013,1391,3.299,2408,9.11,2719,7.269,2819,5.099,5739,9.699,5747,5.298]],["component/302",[220,0.615]],["title/303-1",[676,17.814]],["name/303-1",[]],["text/303-1",[]],["component/303-1",[]],["title/303-2",[317,18.84,318,16.799]],["name/303-2",[]],["text/303-2",[]],["component/303-2",[]],["title/303-3",[60,16.431]],["name/303-3",[]],["text/303-3",[]],["component/303-3",[]],["title/303-4",[5,18.651,255,24.375,317,15.553]],["name/303-4",[]],["text/303-4",[]],["component/303-4",[]],["title/303",[214,35.647,467,41.863,2712,37.238]],["name/303",[5748,3.92]],["text/303",[5,1.565,8,0.765,22,2.24,24,3.078,32,0.963,34,0.768,38,3.453,40,1.204,46,0.537,49,1.697,53,4.605,57,1.456,60,1.667,61,1.335,62,1.96,63,1.012,65,0.995,71,0.761,77,1.361,79,0.92,82,0.776,83,2.896,92,2.654,96,1.523,99,0.857,103,1.695,106,0.942,112,1.446,128,2.994,131,2.435,142,1.353,143,1.286,144,0.939,171,5.976,174,1.995,180,1.012,183,2.385,191,0.835,195,1.245,198,1.695,201,1.167,212,3.264,214,1.254,215,1.643,216,0.748,218,3.761,220,0.446,253,1.38,255,1.519,264,1.222,317,0.547,318,0.488,323,0.692,324,0.689,328,0.695,335,1.823,344,1.027,347,1.168,365,0.926,379,1.016,389,1.424,420,2.909,467,4.857,512,1.262,523,4.467,538,1.512,542,3.387,545,1.4,547,1.716,549,0.981,551,0.728,560,1.096,565,1.167,571,1.173,624,3.129,626,2.548,639,2.082,655,1.32,670,1.823,676,0.408,697,2.768,701,1.407,705,1.276,720,1.086,721,0.822,730,0.931,798,1.756,910,2.025,1073,1.193,1085,1.081,1097,1.557,1119,1.678,1125,2.164,1240,1.512,1264,3.641,1296,1.643,1391,1.18,1516,1.95,1613,1.422,1681,1.254,1854,3.942,1855,3.146,1862,2.717,1879,2.114,1932,1.512,2034,1.766,2191,1.895,2339,2.642,2348,1.245,2370,3.715,2556,1.766,2713,1.422,2808,4.247,2866,1.455,2870,1.3,2929,1.895,3455,3.045,3606,1.719,3952,1.583,3955,1.31,5749,2.135,5750,3.782,5751,2.135,5752,10.895,5753,2.135,5754,2.135,5755,2.135,5756,2.135,5757,2.135,5758,2.135,5759,3.782,5760,2.135,5761,1.99]],["component/303",[220,0.615]],["title/304-1",[676,17.814]],["name/304-1",[]],["text/304-1",[]],["component/304-1",[]],["title/304-2",[317,18.84,318,16.799]],["name/304-2",[]],["text/304-2",[]],["component/304-2",[]],["title/304-3",[60,16.431]],["name/304-3",[]],["text/304-3",[]],["component/304-3",[]],["title/304",[24,16.047,705,20.484,2894,45.812]],["name/304",[24,0.435,705,0.555,2894,1.241]],["text/304",[2,2.22,8,2.195,16,1.694,22,1.139,24,3.295,25,1.941,26,2.303,34,1.643,38,1.354,46,1.149,60,0.805,62,2.279,71,1.627,92,2.685,96,1.838,99,4.013,106,2.015,168,3.095,171,2.205,179,2.738,182,5.416,183,3.408,208,3.69,209,2.801,218,1.816,219,2.256,228,1.698,238,2.979,246,1.677,248,3.43,285,2.397,317,1.834,318,1.043,323,1.48,324,1.473,328,1.485,386,1.687,396,1.587,417,1.829,485,5.508,493,3.189,527,3.197,551,3.012,561,2.629,567,3.778,626,2.799,638,1.816,642,2.897,676,0.872,705,2.979,708,1.936,721,1.758,798,2.12,812,1.885,821,2.847,837,2.445,894,2.759,935,3.189,941,3.233,965,2.009,1103,1.963,1149,2.664,1516,2.354,2199,5.508,2894,8.691,4288,3.589,5762,4.566,5763,4.256,5764,4.256,5765,4.256,5766,4.566]],["component/304",[220,0.615]],["title/305-1",[676,17.814]],["name/305-1",[]],["text/305-1",[]],["component/305-1",[]],["title/305-2",[317,18.84,318,16.799]],["name/305-2",[]],["text/305-2",[]],["component/305-2",[]],["title/305-3",[60,16.431]],["name/305-3",[]],["text/305-3",[]],["component/305-3",[]],["title/305",[24,16.047,219,19.134,2894,45.812]],["name/305",[24,0.435,219,0.518,2894,1.241]],["text/305",[2,0.82,8,0.922,16,0.981,22,1.138,24,2.868,25,1.938,26,2.3,27,2.57,29,1.334,38,2.616,42,1.481,46,1.148,52,1.955,60,1.26,62,2.276,65,1.232,80,0.905,82,2.185,92,2.167,93,2.062,103,3.952,105,1.423,120,1.635,131,1.426,133,2.162,139,0.889,141,1.375,143,2.998,162,0.957,165,1.43,172,1.835,177,2.417,182,1.622,183,1.702,201,2.492,208,2.35,209,1.622,219,1.895,228,0.983,233,1.291,246,0.971,248,2.335,260,1.542,285,1.388,312,2.519,318,0.604,320,1.228,323,0.857,324,0.853,328,0.86,361,2.86,366,1.453,383,3.847,386,0.977,389,1.717,392,2.109,396,3.065,401,3.099,417,2.864,485,3.509,525,1.317,527,1.181,545,3.868,547,4.288,555,1.983,623,1.513,626,1.844,638,1.051,639,2.417,676,0.505,681,2.187,685,1.761,690,1.761,706,1.761,708,1.121,722,1.192,730,3.846,732,2.464,734,1.296,740,1.96,741,1.781,798,4.095,812,1.091,821,1.648,849,1.677,892,1.872,893,1.872,915,5.145,971,1.995,972,1.995,980,4.872,1103,3.792,1149,1.542,1273,3.885,1372,2.129,1375,2.258,1659,1.477,1933,1.725,2278,2.078,2487,2.464,2894,6.088,3189,2.464,3424,2.129,3955,4.386,3985,4.25,5747,4.046,5763,2.464,5764,2.464,5765,2.464,5767,2.644,5768,2.644,5769,2.644,5770,6.012,5771,2.644,5772,1.995,5773,4.56,5774,4.56,5775,4.56]],["component/305",[220,0.615]],["title/306-1",[676,17.814]],["name/306-1",[]],["text/306-1",[]],["component/306-1",[]],["title/306-2",[317,18.84,318,16.799]],["name/306-2",[]],["text/306-2",[]],["component/306-2",[]],["title/306-3",[60,16.431]],["name/306-3",[]],["text/306-3",[]],["component/306-3",[]],["title/306",[191,23.745,2895,43.598,2896,46.709]],["name/306",[5776,3.92]],["text/306",[8,1.438,17,4.33,20,3.303,38,2.11,60,1.254,92,3.083,99,3.996,168,4.962,183,3.704,191,2.783,262,3.546,318,1.625,323,2.306,324,2.295,328,2.314,341,3.809,626,2.566,676,1.359,925,5.469,1047,5.037,1187,5.095,2442,6.026,2895,7.148,2896,9.566,5777,9.023,5778,10.915]],["component/306",[220,0.615]],["title/307-1",[676,17.814]],["name/307-1",[]],["text/307-1",[]],["component/307-1",[]],["title/307-2",[317,18.84,318,16.799]],["name/307-2",[]],["text/307-2",[]],["component/307-2",[]],["title/307-3",[60,16.431]],["name/307-3",[]],["text/307-3",[]],["component/307-3",[]],["title/307",[17,36.95,191,23.745,2895,43.598]],["name/307",[5779,3.92]],["text/307",[8,1.438,17,7.567,20,3.303,22,1.775,38,2.11,60,1.254,92,3.083,99,3.996,168,4.962,183,3.704,191,2.783,262,3.546,318,1.625,323,2.306,324,2.295,328,2.314,341,3.809,626,3.206,676,1.359,925,5.469,1047,5.037,1187,5.519,2442,6.026,2895,7.148,5550,10.699,5777,9.023]],["component/307",[220,0.615]],["title/308-1",[676,17.814]],["name/308-1",[]],["text/308-1",[]],["component/308-1",[]],["title/308-2",[317,18.84,318,16.799]],["name/308-2",[]],["text/308-2",[]],["component/308-2",[]],["title/308-3",[60,16.431]],["name/308-3",[]],["text/308-3",[]],["component/308-3",[]],["title/308",[38,18.004,46,15.279,1517,42.977]],["name/308",[38,0.488,46,0.414,1517,1.164]],["text/308",[2,2.712,5,2.321,8,0.732,14,2.052,16,1.342,27,1.547,37,1.722,38,4.336,46,3.664,57,1.393,92,3.71,96,5.03,143,2.019,163,1.409,183,3.452,206,2.154,219,1.141,291,5.197,318,0.827,323,1.173,324,1.167,328,1.177,369,1.658,386,1.337,392,1.269,551,2.026,626,2.254,639,1.223,697,3.229,730,1.578,929,2.361,1517,9.685,1718,2.097,1901,2.639,2442,1.9,2641,1.957,2642,2.046,2785,3.373,2786,3.373,2787,3.373,2788,3.373,2789,3.373,2790,3.373,2791,3.373,2792,3.373,2793,3.373]],["component/308",[220,0.615]],["title/309-1",[676,17.814]],["name/309-1",[]],["text/309-1",[]],["component/309-1",[]],["title/309-2",[317,18.84,318,16.799]],["name/309-2",[]],["text/309-2",[]],["component/309-2",[]],["title/309-3",[962,49.665]],["name/309-3",[]],["text/309-3",[]],["component/309-3",[]],["title/309-4",[60,16.431]],["name/309-4",[]],["text/309-4",[]],["component/309-4",[]],["title/309-5",[216,32.645]],["name/309-5",[]],["text/309-5",[]],["component/309-5",[]],["title/309-6",[568,34.374,651,23.799]],["name/309-6",[]],["text/309-6",[]],["component/309-6",[]],["title/309-7",[133,28.778,639,20.521,651,19.647]],["name/309-7",[]],["text/309-7",[]],["component/309-7",[]],["title/309-8",[80,20.784,262,21.627,651,19.647]],["name/309-8",[]],["text/309-8",[]],["component/309-8",[]],["title/309-9",[262,21.627,639,20.521,651,19.647]],["name/309-9",[]],["text/309-9",[]],["component/309-9",[]],["title/309-10",[24,16.047,262,21.627,651,19.647]],["name/309-10",[]],["text/309-10",[]],["component/309-10",[]],["title/309",[46,18.508,649,41.57]],["name/309",[46,0.583,649,1.31]],["text/309",[2,0.615,3,0.733,8,0.85,14,0.364,20,0.49,22,2.381,24,1.662,27,2.283,32,0.894,34,1.01,38,1.584,42,0.644,45,1.95,46,3.499,48,0.525,49,1.945,60,1.474,62,3.1,63,0.5,71,0.706,77,0.713,79,0.455,80,3.267,81,0.718,82,1.287,83,1.128,84,0.905,92,2.758,93,0.477,95,0.886,96,3.251,110,0.81,115,0.431,120,0.652,124,0.534,126,2.196,128,0.448,131,0.62,133,1.992,134,3.447,136,1.351,137,1.75,138,2.55,139,0.943,143,0.358,144,0.872,163,1.093,172,1.425,179,0.632,183,2.994,189,0.748,191,0.412,195,0.615,196,0.559,198,0.472,199,0.867,208,0.544,216,0.369,218,0.419,219,2.449,234,0.619,248,0.41,253,0.681,260,0.615,262,3.536,271,0.681,274,0.509,275,0.559,289,0.642,310,0.38,315,1.44,318,0.241,323,0.342,324,0.34,328,0.343,332,0.718,344,0.507,347,1.649,348,1.616,361,1.335,365,0.457,366,1.089,369,0.908,377,0.718,389,0.747,392,0.696,394,0.681,398,0.397,405,0.829,408,0.53,409,0.688,412,0.632,417,0.794,432,0.482,447,0.504,479,1.703,480,0.611,499,1.257,511,0.718,513,0.551,515,0.48,522,0.551,527,1.253,549,0.911,551,2.145,554,0.579,555,1.22,561,0.607,568,4.364,581,0.603,591,0.663,598,0.737,612,1.616,620,0.573,622,0.586,623,0.603,625,1.172,626,1.728,629,1.526,630,0.747,632,0.9,638,0.788,639,4.171,641,0.757,645,1,648,1.526,649,4.727,651,2.408,653,4.622,676,0.677,688,0.9,689,0.467,695,0.71,697,1.078,698,0.769,699,0.681,700,0.71,703,0.525,705,2.511,708,0.84,720,0.536,721,0.763,722,0.894,752,0.593,753,0.551,804,1.149,821,0.657,830,0.623,875,2.93,908,0.637,916,0.867,925,0.579,930,0.872,931,0.576,965,1.558,988,0.647,1051,1.164,1073,0.589,1085,1.421,1087,0.642,1096,0.727,1103,2.063,1118,1.671,1121,0.6,1140,0.936,1150,1.269,1175,1.446,1262,0.727,1288,1.247,1301,0.681,1308,0.556,1334,0.872,1527,0.747,1602,0.829,1607,0.872,1665,0.747,1971,1.226,2270,0.695,2348,0.615,2370,0.556,2437,0.718,2438,0.872,2439,0.983,2440,0.983,2441,0.983,2458,0.983,2651,1.78,2719,1.385,2732,0.747,2899,2.259,2938,0.782,3298,0.681,3302,0.737,3424,0.849,3983,0.727,4313,0.9,4419,0.936,4628,0.769,4773,0.811,5332,0.983,5780,1.054,5781,0.983,5782,1.054,5783,1.759,5784,1.983,5785,0.983]],["component/309",[220,0.615]],["title/310-1",[676,17.814]],["name/310-1",[]],["text/310-1",[]],["component/310-1",[]],["title/310-2",[317,18.84,318,16.799]],["name/310-2",[]],["text/310-2",[]],["component/310-2",[]],["title/310-3",[156,33.799,225,29.893]],["name/310-3",[]],["text/310-3",[]],["component/310-3",[]],["title/310-4",[60,16.431]],["name/310-4",[]],["text/310-4",[]],["component/310-4",[]],["title/310-5",[183,20.814,219,23.177]],["name/310-5",[]],["text/310-5",[]],["component/310-5",[]],["title/310",[46,18.508,57,28.307]],["name/310",[46,0.583,57,0.892]],["text/310",[1,1.613,2,0.846,5,0.838,8,0.552,11,4.164,14,0.943,20,2.175,24,0.721,27,1.166,34,0.982,37,3.475,45,0.846,46,3.29,49,0.909,57,5.334,60,0.481,80,2.5,92,3.722,94,2.618,99,1.881,128,1.991,137,2.315,143,2.092,183,1.326,199,1.193,219,1.94,264,1.561,283,1.461,318,0.623,319,1.516,323,0.885,324,0.88,328,0.888,366,1.499,369,1.25,379,2.929,386,1.731,389,1.764,392,0.957,417,2.925,437,1.648,479,5.847,528,1.648,549,3.357,626,2.12,641,1.96,676,1.176,697,1.483,705,1.581,798,5.102,800,6.212,812,4.679,965,1.2,967,1.226,969,1.338,1056,1.763,1097,1.99,1294,4.194,1363,2.733,1379,1.838,1507,1.359,1901,5.326,2367,1.932,2442,1.433,2731,2.421,2732,1.932,2735,2.421,2736,2.33,2737,2.543,2738,2.543,2739,2.543,2740,2.543,2741,2.421,2742,2.543,2743,2.543,2744,2.543,2745,2.421,2746,2.543,2747,2.543,2748,2.543,2749,2.543,2750,2.543,2751,2.543,2752,2.543,2753,2.543,2754,2.543,2755,2.543,2756,2.543,2757,2.543,2758,2.543,2759,2.543,2843,1.78]],["component/310",[220,0.615]],["title/311-1",[676,17.814]],["name/311-1",[]],["text/311-1",[]],["component/311-1",[]],["title/311-2",[317,18.84,318,16.799]],["name/311-2",[]],["text/311-2",[]],["component/311-2",[]],["title/311-3",[60,16.431]],["name/311-3",[]],["text/311-3",[]],["component/311-3",[]],["title/311-4",[5,18.651,255,24.375,317,15.553]],["name/311-4",[]],["text/311-4",[]],["component/311-4",[]],["title/311",[214,35.647,1240,42.977,2712,37.238]],["name/311",[5786,3.92]],["text/311",[2,1.072,5,2.248,8,1.157,10,2.693,22,2.35,27,3.127,38,2.794,46,1.44,49,1.152,60,1.008,61,1.22,63,1.639,71,1.232,77,1.244,80,1.184,91,1.682,92,2.885,96,2.303,103,1.549,106,1.526,110,1.413,112,3.881,128,3.11,131,1.081,134,1.308,142,2.617,144,1.521,162,2.071,168,1.495,171,4.548,174,3.018,183,3.298,188,2.089,191,2.862,214,3.359,218,4.775,225,1.406,247,1.651,253,2.234,255,2.297,291,1.516,317,0.886,318,0.79,323,1.121,324,1.115,328,1.125,344,1.663,401,2.948,420,4.017,429,2.922,430,2.885,545,1.28,551,1.179,560,1.774,571,1.9,603,3.222,626,3.005,639,1.169,670,4.885,676,0.661,677,1.851,700,2.329,720,3.722,779,2.017,780,2.138,798,2.656,812,1.427,878,4.874,909,3.294,914,3.996,916,1.512,1154,2.356,1235,3.068,1240,6.669,1308,1.824,1516,2.948,1527,2.448,1838,2.448,2271,2.329,2348,2.017,2385,1.955,2556,2.86,2712,3.509,2713,4.874,2843,2.256,3952,2.563,3955,2.121,5761,3.222,5787,3.222,5788,3.222,5789,3.457]],["component/311",[220,0.615]],["title/312-1",[676,17.814]],["name/312-1",[]],["text/312-1",[]],["component/312-1",[]],["title/312-2",[317,18.84,318,16.799]],["name/312-2",[]],["text/312-2",[]],["component/312-2",[]],["title/312-3",[60,16.431]],["name/312-3",[]],["text/312-3",[]],["component/312-3",[]],["title/312",[24,19.438,115,30.044]],["name/312",[5790,3.92]],["text/312",[8,0.949,24,3.559,27,4.7,38,1.392,40,2.327,41,1.839,49,2.437,60,1.788,61,1.655,77,1.688,78,3.383,89,2.578,92,2.413,115,1.917,116,6.075,137,4.439,138,3.643,162,3.252,183,3.112,191,1.835,253,3.032,262,2.605,275,2.487,291,3.94,310,2.636,318,1.072,323,1.521,324,1.513,328,1.526,347,1.448,367,3.934,379,2.232,392,3.152,420,6.106,491,4.417,540,3.083,542,3.179,626,2.317,676,0.896,681,6.049,782,4.21,843,3.422,859,3.061,876,3.235,929,3.061,1071,5.202,1095,2.524,1103,3.862,2935,4.163,5424,4.373]],["component/312",[220,0.615]],["title/313-1",[676,17.814]],["name/313-1",[]],["text/313-1",[]],["component/313-1",[]],["title/313-2",[317,18.84,318,16.799]],["name/313-2",[]],["text/313-2",[]],["component/313-2",[]],["title/313-3",[60,16.431]],["name/313-3",[]],["text/313-3",[]],["component/313-3",[]],["title/313-4",[24,19.438,651,23.799]],["name/313-4",[]],["text/313-4",[]],["component/313-4",[]],["title/313-5",[515,33.47,651,23.799]],["name/313-5",[]],["text/313-5",[]],["component/313-5",[]],["title/313-6",[183,26.392]],["name/313-6",[]],["text/313-6",[]],["component/313-6",[]],["title/313",[24,10.534,38,11.819,63,18.891,99,16.001,551,13.593,1187,17.689]],["name/313",[5791,3.92]],["text/313",[2,3.421,8,0.514,16,0.943,20,1.18,22,2.311,24,3.35,33,2.422,38,2.907,45,1.367,46,1.468,49,0.847,60,1.521,61,2.456,62,2.948,63,2.766,64,1.018,71,1.57,77,0.915,92,2.317,93,1.15,95,2.606,99,2.795,108,1.559,128,1.08,131,1.824,133,2.089,138,1.031,139,0.855,143,2.366,168,1.099,171,1.227,172,1.023,173,5.293,176,2.748,177,1.347,183,2.774,191,0.994,200,1.172,202,1.282,208,1.31,216,0.89,219,2.919,228,1.638,236,1.271,246,0.933,247,1.214,262,2.079,275,1.347,310,2.51,318,0.581,323,0.824,324,0.82,328,0.827,366,1.397,369,2.019,386,0.939,389,0.957,396,1.531,399,1.31,424,1.256,435,1.658,447,2.104,479,1.223,482,1.125,501,2.251,521,1.142,528,2.662,545,2.16,551,1.503,557,1.382,612,1.464,626,2.844,634,2.883,639,2.662,642,1.612,661,1.287,676,1.115,677,1.361,678,1.375,704,3.845,705,1.969,721,3.321,727,1.598,730,2.544,733,2.703,734,1.246,786,1.205,800,1.437,812,1.049,837,1.361,844,2.795,931,3.805,1103,4.213,1138,2.261,1231,1.341,1293,1.412,1524,3.548,1595,1.503,1849,1.712,2202,1.753,2379,2.848,2414,1.854,2641,2.383,2642,2.491,2808,1.753,3955,1.559,4374,2.255,4375,2.255,4376,2.171,5357,3.326,5639,2.255,5792,2.046]],["component/313",[220,0.615]],["title/314-1",[676,17.814]],["name/314-1",[]],["text/314-1",[]],["component/314-1",[]],["title/314-2",[317,18.84,318,16.799]],["name/314-2",[]],["text/314-2",[]],["component/314-2",[]],["title/314-3",[60,16.431]],["name/314-3",[]],["text/314-3",[]],["component/314-3",[]],["title/314-4",[216,25.746,651,23.799]],["name/314-4",[]],["text/314-4",[]],["component/314-4",[]],["title/314-5",[515,42.438]],["name/314-5",[]],["text/314-5",[]],["component/314-5",[]],["title/314",[24,13.663,38,15.33,63,24.503,103,23.157]],["name/314",[5793,3.92]],["text/314",[8,0.649,11,1.392,16,1.191,22,0.801,24,3.474,27,2.299,34,1.155,38,1.595,40,1.712,42,1.043,45,1.668,46,1.747,49,2.313,60,1.593,61,1.133,62,2.209,63,5.369,64,1.286,74,1.471,77,1.155,92,2.627,99,1.289,103,1.438,115,1.312,120,1.985,131,1.004,137,2.657,139,1.079,143,1.828,162,1.947,177,1.702,183,3.084,189,2.03,191,1.256,201,3.793,202,1.619,203,1.593,208,1.655,216,1.124,219,2.85,228,2,233,1.568,236,2.69,246,1.179,262,2.473,310,1.939,312,3.834,318,0.733,323,1.041,324,1.036,328,1.044,347,0.991,352,2.187,361,1.527,386,1.186,392,2.435,396,1.116,401,2.772,417,1.286,424,1.586,435,2.095,540,1.354,542,1.396,545,3.621,551,1.835,626,2.921,639,1.085,676,1.028,705,2.342,730,3.54,749,1.784,752,1.804,798,3.222,884,2.055,910,1.719,916,1.404,1103,5.165,1148,2.47,1187,2.387,1231,1.694,1293,1.784,1486,1.774,1496,2.742,1507,1.599,2782,5.671,2870,1.954,4376,2.742,4384,2.47,5639,2.849,5772,2.423,5792,2.585,5794,3.21,5795,2.992,5796,2.742]],["component/314",[220,0.615]],["title/315-1",[676,17.814]],["name/315-1",[]],["text/315-1",[]],["component/315-1",[]],["title/315-2",[317,18.84,318,16.799]],["name/315-2",[]],["text/315-2",[]],["component/315-2",[]],["title/315-3",[60,12.959,216,25.746]],["name/315-3",[]],["text/315-3",[]],["component/315-3",[]],["title/315-4",[60,12.959,1308,38.79]],["name/315-4",[]],["text/315-4",[]],["component/315-4",[]],["title/315-5",[112,28.118,183,20.814]],["name/315-5",[]],["text/315-5",[]],["component/315-5",[]],["title/315-6",[5,18.651,255,24.375,317,15.553]],["name/315-6",[]],["text/315-6",[]],["component/315-6",[]],["title/315",[214,35.647,2712,37.238,3325,50.22]],["name/315",[3325,1.916,5797,2.159]],["text/315",[2,1.856,4,1.058,5,1.839,8,0.917,10,2.135,16,1.683,22,2.485,24,2.124,25,1.117,26,1.325,27,3.758,38,3.091,42,0.853,46,1.792,53,1.554,60,1.416,62,2.558,78,1.216,79,1.955,91,1.278,92,2.159,93,1.188,96,1.058,103,2.681,112,2.723,131,0.822,134,3.325,142,1.622,144,1.156,162,0.951,171,4.549,183,2.016,191,3.439,196,1.393,198,1.177,214,2.663,218,3.747,248,1.021,255,1.821,289,1.6,317,1.162,318,0.6,323,0.852,324,0.848,328,0.855,386,1.676,392,1.591,420,4.704,423,2.587,429,1.343,430,1.325,479,2.878,495,2.244,515,1.196,519,1.325,540,2.523,542,1.143,549,1.208,551,2.041,589,1.429,626,2.072,634,1.298,639,2.023,676,0.867,689,2.648,697,1.429,700,1.77,721,2.304,730,1.146,734,1.288,786,1.246,835,1.86,878,1.75,892,5.041,893,6.224,916,1.984,972,1.983,1082,2.549,1085,2.297,1131,1.698,1187,1.167,1235,2.332,1257,1.652,1461,3.514,1516,2.338,1521,1.812,1659,1.468,1857,1.732,1879,1.468,2367,3.211,2386,2.174,2712,2.782,2713,5.353,2894,3.423,3109,5.69,3111,7.8,3117,5.31,3119,5.31,3325,7.273,3952,1.948,5575,7.8,5798,2.628,5799,2.628,5800,2.628,5801,2.628]],["component/315",[220,0.615]],["title/316-1",[676,17.814]],["name/316-1",[]],["text/316-1",[]],["component/316-1",[]],["title/316-2",[317,18.84,318,16.799]],["name/316-2",[]],["text/316-2",[]],["component/316-2",[]],["title/316-3",[962,49.665]],["name/316-3",[]],["text/316-3",[]],["component/316-3",[]],["title/316-4",[60,16.431]],["name/316-4",[]],["text/316-4",[]],["component/316-4",[]],["title/316-5",[216,32.645]],["name/316-5",[]],["text/316-5",[]],["component/316-5",[]],["title/316-6",[133,28.778,183,17.183,1142,42.401]],["name/316-6",[]],["text/316-6",[]],["component/316-6",[]],["title/316-7",[347,22.7,651,23.799]],["name/316-7",[]],["text/316-7",[]],["component/316-7",[]],["title/316-8",[41,28.83,2897,49.524]],["name/316-8",[]],["text/316-8",[]],["component/316-8",[]],["title/316-9",[515,33.47,651,23.799]],["name/316-9",[]],["text/316-9",[]],["component/316-9",[]],["title/316-10",[139,31.349]],["name/316-10",[]],["text/316-10",[]],["component/316-10",[]],["title/316",[2850,46.644,2897,49.524]],["name/316",[5802,3.92]],["text/316",[2,1.447,8,0.943,11,2.298,20,1.836,22,1.914,24,0.318,29,1.133,33,5.327,34,0.808,38,0.936,40,2.317,41,1.551,46,0.303,49,1.956,57,0.464,60,1.624,62,2.181,64,0.483,77,0.433,79,0.968,80,1.815,82,1.147,89,1.734,92,1.715,93,0.545,95,0.538,100,0.698,106,0.532,119,1.4,123,0.778,128,0.512,131,2.959,133,5.051,134,0.849,138,1.604,139,1.782,143,1.995,160,0.552,163,1.817,165,1.215,172,2.57,174,2.796,176,1.4,183,3.554,191,1.547,199,2.567,201,0.658,212,1.191,216,0.422,217,0.689,218,1.573,219,0.994,233,1.097,262,0.8,267,1.196,299,1.076,308,0.593,318,0.275,323,0.391,324,0.389,328,0.392,344,0.579,345,2.581,347,0.372,365,1.715,379,1.501,386,0.445,389,0.846,390,1.057,398,2.405,400,0.97,401,0.621,408,0.605,415,0.853,481,0.662,482,0.994,491,2.39,494,0.652,499,0.54,515,0.548,521,0.541,523,0.764,545,0.446,551,2.852,554,0.662,555,0.977,560,1.153,607,0.802,626,1.877,633,0.685,634,0.595,638,0.479,651,0.727,652,1.918,656,0.879,661,1.138,663,0.778,676,0.891,678,0.652,689,0.533,698,0.879,703,0.6,704,0.794,705,2.155,721,3.091,730,1.725,733,1.378,736,1.196,764,1.638,779,0.703,780,0.745,786,0.571,798,0.559,808,0.648,812,2.636,826,0.786,829,2.001,830,0.712,832,3.677,836,0.757,837,0.645,844,0.764,915,0.703,928,0.802,955,1.412,958,0.811,964,0.728,965,1.388,1051,0.707,1104,3.929,1138,5.467,1142,7.442,1154,0.821,1168,3.869,1289,0.865,1293,1.248,1295,0.841,1306,0.841,1391,5.228,1425,0.811,1499,0.865,1500,0.764,1509,0.97,1644,2.932,1645,0.757,1671,0.745,1682,3.756,1684,2.428,1700,1.695,1761,0.997,1763,1.029,1838,0.853,1851,1.613,1855,0.615,1857,0.794,1862,1.613,1879,0.673,1905,1.069,2323,0.853,2328,0.947,2341,0.722,2348,1.84,2379,1.451,2468,1.858,2526,0.879,2641,1.215,2642,0.681,2782,1.569,2850,2.96,2897,2.664,2906,0.811,3216,0.879,3302,2.204,3754,1.029,3955,0.739,3957,0.927,3959,0.927,3975,0.893,4127,2.941,4161,0.865,4185,0.786,4289,3.378,4551,2.093,4609,1.123,5149,1.808,5392,0.947,5511,1.069,5643,1.993,5644,1.918,5727,1.123,5803,1.205,5804,1.205,5805,1.205,5806,1.205,5807,3.155,5808,1.123,5809,1.205,5810,1.205,5811,1.205,5812,1.205,5813,1.205,5814,1.205,5815,0.97]],["component/316",[220,0.615]],["title/317-1",[676,17.814]],["name/317-1",[]],["text/317-1",[]],["component/317-1",[]],["title/317-2",[317,18.84,318,16.799]],["name/317-2",[]],["text/317-2",[]],["component/317-2",[]],["title/317-3",[60,16.431]],["name/317-3",[]],["text/317-3",[]],["component/317-3",[]],["title/317-4",[139,31.349]],["name/317-4",[]],["text/317-4",[]],["component/317-4",[]],["title/317-5",[5,18.651,255,24.375,317,15.553]],["name/317-5",[]],["text/317-5",[]],["component/317-5",[]],["title/317",[560,37.733,812,30.353]],["name/317",[5816,3.92]],["text/317",[5,2.53,8,0.83,22,2.349,33,3.615,40,1.307,46,1.033,51,6.065,60,0.723,78,1.9,79,1.77,92,2.768,96,1.653,131,2.574,133,3.903,143,2.236,144,1.806,163,1.599,174,2.166,183,3.674,191,3.684,198,1.839,199,2.877,204,2.029,233,4.021,239,2.021,255,2.642,262,1.463,317,1.686,318,0.938,323,1.331,324,1.324,328,1.335,347,1.267,398,1.546,436,2.268,460,2.868,472,2.907,494,3.558,513,2.145,551,2.244,554,2.256,560,6.66,612,3.789,626,1.697,634,2.029,656,2.994,676,0.784,702,2.155,734,2.013,779,3.838,786,3.903,804,2.379,812,4.768,829,2.604,836,4.137,1104,4.878,1106,4.725,1131,2.653,1138,3.376,1151,2.198,1387,4.596,1595,2.427,1596,4.798,2445,7.581,2897,4.431,3302,4.596,5817,4.105,5818,4.105]],["component/317",[220,0.615]],["title/318-1",[676,17.814]],["name/318-1",[]],["text/318-1",[]],["component/318-1",[]],["title/318-2",[317,18.84,318,16.799]],["name/318-2",[]],["text/318-2",[]],["component/318-2",[]],["title/318-3",[60,16.431]],["name/318-3",[]],["text/318-3",[]],["component/318-3",[]],["title/318",[1334,32.349,2658,59.201]],["name/318",[5819,3.92]],["text/318",[8,1.015,22,2.831,38,2.286,46,1.94,60,0.885,71,1.789,92,3.349,143,3.188,165,2.716,177,4.085,191,3.015,216,2.699,219,1.583,228,1.867,234,2.949,246,1.844,262,1.789,287,3.158,318,1.147,323,1.628,324,1.62,328,1.634,347,2.895,365,3.341,438,3.012,465,3.422,528,3.034,547,3.497,551,3.199,626,2.418,639,4.048,652,4.289,676,0.96,721,2.967,734,2.462,1056,3.245,1296,3.865,1334,5.659,1351,3.948,1656,6.551,1659,2.807,1854,3.215,1873,4.681,2325,4.155,2348,6.135,2658,6.205,2818,3.277,2991,3.607,2993,4.457,3452,3.948,4095,3.383,5344,8.741,5820,5.022,5821,4.681,5822,5.022,5823,5.022,5824,5.022]],["component/318",[220,0.615]],["title/319-1",[676,17.814]],["name/319-1",[]],["text/319-1",[]],["component/319-1",[]],["title/319-2",[139,31.349]],["name/319-2",[]],["text/319-2",[]],["component/319-2",[]],["title/319-3",[317,18.84,318,16.799]],["name/319-3",[]],["text/319-3",[]],["component/319-3",[]],["title/319-4",[60,16.431]],["name/319-4",[]],["text/319-4",[]],["component/319-4",[]],["title/319-5",[216,25.746,651,23.799]],["name/319-5",[]],["text/319-5",[]],["component/319-5",[]],["title/319-6",[651,23.799,1082,41.326]],["name/319-6",[]],["text/319-6",[]],["component/319-6",[]],["title/319-7",[651,23.799,1006,50.71]],["name/319-7",[]],["text/319-7",[]],["component/319-7",[]],["title/319-8",[651,23.799,2035,43.781]],["name/319-8",[]],["text/319-8",[]],["component/319-8",[]],["title/319-9",[568,34.374,651,23.799]],["name/319-9",[]],["text/319-9",[]],["component/319-9",[]],["title/319-10",[568,28.377,651,19.647,3929,51.839]],["name/319-10",[]],["text/319-10",[]],["component/319-10",[]],["title/319",[1183,42.892,1702,48.981]],["name/319",[1702,2.611]],["text/319",[2,1.016,8,1.662,19,1.224,20,1.521,21,3.132,22,1.914,23,2.885,24,1.182,29,4.611,46,0.457,49,1.822,60,1.611,61,0.641,62,0.578,66,1.37,67,0.868,68,1.542,71,0.647,74,0.833,84,0.83,88,2.097,92,2.456,94,1.83,95,0.812,99,0.73,110,0.742,121,1.06,126,0.95,131,0.568,138,3.11,139,0.611,142,0.65,143,0.618,150,2.512,159,1.631,168,0.786,172,1.799,180,0.861,183,3.689,189,1.236,191,2.139,216,0.636,219,0.573,220,0.38,224,1.238,233,0.887,234,1.067,236,0.909,258,1.198,262,1.593,272,4.504,275,0.963,286,1.015,300,0.92,310,1.612,318,0.415,319,1.01,323,0.589,324,0.586,328,0.591,369,2.893,386,2.02,401,0.937,417,1.312,425,0.968,499,0.814,515,0.827,519,2.255,521,0.817,527,0.812,540,0.766,542,1.944,551,2.154,568,4.455,596,1.115,625,1.074,626,2.833,632,1.552,634,1.618,651,2.661,661,0.92,676,1.345,689,0.804,703,1.631,705,0.613,710,1.253,752,1.841,821,1.133,887,3.055,928,1.21,960,3.026,967,2.009,969,1.606,1000,1.027,1001,1.8,1006,2.258,1010,5.342,1012,4.689,1018,3.303,1060,6.026,1071,2.442,1082,4.62,1149,1.06,1168,3.604,1183,2.608,1187,1.454,1253,1.552,1305,1.115,1450,2.009,1465,1.347,1488,1.503,1628,1.325,1645,1.143,1670,1.115,1700,3.374,1702,2.978,1746,1.21,1765,3.211,1879,3.934,1881,3.374,1932,1.287,1946,1.552,2035,5.185,2302,2.159,2348,2.608,2410,1.253,2442,2.871,2468,1.503,2590,1.503,3109,1.287,3698,1.694,3929,3.817,4201,1.694,4333,3.817,4727,1.612,5825,1.817,5826,1.817,5827,1.817,5828,1.817,5829,1.817,5830,1.817,5831,1.817,5832,5.468,5833,3.275,5834,1.817]],["component/319",[220,0.615]],["title/320-1",[676,17.814]],["name/320-1",[]],["text/320-1",[]],["component/320-1",[]],["title/320-2",[317,18.84,318,16.799]],["name/320-2",[]],["text/320-2",[]],["component/320-2",[]],["title/320-3",[60,16.431]],["name/320-3",[]],["text/320-3",[]],["component/320-3",[]],["title/320-4",[5,18.651,255,24.375,317,15.553]],["name/320-4",[]],["text/320-4",[]],["component/320-4",[]],["title/320-5",[139,31.349]],["name/320-5",[]],["text/320-5",[]],["component/320-5",[]],["title/320",[639,24.858,2266,60.833]],["name/320",[5835,3.92]],["text/320",[2,1.862,5,2.342,8,0.741,16,1.36,22,1.901,25,2.551,26,1.848,38,2.26,46,1.511,60,1.058,62,2.804,71,1.306,92,2.611,96,1.475,105,1.972,115,1.497,131,1.146,133,4.608,138,1.486,143,1.246,144,1.612,163,1.427,169,1.575,183,3.467,198,2.689,219,1.155,228,2.231,239,2.954,241,1.731,246,1.346,255,3.06,317,0.939,318,0.837,323,1.188,324,1.182,328,1.192,329,1.627,364,1.731,389,1.38,392,1.286,416,1.906,420,1.731,551,4.28,565,2.003,589,1.992,626,1.965,633,2.084,638,1.457,639,2.029,708,2.544,721,1.411,722,1.652,781,5.474,798,1.702,800,2.072,812,2.477,837,4.08,935,5.323,955,2.305,967,1.647,1032,5.133,1151,1.962,1187,5.437,1350,2.82,1585,2.497,1849,5.133,1879,2.048,2248,2.346,2657,2.325,3711,3.252,4689,3.252,4710,2.951,5836,3.416,5837,3.665,5838,3.665,5839,3.665,5840,3.665,5841,3.665,5842,3.665,5843,3.665,5844,3.665,5845,3.665,5846,10.437,5847,3.665,5848,3.665,5849,3.665,5850,3.665,5851,3.665,5852,3.665,5853,3.665,5854,3.665,5855,3.665]],["component/320",[220,0.615]],["title/321-1",[676,17.814]],["name/321-1",[]],["text/321-1",[]],["component/321-1",[]],["title/321-2",[317,18.84,318,16.799]],["name/321-2",[]],["text/321-2",[]],["component/321-2",[]],["title/321-3",[60,16.431]],["name/321-3",[]],["text/321-3",[]],["component/321-3",[]],["title/321-4",[139,31.349]],["name/321-4",[]],["text/321-4",[]],["component/321-4",[]],["title/321",[639,24.858,2898,55.493]],["name/321",[5856,3.92]],["text/321",[8,1.166,34,3.079,38,3.025,46,1.452,60,1.017,71,2.055,81,3.931,92,2.74,139,1.94,163,2.246,183,3.573,228,2.145,246,2.118,318,1.318,323,1.87,324,1.861,328,1.877,347,2.641,365,2.501,420,4.818,481,3.17,482,3.787,626,2.909,639,1.95,676,1.102,736,4.558,766,5.583,780,3.567,1051,3.388,1306,5.977,1334,2.538,1352,6.24,1409,6.145,1525,4.207,1579,4.084,1644,6.344,1688,4.926,1851,6.145,1905,5.119,2192,6.24,2323,4.084,2898,9.861,4218,7.079,4630,7.307,4632,7.593,5857,5.769,5858,5.769]],["component/321",[220,0.615]],["title/322-1",[676,17.814]],["name/322-1",[]],["text/322-1",[]],["component/322-1",[]],["title/322-2",[317,18.84,318,16.799]],["name/322-2",[]],["text/322-2",[]],["component/322-2",[]],["title/322-3",[60,16.431]],["name/322-3",[]],["text/322-3",[]],["component/322-3",[]],["title/322",[216,25.746,639,24.858]],["name/322",[2098,3.478]],["text/322",[1,1.729,8,0.591,14,1.011,22,2.721,24,0.773,32,1.319,34,1.789,38,2.268,40,0.931,41,1.147,42,0.95,46,2.345,49,2.548,60,1.51,62,0.931,77,1.789,82,1.063,88,1.372,92,2.81,95,2.22,106,1.29,112,1.118,119,1.823,122,1.855,130,1.528,131,2.027,134,1.106,139,2.18,142,1.778,143,2.912,165,1.582,183,3.45,199,1.279,216,4.655,218,1.977,219,1.567,228,1.087,246,1.074,249,1.948,278,3.57,287,1.839,310,3.583,318,0.668,323,0.948,324,0.943,328,0.951,347,1.535,356,2.017,376,2.25,390,1.377,396,2.253,417,3.432,447,2.374,479,2.391,540,1.233,551,1.696,565,1.598,568,1.367,626,2.563,635,2.42,639,4.773,646,1.78,676,0.559,705,0.987,710,2.017,736,2.648,786,2.357,793,2.355,796,1.695,798,2.308,821,1.823,859,1.908,909,2.863,910,1.566,1087,1.78,1146,2.595,1197,3.752,1292,2.595,1306,2.043,1334,1.287,1340,1.794,1486,1.616,1635,1.948,1971,1.809,2338,2.207,2349,2.498,2350,1.582,2354,3.428,2400,3.387,2651,1.855,2661,3.244,3763,2.25,3880,2.595,5565,2.726]],["component/322",[220,0.615]],["title/323-1",[676,17.814]],["name/323-1",[]],["text/323-1",[]],["component/323-1",[]],["title/323-2",[317,18.84,318,16.799]],["name/323-2",[]],["text/323-2",[]],["component/323-2",[]],["title/323-3",[60,16.431]],["name/323-3",[]],["text/323-3",[]],["component/323-3",[]],["title/323-4",[5,18.651,255,24.375,317,15.553]],["name/323-4",[]],["text/323-4",[]],["component/323-4",[]],["title/323",[639,24.858,2262,59.201]],["name/323",[5859,3.92]],["text/323",[2,2.469,5,2.957,8,1.059,16,1.943,22,1.986,34,1.885,46,2.003,60,0.923,61,2.808,63,2.483,92,3.27,96,2.109,124,2.653,131,1.638,133,2.483,139,3.615,140,3.953,144,2.304,163,2.04,183,3.917,191,2.049,218,2.083,228,1.948,246,1.923,255,3.196,275,4.219,277,5.048,317,1.342,318,1.197,323,1.698,324,1.69,328,1.704,347,1.617,396,1.82,398,2.997,521,2.354,528,3.165,551,1.787,597,2.833,626,2.981,633,2.979,634,3.933,639,2.69,676,1.001,705,1.768,721,2.017,812,2.162,837,2.804,965,2.304,1032,6.482,1151,2.804,1409,5.716,1932,3.709,2192,3.82,2262,4.217,2442,2.75,3004,4.882,3969,3.762,5860,5.238]],["component/323",[220,0.615]],["title/324-1",[676,17.814]],["name/324-1",[]],["text/324-1",[]],["component/324-1",[]],["title/324-2",[317,18.84,318,16.799]],["name/324-2",[]],["text/324-2",[]],["component/324-2",[]],["title/324-3",[969,45.709]],["name/324-3",[]],["text/324-3",[]],["component/324-3",[]],["title/324-4",[651,23.799,2667,48.467]],["name/324-4",[]],["text/324-4",[]],["component/324-4",[]],["title/324-5",[262,21.627,651,19.647,2667,40.011]],["name/324-5",[]],["text/324-5",[]],["component/324-5",[]],["title/324-6",[139,31.349]],["name/324-6",[]],["text/324-6",[]],["component/324-6",[]],["title/324",[2667,48.467,2899,59.201]],["name/324",[5861,3.92]],["text/324",[2,1.797,8,0.509,22,1.091,24,0.666,29,1.271,38,0.747,40,1.844,49,1.457,60,0.771,63,1.194,76,1.533,80,1.984,85,2.144,92,2.103,95,1.125,96,1.014,131,3.953,135,4.209,138,3.481,169,1.083,173,1.545,183,2.763,191,0.985,195,1.47,200,2.672,204,1.245,216,0.882,217,2.502,219,0.794,247,1.203,255,1.012,262,2.79,275,1.335,279,2.853,285,2.296,288,1.809,289,1.533,291,1.105,309,1.613,315,1.293,318,1.324,323,0.817,324,0.813,328,0.82,341,1.349,345,2.853,347,2.136,362,1.5,371,1.558,379,1.199,392,0.884,393,1.47,394,2.826,398,1.647,494,1.362,519,2.206,549,1.158,551,1.977,553,1.281,571,1.384,581,2.502,609,1.416,626,2.019,634,3.419,639,4.004,645,1.271,651,1.875,676,0.836,678,2.365,703,1.255,705,0.85,706,1.678,782,1.451,800,1.424,812,1.805,964,1.522,965,1.108,1072,2.151,1085,2.935,1095,1.356,1103,1.083,1187,1.941,1242,1.868,1495,3.3,1497,4.948,1499,3.141,1527,1.784,1633,3.096,2242,1.837,2348,2.551,2377,1.784,2385,1.424,2667,8.333,2899,3.521,4351,2.235,4418,2.151,5678,8.001,5681,8.001,5862,2.235,5863,4.076,5864,9.218,5865,5.401,5866,2.519,5867,2.348,5868,2.519,5869,2.348,5870,4.373,5871,2.519,5872,4.373,5873,4.373,5874,4.373,5875,2.519,5876,2.519,5877,2.519,5878,2.519,5879,2.519,5880,2.519,5881,2.519,5882,2.519,5883,2.519,5884,2.519,5885,2.519,5886,2.519,5887,4.076,5888,2.348,5889,2.348,5890,2.519]],["component/324",[220,0.615]],["title/325-1",[676,17.814]],["name/325-1",[]],["text/325-1",[]],["component/325-1",[]],["title/325-2",[317,18.84,318,16.799]],["name/325-2",[]],["text/325-2",[]],["component/325-2",[]],["title/325-3",[969,45.709]],["name/325-3",[]],["text/325-3",[]],["component/325-3",[]],["title/325-4",[651,23.799,2667,48.467]],["name/325-4",[]],["text/325-4",[]],["component/325-4",[]],["title/325-5",[262,21.627,651,19.647,2667,40.011]],["name/325-5",[]],["text/325-5",[]],["component/325-5",[]],["title/325-6",[139,31.349]],["name/325-6",[]],["text/325-6",[]],["component/325-6",[]],["title/325",[649,41.57,2667,48.467]],["name/325",[5891,3.92]],["text/325",[2,2.765,8,0.545,14,0.931,22,1.156,24,0.712,29,1.359,34,0.969,38,0.799,40,1.941,41,1.056,47,1.342,49,1.544,60,0.817,63,2.891,71,0.96,76,1.64,80,2.088,92,2.192,115,1.893,130,1.408,131,3.527,135,4,138,2.473,143,0.916,160,1.234,169,1.158,173,1.653,183,2.31,198,1.207,202,1.359,216,2.135,217,2.652,219,0.849,247,1.286,255,1.861,262,3.175,275,1.428,279,3.024,285,1.414,289,1.64,291,1.182,309,1.724,318,1.654,323,0.873,324,0.869,328,0.876,345,3.024,347,1.882,371,1.666,379,1.282,386,0.995,392,0.945,393,1.571,394,2.994,398,1.745,494,1.457,519,1.359,551,0.919,553,1.37,571,1.48,609,1.514,624,2.229,626,2.104,634,4.979,639,2.758,645,1.359,649,2.62,651,1.974,676,0.885,678,2.506,703,1.342,705,0.909,706,1.795,798,1.251,800,4.613,812,2.517,837,1.442,964,1.628,965,2.039,1085,1.365,1103,1.158,1131,1.741,1306,1.882,1527,1.907,1528,2.033,1851,1.935,2049,6.426,2247,2.169,2348,1.571,2371,2.073,2385,2.62,2667,8.487,3854,5.684,4418,2.301,5144,4.112,5863,4.319,5865,2.511,5867,2.511,5869,2.511,5887,4.319,5888,2.511,5889,4.319,5892,10.931,5893,2.694,5894,2.694,5895,4.634,5896,8.159,5897,2.694,5898,2.694,5899,2.694,5900,4.634,5901,2.694,5902,2.694,5903,4.634,5904,2.694,5905,2.694,5906,2.694,5907,2.694,5908,2.694,5909,2.694,5910,2.694,5911,2.694,5912,2.694]],["component/325",[220,0.615]],["title/326-1",[676,17.814]],["name/326-1",[]],["text/326-1",[]],["component/326-1",[]],["title/326-2",[317,18.84,318,16.799]],["name/326-2",[]],["text/326-2",[]],["component/326-2",[]],["title/326-3",[60,16.431]],["name/326-3",[]],["text/326-3",[]],["component/326-3",[]],["title/326-4",[216,25.746,651,23.799]],["name/326-4",[]],["text/326-4",[]],["component/326-4",[]],["title/326-5",[347,22.7,651,23.799]],["name/326-5",[]],["text/326-5",[]],["component/326-5",[]],["title/326",[10,28.575,42,19.714,1065,47.718]],["name/326",[5913,3.92]],["text/326",[8,0.626,10,5.946,20,1.437,21,3.934,22,2.547,24,0.818,41,1.213,42,1.005,49,2.252,57,2.601,60,1.691,62,2.524,66,4.27,71,1.858,72,1.793,74,1.418,80,3.496,82,1.895,85,1.517,86,1.609,92,2.378,96,2.72,118,2.108,128,2.216,131,1.63,142,1.865,143,1.052,150,2.93,172,2.099,183,3.266,198,1.386,216,1.083,219,2.79,251,1.602,318,0.707,319,1.719,323,1.003,324,0.998,328,1.007,347,0.955,386,1.143,396,2.348,401,1.595,452,1.929,527,1.382,626,2.975,638,2.073,676,1.291,690,2.061,705,1.759,721,1.191,727,1.946,810,4.627,812,1.277,838,1.963,883,4.023,885,2.294,947,4.627,1000,3.82,1001,4.358,1012,7.144,1065,7.544,1131,1.999,1187,4.26,1217,2.491,1236,2.746,1285,1.567,1406,3.754,1849,3.512,1881,3.935,1909,4.178,1928,1.963,1933,3.402,2282,2.746,2385,1.749,2778,2.222,3109,2.191,3265,4.627,3503,6.102,4229,2.381,5778,2.491,5914,3.094,5915,3.094,5916,3.094,5917,3.094]],["component/326",[220,0.615]],["title/327-1",[142,33.348]],["name/327-1",[]],["text/327-1",[]],["component/327-1",[]],["title/327",[]],["name/327",[142,0.828,2900,1.527]],["text/327",[21,6.531,41,2.837,60,1.775,62,3.986,82,2.629,92,1.943,139,2.433,142,4.143,163,3.921,183,2.048,386,2.673,521,3.251,676,1.382,703,5.769,960,5.551,1000,5.693,1082,5.659,1121,4.115,1500,4.589,1903,7.801,1928,6.387,2900,8.677,2906,7.801,5918,5.825,5919,5.825]],["component/327",[220,0.615]],["title/328-1",[183,26.392]],["name/328-1",[]],["text/328-1",[]],["component/328-1",[]],["title/328",[]],["name/328",[183,0.656,2900,1.527]],["text/328",[2,1.878,8,2.121,22,1.511,29,3.054,37,4.992,38,2.63,49,2.018,60,1.563,62,2.823,91,2.946,106,2.672,112,2.315,135,4.347,139,2.036,141,3.15,163,3.453,183,3.994,189,2.285,191,4.104,218,4.172,246,2.223,309,5.676,361,2.881,521,3.985,522,3.164,626,2.978,634,4.382,676,1.157,705,2.043,720,3.08,753,3.164,832,3.487,1077,6.194,1085,5.314,1149,3.532,1857,3.991,2469,3.951,2900,6.915,3601,4.23,5920,5.171,5921,5.171]],["component/328",[220,0.615]],["title/329-1",[347,28.782]],["name/329-1",[]],["text/329-1",[]],["component/329-1",[]],["title/329",[]],["name/329",[347,0.715,2900,1.527]],["text/329",[8,1.159,22,2.124,29,2.89,32,2.583,38,1.7,41,2.247,60,1.79,61,2.022,62,1.824,71,2.042,82,2.083,92,2.287,115,3.479,117,3.239,128,3.619,142,3.045,143,1.948,163,2.231,203,2.843,218,2.279,233,4.158,262,2.042,347,1.769,396,1.991,417,3.41,499,3.814,527,2.559,547,2.6,565,3.132,581,3.279,676,1.095,689,3.768,695,3.859,703,2.854,720,6.405,721,3.911,821,3.573,830,3.388,838,5.401,883,3.412,978,4.179,980,5.801,1077,5.947,1082,3.22,1125,3.279,1149,3.343,1290,3.739,1487,4.504,1541,3.068,1855,2.928,2370,6.339,2661,3.739,2828,3.904,2900,5.612,3917,4.504,5922,4.741]],["component/329",[220,0.615]],["title/330-1",[676,17.814]],["name/330-1",[]],["text/330-1",[]],["component/330-1",[]],["title/330-2",[317,18.84,318,16.799]],["name/330-2",[]],["text/330-2",[]],["component/330-2",[]],["title/330-3",[962,49.665]],["name/330-3",[]],["text/330-3",[]],["component/330-3",[]],["title/330-4",[216,32.645]],["name/330-4",[]],["text/330-4",[]],["component/330-4",[]],["title/330-5",[142,33.348]],["name/330-5",[]],["text/330-5",[]],["component/330-5",[]],["title/330-6",[347,28.782]],["name/330-6",[]],["text/330-6",[]],["component/330-6",[]],["title/330",[1071,32.842,2900,48.467]],["name/330",[5923,3.92]],["text/330",[8,0.939,21,4.056,22,2.04,29,2.344,32,1.218,37,2.908,38,0.802,41,1.822,46,0.68,49,0.901,60,1.441,61,1.639,62,2.842,67,1.29,68,1.272,71,0.963,82,2.221,92,2.94,95,1.207,99,1.085,100,1.566,112,3.414,115,1.899,117,4.102,121,4.233,128,1.975,139,1.562,141,1.406,142,2.924,143,0.919,163,3.183,183,2.314,203,1.341,218,1.075,228,1.005,233,2.269,260,1.576,262,0.963,318,0.617,323,0.876,324,0.872,328,0.879,347,1.434,386,1.717,389,1.018,390,1.272,396,1.615,398,1.018,417,1.861,499,2.082,521,1.215,527,1.207,540,1.139,547,2.108,565,1.477,581,1.547,626,2.465,676,0.888,689,2.057,695,1.82,697,1.469,703,4.072,705,1.568,720,5.366,721,2.794,804,1.566,821,1.685,830,1.598,838,2.948,883,1.609,916,1.182,960,2.929,978,1.971,980,3.166,1000,2.627,1071,3.988,1077,3.246,1082,3.435,1121,1.537,1125,1.547,1149,2.71,1270,1.528,1290,1.763,1487,2.124,1500,1.714,1507,3.045,1541,1.447,1855,1.381,1903,4.117,1928,2.948,2370,6.51,2442,2.44,2661,1.763,2828,1.841,2900,8.851,2901,2.004,2906,4.117,3917,2.124,5918,2.176,5919,2.176,5922,2.236]],["component/330",[220,0.615]],["title/331-1",[676,17.814]],["name/331-1",[]],["text/331-1",[]],["component/331-1",[]],["title/331-2",[317,18.84,318,16.799]],["name/331-2",[]],["text/331-2",[]],["component/331-2",[]],["title/331-3",[216,32.645]],["name/331-3",[]],["text/331-3",[]],["component/331-3",[]],["title/331-4",[60,16.431]],["name/331-4",[]],["text/331-4",[]],["component/331-4",[]],["title/331-5",[142,33.348]],["name/331-5",[]],["text/331-5",[]],["component/331-5",[]],["title/331-6",[347,28.782]],["name/331-6",[]],["text/331-6",[]],["component/331-6",[]],["title/331-7",[515,33.47,651,23.799]],["name/331-7",[]],["text/331-7",[]],["component/331-7",[]],["title/331-8",[438,55.912]],["name/331-8",[]],["text/331-8",[]],["component/331-8",[]],["title/331-9",[47,36.628,183,20.814]],["name/331-9",[]],["text/331-9",[]],["component/331-9",[]],["title/331-10",[183,26.392]],["name/331-10",[]],["text/331-10",[]],["component/331-10",[]],["title/331-11",[183,20.814,651,23.799]],["name/331-11",[]],["text/331-11",[]],["component/331-11",[]],["title/331",[705,24.813,2900,48.467]],["name/331",[5924,3.92]],["text/331",[2,1.574,6,0.7,8,0.503,21,2.518,22,1.939,32,0.606,34,0.484,37,1.184,38,2.035,41,0.975,47,0.67,49,0.448,60,1.439,61,0.475,62,2.915,63,0.638,67,0.642,68,0.633,71,0.886,79,0.58,80,0.461,82,0.904,84,1.585,91,0.654,92,1.7,93,0.608,99,0.999,100,0.779,110,0.55,112,2.195,121,2.523,124,4.485,131,2.429,133,1.179,134,0.509,138,1.009,139,2.128,141,0.7,142,1.816,143,2.332,163,2.671,172,0.541,176,2.164,183,3.186,189,0.939,216,0.471,217,1.424,218,0.535,219,1.995,220,0.281,228,0.5,233,1.215,262,0.886,274,0.649,285,0.706,300,0.681,309,0.861,314,1.695,318,0.307,323,0.436,324,0.434,328,0.438,347,2.118,352,0.916,379,1.184,386,1.282,389,0.937,390,1.171,392,2.574,396,1.503,398,0.507,417,1.39,432,0.614,438,1.492,447,1.657,482,0.595,513,0.703,515,1.132,519,0.678,521,0.605,523,0.853,527,1.111,528,1.503,540,0.567,545,2.877,551,0.459,565,0.735,626,1.769,639,1.173,646,0.819,651,2.049,660,0.665,676,1.209,689,1.101,703,4.246,704,0.887,705,1.171,720,2.201,721,3.634,730,1.886,733,1.526,734,0.659,739,0.853,749,0.747,753,0.703,786,1.179,798,3.957,804,0.779,806,2.288,812,1.786,821,0.839,825,2.425,826,0.878,836,0.846,837,0.72,838,0.853,883,0.801,956,0.724,960,2.75,965,0.592,978,0.981,980,1.695,1000,1.407,1056,1.608,1071,3.277,1077,4.421,1082,1.951,1121,0.765,1149,1.451,1172,0.997,1270,0.76,1273,4.741,1293,1.382,1340,0.825,1500,0.853,1507,2.528,1533,2.052,1671,0.832,1677,4.286,1681,0.79,1851,0.966,1879,0.752,1903,2.338,1928,1.578,2350,1.877,2370,5.364,2379,1.608,2397,1.471,2408,2.983,2410,0.928,2442,3.323,2641,3.104,2642,0.76,2661,0.878,2828,0.916,2900,7.093,2901,1.845,2906,2.338,2942,0.952,3153,0.928,3432,1.149,3955,0.825,3959,2.671,4176,1.149,4185,0.878,4731,2.058,4732,2.058,4733,2.058,4781,2.319,5357,1.878,5530,3.235,5918,1.083,5919,1.083,5925,1.345,5926,1.345,5927,1.345,5928,1.345,5929,2.488,5930,2.488]],["component/331",[220,0.615]],["title/332-1",[676,17.814]],["name/332-1",[]],["text/332-1",[]],["component/332-1",[]],["title/332-2",[317,18.84,318,16.799]],["name/332-2",[]],["text/332-2",[]],["component/332-2",[]],["title/332-3",[216,32.645]],["name/332-3",[]],["text/332-3",[]],["component/332-3",[]],["title/332-4",[142,33.348]],["name/332-4",[]],["text/332-4",[]],["component/332-4",[]],["title/332-5",[347,28.782]],["name/332-5",[]],["text/332-5",[]],["component/332-5",[]],["title/332-6",[183,20.814,219,23.177]],["name/332-6",[]],["text/332-6",[]],["component/332-6",[]],["title/332-7",[183,26.392]],["name/332-7",[]],["text/332-7",[]],["component/332-7",[]],["title/332",[720,37.404,2900,48.467]],["name/332",[5931,3.92]],["text/332",[2,0.722,8,1.506,21,3.695,22,1.858,29,2.058,32,1.049,37,3.544,38,1.616,41,1.6,49,1.36,60,1.654,61,0.821,62,3.138,67,1.111,68,1.095,71,0.829,82,1.981,91,1.132,92,2.648,99,0.934,100,1.349,106,1.027,112,3.379,115,1.667,117,2.307,121,3.819,128,1.735,135,2.001,139,1.372,141,2.123,142,2.664,143,0.791,163,3.654,183,3.187,189,0.878,191,2.132,203,1.155,218,2.604,219,0.734,228,0.865,233,1.993,246,0.854,262,0.829,309,2.612,318,0.532,323,0.754,324,0.751,328,0.757,347,1.26,361,1.107,386,2.013,396,0.809,398,0.876,417,1.635,499,1.828,521,2.449,522,1.216,527,1.039,540,0.981,547,1.056,565,1.272,581,1.332,626,2.42,634,2.016,676,1.041,689,1.806,695,1.567,703,4.085,705,1.377,720,5.579,721,2.098,753,1.216,804,1.349,821,1.451,830,1.376,832,1.34,838,2.588,883,1.386,916,1.018,960,2.612,978,1.697,980,2.78,1000,2.307,1071,1.823,1077,4.573,1082,3.063,1085,2.76,1121,1.324,1125,1.332,1149,2.38,1270,1.316,1290,1.518,1487,1.829,1500,1.476,1507,2.715,1541,1.246,1855,1.189,1857,1.534,1903,3.67,1928,2.588,2370,5.94,2442,1.222,2469,1.518,2661,1.518,2828,1.585,2900,8.768,2901,1.725,2906,3.67,3601,1.625,3917,1.829,5918,1.874,5919,1.874,5920,1.987,5921,1.987,5922,1.925]],["component/332",[220,0.615]],["title/333-1",[676,17.814]],["name/333-1",[]],["text/333-1",[]],["component/333-1",[]],["title/333-2",[317,18.84,318,16.799]],["name/333-2",[]],["text/333-2",[]],["component/333-2",[]],["title/333-3",[216,32.645]],["name/333-3",[]],["text/333-3",[]],["component/333-3",[]],["title/333-4",[142,33.348]],["name/333-4",[]],["text/333-4",[]],["component/333-4",[]],["title/333-5",[347,28.782]],["name/333-5",[]],["text/333-5",[]],["component/333-5",[]],["title/333-6",[347,28.782]],["name/333-6",[]],["text/333-6",[]],["component/333-6",[]],["title/333-7",[183,26.392]],["name/333-7",[]],["text/333-7",[]],["component/333-7",[]],["title/333",[1507,36.628,2900,48.467]],["name/333",[5932,3.92]],["text/333",[2,0.763,8,1.56,21,3.829,22,1.925,29,2.161,32,1.11,37,2.708,38,1.688,41,1.68,49,0.82,60,1.605,61,0.868,62,3.071,67,1.175,68,1.159,71,0.877,82,2.069,91,1.197,92,2.592,99,0.988,100,1.426,106,1.086,112,3.482,115,1.751,117,1.391,121,3.972,128,1.822,135,2.101,139,1.441,141,2.229,142,2.76,143,0.837,163,3.546,183,3.173,189,0.929,191,2.226,203,1.221,218,2.708,228,0.915,233,2.093,246,0.904,262,0.877,309,2.743,318,0.562,323,0.798,324,0.794,328,0.801,347,0.76,361,1.171,386,1.583,396,0.855,398,0.927,417,1.717,499,1.92,521,2.558,522,1.286,527,1.099,540,1.038,547,1.117,565,1.345,581,1.408,626,2.488,634,2.118,676,1.087,689,1.897,695,1.658,703,3.844,705,1.446,720,5.355,721,2.191,753,1.286,804,1.426,821,1.535,830,1.455,832,1.417,838,2.718,883,1.465,960,2.728,978,1.795,980,2.92,1000,2.423,1071,1.914,1077,4.756,1082,3.199,1085,2.883,1121,1.4,1125,1.408,1149,2.5,1270,1.391,1290,1.606,1487,1.935,1500,1.561,1507,3.392,1541,1.318,1855,1.257,1857,1.622,1903,3.833,1928,2.718,2370,5.744,2469,1.606,2661,1.606,2828,1.677,2900,8.737,2901,1.825,2906,3.833,3601,1.719,3917,1.935,5918,1.982,5919,1.982,5920,2.102,5921,2.102,5922,2.036]],["component/333",[220,0.615]],["title/334-1",[676,17.814]],["name/334-1",[]],["text/334-1",[]],["component/334-1",[]],["title/334-2",[317,18.84,318,16.799]],["name/334-2",[]],["text/334-2",[]],["component/334-2",[]],["title/334-3",[216,32.645]],["name/334-3",[]],["text/334-3",[]],["component/334-3",[]],["title/334-4",[142,33.348]],["name/334-4",[]],["text/334-4",[]],["component/334-4",[]],["title/334-5",[347,28.782]],["name/334-5",[]],["text/334-5",[]],["component/334-5",[]],["title/334-6",[183,20.814,219,23.177]],["name/334-6",[]],["text/334-6",[]],["component/334-6",[]],["title/334-7",[183,26.392]],["name/334-7",[]],["text/334-7",[]],["component/334-7",[]],["title/334",[2900,48.467,2901,54.515]],["name/334",[5933,3.92]],["text/334",[2,0.688,8,1.46,21,3.583,22,1.989,29,1.973,32,1,37,3.792,38,1.557,41,1.534,49,1.304,60,1.614,61,0.783,62,3.201,67,1.059,68,1.044,71,0.79,82,1.908,91,1.079,92,2.588,99,0.891,100,1.286,106,0.979,112,3.292,115,1.599,117,2.212,121,3.692,128,1.663,135,1.918,139,1.316,141,2.035,142,2.583,143,0.754,163,3.566,183,3.275,189,0.837,191,2.053,203,1.101,218,2.517,219,0.699,228,0.825,233,1.911,246,0.814,262,0.79,309,2.504,318,0.507,323,0.719,324,0.716,328,0.722,347,1.208,361,1.055,386,1.939,396,0.771,398,1.473,417,1.567,499,1.753,521,2.359,522,1.159,527,0.991,540,1.65,547,1.006,565,1.212,571,1.219,581,1.269,626,2.362,634,1.933,676,1.003,689,1.732,695,1.494,703,3.97,705,1.32,720,5.474,721,2.021,753,1.159,804,1.286,821,1.383,830,1.312,832,1.277,838,2.482,883,1.321,916,0.97,960,2.515,978,1.618,980,2.666,1000,2.212,1071,1.747,1077,4.421,1082,2.95,1085,2.658,1121,1.262,1125,1.269,1149,2.282,1270,1.254,1290,1.447,1487,1.744,1500,1.407,1507,3.597,1541,1.188,1855,1.133,1857,1.462,1903,3.535,1928,2.482,2370,6.104,2442,1.165,2469,1.447,2661,1.447,2828,1.511,2900,8.74,2901,3.891,2906,3.535,3601,1.549,3917,1.744,4278,2.733,4922,1.894,5918,1.786,5919,1.786,5920,1.894,5921,1.894,5922,1.835]],["component/334",[220,0.615]],["title/335-1",[676,17.814]],["name/335-1",[]],["text/335-1",[]],["component/335-1",[]],["title/335-2",[317,18.84,318,16.799]],["name/335-2",[]],["text/335-2",[]],["component/335-2",[]],["title/335-3",[60,16.431]],["name/335-3",[]],["text/335-3",[]],["component/335-3",[]],["title/335",[639,24.858,1334,32.349]],["name/335",[5934,3.92]],["text/335",[8,1.438,11,5.878,49,2.371,60,1.254,61,3.511,62,2.265,92,3.083,143,3.901,160,3.259,246,2.612,318,1.625,323,2.306,324,2.295,328,2.314,347,2.196,364,3.361,396,2.472,549,3.27,589,3.868,626,2.566,639,4.203,676,1.359,792,5.274,882,5.274,1177,4.513,1198,5.369,1334,5.469,2408,6.863,2442,5.225,2848,4.791,3465,5.886,3855,6.075,5935,7.114,5936,7.114]],["component/335",[220,0.615]],["title/336-1",[676,17.814]],["name/336-1",[]],["text/336-1",[]],["component/336-1",[]],["title/336-2",[317,18.84,318,16.799]],["name/336-2",[]],["text/336-2",[]],["component/336-2",[]],["title/336-3",[60,16.431]],["name/336-3",[]],["text/336-3",[]],["component/336-3",[]],["title/336",[705,24.813,1463,56.58]],["name/336",[5937,3.92]],["text/336",[2,1.666,8,1.64,22,2.438,24,2.878,38,2.405,40,1.709,46,1.352,48,2.675,49,2.703,60,0.946,62,2.581,92,2.924,93,2.429,99,2.156,139,1.806,144,2.362,165,2.904,183,3.718,189,2.027,228,1.997,246,1.972,248,2.086,249,3.577,275,2.847,313,3.036,318,1.227,323,1.741,324,1.732,328,1.747,353,3.617,377,3.659,398,2.022,402,3.504,408,2.697,424,2.654,493,3.751,515,2.444,527,2.398,612,3.092,626,3.169,634,2.654,642,3.406,676,1.026,705,3.297,708,3.438,721,3.762,730,4.261,837,2.875,1058,3.377,1073,3.001,1103,3.486,1149,3.132,1463,7.519,5676,5.005,5938,8.109,5939,5.37,5940,5.37]],["component/336",[220,0.615]],["title/337-1",[676,17.814]],["name/337-1",[]],["text/337-1",[]],["component/337-1",[]],["title/337-2",[317,18.84,318,16.799]],["name/337-2",[]],["text/337-2",[]],["component/337-2",[]],["title/337-3",[60,16.431]],["name/337-3",[]],["text/337-3",[]],["component/337-3",[]],["title/337-4",[134,27.811,3606,59.201]],["name/337-4",[]],["text/337-4",[]],["component/337-4",[]],["title/337-5",[216,25.746,639,24.858]],["name/337-5",[]],["text/337-5",[]],["component/337-5",[]],["title/337-6",[5941,82.733]],["name/337-6",[]],["text/337-6",[]],["component/337-6",[]],["title/337-7",[5942,82.733]],["name/337-7",[]],["text/337-7",[]],["component/337-7",[]],["title/337-8",[2470,75.064]],["name/337-8",[]],["text/337-8",[]],["component/337-8",[]],["title/337-9",[639,24.858,781,52.812]],["name/337-9",[]],["text/337-9",[]],["component/337-9",[]],["title/337-10",[5941,82.733]],["name/337-10",[]],["text/337-10",[]],["component/337-10",[]],["title/337-11",[5942,82.733]],["name/337-11",[]],["text/337-11",[]],["component/337-11",[]],["title/337-12",[2470,75.064]],["name/337-12",[]],["text/337-12",[]],["component/337-12",[]],["title/337-13",[76,36.95,299,29.092,553,30.879]],["name/337-13",[]],["text/337-13",[]],["component/337-13",[]],["title/337",[553,47.427]],["name/337",[553,1.994]],["text/337",[2,0.728,3,0.867,5,1.263,8,1.331,16,0.87,22,1.643,25,2.331,26,2.766,34,0.844,35,1.042,37,1.116,38,0.696,46,1.658,49,0.782,57,0.903,60,0.413,61,1.45,62,0.747,71,1.954,76,3.338,80,1.878,82,1.494,88,1.101,92,2.77,95,1.048,99,1.65,103,2.457,110,0.959,115,1.679,124,1.188,128,0.997,131,2.775,134,2.491,135,1.15,137,1.159,138,0.951,139,1.382,143,0.797,163,1.6,173,1.439,179,1.407,183,2.513,189,0.885,195,1.369,200,1.082,204,1.159,213,3.03,216,1.439,219,2.597,228,0.872,239,1.155,246,0.861,247,1.12,248,0.911,295,1.488,310,0.846,315,1.204,317,1.053,318,1.71,323,0.761,324,0.757,328,0.763,337,1.244,347,1.269,365,1.782,379,1.116,389,2.065,401,1.209,408,1.178,417,0.94,424,1.159,428,1.546,431,1.475,436,1.296,442,1.889,479,2.638,482,1.038,494,1.269,499,1.051,513,1.226,521,1.054,524,1.516,551,3.214,553,6.109,562,1.417,609,1.319,612,2.367,622,1.304,626,2.552,639,3.987,645,1.183,651,0.759,661,1.188,676,0.785,702,1.232,705,2.78,708,0.995,721,0.903,722,1.058,729,1.439,734,1.15,775,1.531,800,1.326,808,1.262,812,1.697,849,1.488,909,1.351,916,1.797,988,1.439,1017,1.739,1087,1.428,1177,1.488,1272,1.546,1273,1.516,1301,1.516,1312,1.941,1406,1.304,1481,1.661,1544,1.599,1613,1.563,1659,1.311,1680,1.711,1854,2.631,2083,1.805,2185,2.004,2237,1.516,2470,1.889,2736,2.004,2745,2.082,2866,1.599,2872,1.531,2937,2.187,2983,1.889,3606,1.889,3791,2.082,4032,1.941,4280,2.187,4719,7.147,5469,2.187,5470,2.187,5471,2.187,5472,2.187,5477,3.51,5941,2.082,5942,2.082,5943,4.11,5944,4.11,5945,2.346,5946,2.346,5947,2.346,5948,2.346,5949,2.346,5950,2.346,5951,2.346,5952,2.346,5953,2.346,5954,2.346,5955,2.346,5956,2.346,5957,2.346,5958,2.346,5959,2.346,5960,2.346]],["component/337",[220,0.615]],["title/338-1",[676,17.814]],["name/338-1",[]],["text/338-1",[]],["component/338-1",[]],["title/338-2",[317,18.84,318,16.799]],["name/338-2",[]],["text/338-2",[]],["component/338-2",[]],["title/338-3",[60,16.431]],["name/338-3",[]],["text/338-3",[]],["component/338-3",[]],["title/338-4",[131,16.161,651,16.729,721,19.898,4233,39.771]],["name/338-4",[]],["text/338-4",[]],["component/338-4",[]],["title/338-5",[522,38.425,1085,37.244]],["name/338-5",[]],["text/338-5",[]],["component/338-5",[]],["title/338-6",[300,37.244,651,23.799]],["name/338-6",[]],["text/338-6",[]],["component/338-6",[]],["title/338-7",[38,18.004,651,19.647,2242,44.271]],["name/338-7",[]],["text/338-7",[]],["component/338-7",[]],["title/338-8",[5,18.651,255,24.375,317,15.553]],["name/338-8",[]],["text/338-8",[]],["component/338-8",[]],["title/338",[551,25.084,721,28.307]],["name/338",[5961,3.92]],["text/338",[2,2.681,5,1.546,8,0.33,14,0.563,16,0.605,20,0.757,22,2.254,24,0.431,32,0.735,34,0.586,38,1.944,40,0.519,46,0.747,49,0.543,51,0.856,60,1.36,61,2.063,62,2.283,64,1.636,71,1.456,72,0.945,78,0.754,82,1.485,84,1.355,92,2.074,93,0.737,95,1.326,96,0.656,109,0.848,115,0.666,124,0.826,128,1.262,131,1.277,133,0.773,138,0.661,143,2.937,144,0.717,165,1.605,172,0.656,173,2.506,180,0.773,182,1,183,3.795,191,1.598,199,0.713,203,0.809,212,3.474,219,0.935,228,0.606,246,0.598,247,1.951,255,1.192,291,2.565,300,3.319,310,1.07,315,0.836,317,1.047,318,0.372,320,1.378,323,0.528,324,0.526,328,0.53,341,0.873,344,0.784,347,1.554,361,0.775,363,1.23,364,0.77,365,1.287,390,1.923,391,0.812,396,1.42,398,1.118,405,1.281,417,1.189,420,2.378,423,2.176,432,1.355,499,2.255,521,1.334,522,0.852,524,1.918,525,0.812,527,0.728,540,0.687,545,0.603,549,0.749,551,2.236,554,2.245,557,0.886,562,4.664,571,1.631,587,1.171,589,1.613,626,2.33,628,2.633,639,1.003,651,1.892,671,2.389,676,0.781,690,1.086,702,0.856,704,1.074,705,2.605,708,0.691,721,3.853,722,0.735,730,2.195,733,1.821,739,1.034,740,2.2,741,1.098,752,0.916,779,1.731,780,1.835,798,4.36,804,2.917,812,0.673,829,2.592,833,3.625,836,2.569,837,1.589,843,1.189,844,1.883,887,0.911,909,0.939,916,0.713,988,1,1032,1.098,1071,0.728,1085,4.157,1104,1.208,1149,2.936,1151,0.873,1154,2.022,1391,0.901,1481,1.154,1510,1.111,1584,0.964,1636,1.312,1676,1.189,1849,1.098,1851,1.171,1878,1.074,1879,0.911,2242,1.189,2248,1.9,2323,1.154,2379,1.918,2442,1.558,2461,1.043,2591,1.446,2641,3.544,2642,4.055,2821,1.281,2852,2.455,2922,1.254,3298,3.252,3816,2.633,3955,1,3969,2.131,4185,1.936,4233,3.144,4354,3.489,4378,1.312,4379,1.392,5725,1.519,5962,1.392,5963,2.766,5964,1.63,5965,2.633,5966,2.534,5967,1.519,5968,1.519]],["component/338",[220,0.615]],["title/339-1",[676,17.814]],["name/339-1",[]],["text/339-1",[]],["component/339-1",[]],["title/339-2",[317,18.84,318,16.799]],["name/339-2",[]],["text/339-2",[]],["component/339-2",[]],["title/339-3",[60,16.431]],["name/339-3",[]],["text/339-3",[]],["component/339-3",[]],["title/339",[24,16.047,209,37.238,935,42.401]],["name/339",[24,0.435,209,1.008,935,1.148]],["text/339",[5,2.242,8,2.352,24,3.323,29,3.68,38,2.164,46,1.837,49,2.432,60,1.785,71,2.6,92,3.125,99,2.93,143,2.48,182,4.476,201,3.988,209,4.476,216,2.555,228,2.713,246,2.679,318,1.667,323,2.366,324,2.354,328,2.374,447,5.556,547,4.596,551,2.489,626,3.241,639,3.933,676,1.394,727,4.588,734,3.577,935,5.097,1103,3.136,5969,10.129]],["component/339",[220,0.615]],["title/340-1",[676,17.814]],["name/340-1",[]],["text/340-1",[]],["component/340-1",[]],["title/340-2",[317,18.84,318,16.799]],["name/340-2",[]],["text/340-2",[]],["component/340-2",[]],["title/340",[24,19.438,209,45.108]],["name/340",[24,0.612,209,1.421]],["text/340",[5,2.429,8,1.598,20,3.67,24,3.701,38,2.344,92,2.874,99,3.174,103,3.541,160,4.902,182,6.564,209,6.564,251,4.093,285,4.15,315,4.056,317,2.742,318,1.806,323,2.563,324,2.55,328,2.571,515,3.598,519,3.987,540,3.333,639,2.672,730,4.666,829,5.014,1073,4.417,1436,6.213,2870,4.811,3302,5.521,5970,7.367]],["component/340",[220,0.615]],["title/341-1",[676,17.814]],["name/341-1",[]],["text/341-1",[]],["component/341-1",[]],["title/341-2",[317,18.84,318,16.799]],["name/341-2",[]],["text/341-2",[]],["component/341-2",[]],["title/341-3",[60,16.431]],["name/341-3",[]],["text/341-3",[]],["component/341-3",[]],["title/341-4",[5,18.651,255,24.375,317,15.553]],["name/341-4",[]],["text/341-4",[]],["component/341-4",[]],["title/341",[66,30.754,94,41.087]],["name/341",[5971,3.92]],["text/341",[5,3.184,8,1.765,22,1.479,45,1.839,46,2.198,52,2.541,61,3.081,62,1.887,64,2.375,66,4.782,84,2.708,92,2.784,94,4.879,96,2.387,99,2.381,115,2.423,128,2.52,131,2.73,144,2.608,171,2.863,180,2.811,183,3.45,186,6.368,208,4.501,219,3.267,224,4.04,254,3.098,255,3.506,269,8.344,295,3.761,299,2.842,317,1.519,318,1.355,323,1.922,324,1.913,328,1.929,386,2.191,417,2.375,477,4.324,532,5.444,626,2.673,676,1.133,705,2.001,722,2.673,1056,3.831,1151,3.174,1490,3.098,1881,4.475,3446,4.324,5591,5.063,5972,5.929]],["component/341",[220,0.615]],["title/342-1",[676,17.814]],["name/342-1",[]],["text/342-1",[]],["component/342-1",[]],["title/342-2",[317,18.84,318,16.799]],["name/342-2",[]],["text/342-2",[]],["component/342-2",[]],["title/342-3",[60,16.431]],["name/342-3",[]],["text/342-3",[]],["component/342-3",[]],["title/342-4",[5,18.651,255,24.375,317,15.553]],["name/342-4",[]],["text/342-4",[]],["component/342-4",[]],["title/342",[183,14.631,347,15.956,551,17.632,2400,35.215]],["name/342",[5973,3.92]],["text/342",[5,2.924,8,1.04,22,2.861,46,1.976,49,1.714,60,0.906,62,3.65,71,1.833,88,2.413,92,3.247,96,2.07,134,2.969,138,2.086,144,2.263,173,3.155,183,3.559,228,1.912,246,1.889,255,3.152,317,1.318,318,1.175,323,1.668,324,1.659,328,1.673,344,2.474,347,2.423,386,1.9,396,1.787,551,4.531,560,6.202,626,2.454,638,2.046,661,2.605,676,0.983,710,3.547,721,1.98,730,4.15,753,2.688,780,3.181,782,2.962,786,4.512,798,4.419,812,3.24,955,4.935,1151,2.754,1671,3.181,2400,7.256,3955,3.155]],["component/342",[220,0.615]],["title/343-1",[676,17.814]],["name/343-1",[]],["text/343-1",[]],["component/343-1",[]],["title/343-2",[317,18.84,318,16.799]],["name/343-2",[]],["text/343-2",[]],["component/343-2",[]],["title/343-3",[60,16.431]],["name/343-3",[]],["text/343-3",[]],["component/343-3",[]],["title/343-4",[5,18.651,255,24.375,317,15.553]],["name/343-4",[]],["text/343-4",[]],["component/343-4",[]],["title/343",[183,17.183,347,18.74,551,20.708]],["name/343",[5974,3.92]],["text/343",[5,3.527,8,1.438,22,1.775,27,3.041,46,2.505,60,1.254,92,3.514,96,2.864,144,3.13,183,4.02,202,3.588,228,2.645,246,2.612,255,3.996,317,1.823,318,1.625,323,2.306,324,2.295,328,2.314,347,3.072,396,2.472,551,4.463,560,5.89,626,3.206,676,1.359,721,3.831,1151,3.809]],["component/343",[220,0.615]],["title/344-1",[676,17.814]],["name/344-1",[]],["text/344-1",[]],["component/344-1",[]],["title/344-2",[317,18.84,318,16.799]],["name/344-2",[]],["text/344-2",[]],["component/344-2",[]],["title/344-3",[60,16.431]],["name/344-3",[]],["text/344-3",[]],["component/344-3",[]],["title/344",[134,27.811,347,22.7]],["name/344",[5975,3.654]],["text/344",[2,1.754,3,0.902,8,0.86,11,1.058,20,1.133,22,2.262,25,1.037,26,2.145,32,1.1,34,2.762,38,2.277,42,0.792,45,2.98,46,3.267,48,1.215,60,1.193,64,1.704,71,0.869,73,1.592,81,1.662,82,0.887,83,1.388,92,2.707,96,2.724,105,1.313,110,0.997,115,0.997,130,1.275,131,1.33,134,5.122,136,1.662,137,3.793,138,0.99,139,0.82,143,0.829,163,0.95,180,1.157,183,2.386,188,1.474,189,0.921,198,1.093,202,1.231,203,1.211,217,1.396,236,1.22,246,1.562,247,1.165,258,1.608,274,2.054,316,1.443,318,0.557,323,0.791,324,0.787,328,0.794,338,1.356,344,4.36,347,3.813,361,1.161,367,1.313,377,1.662,396,0.848,398,0.919,409,1.592,424,1.206,436,1.348,451,3.153,452,2.652,479,2.046,481,1.341,482,1.08,521,1.097,527,1.09,551,3.092,555,2.458,568,1.988,597,1.32,626,2.599,629,1.878,630,4.003,634,1.206,639,3.064,648,3.273,649,2.405,650,2.833,653,4.667,676,0.466,685,1.625,689,1.08,698,3.102,699,1.577,708,1.034,724,2.532,730,2.951,752,2.39,782,1.405,786,1.157,798,1.133,812,1.756,837,1.306,910,1.306,1073,1.363,1087,1.485,1121,1.388,1285,1.236,1295,1.704,1334,1.073,1584,1.443,1971,1.509,2083,1.878,2270,1.608,2276,3.632,2732,1.728,2818,1.592,2851,1.965,2889,1.878,3302,1.704,5783,2.165,5785,2.274,5976,2.44,5977,2.44,5978,3.964]],["component/344",[220,0.615]],["title/345-1",[676,17.814]],["name/345-1",[]],["text/345-1",[]],["component/345-1",[]],["title/345-2",[317,18.84,318,16.799]],["name/345-2",[]],["text/345-2",[]],["component/345-2",[]],["title/345-3",[60,16.431]],["name/345-3",[]],["text/345-3",[]],["component/345-3",[]],["title/345-4",[1334,41.017]],["name/345-4",[]],["text/345-4",[]],["component/345-4",[]],["title/345",[436,40.627,1085,37.244]],["name/345",[436,1.28,1085,1.173]],["text/345",[3,1.343,8,1.205,14,1.256,22,1.487,24,0.961,34,2.726,38,2.87,42,1.18,46,3.074,48,2.969,60,0.64,62,2.79,71,1.295,79,1.566,80,2.04,84,1.659,92,3.361,96,3.895,124,3.019,126,1.899,131,1.863,137,1.796,139,1.222,183,2.739,191,1.421,219,2.763,228,1.351,233,1.775,251,1.881,285,1.908,318,0.83,320,1.687,323,1.178,324,1.172,328,1.182,361,1.729,364,2.815,365,1.575,391,2.969,396,1.263,417,1.456,436,4.843,465,2.476,479,1.748,509,2.742,513,1.899,518,2.067,528,2.195,555,1.58,561,2.092,562,2.195,568,3.542,625,2.149,626,2.681,633,2.067,639,1.228,651,2.452,653,2.506,654,2.857,662,2.266,705,2.556,736,1.936,754,2.796,808,1.955,916,1.589,920,2.857,982,2.067,1058,4.764,1073,3.33,1085,6.779,1118,2.164,1147,2.421,1148,4.586,1149,2.12,1334,2.622,1479,3.103,1918,3.103,2248,3.815,2249,2.742,2355,3.225,2734,2.65,3449,2.926,4643,3.387,4645,3.387,5423,3.006,5605,3.387,5979,3.634]],["component/345",[220,0.615]],["title/346-1",[676,17.814]],["name/346-1",[]],["text/346-1",[]],["component/346-1",[]],["title/346-2",[317,18.84,318,16.799]],["name/346-2",[]],["text/346-2",[]],["component/346-2",[]],["title/346-3",[60,16.431]],["name/346-3",[]],["text/346-3",[]],["component/346-3",[]],["title/346-4",[214,35.647,651,19.647,2712,37.238]],["name/346-4",[]],["text/346-4",[]],["component/346-4",[]],["title/346-5",[2,18.829,38,18.004,651,19.647]],["name/346-5",[]],["text/346-5",[]],["component/346-5",[]],["title/346-6",[183,20.814,651,23.799]],["name/346-6",[]],["text/346-6",[]],["component/346-6",[]],["title/346",[214,35.647,2712,37.238,2902,46.709]],["name/346",[5980,3.92]],["text/346",[2,2.401,8,0.671,10,1.563,11,0.8,22,1.773,24,3.083,27,1.934,38,2.604,40,0.587,42,1.078,49,2.126,60,0.325,61,0.651,62,2.031,71,1.612,74,1.521,79,1.951,83,1.049,85,0.904,89,1.824,92,1.216,103,0.826,106,0.814,110,1.356,112,0.705,115,0.754,126,0.964,128,3.915,131,1.415,134,0.698,142,1.187,143,2.168,153,1.123,159,4.373,160,3.257,165,2.448,168,2.391,171,5.794,174,0.973,176,2.07,177,4.653,183,3.48,189,1.253,191,2.496,196,0.978,212,0.978,213,1.019,214,4.174,215,1.419,218,4.081,219,1.046,246,0.677,260,1.076,263,1.392,267,0.983,294,1.014,300,2.801,308,0.908,311,1.043,318,0.421,320,2.101,323,0.598,324,0.595,328,0.6,347,0.569,355,1.123,361,2.153,369,0.845,375,0.998,392,0.647,414,1.043,415,1.306,416,0.959,417,1.33,440,1.216,447,1.585,501,2.312,513,0.964,527,1.483,551,1.132,555,1.968,589,1.003,626,1.645,634,2.236,639,1.122,661,2.801,671,1.485,689,1.469,697,1.003,703,0.919,705,2.612,720,0.938,733,1.132,734,0.904,786,0.875,812,1.37,829,2.871,830,1.091,837,0.988,843,1.345,864,4.174,878,1.229,887,1.031,915,1.076,916,0.807,965,0.812,1003,1.719,1004,1.192,1068,2.461,1069,1.229,1085,3.92,1298,3.247,1391,1.834,1461,1.949,1498,7.042,1516,1.711,1674,1.325,1838,1.306,2202,4.902,2386,1.526,2397,1.963,2414,1.345,2445,3.644,2446,1.392,2631,1.419,2657,1.17,2712,1.132,2719,1.288,2843,1.204,2859,2.673,2866,1.257,2902,7.653,4289,2.835,5013,3.094,5110,3.094,5981,1.526,5982,1.845,5983,1.845,5984,1.845,5985,1.845,5986,3.319]],["component/346",[220,0.615]],["title/347-1",[676,17.814]],["name/347-1",[]],["text/347-1",[]],["component/347-1",[]],["title/347-2",[317,18.84,318,16.799]],["name/347-2",[]],["text/347-2",[]],["component/347-2",[]],["title/347-3",[60,16.431]],["name/347-3",[]],["text/347-3",[]],["component/347-3",[]],["title/347-4",[5,18.651,255,24.375,317,15.553]],["name/347-4",[]],["text/347-4",[]],["component/347-4",[]],["title/347",[205,42.342,639,24.858]],["name/347",[205,2.257]],["text/347",[5,2.274,6,1.828,8,0.711,16,1.304,22,2.143,24,2.704,25,1.494,26,1.772,27,2.478,28,3.822,29,1.772,38,1.042,46,1.459,54,1.987,60,1.304,61,1.24,62,2.356,64,1.408,78,1.626,79,1.515,82,1.277,92,3.038,93,2.622,96,3.457,115,1.436,124,1.78,131,1.099,143,1.194,144,1.546,160,2.656,165,1.901,172,1.415,183,2.896,189,2.188,191,1.375,197,2.316,198,2.598,199,2.536,205,7.826,208,3.815,210,2.763,211,2.424,216,2.03,218,1.398,219,1.108,228,3.193,246,1.29,255,2.328,286,1.964,310,1.267,317,0.9,318,0.803,323,1.139,324,1.134,328,1.143,341,3.104,342,2.293,361,1.672,367,1.891,383,1.891,389,1.323,391,1.751,396,1.221,423,1.519,459,4.298,477,4.228,501,4.388,521,1.579,547,1.594,597,1.901,626,1.908,639,3.458,676,0.671,808,1.891,980,3.95,1068,2.605,1069,5.721,1074,4.461,1151,1.881,1187,1.56,1231,1.854,1264,2.078,1387,2.455,1659,1.964,1676,2.563,2330,3.585,2370,1.854,2450,3.276,2976,2.907,2977,2.907,2991,2.524,3454,3.001,3754,3.001,3969,4.164,4252,3.118,5987,3.276]],["component/347",[220,0.615]],["title/348-1",[676,17.814]],["name/348-1",[]],["text/348-1",[]],["component/348-1",[]],["title/348-2",[317,18.84,318,16.799]],["name/348-2",[]],["text/348-2",[]],["component/348-2",[]],["title/348-3",[60,16.431]],["name/348-3",[]],["text/348-3",[]],["component/348-3",[]],["title/348-4",[5,18.651,255,24.375,317,15.553]],["name/348-4",[]],["text/348-4",[]],["component/348-4",[]],["title/348",[205,42.342,2330,45.47]],["name/348",[5988,3.92]],["text/348",[5,3.42,8,1.359,22,1.677,46,2.407,60,1.185,61,2.372,62,2.14,92,3.575,96,2.706,124,3.405,144,2.957,183,3.768,205,6.409,218,2.673,228,2.499,246,2.468,255,3.84,317,1.722,318,1.536,323,2.179,324,2.168,328,2.187,361,3.198,521,3.021,597,3.636,626,3.126,639,3.233,676,1.284,705,3.227,967,3.021,1095,3.617,1151,3.599,1187,2.984,1264,3.975,2330,5.913,3969,4.828,5815,5.412,5987,6.266]],["component/348",[220,0.615]],["title/349-1",[676,17.814]],["name/349-1",[]],["text/349-1",[]],["component/349-1",[]],["title/349-2",[317,18.84,318,16.799]],["name/349-2",[]],["text/349-2",[]],["component/349-2",[]],["title/349-3",[60,16.431]],["name/349-3",[]],["text/349-3",[]],["component/349-3",[]],["title/349-4",[5,18.651,255,24.375,317,15.553]],["name/349-4",[]],["text/349-4",[]],["component/349-4",[]],["title/349-5",[139,31.349]],["name/349-5",[]],["text/349-5",[]],["component/349-5",[]],["title/349-6",[139,24.724,200,33.911]],["name/349-6",[]],["text/349-6",[]],["component/349-6",[]],["title/349-7",[139,24.724,204,36.335]],["name/349-7",[]],["text/349-7",[]],["component/349-7",[]],["title/349",[183,20.814,915,42.892]],["name/349",[5989,3.92]],["text/349",[2,1.991,5,1.972,8,0.583,22,2.308,37,3.606,38,0.856,40,0.918,46,1.237,49,1.638,60,0.508,62,1.564,63,2.33,71,1.028,92,2.283,93,1.305,96,1.161,131,3.994,133,2.33,138,1.993,139,2.158,143,3.534,144,1.269,174,3.386,183,3.856,204,3.745,213,5.111,218,1.954,228,1.073,246,1.059,255,1.973,300,2.489,317,0.739,318,0.659,323,0.935,324,0.931,328,0.939,347,1.981,361,1.373,396,1.003,398,2.854,440,1.902,460,5.294,482,1.277,485,2.22,545,1.068,549,2.259,551,2.19,571,1.585,589,2.672,626,2.192,676,0.551,702,1.515,729,1.77,730,2.799,733,3.014,734,3.715,812,2.65,878,7.225,914,4.483,915,6.065,964,1.743,965,2.162,1033,4.759,1151,1.545,1482,1.847,1610,5.443,1851,3.529,2379,3.175,2641,2.658,2642,2.778,3601,3.432,3763,2.22,4129,2.139,4255,2.464,4256,2.464,5149,2.323,5726,4.58,5990,2.885,5991,2.885,5992,4.914,5993,2.885,5994,6.418,5995,6.418,5996,6.418,5997,6.418,5998,2.885,5999,2.885]],["component/349",[220,0.615]],["title/350-1",[676,17.814]],["name/350-1",[]],["text/350-1",[]],["component/350-1",[]],["title/350-2",[317,18.84,318,16.799]],["name/350-2",[]],["text/350-2",[]],["component/350-2",[]],["title/350-3",[962,49.665]],["name/350-3",[]],["text/350-3",[]],["component/350-3",[]],["title/350-4",[60,16.431]],["name/350-4",[]],["text/350-4",[]],["component/350-4",[]],["title/350",[183,17.183,639,20.521,915,35.409]],["name/350",[6000,3.92]],["text/350",[8,1.066,22,1.995,34,1.896,49,1.757,60,0.929,62,2.545,92,3.114,128,2.24,129,2.729,163,2.052,174,2.78,183,3.977,189,1.989,273,2.945,300,2.67,318,1.204,323,1.709,324,1.7,328,1.715,347,1.627,361,2.508,364,2.49,366,2.896,393,3.074,396,1.832,398,4.774,485,4.056,549,3.675,551,3.679,555,2.292,626,2.989,639,4.125,676,1.007,721,2.029,729,3.233,730,2.298,812,2.176,878,6.435,915,6.762,965,2.319,1671,6.668,1983,4.677,2270,3.474,4129,3.908,4255,4.501,4256,4.501,5149,4.243,5781,4.913,6001,7.995]],["component/350",[220,0.615]],["title/351-1",[676,17.814]],["name/351-1",[]],["text/351-1",[]],["component/351-1",[]],["title/351-2",[317,18.84,318,16.799]],["name/351-2",[]],["text/351-2",[]],["component/351-2",[]],["title/351-3",[60,16.431]],["name/351-3",[]],["text/351-3",[]],["component/351-3",[]],["title/351",[705,24.813,1518,54.515]],["name/351",[6002,3.92]],["text/351",[2,2.681,8,1.747,16,2.17,22,1.459,38,1.734,40,1.861,42,2.807,51,5.963,60,1.031,61,2.063,84,5.534,92,3.051,142,4.062,160,2.679,183,3.894,219,1.843,262,4.046,318,1.336,323,1.896,324,1.886,328,1.902,347,1.805,386,2.161,392,2.051,626,3.271,676,1.117,705,1.973,730,3.769,1187,2.596,1257,3.677,1518,10.375,1677,5.963,2641,4.674]],["component/351",[220,0.615]],["title/352-1",[676,17.814]],["name/352-1",[]],["text/352-1",[]],["component/352-1",[]],["title/352-2",[317,18.84,318,16.799]],["name/352-2",[]],["text/352-2",[]],["component/352-2",[]],["title/352-3",[60,16.431]],["name/352-3",[]],["text/352-3",[]],["component/352-3",[]],["title/352-4",[216,25.746,651,23.799]],["name/352-4",[]],["text/352-4",[]],["component/352-4",[]],["title/352-5",[515,33.47,651,23.799]],["name/352-5",[]],["text/352-5",[]],["component/352-5",[]],["title/352",[24,16.047,219,19.134,2350,32.83]],["name/352",[6003,3.92]],["text/352",[6,1.424,8,0.553,11,1.187,20,2.181,22,1.172,24,3.081,27,1.17,34,0.985,38,0.812,40,2.622,42,0.889,45,1.457,46,1.182,60,0.828,61,0.966,62,1.964,71,1.674,77,0.985,82,0.995,92,1.966,103,1.226,112,2.36,131,3.991,137,2.321,139,0.92,142,2.207,143,0.93,162,1.7,172,1.102,177,1.451,199,1.197,201,1.496,202,1.381,203,1.358,206,1.63,208,1.411,212,2.49,216,3.368,218,4.037,219,2.597,228,1.018,236,1.369,246,1.005,262,1.674,308,1.347,310,2.639,311,1.547,312,4.044,318,0.625,323,0.887,324,0.883,328,0.89,347,0.845,348,1.576,361,1.302,367,1.473,369,1.254,386,1.011,389,2.324,392,1.648,396,2.863,398,1.769,401,1.411,417,1.882,420,2.219,432,1.25,435,1.786,447,1.307,527,1.223,540,2.602,545,3.758,547,1.242,620,1.488,625,1.618,626,1.591,638,1.089,639,2.086,676,0.898,705,1.585,708,1.16,721,2.376,730,3.191,786,1.298,798,4.174,915,1.597,954,2.152,965,1.204,1071,1.223,1103,5.009,1155,1.938,1231,1.444,1275,1.769,1481,1.938,1516,2.421,2350,5.95,2397,5.687,2713,3.129,2870,2.86,3998,2.106,4384,2.106,4418,5.27,5772,2.066,5795,2.551,5796,2.337,6004,4.169]],["component/352",[220,0.615]],["title/353-1",[676,17.814]],["name/353-1",[]],["text/353-1",[]],["component/353-1",[]],["title/353-2",[317,18.84,318,16.799]],["name/353-2",[]],["text/353-2",[]],["component/353-2",[]],["title/353",[219,19.134,1448,37.848,2903,48.873]],["name/353",[219,0.73,2903,1.865]],["text/353",[8,1.415,14,2.418,22,3.244,24,3.007,38,2.075,60,1.233,92,3.056,103,5.097,112,2.676,183,2.785,218,3.912,219,3.101,318,1.599,323,2.269,324,2.257,328,2.276,423,3.025,501,5.812,547,3.175,572,8.139,626,2.537,676,1.337,720,3.56,795,6.703,1187,4.367,1448,7.093,2348,5.738,2903,7.92,2912,5.789,3425,8.729,6005,6.997]],["component/353",[220,0.615]],["title/354-1",[676,17.814]],["name/354-1",[]],["text/354-1",[]],["component/354-1",[]],["title/354-2",[317,18.84,318,16.799]],["name/354-2",[]],["text/354-2",[]],["component/354-2",[]],["title/354-3",[60,16.431]],["name/354-3",[]],["text/354-3",[]],["component/354-3",[]],["title/354",[143,20.632,808,32.662,2904,48.873]],["name/354",[6006,3.92]],["text/354",[2,2.081,8,0.85,11,1.824,22,2.088,29,3.384,38,2.832,60,1.182,64,1.685,82,2.438,88,5.215,92,2.802,115,1.719,123,2.718,131,2.985,143,4.117,149,4.75,183,3.699,191,1.645,202,2.122,204,2.079,219,2.115,262,2.39,287,2.645,299,2.016,311,2.378,313,2.378,318,0.961,323,1.364,324,1.357,326,2.122,328,1.368,341,2.252,344,3.227,353,2.833,365,1.824,369,1.927,396,1.462,398,1.584,626,1.73,676,0.804,705,3.52,730,2.925,782,2.422,786,3.18,804,2.438,808,4.502,812,1.736,864,5.607,956,2.263,1032,4.518,1107,9.961,1271,6.01,1317,3.921,1507,2.095,1671,2.601,2852,3.48,2904,9.391,3975,3.119,4340,3.387,4552,3.921,6007,3.921,6008,4.206,6009,4.206,6010,4.206,6011,4.206,6012,4.206,6013,4.206]],["component/354",[220,0.615]],["title/355-1",[676,17.814]],["name/355-1",[]],["text/355-1",[]],["component/355-1",[]],["title/355-2",[317,18.84,318,16.799]],["name/355-2",[]],["text/355-2",[]],["component/355-2",[]],["title/355-3",[60,16.431]],["name/355-3",[]],["text/355-3",[]],["component/355-3",[]],["title/355-4",[5,18.651,255,24.375,317,15.553]],["name/355-4",[]],["text/355-4",[]],["component/355-4",[]],["title/355",[113,42.078,191,28.763]],["name/355",[6014,3.92]],["text/355",[2,0.889,5,1.962,8,0.988,16,1.063,22,2.795,34,2.298,38,3.323,46,1.607,49,0.955,51,1.505,60,1.126,61,2.253,62,1.555,64,2.558,71,1.741,73,1.87,80,0.981,82,1.042,92,3.009,96,1.154,99,1.151,110,2.609,113,6.411,124,3.235,131,0.896,135,1.405,141,1.491,144,1.261,153,1.744,156,1.317,160,2.238,171,1.384,172,1.154,183,3.427,186,2.09,187,2.447,189,1.844,191,1.911,198,3.38,199,2.137,205,4.875,207,2.125,208,5.775,212,1.519,228,1.065,241,3.564,246,1.052,255,1.962,274,1.384,285,1.505,291,2.143,296,2.002,317,0.734,318,0.655,323,0.929,324,0.924,328,0.932,347,1.508,356,3.369,386,1.059,392,1.714,394,3.157,396,1.698,398,1.079,399,1.477,441,2.307,459,2.125,466,2.253,551,3.357,597,3.454,607,1.909,620,2.656,626,2.789,639,1.652,650,1.909,676,0.548,677,2.616,687,1.852,708,2.071,720,1.458,722,1.292,728,3.413,800,2.762,824,7.005,910,2.616,916,1.253,962,1.527,967,1.288,982,1.63,1071,2.182,1151,1.534,1187,3.349,1308,1.512,2192,2.09,2248,1.834,2328,2.253,2610,2.543,2939,2.029,3953,2.307,4095,1.93,4226,4.554,4278,2.002]],["component/355",[220,0.615]],["title/356-1",[676,17.814]],["name/356-1",[]],["text/356-1",[]],["component/356-1",[]],["title/356-2",[317,18.84,318,16.799]],["name/356-2",[]],["text/356-2",[]],["component/356-2",[]],["title/356-3",[60,16.431]],["name/356-3",[]],["text/356-3",[]],["component/356-3",[]],["title/356",[191,23.745,1516,31.289,2330,37.537]],["name/356",[6015,3.92]],["text/356",[8,1.613,40,2.539,60,1.406,92,3.92,142,2.854,183,2.258,191,3.121,318,1.823,323,2.587,324,2.573,328,2.595,347,3.324,361,3.796,365,3.459,479,5.179,529,5.373,614,6.423,626,2.777,634,3.942,676,1.524,677,4.271,705,2.692,1149,4.654,1486,4.408,1516,4.112,2330,7.537,3856,9.195]],["component/356",[220,0.615]],["title/357-1",[676,17.814]],["name/357-1",[]],["text/357-1",[]],["component/357-1",[]],["title/357-2",[317,18.84,318,16.799]],["name/357-2",[]],["text/357-2",[]],["component/357-2",[]],["title/357-3",[60,16.431]],["name/357-3",[]],["text/357-3",[]],["component/357-3",[]],["title/357-4",[5,18.651,255,24.375,317,15.553]],["name/357-4",[]],["text/357-4",[]],["component/357-4",[]],["title/357",[812,30.353,1695,59.201]],["name/357",[6016,3.92]],["text/357",[5,2.957,8,1.059,22,1.986,40,1.667,46,1.318,60,0.923,84,2.392,92,3.27,93,3.599,96,2.109,144,2.304,174,4.198,183,3.69,191,3.113,200,3.67,233,3.887,255,3.196,272,5.652,317,1.342,318,1.197,323,1.698,324,1.69,328,1.704,379,2.492,398,2.997,416,2.725,545,1.939,551,2.715,560,2.688,565,2.863,626,2.772,676,1.001,722,2.362,734,3.902,782,3.016,812,3.973,916,3.481,1095,2.818,1151,2.804,1671,3.239,1695,10.749,2272,4.334,2323,3.709,2408,3.612,2641,2.833,2730,4.473,2859,4.217,3298,3.385,4084,4.473,4788,4.473,5808,10.776,6017,5.238]],["component/357",[220,0.615]],["title/358-1",[676,17.814]],["name/358-1",[]],["text/358-1",[]],["component/358-1",[]],["title/358-2",[317,18.84,318,16.799]],["name/358-2",[]],["text/358-2",[]],["component/358-2",[]],["title/358-3",[60,16.431]],["name/358-3",[]],["text/358-3",[]],["component/358-3",[]],["title/358-4",[5,18.651,255,24.375,317,15.553]],["name/358-4",[]],["text/358-4",[]],["component/358-4",[]],["title/358",[78,34.025,812,30.353]],["name/358",[6018,3.92]],["text/358",[2,1.9,5,2.234,8,0.942,22,1.529,23,1.43,40,0.863,46,0.682,60,0.478,61,1.644,78,2.156,79,1.169,84,2.128,89,1.49,92,2.571,96,1.091,108,1.663,131,4.353,138,1.099,144,1.193,163,1.056,174,5.331,176,4.534,179,1.626,183,3.201,191,2.845,200,4.415,204,4.42,213,3.385,233,2.275,255,2.46,272,6.203,291,1.189,300,4.849,310,0.977,317,0.695,318,0.619,319,2.589,323,0.879,324,0.875,328,0.882,341,1.451,393,4.242,420,1.281,551,1.589,626,1.58,645,3.668,651,0.877,676,0.518,716,1.638,729,4.461,734,4.693,744,2.604,812,1.923,836,4.573,837,2.494,844,1.72,1020,3.071,1033,6.073,1151,1.451,1291,4.28,1599,4.675,1610,1.947,1712,1.705,1845,2.183,1898,2.086,1971,2.881,2184,3.979,2237,1.752,2346,3.398,2348,1.581,2350,1.466,2641,2.52,2719,1.894,3956,9.351,3962,2.086,4129,3.454,4152,3.855,4153,4.135,4154,2.243,4157,2.406,4162,2.527,4279,4.135,6019,4.659,6020,4.659,6021,2.711,6022,2.711,6023,2.711,6024,2.711,6025,2.711,6026,2.711,6027,2.711,6028,2.711,6029,2.711]],["component/358",[220,0.615]],["title/359-1",[676,17.814]],["name/359-1",[]],["text/359-1",[]],["component/359-1",[]],["title/359-2",[317,18.84,318,16.799]],["name/359-2",[]],["text/359-2",[]],["component/359-2",[]],["title/359-3",[60,16.431]],["name/359-3",[]],["text/359-3",[]],["component/359-3",[]],["title/359-4",[5,18.651,255,24.375,317,15.553]],["name/359-4",[]],["text/359-4",[]],["component/359-4",[]],["title/359",[131,18.98,199,26.548,512,35.891]],["name/359",[6030,3.92]],["text/359",[2,1.862,5,2.342,8,0.741,16,2.227,22,1.901,34,2.159,38,2.26,41,1.437,46,0.922,49,2,60,0.646,62,3.508,76,2.231,82,1.332,85,1.797,92,3.37,93,2.714,96,1.475,131,1.146,133,2.845,144,1.612,173,3.682,177,1.943,180,1.737,183,2.955,199,5.03,228,1.363,255,2.41,286,2.048,315,1.881,317,0.939,318,0.837,323,1.188,324,1.182,328,1.192,356,2.528,366,2.014,371,2.266,392,1.286,399,3.093,408,1.841,420,4.931,424,1.811,512,3.548,525,4.388,551,4.803,555,1.594,612,2.11,620,1.992,623,2.097,626,2.272,633,2.084,634,1.811,639,2.978,661,1.856,662,2.285,676,0.7,703,1.826,704,5.807,708,1.554,722,1.652,733,3.682,798,1.702,804,2.124,812,1.513,844,4.834,1269,2.766,1391,3.316,1528,4.529,1849,2.468,2249,2.766,2367,2.595,2397,2.167,2446,2.766,3115,3.252,3298,2.368,3955,3.682,4278,4.192,5485,3.416]],["component/359",[220,0.615]],["title/360-1",[676,17.814]],["name/360-1",[]],["text/360-1",[]],["component/360-1",[]],["title/360-2",[317,18.84,318,16.799]],["name/360-2",[]],["text/360-2",[]],["component/360-2",[]],["title/360-3",[60,16.431]],["name/360-3",[]],["text/360-3",[]],["component/360-3",[]],["title/360-4",[216,25.746,651,23.799]],["name/360-4",[]],["text/360-4",[]],["component/360-4",[]],["title/360-5",[438,44.096,651,23.799]],["name/360-5",[]],["text/360-5",[]],["component/360-5",[]],["title/360-6",[5,18.651,255,24.375,317,15.553]],["name/360-6",[]],["text/360-6",[]],["component/360-6",[]],["title/360",[1701,52.06,2330,45.47]],["name/360",[6031,3.92]],["text/360",[5,1.91,8,0.559,22,2.412,32,1.246,38,1.844,40,0.88,42,0.898,46,1.854,60,1.095,61,0.975,62,2.877,71,2.215,72,1.602,78,4.182,79,2.042,80,0.946,82,1.004,92,2.967,93,1.25,96,1.112,112,1.811,113,4.215,117,1.562,131,2.303,138,1.121,142,2.223,143,0.939,144,1.216,163,1.076,183,3.224,188,1.67,201,2.589,216,0.968,218,4.055,219,0.871,233,3.597,247,1.32,255,1.902,291,1.212,317,0.708,318,0.631,323,0.896,324,0.892,328,0.899,354,1.657,369,1.266,385,1.425,392,1.662,396,1.646,398,1.784,399,1.425,420,2.238,479,1.329,499,2.785,521,1.242,527,1.234,545,1.023,547,1.254,549,1.27,551,3.633,612,1.591,626,2.137,634,3.072,639,3.268,652,2.36,661,3.148,676,0.905,689,1.223,720,2.41,779,1.612,832,3.579,929,1.803,930,2.286,965,1.216,1071,3.701,1125,2.711,1151,1.48,1187,2.759,1283,1.906,1301,1.786,1450,1.695,1503,5.559,1507,4.815,1516,2.442,1584,1.634,1701,3.354,2199,2.127,2237,1.786,2330,5.589,2341,2.841,2350,3.362,2442,3.867,2714,2.452,2870,1.682,2938,2.049,4095,4.187,4205,6.537,4213,2.36,4251,2.576,5610,2.576,5962,2.36,6032,4.737,6033,2.764,6034,6.216,6035,2.764]],["component/360",[220,0.615]],["title/361-1",[676,17.814]],["name/361-1",[]],["text/361-1",[]],["component/361-1",[]],["title/361-2",[317,18.84,318,16.799]],["name/361-2",[]],["text/361-2",[]],["component/361-2",[]],["title/361-3",[60,16.431]],["name/361-3",[]],["text/361-3",[]],["component/361-3",[]],["title/361-4",[38,18.004,651,19.647,6036,60.7]],["name/361-4",[]],["text/361-4",[]],["component/361-4",[]],["title/361-5",[183,20.814,651,23.799]],["name/361-5",[]],["text/361-5",[]],["component/361-5",[]],["title/361-6",[47,30.238,183,17.183,651,19.647]],["name/361-6",[]],["text/361-6",[]],["component/361-6",[]],["title/361",[218,29.242,2341,44.096]],["name/361",[6037,3.92]],["text/361",[2,1.039,8,0.677,25,1.424,32,1.51,38,2.122,49,3.529,57,1.289,60,1.261,61,1.966,62,2.946,71,3.298,92,0.9,97,4.423,112,1.281,114,4.229,128,4.502,129,2.884,131,2.237,142,2.558,143,3.396,179,2.008,183,3.804,189,1.264,198,1.5,203,1.661,218,5.137,219,2.255,233,1.635,318,0.765,323,1.086,324,1.08,328,1.089,342,2.185,364,2.632,365,3.101,386,1.237,391,1.668,396,1.164,399,3.687,494,3.869,540,1.412,549,1.539,551,1.9,555,2.422,557,1.821,589,3.029,597,1.811,626,2.969,634,3.535,676,1.593,705,1.88,736,4.441,916,1.465,965,2.451,967,1.505,1056,2.164,1187,3.701,1283,3.842,1285,1.696,1516,3.687,2341,6.351,2370,3.773,3172,2.86,3213,3.891,4278,3.891,5387,2.972,6038,3.349,6039,8.336,6040,3.349,6041,3.349,6042,3.349]],["component/361",[220,0.615]],["title/362-1",[676,17.814]],["name/362-1",[]],["text/362-1",[]],["component/362-1",[]],["title/362-2",[317,18.84,318,16.799]],["name/362-2",[]],["text/362-2",[]],["component/362-2",[]],["title/362-3",[60,16.431]],["name/362-3",[]],["text/362-3",[]],["component/362-3",[]],["title/362",[218,29.242,540,31.002]],["name/362",[6043,3.654]],["text/362",[8,1.392,22,1.718,46,1.733,49,3.241,60,1.213,92,3.472,112,4.312,142,3.479,183,3.469,218,5.14,219,2.17,228,2.56,241,4.594,246,2.528,262,4.018,318,1.573,323,2.232,324,2.221,328,2.24,540,4.1,612,3.965,626,3.632,676,1.315,832,5.6,1121,3.916,1516,5.013,2385,5.498,2442,3.615]],["component/362",[220,0.615]],["title/363-1",[676,17.814]],["name/363-1",[]],["text/363-1",[]],["component/363-1",[]],["title/363-2",[317,18.84,318,16.799]],["name/363-2",[]],["text/363-2",[]],["component/363-2",[]],["title/363-3",[139,31.349]],["name/363-3",[]],["text/363-3",[]],["component/363-3",[]],["title/363",[218,29.242,705,24.813]],["name/363",[3163,3.654]],["text/363",[0,1.091,2,0.679,8,1.268,11,1.677,22,2.813,29,1.104,32,0.987,37,1.042,38,3.344,40,0.697,41,0.859,46,0.551,60,0.916,62,0.697,71,0.78,79,2.24,80,0.75,84,1,92,3.094,95,0.978,96,0.881,99,3.653,105,1.178,106,0.966,112,2.738,114,2.287,131,3.44,134,3.781,139,2.408,141,2.702,142,2.243,143,1.315,168,0.947,170,3.114,172,2.524,173,3.187,183,2.419,188,1.323,189,0.826,191,0.857,203,1.919,216,1.354,218,3.145,219,0.69,262,1.378,299,1.049,318,0.5,323,0.71,324,0.706,328,0.712,347,0.676,348,1.261,356,1.51,361,1.042,365,0.949,369,1.003,386,2.646,392,0.768,396,0.761,404,1.389,415,1.55,416,1.139,420,1.827,423,0.947,425,2.061,447,1.847,499,0.981,520,1.295,521,1.738,547,0.994,551,1.32,553,3.19,557,1.191,560,3.218,597,1.184,626,1.34,639,1.756,643,2.227,647,2.635,676,0.418,677,1.172,679,1.87,705,3.231,708,0.928,720,4.627,721,3.502,727,1.377,734,1.074,736,1.167,751,1.763,752,1.231,798,2.412,800,1.238,812,0.904,826,2.524,887,1.224,910,2.071,925,1.203,958,1.475,965,1.702,967,1.738,1018,1.323,1187,0.972,1242,2.868,1290,2.524,1310,1.082,1424,1.812,1677,4.487,1680,1.597,1857,1.443,2271,1.475,2333,1.87,2349,4.437,2350,5.179,2367,1.55,2397,5.053,2408,4.325,2414,1.597,3153,1.51,3761,1.943,3931,1.812,4161,1.573,4254,2.041,4633,3.605,4914,2.041,5380,3.605,5387,1.943,6044,2.19,6045,2.19,6046,2.19,6047,2.19,6048,2.19,6049,2.19,6050,2.19]],["component/363",[220,0.615]],["title/364-1",[676,17.814]],["name/364-1",[]],["text/364-1",[]],["component/364-1",[]],["title/364-2",[317,18.84,318,16.799]],["name/364-2",[]],["text/364-2",[]],["component/364-2",[]],["title/364-3",[60,16.431]],["name/364-3",[]],["text/364-3",[]],["component/364-3",[]],["title/364-4",[5,18.651,255,24.375,317,15.553]],["name/364-4",[]],["text/364-4",[]],["component/364-4",[]],["title/364",[218,29.242,219,23.177]],["name/364",[6051,3.92]],["text/364",[5,1.369,8,0.66,14,0.625,16,0.671,22,2.46,25,0.769,34,0.651,38,3.018,40,1.038,46,0.821,49,1.485,57,0.697,60,1.676,62,2.004,64,0.725,71,1.587,78,0.837,79,1.406,82,1.186,84,2.034,89,1.793,92,2.055,96,0.728,103,0.811,108,2.001,111,1.035,112,3.136,117,3.559,128,1.387,131,2.195,133,0.858,136,1.233,138,2.553,139,1.097,140,4.114,141,0.941,142,1.593,144,0.796,156,1.5,160,2.041,172,2.826,177,0.959,183,3.33,191,0.708,196,0.959,198,0.811,201,2.435,216,2.679,218,5.396,219,1.718,228,0.673,246,0.664,247,0.864,251,2.822,253,1.169,255,1.31,283,0.969,291,0.794,317,0.464,318,0.413,323,0.587,324,0.584,328,0.589,354,1.085,361,0.861,367,0.974,379,0.861,396,1.894,398,0.681,401,0.933,404,1.148,420,3.316,423,0.782,429,0.924,430,0.913,447,0.864,547,2.021,551,0.617,560,0.929,565,0.989,620,2.422,622,1.005,626,2.829,634,0.894,639,2.586,651,0.586,676,0.346,689,0.801,690,1.205,697,0.984,703,0.901,720,5.894,721,2.703,722,0.816,727,1.138,734,0.887,779,1.903,782,1.879,792,1.342,887,1.011,910,0.969,915,1.903,916,1.948,956,1.755,967,0.813,1073,1.011,1125,3.119,1133,1.606,1151,0.969,1187,3.396,1283,1.248,1301,1.169,1305,2.733,1352,1.32,1507,2.219,1515,2.671,1516,2.296,1615,1.392,1618,4.521,1643,1.101,1673,1.32,1878,1.193,2339,1.264,2350,1.764,2370,0.955,2393,1.497,2394,1.606,2395,1.606,2397,1.07,2713,4.193,2856,2.419,3213,1.264,3541,1.342,3771,1.545,3979,5.081,4213,2.786,4317,1.497,5966,1.545,6052,1.687,6053,1.809,6054,1.809,6055,1.809,6056,1.809,6057,1.809,6058,1.809,6059,1.809,6060,1.809,6061,1.809,6062,1.809]],["component/364",[220,0.615]],["title/365-1",[676,17.814]],["name/365-1",[]],["text/365-1",[]],["component/365-1",[]],["title/365-2",[317,18.84,318,16.799]],["name/365-2",[]],["text/365-2",[]],["component/365-2",[]],["title/365-3",[60,16.431]],["name/365-3",[]],["text/365-3",[]],["component/365-3",[]],["title/365-4",[24,16.047,53,35.891,2905,53.866]],["name/365-4",[]],["text/365-4",[]],["component/365-4",[]],["title/365",[214,35.647,2712,37.238,2715,47.718]],["name/365",[6063,3.92]],["text/365",[0,2.363,8,0.959,10,3.471,11,3.197,22,2.757,24,3.338,25,2.016,38,2.683,40,1.51,42,1.541,46,1.856,53,6.918,57,2.839,60,1.3,92,2.969,110,1.938,112,1.814,128,4.338,131,1.483,134,2.789,142,2.638,143,1.612,171,3.561,183,2.087,215,3.65,218,4.058,228,1.764,246,1.742,317,1.215,318,1.084,323,1.538,324,1.53,328,1.543,367,2.552,420,3.484,447,3.521,491,2.866,510,3.46,536,5.297,542,3.934,592,3.65,626,2.631,676,0.906,678,2.566,689,2.099,753,2.479,1069,3.16,1085,3.735,2271,4.967,2713,4.912,2715,7.112,2905,10.837,4161,3.407,4371,6.298,5797,4.421,6064,4.743]],["component/365",[220,0.615]],["title/366-1",[676,17.814]],["name/366-1",[]],["text/366-1",[]],["component/366-1",[]],["title/366-2",[317,18.84,318,16.799]],["name/366-2",[]],["text/366-2",[]],["component/366-2",[]],["title/366-3",[60,16.431]],["name/366-3",[]],["text/366-3",[]],["component/366-3",[]],["title/366-4",[216,32.645]],["name/366-4",[]],["text/366-4",[]],["component/366-4",[]],["title/366-5",[24,19.438,651,23.799]],["name/366-5",[]],["text/366-5",[]],["component/366-5",[]],["title/366-6",[515,33.47,651,23.799]],["name/366-6",[]],["text/366-6",[]],["component/366-6",[]],["title/366-7",[128,25.804,129,31.431,651,19.647]],["name/366-7",[]],["text/366-7",[]],["component/366-7",[]],["title/366-8",[651,23.799,1681,43.18]],["name/366-8",[]],["text/366-8",[]],["component/366-8",[]],["title/366-9",[183,20.814,651,23.799]],["name/366-9",[]],["text/366-9",[]],["component/366-9",[]],["title/366-10",[47,25.747,183,14.631,219,16.292,651,16.729]],["name/366-10",[]],["text/366-10",[]],["component/366-10",[]],["title/366-11",[527,41.643]],["name/366-11",[]],["text/366-11",[]],["component/366-11",[]],["title/366-12",[5,18.651,255,24.375,317,15.553]],["name/366-12",[]],["text/366-12",[]],["component/366-12",[]],["title/366",[20,28.184,24,16.047,705,20.484]],["name/366",[6065,3.92]],["text/366",[2,0.983,5,0.468,8,0.564,11,3.94,16,0.888,20,3.443,22,1.892,24,2.978,25,0.23,26,0.273,28,1.84,29,0.273,33,2.122,34,0.548,35,0.24,38,1.24,40,0.172,42,0.34,46,0.384,49,1.937,51,1.035,55,0.365,60,1.141,61,0.844,62,2.061,63,0.257,64,0.959,65,0.919,66,0.226,71,1.376,72,0.608,78,0.25,79,0.452,82,0.554,84,0.247,89,0.838,92,1.992,93,0.689,95,1.415,96,0.614,99,1.679,105,0.291,106,0.239,108,0.332,110,0.221,111,0.31,112,0.207,114,0.32,115,1.141,125,0.365,126,0.283,128,2.839,129,0.543,130,0.283,131,2.088,133,0.723,138,0.22,139,0.805,143,3.365,144,0.238,156,0.249,163,0.408,168,0.852,169,0.655,171,0.261,172,1.554,174,2.666,176,0.654,177,0.556,183,2.966,189,0.396,190,0.369,191,0.596,196,0.287,199,0.862,200,0.483,201,0.296,203,0.269,204,0.518,212,1.045,216,1.109,218,1.26,219,1.217,228,0.201,236,0.271,241,0.495,246,0.56,253,0.677,255,0.421,262,0.702,264,0.31,274,0.261,275,0.287,287,1.24,289,0.638,291,0.237,310,1.006,312,1.089,313,0.306,314,0.714,317,0.139,318,0.124,319,0.582,320,1.111,323,0.175,324,0.175,328,0.176,330,0.426,332,0.369,344,0.504,347,1.385,361,0.258,362,0.322,364,2.257,365,0.235,366,0.838,367,0.291,369,0.48,379,0.258,383,1.061,386,1.031,389,0.574,390,0.493,391,0.759,392,0.19,393,0.316,396,1.559,398,0.743,399,0.54,400,0.436,401,0.786,404,0.665,405,0.426,414,0.306,416,0.545,417,1.269,423,0.852,424,0.518,443,0.436,447,0.501,472,0.383,479,0.504,482,1.56,485,1.173,490,0.844,501,1.973,513,0.796,515,1.442,519,0.273,523,0.343,527,0.242,528,0.921,540,0.228,542,0.663,545,0.564,547,0.692,549,1.62,551,1.317,556,0.543,557,0.57,560,0.538,561,0.312,571,0.297,597,0.567,607,0.361,625,0.62,626,2.185,634,0.974,638,0.417,639,1.964,645,0.273,646,0.638,651,1.141,660,0.267,661,0.772,663,0.35,674,0.325,676,0.913,677,0.29,678,0.293,689,0.24,702,1.035,704,1.3,705,0.808,708,0.646,719,0.426,721,1.946,722,0.687,724,0.624,727,1.24,729,1.21,730,3.234,731,0.346,733,1.712,734,1.893,736,0.288,740,0.777,741,0.365,744,0.302,752,0.857,761,0.985,764,0.765,766,0.684,779,0.612,780,0.648,782,0.312,786,1.502,798,2.347,804,0.608,808,0.291,812,2.195,821,0.337,829,2.846,832,0.312,833,0.93,836,1.505,844,0.343,853,0.395,864,0.895,868,0.698,884,0.346,909,0.604,910,0.29,911,2.005,914,1.672,916,1.829,931,0.296,956,0.82,959,0.337,963,0.448,964,0.633,967,0.471,969,0.265,970,1.488,978,0.395,980,0.369,1033,1.13,1056,0.677,1059,0.329,1073,0.302,1103,3.396,1104,0.401,1118,0.624,1138,1.982,1144,0.777,1151,0.29,1154,0.369,1172,0.401,1177,0.343,1197,0.791,1198,0.409,1206,0.505,1210,0.895,1231,2.037,1232,0.462,1254,0.448,1257,0.34,1262,0.373,1285,0.274,1288,0.34,1293,1.33,1305,0.643,1334,0.238,1340,0.643,1352,0.395,1391,0.579,1425,0.365,1461,0.616,1466,0.714,1470,0.791,1482,0.346,1500,0.343,1512,0.417,1524,0.436,1525,0.765,1584,0.32,1595,0.901,1610,2.774,1631,0.426,1633,3.382,1635,0.361,1636,0.436,1644,0.777,1645,0.34,1673,0.765,1675,0.34,1681,2.268,1688,0.895,1758,0.753,1838,1.079,1849,0.365,1855,0.277,1856,0.401,1862,0.389,1877,0.417,1904,0.867,1969,0.462,2033,0.616,2035,2.299,2061,1.587,2184,0.462,2202,1.925,2237,0.35,2302,0.357,2338,1.806,2339,0.732,2354,0.373,2377,0.383,2379,1.274,2385,0.593,2410,0.373,2446,0.409,2484,0.48,2641,1.294,2642,0.306,2657,0.343,2843,1.821,2885,0.448,2918,1.261,2936,0.409,2942,1.396,2946,0.844,3153,0.373,3298,0.35,3302,1.377,3385,0.48,3452,0.426,3460,1.842,3774,0.93,3816,1.75,3957,0.417,3958,0.436,3959,0.807,3976,0.977,4015,1.75,4026,0.417,4069,2.477,4084,0.462,4085,0.93,4121,1.684,4129,1.13,4151,0.426,4155,0.448,4185,0.353,4227,0.807,4231,0.448,4255,1.302,4256,1.302,4257,0.505,4258,0.505,4259,0.505,4260,0.48,4261,0.448,4262,0.505,4291,0.409,4376,0.462,4379,0.462,4396,0.48,4621,0.505,4622,0.462,4628,0.395,4804,0.505,5096,0.505,5149,0.844,5231,0.505,5329,0.505,5357,0.791,5392,1.198,5398,0.462,5709,0.505,5747,0.93,5970,0.505,6066,0.541,6067,0.541,6068,1.048,6069,0.541,6070,0.541,6071,1.048,6072,1.048,6073,0.541,6074,0.541,6075,0.541,6076,0.541,6077,1.972,6078,1.048,6079,1.048,6080,0.541,6081,0.541,6082,0.541,6083,0.541,6084,0.541,6085,0.541,6086,0.895,6087,0.541,6088,0.541,6089,1.048,6090,0.541,6091,0.541,6092,0.541,6093,0.541,6094,0.541,6095,1.048,6096,1.048,6097,0.541,6098,0.541,6099,1.048,6100,0.541,6101,1.048,6102,1.524,6103,0.541,6104,0.541,6105,0.541,6106,1.048,6107,0.541,6108,0.505,6109,0.541,6110,0.541,6111,0.541,6112,0.541,6113,0.541,6114,0.541,6115,1.524,6116,0.505,6117,0.541,6118,0.541,6119,0.541,6120,0.541,6121,0.541,6122,0.541,6123,0.541,6124,0.541,6125,0.541,6126,0.541,6127,0.505,6128,0.48]],["component/366",[220,0.615]],["title/367-1",[676,17.814]],["name/367-1",[]],["text/367-1",[]],["component/367-1",[]],["title/367-2",[317,18.84,318,16.799]],["name/367-2",[]],["text/367-2",[]],["component/367-2",[]],["title/367-3",[60,16.431]],["name/367-3",[]],["text/367-3",[]],["component/367-3",[]],["title/367-4",[24,19.438,651,23.799]],["name/367-4",[]],["text/367-4",[]],["component/367-4",[]],["title/367-5",[515,33.47,651,23.799]],["name/367-5",[]],["text/367-5",[]],["component/367-5",[]],["title/367-6",[183,20.814,651,23.799]],["name/367-6",[]],["text/367-6",[]],["component/367-6",[]],["title/367-7",[5,18.651,255,24.375,317,15.553]],["name/367-7",[]],["text/367-7",[]],["component/367-7",[]],["title/367",[20,28.184,24,16.047,219,19.134]],["name/367",[6129,3.92]],["text/367",[2,1.906,5,0.922,8,0.23,10,1.002,11,3.047,14,0.393,20,3.443,22,1.85,24,3.074,26,0.574,27,1.282,34,0.409,38,1.323,40,1.201,42,0.974,46,0.755,49,1.257,51,0.597,54,0.643,60,1.739,61,0.751,62,2.768,63,1.788,64,0.456,67,0.543,68,0.535,71,1.344,79,1.293,80,0.389,82,1.09,84,0.972,92,1.514,95,0.508,96,0.857,99,0.855,103,0.954,110,0.465,111,0.651,112,0.435,115,1.541,124,0.576,125,0.766,130,0.594,131,2.197,133,1.009,137,1.052,138,0.863,143,2.389,144,0.936,162,0.77,163,1.168,168,0.492,172,2.829,174,2.353,176,1.87,177,1.59,180,1.009,182,0.698,183,3.292,188,0.687,189,0.429,191,0.445,196,1.59,199,0.931,200,0.525,212,1.999,214,0.668,216,1.05,217,0.651,218,0.452,219,1.777,228,0.423,246,1.101,255,0.855,260,0.663,262,1.344,267,0.606,274,0.549,275,0.603,287,1.338,296,0.794,300,0.576,310,1.608,312,1.657,314,0.775,317,0.291,318,0.26,323,0.369,324,0.367,328,0.37,347,0.926,361,1.013,364,3.121,367,0.612,379,2.417,386,0.42,389,0.428,390,1.412,392,1.052,396,1.55,398,0.802,401,0.586,415,1.507,416,1.962,417,2.035,423,1.631,425,0.606,432,0.972,440,0.75,482,0.503,491,0.687,499,0.51,510,0.829,513,0.594,515,1.365,518,0.647,521,0.511,535,1.258,545,2.446,549,0.978,551,0.726,553,1.083,554,0.625,556,1.102,589,0.618,620,0.618,626,1.584,633,0.647,638,0.452,639,1.906,645,0.574,651,1.644,661,1.078,674,0.682,676,0.721,678,0.615,689,0.942,690,0.758,701,0.75,702,0.597,704,1.403,705,1.012,708,1.272,716,0.687,720,0.579,727,0.715,730,3.39,733,1.306,739,0.721,740,1.578,741,0.766,752,0.639,753,1.112,761,1.938,779,1.242,786,0.539,798,3.067,803,0.858,804,0.659,812,3.59,836,0.715,837,0.609,864,0.668,879,0.894,914,4.292,915,1.242,916,0.931,956,1.614,959,0.709,965,0.936,978,0.829,980,2.044,1033,0.843,1056,1.375,1073,0.635,1095,0.612,1103,3.738,1104,0.843,1147,1.418,1151,0.609,1226,0.663,1231,1.123,1279,0.941,1288,0.715,1340,0.698,1450,0.698,1461,0.668,1466,0.775,1512,2.308,1515,1.276,1585,1.45,1636,0.916,1668,1.06,1675,0.715,1702,0.758,1837,1.468,1845,0.916,1849,0.766,1862,2.709,1879,0.635,2034,0.941,2035,1.267,2237,0.735,2270,0.75,2340,0.794,2348,0.663,2379,1.375,2410,0.784,2461,0.728,2641,3.323,2642,1.203,2712,0.698,2848,0.766,2870,2.715,2942,0.805,3114,0.858,3153,0.784,3298,0.735,3424,0.916,3483,0.971,3955,0.698,3956,1.714,3957,2.308,3958,0.916,3959,1.638,3969,0.817,3983,1.468,4026,3.432,4154,0.941,4155,0.941,4156,1.06,4185,0.742,4230,1.761,4231,1.761,4232,1.009,4233,0.875,4234,1.009,4246,1.06,4291,0.858,4378,0.916,4396,3.347,5392,2.358,5787,1.06,5966,0.971,6004,1.009,6086,0.971,6130,1.06,6131,1.06,6132,0.941,6133,1.137,6134,1.137]],["component/367",[220,0.615]],["title/368-1",[676,17.814]],["name/368-1",[]],["text/368-1",[]],["component/368-1",[]],["title/368-2",[317,18.84,318,16.799]],["name/368-2",[]],["text/368-2",[]],["component/368-2",[]],["title/368-3",[60,16.431]],["name/368-3",[]],["text/368-3",[]],["component/368-3",[]],["title/368-4",[651,23.799,705,24.813]],["name/368-4",[]],["text/368-4",[]],["component/368-4",[]],["title/368-5",[219,23.177,651,23.799]],["name/368-5",[]],["text/368-5",[]],["component/368-5",[]],["title/368-6",[651,23.799,2906,49.524]],["name/368-6",[]],["text/368-6",[]],["component/368-6",[]],["title/368",[560,37.733,2906,49.524]],["name/368",[6135,3.92]],["text/368",[2,2.67,8,1.28,11,1.696,14,0.767,20,2.939,22,0.553,24,3.478,27,0.948,29,1.973,32,1,38,0.658,40,1.245,49,1.304,61,1.852,62,1.245,78,1.026,92,1.41,99,2.107,103,1.753,137,1.933,139,0.746,143,1.33,162,1.416,174,2.064,183,3.622,191,2.053,208,1.143,212,2.074,219,4.111,246,0.814,248,1.52,250,1.35,262,2.255,310,2.282,311,1.254,316,1.312,318,0.507,323,0.719,324,0.716,328,0.722,379,3.436,389,2.719,392,0.778,396,0.771,398,1.473,416,1.154,417,2.535,479,1.067,527,0.991,540,1.65,545,3.723,551,0.757,560,5.675,587,1.593,607,2.606,615,1.549,626,2.984,639,0.75,705,3.732,730,3.476,779,1.294,798,3.353,812,4.565,876,1.53,878,1.478,887,2.186,915,2.282,1059,1.35,1085,1.124,1088,1.447,1103,5.31,1391,1.226,1515,2.346,1527,1.571,2161,1.968,2369,1.549,2734,1.618,2848,1.494,2870,2.382,2871,1.361,2906,8.705,3983,2.698,4304,1.835,6136,2.218,6137,2.218]],["component/368",[220,0.615]],["title/369-1",[676,17.814]],["name/369-1",[]],["text/369-1",[]],["component/369-1",[]],["title/369-2",[317,18.84,318,16.799]],["name/369-2",[]],["text/369-2",[]],["component/369-2",[]],["title/369-3",[60,16.431]],["name/369-3",[]],["text/369-3",[]],["component/369-3",[]],["title/369",[228,27.339,639,24.858]],["name/369",[6138,3.92]],["text/369",[8,1.028,46,1.279,60,1.371,62,1.618,64,2.036,89,4.274,92,3.231,115,2.077,128,4.849,129,4.027,138,2.061,183,3.405,191,3.695,199,3.401,205,2.927,218,2.021,219,1.602,228,3.935,246,1.866,300,2.574,310,2.804,318,1.161,323,1.648,324,1.639,328,1.653,347,2.916,369,2.328,392,3.314,396,1.766,521,2.284,626,2.941,639,4.365,676,1.805,705,3.188,720,2.585,780,3.143,832,2.927,897,3.423,946,7.426,1293,2.824,1659,2.84,1674,8.192,1837,3.505,2341,3.048,2413,8.521,2907,4.205,3969,5.586,6139,5.082]],["component/369",[220,0.615]],["title/370-1",[676,17.814]],["name/370-1",[]],["text/370-1",[]],["component/370-1",[]],["title/370-2",[317,18.84,318,16.799]],["name/370-2",[]],["text/370-2",[]],["component/370-2",[]],["title/370-3",[60,16.431]],["name/370-3",[]],["text/370-3",[]],["component/370-3",[]],["title/370",[228,22.569,639,20.521,2907,50.22]],["name/370",[6140,3.92]],["text/370",[8,0.923,16,1.694,22,1.139,38,1.354,46,1.802,60,1.761,62,2.279,64,1.829,86,2.375,92,3.348,115,2.925,128,4.249,129,2.364,160,4.045,180,2.165,183,2.829,191,2.8,205,2.629,208,4.551,218,1.816,228,4.036,246,1.677,294,2.509,300,2.313,318,1.043,323,1.48,324,1.473,328,1.485,365,1.98,369,3.28,391,2.275,396,1.587,551,3.41,626,2.577,639,4.657,676,1.91,705,2.979,720,2.323,721,4.434,897,3.075,946,6.94,1071,2.039,1293,2.537,1633,3.233,1674,8.953,1681,2.681,1882,3.446,2341,4.293,2369,3.189,2370,2.409,2907,3.778,3946,3.899,5836,4.256]],["component/370",[220,0.615]],["title/371-1",[676,17.814]],["name/371-1",[]],["text/371-1",[]],["component/371-1",[]],["title/371-2",[317,18.84,318,16.799]],["name/371-2",[]],["text/371-2",[]],["component/371-2",[]],["title/371-3",[60,16.431]],["name/371-3",[]],["text/371-3",[]],["component/371-3",[]],["title/371-4",[5,18.651,255,24.375,317,15.553]],["name/371-4",[]],["text/371-4",[]],["component/371-4",[]],["title/371",[1507,46.443]],["name/371",[1507,1.953]],["text/371",[5,2.436,8,0.785,16,1.44,22,2.499,32,1.75,34,1.397,38,2.351,40,1.236,42,1.261,46,1.583,49,1.294,60,0.684,61,1.37,62,2.002,71,3.568,78,1.796,89,2.133,92,2.88,96,1.562,105,2.088,112,1.484,113,6.135,117,3.555,131,3.132,142,2.249,143,1.319,144,1.708,163,1.511,183,3.035,189,1.465,198,1.739,201,3.437,216,1.359,218,4.831,228,1.443,241,1.834,246,1.425,247,1.853,255,2.525,291,1.703,317,0.995,318,0.887,323,1.258,324,1.252,328,1.263,341,2.078,354,2.328,385,2.001,396,2.185,399,4.698,420,2.971,521,1.744,527,1.734,547,1.761,551,1.324,626,2.765,639,3.624,661,4.015,676,0.742,689,1.718,699,2.508,832,2.235,1125,3.599,1187,4.046,1507,6.052,1516,3.241,1542,4.189,1584,2.295,1712,2.441,2202,5.467,2341,3.771,2350,4.287]],["component/371",[220,0.615]],["title/372-1",[676,17.814]],["name/372-1",[]],["text/372-1",[]],["component/372-1",[]],["title/372-2",[317,18.84,318,16.799]],["name/372-2",[]],["text/372-2",[]],["component/372-2",[]],["title/372-3",[60,16.431]],["name/372-3",[]],["text/372-3",[]],["component/372-3",[]],["title/372-4",[962,49.665]],["name/372-4",[]],["text/372-4",[]],["component/372-4",[]],["title/372-5",[115,30.044,639,24.858]],["name/372-5",[]],["text/372-5",[]],["component/372-5",[]],["title/372-6",[128,31.257,129,38.073]],["name/372-6",[]],["text/372-6",[]],["component/372-6",[]],["title/372-7",[57,35.892]],["name/372-7",[]],["text/372-7",[]],["component/372-7",[]],["title/372-8",[88,28.475,609,34.116,4362,53.866]],["name/372-8",[]],["text/372-8",[]],["component/372-8",[]],["title/372-9",[5,18.651,255,24.375,317,15.553]],["name/372-9",[]],["text/372-9",[]],["component/372-9",[]],["title/372",[74,23.68,138,20.96,424,25.54,609,29.048]],["name/372",[6141,3.92]],["text/372",[1,0.661,2,0.917,3,0.413,5,1.143,8,1.228,16,0.415,22,1.735,25,0.475,29,0.564,38,1.103,39,0.54,40,0.356,41,1.159,42,0.363,46,1.108,47,0.557,48,0.557,49,1.856,54,0.632,57,1.138,60,0.369,61,1.043,62,0.667,64,0.448,71,1.568,74,2.552,77,0.402,79,0.482,80,0.383,82,0.761,84,1.349,85,1.027,86,1.089,88,4.853,92,3.045,93,0.506,96,0.843,99,1.186,103,0.501,105,0.602,106,1.304,110,0.457,115,0.856,126,0.584,128,3.12,129,3.801,131,4.353,135,2.977,138,3.122,139,1.48,141,1.537,143,1.004,144,0.921,156,0.963,162,1.07,163,1.953,167,0.771,179,1.256,180,0.993,183,2.975,188,0.675,189,0.79,193,0.829,198,1.666,200,0.516,205,0.644,218,0.445,219,2.059,225,0.851,234,0.656,239,0.55,241,2.079,249,0.745,255,0.841,262,0.398,264,0.64,274,0.54,284,0.815,296,0.781,299,0.536,315,0.574,317,0.286,318,0.255,323,0.362,324,0.361,328,0.364,344,1.008,347,0.647,353,0.753,355,0.681,367,0.602,371,2.299,385,0.576,389,0.421,392,0.392,396,1.027,398,1.4,399,0.576,401,0.576,414,0.632,420,1.396,423,0.483,424,3.001,438,0.67,481,1.151,494,0.605,520,0.661,521,1.328,523,0.709,525,0.557,540,0.471,545,0.414,551,1.711,562,0.675,568,2.604,581,0.64,609,5.265,625,1.238,626,1.793,633,1.191,638,0.445,639,2.482,641,0.803,645,1.49,651,0.678,660,1.46,661,1.061,676,0.958,689,0.495,703,0.557,705,2.347,710,0.771,721,0.43,730,0.487,800,1.184,812,2.299,825,1.463,837,0.598,843,1.528,864,0.656,916,1.626,956,1.127,958,0.753,982,0.636,1059,1.275,1071,0.499,1085,0.566,1087,0.681,1132,0.829,1147,0.745,1151,0.598,1183,0.652,1231,1.105,1264,0.661,1270,0.632,1273,0.722,1310,0.552,1315,0.792,1334,1.3,1351,2.923,1458,0.792,1473,0.792,1480,0.737,1507,0.557,1596,0.815,1643,0.681,1645,0.703,1651,0.86,1659,0.625,1879,2.078,2062,2.633,2249,0.844,2256,0.86,2302,0.737,2385,0.632,2409,0.737,2442,0.587,2461,0.716,2475,1.612,2641,1.598,2642,1.184,2818,1.367,2843,0.729,2928,0.762,2936,0.844,2942,2.633,3502,0.815,3824,0.955,3955,0.686,3986,0.729,4288,0.879,4362,0.992,4628,0.815,5358,0.955,5383,0.992,5475,0.955,5643,1.859,5644,1.789,6142,1.118,6143,1.118,6144,1.952,6145,1.118,6146,1.118,6147,2.094,6148,2.094,6149,2.094,6150,1.042,6151,1.118,6152,1.118,6153,1.118,6154,1.118,6155,1.118,6156,2.094,6157,1.118,6158,1.118,6159,1.118,6160,1.118,6161,2.094,6162,1.118,6163,1.118,6164,2.955,6165,1.118,6166,1.118,6167,1.118,6168,1.118,6169,2.754,6170,1.118,6171,2.094,6172,1.118,6173,1.118,6174,1.118,6175,1.118,6176,1.118,6177,1.118,6178,1.118,6179,1.118,6180,1.118,6181,1.042,6182,2.094,6183,2.094,6184,1.118,6185,2.955,6186,1.118,6187,1.118,6188,1.118,6189,1.118,6190,1.118,6191,2.094,6192,1.118,6193,1.118,6194,2.094,6195,1.118,6196,1.042,6197,2.955,6198,0.955,6199,2.094,6200,1.118,6201,1.042,6202,1.118,6203,2.094,6204,1.118,6205,1.118,6206,1.118,6207,1.118,6208,1.118]],["component/372",[220,0.615]],["title/373-1",[676,17.814]],["name/373-1",[]],["text/373-1",[]],["component/373-1",[]],["title/373-2",[317,18.84,318,16.799]],["name/373-2",[]],["text/373-2",[]],["component/373-2",[]],["title/373-3",[962,49.665]],["name/373-3",[]],["text/373-3",[]],["component/373-3",[]],["title/373-4",[60,16.431]],["name/373-4",[]],["text/373-4",[]],["component/373-4",[]],["title/373-5",[5,18.651,255,24.375,317,15.553]],["name/373-5",[]],["text/373-5",[]],["component/373-5",[]],["title/373-6",[139,31.349]],["name/373-6",[]],["text/373-6",[]],["component/373-6",[]],["title/373",[74,23.68,138,20.96,424,25.54,1138,26.523]],["name/373",[6209,3.92]],["text/373",[2,2.443,5,2.06,8,0.619,22,1.673,32,1.38,38,1.532,46,0.77,48,2.574,49,1.02,60,0.911,71,1.091,74,1.402,75,1.893,78,1.416,79,1.319,84,3.061,92,1.801,96,1.232,131,4.001,135,1.501,138,2.095,139,1.737,141,1.592,143,1.04,144,1.347,162,1.108,163,1.192,168,2.234,174,1.615,176,1.908,182,1.878,183,2.701,189,1.95,191,1.197,200,3.092,203,1.519,204,5.02,211,2.111,255,2.075,291,2.266,310,1.104,317,0.784,318,0.699,323,0.992,324,0.987,328,0.996,353,2.062,394,1.978,396,1.795,398,3.825,424,5.02,431,1.925,432,1.398,482,1.355,513,1.6,525,1.525,540,1.291,551,3.465,560,3.44,608,2.853,609,1.72,623,1.752,626,1.729,638,1.217,645,1.544,661,3.989,676,0.585,702,1.607,703,2.574,716,1.849,721,1.178,722,1.38,728,2.138,753,1.6,755,2.355,782,1.763,790,2.355,798,1.421,800,3.79,812,3.632,876,2.111,887,1.71,1136,2.198,1138,5.213,1151,1.639,1301,1.978,2033,1.797,2185,2.614,2192,2.232,2248,1.959,2323,2.167,2340,2.138,2641,2.794,2642,2.921,2667,2.018,4189,2.853,4217,2.614,4229,2.355,4429,2.716,4922,2.614,5309,2.853,5644,4.412,6210,3.061,6211,5.166,6212,2.716,6213,3.061,6214,3.061,6215,3.061,6216,3.061,6217,3.061,6218,3.061,6219,3.061,6220,3.061,6221,5.166,6222,3.061,6223,3.061,6224,3.061,6225,3.061,6226,3.061,6227,3.061,6228,3.061]],["component/373",[220,0.615]],["title/374-1",[676,17.814]],["name/374-1",[]],["text/374-1",[]],["component/374-1",[]],["title/374-2",[317,18.84,318,16.799]],["name/374-2",[]],["text/374-2",[]],["component/374-2",[]],["title/374-3",[60,16.431]],["name/374-3",[]],["text/374-3",[]],["component/374-3",[]],["title/374-4",[5,18.651,255,24.375,317,15.553]],["name/374-4",[]],["text/374-4",[]],["component/374-4",[]],["title/374",[38,21.809,344,35.37]],["name/374",[344,1.886]],["text/374",[2,1.85,5,1.511,6,1.063,8,0.735,16,1.35,22,1.227,33,3.278,34,1.309,38,2.871,41,0.801,46,0.916,49,0.681,60,1.051,61,1.735,62,2.413,63,0.969,71,4.003,88,2.306,92,2.702,96,0.822,99,3.044,128,4.551,129,2.545,133,0.969,138,1.994,143,0.694,144,0.899,163,0.796,172,3.052,173,5.38,180,0.969,183,3.411,189,1.373,200,0.942,202,1.835,219,1.55,228,1.352,246,0.75,255,1.461,279,1.333,300,2.49,310,1.772,315,1.048,317,0.524,318,0.467,323,0.662,324,0.659,328,0.665,344,5.516,348,6.165,364,1.718,379,2.838,389,2.246,393,1.192,394,1.32,395,1.253,396,1.264,398,1.37,454,3.35,522,1.068,525,1.018,527,1.625,551,4.05,556,1.058,565,2.687,626,2.119,639,2.016,645,1.031,661,3.021,674,1.225,676,1.307,704,3.931,705,4.067,721,1.893,722,0.921,733,3.016,734,1.783,784,1.515,790,1.572,800,1.155,812,4.534,815,1.333,836,1.285,843,1.49,844,2.307,897,1.376,916,0.894,929,1.333,965,1.6,1073,1.142,1121,1.162,1138,3.061,1144,2.697,1151,1.094,1391,3.296,1855,1.044,1856,1.515,1878,2.398,2641,3.226,3754,3.106,3955,2.231,4229,2.799]],["component/374",[220,0.615]],["title/375-1",[676,17.814]],["name/375-1",[]],["text/375-1",[]],["component/375-1",[]],["title/375-2",[317,18.84,318,16.799]],["name/375-2",[]],["text/375-2",[]],["component/375-2",[]],["title/375-3",[60,16.431]],["name/375-3",[]],["text/375-3",[]],["component/375-3",[]],["title/375-4",[5,18.651,255,24.375,317,15.553]],["name/375-4",[]],["text/375-4",[]],["component/375-4",[]],["title/375",[551,25.084,2908,62.794]],["name/375",[6229,3.92]],["text/375",[5,2.694,8,0.913,22,2.86,34,2.554,46,1.787,49,1.506,60,0.796,63,2.142,71,1.61,72,2.618,76,2.75,82,2.58,88,2.119,92,2.901,96,1.819,112,1.728,120,2.794,131,1.413,138,3.556,139,1.519,144,1.988,160,2.07,163,1.759,173,2.772,183,3.057,202,2.279,218,2.823,228,1.68,246,1.659,255,2.85,291,4.359,317,1.158,318,1.032,323,1.465,324,1.457,328,1.47,396,1.57,420,5.102,436,2.496,551,4.547,560,2.318,626,2.562,661,2.288,676,0.863,701,2.978,786,4.711,812,2.93,837,2.419,967,2.03,1085,6.291,1099,3.551,1151,2.419,1391,3.922,1424,3.738,2442,4.604,2828,3.078,2908,6.062,6230,4.518,6231,4.518,6232,4.518,6233,4.518,6234,4.518,6235,4.518,6236,4.518,6237,4.518]],["component/375",[220,0.615]],["title/376-1",[317,18.84,318,16.799]],["name/376-1",[]],["text/376-1",[]],["component/376-1",[]],["title/376-2",[60,16.431]],["name/376-2",[]],["text/376-2",[]],["component/376-2",[]],["title/376-3",[60,10.698,92,16.305,619,45.004]],["name/376-3",[]],["text/376-3",[]],["component/376-3",[]],["title/376-4",[60,10.698,651,19.647,1308,32.023]],["name/376-4",[]],["text/376-4",[]],["component/376-4",[]],["title/376-5",[112,23.213,183,17.183,651,19.647]],["name/376-5",[]],["text/376-5",[]],["component/376-5",[]],["title/376-6",[5,18.651,255,24.375,317,15.553]],["name/376-6",[]],["text/376-6",[]],["component/376-6",[]],["title/376",[214,35.647,2712,37.238,3352,51.839]],["name/376",[6238,3.92]],["text/376",[5,2.349,8,0.744,22,1.907,24,2.575,27,1.573,38,3.417,46,0.926,49,1.227,57,3.4,60,1.347,62,1.917,71,1.311,82,1.338,92,2.617,96,1.482,99,2.418,103,1.649,106,1.624,108,2.258,111,2.106,112,3.378,121,3.513,128,2.56,131,1.151,133,1.745,142,2.154,144,1.619,160,3.502,171,3.691,172,1.482,183,3.261,184,2.684,191,3.455,211,2.538,214,2.161,218,4.878,219,1.16,247,1.758,253,2.378,255,2.418,291,1.615,317,0.943,318,0.841,323,1.193,324,1.187,328,1.197,347,1.136,355,2.241,420,4.172,542,2.619,549,1.692,626,2.971,634,1.819,639,2.584,651,1.191,676,1.151,689,1.629,697,2.001,703,1.834,720,3.064,782,2.12,909,2.12,916,2.634,929,3.93,1085,3.051,1097,4.392,1098,2.538,1151,1.971,1154,2.508,1278,2.729,1315,4.264,1516,3.104,1643,2.241,2712,2.258,2713,5.884,2843,2.402,2866,2.508,3352,6.528,3952,2.729,6239,3.681,6240,7.643]],["component/376",[220,0.615]],["title/377-1",[676,17.814]],["name/377-1",[]],["text/377-1",[]],["component/377-1",[]],["title/377-2",[317,18.84,318,16.799]],["name/377-2",[]],["text/377-2",[]],["component/377-2",[]],["title/377-3",[60,16.431]],["name/377-3",[]],["text/377-3",[]],["component/377-3",[]],["title/377",[67,28.986,68,28.575,113,34.737]],["name/377",[1903,2.64]],["text/377",[8,0.744,21,1.826,22,1.907,23,3.177,25,1.565,26,1.856,38,1.786,46,0.926,48,1.834,60,1.061,62,2.811,65,1.715,67,4.218,68,4.586,71,1.311,76,2.241,79,1.587,92,2.809,93,1.665,96,2.424,110,2.461,113,3.446,124,1.864,126,1.923,131,1.151,143,2.047,150,2.069,169,1.582,171,3.691,183,2.164,206,2.192,219,3.631,220,1.258,228,1.368,236,1.841,246,1.351,310,3.184,318,2.018,323,1.193,324,1.187,328,1.197,366,2.023,369,1.686,386,1.36,390,1.733,415,2.606,435,2.402,440,2.426,491,2.224,515,1.675,527,3.945,528,3.638,529,2.479,596,3.695,626,2.512,639,2.036,651,1.191,660,2.976,674,2.207,676,1.151,705,3.887,708,2.553,722,2.715,812,1.519,829,2.335,835,4.264,887,3.365,910,1.971,960,3.663,965,1.619,1000,2.081,1001,2.023,1010,2.258,1012,4.012,1033,2.729,1059,3.666,1082,2.069,1149,2.147,1298,3.537,2248,2.356,2409,2.426,2936,2.778,2939,2.606,3453,3.266,3955,2.258,4196,3.266,4221,3.266,5420,9.749,5631,3.431,6241,3.681]],["component/377",[220,0.615]],["title/378-1",[676,17.814]],["name/378-1",[]],["text/378-1",[]],["component/378-1",[]],["title/378-2",[317,18.84,318,16.799]],["name/378-2",[]],["text/378-2",[]],["component/378-2",[]],["title/378-3",[962,49.665]],["name/378-3",[]],["text/378-3",[]],["component/378-3",[]],["title/378-4",[60,16.431]],["name/378-4",[]],["text/378-4",[]],["component/378-4",[]],["title/378-5",[216,32.645]],["name/378-5",[]],["text/378-5",[]],["component/378-5",[]],["title/378-6",[568,34.374,651,23.799]],["name/378-6",[]],["text/378-6",[]],["component/378-6",[]],["title/378-7",[133,28.778,639,20.521,651,19.647]],["name/378-7",[]],["text/378-7",[]],["component/378-7",[]],["title/378-8",[80,20.784,262,21.627,651,19.647]],["name/378-8",[]],["text/378-8",[]],["component/378-8",[]],["title/378-9",[262,21.627,639,20.521,651,19.647]],["name/378-9",[]],["text/378-9",[]],["component/378-9",[]],["title/378-10",[24,16.047,262,21.627,651,19.647]],["name/378-10",[]],["text/378-10",[]],["component/378-10",[]],["title/378",[45,22.808,649,41.57]],["name/378",[45,0.718,649,1.31]],["text/378",[2,1.032,3,0.683,8,0.917,22,1.933,24,1.198,25,0.786,26,0.932,27,0.79,34,0.665,38,0.548,45,4.138,46,2.585,49,0.616,60,0.799,62,3.058,63,0.876,71,0.659,77,1.631,79,1.434,80,3.409,82,1.209,83,1.051,84,0.844,92,2.581,93,0.836,96,3.341,108,1.134,115,0.755,123,1.195,126,3.339,128,1.414,133,3.374,134,2.692,136,1.26,138,2.246,143,0.628,160,0.847,179,1.109,180,0.876,183,3.193,189,0.698,191,0.723,199,1.455,219,0.583,248,0.718,251,1.722,253,1.195,260,1.078,262,3.659,275,1.763,289,1.125,313,1.045,315,1.707,318,0.422,323,0.599,324,0.596,328,0.601,347,1.71,348,1.915,361,1.582,365,0.801,367,0.995,369,0.847,386,0.683,389,0.696,392,1.59,396,0.642,403,1.309,408,0.928,412,1.109,417,1.816,479,2.181,499,2.031,511,1.26,522,0.966,527,2.025,551,2.643,555,0.804,561,1.065,568,4.801,581,1.058,612,1.915,620,1.808,623,1.058,625,1.966,626,0.858,635,1.529,638,0.735,639,4.159,645,2.287,649,3.131,651,2.844,653,2.294,659,3.1,676,0.866,684,1.328,688,1.579,689,0.818,697,1.005,705,2.615,708,1.41,720,2.306,722,0.833,753,0.966,755,2.559,804,1.927,908,1.117,916,1.455,930,1.529,964,1.117,965,1.994,967,0.831,982,1.051,1051,1.953,1073,1.858,1085,1.685,1087,2.025,1118,2.699,1144,1.371,1175,3.306,1262,2.294,1288,1.162,1334,1.463,1602,1.453,1664,1.488,1879,1.033,2370,1.755,2651,2.11,2719,3.167,2899,3.65,2938,1.371,3298,1.195,4159,1.723,4313,1.579,5637,1.723,5783,1.64,5815,1.488,6242,1.849,6243,1.849,6244,1.849]],["component/378",[220,0.615]],["title/379-1",[676,17.814]],["name/379-1",[]],["text/379-1",[]],["component/379-1",[]],["title/379-2",[317,18.84,318,16.799]],["name/379-2",[]],["text/379-2",[]],["component/379-2",[]],["title/379-3",[156,33.799,225,29.893]],["name/379-3",[]],["text/379-3",[]],["component/379-3",[]],["title/379-4",[60,16.431]],["name/379-4",[]],["text/379-4",[]],["component/379-4",[]],["title/379-5",[183,20.814,219,23.177]],["name/379-5",[]],["text/379-5",[]],["component/379-5",[]],["title/379",[45,22.808,57,28.307]],["name/379",[45,0.718,57,0.892]],["text/379",[1,1.645,2,0.863,5,0.855,8,0.562,11,1.206,14,0.961,20,2.212,22,0.694,24,1.259,34,1.001,37,3.52,42,0.903,45,4.156,46,1.199,49,0.927,57,5.386,60,1.101,77,4.613,80,2.848,87,2.922,88,1.305,92,2.605,94,3.49,124,1.409,128,2.025,137,2.354,143,2.515,183,1.348,199,1.217,219,1.501,262,0.991,264,1.592,283,1.489,299,1.333,318,0.636,319,1.546,323,0.902,324,0.897,328,0.905,366,1.529,369,1.274,379,2.266,386,1.76,389,1.048,392,0.976,417,1.908,437,1.681,479,5.638,528,1.681,549,4.169,626,2.145,641,1.998,676,1.193,697,1.512,705,0.939,798,4.211,800,4.182,812,4.713,965,1.224,967,2.141,969,1.364,1056,1.797,1103,1.196,1294,4.256,1363,3.644,1379,1.874,1450,1.706,1901,5.395,2367,1.969,2409,1.834,2442,1.46,2445,2.24,2731,2.468,2732,1.969,2735,2.468,2741,2.468,2760,2.593,2761,2.593,2762,2.593,2763,2.593,2764,2.593,2766,2.593,2767,2.593,2768,2.593,2769,2.593,2770,2.593,2771,2.593,2772,2.593,2773,2.593,2774,2.593,2775,2.593,2776,2.593,2777,2.593,2779,2.593,2780,2.593,2781,2.593,2782,1.943,2783,2.593,2843,1.815]],["component/379",[220,0.615]],["title/380-1",[676,17.814]],["name/380-1",[]],["text/380-1",[]],["component/380-1",[]],["title/380-2",[317,18.84,318,16.799]],["name/380-2",[]],["text/380-2",[]],["component/380-2",[]],["title/380-3",[60,16.431]],["name/380-3",[]],["text/380-3",[]],["component/380-3",[]],["title/380-4",[57,23.369,139,20.411,219,19.134]],["name/380-4",[]],["text/380-4",[]],["component/380-4",[]],["title/380",[57,28.307,103,32.944]],["name/380",[6245,3.654]],["text/380",[8,1.662,20,1.267,21,1.354,22,1.822,34,0.982,38,1.39,40,0.869,41,1.837,42,0.886,46,0.687,57,5.085,60,0.826,62,1.96,65,1.271,86,1.419,92,1.962,97,1.687,103,5.976,111,1.561,128,1.16,131,2.283,134,3.11,139,1.575,141,1.419,143,1.592,165,1.476,177,1.446,183,2.869,199,1.193,200,1.258,201,2.561,204,1.348,213,3.401,216,0.955,228,1.014,233,3.007,246,1.002,254,3.816,310,0.984,318,0.623,323,0.885,324,0.88,328,0.888,340,1.932,341,1.461,347,1.901,386,1.731,392,0.957,396,0.948,423,2.025,425,1.453,447,2.94,482,1.208,540,1.15,551,2.491,554,2.574,568,3.414,626,1.883,634,1.348,639,3.426,674,1.636,676,0.521,689,1.208,744,3.44,909,1.571,969,1.338,1049,1.798,1058,1.716,1095,1.468,1340,6.741,1387,1.906,1490,3.217,1542,1.817,1855,1.394,2035,1.625,2340,1.906,2413,3.772,2429,4.367,2624,11.72,2848,3.155,6246,2.543,6247,2.543,6248,12.573,6249,12.573]],["component/380",[220,0.615]],["title/381-1",[676,17.814]],["name/381-1",[]],["text/381-1",[]],["component/381-1",[]],["title/381-2",[317,18.84,318,16.799]],["name/381-2",[]],["text/381-2",[]],["component/381-2",[]],["title/381-3",[962,49.665]],["name/381-3",[]],["text/381-3",[]],["component/381-3",[]],["title/381-4",[60,16.431]],["name/381-4",[]],["text/381-4",[]],["component/381-4",[]],["title/381",[23,27.266,191,20.218,705,17.441,2909,42.76]],["name/381",[6250,3.92]],["text/381",[2,2.291,6,0.642,8,0.464,11,1.397,20,1.067,22,2.03,23,6.666,24,2.395,28,2.124,32,0.556,37,1.92,38,3.364,46,0.811,47,0.615,54,0.698,60,1.143,61,0.435,62,2.968,63,0.585,64,0.494,65,0.575,82,0.835,84,0.564,92,2.632,95,1.439,96,0.497,99,0.922,115,4.325,116,0.682,118,0.841,129,0.639,131,2.648,134,0.467,137,2.349,138,1.928,139,0.415,142,0.441,143,2.511,163,0.481,168,2.055,171,1.948,172,0.497,174,1.212,176,1.432,183,2.892,189,1.216,190,0.841,191,2.335,193,0.915,195,1.88,196,0.654,200,1.059,204,0.61,208,1.661,212,1.708,213,0.682,219,2.67,254,1.684,262,1.148,274,0.596,291,1.77,296,0.862,299,0.592,310,3.61,318,0.282,323,0.4,324,0.398,328,0.402,332,0.841,365,0.535,367,0.664,369,0.565,379,0.587,386,1.491,389,1.519,396,0.798,398,0.465,401,1.184,447,1.927,460,0.862,472,0.874,486,1.021,510,0.9,520,1.358,521,0.555,527,0.551,540,0.52,542,2.596,545,0.457,547,0.56,551,2.213,596,0.757,626,2.814,633,0.702,634,1.135,638,0.491,639,1.824,651,0.399,663,0.798,667,1.901,676,0.616,687,0.798,698,0.9,703,0.615,705,1.604,716,1.388,721,1.241,724,0.735,730,1.405,734,1.58,741,0.831,744,0.69,752,0.694,812,1.962,829,1.457,844,3.016,864,0.725,917,1.095,925,1.262,954,0.97,962,0.657,965,1.011,967,0.555,970,1.734,1020,0.814,1087,0.751,1103,2.319,1147,1.53,1149,0.72,1177,0.783,1197,0.931,1237,6.175,1273,0.798,1298,5.475,1315,0.874,1402,1.095,1425,1.547,1453,1.095,1470,0.931,1473,0.874,1486,0.682,1584,0.73,1613,1.53,1662,0.95,1675,0.776,1679,1.499,1718,0.715,1854,0.79,1856,0.915,2033,0.725,2202,2.222,2237,1.484,2251,1.054,2323,0.874,2366,0.841,2437,0.841,2442,4.447,2462,0.874,2641,1.242,2657,0.783,2782,0.862,2808,3.72,2847,1.095,2909,2.666,2928,0.841,2966,1.15,3544,1.095,3566,4.593,3753,1.15,3846,1.095,3953,0.994,3962,0.95,3964,1.054,4074,1.054,4153,1.095,4155,1.021,4203,0.97,4261,1.021,4275,0.994,4317,1.021,4392,1.15,4644,1.054,4769,1.095,5552,1.15,5963,2.141,6086,1.054,6251,2.297,6252,1.234,6253,1.234,6254,1.234,6255,1.234,6256,1.234,6257,1.234,6258,2.297,6259,1.234,6260,1.234,6261,1.234,6262,1.234]],["component/381",[220,0.615]],["title/382-1",[676,17.814]],["name/382-1",[]],["text/382-1",[]],["component/382-1",[]],["title/382-2",[317,18.84,318,16.799]],["name/382-2",[]],["text/382-2",[]],["component/382-2",[]],["title/382-3",[60,16.431]],["name/382-3",[]],["text/382-3",[]],["component/382-3",[]],["title/382-4",[5,18.651,255,24.375,317,15.553]],["name/382-4",[]],["text/382-4",[]],["component/382-4",[]],["title/382",[23,38.79,114,43.476]],["name/382",[6263,3.92]],["text/382",[5,2.132,8,0.649,22,2.256,23,7.166,24,0.849,34,2.497,40,1.022,46,0.808,49,3.013,60,1.223,92,3.228,96,1.292,114,6.696,123,2.074,126,2.81,131,1.682,144,1.412,148,1.837,169,3.49,172,1.292,183,3.401,189,2.03,191,3.176,203,1.593,212,3.679,219,2.559,234,1.885,246,1.975,255,2.16,262,2.893,291,2.359,299,4.333,310,1.157,317,0.823,318,0.733,323,1.041,324,1.036,328,1.044,334,2.273,367,1.727,391,1.599,392,1.887,420,5.525,551,2.367,560,1.647,626,1.387,639,3.056,661,2.724,676,0.613,716,1.939,729,1.969,739,2.036,786,1.522,824,2.656,832,1.849,898,1.985,1151,1.719,1226,1.873,1285,1.626,1298,1.885,1425,4.674,1486,3.834,1718,1.861,1857,2.116,1938,6.019,2035,4.132,2062,5.748,2297,4.228,2346,2.341,2397,3.18,2856,2.38,3446,2.341,3480,2.742,4342,7.204,6264,3.21,6265,3.21,6266,3.21,6267,3.21,6268,3.21,6269,3.21]],["component/382",[220,0.615]],["title/383-1",[676,17.814]],["name/383-1",[]],["text/383-1",[]],["component/383-1",[]],["title/383-2",[317,18.84,318,16.799]],["name/383-2",[]],["text/383-2",[]],["component/383-2",[]],["title/383-3",[60,16.431]],["name/383-3",[]],["text/383-3",[]],["component/383-3",[]],["title/383-4",[24,19.438,651,23.799]],["name/383-4",[]],["text/383-4",[]],["component/383-4",[]],["title/383-5",[515,33.47,651,23.799]],["name/383-5",[]],["text/383-5",[]],["component/383-5",[]],["title/383-6",[183,20.814,651,23.799]],["name/383-6",[]],["text/383-6",[]],["component/383-6",[]],["title/383-7",[5,18.651,255,24.375,317,15.553]],["name/383-7",[]],["text/383-7",[]],["component/383-7",[]],["title/383",[23,38.79,219,23.177]],["name/383",[6270,3.92]],["text/383",[2,2.278,5,1.646,8,0.81,11,0.987,16,0.845,20,1.859,22,2.02,23,5.737,24,3.197,27,2.29,34,0.819,38,1.589,40,1.275,42,0.74,46,0.573,60,1.539,61,0.804,62,1.706,63,1.08,67,1.912,68,1.885,71,0.811,84,1.04,92,2.346,96,1.612,103,1.794,115,0.931,124,1.154,125,1.534,131,2.297,133,1.898,137,1.125,139,0.766,143,3.155,144,1.002,160,1.043,163,1.559,168,0.985,169,1.721,172,1.612,183,2.985,188,1.376,196,2.123,200,1.05,201,1.245,202,1.149,212,2.84,216,0.797,219,2.315,246,0.836,251,1.179,255,1.608,262,0.811,274,1.1,275,1.207,291,0.999,310,0.821,312,2.961,317,0.584,318,0.52,323,0.738,324,0.735,328,0.741,347,0.703,354,1.366,361,1.084,379,1.084,389,0.858,390,1.885,392,0.799,396,0.791,416,1.185,417,0.912,423,1.731,432,1.828,515,1.037,518,1.295,521,1.024,545,2.998,549,1.047,551,1.366,565,1.245,626,2.719,638,1.592,639,2.737,651,1.296,661,2.028,676,1.024,689,1.772,704,1.501,705,0.769,720,1.158,724,1.356,730,2.337,733,2.456,739,1.445,744,1.273,786,1.08,798,3.759,803,1.719,812,3.605,836,1.432,837,1.219,887,1.273,915,1.328,956,2.154,959,2.496,1056,2.587,1073,1.273,1103,2.772,1151,1.219,1226,1.328,1288,1.432,1298,4.754,1340,1.397,1512,3.081,1585,2.728,2035,1.356,2270,1.501,2379,2.587,2410,1.571,2442,1.196,2641,3.973,2642,2.264,2808,1.571,2942,1.612,3153,1.571,3955,1.397,3956,1.834,3957,4.123,3958,1.834,3959,3.081,3969,1.636,4185,1.486,4231,3.313,4232,2.021,4233,1.752,4234,2.021,6004,2.021,6130,2.123,6131,2.123,6132,1.884,6271,2.277]],["component/383",[220,0.615]],["title/384-1",[676,17.814]],["name/384-1",[]],["text/384-1",[]],["component/384-1",[]],["title/384-2",[317,18.84,318,16.799]],["name/384-2",[]],["text/384-2",[]],["component/384-2",[]],["title/384-3",[60,16.431]],["name/384-3",[]],["text/384-3",[]],["component/384-3",[]],["title/384",[344,35.37,2910,59.201]],["name/384",[6272,3.654]],["text/384",[8,0.728,16,1.337,23,7.21,24,2.892,25,1.532,34,1.296,38,1.069,45,1.118,49,1.201,60,1.327,62,2.776,65,1.679,77,1.296,79,1.553,92,2.023,99,1.447,110,1.472,131,3.572,138,3.054,160,1.651,180,1.708,183,3.606,204,1.78,219,2.748,241,1.702,262,2.109,289,2.193,291,4.798,310,2.134,318,0.823,323,1.168,324,1.162,328,1.172,344,6.239,345,2.351,392,2.642,396,2.617,482,2.619,515,1.64,539,2.517,556,1.866,622,2.002,626,2.249,638,1.433,676,0.688,678,3.201,705,1.216,721,1.387,722,1.624,812,1.487,884,2.306,956,1.939,958,3.986,1103,4.14,1293,3.288,1425,2.427,1490,5.033,1516,3.882,1675,3.721,2442,1.892,2910,10.257,5423,2.981,6273,3.358,6274,5.918]],["component/384",[220,0.615]],["title/385-1",[676,17.814]],["name/385-1",[]],["text/385-1",[]],["component/385-1",[]],["title/385-2",[317,18.84,318,16.799]],["name/385-2",[]],["text/385-2",[]],["component/385-2",[]],["title/385-3",[60,16.431]],["name/385-3",[]],["text/385-3",[]],["component/385-3",[]],["title/385",[92,19.751,2911,59.201]],["name/385",[6275,3.347]],["text/385",[8,1.613,23,6.884,49,3.589,60,1.406,76,4.856,79,3.439,92,3.855,131,2.494,183,3.048,219,2.515,262,2.842,312,4.408,318,1.823,323,2.587,324,2.573,328,2.595,626,3.365,676,1.524,884,5.107,2442,6.399,2911,8.669,6275,6.813,6276,7.436]],["component/385",[220,0.615]],["title/386-1",[676,17.814]],["name/386-1",[]],["text/386-1",[]],["component/386-1",[]],["title/386-2",[317,18.84,318,16.799]],["name/386-2",[]],["text/386-2",[]],["component/386-2",[]],["title/386-3",[60,16.431]],["name/386-3",[]],["text/386-3",[]],["component/386-3",[]],["title/386-4",[24,19.438,651,23.799]],["name/386-4",[]],["text/386-4",[]],["component/386-4",[]],["title/386-5",[515,33.47,651,23.799]],["name/386-5",[]],["text/386-5",[]],["component/386-5",[]],["title/386-6",[183,20.814,651,23.799]],["name/386-6",[]],["text/386-6",[]],["component/386-6",[]],["title/386",[705,24.813,2912,60.833]],["name/386",[6277,3.92]],["text/386",[2,3.722,8,0.647,11,2.324,22,2.251,24,3.313,33,1.758,38,3.354,49,2.307,60,1.22,61,1.892,64,1.281,89,2.946,92,2.176,95,1.429,99,2.153,116,1.767,128,2.279,133,2.542,138,1.297,143,1.822,173,5.988,176,3.343,183,3.306,219,3.269,262,1.14,291,3.957,310,3.252,318,0.731,320,1.485,323,1.037,324,1.032,328,1.04,341,4.336,347,0.987,447,2.56,501,5.298,522,2.802,542,1.391,545,1.184,626,2.089,639,2.738,646,1.947,676,1.322,704,4.562,705,1.809,721,3.473,730,2.338,733,3.289,786,2.542,837,1.712,844,3.401,925,2.946,931,4.427,1047,2.264,1071,2.395,1103,4.676,1138,1.641,1187,2.38,1231,1.687,1298,1.878,1486,1.767,2348,1.866,2379,3.464,2442,2.815,2641,2.899,2642,3.031,2912,4.435,3955,1.962,3983,2.206,4186,2.838,4983,4.316,5357,4.046,5589,2.981]],["component/386",[220,0.615]],["title/387-1",[676,17.814]],["name/387-1",[]],["text/387-1",[]],["component/387-1",[]],["title/387-2",[317,18.84,318,16.799]],["name/387-2",[]],["text/387-2",[]],["component/387-2",[]],["title/387-3",[60,16.431]],["name/387-3",[]],["text/387-3",[]],["component/387-3",[]],["title/387",[24,19.438,959,45.846]],["name/387",[6278,3.478]],["text/387",[8,0.954,22,1.832,24,2.689,40,2.87,49,3.391,60,2.148,62,1.502,77,1.697,92,2.422,93,3.321,116,4.057,125,3.177,137,3.628,138,4.126,162,4.562,183,3.45,239,2.322,262,2.616,291,5.121,294,4.954,300,2.389,310,2.647,318,1.078,323,1.529,324,1.522,328,1.535,347,1.456,392,3.569,420,5.954,501,2.41,525,2.35,540,1.989,626,1.894,676,0.901,753,3.837,808,2.538,864,2.77,876,5.064,959,8.252,1103,5.239,2442,2.477]],["component/387",[220,0.615]],["title/388-1",[962,49.665]],["name/388-1",[]],["text/388-1",[]],["component/388-1",[]],["title/388-2",[48,46.443]],["name/388-2",[]],["text/388-2",[]],["component/388-2",[]],["title/388-3",[24,19.438,1414,45.846]],["name/388-3",[]],["text/388-3",[]],["component/388-3",[]],["title/388-4",[24,16.047,72,35.179,1414,37.848]],["name/388-4",[]],["text/388-4",[]],["component/388-4",[]],["title/388",[247,35.112,1414,45.846]],["name/388",[247,1.106,1414,1.444]],["text/388",[2,0.946,4,2.691,5,2.927,8,2.05,14,1.78,20,1.416,22,1.668,23,3.527,24,3.472,25,1.296,27,4.072,29,1.538,35,1.354,38,0.905,40,0.971,45,0.946,46,0.768,49,2.228,60,1.178,62,0.971,63,1.446,72,2.985,82,1.108,92,1.796,106,1.346,110,1.246,111,2.948,112,1.97,115,2.105,131,2.745,134,2.972,142,2.81,155,1.918,156,2.368,157,1.902,159,1.519,160,1.397,162,4.017,173,1.871,216,1.804,225,2.094,227,1.714,234,1.791,247,4.549,250,1.857,251,1.579,310,1.1,311,1.724,312,2.846,347,0.942,396,1.06,398,1.149,399,2.655,420,2.433,435,1.99,473,2.706,499,1.366,500,2.605,501,2.632,520,1.803,537,1.952,540,3.313,545,1.129,551,2.281,553,1.551,620,2.8,622,1.695,623,1.745,668,2.398,676,0.984,681,4.261,705,1.029,725,4.363,730,2.246,830,1.803,837,5.1,931,2.815,1004,3.328,1118,3.067,1188,2.347,1409,2.191,1412,2.347,1414,7.36,1470,3.887,1481,3.647,1507,1.519,1649,2.302,2202,4.611,2203,4.571,2204,2.706,2205,4.571,3763,2.347,3788,2.843,6279,2.523,6280,2.843,6281,2.843,6282,5.151,6283,3.05]],["component/388",[220,0.615]],["title/389-1",[224,63.523]],["name/389-1",[]],["text/389-1",[]],["component/389-1",[]],["title/389-2",[3,34.447]],["name/389-2",[]],["text/389-2",[]],["component/389-2",[]],["title/389-3",[134,35.263]],["name/389-3",[]],["text/389-3",[]],["component/389-3",[]],["title/389-4",[3,27.167,137,36.335]],["name/389-4",[]],["text/389-4",[]],["component/389-4",[]],["title/389-5",[8,10.45,14,17.861,22,12.895,35,22.944]],["name/389-5",[]],["text/389-5",[]],["component/389-5",[]],["title/389-6",[10,28.575,11,26.317,14,20.977]],["name/389-6",[]],["text/389-6",[]],["component/389-6",[]],["title/389-7",[3,27.167,40,23.406]],["name/389-7",[]],["text/389-7",[]],["component/389-7",[]],["title/389-8",[3,27.167,100,42.613]],["name/389-8",[]],["text/389-8",[]],["component/389-8",[]],["title/389-9",[3,27.167,1071,32.842]],["name/389-9",[]],["text/389-9",[]],["component/389-9",[]],["title/389-10",[4,37.529]],["name/389-10",[]],["text/389-10",[]],["component/389-10",[]],["title/389-11",[8,10.45,14,17.861,22,12.895,35,22.944]],["name/389-11",[]],["text/389-11",[]],["component/389-11",[]],["title/389-12",[10,28.575,11,26.317,14,20.977]],["name/389-12",[]],["text/389-12",[]],["component/389-12",[]],["title/389-13",[4,29.598,40,23.406]],["name/389-13",[]],["text/389-13",[]],["component/389-13",[]],["title/389-14",[4,24.435,134,22.959,347,18.74]],["name/389-14",[]],["text/389-14",[]],["component/389-14",[]],["title/389-15",[4,29.598,1071,32.842]],["name/389-15",[]],["text/389-15",[]],["component/389-15",[]],["title/389-16",[42,19.714,45,18.829,46,15.279]],["name/389-16",[]],["text/389-16",[]],["component/389-16",[]],["title/389-17",[14,25.409,225,29.893]],["name/389-17",[]],["text/389-17",[]],["component/389-17",[]],["title/389",[3,22.428,4,24.435,131,18.98]],["name/389",[3,1.448]],["text/389",[3,4.354,4,3.811,5,0.994,6,0.335,8,1.836,9,1.394,10,0.844,14,2.988,16,0.46,22,1.494,24,2.47,25,0.762,34,1.457,35,1.024,38,1.93,39,1.346,40,1.723,41,0.253,42,1.315,45,0.556,46,1.284,49,0.215,52,0.769,53,1.06,57,0.248,60,0.714,62,1.164,65,0.578,66,0.519,72,0.373,80,1.108,82,2.536,85,1.131,86,0.645,92,2.723,95,3.117,99,1.468,100,1.337,104,0.398,110,0.263,111,0.71,112,0.246,113,0.369,114,0.733,116,0.356,128,0.274,129,3.37,131,4.334,133,0.305,134,2.877,135,0.316,136,0.439,137,1.14,138,1.793,139,0.603,141,0.335,143,0.219,152,0.439,154,0.416,156,0.296,157,0.402,160,0.821,162,1.6,163,1.085,168,0.536,169,0.533,172,0.499,177,0.341,180,0.305,189,0.468,194,0.723,199,1.415,200,2.2,201,0.352,203,1.145,204,0.886,216,3.438,219,0.727,225,0.504,227,0.362,234,0.728,238,0.809,239,0.317,241,0.847,248,0.697,250,0.392,254,0.337,274,0.311,277,1.137,281,0.398,283,0.345,285,0.941,299,0.594,300,0.326,310,1.167,316,0.381,318,0.283,329,1.024,337,0.95,338,1.282,342,0.42,343,1.491,347,1.25,355,0.392,364,0.304,365,0.279,366,0.354,380,0.478,386,0.458,389,0.243,390,0.303,391,0.893,392,0.435,396,1.124,398,0.467,408,1.159,416,2.969,418,0.456,420,2.557,423,0.775,425,0.343,440,0.425,453,0.78,481,0.354,494,0.97,499,0.803,505,0.519,512,1.648,515,0.293,517,0.47,522,1.456,525,0.321,527,0.554,537,2.34,538,0.456,540,0.523,542,0.539,545,0.664,551,0.951,553,0.631,554,0.354,556,0.928,581,1.026,591,0.78,612,0.371,626,1.14,638,1.287,660,0.318,661,0.908,676,0.441,678,0.348,705,0.779,706,0.429,708,0.76,731,0.412,744,0.36,746,3.559,748,1.591,752,0.362,761,0.416,762,2.26,766,0.42,776,0.826,779,1.046,786,0.588,808,1.5,830,0.381,859,0.42,884,0.412,885,0.478,910,0.345,925,0.354,956,0.965,965,0.283,1004,1.159,1071,1.445,1088,0.42,1103,0.277,1137,0.478,1163,0.486,1183,0.723,1226,0.376,1244,0.42,1246,0.55,1248,0.835,1264,1.06,1308,0.946,1313,0.444,1332,0.572,1334,1.608,1335,0.954,1337,2.442,1357,1.444,1387,0.45,1391,0.356,1396,0.891,1425,1.208,1486,0.356,1525,1.308,1549,0.47,1599,0.606,1608,1.483,1670,1.1,1673,1.308,1675,0.78,1716,1.026,1758,0.463,1759,0.506,1849,0.434,2061,0.519,2196,0.519,2209,3.407,2237,0.801,2330,0.767,2354,0.444,2369,0.866,2524,0.55,2643,0.55,2657,0.409,2732,0.878,2808,0.444,2941,0.55,3030,1.1,3031,1.483,3032,1.531,3033,1.483,3034,1.483,3035,1.483,3036,1.531,3037,0.572,3038,1.1,3039,1.1,3040,0.6,3041,0.6,3042,0.6,3043,0.6,3044,0.55,3045,0.6,3046,0.6,3047,0.6,3048,0.6,3049,0.572,3062,5.96,3063,0.55,3073,0.55,3075,1.026,3076,0.55,3078,0.55,3079,0.533,3080,1.059,3081,0.891,3082,0.55,3084,0.6,3086,0.572,3354,0.55,3358,0.572,3359,4.165,3360,0.519,3361,3.402,3362,3.671,3363,0.572,3364,1.671,3365,0.6,3366,2.231,3367,0.572,3368,1.483,3369,1.591,3370,1.483,3374,0.6,3375,0.6,3376,0.572,3377,0.572,3378,0.6,3379,0.6,3384,0.6,3778,0.533,6284,3.656,6285,1.24,6286,0.644,6287,0.644,6288,0.644,6289,0.644,6290,0.644,6291,0.644,6292,8.646,6293,1.793,6294,1.24,6295,7.407,6296,2.307]],["component/389",[220,0.615]],["title/390",[]],["name/390",[1086,3.478]],["text/390",[3,2.816,4,3.068,22,1.902,25,3.24,26,3.844,39,3.68,41,5.02,42,3.39,46,1.918,52,3.267,53,4.507,77,2.742,109,5.43,131,2.383,157,4.752,162,2.759,189,3.94,198,3.415,199,3.333,227,4.284,239,3.751,262,2.716,277,4.835,344,3.666,347,2.353,355,4.64,407,5.474,408,3.828,494,4.122,509,5.752,561,4.389,722,3.436,748,5.256,752,4.284,1094,6.306,1125,4.362,1160,7.104,1161,7.104,1162,7.104]],["component/390",[220,0.615]],["title/391",[]],["name/391",[57,1.509]],["text/391",[34,2.925,42,2.64,45,2.522,46,2.046,50,4.154,57,5.279,58,5.17,59,4.681,71,2.896,112,3.109,177,4.31,194,4.742,239,4.001,262,2.896,340,5.756,348,4.681,390,3.827,396,2.825,417,4.368,425,4.331,513,4.248,561,4.681,638,4.337,749,4.517,849,5.157,925,4.467,951,6.943,1142,5.679,1143,7.578,1144,6.027,1145,6.256]],["component/391",[220,0.615]],["title/392",[]],["name/392",[1087,2.386]],["text/392",[22,1.972,24,2.089,25,3.36,42,3.475,45,4.032,46,3.053,92,2.123,131,3.793,183,2.237,188,4.775,251,4.093,274,3.816,347,2.44,551,3.65,568,3.695,639,4.101,649,6.858,705,3.611,965,4.707,1085,4.004,1087,7.384,1163,5.965,1164,7.367,1165,7.367]],["component/392",[220,0.615]],["title/393",[]],["name/393",[1085,1.985]],["text/393",[6,4.933,22,3.009,46,3.338,92,3.239,99,3.808,103,5.403,110,3.875,219,2.989,436,5.24,561,5.461,705,3.2,1058,5.963,1085,7.068,1146,8.416,1147,6.317]],["component/393",[220,0.615]],["title/394",[]],["name/394",[5,0.712,255,0.93]],["text/394",[5,2.301,22,2.573,24,1.98,34,2.694,38,2.221,40,3.283,46,2.969,63,3.55,112,2.864,131,3.224,139,2.518,171,4.979,188,4.524,189,3.892,191,2.929,199,3.275,220,1.564,255,3.007,257,7.203,283,4.009,317,1.919,347,2.312,365,3.247,391,3.73,417,3,525,3.73,545,2.772,555,3.256,561,4.312,668,5.887,730,3.265,882,5.552,910,4.009,1032,5.044,1058,4.709,1148,5.762,1149,4.368,1150,4.793,1151,4.009]],["component/394",[220,0.615]],["title/395-1",[77,26.457,92,19.751]],["name/395-1",[]],["text/395-1",[]],["component/395-1",[]],["title/395-2",[5,28.646]],["name/395-2",[]],["text/395-2",[]],["component/395-2",[]],["title/395-3",[626,18.962,808,39.564]],["name/395-3",[]],["text/395-3",[]],["component/395-3",[]],["title/395",[]],["name/395",[626,0.597,1119,1.821]],["text/395",[3,3.432,4,2.598,5,1.232,22,2.317,24,1.06,25,1.704,26,2.022,41,1.572,42,1.302,45,2.881,46,2.04,62,1.276,65,1.868,66,1.677,71,1.428,77,1.442,92,1.734,102,2.566,110,2.637,112,2.468,131,2.904,135,3.165,139,1.348,142,1.434,156,1.843,162,3.686,169,1.723,174,2.115,180,1.901,183,1.135,188,3.9,189,1.513,194,3.765,198,2.892,218,1.594,219,1.264,241,1.894,246,1.472,275,4.295,284,2.924,285,2.105,294,2.203,313,2.266,325,2.37,344,1.928,347,1.993,354,2.404,363,3.026,378,2.095,395,2.459,396,1.393,418,2.838,422,3.085,553,2.039,561,3.717,604,2.7,620,2.18,622,4.502,626,3.252,638,2.567,663,2.59,690,4.3,701,2.642,705,1.353,710,2.765,722,2.91,748,2.765,749,2.227,808,4.998,1094,3.317,1101,3.228,1102,3.557,1103,1.723,1104,2.972,1105,3.424,1106,2.879,1107,3.424,1108,3.228,1109,3.557,1110,3.737,1111,3.737,1112,3.737,1113,3.737,1114,3.737,1115,2.924,1116,3.737,1117,3.737,1118,3.843,1119,3.151,1120,3.557,1121,2.28,1122,3.228,1123,3.424,1124,3.557,1125,2.294,1126,3.557,1127,3.557,1128,3.424]],["component/395",[220,0.615]],["title/396",[]],["name/396",[79,0.999,425,1.234]],["text/396",[8,1.514,11,3.247,16,2.778,27,3.201,29,3.777,35,3.324,42,2.432,46,2.596,79,4.445,80,2.564,83,5.865,92,3.168,185,6.029,193,7.646,194,4.368,197,4.936,239,3.686,241,3.537,299,3.589,337,3.969,414,4.233,417,3,440,4.936,447,3.576,561,4.312,638,4.101,708,3.174,722,3.376,731,4.793,982,4.259,1152,7.407,1153,6.98,1154,5.102,1155,7.301,1156,6.98,1157,6.98,1158,6.98,1159,6.645]],["component/396",[220,0.615]],["title/397",[]],["name/397",[539,1.618,547,1.051]],["text/397",[2,2.006,22,2.718,24,3.149,34,2.327,38,2.759,39,3.123,45,2.885,46,2.998,77,2.327,79,2.788,92,3.53,103,2.898,112,2.473,144,2.845,184,4.717,189,2.441,193,4.795,195,3.773,198,4.168,202,3.262,209,5.706,236,3.235,260,3.773,273,3.614,310,2.332,345,4.22,389,2.436,391,3.222,398,2.436,422,7.157,447,3.088,555,2.812,615,4.518,623,3.701,631,4.356,663,4.179,685,6.196,690,4.308,915,3.773,935,4.518,1069,4.308,1129,5.739,1130,6.028,1131,4.179,1132,4.795,1133,5.739]],["component/397",[220,0.615]],["title/398",[]],["name/398",[134,1.483]],["text/398",[3,2.767,4,5.365,14,3.564,24,2.726,27,3.201,32,3.376,40,2.384,65,3.489,71,2.668,88,3.513,92,2.011,134,3.9,168,3.237,188,4.524,194,4.368,205,4.312,251,3.877,274,3.616,281,6.377,316,4.428,347,2.312,365,3.247,423,3.237,547,3.398,706,4.988,710,5.164,722,3.376,887,4.184,967,3.366,1088,4.886,1094,6.195,1134,5.378,1135,6.98,1136,5.378,1137,5.552,1138,3.843,1139,6.98,1140,6.645,1141,6.395]],["component/398",[220,0.615]],["title/399",[]],["name/399",[77,1.41]],["text/399",[14,3.277,22,2.366,34,3.412,45,2.942,60,1.671,77,4.771,78,4.388,79,4.088,80,4.54,81,6.462,82,3.447,83,5.394,84,4.331,85,4.649,86,4.933,87,5.818,88,4.449,89,5.211,90,7.297]],["component/399",[220,0.615]],["title/400",[]],["name/400",[82,0.597,6297,1.644,6298,1.644]],["text/400",[2,2.089,5,1.299,22,2.609,32,1.906,34,1.521,62,2.144,71,1.506,74,1.937,82,1.536,91,2.057,92,2.572,100,2.45,120,4.165,129,2.189,130,2.209,133,2.004,139,1.421,143,2.289,155,2.658,160,1.937,174,3.553,177,2.241,179,2.535,181,3.134,183,3.154,189,1.595,199,1.849,201,2.31,219,2.646,233,3.289,234,2.482,274,2.041,275,2.241,313,2.39,317,1.083,338,2.349,347,1.305,348,2.434,354,2.535,364,1.997,375,4.54,386,2.488,390,1.99,391,2.106,393,2.466,398,1.592,401,2.179,440,2.786,551,2.297,589,2.298,626,1.09,645,2.132,662,4.199,730,3.661,733,4.132,786,2.004,798,1.963,800,3.808,808,2.275,812,2.78,825,4.704,836,2.658,844,5.325,955,4.235,964,2.554,1073,2.362,1095,2.275,1098,2.915,1243,3.61,1270,2.39,1304,3.323,1596,3.083,2327,5.422,2340,2.953,2379,4.352,2461,2.706,2641,3.642,2642,2.39,2821,3.323,3153,2.915,3956,3.403,4094,3.19,4109,6.277,4288,3.323,5745,3.94,6116,3.94,6299,4.227,6300,4.227,6301,4.227,6302,4.227,6303,4.227,6304,4.227,6305,4.227,6306,4.227,6307,4.227,6308,4.227,6309,3.94]],["component/400",[220,0.615]],["title/401",[]],["name/401",[4,1.578]],["text/401",[3,4.899,4,4.854,5,2.914,8,1.917,14,3.277,62,3.019,97,5.865,99,3.808,112,3.627,135,4.649,139,3.189,140,7.157,141,4.933,142,3.392,144,4.172,145,5.532,148,5.427,149,6.714,150,5.33,151,8.099]],["component/401",[220,0.615]],["title/402-1",[3,27.167,4,29.598]],["name/402-1",[]],["text/402-1",[]],["component/402-1",[]],["title/402",[]],["name/402",[3,0.607,4,0.662,8,0.332]],["text/402",[3,5.176,4,5.02,5,3.291,8,1.841,14,4.06,16,2.329,34,2.259,45,2.824,46,2.291,49,3.034,62,1.998,63,2.976,97,5.629,99,2.521,112,4.096,130,3.28,132,5.194,133,2.976,134,2.374,135,4.463,136,4.277,137,3.102,138,3.692,139,3.061,140,6.87,141,4.735,142,3.831,143,2.134,144,4.005,145,5.31,146,5.194,147,5.194,148,3.592,149,4.445,150,3.528,151,5.361]],["component/402",[220,0.615]],["title/403",[]],["name/403",[8,0.792]],["text/403",[8,2.723,32,4.423,38,2.91,45,3.822,46,3.101,77,4.433,78,4.54,87,6.018,91,4.773,92,3.309,93,4.437,94,5.482,95,4.382,96,3.949]],["component/403",[220,0.615]],["title/404-1",[1,43.476,2,22.808]],["name/404-1",[]],["text/404-1",[]],["component/404-1",[]],["title/404",[]],["name/404",[1,1.37,2,0.718]],["text/404",[8,2.13,14,1.483,16,1.592,22,1.071,24,1.134,32,1.935,34,1.544,38,3.727,45,3.784,46,3.163,60,1.201,77,4.23,78,5.189,79,4.541,80,3.607,81,4.644,82,2.477,83,4.822,84,1.959,85,2.104,86,2.232,87,4.181,88,2.013,89,2.358,90,3.302,91,2.087,92,3.158,93,1.941,94,2.398,95,1.917,96,1.727,97,2.653,98,3.238,99,2.737,100,2.487,101,5.244,102,4.363,103,1.922,104,4.215,105,2.309,106,1.893,107,3.373,108,2.632,109,2.232,110,1.753,111,3.9,112,1.641,113,2.455,114,2.537,115,3.464,116,2.371,117,2.426,118,2.924,119,2.675,120,2.653,121,2.503,122,4.323,123,2.773,124,2.173,125,2.89,126,2.242,127,2.773,128,1.824,129,2.222,130,2.242,131,1.342]],["component/404",[220,0.615]],["title/405",[]],["name/405",[170,1.865,171,1.118]],["text/405",[2,1.595,20,3.644,22,1.958,24,1.36,38,3.939,79,2.217,99,4.605,111,2.943,112,1.967,121,3,131,1.608,170,7.663,171,3.79,172,3.159,173,8.312,174,2.713,175,3.813,176,3.207,177,2.727,178,8.871,179,3.085,180,2.438,181,3.813,182,3.155,183,1.456,184,3.751,185,4.141,186,3.751,187,4.392,188,3.107,189,3.592,190,3.504,191,2.012,192,4.255,193,3.813,194,4.578,195,3,196,2.727,197,5.173,198,3.517,199,3.433,200,2.372,201,2.811,202,2.594,203,3.894,204,2.542,205,2.962,206,3.063,207,3.813,208,2.651,209,3.155,210,4.043,211,5.413,212,2.727,213,2.842,214,4.609,215,3.958,216,1.801,217,2.943,218,2.046,219,1.621]],["component/405",[220,0.615]],["title/406",[]],["name/406",[5,1.204]],["text/406",[5,4.074,8,1.917,14,3.277,42,3.08,66,3.966,82,3.447,93,4.289,112,3.627,142,3.392,152,6.462,153,5.773,154,7.792,155,5.963,156,4.359,157,5.913,158,8.416,159,4.724,160,4.345,161,7.157,162,3.433]],["component/406",[220,0.615]],["title/407",[]],["name/407",[46,0.987]],["text/407",[38,3.654,45,3.043,46,3.556,78,4.54,97,6.067,98,7.404,99,3.939,100,5.685,101,7.549,102,6.28,103,4.395,104,6.067,105,5.279,106,4.329,107,7.712,108,6.018]],["component/407",[220,0.615]],["title/408",[]],["name/408",[3,1.448]],["text/408",[3,4.971,4,4.228,5,3.227,8,1.555,14,4.133,16,2.853,34,2.767,45,3.258,46,2.644,49,3.5,63,3.646,97,4.756,112,4.016,130,4.019,132,6.363,133,3.646,134,2.909,135,3.77,136,5.24,137,3.8,138,4.259,139,2.586,140,5.804,141,4,142,3.757,143,2.614,144,3.383,145,4.486,146,6.363,147,6.363]],["component/408",[220,0.615]],["title/409",[]],["name/409",[92,1.053]],["text/409",[8,1.709,16,3.136,24,2.234,38,3.961,46,2.817,77,3.041,78,3.911,79,4.824,80,2.894,83,4.807,92,3.587,99,3.394,101,6.503,102,5.41,109,4.396,110,3.453,111,4.836,112,3.232,113,4.836,114,4.997,115,5.126,116,4.67,117,4.778,118,5.758]],["component/409",[220,0.615]],["title/410",[]],["name/410",[45,1.216]],["text/410",[38,3.408,45,3.969,60,1.551,78,5.318,79,4.954,80,3.013,81,5.996,82,3.198,83,5.005,104,5.442,111,5.036,119,5.487,120,5.442,121,5.133,122,7.29,123,5.686,124,4.457,125,5.927,126,4.598,127,5.686,128,3.741,129,4.556,130,4.598,131,2.751]],["component/410",[220,0.615]],["title/411",[]],["name/411",[8,0.468,9,1.399]],["text/411",[0,5.185,3,3.845,4,4.19,6,5.414,8,2.584,9,6.288,10,4.9,11,4.512,12,5.491,13,7.717,14,4.417,15,5.517,16,3.862]],["component/411",[220,0.615]],["title/412",[]],["name/412",[8,0.468,17,1.41]],["text/412",[0,4.169,5,2.571,8,2.248,10,3.939,11,3.628,17,7.6,18,9.256,19,7.488,20,5.162,21,6.87,22,2.088,23,4.415,24,2.212,25,4.726,26,4.221,27,3.577,28,5.516,29,4.221,30,5.771,31,6.011,32,3.773,33,4.599,34,3.011]],["component/412",[220,0.615]],["title/413",[]],["name/413",[8,0.468,35,1.028]],["text/413",[0,3.901,3,2.894,4,3.152,5,2.406,8,2.441,12,7.143,24,2.07,35,4.72,36,5.275,37,3.726,38,2.323,39,5.134,40,2.493,41,3.071,42,2.543,43,7.884,44,7.884,45,2.429,46,1.971,47,3.901,48,3.901,49,2.61,50,4.001,51,4.112,52,3.357,53,4.631,54,4.428,55,5.275,56,5.11,57,3.015,58,3.713,59,4.51]],["component/413",[220,0.615]],["title/414",[]],["name/414",[8,0.468,247,1.106]],["text/414",[0,4.089,3,3.033,8,2.782,10,3.864,11,3.559,16,3.045,45,2.546,46,2.066,88,3.85,92,2.948,112,3.139,134,3.104,142,3.926,173,5.035,247,6.303,248,4.803,250,4.996,264,4.697,283,4.394,725,7.161,829,5.207,837,4.394,1411,7.283,1412,6.316,1413,6.452]],["component/414",[220,0.615]],["title/415",[]],["name/415",[8,0.468,42,0.752]],["text/415",[0,5.122,3,3.799,4,4.139,8,2.079,10,4.841,11,4.458,14,3.553,42,4.468,45,3.19,46,2.588,60,1.812,61,3.628,62,3.273,63,4.875]],["component/415",[220,0.615]],["title/416",[]],["name/416",[8,0.468,51,1.216]],["text/416",[0,5.45,3,4.043,4,4.404,5,3.362,8,2.212,10,5.151,11,4.744,51,6.918,64,4.383,65,5.097]],["component/416",[220,0.615]],["title/417",[]],["name/417",[8,0.468,66,0.969]],["text/417",[8,2.27,12,5.924,42,3.647,45,3.483,46,2.826,66,4.697,67,5.362,68,5.286,69,7.123]],["component/417",[220,0.615]],["title/418-1",[0,46.443]],["name/418-1",[]],["text/418-1",[]],["component/418-1",[]],["title/418",[]],["name/418",[0,1.154,8,0.468]],["text/418",[0,5.33,3,3.359,4,3.659,5,2.428,6,2.01,8,2.854,9,3.785,10,4.279,11,3.941,12,5.945,13,2.865,14,2.731,15,2.048,16,1.434,17,5.534,18,5.859,19,4.22,20,2.909,21,4.957,22,0.964,23,2.038,24,1.656,25,2.663,26,1.949,27,1.652,28,2.547,29,1.949,30,2.665,31,2.775,32,1.742,33,2.123,34,1.39,35,4.036,36,2.602,37,1.838,38,1.146,39,3.025,40,1.23,41,1.515,42,3.475,43,4.645,44,4.645,45,2.451,46,1.989,47,1.925,48,1.925,49,1.288,50,1.974,51,4.773,52,1.656,53,2.285,54,2.184,55,2.602,56,2.521,57,1.487,58,1.832,59,2.225,60,0.681,61,1.363,62,1.23,63,1.832,64,1.548,65,1.8,66,2.621,67,1.845,68,1.819,69,2.451,70,5.107,71,1.377,72,2.239,73,2.521,74,1.77,75,2.389,76,2.352]],["component/418",[220,0.615]],["title/419",[]],["name/419",[8,0.468,70,1.497]],["text/419",[0,5.381,8,2.644,35,4.796,70,8.449,71,3.849,72,6.261,73,7.049,74,4.949,75,6.68,76,6.576]],["component/419",[220,0.615]],["title/420",[]],["name/420",[53,1.37,716,1.399]],["text/420",[4,3.272,22,2.028,40,2.588,45,3.383,46,2.046,61,2.868,134,5.187,137,5.389,138,3.297,183,3.087,189,3.068,220,1.698,428,5.359,481,4.467,630,5.756,638,3.233,703,4.05,705,3.68,715,5.539,716,6.588,717,6.391,718,7.214,719,6.391,720,4.136,721,3.13,722,3.665,723,6.943,724,4.841,725,5.305]],["component/420",[220,0.615]],["title/421",[]],["name/421",[8,0.332,162,0.595,544,1.241]],["text/421",[3,3.583,16,3.599,24,2.564,134,3.668,160,4.444,283,5.192,292,6.867,308,4.774,344,4.666,347,2.994,366,5.33,386,4.519,452,6.047,513,5.068,542,4.217,543,7.624,544,7.32,545,3.591,546,7.463,547,4.401]],["component/421",[220,0.615]],["title/422",[]],["name/422",[8,0.332,162,0.595,537,1.052]],["text/422",[3,2.894,4,4.28,8,2.618,14,4.172,22,1.954,27,3.348,34,2.818,52,3.357,61,2.763,82,2.846,116,4.327,130,4.093,134,2.962,152,5.336,160,3.588,162,4.37,168,3.386,294,4.304,347,3.283,390,3.687,398,2.949,426,6.142,515,3.565,517,7.755,537,5.013,538,5.545,539,5.47,540,3.302,541,6.688,542,3.405]],["component/422",[220,0.615]],["title/423",[]],["name/423",[8,0.468,60,0.408]],["text/423",[6,5.285,8,2.054,60,1.791,134,4.763,248,3.947,310,3.663,347,3.888,426,5.169,428,6.697,548,7.298,549,4.67,550,9.47,551,3.466,552,8.18,553,5.169]],["component/423",[220,0.615]],["title/424",[]],["name/424",[8,0.258,93,0.576,162,0.461,225,0.518]],["text/424",[8,2.163,22,1.972,25,3.36,26,3.987,47,3.937,61,3.775,82,3.889,93,3.575,134,4.047,162,4.705,225,5.522,241,3.734,310,2.85,347,2.44,364,5.055,390,5.037,396,2.747,426,5.443,535,4.673,542,3.437,588,6.539,589,5.817,590,6.539,591,4.97,592,6.082,593,6.75]],["component/424",[220,0.615]],["title/425",[]],["name/425",[8,0.258,155,0.801,162,0.461,429,0.651]],["text/425",[49,3.196,61,3.384,82,4.844,162,4.396,189,4.584,364,4.53,429,6.205,430,6.126,499,4.297,542,4.17,545,3.551,551,3.272,589,5.214,594,7.379,595,5.214,596,5.883]],["component/425",[220,0.615]],["title/426",[]],["name/426",[8,0.258,212,0.675,267,0.679,2778,0.915]],["text/426",[4,2.84,10,3.321,22,2.851,57,2.716,63,3.345,74,4.533,80,2.416,131,3.094,134,4.322,138,2.861,163,2.747,174,3.722,180,3.345,194,4.116,212,5.245,267,6.087,347,3.055,423,5.639,481,3.877,551,3.375,568,3.298,571,3.877,630,4.995,638,2.806,679,6.025,717,5.546,729,4.328,749,3.92,1391,3.898,1854,4.516,2778,7.106,3099,9.222,3100,6.576,3101,6.576,3102,6.576,3103,6.576,3104,6.576]],["component/426",[220,0.615]],["title/427-1",[46,18.508,92,19.751]],["name/427-1",[]],["text/427-1",[]],["component/427-1",[]],["title/427-2",[92,16.305,1718,35.179,2401,40.436]],["name/427-2",[]],["text/427-2",[]],["component/427-2",[]],["title/427",[2871,57.195]],["name/427",[385,2.02]],["text/427",[2,3.243,8,2.114,16,1.842,22,1.239,38,3.101,60,1.346,62,2.431,71,2.721,85,2.434,92,1.333,99,1.993,106,2.19,126,2.594,139,1.669,143,1.687,169,2.134,175,3.68,209,3.045,212,2.631,225,2.018,247,2.37,248,1.929,317,1.957,319,2.758,347,2.358,396,1.725,408,2.493,423,2.146,445,3.746,479,2.388,551,3.176,556,2.57,609,2.79,622,2.758,623,2.841,656,3.62,660,2.453,676,0.948,697,2.699,731,3.178,862,6.202,910,2.658,916,2.171,928,5.088,960,3.661,1516,5.817,1605,3.515,2046,3.82,2370,5.954,2401,5.088,2871,8.502,3982,4.405,4033,7.702,4053,4.239,4057,4.239,4058,4.405,6310,4.964,6311,4.964,6312,4.964,6313,7.638,6314,7.638]],["component/427",[220,0.615]],["title/428-1",[46,18.508,92,19.751]],["name/428-1",[]],["text/428-1",[]],["component/428-1",[]],["title/428-2",[894,56.325]],["name/428-2",[]],["text/428-2",[]],["component/428-2",[]],["title/428",[973,59.142]],["name/428",[385,2.02]],["text/428",[0,2.43,2,1.513,5,1.499,8,1.524,12,3.976,15,4.882,24,1.29,38,2.236,40,1.553,41,1.913,65,2.273,68,5.571,71,2.685,76,2.97,99,3.027,103,3.377,106,3.326,121,4.397,143,1.658,153,4.588,191,1.909,232,5.483,234,2.865,248,1.895,317,2.36,319,2.711,365,2.115,378,2.55,387,3.558,402,4.918,423,3.258,468,8.064,494,2.639,545,2.791,660,2.411,869,4.037,894,2.948,967,2.193,973,8.474,974,5.925,1279,4.037,1351,3.836,1404,5.265,1429,3.928,1430,4.167,1450,2.993,1490,2.55,1546,7.44,1933,3.184,2249,3.682,2872,7.306,2873,3.682,3025,4.167,3798,3.928,4008,4.548,5650,4.037,5792,3.928,6315,4.548,6316,4.548,6317,4.879,6318,4.879,6319,4.548]],["component/428",[220,0.615]],["title/429-1",[8,12.273,317,15.553,1448,37.848]],["name/429-1",[]],["text/429-1",[]],["component/429-1",[]],["title/429-2",[2,22.808,5,22.593]],["name/429-2",[]],["text/429-2",[]],["component/429-2",[]],["title/429-3",[45,22.808,77,26.457]],["name/429-3",[]],["text/429-3",[]],["component/429-3",[]],["title/429-4",[46,18.508,92,19.751]],["name/429-4",[]],["text/429-4",[]],["component/429-4",[]],["title/429",[433,53.626,1448,45.846]],["name/429",[385,2.02]],["text/429",[8,0.803,12,2.095,15,2.105,25,1.688,38,3.006,40,1.264,52,1.702,54,2.245,64,2.566,66,1.661,71,1.415,74,1.82,78,1.838,79,1.712,80,1.36,99,1.595,103,2.87,106,1.753,112,3.079,129,2.056,142,2.292,153,3.9,160,1.82,163,1.546,189,1.499,203,1.97,218,1.579,219,2.019,232,2.365,234,2.332,246,1.458,248,2.489,260,2.317,272,3.762,291,1.742,308,1.955,316,2.348,317,2.063,318,0.907,325,5.462,338,2.207,343,2.566,361,3.048,371,2.456,372,3.702,390,1.87,423,1.717,453,4.028,466,3.122,477,2.897,501,2.029,609,2.232,634,1.963,645,2.003,677,3.43,705,1.34,744,2.219,967,2.879,1047,2.812,1108,3.198,1183,2.317,1258,3.056,1446,3.122,1448,8.418,1542,2.646,1677,2.085,1874,3.056,2247,3.198,2466,3.198,2472,3.056,2680,6.662,2719,2.774,2875,3.122,2903,5.158,3008,3.702,3025,3.392,3426,6.33,3446,4.672,3738,3.702,3776,5.685,3847,3.524,3848,3.392,4077,3.524,5099,3.524,5792,3.198,6320,5.685,6321,3.972,6322,3.972,6323,6.406,6324,3.972,6325,3.972,6326,3.972,6327,3.972,6328,3.972,6329,3.972,6330,3.972,6331,3.972,6332,3.972,6333,3.972,6334,3.972,6335,3.702,6336,3.972,6337,3.972,6338,3.286]],["component/429",[220,0.615]],["title/430-1",[1084,63.523]],["name/430-1",[]],["text/430-1",[]],["component/430-1",[]],["title/430-2",[46,18.508,92,19.751]],["name/430-2",[]],["text/430-2",[]],["component/430-2",[]],["title/430-3",[894,56.325]],["name/430-3",[]],["text/430-3",[]],["component/430-3",[]],["title/430-4",[15,27.398,326,26.069,329,22.944,665,40.63]],["name/430-4",[]],["text/430-4",[]],["component/430-4",[]],["title/430",[326,37.087,433,53.626]],["name/430",[385,2.02]],["text/430",[3,2.701,8,1.816,15,5.377,16,1.741,22,1.171,24,2.375,25,1.994,26,2.366,37,2.232,38,2.169,42,1.524,46,1.181,47,2.337,65,2.186,71,1.672,80,1.606,82,1.705,96,1.889,99,3.607,103,3.276,106,2.07,107,3.688,121,5.24,143,2.485,153,4.451,162,2.647,219,2.832,225,3.652,248,2.84,249,4.87,309,3.003,317,1.873,326,6.79,328,1.526,329,5.399,347,1.448,386,1.733,392,1.646,423,2.028,433,3.422,482,2.076,537,3.003,545,2.707,699,3.032,705,3.031,894,2.834,950,3.478,972,3.541,1314,5.421,1478,4.163,1539,3.688,1933,3.061,2033,2.755,2828,3.197,2868,3.37,2874,6.452,2875,5.747,2876,6.913,2877,3.37,2878,3.688,2980,3.322,3519,3.277,4083,3.541,6319,4.373,6339,4.691,6340,4.691]],["component/430",[220,0.615]],["title/431-1",[676,17.814]],["name/431-1",[]],["text/431-1",[]],["component/431-1",[]],["title/431-2",[42,19.714,444,36.95,3108,51.839]],["name/431-2",[]],["text/431-2",[]],["component/431-2",[]],["title/431-3",[110,38.095]],["name/431-3",[]],["text/431-3",[]],["component/431-3",[]],["title/431-4",[409,47.978,465,50.099]],["name/431-4",[]],["text/431-4",[]],["component/431-4",[]],["title/431",[3108,79.619]],["name/431",[385,2.02]],["text/431",[8,1.681,10,1.961,16,2.47,22,1.661,25,1.771,26,2.101,40,2.119,42,1.353,48,3.316,49,1.388,54,2.355,58,6.178,59,2.399,62,1.326,64,1.669,66,3.477,71,2.962,77,2.991,82,1.514,92,1.788,106,1.838,110,1.702,112,1.593,128,2.829,139,1.401,142,2.381,189,1.572,196,2.208,208,2.147,219,2.098,232,2.48,248,3.23,251,2.157,283,3.563,306,3.882,342,2.718,347,1.286,351,3.557,365,1.806,385,5.705,386,2.459,389,1.569,391,2.075,392,1.461,408,2.092,409,2.718,421,5.122,444,2.536,478,3.557,480,2.414,482,1.844,568,1.947,626,1.716,638,1.656,766,2.718,835,4.713,929,2.718,1171,3.446,1213,5.48,1257,4.185,1549,6.063,1854,2.666,1855,3.401,1857,4.387,1933,4.343,2856,3.088,2868,2.992,3108,10.627,3461,8.426,4182,3.696,4741,3.038,6320,3.696,6341,6.656,6342,4.165,6343,4.165,6344,4.165,6345,4.165,6346,4.165,6347,4.165,6348,4.165]],["component/431",[220,0.615]],["title/432-1",[676,17.814]],["name/432-1",[]],["text/432-1",[]],["component/432-1",[]],["title/432-2",[50,31.013,80,20.784,2697,48.873]],["name/432-2",[]],["text/432-2",[]],["component/432-2",[]],["title/432-3",[2,22.808,5,22.593]],["name/432-3",[]],["text/432-3",[]],["component/432-3",[]],["title/432-4",[45,22.808,77,26.457]],["name/432-4",[]],["text/432-4",[]],["component/432-4",[]],["title/432-5",[46,18.508,92,19.751]],["name/432-5",[]],["text/432-5",[]],["component/432-5",[]],["title/432-6",[139,31.349]],["name/432-6",[]],["text/432-6",[]],["component/432-6",[]],["title/432",[58,44.2]],["name/432",[385,2.02]],["text/432",[5,0.886,8,0.583,10,1.358,12,2.592,16,1.07,22,2.463,24,1.299,32,1.301,38,0.856,40,2.043,42,0.937,45,1.524,46,0.726,50,1.474,54,1.631,57,3.272,58,6.889,59,6.987,63,1.368,71,1.751,79,1.244,80,2.91,92,0.775,103,2.202,106,1.273,108,1.77,110,1.179,112,3.251,128,2.728,134,1.091,135,1.414,137,2.428,139,2.158,142,3.04,160,1.322,163,1.913,169,1.24,183,1.391,201,1.577,203,1.431,206,1.718,216,1.721,219,1.549,225,1.173,228,1.073,247,3.065,274,1.393,291,1.266,308,1.42,317,0.739,343,1.864,347,0.891,364,1.363,385,3.308,386,2.371,391,1.437,392,1.724,396,1.003,497,3.31,542,2.791,545,1.068,553,2.5,556,1.494,558,1.784,568,1.349,587,3.529,623,1.651,626,0.744,638,1.147,660,1.426,702,1.515,705,1.658,739,1.83,755,2.22,898,5.72,915,2.866,939,2.464,967,1.297,1085,1.461,1213,4.995,1244,1.883,1310,3.172,1461,3.769,1514,3.273,1613,3.273,1662,3.781,1677,3.979,1683,2.689,2469,4.945,2697,5.168,2843,4.188,2991,4.61,4409,2.464,4741,3.584,5978,4.58,6315,2.689,6349,2.885,6350,2.885,6351,2.885,6352,2.885,6353,2.885,6354,2.885,6355,2.885]],["component/432",[220,0.615]],["title/433-1",[1084,63.523]],["name/433-1",[]],["text/433-1",[]],["component/433-1",[]],["title/433-2",[1195,48.981,1334,32.349]],["name/433-2",[]],["text/433-2",[]],["component/433-2",[]],["title/433-3",[59,42.342,1507,36.628]],["name/433-3",[]],["text/433-3",[]],["component/433-3",[]],["title/433-4",[59,22.946,131,12.459,139,13.399,219,12.56,4460,35.36,5792,32.082]],["name/433-4",[]],["text/433-4",[]],["component/433-4",[]],["title/433-5",[38,11.819,58,18.891,83,22.663,131,12.459,171,19.239,219,12.56]],["name/433-5",[]],["text/433-5",[]],["component/433-5",[]],["title/433-6",[131,14.07,139,15.131,436,24.864,1213,29.662,5671,37.23]],["name/433-6",[]],["text/433-6",[]],["component/433-6",[]],["title/433-7",[38,13.347,131,14.07,139,15.131,300,22.794,2036,36.231]],["name/433-7",[]],["text/433-7",[]],["component/433-7",[]],["title/433-8",[38,21.809,124,37.244]],["name/433-8",[]],["text/433-8",[]],["component/433-8",[]],["title/433-9",[84,23.603,131,16.161,1213,34.068,1425,34.811]],["name/433-9",[]],["text/433-9",[]],["component/433-9",[]],["title/433-10",[171,35.503,214,43.18]],["name/433-10",[]],["text/433-10",[]],["component/433-10",[]],["title/433",[38,18.004,58,28.778,110,24.803]],["name/433",[38,0.488,58,0.779,110,0.672]],["text/433",[0,1.469,2,1.362,3,0.772,4,0.841,6,1.087,8,0.422,10,0.984,14,0.722,21,0.553,22,2,24,1.161,25,0.474,27,0.477,32,0.503,34,0.401,35,0.495,37,0.531,38,3.014,40,1.593,41,0.819,45,0.914,46,0.934,49,0.372,54,1.181,58,5.478,59,6.302,60,0.52,61,1.309,63,1.759,66,1.233,70,0.72,71,0.397,73,0.728,77,0.401,79,1.271,80,0.382,82,0.759,83,2.11,84,1.694,91,0.542,92,2.451,96,0.449,99,0.448,102,0.714,103,0.5,108,0.684,110,1.205,111,1.196,112,1.68,115,0.854,117,1.181,124,1.058,129,0.577,131,2.775,133,0.529,134,1.115,139,2.584,142,0.399,143,0.71,156,1.355,159,1.041,160,0.511,162,0.404,163,0.434,165,0.603,167,0.769,169,0.479,171,4.285,180,0.529,183,1.846,189,1.4,194,0.65,196,0.591,197,0.735,198,2.242,199,0.914,203,0.553,206,1.244,211,0.769,214,1.227,216,1.032,218,0.831,219,2.527,220,0.233,227,0.627,228,0.777,233,1.812,238,0.728,239,1.826,241,0.987,246,0.767,247,2.097,250,1.272,251,0.577,259,0.827,260,1.219,272,0.655,274,1.423,285,0.585,296,0.779,300,2.225,301,0.922,304,0.801,314,0.76,319,0.62,347,1.356,348,1.203,350,1.549,361,0.994,362,1.244,365,1.278,369,0.957,375,0.603,385,1.52,386,1.089,389,1.397,392,0.391,393,0.65,396,1.024,398,1.11,414,1.181,416,1.087,417,0.837,418,0.789,436,2.05,437,1.781,515,0.508,525,0.555,527,0.498,542,0.485,545,0.413,551,1.498,555,0.908,556,1.082,568,1.735,581,0.638,622,2.062,623,0.638,633,1.677,638,1.476,639,0.377,651,0.676,660,1.833,685,0.743,689,0.493,690,0.743,705,0.995,710,0.769,721,0.429,730,1.286,731,0.714,736,0.594,739,0.707,744,1.167,761,0.72,780,0.69,812,0.862,832,0.642,837,1.119,849,0.707,898,5.488,915,1.219,916,0.488,919,0.735,920,2.317,931,0.609,952,0.952,982,1.188,1000,0.63,1001,0.613,1051,1.227,1071,0.933,1073,1.167,1084,0.76,1085,3.712,1098,2.559,1099,0.877,1115,0.813,1152,0.801,1168,0.735,1169,1.039,1187,0.928,1195,0.743,1213,4.831,1231,0.588,1260,0.898,1283,1.441,1313,0.769,1334,1.297,1425,1.986,1436,0.877,1444,0.789,1453,2.616,1461,2.579,1500,0.707,1507,1.848,1514,3.334,1642,0.952,1649,0.842,1662,0.858,1663,1.854,1675,0.701,1676,0.813,1681,0.655,1702,0.743,1718,0.646,1898,0.858,2036,0.898,2265,0.751,2291,1.784,2330,1.292,2351,0.952,2366,0.76,2380,0.877,2397,2.194,2460,0.989,2469,5.015,2651,0.707,2856,0.827,2872,1.363,2942,1.479,3113,0.989,3165,1.784,3177,1.039,3354,0.952,3437,1.039,3575,0.922,3763,1.608,3953,0.898,3982,0.989,4221,0.989,4288,0.877,4425,1.039,4460,3.897,4628,0.813,4741,2.15,5671,3.07,5708,0.989,5792,2.373,6356,1.115,6357,1.115,6358,1.115,6359,1.115,6360,1.115,6361,1.115,6362,1.115,6363,1.115,6364,1.784,6365,1.039,6366,3.71,6367,2.089,6368,2.948,6369,1.115,6370,1.115,6371,1.115,6372,1.115,6373,1.115,6374,1.115,6375,1.115,6376,1.115,6377,1.115,6378,1.115,6379,1.115,6380,1.115,6381,1.115,6382,1.115,6383,1.115,6384,1.039,6385,1.115,6386,1.115,6387,1.115,6388,1.115]],["component/433",[220,0.615]],["title/434-1",[676,17.814]],["name/434-1",[]],["text/434-1",[]],["component/434-1",[]],["title/434-2",[60,16.431]],["name/434-2",[]],["text/434-2",[]],["component/434-2",[]],["title/434",[2866,63.523]],["name/434",[2866,2.671]],["text/434",[42,2.8,45,4.337,57,3.319,60,1.52,77,5.031,228,3.206,246,3.166,310,3.109,417,3.454,518,4.904,555,3.749,626,3.267,676,1.647,702,4.527,909,4.965,1270,4.874,1490,5.926,1877,6.634,2866,8.633]],["component/434",[220,0.615]],["title/435-1",[676,17.814]],["name/435-1",[]],["text/435-1",[]],["component/435-1",[]],["title/435-2",[60,16.431]],["name/435-2",[]],["text/435-2",[]],["component/435-2",[]],["title/435",[262,21.627,310,21.885,1103,26.093]],["name/435",[6389,3.92]],["text/435",[6,2.922,11,2.435,22,1.401,24,2.654,27,2.401,33,3.087,40,1.788,45,4.13,60,1.478,61,4.204,62,1.788,77,4.986,95,4.484,96,2.261,162,3.634,228,2.088,246,2.062,262,4.453,310,3.619,347,1.734,365,2.435,398,2.115,417,2.25,440,3.702,518,3.195,545,3.106,555,2.442,626,2.589,642,3.563,655,3.474,676,1.073,689,2.486,702,2.949,708,2.381,721,2.162,826,5.473,965,2.471,1103,4.315,1138,2.882,1270,3.176,1456,4.164,1595,3.321,2666,5.42,6390,4.797]],["component/435",[220,0.615]],["title/436-1",[676,17.814]],["name/436-1",[]],["text/436-1",[]],["component/436-1",[]],["title/436-2",[60,16.431]],["name/436-2",[]],["text/436-2",[]],["component/436-2",[]],["title/436",[10,34.614,6391,68.537]],["name/436",[6392,3.92]],["text/436",[10,6.138,21,4.541,22,1.578,42,2.054,45,1.962,60,1.115,61,2.231,66,5.232,74,4.193,77,3.87,80,2.165,112,2.418,143,2.15,150,6.045,171,3.053,225,3.721,353,7.244,391,3.15,626,3.363,660,3.125,676,1.208,1001,5.029,1012,7.853,1059,3.85,1406,5.085,1643,5.571,1909,5.66,2302,6.033,3181,8.122,4014,5.895,6391,11.659,6393,6.324]],["component/436",[220,0.615]],["title/437-1",[60,16.431]],["name/437-1",[]],["text/437-1",[]],["component/437-1",[]],["title/437-2",[139,31.349]],["name/437-2",[]],["text/437-2",[]],["component/437-2",[]],["title/437-3",[262,26.197,639,24.858]],["name/437-3",[]],["text/437-3",[]],["component/437-3",[]],["title/437",[1448,37.848,3426,47.718,6338,50.22]],["name/437",[1448,1.025,3426,1.292,6338,1.36]],["text/437",[5,1.59,8,1.046,11,2.243,12,2.73,16,3.544,22,1.967,34,3.437,40,2.51,62,1.647,77,3.844,79,2.231,80,2.7,85,2.537,92,1.39,131,2.987,134,1.957,139,1.74,142,2.82,180,2.453,183,1.465,208,2.667,213,2.859,218,3.136,219,1.631,225,2.104,262,3.806,287,3.254,299,2.48,325,3.06,376,3.982,379,2.462,385,2.667,386,1.912,398,1.949,408,2.599,416,2.692,435,3.376,519,2.61,527,2.311,540,2.182,551,1.765,553,2.632,622,2.875,626,1.334,639,3.229,645,2.61,703,2.578,705,1.746,708,2.194,716,3.126,775,3.376,838,3.283,1138,2.655,1187,2.297,1427,3.411,1448,5.956,1541,2.77,1613,3.447,1677,5.015,2397,5.648,2680,4.281,3425,4.592,3426,7.509,3427,4.823,3428,4.823,4197,4.592,6338,4.281,6394,5.175,6395,4.592,6396,4.592,6397,5.175]],["component/437",[220,0.615]],["title/438-1",[676,17.814]],["name/438-1",[]],["text/438-1",[]],["component/438-1",[]],["title/438-2",[60,16.431]],["name/438-2",[]],["text/438-2",[]],["component/438-2",[]],["title/438",[142,21.712,392,21.295,2271,40.884]],["name/438",[6398,3.92]],["text/438",[34,2.518,45,4.183,60,1.233,61,2.469,62,2.227,64,2.803,77,4.679,109,5.117,112,2.676,142,5.058,228,2.602,246,2.569,308,3.444,352,4.768,392,2.455,417,4.557,518,5.595,555,3.043,626,2.934,676,1.337,702,3.674,708,2.966,764,5.103,784,5.188,908,5.943,1051,4.109,1121,3.98,1270,3.956,2271,4.713,2641,3.785,2841,6.522,6399,6.997]],["component/438",[220,0.615]],["title/439-1",[676,17.814]],["name/439-1",[]],["text/439-1",[]],["component/439-1",[]],["title/439-2",[60,16.431]],["name/439-2",[]],["text/439-2",[]],["component/439-2",[]],["title/439",[24,16.047,392,21.295,2357,45.812]],["name/439",[4206,3.654]],["text/439",[22,1.84,24,3.428,27,2.028,33,2.607,45,3.629,60,1.3,61,3.9,62,1.51,77,4.666,78,3.412,80,1.624,95,3.294,96,1.909,115,1.938,148,2.715,162,2.669,172,1.909,202,2.393,228,1.764,246,1.742,251,2.456,262,2.627,267,2.527,274,2.29,310,1.71,312,2.621,347,2.277,392,3.58,398,1.786,408,2.383,417,1.9,423,3.188,424,2.344,518,2.698,522,2.479,527,2.119,545,1.756,555,3.206,562,2.866,612,2.732,626,2.631,633,2.698,639,1.604,645,2.393,676,0.906,689,2.099,702,2.491,708,3.126,722,2.139,796,2.749,925,2.607,1087,2.888,1098,3.271,1121,2.698,1138,2.434,1270,2.682,1456,3.517,1466,5.024,1595,5.349,1855,2.424,2357,6.828,2666,4.765,2734,3.46,3700,3.313,5370,3.58,6400,4.743]],["component/439",[220,0.615]],["title/440-1",[676,17.814]],["name/440-1",[]],["text/440-1",[]],["component/440-1",[]],["title/440-2",[60,16.431]],["name/440-2",[]],["text/440-2",[]],["component/440-2",[]],["title/440",[218,24.14,540,25.594,634,29.996]],["name/440",[6401,3.92]],["text/440",[16,3.671,22,2.851,34,3.56,45,4.046,60,1.243,61,2.489,77,4.693,112,3.784,142,3.539,218,5.187,228,2.623,246,2.591,417,2.826,518,4.013,540,4.172,555,3.068,626,3.581,634,6.121,676,1.348,702,3.704,708,2.991,1121,5.627,1270,3.989,1516,5.1]],["component/440",[220,0.615]],["title/441-1",[676,17.814]],["name/441-1",[]],["text/441-1",[]],["component/441-1",[]],["title/441-2",[60,16.431]],["name/441-2",[]],["text/441-2",[]],["component/441-2",[]],["title/441-3",[347,28.782]],["name/441-3",[]],["text/441-3",[]],["component/441-3",[]],["title/441-4",[24,19.438,308,36.191]],["name/441-4",[]],["text/441-4",[]],["component/441-4",[]],["title/441",[24,19.438,27,31.431]],["name/441",[6402,3.92]],["text/441",[1,4.411,4,3.003,8,0.827,16,0.866,22,1.637,24,3.546,27,4.93,29,3.763,33,1.282,34,1.965,40,2.088,45,0.724,60,1.74,61,1.443,62,3.142,65,1.906,77,2.685,95,1.827,110,0.953,116,1.289,131,2.333,137,1.153,138,0.946,148,1.335,162,3.573,183,3.108,196,1.237,198,1.045,217,1.335,254,1.219,262,2.658,267,3.495,285,1.225,291,3.273,300,2.072,308,3.672,310,0.841,311,2.312,312,1.289,313,1.319,320,3.813,325,2.418,338,2.273,341,1.249,344,1.122,356,2.821,396,2.593,398,0.879,399,1.203,423,2.836,479,1.122,481,1.282,501,6.015,515,1.062,521,1.838,527,1.827,532,5.121,540,1.725,542,3.244,545,1.514,560,1.197,571,1.282,623,2.341,626,2.546,655,2.529,663,1.508,676,1.043,681,1.93,702,1.225,705,0.787,721,3.162,753,1.219,786,1.939,925,1.282,1071,1.827,1138,1.197,1231,1.231,1293,3.034,1296,1.795,1305,2.509,1456,5.532,1466,2.787,1519,3.215,1595,2.418,1645,1.467,1659,2.286,1674,1.676,1681,2.402,2286,2.175,2356,1.63,2651,1.48,2666,2.643,3298,1.508,3986,6.441,4564,2.071]],["component/441",[220,0.615]],["title/442-1",[676,17.814]],["name/442-1",[]],["text/442-1",[]],["component/442-1",[]],["title/442-2",[60,16.431]],["name/442-2",[]],["text/442-2",[]],["component/442-2",[]],["title/442",[24,13.663,27,22.093,116,28.558,262,18.414]],["name/442",[6403,3.92]],["text/442",[22,2.28,24,2.99,27,3.399,34,1.403,40,2.009,45,1.958,60,1.993,61,2.227,62,2.909,71,2.249,77,3.612,108,2.392,110,1.593,115,2.579,116,5.05,128,2.683,131,1.219,138,2.56,143,2.703,162,3.634,168,1.686,183,1.787,262,3.577,291,1.71,300,3.197,310,4.078,312,3.487,392,1.368,417,3.661,420,4.317,423,1.686,447,3.797,482,2.794,540,3.353,545,1.444,549,3.655,560,2.001,626,1.628,676,0.745,689,1.726,701,2.57,721,1.501,730,2.752,798,4.661,815,2.544,876,2.689,941,2.761,1051,3.707,1071,2.819,1103,5.373,1533,2.305,1541,5.374,1595,2.305,1659,2.179,2870,2.373,3213,2.724,3986,5.963,4304,3.226,4384,3,5772,2.943,6404,3.899,6405,3.226]],["component/442",[220,0.615]],["title/443-1",[676,17.814]],["name/443-1",[]],["text/443-1",[]],["component/443-1",[]],["title/443-2",[60,16.431]],["name/443-2",[]],["text/443-2",[]],["component/443-2",[]],["title/443",[24,19.438,40,23.406]],["name/443",[6406,3.92]],["text/443",[8,1.541,22,1.902,24,3.817,40,4.269,45,3.972,60,1.84,77,4.607,82,2.77,163,2.968,311,4.309,512,4.507,540,4.401,542,3.314,626,3.302,676,1.456,753,3.983,786,5.644,1542,5.077,1700,5.752,1855,3.894,1992,5.324]],["component/443",[220,0.615]],["title/444-1",[676,17.814]],["name/444-1",[]],["text/444-1",[]],["component/444-1",[]],["title/444-2",[60,16.431]],["name/444-2",[]],["text/444-2",[]],["component/444-2",[]],["title/444",[40,23.406,162,26.617]],["name/444",[6407,3.92]],["text/444",[40,3.994,45,3.892,60,1.972,62,3.562,77,4.805,162,5.167,168,3.654,172,3.402,264,4.836,311,4.778,540,4.718,542,3.675,626,3.444,676,1.615,1855,5.717]],["component/444",[220,0.615]],["title/445-1",[676,17.814]],["name/445-1",[]],["text/445-1",[]],["component/445-1",[]],["title/445-2",[60,16.431]],["name/445-2",[]],["text/445-2",[]],["component/445-2",[]],["title/445",[855,48.467,908,44.422]],["name/445",[855,2.584]],["text/445",[32,4.138,40,2.921,45,4.05,60,1.617,62,2.921,77,4.698,109,6.143,417,4.731,626,3.045,676,1.754,855,8.607,868,6.114,908,7.888,1285,4.649,3460,7.062]],["component/445",[220,0.615]],["title/446-1",[676,17.814]],["name/446-1",[]],["text/446-1",[]],["component/446-1",[]],["title/446-2",[60,16.431]],["name/446-2",[]],["text/446-2",[]],["component/446-2",[]],["title/446",[24,19.438,1071,32.842]],["name/446",[6408,3.654]],["text/446",[8,1.659,24,3.742,45,3.835,60,1.934,77,4.75,82,2.983,163,3.196,206,4.887,512,4.853,540,4.627,542,3.569,626,3.404,676,1.568,786,3.891,1071,5.896,1542,5.468,1700,6.194,1855,4.193,3859,7.65]],["component/446",[220,0.615]],["title/447-1",[676,17.814]],["name/447-1",[]],["text/447-1",[]],["component/447-1",[]],["title/447-2",[60,16.431]],["name/447-2",[]],["text/447-2",[]],["component/447-2",[]],["title/447",[24,19.438,1071,32.842]],["name/447",[6408,3.654]],["text/447",[24,3.62,27,2.873,33,5.254,45,3.452,60,1.685,61,2.372,77,4.362,95,4.971,139,2.26,162,4.029,172,2.706,262,3.407,347,2.952,367,3.617,379,3.198,401,3.465,545,2.489,597,3.636,626,2.466,676,1.284,721,2.588,1071,6.117,1138,4.907,1391,3.714,1456,4.984,1595,3.975,2666,6.179,3700,4.696,5368,8.913,5370,7.216]],["component/447",[220,0.615]],["title/448-1",[676,17.814]],["name/448-1",[]],["text/448-1",[]],["component/448-1",[]],["title/448-2",[60,16.431]],["name/448-2",[]],["text/448-2",[]],["component/448-2",[]],["title/448",[162,26.617,1071,32.842]],["name/448",[6409,3.92]],["text/448",[22,1.253,24,1.328,27,2.147,34,1.807,45,2.909,60,1.358,61,3.711,62,2.453,77,3.785,95,3.442,115,2.052,116,2.775,128,3.986,131,4.4,143,1.707,162,5.149,172,2.022,183,3.212,250,3.057,262,2.746,282,3.865,300,2.544,310,2.779,347,2.379,396,1.745,447,3.68,459,3.724,482,3.411,515,2.286,522,4.028,527,2.243,597,2.716,626,1.987,676,0.96,721,4.049,815,3.277,941,3.556,1051,4.526,1071,5.348,1533,2.97,1541,4.126,1878,3.311,2848,3.383,3700,3.508]],["component/448",[220,0.615]],["title/449-1",[676,17.814]],["name/449-1",[]],["text/449-1",[]],["component/449-1",[]],["title/449-2",[60,16.431]],["name/449-2",[]],["text/449-2",[]],["component/449-2",[]],["title/449",[262,21.627,1071,27.113,1103,26.093]],["name/449",[6410,3.92]],["text/449",[24,3.193,33,5.225,45,4.118,60,1.175,61,3.355,77,4.916,172,2.685,177,3.536,228,2.48,246,2.449,262,3.948,396,2.318,404,4.231,417,2.672,447,5.291,513,3.485,518,3.793,555,2.9,612,5.476,626,2.858,676,1.274,702,3.502,708,2.827,1071,5.704,1103,4.763,1138,4.88,1270,3.771,1595,5.622,3213,6.642]],["component/449",[220,0.615]],["title/450-1",[676,17.814]],["name/450-1",[]],["text/450-1",[]],["component/450-1",[]],["title/450-2",[60,16.431]],["name/450-2",[]],["text/450-2",[]],["component/450-2",[]],["title/450-3",[216,32.645]],["name/450-3",[]],["text/450-3",[]],["component/450-3",[]],["title/450-4",[438,55.912]],["name/450-4",[]],["text/450-4",[]],["component/450-4",[]],["title/450",[761,47.513,5392,57.803]],["name/450",[6411,3.92]],["text/450",[11,4.813,22,0.93,24,3.402,27,1.594,45,2.761,48,1.858,60,1.359,61,2.721,62,1.938,77,3.994,85,1.828,95,2.719,115,3.637,128,2.588,131,1.903,143,2.069,162,2.792,163,1.452,173,2.288,191,1.459,219,1.175,262,2.169,267,5.225,310,4.002,347,1.151,365,1.617,379,5.007,479,1.794,482,1.65,542,1.621,545,1.381,626,1.57,633,2.121,642,2.365,676,1.163,721,2.969,730,5.372,761,5.752,837,5.251,965,1.641,1051,2.19,1103,4.524,1118,2.22,1530,3.476,1531,3.476,1533,5.799,1541,5.251,1595,2.205,1845,6.21,2651,2.365,2666,2.41,2848,2.512,2946,4.901,3700,2.605,4203,4.785,4328,5.198,4413,7.189,5392,6.063,6390,3.184,6405,3.085,6412,7.189,6413,3.729]],["component/450",[220,0.615]],["title/451-1",[676,17.814]],["name/451-1",[]],["text/451-1",[]],["component/451-1",[]],["title/451-2",[60,16.431]],["name/451-2",[]],["text/451-2",[]],["component/451-2",[]],["title/451",[344,35.37,4644,62.794]],["name/451",[6414,3.92]],["text/451",[2,2.085,23,6.395,24,3.519,45,3.973,49,2.24,60,1.185,62,2.14,77,4.609,169,2.89,228,2.499,246,2.468,344,5.354,392,2.358,417,2.693,518,3.823,523,4.264,555,2.923,612,3.871,626,3.433,676,1.284,678,3.636,702,3.529,708,2.85,730,2.931,864,5.615,1121,3.823,1270,3.8,1295,4.696,1486,3.714,4644,11.695]],["component/451",[220,0.615]],["title/452-1",[676,17.814]],["name/452-1",[]],["text/452-1",[]],["component/452-1",[]],["title/452",[1049,61.453]],["name/452",[1049,2.584]],["text/452",[22,2.765,45,3.438,48,5.521,77,4.778,289,6.747,310,3.996,719,8.713,1049,7.305,2297,8.713]],["component/452",[220,0.615]],["title/453-1",[676,17.814]],["name/453-1",[]],["text/453-1",[]],["component/453-1",[]],["title/453-2",[60,16.431]],["name/453-2",[]],["text/453-2",[]],["component/453-2",[]],["title/453-3",[2850,59.142]],["name/453-3",[]],["text/453-3",[]],["component/453-3",[]],["title/453-4",[134,35.263]],["name/453-4",[]],["text/453-4",[]],["component/453-4",[]],["title/453-5",[95,32.842,262,26.197]],["name/453-5",[]],["text/453-5",[]],["component/453-5",[]],["title/453-6",[639,31.518]],["name/453-6",[]],["text/453-6",[]],["component/453-6",[]],["title/453",[775,60.834]],["name/453",[6415,3.92]],["text/453",[2,0.527,8,0.623,20,0.788,22,1.836,24,2.09,27,0.726,37,0.808,38,0.504,42,1,45,3.804,46,0.775,48,0.846,49,0.566,57,2,60,0.299,61,1.491,64,1.234,66,0.71,77,4.499,80,2.306,84,1.407,85,3.302,86,2.199,87,1.889,88,0.797,92,1.809,94,1.721,95,4.119,96,1.24,99,2.086,112,2.575,124,1.56,128,3.128,129,0.879,130,1.61,131,2.761,134,2.783,135,1.51,137,1.522,139,1.036,143,3.787,163,1.646,179,6.419,180,0.805,183,0.872,189,0.641,198,0.761,200,1.42,201,2.839,202,0.856,218,1.225,228,0.631,236,3.011,241,0.802,246,0.623,262,2.622,264,0.972,267,0.904,274,0.82,318,0.388,347,0.524,379,1.465,386,0.627,398,1.16,414,0.96,417,1.234,421,1.307,479,1.482,482,0.751,515,0.773,518,0.966,519,0.856,553,3.062,555,0.738,557,0.923,571,0.933,626,1.339,638,0.675,639,3.618,660,0.839,676,0.588,701,1.119,702,0.891,708,0.72,722,1.906,731,1.087,734,0.832,749,0.943,753,0.887,775,5.159,798,0.788,800,0.96,812,2.144,832,0.978,838,1.077,849,1.077,909,0.978,911,1.22,998,2.151,1017,1.259,1064,1.307,1071,0.758,1073,0.949,1097,1.238,1106,1.22,1138,3.089,1155,1.202,1270,0.96,1289,1.22,1363,0.99,1507,1.534,1635,1.131,1694,1.186,1901,2.246,2185,2.63,2270,1.119,2356,1.186,2385,3.403,2462,1.202,2697,1.367,2778,2.212,2848,2.074,2850,3.819,4094,3.19,4095,1.144,4409,1.45,4719,1.367,6212,1.507,6416,1.698,6417,1.698,6418,1.698,6419,4.227,6420,1.698,6421,3.08,6422,3.08,6423,3.08,6424,3.08,6425,3.08,6426,3.08,6427,1.698,6428,3.08,6429,1.698,6430,3.08,6431,1.698,6432,3.08,6433,1.698,6434,1.698,6435,1.698,6436,1.698,6437,3.08,6438,1.698,6439,1.698,6440,1.698,6441,1.698,6442,1.698,6443,1.698,6444,1.698,6445,1.698,6446,1.698,6447,1.698,6448,1.698,6449,1.698,6450,1.698,6451,1.698,6452,1.698,6453,1.698,6454,1.698,6455,1.698,6456,1.405,6457,1.698,6458,1.698,6459,1.583,6460,1.698,6461,1.698,6462,1.698,6463,1.698,6464,1.698,6465,1.698]],["component/453",[220,0.615]],["title/454-1",[676,17.814]],["name/454-1",[]],["text/454-1",[]],["component/454-1",[]],["title/454-2",[60,16.431]],["name/454-2",[]],["text/454-2",[]],["component/454-2",[]],["title/454-3",[216,32.645]],["name/454-3",[]],["text/454-3",[]],["component/454-3",[]],["title/454-4",[438,55.912]],["name/454-4",[]],["text/454-4",[]],["component/454-4",[]],["title/454",[24,16.047,1294,41.359,2850,38.506]],["name/454",[6466,3.92]],["text/454",[2,2.157,22,1.098,24,3.43,32,1.984,45,3.308,60,1.226,61,3.763,77,3.838,95,1.966,108,2.7,162,3.545,183,2.44,228,1.636,246,1.616,262,3.8,263,3.322,291,4.973,310,2.507,417,1.763,518,2.503,522,3.634,542,1.914,545,1.63,547,3.155,551,4.515,555,1.914,626,2.223,639,1.488,676,1.329,702,2.311,708,1.866,728,3.074,925,3.821,1047,4.924,1056,4.494,1071,3.106,1103,1.892,1270,2.488,1294,2.999,1427,2.901,1456,3.263,1541,2.356,1595,6.306,2256,3.387,2341,2.64,2657,4.411,2666,2.844,2850,6.213,2897,4.684,4095,6.597,4773,5.351,5370,6.506,6467,4.401,6468,4.401,6469,4.401]],["component/454",[220,0.615]],["title/455-1",[676,17.814]],["name/455-1",[]],["text/455-1",[]],["component/455-1",[]],["title/455-2",[60,16.431]],["name/455-2",[]],["text/455-2",[]],["component/455-2",[]],["title/455",[143,17.568,218,20.554,639,17.473,2850,32.786]],["name/455",[6470,3.92]],["text/455",[22,2.004,41,2.079,45,2.492,46,1.335,60,0.935,61,3.817,62,1.688,63,2.514,77,2.89,80,1.816,84,2.422,92,1.424,103,2.376,115,2.167,118,3.613,134,3.038,138,2.151,141,5.044,143,3.296,183,1.501,218,3.195,251,2.746,262,4.527,263,6.063,310,2.896,365,2.299,392,2.818,396,1.843,420,2.505,482,2.347,549,2.438,639,4.617,676,1.013,689,2.347,753,4.198,826,5.242,864,4.717,1087,3.228,1501,4.169,1533,4.75,1541,4.301,2350,6.286,2397,6.396,2850,5.096,4095,6.531,4161,5.77,4773,6.181]],["component/455",[220,0.615]],["title/456-1",[676,17.814]],["name/456-1",[]],["text/456-1",[]],["component/456-1",[]],["title/456-2",[60,16.431]],["name/456-2",[]],["text/456-2",[]],["component/456-2",[]],["title/456",[24,19.438,2341,44.096]],["name/456",[6471,3.92]],["text/456",[8,2,24,3.857,45,3.842,60,1.243,77,4.112,84,3.222,85,3.459,86,3.67,163,3.853,200,3.254,204,4.889,228,2.623,246,2.591,365,3.059,515,4.504,542,4.302,555,3.068,626,3.581,676,1.348,916,3.086,1285,3.574,1541,3.777,1542,4.7,1700,5.325,2341,7.428,4095,4.752]],["component/456",[220,0.615]],["title/457-1",[676,17.814]],["name/457-1",[]],["text/457-1",[]],["component/457-1",[]],["title/457-2",[60,16.431]],["name/457-2",[]],["text/457-2",[]],["component/457-2",[]],["title/457",[24,19.438,540,31.002]],["name/457",[4602,3.654]],["text/457",[2,2.995,8,1.378,24,3.588,38,2.515,42,2.213,45,3.646,49,2.271,60,0.756,62,2.699,66,1.795,77,3.474,79,1.85,84,1.959,85,2.104,86,2.232,105,2.309,106,1.893,115,3.464,117,2.426,122,2.722,139,1.443,162,1.553,168,2.946,171,2.072,183,2.733,219,1.353,227,2.412,228,1.595,246,1.576,254,2.242,262,3.44,271,2.773,281,2.653,285,2.253,291,1.882,310,3.057,321,2.286,341,2.297,367,2.309,389,1.616,390,2.02,396,1.491,401,3.513,423,1.855,432,1.959,465,2.924,501,2.192,519,2.164,521,1.928,540,4.441,542,1.866,545,1.589,551,1.464,553,2.183,626,2.49,639,1.451,676,0.82,702,2.253,887,2.398,894,2.592,916,2.981,925,2.358,967,1.928,1103,4.151,1121,3.876,1218,3.302,1278,3.181,1288,2.698,1306,2.997,1438,2.997,1458,3.038,2265,2.89,2442,2.253,2461,2.747,3975,3.181,6456,3.55,6472,4.291]],["component/457",[220,0.615]],["title/458-1",[676,17.814]],["name/458-1",[]],["text/458-1",[]],["component/458-1",[]],["title/458-2",[60,16.431]],["name/458-2",[]],["text/458-2",[]],["component/458-2",[]],["title/458",[24,16.047,392,21.295,540,25.594]],["name/458",[6473,3.92]],["text/458",[24,3.774,45,3.35,49,2.123,60,1.123,62,2.028,77,4.256,84,2.909,85,3.124,86,3.314,116,3.52,162,4.879,183,1.804,218,4.704,228,2.369,246,2.339,310,3.317,392,3.228,522,4.808,540,4.554,620,3.464,626,3.235,676,1.217,721,2.453,925,5.056,1047,6.515,1071,4.11,1121,3.624,1456,8.008,5370,6.944]],["component/458",[220,0.615]],["title/459-1",[676,17.814]],["name/459-1",[]],["text/459-1",[]],["component/459-1",[]],["title/459-2",[60,16.431]],["name/459-2",[]],["text/459-2",[]],["component/459-2",[]],["title/459",[162,26.617,786,34.859]],["name/459",[6474,3.92]],["text/459",[24,3.104,33,6.452,45,3.642,51,5.382,60,1.308,77,4.225,139,2.496,162,4.973,228,2.76,241,3.507,246,2.726,362,4.42,447,5.607,612,4.275,626,3.426,676,1.418,786,5.566,1118,4.42,1121,5.83,1138,5.26,1466,5.058,1595,6.942]],["component/459",[220,0.615]],["title/460-1",[676,17.814]],["name/460-1",[]],["text/460-1",[]],["component/460-1",[]],["title/460-2",[60,16.431]],["name/460-2",[]],["text/460-2",[]],["component/460-2",[]],["title/460",[162,26.617,2341,44.096]],["name/460",[6475,3.92]],["text/460",[24,3.534,33,3.128,45,3.139,60,1.493,62,3.568,77,3.641,85,2.791,86,2.961,95,2.542,115,2.326,162,4.709,197,3.752,200,2.625,204,2.813,228,2.116,246,2.09,262,2.028,392,2.972,515,5.102,545,2.107,547,3.844,555,2.475,571,3.128,626,3.239,676,1.088,708,2.413,736,3.032,916,2.489,1118,3.389,1138,2.921,1285,2.883,1301,3.678,1456,6.281,1595,3.365,1854,3.644,2341,8.566,2666,3.678,4317,4.709,5966,4.861,5981,4.709]],["component/460",[220,0.615]],["title/461-1",[676,17.814]],["name/461-1",[]],["text/461-1",[]],["component/461-1",[]],["title/461-2",[60,16.431]],["name/461-2",[]],["text/461-2",[]],["component/461-2",[]],["title/461-3",[216,32.645]],["name/461-3",[]],["text/461-3",[]],["component/461-3",[]],["title/461-4",[24,24.646]],["name/461-4",[]],["text/461-4",[]],["component/461-4",[]],["title/461-5",[438,55.912]],["name/461-5",[]],["text/461-5",[]],["component/461-5",[]],["title/461-6",[1012,48.981,6476,59.201]],["name/461-6",[]],["text/461-6",[]],["component/461-6",[]],["title/461",[24,19.438,998,51.361]],["name/461",[998,2.738]],["text/461",[16,0.782,20,0.979,21,3.835,22,0.933,24,3.405,33,2.056,34,1.346,40,1.191,45,2.766,49,1.247,53,1.247,60,1.076,62,1.191,66,4.849,74,2.31,77,3.011,82,1.36,99,0.847,116,2.067,120,1.304,124,3.538,131,1.17,139,1.258,142,1.803,143,2.374,150,3.43,162,2.209,172,2.812,174,1.112,182,2.295,200,0.973,212,2.673,228,0.784,239,1.038,246,0.774,253,1.363,262,1.333,300,1.895,308,1.038,310,2.787,311,2.115,312,2.067,321,2.686,344,1.014,347,1.556,361,1.003,379,1.003,389,0.794,391,1.05,396,1.3,417,3.096,420,2.382,423,2.18,447,1.007,491,3.687,501,4.803,518,1.199,519,1.064,532,2.332,539,1.473,540,2.126,545,1.385,555,0.917,562,1.274,620,1.146,626,2.796,676,1.166,689,1.656,702,1.964,708,0.894,721,2.35,729,1.294,730,2.661,749,1.172,752,1.185,798,3.885,838,1.338,876,1.454,883,2.227,967,0.948,998,7.362,1000,2.85,1001,4.598,1012,7.021,1103,3.003,1138,1.92,1183,1.23,1270,1.192,1285,1.068,1301,2.417,1391,1.165,1406,2.079,1466,2.549,1533,2.212,1541,2.699,1595,2.212,1643,4.705,1855,1.077,1909,1.304,1932,2.649,2202,1.454,2302,4.604,2730,1.801,3424,1.698,3458,1.801,3491,1.801,4304,1.745,4340,1.698,6132,1.745,6476,4.914,6477,2.109,6478,1.698,6479,1.801,6480,1.966,6481,1.966,6482,1.966,6483,1.966,6484,2.109,6485,2.109,6486,2.109,6487,1.871]],["component/461",[220,0.615]],["title/462-1",[676,17.814]],["name/462-1",[]],["text/462-1",[]],["component/462-1",[]],["title/462-2",[60,16.431]],["name/462-2",[]],["text/462-2",[]],["component/462-2",[]],["title/462-3",[216,32.645]],["name/462-3",[]],["text/462-3",[]],["component/462-3",[]],["title/462-4",[24,24.646]],["name/462-4",[]],["text/462-4",[]],["component/462-4",[]],["title/462-5",[1012,48.981,6476,59.201]],["name/462-5",[]],["text/462-5",[]],["component/462-5",[]],["title/462",[998,51.361,1071,32.842]],["name/462",[6488,3.92]],["text/462",[2,1.498,14,0.977,21,4.54,22,2.283,24,2.584,27,1.209,33,1.554,41,1.894,45,2.606,60,1.114,66,5.042,74,2.897,77,3.022,82,1.756,95,1.263,110,1.155,128,1.202,142,3.987,143,2.542,150,4.203,162,1.024,172,1.138,228,1.051,246,1.038,262,1.007,308,1.392,321,2.573,341,2.586,347,1.491,354,1.696,392,1.695,417,1.133,447,2.307,459,2.097,491,2.918,501,3.231,518,1.608,532,3.012,540,1.192,555,1.23,626,2.773,666,6.387,676,1.208,702,1.485,708,1.199,752,1.589,883,2.876,925,2.654,941,2.002,998,8.873,1000,3.575,1001,5.372,1006,4.361,1012,8.189,1047,2.002,1051,1.661,1064,2.176,1065,3.797,1071,3.341,1082,2.715,1138,1.451,1177,1.794,1183,1.65,1187,4.34,1270,1.599,1406,2.684,1533,1.672,1541,2.586,1595,1.672,1643,5.571,1909,1.749,1933,1.845,2302,4.93,2848,1.905,3458,2.415,3502,6.126,3700,1.975,3828,5.4,5778,3.889,6476,6.021,6478,2.277,6479,2.415,6489,4.83]],["component/462",[220,0.615]],["title/463-1",[676,17.814]],["name/463-1",[]],["text/463-1",[]],["component/463-1",[]],["title/463-2",[60,16.431]],["name/463-2",[]],["text/463-2",[]],["component/463-2",[]],["title/463-3",[216,32.645]],["name/463-3",[]],["text/463-3",[]],["component/463-3",[]],["title/463-4",[24,24.646]],["name/463-4",[]],["text/463-4",[]],["component/463-4",[]],["title/463-5",[1012,48.981,6476,59.201]],["name/463-5",[]],["text/463-5",[]],["component/463-5",[]],["title/463",[24,16.047,887,33.919,998,42.401]],["name/463",[6490,3.92]],["text/463",[21,4.825,22,1.329,24,2.866,33,1.744,41,2.089,45,2.786,49,1.058,53,1.877,60,1.213,66,5.229,74,3.154,77,3.232,82,1.154,120,1.963,124,1.608,142,2.462,143,2.34,150,4.531,162,1.149,172,2.145,174,1.675,182,3.268,200,1.464,212,3.649,228,1.18,246,1.166,300,2.699,308,1.563,311,1.795,320,3.196,321,3.667,341,1.7,344,1.527,347,0.98,417,1.272,491,4.87,501,4.968,518,1.806,532,3.322,539,2.217,540,2.246,555,1.38,620,1.726,626,3.003,676,1.315,702,1.667,708,1.346,721,1.222,729,1.947,752,1.784,876,2.189,883,3.172,887,1.774,891,4.944,925,2.928,998,8.136,1000,3.892,1001,5.678,1012,8.162,1047,2.248,1138,1.629,1183,1.852,1270,1.795,1285,1.608,1406,2.96,1595,1.877,1643,5.919,1909,1.963,1932,3.772,2202,2.189,2302,5.314,3458,2.711,3491,2.711,4340,2.556,6476,6.49,6478,2.556,6479,2.711,6480,2.959,6481,2.959,6482,2.959,6483,2.959,6491,3.174]],["component/463",[220,0.615]],["title/464-1",[676,17.814]],["name/464-1",[]],["text/464-1",[]],["component/464-1",[]],["title/464-2",[60,16.431]],["name/464-2",[]],["text/464-2",[]],["component/464-2",[]],["title/464-3",[216,32.645]],["name/464-3",[]],["text/464-3",[]],["component/464-3",[]],["title/464-4",[347,28.782]],["name/464-4",[]],["text/464-4",[]],["component/464-4",[]],["title/464-5",[1681,54.75]],["name/464-5",[]],["text/464-5",[]],["component/464-5",[]],["title/464",[1048,45.846,6492,68.537]],["name/464",[6493,3.92]],["text/464",[16,0.722,20,1.617,21,1.727,22,1.993,24,1.249,32,1.57,34,1.7,40,1.831,41,1.365,42,0.632,45,1.08,57,1.34,60,1.408,62,2.106,64,1.893,66,3.775,71,0.693,74,0.891,77,2.646,79,1.501,82,1.265,99,0.781,116,4.063,124,6.177,127,6.963,131,1.799,142,1.69,143,1.183,150,1.957,160,1.595,162,4.229,172,0.783,200,2.653,204,0.961,206,2.073,251,1.007,263,1.468,291,0.853,338,1.081,347,1.776,365,2.494,389,0.733,392,3.452,396,0.676,398,0.733,420,2.718,501,2.414,511,1.326,515,1.585,521,0.874,526,2.581,527,0.869,540,1.468,545,0.72,586,6.224,620,1.058,626,1.219,676,1.405,697,1.893,721,2.547,766,1.269,798,4.19,832,2.005,887,1.087,916,2.067,967,0.874,1000,2.672,1001,1.913,1006,2.401,1012,4.408,1048,4.584,1071,2.57,1082,1.957,1103,2.031,1134,2.501,1166,1.442,1226,3.86,1273,1.257,1406,1.081,1490,7.159,1533,1.15,1595,2.059,1599,1.7,1659,2.641,1680,1.419,1681,3.886,1712,1.223,1765,4.132,1909,1.203,1928,1.234,1933,1.269,2035,1.158,2408,1.342,2666,2.25,2839,2.973,2939,1.377,3302,3.301,4095,1.31,4345,6.168,4346,8.813,4347,1.813,4348,2.973,4350,1.813,4351,3.09,4352,2.803,4773,1.497,5592,3.09,6492,1.813,6494,1.945,6495,1.945,6496,1.945,6497,1.945,6498,1.945]],["component/464",[220,0.615]],["title/465-1",[676,17.814]],["name/465-1",[]],["text/465-1",[]],["component/465-1",[]],["title/465-2",[60,16.431]],["name/465-2",[]],["text/465-2",[]],["component/465-2",[]],["title/465-3",[216,25.746,651,23.799]],["name/465-3",[]],["text/465-3",[]],["component/465-3",[]],["title/465-4",[651,23.799,2035,43.781]],["name/465-4",[]],["text/465-4",[]],["component/465-4",[]],["title/465",[1010,57.195]],["name/465",[1010,2.405]],["text/465",[4,0.937,8,0.47,21,2.024,22,2.205,24,3.425,27,2.329,33,1.279,38,2.209,42,2.419,45,1.266,46,0.586,49,2.733,57,0.896,60,1.445,61,1.923,62,2.61,66,3.43,67,2.602,77,3.18,89,1.279,95,1.823,96,0.937,97,1.439,106,1.027,110,0.951,115,0.951,124,3.772,131,0.728,138,1.655,139,0.782,141,1.21,142,0.832,143,0.791,150,1.308,160,1.066,165,1.259,168,1.764,183,3.012,216,0.815,262,3.512,275,1.234,299,1.115,310,1.471,311,1.316,312,2.255,315,1.194,320,2.53,321,1.24,369,1.87,379,1.107,392,0.816,396,1.418,398,0.876,417,1.635,420,3.874,497,2.748,501,1.189,519,1.174,535,1.376,540,0.981,551,1.392,571,2.994,626,2.649,639,2.987,660,1.15,676,0.78,705,2.513,721,3.402,722,2.457,730,1.015,782,1.34,798,1.895,891,5.889,929,1.518,946,1.829,959,1.451,960,5.256,965,1.795,967,1.046,1000,3.081,1001,2.242,1010,6.048,1012,5.887,1018,2.465,1047,1.648,1082,2.293,1103,2.814,1124,2.065,1138,1.194,1154,1.585,1231,1.228,1404,1.625,1500,1.476,1645,1.463,1659,1.3,1878,1.534,1927,2.169,1933,1.518,2033,1.367,2035,3.245,2244,1.725,2302,2.69,2342,3.621,2638,1.925,2870,2.484,2900,1.534,3270,4.654,3986,1.518,4151,1.829,5416,2.065,6316,2.169,6499,2.327,6500,2.327,6501,2.327,6502,2.327]],["component/465",[220,0.615]],["title/466-1",[676,17.814]],["name/466-1",[]],["text/466-1",[]],["component/466-1",[]],["title/466-2",[60,16.431]],["name/466-2",[]],["text/466-2",[]],["component/466-2",[]],["title/466-3",[651,23.799,1406,40.855]],["name/466-3",[]],["text/466-3",[]],["component/466-3",[]],["title/466-4",[66,30.754,651,23.799]],["name/466-4",[]],["text/466-4",[]],["component/466-4",[]],["title/466-5",[127,39.224,651,19.647,1490,31.721]],["name/466-5",[]],["text/466-5",[]],["component/466-5",[]],["title/466-6",[24,16.047,586,41.863,651,19.647]],["name/466-6",[]],["text/466-6",[]],["component/466-6",[]],["title/466-7",[1096,64.298]],["name/466-7",[]],["text/466-7",[]],["component/466-7",[]],["title/466",[1048,58.13]],["name/466",[1048,2.444]],["text/466",[2,2.626,11,0.623,12,1.396,16,0.533,20,1.228,21,1.313,22,2.429,24,3.387,27,0.615,33,0.79,34,0.952,37,2.539,40,1.17,42,1.194,45,2.503,46,1.148,47,1.318,49,0.882,57,3.259,60,1.261,61,1.61,62,1.17,66,2.768,71,0.512,74,1.684,77,1.92,80,0.492,92,1.226,110,0.588,125,3.594,126,4.424,127,6.289,128,1.94,131,0.827,138,1.49,139,0.89,142,0.946,143,0.489,148,0.823,163,0.56,169,0.618,171,1.278,172,2.664,183,1.51,189,0.543,212,1.403,216,1.287,219,0.453,236,0.719,246,1.675,247,0.687,254,0.751,262,2.72,264,0.823,274,0.694,285,0.755,310,1.325,312,0.794,317,0.678,319,0.799,347,0.817,348,0.828,361,1.749,364,1.25,369,0.659,379,1.749,381,4.092,386,0.531,389,0.541,392,1.872,396,0.5,401,0.741,417,0.576,432,0.657,453,1.664,493,1.004,515,2.429,518,0.818,521,2.051,522,2.384,542,1.598,545,1.361,549,0.661,586,6.521,626,2.183,638,0.572,639,0.894,651,0.856,662,2.291,663,0.929,676,0.872,677,0.77,702,1.389,703,2.658,708,1.122,716,1.598,721,2.547,730,1.154,753,1.383,766,1.726,798,1.228,832,0.828,859,0.938,864,0.844,910,0.77,931,0.786,956,1.424,959,3.75,988,0.882,1001,1.454,1006,0.992,1035,1.033,1048,5.707,1071,2.038,1082,4.291,1096,0.992,1098,2.535,1103,1.58,1134,1.9,1173,2.348,1273,0.929,1290,2.977,1301,0.929,1387,1.004,1406,4.243,1490,4.424,1510,0.98,1522,2.189,1526,2.08,1541,1.968,1542,0.958,1643,1.611,1645,0.904,1676,1.049,1718,0.833,1765,2.64,1846,1.158,1898,3.511,1928,2.894,2272,1.19,2339,1.004,2400,0.98,2414,1.93,2526,1.93,2782,3.187,2904,1.158,2938,1.066,3109,1.018,3975,1.066,3986,1.726,4266,4.414,4348,2.26,4352,2.13,5553,1.228,5590,6.348,5591,3.896,5592,1.276,5593,3.426,5595,1.34,5597,2.466,5599,3.041,6503,1.438,6504,1.438,6505,1.438,6506,1.438,6507,1.438]],["component/466",[220,0.615]],["title/467-1",[676,17.814]],["name/467-1",[]],["text/467-1",[]],["component/467-1",[]],["title/467-2",[60,16.431]],["name/467-2",[]],["text/467-2",[]],["component/467-2",[]],["title/467",[344,35.37,1048,45.846]],["name/467",[6508,3.92]],["text/467",[8,2.454,22,1.164,33,2.564,34,1.679,45,2.258,60,1.578,61,1.646,62,2.317,66,3.045,77,3.221,79,3.138,82,3.254,96,1.878,127,8.114,150,4.092,163,1.817,165,2.523,183,1.321,189,1.761,233,3.555,308,2.297,338,2.592,344,3.502,364,2.204,392,4.527,396,1.621,408,3.657,417,2.916,420,2.204,626,2.608,638,1.856,650,3.108,676,0.892,716,2.819,721,2.803,722,3.282,734,2.288,749,2.592,782,2.687,928,3.108,965,2.053,1048,2.909,1059,2.84,1138,2.394,1236,4.14,1406,6.093,1486,2.578,1541,2.498,1677,5.31,1855,2.384,1929,5.723,3081,3.351,3864,6.786,4352,7.207,5408,6.786,5590,11.142]],["component/467",[220,0.615]],["title/468-1",[676,17.814]],["name/468-1",[]],["text/468-1",[]],["component/468-1",[]],["title/468-2",[60,16.431]],["name/468-2",[]],["text/468-2",[]],["component/468-2",[]],["title/468-3",[216,25.746,651,23.799]],["name/468-3",[]],["text/468-3",[]],["component/468-3",[]],["title/468-4",[24,16.047,651,19.647,3986,39.608]],["name/468-4",[]],["text/468-4",[]],["component/468-4",[]],["title/468-5",[438,44.096,651,23.799]],["name/468-5",[]],["text/468-5",[]],["component/468-5",[]],["title/468",[24,19.438,116,40.627]],["name/468",[6509,3.92]],["text/468",[11,1.765,22,2.043,24,3.634,27,0.992,34,1.957,40,2.08,45,2.306,60,1.652,61,1.919,62,3.134,66,0.971,71,1.45,77,3.175,82,1.48,95,1.818,97,1.435,108,4.009,110,1.663,116,6.215,128,1.73,131,3.426,139,0.78,143,1.848,162,4.586,168,1.003,180,1.1,183,1.152,228,1.514,236,2.036,262,2.649,291,2.866,294,1.275,310,3.7,312,1.282,321,1.236,340,1.643,347,0.716,365,1.006,392,0.814,398,0.874,401,1.196,417,2.978,420,1.923,423,1.76,447,1.944,482,1.802,515,1.056,525,1.156,527,1.037,540,1.716,545,0.859,549,1.067,562,1.402,620,1.262,622,1.289,626,2.275,638,0.923,642,2.582,651,1.76,676,1.039,689,1.027,701,1.53,708,0.984,721,2.093,730,2.85,786,1.93,798,3.801,815,1.514,876,2.807,894,1.402,941,1.643,965,1.021,998,2.844,1051,2.391,1071,1.037,1095,1.249,1103,2.337,1118,3.238,1486,2.249,1533,1.372,1541,3.98,1595,1.372,1712,2.56,1855,2.08,2270,1.53,2666,1.5,2719,1.621,2898,1.751,2935,2.059,3700,1.621,3986,7.809,4384,1.786,5370,1.751,5772,1.751,5796,1.982,6390,1.982,6405,1.92,6487,3.612,6510,2.321,6511,2.321,6512,2.321,6513,2.321]],["component/468",[220,0.615]],["title/469-1",[676,17.814]],["name/469-1",[]],["text/469-1",[]],["component/469-1",[]],["title/469-2",[60,16.431]],["name/469-2",[]],["text/469-2",[]],["component/469-2",[]],["title/469",[1293,33.727,1310,29.996,6514,56.58]],["name/469",[6515,3.92]],["text/469",[8,2.231,22,1.651,45,3.734,60,1.166,64,2.651,69,5.999,71,2.358,74,4.332,77,4.581,80,2.266,87,6.769,115,2.704,521,4.25,527,2.956,529,6.369,626,2.439,638,2.632,669,7.613,676,1.264,982,3.764,1242,4.907,1244,4.318,1273,6.11,1289,6.792,1293,6.688,1310,3.27,1490,6.92,1499,4.753,1676,4.827,1765,4.753,3856,8.075,6514,6.169,6516,8.391]],["component/469",[220,0.615]],["title/470-1",[676,17.814]],["name/470-1",[]],["text/470-1",[]],["component/470-1",[]],["title/470-2",[60,16.431]],["name/470-2",[]],["text/470-2",[]],["component/470-2",[]],["title/470-3",[216,25.746,651,23.799]],["name/470-3",[]],["text/470-3",[]],["component/470-3",[]],["title/470-4",[438,44.096,651,23.799]],["name/470-4",[]],["text/470-4",[]],["component/470-4",[]],["title/470",[66,18.821,214,26.426,796,26.079,2350,24.338,2712,27.606]],["name/470",[6517,3.92]],["text/470",[2,1.118,11,3.78,22,1.879,24,3.368,38,1.755,40,1.884,45,1.836,60,1.043,65,3.509,66,1.507,75,2.228,77,2.71,88,1.69,112,3.334,117,3.346,128,3.707,142,3.445,165,4.073,168,1.558,171,3.636,174,3.122,183,2.132,214,5.12,218,3.468,262,1.284,291,2.596,294,3.252,310,2.715,341,3.168,364,1.702,366,1.98,379,2.816,383,1.939,389,2.836,392,1.264,398,2.836,417,2.371,420,4.119,522,3.093,525,2.948,542,2.573,547,1.635,626,2.249,639,2.546,661,1.825,676,1.131,689,1.595,721,1.387,730,3.284,796,2.088,798,2.748,808,1.939,815,2.351,925,5.689,1047,5.332,1103,1.549,1264,2.13,1301,2.328,1516,3.051,1659,3.307,1862,5.409,1992,2.517,2350,1.949,2712,2.21,2713,3.942,2976,2.981,2977,2.981,3262,5.516,3953,2.901,4129,2.671,4741,2.628,5372,3.358,5670,3.358,6128,5.252,6518,3.603,6519,3.603,6520,5.918,6521,3.603,6522,3.603,6523,3.603,6524,3.603]],["component/470",[220,0.615]],["title/471-1",[676,17.814]],["name/471-1",[]],["text/471-1",[]],["component/471-1",[]],["title/471-2",[60,16.431]],["name/471-2",[]],["text/471-2",[]],["component/471-2",[]],["title/471",[24,16.047,214,35.647,604,40.884]],["name/471",[6525,3.92]],["text/471",[2,1.666,11,4.236,22,2.916,24,3.373,38,1.593,40,3.11,45,2.515,60,1.429,77,3.516,112,4.163,142,4.18,171,3.916,183,3.082,214,4.762,228,1.997,262,1.913,310,1.936,364,3.831,398,4.1,420,5.143,447,2.564,522,4.238,525,4.04,540,2.264,604,5.462,626,3.014,634,2.654,676,1.026,808,2.889,812,2.217,914,3.751,1103,2.308,1516,4.18,1712,3.377,1855,2.744,1862,5.825,3446,3.916,4026,6.24,5599,6.709,6128,7.196,6526,5.37,6527,5.37,6528,5.37]],["component/471",[220,0.615]],["title/472-1",[676,17.814]],["name/472-1",[]],["text/472-1",[]],["component/472-1",[]],["title/472-2",[60,16.431]],["name/472-2",[]],["text/472-2",[]],["component/472-2",[]],["title/472",[214,35.647,604,40.884,2712,37.238]],["name/472",[6529,3.92]],["text/472",[11,5.061,20,4.186,22,3.041,24,3.332,38,3.018,45,2.796,60,1.589,77,3.661,89,4.035,112,1.804,131,2.819,142,2.626,171,5.636,174,2.489,183,3.45,214,2.77,218,4.046,236,2.36,262,1.681,291,2.069,310,1.701,320,3.409,364,2.229,389,2.765,392,3.163,396,2.552,420,4.259,560,3.768,589,2.565,604,6.072,626,3.01,676,0.901,812,3.031,914,3.295,916,3.211,1033,5.444,1058,2.966,1103,2.028,1516,3.785,1862,7.307,2712,2.894,4026,3.63,5599,6.075]],["component/472",[220,0.615]],["title/473-1",[676,17.814]],["name/473-1",[]],["text/473-1",[]],["component/473-1",[]],["title/473-2",[14,32.218]],["name/473-2",[]],["text/473-2",[]],["component/473-2",[]],["title/473",[58,28.778,142,21.712,392,21.295]],["name/473",[58,1.098,6530,2.316]],["text/473",[11,3.895,42,2.918,58,5.522,61,3.17,64,3.599,66,3.758,77,3.233,124,4.551,142,4.623,198,5.219,392,4.535,396,4.048,525,4.476,551,3.065,622,4.992,626,2.317,638,3.573,703,4.476,1427,5.922,2651,5.7,4359,7.973]],["component/473",[220,0.615]],["title/474-1",[676,17.814]],["name/474-1",[]],["text/474-1",[]],["component/474-1",[]],["title/474-2",[60,16.431]],["name/474-2",[]],["text/474-2",[]],["component/474-2",[]],["title/474",[58,34.859,4741,53.626]],["name/474",[58,1.098,4741,1.689]],["text/474",[2,3.467,22,1.69,40,3.061,58,5.768,59,3.902,61,2.391,62,2.157,63,5.299,77,2.438,79,2.921,131,3.007,135,4.714,142,3.439,228,2.519,385,4.957,396,2.355,626,3.137,722,3.055,887,3.786,898,6.912,1507,6.4,1613,6.405,2469,7.293,3081,4.866,3366,4.673,4741,10.406,6531,6.775]],["component/474",[220,0.615]],["title/475-1",[676,17.814]],["name/475-1",[]],["text/475-1",[]],["component/475-1",[]],["title/475-2",[247,44.52]],["name/475-2",[]],["text/475-2",[]],["component/475-2",[]],["title/475-3",[14,25.409,60,12.959]],["name/475-3",[]],["text/475-3",[]],["component/475-3",[]],["title/475-4",[139,31.349]],["name/475-4",[]],["text/475-4",[]],["component/475-4",[]],["title/475",[58,28.778,553,30.879,1213,40.011]],["name/475",[58,1.098,6532,2.316]],["text/475",[6,2.941,10,4.744,11,3.655,38,2.5,40,3.208,45,1.754,58,2.681,60,1.486,71,2.015,77,3.033,80,3.825,124,2.864,131,3.493,134,3.188,139,1.901,142,3.015,310,2.039,364,2.671,369,2.591,385,5.195,392,1.984,396,2.929,398,3.175,482,2.502,553,5.683,560,4.326,626,2.174,638,2.249,660,2.794,676,1.08,703,2.817,707,5.27,730,2.466,812,2.334,1071,2.525,1213,7.364,1613,3.766,2356,3.95,2397,5.959,2475,4.351,2651,3.587,2938,4.192,5586,5.27,6395,8.944,6396,8.944,6533,5.654,6534,8.429,6535,8.429]],["component/475",[220,0.615]],["title/476-1",[676,17.814]],["name/476-1",[]],["text/476-1",[]],["component/476-1",[]],["title/476-2",[60,16.431]],["name/476-2",[]],["text/476-2",[]],["component/476-2",[]],["title/476",[58,34.859,385,37.901]],["name/476",[58,1.098,385,1.194]],["text/476",[2,2.966,22,1.677,40,3.044,58,5.747,59,3.871,60,1.185,61,3.374,62,2.14,63,5.276,77,2.419,79,2.898,131,2.99,135,4.688,142,3.42,364,3.176,385,7.445,396,2.336,589,3.655,626,3.126,722,3.031,898,7.497,1507,6.381,1613,6.37,1679,4.386,2469,7.91,3366,4.636]],["component/476",[220,0.615]],["title/477-1",[676,17.814]],["name/477-1",[]],["text/477-1",[]],["component/477-1",[]],["title/477-2",[60,16.431]],["name/477-2",[]],["text/477-2",[]],["component/477-2",[]],["title/477-3",[216,25.746,651,23.799]],["name/477-3",[]],["text/477-3",[]],["component/477-3",[]],["title/477-4",[24,16.047,651,19.647,3986,39.608]],["name/477-4",[]],["text/477-4",[]],["component/477-4",[]],["title/477-5",[24,16.047,651,19.647,3986,39.608]],["name/477-5",[]],["text/477-5",[]],["component/477-5",[]],["title/477",[24,16.047,2895,43.598,2896,46.709]],["name/477",[6536,3.92]],["text/477",[22,1.259,24,3.652,27,1.272,37,1.416,40,2.993,42,0.966,45,2.685,60,1.157,61,1.05,62,2.462,74,1.363,77,3.114,95,1.329,110,1.216,116,2.787,128,2.791,143,1.011,162,4.236,168,1.286,228,2.441,246,1.093,262,1.797,291,3.797,294,2.772,299,1.426,310,4.324,312,3.628,341,5.365,344,1.431,417,4.687,518,1.692,540,2.127,542,1.294,545,1.868,555,1.294,626,2.719,676,1.255,689,2.906,702,1.562,708,1.261,730,4.37,798,5.569,876,3.479,1051,1.747,1071,2.253,1103,2.168,1270,1.682,1456,3.74,1486,2.787,1533,2.983,1541,5.034,1595,2.983,1712,3.172,1855,2.577,2666,3.26,2848,2.004,2895,2.137,2896,7.236,2897,2.004,3700,2.078,3986,7.826,5370,3.807,5777,2.339,6405,5.432,6537,2.462]],["component/477",[220,0.615]],["title/478-1",[676,17.814]],["name/478-1",[]],["text/478-1",[]],["component/478-1",[]],["title/478-2",[60,16.431]],["name/478-2",[]],["text/478-2",[]],["component/478-2",[]],["title/478-3",[216,25.746,651,23.799]],["name/478-3",[]],["text/478-3",[]],["component/478-3",[]],["title/478-4",[24,16.047,651,19.647,3986,39.608]],["name/478-4",[]],["text/478-4",[]],["component/478-4",[]],["title/478-5",[24,16.047,651,19.647,3986,39.608]],["name/478-5",[]],["text/478-5",[]],["component/478-5",[]],["title/478",[17,36.95,24,16.047,2895,43.598]],["name/478",[6538,3.92]],["text/478",[4,1.058,17,6.343,22,2.005,24,3.557,27,1.123,37,2.158,40,2.798,42,0.853,45,2.493,48,1.309,60,1.055,61,0.927,62,2.267,74,3.262,77,3.163,80,0.9,95,1.174,110,1.074,116,2.506,128,2.544,143,0.893,144,2.632,162,4.044,168,1.136,228,2.225,246,0.965,262,1.616,291,3.525,294,2.492,299,2.174,310,4.14,312,3.306,341,5.331,344,1.264,417,4.475,426,1.337,491,2.74,518,1.495,540,1.912,542,1.143,545,1.679,549,1.208,555,1.143,626,2.568,676,1.143,689,2.648,702,1.38,708,1.114,730,4.109,798,5.332,876,3.128,1023,3.873,1051,1.543,1071,2.026,1103,1.95,1187,2.013,1270,1.486,1456,3.363,1486,2.506,1533,2.682,1541,4.706,1595,2.682,1712,2.852,1855,2.317,2666,2.931,2848,1.77,2895,1.887,2896,2.022,2897,1.77,3216,3.308,3700,1.835,3986,7.493,4227,4.604,5149,3.652,5370,3.423,5777,2.066,6405,4.95,6539,5.984,6540,2.628]],["component/478",[220,0.615]],["title/479-1",[676,17.814]],["name/479-1",[]],["text/479-1",[]],["component/479-1",[]],["title/479-2",[60,16.431]],["name/479-2",[]],["text/479-2",[]],["component/479-2",[]],["title/479",[24,13.663,1121,29.396,2895,37.122,6537,42.76]],["name/479",[6541,3.92]],["text/479",[22,2.89,24,3.31,45,4.083,60,1.275,77,4.737,168,3.128,228,2.69,246,2.656,341,3.873,417,2.898,518,4.115,542,4.378,555,3.146,626,2.987,676,1.382,702,3.798,708,3.067,1082,4.066,1103,3.11,1121,5.727,1270,4.09,1523,9.582,2895,5.196,2928,4.929,4227,5.567,5777,5.687,6537,11.276]],["component/479",[220,0.615]],["title/480-1",[676,17.814]],["name/480-1",[]],["text/480-1",[]],["component/480-1",[]],["title/480-2",[60,16.431]],["name/480-2",[]],["text/480-2",[]],["component/480-2",[]],["title/480",[6364,79.619]],["name/480",[6364,3.347]],["text/480",[2,1.586,10,2.407,11,2.217,22,2.853,45,2.423,60,2.125,77,3.412,78,2.366,82,1.858,85,4.649,86,2.659,126,4.955,138,2.073,143,1.738,150,6.777,204,2.526,262,3.378,319,2.841,354,3.066,371,3.162,423,4.944,424,2.526,626,2.738,660,2.526,676,0.977,753,2.672,782,2.944,796,4.528,883,5.646,916,2.236,1059,4.756,1095,2.751,1406,2.841,1855,2.612,1879,2.857,1909,3.162,1933,3.336,2246,8.783,2848,5.262,3601,3.571,3761,4.537,6364,12.062,6365,7.282,6478,4.116,6542,5.113,6543,10.616]],["component/480",[220,0.615]],["title/481-1",[676,17.814]],["name/481-1",[]],["text/481-1",[]],["component/481-1",[]],["title/481-2",[60,16.431]],["name/481-2",[]],["text/481-2",[]],["component/481-2",[]],["title/481-3",[216,32.645]],["name/481-3",[]],["text/481-3",[]],["component/481-3",[]],["title/481-4",[60,12.959,651,23.799]],["name/481-4",[]],["text/481-4",[]],["component/481-4",[]],["title/481-5",[57,28.307,651,23.799]],["name/481-5",[]],["text/481-5",[]],["component/481-5",[]],["title/481-6",[568,34.374,651,23.799]],["name/481-6",[]],["text/481-6",[]],["component/481-6",[]],["title/481",[46,23.467]],["name/481",[46,0.987]],["text/481",[2,1.155,4,1.499,8,0.295,14,1.596,16,0.542,22,1.517,24,1.909,25,1.141,26,1.353,27,1.974,34,1.34,38,0.433,40,1.47,42,2.995,45,3.543,46,3.416,53,0.863,57,4.336,60,1.071,62,3.031,63,0.692,64,0.585,66,1.557,71,0.52,77,2.405,80,2.288,82,0.531,92,1.45,93,0.66,95,1.663,96,2.69,97,0.903,106,0.644,112,0.558,115,0.597,118,0.995,126,1.402,128,1.141,134,1.747,137,1.84,138,1.088,139,2.87,148,1.536,162,1.348,163,1.045,168,0.631,171,1.296,183,1.054,191,0.571,195,0.852,198,0.654,199,0.639,202,0.736,216,0.511,218,1.481,220,0.561,239,0.719,246,0.536,254,1.402,258,0.962,262,2.9,310,0.967,311,1.517,312,1.483,315,0.749,320,1.246,321,1.983,344,0.702,347,1.666,364,0.69,365,0.633,369,1.229,386,1.706,389,1.011,390,0.687,392,0.512,396,1.294,398,1.011,416,0.759,417,1.075,420,0.69,423,1.16,435,0.953,479,1.791,494,0.79,501,0.746,519,0.736,521,0.656,524,0.943,532,0.91,540,2.818,542,2.346,545,1.379,551,3.146,555,0.635,568,5.012,626,1.862,629,1.123,630,1.034,634,0.721,638,1.067,639,2.605,648,2.865,649,1.517,651,1.205,661,0.739,670,1.247,676,0.882,677,0.782,689,2.044,701,0.962,702,1.409,703,1.337,708,0.619,720,0.743,721,2.077,724,1.598,729,0.896,730,1.17,752,0.821,753,0.763,766,0.953,786,0.692,798,1.246,804,0.846,826,3.013,837,1.437,908,0.882,910,1.993,916,0.639,925,0.802,955,1.687,958,0.983,969,0.716,998,1.02,1048,0.91,1103,1.985,1118,4.587,1149,1.565,1151,0.782,1293,1.491,1306,1.02,1363,0.852,1440,1.989,1466,0.995,1526,2.109,1647,2.025,1659,2.08,1846,2.998,1855,0.746,2302,0.962,2348,0.852,2368,1.208,2370,1.416,2461,0.935,2795,1.247,2818,0.953,2828,0.995,2866,1.828,2870,1.633,3541,1.082,3975,1.082,4384,1.123,5618,1.361,5619,1.361,5772,1.102,5981,1.208,6132,1.208,6456,1.208,6544,1.46,6545,1.46,6546,1.296,6547,1.361,6548,1.46,6549,1.361,6550,1.46]],["component/481",[220,0.615]],["title/482-1",[676,17.814]],["name/482-1",[]],["text/482-1",[]],["component/482-1",[]],["title/482",[379,34.985,528,44.422]],["name/482",[379,1.102,528,1.399]],["text/482",[45,3.799,60,1.419,77,5.066,80,3.71,95,3.597,110,4.427,128,3.423,137,5.354,177,4.269,180,3.818,236,4.028,345,5.255,379,5.827,528,8.506,622,4.474,804,4.667,826,5.255,832,4.637,909,4.637,1541,4.311,6456,6.662,6551,7.506]],["component/482",[220,0.615]],["title/483-1",[676,17.814]],["name/483-1",[]],["text/483-1",[]],["component/483-1",[]],["title/483-2",[139,31.349]],["name/483-2",[]],["text/483-2",[]],["component/483-2",[]],["title/483-3",[60,16.431]],["name/483-3",[]],["text/483-3",[]],["component/483-3",[]],["title/483",[528,56.325]],["name/483",[528,2.368]],["text/483",[3,0.945,8,0.517,14,2.025,22,1.744,24,2.598,42,2.566,45,3.884,46,2.591,47,1.274,49,1.476,57,1.705,60,1.393,62,2.756,65,1.191,66,1.069,71,0.911,77,3.85,80,3.365,82,0.929,88,1.199,92,0.687,105,1.376,106,1.128,126,1.336,133,1.212,134,4.916,139,0.86,236,1.279,255,1.027,294,3.22,312,1.413,315,1.312,317,0.655,318,0.584,320,1.187,321,1.362,338,1.421,344,1.23,347,3.744,355,1.556,369,1.171,378,1.336,379,2.788,392,1.554,396,1.539,398,0.963,408,1.284,479,2.819,494,1.383,525,1.274,528,7.566,551,4.138,568,3.267,587,1.836,612,2.551,626,2.038,630,1.81,632,3.783,633,1.454,634,1.263,648,1.967,649,1.446,653,4.042,676,0.489,684,1.836,689,2.594,708,1.084,710,1.763,855,1.685,897,1.722,909,4.025,910,1.369,916,1.118,965,1.125,1073,1.429,1087,3.567,1103,1.099,1138,1.312,1177,1.622,1258,1.967,1285,2.244,1334,1.125,1533,3.465,1534,3.783,1660,1.896,1878,1.685,1992,1.786,2413,5.627,2461,2.836,2462,1.81,2463,2.184,2464,2.383,2850,1.622,2928,1.742,3601,1.786,4074,2.184,5815,2.059,6384,4.129,6552,2.557,6553,2.557,6554,2.557,6555,2.557]],["component/483",[220,0.615]],["title/484-1",[676,17.814]],["name/484-1",[]],["text/484-1",[]],["component/484-1",[]],["title/484-2",[60,16.431]],["name/484-2",[]],["text/484-2",[]],["component/484-2",[]],["title/484",[41,23.801,42,19.714,46,15.279]],["name/484",[6556,3.92]],["text/484",[41,5.537,42,4.177,46,2.912,57,3.423,60,1.567,77,4.901,80,3.044,109,6.018,128,4.918,203,4.411,626,3.513,676,1.699,1541,4.76,2734,6.485]],["component/484",[220,0.615]],["title/485-1",[676,17.814]],["name/485-1",[]],["text/485-1",[]],["component/485-1",[]],["title/485-2",[60,16.431]],["name/485-2",[]],["text/485-2",[]],["component/485-2",[]],["title/485",[126,31.721,392,21.295,6557,56.58]],["name/485",[6558,3.92]],["text/485",[16,1.516,17,3.99,21,4.072,22,1.635,32,1.842,45,2.546,57,3.159,60,0.72,62,2.086,66,4.59,68,3.085,71,2.335,77,2.953,115,2.678,126,4.289,131,2.049,138,2.658,142,3.677,150,4.612,155,2.569,169,1.756,183,1.157,189,1.542,203,2.027,227,2.296,254,3.425,285,2.145,321,2.176,336,3.029,347,1.261,379,1.944,386,1.51,389,1.539,392,3.294,399,2.106,426,2.078,445,3.083,452,2.547,453,2.569,491,3.959,529,2.752,549,1.878,626,2.83,676,0.781,753,2.135,786,1.937,883,5.591,969,2.003,1001,3.601,1183,2.383,1195,4.366,1406,5.218,1450,2.506,1490,3.425,1855,3.348,1881,4.946,1909,4.053,1928,2.592,2339,2.854,2872,2.666,3539,3.808,3938,3.289,4203,3.212,4352,3.289,5099,3.626,5553,5.597,6412,3.808,6478,5.277,6479,7.008,6557,12.08,6559,4.086,6560,6.554,6561,8.206,6562,4.086]],["component/485",[220,0.615]],["title/486-1",[676,17.814]],["name/486-1",[]],["text/486-1",[]],["component/486-1",[]],["title/486-2",[60,16.431]],["name/486-2",[]],["text/486-2",[]],["component/486-2",[]],["title/486",[134,27.811,347,22.7]],["name/486",[5975,3.654]],["text/486",[6,3.828,24,2.694,45,4.109,60,1.297,61,2.597,63,4.831,77,4.205,134,5.313,137,3.637,341,3.94,344,6.068,347,3.608,424,3.637,451,5.456,452,4.588,479,3.54,551,2.511,612,5.867,626,3.253,630,8.275,676,1.406,724,4.382,4161,7.318]],["component/486",[220,0.615]],["title/487-1",[676,17.814]],["name/487-1",[]],["text/487-1",[]],["component/487-1",[]],["title/487-2",[60,16.431]],["name/487-2",[]],["text/487-2",[]],["component/487-2",[]],["title/487-3",[216,25.746,651,23.799]],["name/487-3",[]],["text/487-3",[]],["component/487-3",[]],["title/487-4",[24,19.438,651,23.799]],["name/487-4",[]],["text/487-4",[]],["component/487-4",[]],["title/487",[24,19.438,1064,56.58]],["name/487",[1064,3.016]],["text/487",[8,1.153,16,0.916,20,1.995,21,2.131,22,2.528,24,3.589,27,1.055,29,1.245,33,3.134,34,0.888,40,1.367,41,0.968,42,1.395,45,2.398,46,0.621,57,1.654,60,1.202,61,0.871,62,1.816,66,4.041,74,1.968,77,3.053,84,1.127,85,1.21,86,1.284,93,1.116,95,1.919,120,1.526,124,3.916,126,2.245,131,2.417,139,1.445,142,0.883,143,1.46,162,2.469,172,1.729,183,1.615,191,0.966,202,1.245,216,0.864,228,0.918,246,0.906,262,2.754,286,1.379,288,1.773,299,1.183,300,2.889,310,0.89,321,4.52,341,1.321,344,1.187,361,2.044,369,1.131,379,2.044,392,2.712,396,2.687,417,0.989,420,2.695,452,2.679,501,4.937,518,1.404,527,1.919,540,1.811,555,1.073,626,2.492,639,0.834,645,1.245,662,1.539,676,0.821,702,2.995,703,1.23,708,1.046,721,2.196,722,2.572,730,1.873,837,1.321,838,2.725,925,2.361,998,3.001,1001,2.361,1064,7.018,1071,1.102,1103,1.847,1138,2.927,1150,1.58,1187,3.028,1217,1.987,1270,1.395,1406,1.371,1466,4.648,1595,2.54,1909,2.657,1928,1.566,1932,4.83,1933,1.611,3291,2.19,3302,1.724,3503,7.018,3700,1.724,3782,3.459,3986,1.611,5778,3.459,6563,6.054,6564,2.301,6565,2.301,6566,2.301,6567,2.301,6568,4.004,6569,4.004,6570,4.004,6571,2.301]],["component/487",[220,0.615]],["title/488-1",[676,17.814]],["name/488-1",[]],["text/488-1",[]],["component/488-1",[]],["title/488-2",[60,16.431]],["name/488-2",[]],["text/488-2",[]],["component/488-2",[]],["title/488-3",[216,25.746,651,23.799]],["name/488-3",[]],["text/488-3",[]],["component/488-3",[]],["title/488-4",[24,19.438,651,23.799]],["name/488-4",[]],["text/488-4",[]],["component/488-4",[]],["title/488",[24,16.047,887,33.919,1064,46.709]],["name/488",[6572,3.92]],["text/488",[2,1.107,8,1.363,16,0.742,20,0.929,21,2.913,22,2.486,24,3.586,27,1.526,29,1.009,33,1.099,34,0.72,40,1.869,41,0.784,42,0.65,45,2.839,46,0.503,57,1.86,60,1.613,61,0.706,62,1.538,66,4.167,74,1.635,77,3.448,89,1.961,93,0.905,95,2.623,115,0.817,116,3.245,120,1.237,126,3.069,131,1.116,139,0.673,142,1.277,143,0.68,150,2.006,162,3.138,172,2.714,183,1.368,191,0.782,202,1.8,216,1.25,228,0.744,236,1,239,0.984,246,0.734,262,2.892,286,1.994,291,0.877,299,0.959,310,0.721,320,0.929,321,2.574,341,1.071,344,0.962,347,1.102,361,0.952,369,0.916,379,0.952,392,3.041,396,2.041,399,1.84,408,1.005,417,0.801,452,1.247,479,0.962,501,3,518,1.138,527,2.159,540,2.038,555,0.87,626,2.361,638,0.795,639,0.676,645,1.009,662,2.225,676,0.682,702,1.05,703,0.996,708,0.848,721,1.86,722,2.179,730,1.556,782,1.152,837,1.071,887,4.181,925,3.227,980,2.432,998,3.376,1000,2.732,1001,3.227,1010,1.227,1012,6.637,1064,7.667,1071,0.893,1103,1.534,1138,1.026,1150,2.285,1187,2.607,1217,1.61,1270,1.131,1406,1.983,1466,2.432,1491,1.437,1541,1.911,1595,1.183,1599,0.977,1712,2.244,1855,1.022,1909,2.988,1928,1.269,1932,2.527,1933,1.305,2302,1.318,3291,1.775,3503,6.246,3700,2.493,3986,4.882,5778,2.874,6563,5.211,6564,1.864,6565,1.864,6566,1.864,6567,1.864,6568,1.864,6569,1.864,6570,1.864,6571,3.327,6573,2,6574,2,6575,2]],["component/488",[220,0.615]],["title/489-1",[676,17.814]],["name/489-1",[]],["text/489-1",[]],["component/489-1",[]],["title/489-2",[60,16.431]],["name/489-2",[]],["text/489-2",[]],["component/489-2",[]],["title/489",[77,26.457,2778,52.812]],["name/489",[2778,2.815]],["text/489",[8,0.806,10,2.512,11,1.728,22,2.31,24,2.573,25,0.963,27,2.281,29,2.01,34,1.434,38,1.182,40,1.698,42,0.736,45,2.871,46,0.57,57,3.908,60,0.94,62,2.569,65,1.055,71,0.807,77,3.133,78,1.844,80,3.603,84,2.934,92,0.608,93,1.025,94,1.266,95,2.869,96,1.604,99,1.6,110,3.782,117,2.253,131,1.246,134,0.857,139,2.16,150,1.273,168,0.979,172,1.604,183,0.641,189,0.855,196,1.201,198,1.015,200,2.461,203,1.124,204,1.969,213,1.252,218,2.122,232,1.349,254,1.184,262,2.875,264,2.281,267,2.123,275,1.201,310,1.437,312,2.202,315,2.045,338,1.259,347,1.23,364,1.07,371,1.401,389,1.501,392,0.795,393,1.321,396,1.385,398,0.853,399,2.054,417,1.596,423,2.777,424,1.119,501,4.729,523,1.437,532,1.412,542,2.793,545,2.379,551,1.82,553,6.236,596,1.39,626,2.081,638,0.901,639,2.728,651,0.733,655,5.385,660,1.969,662,1.412,663,1.464,676,0.433,677,1.213,705,0.764,708,0.96,720,1.152,727,1.424,730,0.988,734,1.111,753,1.184,771,1.935,786,1.074,798,1.85,812,0.935,967,1.018,995,1.935,1069,1.509,1087,1.379,1095,1.219,1103,3.743,1466,1.543,1541,1.213,1711,1.874,1846,3.209,2249,4.848,2668,1.874,2778,8.006,2852,1.874,2870,2.426,3601,1.582,3964,1.935,3975,1.68,4433,2.01,4788,1.935,5392,1.781,5981,1.874,6132,1.874,6546,2.01,6547,2.111,6576,2.265,6577,2.111,6578,2.265,6579,3.985]],["component/489",[220,0.615]],["title/490-1",[676,17.814]],["name/490-1",[]],["text/490-1",[]],["component/490-1",[]],["title/490-2",[60,16.431]],["name/490-2",[]],["text/490-2",[]],["component/490-2",[]],["title/490-3",[1096,64.298]],["name/490-3",[]],["text/490-3",[]],["component/490-3",[]],["title/490",[436,40.627,2850,46.644]],["name/490",[6580,3.92]],["text/490",[2,3.114,8,1.023,11,1.295,22,1.262,27,1.276,34,1.074,38,0.886,41,1.171,45,2.404,46,0.752,49,1.686,60,0.892,61,2.323,77,3.121,80,1.022,85,2.48,95,1.334,120,1.846,130,2.644,134,4.877,138,1.211,142,1.068,143,1.72,163,1.163,183,3.473,189,1.127,191,1.168,216,1.046,219,0.941,262,3.356,267,1.591,291,4.132,294,1.641,313,1.688,315,1.532,344,1.436,347,2.393,365,1.295,379,2.407,389,1.905,392,1.048,436,2.795,515,1.359,540,1.259,542,1.298,551,4.681,554,1.641,626,2.589,639,1.71,660,2.5,661,1.512,676,0.571,689,1.322,703,2.52,708,1.266,721,3.339,736,1.591,753,1.56,766,1.948,786,1.416,812,2.089,838,3.209,1071,2.26,1262,2.059,1289,2.145,1499,2.145,1533,5.936,1534,4.321,1537,4.49,1541,6.429,1542,1.989,1760,2.783,1857,1.968,2341,3.948,2850,7.929,2897,2.011,4095,2.011,6273,2.783,6581,2.986,6582,5.059,6583,5.059]],["component/490",[220,0.615]],["title/491-1",[676,17.814]],["name/491-1",[]],["text/491-1",[]],["component/491-1",[]],["title/491-2",[60,16.431]],["name/491-2",[]],["text/491-2",[]],["component/491-2",[]],["title/491",[6584,68.537,6585,68.537]],["name/491",[6586,3.92]],["text/491",[2,2.901,21,3.233,22,1.626,37,4.45,41,3.667,45,2.901,60,1.149,66,4.999,71,2.322,74,5.012,77,3.936,126,4.887,131,2.038,135,3.195,142,3.345,143,2.215,150,3.663,172,2.623,286,3.642,302,5.565,318,1.489,321,3.472,420,4.418,519,3.287,626,2.821,676,1.245,812,2.69,883,3.88,1001,5.139,1166,6.934,1406,3.621,1490,5.717,1657,5.565,1909,4.03,2572,7.197,5553,5.565,5778,5.247,6584,8.718,6585,6.074,6587,6.517,6588,6.517,6589,6.517]],["component/491",[220,0.615]],["title/492-1",[60,16.431]],["name/492-1",[]],["text/492-1",[]],["component/492-1",[]],["title/492-2",[40,19.323,77,21.842,1438,42.401]],["name/492-2",[]],["text/492-2",[]],["component/492-2",[]],["title/492-3",[77,21.842,1438,42.401,1613,40.436]],["name/492-3",[]],["text/492-3",[]],["component/492-3",[]],["title/492-4",[77,21.842,1438,42.401,6590,56.58]],["name/492-4",[]],["text/492-4",[]],["component/492-4",[]],["title/492-5",[77,21.842,1438,42.401,6591,56.58]],["name/492-5",[]],["text/492-5",[]],["component/492-5",[]],["title/492-6",[77,21.842,1438,42.401,4233,46.709]],["name/492-6",[]],["text/492-6",[]],["component/492-6",[]],["title/492",[12,32.023,1438,42.401,2902,46.709]],["name/492",[2902,1.782,6592,2.316]],["text/492",[2,2.271,8,0.458,12,1.195,16,1.98,22,1.603,40,2.947,42,1.294,45,0.703,48,1.128,54,5.233,64,1.596,71,0.807,74,1.038,77,4.472,79,0.977,105,1.219,112,0.866,115,0.926,130,1.184,142,1.425,143,1.355,171,1.924,172,0.912,208,2.054,239,1.115,276,1.68,300,1.147,311,3.017,325,6.416,336,4.763,345,3.482,347,1.647,369,1.038,389,0.853,392,1.398,398,1.501,454,2.715,499,1.786,540,4.7,545,1.476,547,5.058,560,2.738,565,2.178,626,1.028,689,1.003,784,2.955,808,3.457,815,2.6,868,2.655,910,3.439,962,2.123,967,1.791,1051,3.773,1058,1.424,1060,4.235,1278,1.68,1427,4.235,1438,10.314,1613,2.655,1618,5.258,1670,3.273,1677,2.092,1855,5.544,1882,3.008,1971,1.401,2633,3.715,2782,4.487,2902,6.701,2936,1.71,2938,2.955,3797,3.715,4233,4.106,4788,1.935,5652,3.715,5962,1.935,6590,8.628,6591,10.115,6593,2.265,6594,3.985,6595,3.985,6596,6.424]],["component/492",[220,0.615]],["title/493-1",[676,17.814]],["name/493-1",[]],["text/493-1",[]],["component/493-1",[]],["title/493-2",[60,16.431]],["name/493-2",[]],["text/493-2",[]],["component/493-2",[]],["title/493",[553,30.879,649,34.318,2350,32.83]],["name/493",[2350,2.12]],["text/493",[14,1.595,16,3.298,22,2.722,24,2.658,34,3.199,40,1.469,45,3.119,60,1.567,77,3.926,79,1.99,80,3.044,112,2.76,115,1.886,126,2.412,134,2.73,142,2.582,171,3.485,172,3.579,179,2.768,218,2.871,246,2.651,332,3.145,361,3.435,364,4.2,385,2.379,545,1.709,553,5.885,626,1.862,649,2.609,660,2.281,674,4.329,676,0.882,854,3.366,955,2.902,1095,3.884,1103,3.821,1125,2.641,1305,2.831,1515,2.768,1522,3.818,1613,3.075,1657,3.942,2302,3.042,2350,7.558,2356,3.224,2397,7.397,2713,3.075,4161,3.315,4250,6.165,4741,3.366,5862,4.096,6395,4.096,6396,4.096,6597,4.615]],["component/493",[220,0.615]],["title/494-1",[676,17.814]],["name/494-1",[]],["text/494-1",[]],["component/494-1",[]],["title/494",[389,35.11]],["name/494",[389,1.476]],["text/494",[22,2.777,34,3.441,42,3.105,45,4.129,47,3.349,60,1.685,62,2.14,65,3.132,77,4.004,80,2.302,93,3.04,110,2.747,115,2.747,189,2.537,287,4.227,294,3.694,318,1.536,319,3.735,320,3.121,321,3.581,355,5.821,389,4.565,390,3.164,408,3.376,423,2.906,424,3.322,425,3.581,528,5.777,532,4.191,540,2.834,557,3.655,560,3.45,708,2.85,806,4.431,911,4.828,1051,3.948,1060,4.431,1218,7.358,1670,4.124,2083,5.173,2661,4.386,6598,6.722]],["component/494",[220,0.615]],["title/495-1",[676,17.814]],["name/495-1",[]],["text/495-1",[]],["component/495-1",[]],["title/495-2",[60,16.431]],["name/495-2",[]],["text/495-2",[]],["component/495-2",[]],["title/495",[1541,49.913]],["name/495",[1541,2.098]],["text/495",[45,4.222,60,1.77,77,4.898,128,4.268,626,3.224,676,1.919,826,6.552,1541,6.692,1670,7.669,1837,6.925,2446,7.578]],["component/495",[220,0.615]],["title/496-1",[676,17.814]],["name/496-1",[]],["text/496-1",[]],["component/496-1",[]],["title/496-2",[60,16.431]],["name/496-2",[]],["text/496-2",[]],["component/496-2",[]],["title/496",[218,29.242,540,31.002]],["name/496",[6043,3.654]],["text/496",[8,1.159,22,2.124,38,3.013,40,1.824,45,3.488,60,1.01,62,1.824,64,2.295,77,4.324,79,2.47,84,2.617,85,2.809,86,2.981,112,4.595,115,2.341,142,3.634,198,2.567,218,5.326,309,5.45,341,4.558,347,1.769,390,2.697,392,2.01,407,4.116,423,3.681,432,2.617,540,4.741,551,1.955,571,3.149,626,3.362,676,1.095,793,6.855,908,3.462,928,3.817,967,2.575,1092,4.324,1121,3.259,1450,3.515,1498,4.057,1516,4.388,1858,4.741,2344,5.341,2461,3.668,3975,4.248,6599,5.73]],["component/496",[220,0.615]],["title/497-1",[676,17.814]],["name/497-1",[]],["text/497-1",[]],["component/497-1",[]],["title/497-2",[60,16.431]],["name/497-2",[]],["text/497-2",[]],["component/497-2",[]],["title/497",[150,41.326,3297,62.794]],["name/497",[3297,3.347]],["text/497",[41,3.599,45,3.663,60,1.617,77,4.698,142,3.283,150,6.637,251,4.752,354,5.504,612,5.285,626,3.045,676,1.754,796,5.319,883,7.032,1001,7.175,1933,5.989,3297,10.085,6478,7.389]],["component/497",[220,0.615]],["title/498-1",[676,17.814]],["name/498-1",[]],["text/498-1",[]],["component/498-1",[]],["title/498-2",[60,16.431]],["name/498-2",[]],["text/498-2",[]],["component/498-2",[]],["title/498",[218,29.242,2713,48.981]],["name/498",[6600,3.92]],["text/498",[10,2.161,22,1.793,34,3.607,40,1.461,45,3.376,60,1.267,61,1.62,62,2.288,77,4.493,82,1.668,84,3.283,95,3.957,103,2.057,108,2.816,112,1.755,138,1.862,142,3.586,203,2.278,218,5.409,220,0.959,262,2.561,274,2.217,299,2.2,300,3.641,315,2.356,347,2.219,365,1.99,392,1.61,396,1.595,398,2.707,408,2.306,499,3.221,518,5.039,521,3.982,522,3.756,527,4.477,529,4.841,626,2.976,642,5.62,676,0.877,720,2.335,721,3.859,722,3.241,734,2.251,910,2.458,1071,2.05,1150,2.939,1172,3.404,1226,2.678,1516,3.705,2350,2.483,2713,6.678,3455,3.696,3700,3.207,3856,3.92,3952,3.404]],["component/498",[220,0.615]],["title/499-1",[676,17.814]],["name/499-1",[]],["text/499-1",[]],["component/499-1",[]],["title/499-2",[60,16.431]],["name/499-2",[]],["text/499-2",[]],["component/499-2",[]],["title/499",[498,62.794]],["name/499",[498,2.64]],["text/499",[16,0.996,22,2.51,24,3.602,33,3.343,34,0.966,40,1.936,45,2.76,60,1.273,61,2.55,62,2.832,71,2.167,77,3.785,82,0.976,95,3.227,116,3.361,125,3.113,128,1.142,130,1.403,131,3.851,139,0.903,162,2.948,168,1.161,196,2.45,198,1.203,236,1.343,239,2.275,250,1.635,262,2.167,267,1.431,285,1.41,291,2.668,310,1.666,364,1.269,392,2.134,396,2.511,417,2.895,420,4.203,438,1.611,479,1.292,498,6.776,501,4.161,540,1.949,542,1.168,545,3.015,554,2.54,555,1.168,597,1.452,626,2.457,676,0.513,703,1.338,721,3.135,722,2.084,724,1.599,730,3.151,754,3.556,780,1.661,786,1.273,798,3.355,876,1.852,928,6.346,959,5.94,965,1.181,1051,1.577,1071,1.199,1103,3.106,1138,3.122,1264,1.588,1391,2.553,1533,1.588,1541,2.474,1595,4.815,1643,1.635,1658,2.383,1712,1.689,2202,1.852,2897,1.809,3213,1.876,3700,1.876,3968,2.503,4384,2.066,5772,2.027,5968,2.503,6278,2.383,6487,2.383,6601,2.685,6602,4.621,6603,2.685,6604,2.685]],["component/499",[220,0.615]],["title/500-1",[676,17.814]],["name/500-1",[]],["text/500-1",[]],["component/500-1",[]],["title/500-2",[60,16.431]],["name/500-2",[]],["text/500-2",[]],["component/500-2",[]],["title/500",[24,19.438,908,44.422]],["name/500",[6605,3.92]],["text/500",[8,1.157,22,0.863,24,3.579,32,2.579,40,1.821,44,6.983,45,3.724,60,1.289,62,1.821,77,4.32,80,1.184,103,1.549,115,1.413,116,1.91,143,1.944,163,2.227,168,1.495,172,1.392,186,2.521,199,1.512,201,1.89,202,1.744,228,1.285,233,1.688,246,1.269,313,1.955,315,1.774,316,2.044,341,3.062,354,4.388,355,4.454,367,1.86,369,1.584,389,1.302,392,4.212,399,1.782,417,4.501,499,1.549,512,2.044,513,1.807,540,1.458,542,1.503,547,2.595,565,4.647,571,3.143,596,2.121,612,1.991,626,2.77,676,0.661,684,4.108,702,1.815,734,1.695,838,2.193,869,4.732,883,6.396,897,3.853,908,5.69,909,1.991,962,1.842,1069,2.303,1088,2.256,1198,2.609,1285,5.14,1541,4.552,1542,2.303,1700,4.317,2265,2.329,2437,2.356,2461,3.662,2850,2.193,3436,5.891,3465,2.86,4182,3.068,6606,5.72,6607,3.457,6608,3.222]],["component/500",[220,0.615]],["title/501-1",[676,17.814]],["name/501-1",[]],["text/501-1",[]],["component/501-1",[]],["title/501-2",[60,16.431]],["name/501-2",[]],["text/501-2",[]],["component/501-2",[]],["title/501",[908,44.422,2350,39.768]],["name/501",[6609,3.92]],["text/501",[4,1.57,22,2.505,32,1.758,42,1.266,44,2.891,45,3.509,60,1.112,61,2.227,74,1.786,77,4.238,80,1.335,82,1.417,84,1.781,97,2.411,112,3.041,134,2.387,138,3.706,141,3.283,142,2.258,143,1.325,172,1.57,218,3.162,260,2.274,262,3.256,286,2.179,310,1.406,347,1.949,354,2.338,355,2.373,392,3.206,393,2.274,417,2.528,420,2.982,447,3.014,545,1.444,551,3.118,553,1.983,560,2.001,565,4.346,626,2.589,639,3.982,676,0.745,689,2.794,734,1.912,826,4.118,830,2.305,879,3.065,883,6.735,908,2.356,1095,2.098,1138,3.239,1285,3.197,1516,3.253,1533,2.305,1541,5.374,1677,2.047,1854,4.04,1855,3.225,1879,2.179,2341,2.338,2350,4.943,2367,2.761,2657,5.044,2708,3.139,2850,6.368,3436,6.402,4161,2.8,4328,3.33,6610,3.899]],["component/501",[220,0.615]],["title/502-1",[676,17.814]],["name/502-1",[]],["text/502-1",[]],["component/502-1",[]],["title/502-2",[60,16.431]],["name/502-2",[]],["text/502-2",[]],["component/502-2",[]],["title/502",[64,24.316,392,21.295,1903,40.884]],["name/502",[6611,3.92]],["text/502",[38,3.074,45,3.215,57,3.361,60,1.045,62,1.887,64,2.375,68,4.11,77,4.385,84,2.708,85,2.907,86,3.084,99,4.894,128,2.52,142,4.359,275,3.143,314,4.04,344,4.2,386,2.191,392,3.063,399,3.056,432,3.987,549,2.725,551,3.536,626,2.252,676,1.133,753,3.098,782,3.414,796,6.626,883,7.257,960,6.11,1059,3.609,1095,4.698,1607,7.224,1855,3.029,1903,5.881,2409,3.908,2696,7.456]],["component/502",[220,0.615]],["title/503-1",[676,17.814]],["name/503-1",[]],["text/503-1",[]],["component/503-1",[]],["title/503-2",[60,16.431]],["name/503-2",[]],["text/503-2",[]],["component/503-2",[]],["title/503-3",[45,18.829,60,10.698,1308,32.023]],["name/503-3",[]],["text/503-3",[]],["component/503-3",[]],["title/503-4",[60,12.959,651,23.799]],["name/503-4",[]],["text/503-4",[]],["component/503-4",[]],["title/503-5",[57,23.369,347,18.74,651,19.647]],["name/503-5",[]],["text/503-5",[]],["component/503-5",[]],["title/503-6",[568,34.374,651,23.799]],["name/503-6",[]],["text/503-6",[]],["component/503-6",[]],["title/503",[45,28.919]],["name/503",[45,1.216]],["text/503",[2,0.585,8,0.684,12,0.995,14,1.592,16,0.699,20,1.572,22,1.956,23,0.995,24,2.219,27,0.806,34,2.33,38,0.559,40,2.294,42,1.825,45,4.281,46,2.344,48,0.939,49,0.628,57,4.651,60,1.141,62,2.672,64,0.755,66,0.789,71,1.641,77,3.195,79,0.813,80,3.546,82,2.043,84,0.861,85,1.66,86,4.078,90,1.451,92,0.909,93,0.853,95,1.512,96,2.901,103,0.845,106,0.832,109,0.981,128,0.801,137,1.673,138,1.373,139,2.424,148,1.937,162,1.225,168,0.815,171,2.224,172,2.263,177,0.999,180,0.894,183,0.534,191,0.737,195,2.687,198,0.845,216,0.66,219,0.594,220,0.707,233,0.921,239,0.928,254,0.985,262,2.003,263,1.423,267,1.004,310,1.22,312,1.87,315,0.967,320,0.875,321,1.004,347,2.225,364,0.891,371,1.166,386,2.077,396,1.176,398,1.735,399,1.745,417,1.356,423,1.463,435,1.23,479,0.907,501,1.73,521,0.847,525,0.939,527,0.842,540,0.795,545,1.253,551,2.209,568,4.533,592,2.605,626,2.164,634,0.932,638,1.346,639,1.9,649,1.914,676,1.074,677,1.009,687,1.218,702,0.99,705,0.636,729,1.157,730,1.476,752,1.06,753,0.985,798,1.572,887,1.053,908,1.139,925,1.036,958,1.27,965,0.829,1087,1.148,1103,1.98,1118,4.292,1142,1.317,1151,1.009,1172,1.398,1293,1.881,1306,1.317,1363,1.975,1438,1.317,1440,2.51,1466,1.285,1522,1.56,1599,2.25,1647,2.555,1711,1.56,1846,6.313,2278,1.482,2348,1.1,2370,1.786,2461,1.207,2631,1.451,2818,1.23,2870,2.061,3541,1.398,3777,1.757,3927,1.673,3975,1.398,4384,1.451,5623,1.757,5772,1.423,5796,1.61,5981,1.56,6181,4.294,6546,1.673,6549,1.757,6612,1.885,6613,1.885,6614,1.885]],["component/503",[220,0.615]],["title/504-1",[676,17.814]],["name/504-1",[]],["text/504-1",[]],["component/504-1",[]],["title/504-2",[60,16.431]],["name/504-2",[]],["text/504-2",[]],["component/504-2",[]],["title/504",[24,19.438,103,32.944]],["name/504",[6615,3.92]],["text/504",[20,5.793,22,1.79,24,3.871,40,3.186,45,3.105,60,1.264,77,4.149,95,4.471,103,5.59,137,4.947,162,3.624,168,3.101,212,5.306,341,3.841,392,2.517,398,2.702,501,3.665,626,3.218,676,1.371,876,4.947,925,5.501,1047,5.079,2367,5.079,2870,6.093]],["component/504",[220,0.615]],["title/505-1",[676,17.814]],["name/505-1",[]],["text/505-1",[]],["component/505-1",[]],["title/505-2",[60,16.431]],["name/505-2",[]],["text/505-2",[]],["component/505-2",[]],["title/505",[57,28.307,103,32.944]],["name/505",[6245,3.654]],["text/505",[8,1.975,21,2.172,22,2.437,34,1.576,40,1.394,42,1.422,45,2.148,47,2.181,57,5.629,60,0.772,62,2.735,65,2.04,77,3.514,92,1.86,103,5.069,111,2.506,128,1.861,134,4.279,139,1.472,141,2.278,165,2.368,177,2.321,183,3.012,199,1.915,201,2.393,216,1.533,233,4.196,254,5.104,310,1.579,340,3.1,347,2.138,386,2.559,396,1.522,423,3.714,425,2.333,480,2.538,540,1.846,551,1.494,554,3.806,568,4.566,626,1.786,639,2.341,674,2.626,676,0.837,812,1.808,909,2.522,969,2.147,1049,2.886,1058,2.753,1134,4.974,1340,5.991,1387,3.059,1490,5.104,1855,2.237,2340,3.059,2413,5.576,6246,4.081,6247,4.081]],["component/505",[220,0.615]],["title/506-1",[676,17.814]],["name/506-1",[]],["text/506-1",[]],["component/506-1",[]],["title/506-2",[60,16.431]],["name/506-2",[]],["text/506-2",[]],["component/506-2",[]],["title/506-3",[216,25.746,651,23.799]],["name/506-3",[]],["text/506-3",[]],["component/506-3",[]],["title/506-4",[438,44.096,651,23.799]],["name/506-4",[]],["text/506-4",[]],["component/506-4",[]],["title/506",[23,23.74,24,11.896,285,23.627,392,15.787,625,26.607]],["name/506",[6616,3.92]],["text/506",[11,3.052,16,1.659,22,1.115,23,3.714,24,3.366,27,1.911,33,2.457,34,1.609,45,3.333,49,1.49,60,1.535,61,2.484,62,2.772,65,2.083,71,2.508,77,4.298,95,3.144,96,1.8,108,2.743,116,3.89,143,1.52,162,3.152,228,1.662,246,1.641,262,3.52,285,5.642,310,3.562,347,1.38,365,1.938,392,2.47,417,1.791,459,3.314,515,3.205,518,2.543,527,1.997,545,1.655,555,1.944,624,5.824,625,6.749,626,2.771,642,2.836,651,1.447,655,2.765,676,1.345,702,2.347,708,2.984,864,2.625,965,1.967,1051,2.625,1103,4.247,1118,2.662,1121,2.543,1138,2.294,1270,2.527,1533,2.643,1541,5.753,1595,2.643,2666,2.889,3672,3.699,3700,3.123,5370,5.313,6390,3.818]],["component/506",[220,0.615]],["title/507-1",[676,17.814]],["name/507-1",[]],["text/507-1",[]],["component/507-1",[]],["title/507-2",[60,16.431]],["name/507-2",[]],["text/507-2",[]],["component/507-2",[]],["title/507",[344,35.37,2910,59.201]],["name/507",[6272,3.654]],["text/507",[23,6.541,24,3.531,38,1.835,45,3.846,46,1.557,60,1.09,77,4.462,79,2.667,92,1.662,110,2.528,183,1.751,204,3.057,228,2.3,241,2.923,246,2.272,289,3.766,344,5.612,345,4.037,396,2.15,417,2.478,518,3.519,555,2.69,556,3.203,626,3.445,638,2.46,676,1.182,678,3.346,702,3.248,705,2.088,708,2.623,722,2.789,884,3.96,956,3.329,1270,3.498,1516,4.643,2910,10.755,5423,5.118]],["component/507",[220,0.615]],["title/508-1",[676,17.814]],["name/508-1",[]],["text/508-1",[]],["component/508-1",[]],["title/508-2",[60,16.431]],["name/508-2",[]],["text/508-2",[]],["component/508-2",[]],["title/508",[92,19.751,2911,59.201]],["name/508",[6275,3.347]],["text/508",[19,2.396,20,1.652,22,1.461,23,5.739,24,3.701,40,2.755,45,3.526,60,1.316,61,1.255,76,2.166,77,3.914,92,2.764,93,1.609,95,2.616,99,1.429,105,1.914,131,2.991,138,1.443,169,4.112,183,2.113,219,3.015,228,2.178,236,1.78,246,1.306,262,3.876,264,4.272,291,1.561,310,2.112,312,1.966,347,1.808,392,1.248,398,2.811,417,2.346,420,1.681,499,1.594,515,1.62,518,2.024,540,3.148,555,2.547,626,3.61,639,1.203,676,0.68,702,1.868,708,1.508,721,1.37,730,1.552,830,2.104,916,1.556,956,1.914,1087,2.166,1103,1.529,1270,2.012,1285,1.802,1429,2.865,1671,2.2,1712,3.683,1855,2.993,1898,2.738,2679,5.002,2911,8.285,6275,3.039,6276,3.316,6617,3.558,6618,3.558,6619,3.558]],["component/508",[220,0.615]],["title/509-1",[676,17.814]],["name/509-1",[]],["text/509-1",[]],["component/509-1",[]],["title/509-2",[60,16.431]],["name/509-2",[]],["text/509-2",[]],["component/509-2",[]],["title/509-3",[216,25.746,651,23.799]],["name/509-3",[]],["text/509-3",[]],["component/509-3",[]],["title/509-4",[438,44.096,651,23.799]],["name/509-4",[]],["text/509-4",[]],["component/509-4",[]],["title/509",[24,19.438,959,45.846]],["name/509",[6278,3.478]],["text/509",[22,1.313,24,3.494,33,2.892,40,2.836,45,2.113,49,2.662,51,1.642,60,1.701,62,2.542,65,1.457,71,1.114,77,3.473,82,1.137,93,1.415,95,2.35,116,3.763,125,6,137,2.6,139,1.052,160,1.433,162,3.715,172,2.118,183,2.261,197,2.062,206,1.863,239,3.352,251,1.62,253,3.4,254,1.635,262,2.427,264,1.79,291,3.907,310,2.879,311,1.768,316,3.111,365,1.356,401,1.612,417,3.568,420,3.773,501,3.48,525,1.558,540,2.219,542,2.288,545,3.298,626,2.489,639,1.779,655,1.934,676,1.005,730,3.482,798,4.136,808,1.683,916,1.368,959,7.9,965,1.376,980,4.64,1103,4.149,1118,3.133,1138,2.7,1231,2.776,1285,1.584,1429,2.518,1486,1.728,1595,5.706,2368,2.588,2730,2.671,3156,2.916,3213,3.676,3782,2.518,3955,3.228,3986,3.433,4304,2.588,5151,2.916,5772,2.361,6620,3.128,6621,2.776]],["component/509",[220,0.615]],["title/510-1",[8,10.45,45,16.032,318,11.808,320,23.997]],["name/510-1",[]],["text/510-1",[]],["component/510-1",[]],["title/510-2",[60,16.431]],["name/510-2",[]],["text/510-2",[]],["component/510-2",[]],["title/510",[45,18.829,318,13.868,320,28.184]],["name/510",[45,0.395,75,0.788,318,0.291,320,0.592]],["text/510",[4,2.508,14,3.129,22,1.555,25,2.649,34,3.258,42,3.802,45,4.024,46,1.569,60,2.063,65,2.903,86,3.241,112,4.079,128,2.649,142,3.239,172,2.508,199,2.725,202,3.143,216,2.182,318,1.424,320,4.952,361,2.965,366,3.424,379,2.965,383,3.353,397,4.151,417,2.496,423,2.694,491,3.765,555,2.71,556,3.227,557,3.388,596,3.823,626,1.607,653,4.298,676,1.191,686,4.795,708,2.642,736,3.32,910,3.336,982,3.544,1125,6.7,1541,3.336,1542,4.151,1684,4.795,2732,4.412,2856,6.714,3917,7.118]],["component/510",[220,0.615]],["title/511-1",[8,10.45,45,16.032,318,11.808,321,27.533]],["name/511-1",[]],["text/511-1",[]],["component/511-1",[]],["title/511-2",[60,16.431]],["name/511-2",[]],["text/511-2",[]],["component/511-2",[]],["title/511-3",[66,21.617,91,25.145,535,30.56,1060,34.068]],["name/511-3",[]],["text/511-3",[]],["component/511-3",[]],["title/511",[45,18.829,318,13.868,321,32.336]],["name/511",[45,0.395,75,0.788,318,0.291,321,0.679]],["text/511",[3,0.862,5,0.717,8,1.996,14,3.681,22,2.049,23,1.231,24,2.171,25,1.739,32,1.844,38,0.692,39,1.127,42,3.341,45,3.496,46,1.651,48,1.162,49,0.778,60,1.447,62,1.738,65,1.087,66,5.422,71,0.831,77,0.84,80,2.246,82,1.985,91,1.135,92,0.627,99,0.937,125,2.755,126,2.137,134,2.065,137,2.021,138,0.946,139,2.206,144,1.027,162,3.401,172,0.939,177,1.237,199,1.021,200,1.076,202,2.063,203,1.158,204,1.153,216,0.817,251,1.208,275,1.237,283,1.249,285,2.867,291,2.877,318,0.533,320,2.535,321,5.258,332,1.59,342,1.523,347,1.263,348,1.344,354,2.453,362,1.389,369,1.874,383,1.256,386,2.018,390,1.098,396,1.421,397,1.554,398,0.879,420,1.932,438,1.399,444,1.42,452,1.455,479,1.122,482,2.417,494,4.442,498,1.572,499,2.447,535,2.418,542,1.778,549,1.88,551,1.863,555,1.015,556,1.208,562,1.41,591,1.467,615,1.63,620,2.224,625,1.38,626,1.692,638,2.609,641,1.676,656,1.702,660,1.153,662,2.55,676,0.446,677,1.249,678,1.262,697,1.269,705,0.787,706,4.97,726,2.175,736,1.243,745,1.761,793,5.282,796,2.37,821,2.55,855,2.696,931,1.275,959,1.455,964,1.41,969,2.677,1059,1.42,1060,4.324,1085,2.072,1103,1.758,1137,3.033,1183,1.361,1255,1.652,1285,2.072,1461,1.37,1932,1.652,2366,1.59,2409,1.538,2661,2.669,3918,2.175,3919,2.175,3920,2.175,3923,2.175,3924,2.175,3925,2.175,3926,2.175,3927,2.071,6622,2.333,6623,4.09,6624,2.333]],["component/511",[220,0.615]],["title/512-1",[676,17.814]],["name/512-1",[]],["text/512-1",[]],["component/512-1",[]],["title/512-2",[14,20.977,42,19.714,1659,33.919]],["name/512-2",[]],["text/512-2",[]],["component/512-2",[]],["title/512-3",[60,16.431]],["name/512-3",[]],["text/512-3",[]],["component/512-3",[]],["title/512",[14,20.977,42,19.714,45,18.829]],["name/512",[14,0.568,42,0.534,45,0.51]],["text/512",[2,3.268,5,1.318,8,1.952,14,4.806,16,1.592,22,2.628,38,1.273,39,2.072,40,1.366,42,4.408,45,4.21,46,1.08,49,1.43,60,1.702,61,2.405,64,2.73,66,1.795,80,3.306,115,1.753,138,2.764,143,1.458,144,1.888,160,1.966,168,2.946,236,2.146,272,2.52,315,2.202,317,1.099,318,2.787,320,1.992,321,2.286,347,2.104,365,1.86,386,2.518,389,1.616,396,2.368,398,2.567,452,2.675,521,1.928,554,2.358,556,2.222,568,2.006,597,2.321,626,2.49,651,1.389,676,2.013,678,2.321,965,3.73,969,2.104,1268,3.238,1680,3.129,2732,3.038,3928,3.999]],["component/512",[220,0.615]],["title/513-1",[4,29.598,2045,54.515]],["name/513-1",[]],["text/513-1",[]],["component/513-1",[]],["title/513-2",[8,14.867,46,18.508]],["name/513-2",[]],["text/513-2",[]],["component/513-2",[]],["title/513-3",[5,22.593,8,14.867]],["name/513-3",[]],["text/513-3",[]],["component/513-3",[]],["title/513-4",[5,13.827,24,11.896,257,31.433,329,19.977,6625,41.945]],["name/513-4",[]],["text/513-4",[]],["component/513-4",[]],["title/513-5",[40,19.323,46,15.279,328,19.747]],["name/513-5",[]],["text/513-5",[]],["component/513-5",[]],["title/513",[46,13.009,257,36.103,326,26.069,328,16.814]],["name/513",[46,0.414,326,0.829,328,0.535]],["text/513",[0,2.551,2,0.939,3,1.119,5,3.516,6,1.575,8,2.579,9,1.829,14,1.046,15,2.714,22,2.651,24,2.672,35,2.273,38,0.898,40,2.783,42,0.983,46,3.037,48,1.509,49,1.009,71,1.079,76,1.843,106,1.336,110,1.237,121,1.766,131,4.232,135,1.485,153,5.323,159,1.509,160,1.387,168,3.381,189,2.51,198,1.357,213,1.673,216,1.793,232,1.803,247,1.446,248,1.989,250,1.843,257,6.108,274,2.472,310,1.846,326,5.358,328,3.288,329,1.344,369,1.387,375,1.638,381,3.166,389,2.505,390,2.41,398,1.14,401,2.639,424,1.496,444,1.843,499,1.357,522,1.582,535,3.027,542,1.317,554,1.664,568,2.394,626,1.715,676,0.579,689,1.34,721,1.166,725,1.976,749,1.683,774,2.33,809,3.677,972,3.864,988,1.858,1073,1.692,1096,2.088,1218,5.118,1231,1.598,1259,1.755,1261,2.245,1288,1.904,1544,2.063,1548,2.381,1992,2.115,2265,2.04,2366,2.063,2897,3.448,3034,2.505,3366,3.531,3552,2.586,3588,2.823,5962,4.372,6625,4.772,6626,3.028,6627,2.823,6628,5.12,6629,3.028,6630,3.028,6631,3.028,6632,3.028]],["component/513",[220,0.615]],["title/514-1",[1084,63.523]],["name/514-1",[]],["text/514-1",[]],["component/514-1",[]],["title/514-2",[78,34.025,423,31.788]],["name/514-2",[]],["text/514-2",[]],["component/514-2",[]],["title/514-3",[49,20.231,162,21.973,1486,33.54]],["name/514-3",[]],["text/514-3",[]],["component/514-3",[]],["title/514-4",[4,29.598,134,27.811]],["name/514-4",[]],["text/514-4",[]],["component/514-4",[]],["title/514-5",[8,9.098,49,14.998,381,27.828,444,27.393,1507,22.417]],["name/514-5",[]],["text/514-5",[]],["component/514-5",[]],["title/514-6",[42,23.88,49,24.506]],["name/514-6",[]],["text/514-6",[]],["component/514-6",[]],["title/514-7",[141,23.407,312,24.864,553,22.892,2778,32.321,6633,41.945]],["name/514-7",[]],["text/514-7",[]],["component/514-7",[]],["title/514",[49,24.506,444,44.759]],["name/514",[49,0.772,444,1.41]],["text/514",[0,0.391,3,2.892,4,2.359,5,1.015,8,2.402,9,0.475,10,0.37,11,1.193,14,0.951,16,0.557,21,1.365,22,2.009,24,2.128,25,1.17,26,0.396,27,1.411,34,0.54,39,1.04,40,1.502,41,1.079,42,2.749,45,1.818,46,1.386,47,0.747,48,0.391,49,3.165,52,0.643,57,1.817,60,0.97,61,1.165,62,1.363,63,0.711,64,1.102,66,3.456,67,0.716,68,0.706,69,0.498,74,1.746,80,1.885,82,0.782,93,0.679,94,0.439,96,0.316,99,0.316,102,0.96,103,0.352,105,0.423,110,0.88,128,0.334,131,3.829,133,0.373,134,2.573,138,0.873,139,1.587,141,2.454,143,0.267,150,0.843,157,2.942,159,0.391,162,1.993,163,0.306,167,0.542,168,0.931,169,0.645,172,0.867,179,1.98,189,0.813,196,0.417,198,0.965,199,0.942,208,1.418,220,0.164,221,0.65,236,0.393,239,0.738,242,0.593,248,1.283,253,0.508,254,0.411,264,0.45,270,1.354,272,0.461,273,0.439,274,0.379,285,0.788,291,0.345,292,0.556,294,0.432,299,0.377,300,0.76,304,0.564,310,0.541,312,1.19,313,0.444,317,0.552,319,0.834,325,0.887,332,0.535,334,1.062,339,0.65,340,0.556,347,1.176,364,1.3,367,0.423,369,0.687,378,1.125,381,3.17,383,0.423,386,0.554,389,1.036,390,0.706,396,1.324,398,0.296,399,0.405,404,0.498,408,0.395,410,0.535,416,0.409,417,0.601,423,0.649,424,0.741,425,1.147,426,0.763,429,0.401,430,0.396,435,0.513,436,1.19,444,4.141,445,0.593,452,0.49,454,0.535,469,0.671,472,0.556,474,0.671,482,1.218,501,0.401,512,0.465,513,1.125,518,0.447,519,0.396,535,0.887,537,1.761,540,0.331,542,2.229,545,0.291,548,0.564,549,0.99,551,1.3,553,1.938,555,0.342,556,0.407,557,0.427,558,0.928,560,0.77,565,0.429,568,1.286,589,1.496,591,0.494,594,0.605,595,0.427,597,0.425,598,0.549,622,0.437,626,1.322,638,0.597,641,0.564,645,0.396,647,0.535,660,1.064,676,0.526,689,0.664,697,0.427,700,0.529,708,0.333,722,0.676,724,0.468,734,0.736,746,0.935,749,0.437,752,0.442,866,0.671,868,0.999,884,1.761,885,4.082,892,1.062,908,0.475,909,0.452,911,0.564,916,0.344,922,0.633,931,0.429,955,0.494,967,0.674,969,0.385,1000,0.444,1001,0.824,1004,1.391,1006,1.485,1010,0.92,1023,1.281,1060,0.518,1103,0.338,1118,0.468,1147,0.523,1183,0.875,1187,0.349,1195,1.434,1248,0.529,1256,1.281,1285,0.398,1298,0.461,1334,0.947,1335,0.605,1349,1.179,1351,0.618,1352,0.573,1396,0.564,1404,2.662,1405,0.697,1406,0.437,1427,0.518,1489,1.948,1493,1.062,1507,0.747,1525,0.573,1548,2.163,1549,1.57,1550,0.671,1561,0.697,1568,0.671,1569,1.331,1570,1.281,1571,1.281,1572,2.276,1573,7.451,1578,0.732,1579,1.062,1585,2.917,1591,0.523,1599,0.384,1601,1.733,1610,1.078,1694,0.549,1713,0.65,1909,0.486,1911,1.331,1938,0.583,1971,0.486,1990,0.671,1991,0.732,2046,0.605,2062,1.062,2201,0.593,2268,0.573,2270,0.518,2280,1.398,2290,0.732,2292,0.732,2293,0.732,2294,0.732,2300,1.398,2308,0.732,2309,0.732,2311,0.732,2313,0.732,2354,0.542,2407,0.65,2539,1.398,2541,0.732,2542,0.732,2544,0.732,2547,0.732,2551,0.732,2778,2.372,2877,0.564,2880,2.408,3049,0.697,3086,0.697,3112,0.618,3216,0.573,3464,0.732,3497,0.697,3602,0.732,4359,0.697,5566,0.732,6633,1.398,6634,0.786,6635,0.786,6636,0.786,6637,1.5,6638,0.786,6639,0.786,6640,0.786,6641,1.5,6642,1.5,6643,0.786,6644,0.786,6645,0.786,6646,0.786,6647,0.786,6648,0.786,6649,0.786,6650,0.786,6651,0.786,6652,0.786,6653,0.786,6654,0.786,6655,0.786,6656,2.153,6657,0.786,6658,0.786,6659,2.153,6660,0.786,6661,0.786,6662,0.786,6663,0.786,6664,0.786,6665,0.786,6666,0.786,6667,0.786,6668,0.786,6669,0.786,6670,0.786,6671,0.786,6672,0.786,6673,0.786,6674,0.786,6675,0.786,6676,0.786,6677,0.786,6678,0.786,6679,3.81,6680,0.786,6681,0.618,6682,0.786,6683,0.786,6684,0.786,6685,0.786,6686,0.786,6687,0.786,6688,0.786,6689,1.5,6690,0.786,6691,1.5,6692,0.786,6693,0.786,6694,0.786,6695,0.786,6696,0.786,6697,0.786,6698,0.786,6699,2.751,6700,0.786,6701,1.398,6702,0.786,6703,2.153,6704,0.786,6705,0.786,6706,0.786,6707,0.786,6708,0.786,6709,0.786,6710,0.786,6711,0.786,6712,0.786,6713,0.786,6714,0.786,6715,0.786,6716,0.786]],["component/514",[220,0.348,3029,1.179]],["title/515",[389,27.691,416,38.247]],["name/515",[389,0.872,416,1.205]],["text/515",[]],["component/515",[220,0.348,3029,1.179]],["title/516-1",[1340,45.108,6717,73.528]],["name/516-1",[]],["text/516-1",[]],["component/516-1",[]],["title/516-2",[67,28.986,962,32.336,6718,60.7]],["name/516-2",[]],["text/516-2",[]],["component/516-2",[]],["title/516-3",[412,44.096,4126,57.803]],["name/516-3",[]],["text/516-3",[]],["component/516-3",[]],["title/516",[8,12.273,643,34.955,3422,48.873]],["name/516",[8,0.332,643,0.947,3422,1.323]],["text/516",[6719,12.548]],["component/516",[220,0.348,3029,1.179]],["title/517",[383,39.564,385,37.901]],["name/517",[385,2.02]],["text/517",[8,2.706,49,3.742,389,4.229,416,5.841,444,6.835,643,6.466,3422,9.041,6279,9.29]],["component/517",[220,0.348,3029,1.179]],["title/518-1",[7,59.681]],["name/518-1",[]],["text/518-1",[]],["component/518-1",[]],["title/518-2",[14,32.218]],["name/518-2",[]],["text/518-2",[]],["component/518-2",[]],["title/518-3",[318,21.3]],["name/518-3",[]],["text/518-3",[]],["component/518-3",[]],["title/518-4",[404,59.142]],["name/518-4",[]],["text/518-4",[]],["component/518-4",[]],["title/518",[8,9.098,665,35.375,968,36.231,1414,28.058,4278,31.433]],["name/518",[8,0.332,665,1.292,1414,1.025]],["text/518",[3,1.932,5,3.143,8,2.402,10,1.462,11,1.346,12,1.638,14,3.323,15,1.646,23,1.638,35,3.938,38,1.551,41,1.218,42,2.581,45,2.101,46,2.001,49,1.035,51,1.63,66,2.187,67,1.483,69,3.318,74,1.423,75,1.92,76,1.89,77,2.438,78,1.437,80,1.063,81,2.116,83,2.974,92,1.82,93,1.404,106,1.37,109,1.615,131,0.971,134,1.175,135,2.564,144,1.366,155,5.578,160,1.423,208,1.601,224,2.116,225,2.126,248,2.032,255,1.247,317,1.736,318,1.195,321,1.654,323,1.007,324,1.002,326,1.566,328,1.01,329,3.007,353,2.092,375,1.679,386,1.932,404,3.318,423,1.342,424,1.534,438,1.862,524,2.007,537,1.988,543,2.441,553,3.446,601,2.199,725,3.412,746,6.697,748,2.142,808,1.671,880,2.389,902,2.756,944,2.756,962,1.654,1085,1.573,1118,1.849,1136,3.756,1188,2.389,1258,2.389,1372,2.5,1414,4.956,1415,2.441,1495,2.344,1591,2.069,1608,6.576,1610,9.227,1624,2.652,1649,2.344,2734,2.265,3726,2.894,4022,4.024,4378,2.5,6127,2.894,6320,2.756,6516,2.756,6720,2.894,6721,2.894,6722,6.774,6723,7.948,6724,3.105,6725,3.105,6726,3.105,6727,3.105,6728,3.105,6729,3.105,6730,3.105,6731,2.894,6732,5.23,6733,3.105,6734,3.105,6735,3.105,6736,2.894,6737,2.894,6738,2.894,6739,2.894,6740,2.894,6741,3.105]],["component/518",[220,0.348,3029,1.179]],["title/519-1",[8,18.85]],["name/519-1",[]],["text/519-1",[]],["component/519-1",[]],["title/519-2",[7,59.681]],["name/519-2",[]],["text/519-2",[]],["component/519-2",[]],["title/519-3",[248,28.565,329,32.642]],["name/519-3",[]],["text/519-3",[]],["component/519-3",[]],["title/519",[38,13.347,227,25.291,338,25.003,1188,34.627,1414,28.058]],["name/519",[338,1.287,1414,1.444]],["text/519",[0,1.999,3,3.232,4,2.601,5,1.65,8,2.519,10,1.889,11,1.74,14,1.855,16,2.397,22,0.57,24,0.604,35,3.266,38,1.19,39,3.553,40,0.727,42,2.841,45,1.665,46,1.626,48,1.999,60,0.402,66,0.955,71,1.43,77,0.822,88,3.031,92,1.442,93,1.033,110,1.64,112,0.873,115,1.64,121,1.332,123,1.476,132,5.345,135,1.12,144,1.766,154,4.175,157,1.424,160,1.046,177,1.21,184,1.665,194,1.332,196,1.21,201,1.248,225,0.928,227,4.135,232,1.36,233,1.115,244,2.128,248,2.859,254,1.193,283,2.149,284,1.665,291,2.355,294,1.255,296,1.595,301,1.889,308,2.643,317,0.585,318,0.522,323,0.74,324,0.737,326,1.152,328,0.743,329,1.782,337,4.636,351,1.95,365,2.328,367,1.229,371,1.412,375,1.235,386,0.844,388,3.231,389,1.511,391,1.138,392,2.581,395,1.401,396,0.794,397,1.521,398,0.86,402,1.49,404,1.449,409,1.49,410,1.556,412,1.369,416,1.188,417,0.915,432,1.043,433,1.665,449,2.026,476,4.221,478,1.95,499,4.164,524,1.476,525,1.999,537,2.569,555,0.993,559,2.128,562,1.38,582,1.665,620,1.241,631,1.538,638,0.908,645,2.708,725,3.503,751,4.323,849,1.449,902,2.026,911,1.64,916,0.999,929,1.49,967,1.026,1004,3.47,1018,1.38,1148,1.757,1155,1.617,1174,1.505,1196,1.95,1249,1.95,1257,4.063,1259,2.326,1414,2.502,1415,1.795,1507,2.675,1544,2.735,1661,3.029,1697,1.95,1877,1.757,1983,3.561,2264,1.795,2388,3.561,2409,1.505,2696,1.95,2725,5.005,3446,1.665,3473,2.128,3915,2.128,4022,1.757,4378,5.202,6279,3.32,6608,2.128,6720,2.128,6721,2.128,6731,2.128,6742,4.013,6743,2.283,6744,2.283,6745,2.026,6746,2.283,6747,2.283,6748,2.283,6749,2.283,6750,1.889,6751,2.283,6752,2.128,6753,2.283,6754,5.369,6755,2.283,6756,4.013,6757,2.283,6758,2.283,6759,2.283,6760,2.283,6761,3.741,6762,2.283,6763,2.283,6764,2.283]],["component/519",[220,0.348,3029,1.179]],["title/520-1",[1,43.476,247,35.112]],["name/520-1",[]],["text/520-1",[]],["component/520-1",[]],["title/520-2",[447,35.112,465,50.099]],["name/520-2",[]],["text/520-2",[]],["component/520-2",[]],["title/520-3",[962,49.665]],["name/520-3",[]],["text/520-3",[]],["component/520-3",[]],["title/520",[3,14.722,8,8.056,247,19.028,248,15.48,1414,24.845,1415,31.324]],["name/520",[3,0.607,247,0.785,1414,1.025]],["text/520",[1,3.091,3,4.349,5,2.211,8,2.421,14,1.346,22,0.972,24,2.917,27,0.943,38,1.155,39,1.066,40,0.702,45,0.685,46,0.555,49,0.735,54,1.248,60,0.921,61,1.374,62,2.007,63,1.046,64,1.56,77,0.794,88,1.827,92,2.306,110,0.902,112,4.106,131,0.69,134,1.977,135,3.528,142,4.131,143,2.446,154,1.426,156,3.945,162,3.479,198,0.989,200,1.018,216,0.773,227,2.189,247,6.324,248,2.45,260,1.287,274,1.88,283,2.085,291,0.968,310,0.796,313,1.248,319,1.226,337,2.064,361,1.05,363,1.665,365,1.688,375,1.194,389,0.831,390,1.039,392,0.774,399,1.137,420,1.042,435,1.44,436,1.219,447,1.054,465,1.504,481,2.14,484,1.885,494,2.106,521,0.992,524,1.426,525,1.94,526,1.636,527,0.986,540,1.642,542,3.732,555,1.693,582,1.609,626,1.004,638,0.878,676,0.422,703,1.099,715,1.504,721,1.499,725,5.601,835,1.562,837,3.853,849,1.4,928,4.2,964,2.353,967,0.992,969,1.082,1060,1.455,1166,1.636,1172,1.636,1188,2.997,1231,1.164,1285,1.118,1414,1.376,1415,1.735,1449,4.324,1533,2.303,1610,3.754,1664,1.777,1665,1.562,1670,1.354,1680,1.609,1858,3.222,2036,1.777,2203,4.638,2204,4.638,2205,4.638,2354,1.522,2367,1.562,2475,1.698,2555,2.057,2798,1.958,3869,1.958,4022,1.698,4029,1.777,4818,2.057,4848,2.057,6279,7.952,6280,2.057,6281,2.057,6752,2.057,6761,4.872,6765,2.207]],["component/520",[220,0.348,3029,1.179]],["title/521",[8,12.273,665,47.718,1414,37.848]],["name/521",[385,2.02]],["text/521",[3,3.814,7,3.769,8,2.834,16,2.185,22,1.469,32,2.655,38,1.746,39,2.843,155,3.703,163,2.293,180,2.791,224,4.012,227,3.309,233,2.876,247,4.929,252,5.488,274,2.843,338,3.272,365,2.553,383,3.168,389,3.271,391,2.933,392,2.066,484,5.028,510,4.294,514,4.531,540,3.663,665,6.829,689,2.606,955,3.703,965,2.59,967,3.904,1095,3.168,1166,4.365,1188,4.531,1313,4.061,1411,5.225,1414,7.105,1459,4.741,1662,4.531,1882,4.444,1971,3.641,2798,5.225,4278,4.113,5405,5.488,5599,4.871,6279,10.521,6766,5.028,6767,8.687,6768,5.888,6769,5.888,6770,5.488]],["component/521",[220,0.348,3029,1.179]],["title/522-1",[1084,63.523]],["name/522-1",[]],["text/522-1",[]],["component/522-1",[]],["title/522-2",[6771,82.733]],["name/522-2",[]],["text/522-2",[]],["component/522-2",[]],["title/522-3",[1901,67.995]],["name/522-3",[]],["text/522-3",[]],["component/522-3",[]],["title/522-4",[57,28.307,862,48.981]],["name/522-4",[]],["text/522-4",[]],["component/522-4",[]],["title/522-5",[20,34.14,57,28.307]],["name/522-5",[]],["text/522-5",[]],["component/522-5",[]],["title/522",[57,35.892]],["name/522",[57,0.892,224,1.578]],["text/522",[7,4.836,8,1.527,20,3.508,37,4.936,42,2.453,57,5.318,85,3.704,88,3.544,130,3.948,135,3.704,144,3.324,160,3.461,163,2.942,216,2.645,224,5.147,248,4.031,289,4.599,291,3.314,292,5.349,554,4.151,618,6.082,954,5.939,967,3.395,1249,6.451,1651,5.813,1694,5.277,1901,7.567,1971,4.672,2870,4.599,6771,9.207,6772,7.041,6773,6.704,6774,6.451,6775,6.704,6776,7.041,6777,6.704,6778,7.041]],["component/522",[220,0.348,3029,1.179]],["title/523",[1084,63.523]],["name/523",[57,0.892,225,0.942]],["text/523",[64,4.498,88,5.268,139,3.776,225,4.565,291,4.925,1244,7.327,4191,9.589,6779,11.229,6780,11.229]],["component/523",[220,0.348,3029,1.179]],["title/524-1",[1084,63.523]],["name/524-1",[]],["text/524-1",[]],["component/524-1",[]],["title/524",[57,28.307,6781,65.249]],["name/524",[57,0.892,6781,2.055]],["text/524",[8,1.726,20,3.963,42,2.772,57,5.366,71,3.041,74,3.911,85,4.185,138,3.462,160,3.911,163,3.324,198,3.824,379,4.061,424,4.218,519,4.305,609,4.797,618,6.872,956,4.593,1660,6.329,1694,5.962,1901,6.225,1971,5.278,2397,5.047,6007,7.956,6773,7.575,6774,7.29,6777,7.575,6778,7.956,6781,7.575,6782,8.536]],["component/524",[220,0.348,3029,1.179]],["title/525-1",[295,59.142]],["name/525-1",[]],["text/525-1",[]],["component/525-1",[]],["title/525-2",[318,21.3]],["name/525-2",[]],["text/525-2",[]],["component/525-2",[]],["title/525-3",[1591,62.106]],["name/525-3",[]],["text/525-3",[]],["component/525-3",[]],["title/525-4",[5,28.646]],["name/525-4",[]],["text/525-4",[]],["component/525-4",[]],["title/525-5",[225,37.903]],["name/525-5",[]],["text/525-5",[]],["component/525-5",[]],["title/525",[389,27.691,416,38.247]],["name/525",[389,0.872,416,1.205]],["text/525",[0,3.932,2,2.448,3,1.135,5,0.944,8,2.502,17,3.154,18,2.277,21,1.524,22,0.766,35,2.984,38,1.537,42,0.998,45,2.085,46,1.692,48,1.53,49,2.938,57,1.183,66,2.167,67,1.467,70,5.697,77,1.105,88,1.441,92,0.825,97,1.9,112,1.982,129,2.683,131,3.79,135,1.506,139,1.033,155,1.932,156,2.382,163,1.196,167,2.118,194,1.792,195,1.792,209,1.884,215,2.364,216,1.076,225,3.887,250,4.091,251,1.591,283,1.645,291,1.347,294,1.688,295,4.264,318,0.702,378,1.605,391,1.53,414,1.737,436,1.697,471,2.093,525,1.53,544,2.318,547,1.394,557,1.67,581,2.966,597,1.661,609,1.726,620,1.67,626,0.792,639,1.038,749,1.707,862,2.046,916,1.343,986,2.623,1058,1.932,1077,7.108,1100,2.623,1132,2.277,1148,2.364,1248,2.069,1262,2.118,1308,1.621,1400,2.623,1486,1.697,1515,1.842,1589,2.726,1592,2.473,1645,1.932,1675,1.932,1702,2.046,1705,2.541,1882,2.318,1918,2.623,2033,1.804,2194,2.863,2275,4.599,2697,2.473,2734,2.24,3079,4.287,3778,2.541,4029,5.412,5477,2.623,5650,2.541,5965,2.726,6198,2.623,6201,2.863,6771,2.726,6772,2.863,6774,2.623,6775,2.726,6783,4.426,6784,3.072,6785,3.072,6786,3.072,6787,3.072,6788,3.072,6789,3.072,6790,3.072,6791,3.072,6792,3.072,6793,2.726,6794,2.863,6795,3.072,6796,3.072,6797,3.072,6798,3.072,6799,3.072,6800,3.072,6801,3.072,6802,3.072,6803,3.072,6804,3.072,6805,3.072,6806,3.072,6807,3.072,6808,3.072,6809,3.072,6810,3.072,6811,3.072,6812,3.072,6813,3.072,6814,3.072,6815,3.072,6816,3.072,6817,3.072,6818,3.072,6819,3.072,6820,3.072,6821,3.072,6822,2.623]],["component/525",[145,0.971,220,0.348]],["title/526",[383,39.564,385,37.901]],["name/526",[385,2.02]],["text/526",[4,3.817,5,2.914,24,2.507,39,5.823,40,3.019,41,3.718,198,4.249,225,5.857,227,5.33,347,2.928,389,3.571,416,4.933,1001,5.211,1334,4.172,1414,5.913,1465,7.031,6793,8.416,6823,8.099]],["component/526",[145,0.971,220,0.348]],["title/527-1",[3,19.096,41,20.265,299,24.771,540,21.792]],["name/527-1",[]],["text/527-1",[]],["component/527-1",[]],["title/527-2",[3,22.428,299,29.092,398,22.86]],["name/527-2",[]],["text/527-2",[]],["component/527-2",[]],["title/527-3",[41,23.801,42,19.714,320,28.184]],["name/527-3",[]],["text/527-3",[]],["component/527-3",[]],["title/527-4",[444,44.759,2278,57.803]],["name/527-4",[]],["text/527-4",[]],["component/527-4",[]],["title/527-5",[41,28.83,553,37.404]],["name/527-5",[]],["text/527-5",[]],["component/527-5",[]],["title/527-6",[392,25.795,729,45.108]],["name/527-6",[]],["text/527-6",[]],["component/527-6",[]],["title/527-7",[3,19.096,134,19.549,347,15.956,845,39.771]],["name/527-7",[]],["text/527-7",[]],["component/527-7",[]],["title/527",[41,28.83,227,41.326]],["name/527",[41,0.908,227,1.302]],["text/527",[3,3.67,4,0.571,8,1.532,10,1.23,16,0.526,20,0.659,22,2.269,23,0.748,24,0.961,25,1.545,26,1.318,31,1.877,34,1.624,35,1.613,37,3.811,40,1.682,41,4.7,42,2.846,45,2.821,46,1.786,49,1.505,51,0.745,52,0.608,57,2.034,60,0.25,64,1.047,65,0.661,68,0.668,77,0.94,80,0.486,84,0.648,85,1.281,86,1.89,87,0.87,88,1.704,91,1.768,92,0.381,95,0.634,96,1.052,99,0.57,102,1.673,109,0.738,123,0.917,131,4.128,134,1.998,139,0.477,143,1.235,154,0.917,162,1.315,163,1.758,168,0.613,177,0.752,180,0.673,189,1.704,199,0.62,200,0.654,203,0.704,204,1.291,213,0.784,216,0.915,217,0.812,220,0.296,227,4.723,239,0.698,241,0.67,242,1.071,246,0.96,247,0.677,248,2.052,262,0.505,274,0.685,275,0.752,299,1.741,304,1.877,308,1.286,310,2.149,315,1.341,317,0.67,318,0.324,320,2.096,347,0.438,378,1.366,389,1.368,390,0.668,391,0.707,392,0.917,396,0.493,398,0.984,399,2.327,402,2.371,407,1.019,409,0.926,410,0.967,411,1.071,414,0.802,423,1.571,426,0.722,444,2.748,445,1.071,460,0.991,461,1.092,491,0.857,494,0.767,529,3.041,535,0.839,540,0.598,542,0.617,545,0.968,549,0.652,551,0.892,553,3.854,555,0.617,571,0.78,601,1.004,607,0.945,615,0.991,623,0.812,625,0.839,626,1.362,638,1.039,689,0.628,708,0.601,722,1.178,734,1.281,736,0.756,741,0.956,744,0.793,748,0.978,775,0.926,826,0.926,829,0.9,845,1.092,916,1.143,958,2.447,964,0.857,965,0.624,967,0.638,982,0.807,1018,0.857,1020,0.935,1102,1.259,1119,1.115,1121,0.807,1128,2.232,1134,1.019,1138,0.728,1147,0.945,1172,1.052,1177,0.9,1187,0.63,1244,0.926,1254,1.174,1259,0.822,1285,0.719,1290,0.926,1308,1.379,1313,0.978,1334,1.15,1466,0.967,1493,1.004,1515,0.851,1537,1.259,1541,0.76,1584,1.545,1591,0.945,1694,0.991,1716,1.174,1855,1.856,1856,1.052,1878,3.482,2035,2.688,2237,0.917,2245,2.319,2278,2.856,2342,1.259,2651,0.9,2662,1.259,2866,0.967,2880,1.035,2983,2.104,3302,0.991,3962,1.092,4719,5.712,5650,1.174,5815,1.142,6459,1.322,6681,2.055,6750,3.006,6824,1.322,6825,1.419,6826,1.419,6827,2.055,6828,1.419,6829,2.613,6830,1.419,6831,1.419,6832,1.419,6833,1.419,6834,1.419,6835,1.419,6836,1.419,6837,1.419,6838,2.613,6839,1.419,6840,1.419,6841,3.633,6842,4.514,6843,3.633,6844,1.419,6845,5.283,6846,1.419,6847,4.514,6848,1.419,6849,1.419,6850,1.419,6851,1.419,6852,1.419,6853,3.633,6854,1.419,6855,1.419,6856,1.419,6857,1.419,6858,1.259,6859,1.259,6860,1.212,6861,1.212,6862,1.259,6863,1.259,6864,1.259,6865,1.174]],["component/527",[145,0.971,220,0.348]],["title/528-1",[1084,63.523]],["name/528-1",[]],["text/528-1",[]],["component/528-1",[]],["title/528-2",[70,33.397,88,24.246,291,22.671,499,23.157]],["name/528-2",[]],["text/528-2",[]],["component/528-2",[]],["title/528-3",[14,32.218]],["name/528-3",[]],["text/528-3",[]],["component/528-3",[]],["title/528-4",[70,47.513,812,30.353]],["name/528-4",[]],["text/528-4",[]],["component/528-4",[]],["title/528-5",[88,34.493,424,36.335]],["name/528-5",[]],["text/528-5",[]],["component/528-5",[]],["title/528-6",[880,71.74]],["name/528-6",[]],["text/528-6",[]],["component/528-6",[]],["title/528-7",[70,47.513,747,60.833]],["name/528-7",[]],["text/528-7",[]],["component/528-7",[]],["title/528-8",[4287,86.901]],["name/528-8",[]],["text/528-8",[]],["component/528-8",[]],["title/528-9",[22,18.346,70,47.513]],["name/528-9",[]],["text/528-9",[]],["component/528-9",[]],["title/528-10",[70,47.513,1187,32.642]],["name/528-10",[]],["text/528-10",[]],["component/528-10",[]],["title/528-11",[88,34.493,2944,65.249]],["name/528-11",[]],["text/528-11",[]],["component/528-11",[]],["title/528-12",[299,29.092,320,28.184,398,22.86]],["name/528-12",[]],["text/528-12",[]],["component/528-12",[]],["title/528",[8,14.867,6823,62.794]],["name/528",[6823,3.347]],["text/528",[0,1.294,2,0.437,4,1.454,6,0.733,8,2.096,14,0.898,22,2.407,24,1.868,25,1.536,26,1.31,28,1.712,34,0.935,35,2.334,37,0.671,39,1.744,40,0.827,41,0.553,42,0.844,49,0.47,54,0.797,60,0.248,64,0.565,69,0.894,70,7.652,71,0.502,72,0.817,76,2.199,82,1.632,88,3.54,105,0.758,110,1.061,111,1.486,131,2.731,134,0.982,138,1.821,139,1.768,162,0.51,163,1.749,168,1.941,177,1.377,179,0.845,180,1.232,189,0.532,190,0.96,194,1.515,198,2.355,199,0.616,204,0.696,217,0.807,225,0.573,233,0.688,234,2.122,241,1.227,248,1.009,251,2.722,274,1.254,275,0.747,279,0.92,281,1.606,283,0.755,285,1.364,291,2.306,310,0.508,311,1.469,315,0.723,317,0.666,320,3.705,337,0.747,338,1.443,347,1.115,359,1.028,361,0.671,362,0.839,365,0.611,378,2.347,389,0.978,390,1.701,391,1.294,393,0.822,395,2.216,396,2.061,398,0.531,399,0.726,401,1.339,402,0.92,403,1.839,408,1.815,409,0.92,410,0.96,418,0.998,424,0.696,436,0.779,437,0.851,471,0.96,479,0.678,494,1.405,498,0.949,499,1.164,520,2.136,524,1.679,526,1.045,527,1.16,555,0.613,556,1.345,557,1.412,601,0.998,609,3.67,620,0.766,622,0.783,623,2.068,633,1.477,638,1.786,645,1.822,654,2.042,660,1.785,663,0.911,687,0.911,699,0.911,702,1.364,710,0.972,721,2.284,722,1.629,724,1.547,730,1.576,731,0.902,739,0.894,740,1.045,741,0.949,746,0.879,761,1.679,762,1.814,808,0.758,812,2.17,862,0.939,879,1.108,880,1.999,882,1.045,916,0.616,956,2.416,959,0.879,967,0.633,982,0.802,988,0.865,1020,0.929,1058,0.886,1095,0.758,1106,1.866,1107,2.218,1115,1.028,1125,0.807,1131,0.911,1163,1.064,1174,1.712,1177,0.894,1187,4.282,1226,1.515,1259,0.817,1262,0.972,1275,0.911,1285,0.714,1308,0.744,1313,0.972,1413,5.134,1418,3.206,1420,2.305,1490,3.692,1491,1.012,1492,1.251,1499,1.012,1520,1.108,1589,1.251,1639,1.166,1642,2.218,1669,4.489,1679,0.92,1689,1.204,1695,1.135,1879,0.788,2035,0.839,2182,2.042,2250,2.421,2255,1.204,2265,2.433,2330,0.872,2369,0.984,2410,0.972,2479,1.251,2481,2.042,2490,1.166,2524,1.204,2651,0.894,2944,1.251,3216,5.153,3302,0.984,3366,0.972,3503,1.084,3512,1.251,3601,0.984,3778,1.166,3975,1.045,4101,1.314,4266,1.166,4519,1.314,5488,1.251,5742,1.314,5821,1.314,5862,1.251,6681,2.042,6793,5.264,6794,1.314,6823,1.204,6861,1.204,6866,1.409,6867,1.409,6868,4.491,6869,1.409,6870,1.409,6871,2.598,6872,4.491,6873,1.409,6874,1.409,6875,1.409,6876,1.409,6877,1.314,6878,1.409,6879,1.409,6880,2.598,6881,1.409,6882,1.409,6883,1.409,6884,2.598,6885,1.409,6886,1.409,6887,1.409,6888,1.314,6889,1.204,6890,1.409,6891,1.409,6892,1.409,6893,1.409,6894,1.409,6895,1.409,6896,2.598,6897,1.409,6898,1.409,6899,1.409,6900,1.409,6901,2.305,6902,1.409,6903,1.409]],["component/528",[145,0.971,220,0.348]],["title/529-1",[880,56.58,6904,65.249]],["name/529-1",[]],["text/529-1",[]],["component/529-1",[]],["title/529-2",[5,22.593,63,34.859]],["name/529-2",[]],["text/529-2",[]],["component/529-2",[]],["title/529-3",[5,15.881,222,34.429,522,27.009,609,29.048]],["name/529-3",[]],["text/529-3",[]],["component/529-3",[]],["title/529-4",[1313,50.71,1879,41.087]],["name/529-4",[]],["text/529-4",[]],["component/529-4",[]],["title/529-5",[5,22.593,6905,68.537]],["name/529-5",[]],["text/529-5",[]],["component/529-5",[]],["title/529",[5,22.593,225,29.893]],["name/529",[5,0.712,225,0.942]],["text/529",[2,2.053,5,3.462,6,1.811,8,1.338,16,0.722,19,1.31,21,1.727,22,2.359,24,0.514,35,2.554,37,2.737,38,1.402,40,1.504,41,0.763,49,0.648,53,3.402,60,0.343,61,0.686,62,0.619,63,2.24,69,4.198,71,0.693,85,1.707,88,0.913,100,1.127,103,0.872,105,1.047,110,0.795,120,1.203,124,0.985,131,3.764,134,0.736,135,5.63,136,1.326,137,1.72,139,1.935,148,1.113,155,2.189,159,1.734,160,2.165,162,1.711,163,0.758,167,1.342,179,2.088,183,0.986,194,1.135,196,1.031,202,1.756,204,0.961,209,2.136,212,1.031,216,0.681,222,2.319,225,2.989,228,0.723,241,2.232,254,1.819,274,0.939,281,1.203,286,1.946,294,1.069,310,0.701,317,1.211,347,2.466,362,1.158,364,0.919,365,0.843,371,2.153,381,2.153,389,0.733,390,0.916,392,1.221,396,2.968,397,2.319,399,1.795,401,1.003,414,1.1,424,0.961,436,1.075,482,0.861,494,1.052,515,0.886,522,1.017,525,0.969,527,0.869,542,1.514,551,0.664,556,1.007,609,5.072,622,1.081,623,1.113,626,2.202,633,1.98,638,1.385,644,1.377,651,0.63,660,0.961,676,0.665,722,2.594,782,1.12,800,1.1,812,2.732,832,2.005,843,2.539,864,1.142,880,6.571,885,1.442,910,1.042,953,1.726,954,1.529,956,1.047,1095,1.873,1100,1.661,1121,1.106,1136,1.397,1174,2.295,1187,2.554,1226,1.135,1305,1.193,1423,2.881,1659,1.087,1679,1.269,1694,1.359,1705,1.61,1879,1.946,2201,1.468,2385,1.968,2461,1.245,2549,2.803,2679,4.036,2808,3.259,2829,1.661,2870,1.184,2939,1.377,2965,1.813,3216,1.419,3502,2.539,3952,1.442,4094,1.468,4205,1.726,6150,3.245,6212,1.726,6456,1.61,6904,4.194,6905,3.245,6906,1.945,6907,1.945,6908,1.945,6909,4.726,6910,1.945,6911,1.813,6912,1.945,6913,3.482,6914,1.945,6915,1.945,6916,1.945,6917,1.945,6918,1.945,6919,1.945,6920,1.726,6921,1.945,6922,1.945,6923,1.945,6924,1.945,6925,1.945,6926,3.482,6927,1.945,6928,1.945,6929,1.945,6930,1.945,6931,1.945,6932,1.945,6933,1.945,6934,1.945,6935,1.945,6936,1.813,6937,1.945,6938,1.945,6939,1.945,6940,1.945,6941,1.726,6942,1.945]],["component/529",[145,0.971,220,0.348]],["title/530-1",[225,29.893,862,48.981]],["name/530-1",[]],["text/530-1",[]],["component/530-1",[]],["title/530-2",[2,22.808,225,29.893]],["name/530-2",[]],["text/530-2",[]],["component/530-2",[]],["title/530-3",[225,37.903]],["name/530-3",[]],["text/530-3",[]],["component/530-3",[]],["title/530-4",[8,14.867,225,29.893]],["name/530-4",[]],["text/530-4",[]],["component/530-4",[]],["title/530-5",[77,33.547]],["name/530-5",[]],["text/530-5",[]],["component/530-5",[]],["title/530-6",[225,21.012,310,18.634,375,27.953,398,19.464]],["name/530-6",[]],["text/530-6",[]],["component/530-6",[]],["title/530-7",[40,23.406,6943,65.249]],["name/530-7",[]],["text/530-7",[]],["component/530-7",[]],["title/530-8",[310,26.51,3998,56.58]],["name/530-8",[]],["text/530-8",[]],["component/530-8",[]],["title/530",[8,12.273,39,29.309,225,24.678]],["name/530",[39,1.118,225,0.942]],["text/530",[2,2.735,3,1.236,6,1.74,8,1.445,16,0.69,22,2.079,23,1.765,24,2.056,25,1.937,27,0.795,29,0.938,34,0.67,35,0.826,37,2.648,39,1.615,40,1.451,44,2.48,45,1.038,46,0.842,48,1.666,49,1.115,51,0.977,60,1.468,61,1.18,62,0.592,64,0.745,69,3.531,71,0.663,74,1.533,77,1.64,86,0.968,92,1.224,99,0.747,100,1.078,105,1.001,112,1.279,135,0.912,137,2.75,138,1.357,139,0.626,143,0.632,149,1.317,152,1.268,156,0.855,162,0.674,167,3.143,168,0.804,169,1.438,171,1.615,180,1.586,183,0.947,188,1.124,189,0.702,198,0.834,200,0.858,207,1.38,225,5.797,228,0.692,239,0.916,241,0.879,251,0.963,258,1.226,274,0.898,281,1.151,283,0.996,284,1.357,286,1.04,294,2.504,295,1.18,299,2.668,300,0.942,310,1.643,311,1.052,315,0.955,318,0.764,352,1.268,353,1.253,361,0.885,363,2.525,365,0.807,366,1.022,369,0.852,371,2.069,378,1.748,379,0.885,383,1.001,386,1.236,389,0.701,390,0.876,391,2.27,397,2.228,398,2.692,399,0.959,411,1.404,417,0.745,420,0.879,423,0.804,431,3.5,432,0.85,451,1.38,481,1.838,482,0.824,494,1.809,501,1.709,542,0.809,547,0.844,596,1.141,609,5.416,612,1.071,620,1.012,626,1.175,633,1.058,638,0.74,643,1.071,645,0.938,660,0.919,676,0.871,702,0.977,722,0.839,731,1.191,739,2.891,749,1.034,753,0.972,792,1.38,812,3.211,834,1.463,835,1.317,862,4.761,879,2.63,880,2.574,894,1.124,959,1.16,960,0.892,964,1.124,965,0.819,988,1.141,1035,1.336,1077,3.888,1095,1.001,1118,1.992,1131,1.202,1238,2.969,1271,1.336,1308,1.765,1313,1.283,1323,4.059,1427,1.226,1465,1.38,1510,4.373,1591,2.228,1592,1.498,1674,3.273,1879,1.04,1881,1.404,1882,1.404,2033,1.093,2046,1.432,2265,1.253,2330,1.151,2385,1.052,2589,1.539,2666,1.202,2712,1.141,2928,2.279,3028,1.651,3081,1.336,3213,1.3,3666,2.48,5788,1.734,6335,1.734,6943,1.651,6944,1.861,6945,1.861,6946,1.861,6947,1.861,6948,1.861,6949,1.861,6950,1.861,6951,1.861,6952,3.345,6953,1.861,6954,1.861,6955,1.861,6956,1.861,6957,1.861,6958,1.861,6959,1.861,6960,5.31,6961,3.345,6962,2.857,6963,1.861,6964,1.861,6965,1.861,6966,1.861,6967,1.861]],["component/530",[145,0.971,220,0.348]],["title/531-1",[1084,63.523]],["name/531-1",[]],["text/531-1",[]],["component/531-1",[]],["title/531-2",[3,27.167,1334,32.349]],["name/531-2",[]],["text/531-2",[]],["component/531-2",[]],["title/531-3",[225,29.893,1334,32.349]],["name/531-3",[]],["text/531-3",[]],["component/531-3",[]],["title/531-4",[3,22.428,515,27.631,808,32.662]],["name/531-4",[]],["text/531-4",[]],["component/531-4",[]],["title/531-5",[626,18.962,808,39.564]],["name/531-5",[]],["text/531-5",[]],["component/531-5",[]],["title/531-6",[3,19.096,134,19.549,347,15.956,845,39.771]],["name/531-6",[]],["text/531-6",[]],["component/531-6",[]],["title/531",[225,29.893,1334,32.349]],["name/531",[225,0.942,1334,1.019]],["text/531",[3,3.685,5,2.192,8,1.443,14,0.911,20,1.224,22,1.135,24,2.495,25,1.933,27,1.127,35,1.17,38,1.349,39,1.273,40,1.448,41,2.352,42,2.317,45,2.498,46,2.027,49,1.999,54,1.49,64,1.056,77,2.158,82,1.653,88,2.814,92,1.611,102,1.687,119,2.835,131,1.422,134,1.72,135,2.23,137,1.302,139,1.529,162,3.922,163,1.771,168,1.139,169,1.133,189,2.264,194,1.538,198,2.687,217,1.508,220,0.551,225,3.58,227,2.556,228,1.691,248,2.33,251,1.365,281,1.63,291,2.631,294,1.448,310,3.596,311,1.49,316,1.558,317,0.675,347,1.404,356,1.818,379,2.164,389,0.993,390,1.241,396,0.916,402,2.967,407,1.893,408,3.012,411,1.989,412,1.581,420,1.245,425,1.404,453,2.86,461,2.028,472,1.866,515,2.07,545,0.976,549,1.212,555,1.977,557,1.433,601,1.866,615,1.841,622,2.527,623,1.508,625,1.558,626,1.173,638,1.048,645,1.329,689,1.167,702,2.388,705,1.535,708,1.928,716,1.592,731,1.687,749,1.464,845,2.028,849,1.672,887,3.351,964,1.592,988,2.79,1088,1.72,1103,1.955,1118,1.569,1121,1.499,1131,1.703,1183,1.538,1313,3.136,1334,5.289,1335,2.028,1486,1.456,1584,1.558,1624,2.251,1660,1.954,2035,4.249,2237,1.703,2377,1.866,2667,1.737,2983,3.661,3376,2.339,3377,4.035,3998,2.028,4152,2.181,4288,2.072,5488,2.339,5967,2.457,6750,4.962,6827,2.072,6858,2.339,6859,2.339,6860,2.251,6861,2.251,6862,2.339,6863,2.339,6864,2.339,6865,2.181,6968,2.636,6969,2.636,6970,4.547,6971,2.636,6972,2.636,6973,2.636,6974,2.636,6975,2.636]],["component/531",[145,0.971,220,0.348]],["title/532-1",[432,27.72,499,27.197,6960,50.22]],["name/532-1",[]],["text/532-1",[]],["component/532-1",[]],["title/532-2",[6976,86.901]],["name/532-2",[]],["text/532-2",[]],["component/532-2",[]],["title/532-3",[499,32.944,2033,43.18]],["name/532-3",[]],["text/532-3",[]],["component/532-3",[]],["title/532-4",[69,46.644,626,18.962]],["name/532-4",[]],["text/532-4",[]],["component/532-4",[]],["title/532-5",[92,25.043]],["name/532-5",[]],["text/532-5",[]],["component/532-5",[]],["title/532-6",[375,50.424]],["name/532-6",[]],["text/532-6",[]],["component/532-6",[]],["title/532-7",[154,60.244]],["name/532-7",[]],["text/532-7",[]],["component/532-7",[]],["title/532-8",[6977,86.901]],["name/532-8",[]],["text/532-8",[]],["component/532-8",[]],["title/532-9",[225,24.678,312,33.54,390,28.575]],["name/532-9",[]],["text/532-9",[]],["component/532-9",[]],["title/532-10",[66,21.617,112,19.765,142,18.487,2224,44.138]],["name/532-10",[]],["text/532-10",[]],["component/532-10",[]],["title/532-11",[131,18.98,4022,46.709,6904,53.866]],["name/532-11",[]],["text/532-11",[]],["component/532-11",[]],["title/532",[225,24.678,1001,33.356,1414,37.848]],["name/532",[225,0.668,1001,0.903,1414,1.025]],["text/532",[3,0.717,5,1.765,8,1.823,12,1.833,16,1.289,22,1.433,24,1.247,25,0.825,32,0.875,45,1.078,46,1.446,49,0.647,51,1.019,61,1.664,62,0.618,65,0.904,69,3.644,77,1.25,85,1.704,86,1.01,88,1.63,92,1.972,96,0.781,102,1.242,112,0.742,131,3.366,133,0.92,134,0.734,135,3.6,137,0.959,139,2.222,144,0.854,152,1.322,154,3.048,155,1.221,160,0.889,163,0.756,189,2.168,196,1.029,197,1.279,198,2.113,206,1.156,209,1.191,216,1.652,225,3.84,239,0.955,248,2.231,274,0.937,275,1.029,285,1.019,295,2.204,299,0.93,300,2.389,310,1.253,312,1.072,318,0.794,337,1.029,338,1.078,348,2.001,362,1.156,371,5.274,375,1.05,378,1.014,385,3.406,386,1.284,390,0.914,395,1.191,397,2.315,408,2.369,417,0.778,424,1.717,431,2.185,432,2.154,479,0.934,494,2.551,499,3.574,508,1.494,523,1.231,525,0.967,527,0.867,545,1.286,555,0.844,557,1.055,560,0.996,562,1.173,568,1.624,601,1.374,609,4.793,623,1.111,626,0.501,638,1.876,660,4.667,686,2.674,695,1.307,697,1.889,708,1.473,731,1.242,808,1.044,880,3.63,956,1.044,1001,1.067,1095,1.044,1131,1.254,1132,1.439,1134,1.394,1188,2.674,1244,1.267,1259,5.696,1260,1.563,1272,1.279,1273,1.254,1298,2.04,1334,0.854,1414,3.581,1421,1.809,1500,1.231,1591,2.315,1620,1.809,1670,1.191,1879,2.636,2033,1.14,2237,1.254,2242,1.416,2340,1.356,2409,1.279,2469,1.267,2877,1.394,3114,4.335,3366,1.339,3502,2.534,3571,1.658,3601,1.356,3666,1.439,3779,2.967,3826,1.606,4022,3.63,6144,1.809,6198,1.658,6740,1.809,6822,1.658,6877,1.809,6911,3.239,6920,1.722,6936,1.809,6941,4.186,6960,5.466,6976,6.158,6977,3.239,6978,1.941,6979,2.875,6980,3.475,6981,1.941,6982,1.941,6983,3.475,6984,1.941,6985,1.941,6986,1.941,6987,1.941,6988,3.475,6989,1.809,6990,1.941,6991,1.941,6992,1.722,6993,1.941,6994,6.158,6995,1.941,6996,3.239,6997,1.941,6998,4.717,6999,5.097,7000,1.941,7001,1.941,7002,1.941,7003,1.809,7004,1.941,7005,1.941,7006,1.941,7007,1.941,7008,1.809,7009,1.941,7010,1.941,7011,1.941,7012,1.941,7013,1.941,7014,1.941,7015,1.941]],["component/532",[145,0.971,220,0.348]],["title/533-1",[1084,63.523]],["name/533-1",[]],["text/533-1",[]],["component/533-1",[]],["title/533-2",[8,12.273,248,23.582,6766,51.839]],["name/533-2",[]],["text/533-2",[]],["component/533-2",[]],["title/533-3",[2880,67.995]],["name/533-3",[]],["text/533-3",[]],["component/533-3",[]],["title/533-4",[3,27.167,247,35.112]],["name/533-4",[]],["text/533-4",[]],["component/533-4",[]],["title/533-5",[3,27.167,378,38.425]],["name/533-5",[]],["text/533-5",[]],["component/533-5",[]],["title/533-6",[88,34.493,730,32.064]],["name/533-6",[]],["text/533-6",[]],["component/533-6",[]],["title/533-7",[7016,82.733]],["name/533-7",[]],["text/533-7",[]],["component/533-7",[]],["title/533-8",[8,12.273,42,19.714,248,23.582]],["name/533-8",[]],["text/533-8",[]],["component/533-8",[]],["title/533-9",[270,46.237,273,41.087]],["name/533-9",[]],["text/533-9",[]],["component/533-9",[]],["title/533-10",[267,39.17,273,41.087]],["name/533-10",[]],["text/533-10",[]],["component/533-10",[]],["title/533-11",[115,21.119,273,28.881,586,35.645,7017,45.864]],["name/533-11",[]],["text/533-11",[]],["component/533-11",[]],["title/533-12",[110,30.044,1125,42.078]],["name/533-12",[]],["text/533-12",[]],["component/533-12",[]],["title/533-13",[1507,36.628,6766,62.794]],["name/533-13",[]],["text/533-13",[]],["component/533-13",[]],["title/533-14",[216,21.255,1018,36.672,1493,42.977]],["name/533-14",[]],["text/533-14",[]],["component/533-14",[]],["title/533-15",[1018,36.672,1493,42.977,2850,38.506]],["name/533-15",[]],["text/533-15",[]],["component/533-15",[]],["title/533",[4,20.805,39,24.955,198,23.157,347,15.956]],["name/533",[4,0.662,145,0.959,1195,1.095]],["text/533",[3,1.886,4,1.069,8,1.989,10,2.154,11,0.811,14,0.646,16,0.368,22,1.871,24,1.702,25,1.945,26,2.016,27,1.436,28,0.653,34,0.357,35,1.179,39,2.209,40,1.778,41,2.19,42,2.534,45,0.307,46,0.249,47,0.494,49,0.623,51,0.52,52,0.425,60,0.175,65,0.462,67,0.473,71,0.353,76,0.603,78,0.459,82,0.965,83,0.564,88,2.829,93,0.448,96,0.399,102,1.197,103,0.838,105,1.808,106,0.437,109,0.973,110,1.87,115,0.405,130,0.518,131,2.612,134,0.375,139,0.333,143,0.636,154,0.64,157,3.483,162,0.677,163,1.987,167,0.683,177,0.525,179,0.594,189,1.002,190,0.675,198,1.189,199,0.433,202,0.5,203,0.492,204,0.49,205,0.571,206,0.59,216,0.655,222,0.66,225,1.079,227,1.051,233,1.297,239,0.488,241,0.468,247,1.268,248,1.983,266,1.505,267,0.528,268,0.748,270,0.623,271,0.64,273,2.234,285,0.982,287,1.176,291,1.474,299,0.896,308,0.488,309,0.634,310,0.674,315,1.362,316,0.586,320,1.56,321,1.79,326,1.695,335,1.597,337,2.119,344,0.477,345,1.22,347,1.575,362,0.59,365,0.811,367,0.533,369,0.454,378,3.151,383,1.428,386,0.366,389,1,390,0.88,392,0.931,395,2.807,396,1.941,398,1.723,402,1.22,404,0.629,408,1.333,409,1.732,410,3.806,414,1.057,416,0.515,417,1.063,423,0.428,424,1.66,426,1.709,437,0.599,447,0.473,453,1.669,479,0.477,481,0.544,482,0.439,494,1.011,498,0.667,499,3.212,502,1.547,503,0.82,514,0.762,515,0.451,519,0.5,520,1.106,527,1.501,532,0.618,536,0.712,540,0.418,545,0.367,549,0.455,551,0.338,553,0.504,555,0.431,556,0.513,560,0.96,561,0.571,568,0.463,583,0.924,584,0.924,585,0.924,586,1.29,597,0.536,598,0.692,601,5.308,622,2.221,623,1.07,626,0.256,631,0.667,633,1.51,638,1.82,643,0.571,645,0.943,648,4.955,651,0.321,660,1.312,665,0.779,676,0.189,685,0.66,689,1.175,695,0.667,700,2.263,701,0.653,708,0.42,720,0.504,722,0.447,730,1.465,744,0.554,749,1.867,751,0.798,752,0.557,754,1.439,755,0.762,761,1.208,804,0.574,845,0.762,910,1.001,929,0.647,959,0.618,960,0.896,963,0.82,964,0.599,969,0.486,982,0.564,988,2.061,1001,0.544,1018,4.886,1058,1.176,1086,0.879,1088,0.647,1096,1.29,1101,0.798,1115,0.723,1121,0.564,1125,1.923,1138,0.508,1174,0.653,1183,0.578,1187,0.44,1244,0.647,1259,3.732,1275,0.64,1288,1.176,1289,0.712,1305,0.608,1308,0.523,1313,0.683,1334,0.436,1372,1.505,1450,0.608,1451,1.411,1458,0.702,1491,2.413,1493,6.092,1501,4.392,1507,1.674,1514,0.66,1533,0.586,1541,0.53,1544,1.274,1591,0.66,1602,0.779,1628,0.723,1649,0.748,1654,0.846,1659,1.045,1660,0.735,1664,0.798,1665,0.702,1670,0.608,1671,3.156,1672,0.846,1673,0.723,1676,0.723,1694,1.306,1837,0.683,1928,0.629,2035,1.581,2083,0.762,2199,0.762,2202,0.683,2270,0.653,2371,0.762,2438,3.786,2459,0.846,2481,0.779,2589,2.196,2708,0.798,2722,0.879,2880,1.364,3112,1.47,3447,2.043,3502,0.723,3541,3.784,3672,0.82,3798,1.505,3811,0.924,3824,0.846,3973,0.924,4032,0.82,4388,0.879,4922,0.846,5475,0.846,5815,0.798,6108,0.924,6551,0.924,6681,1.47,6738,1.743,6739,0.924,6745,0.879,6750,1.547,6766,6.123,6783,3.414,6827,2.087,6860,0.846,6865,0.82,6888,0.924,6889,0.846,6960,2.196,7016,3.547,7017,3.547,7018,0.924,7019,0.991,7020,0.991,7021,0.991,7022,0.991,7023,0.991,7024,0.991,7025,3.997,7026,0.991,7027,0.991,7028,0.991,7029,0.991,7030,0.991,7031,0.991,7032,0.991,7033,0.991,7034,0.924,7035,0.991,7036,0.991,7037,0.991,7038,0.991,7039,0.991,7040,0.991,7041,0.991,7042,0.991,7043,0.991,7044,0.991,7045,0.991,7046,0.991,7047,0.991,7048,1.87,7049,0.991,7050,1.87,7051,0.991,7052,0.991,7053,0.991,7054,0.991,7055,0.991,7056,1.87,7057,0.991]],["component/533",[145,0.971,220,0.348]],["title/534-1",[389,27.691,416,38.247]],["name/534-1",[]],["text/534-1",[]],["component/534-1",[]],["title/534-2",[3,27.167,1486,40.627]],["name/534-2",[]],["text/534-2",[]],["component/534-2",[]],["title/534-3",[273,52.097]],["name/534-3",[]],["text/534-3",[]],["component/534-3",[]],["title/534",[40,19.323,225,24.678,321,32.336]],["name/534",[225,0.942,389,0.872]],["text/534",[2,0.88,3,3.11,8,2.44,14,1.674,16,1.053,22,2.1,25,1.206,26,1.431,27,1.213,34,1.743,35,1.259,38,0.842,39,3.061,40,1.542,41,1.112,48,1.413,49,0.946,71,1.726,77,3.523,79,1.223,82,1.031,88,2.974,92,2.463,110,2.59,123,3.13,131,2.867,154,5.439,162,1.027,163,3.277,168,2.74,171,1.37,198,1.271,213,2.677,216,0.993,225,4.378,233,2.366,242,2.141,247,2.313,248,2.463,273,4.188,282,2.183,291,1.244,295,1.8,299,3.038,310,1.023,318,0.648,347,0.876,365,1.23,369,1.3,375,1.534,383,1.527,386,1.048,389,1.824,391,1.413,392,1.699,398,1.068,399,1.462,402,1.851,412,3.802,414,2.739,421,2.183,432,2.895,453,3.986,501,2.475,545,2.347,555,1.234,601,2.009,612,2.789,638,1.128,686,2.183,722,1.279,931,1.551,959,3.952,967,2.849,1051,1.666,1077,5.236,1118,1.689,1147,1.89,1166,2.103,1308,2.556,1334,4.738,1450,1.74,1486,1.568,1510,3.301,1544,1.933,1584,1.678,1591,1.89,2192,2.069,2712,1.74,2880,2.069,3114,2.141,3439,2.284,3447,2.183,3998,7.94,4379,2.423,5475,8.362,6745,2.518,6920,6.651,6943,2.518,6962,2.423,6979,2.347,7017,4.299,7058,2.644,7059,7.495,7060,2.837,7061,4.844,7062,4.844]],["component/534",[145,0.971,220,0.348]],["title/535-1",[19,34.811,24,13.663,408,25.96,1465,38.319]],["name/535-1",[]],["text/535-1",[]],["component/535-1",[]],["title/535-2",[7016,82.733]],["name/535-2",[]],["text/535-2",[]],["component/535-2",[]],["title/535-3",[966,50.099,1495,55.493]],["name/535-3",[]],["text/535-3",[]],["component/535-3",[]],["title/535",[24,19.438,1465,54.515]],["name/535",[24,0.612,1465,1.717]],["text/535",[0,2.78,3,3.084,8,2.022,19,3.758,24,3.417,25,3.548,26,4.21,39,2.694,40,1.776,100,3.234,131,1.745,145,3.255,207,4.137,233,2.725,241,2.636,248,3.243,283,4.469,294,3.066,299,2.674,383,3.003,386,2.062,391,2.78,392,1.958,395,3.423,396,1.939,408,2.803,412,3.347,437,3.371,476,4.387,482,2.47,494,3.018,497,3.758,545,2.066,547,3.787,601,7.08,643,4.807,747,4.617,835,3.951,1058,3.509,1226,5.833,1244,3.641,1427,3.678,1465,9.244,1482,3.572,1495,4.211,1676,4.07,1854,3.572,2237,3.606,2340,3.898,2472,4.294,3014,5.201,3502,4.07,3624,5.201,4191,4.766,4533,4.766,6516,4.952,6770,5.201,6783,4.766,7063,5.58,7064,8.347,7065,5.58]],["component/535",[145,0.971,220,0.348]],["title/536-1",[8,9.098,626,11.605,1119,35.375,2385,25.441,7066,44.999]],["name/536-1",[]],["text/536-1",[]],["component/536-1",[]],["title/536-2",[1018,36.672,1493,42.977,4083,45.812]],["name/536-2",[]],["text/536-2",[]],["component/536-2",[]],["title/536-3",[8,9.098,562,27.186,3216,32.819,7067,44.999,7068,41.945]],["name/536-3",[]],["text/536-3",[]],["component/536-3",[]],["title/536-4",[1018,36.672,1493,42.977,4083,45.812]],["name/536-4",[]],["text/536-4",[]],["component/536-4",[]],["title/536-5",[8,9.098,92,12.088,2033,26.426,3779,38.43,7069,44.999]],["name/536-5",[]],["text/536-5",[]],["component/536-5",[]],["title/536-6",[1018,36.672,1493,42.977,4083,45.812]],["name/536-6",[]],["text/536-6",[]],["component/536-6",[]],["title/536",[499,27.197,2033,35.647,2631,46.709]],["name/536",[427,1.782,792,1.717]],["text/536",[8,1.511,22,2.779,39,4.415,47,2.403,49,1.608,61,1.702,69,3.06,92,1.296,97,2.983,110,1.971,145,2.814,165,4.041,169,2.074,189,1.821,191,1.887,216,3.605,225,4.186,236,2.413,247,2.304,309,3.088,310,1.739,314,5.09,317,1.236,359,3.518,368,3.287,371,2.983,379,2.295,386,1.782,399,2.487,412,2.893,415,3.415,427,7.036,499,4.097,515,2.196,558,5.654,560,2.475,562,5.524,568,3.493,609,5.139,626,2.358,969,2.365,1048,3.008,1119,5.873,1507,2.403,1879,4.175,2033,2.833,2036,3.884,2183,4.12,2277,3.792,2349,4.12,2385,2.727,2631,3.712,2842,4.496,3114,3.641,3216,6.669,5591,4.12,6783,4.12,6992,4.281,6994,4.496,6996,4.496,6999,4.281,7003,6.964,7068,4.496,7070,6.964,7071,4.824,7072,4.824,7073,4.824,7074,4.824,7075,4.824,7076,4.824,7077,4.824,7078,4.824,7079,4.824,7080,4.824,7081,4.824,7082,4.824]],["component/536",[145,0.971,220,0.348]],["title/537-1",[163,20.125,180,24.503,270,32.5,392,18.132]],["name/537-1",[]],["text/537-1",[]],["component/537-1",[]],["title/537-2",[392,25.795,2237,47.513]],["name/537-2",[]],["text/537-2",[]],["component/537-2",[]],["title/537",[392,25.795,558,45.47]],["name/537",[392,0.813,558,1.432]],["text/537",[8,2.082,12,1.053,22,0.498,24,2.143,29,1.006,40,1.535,41,1.396,42,0.648,49,1.954,61,1.257,64,0.799,88,2.75,91,0.971,93,0.902,96,0.803,102,2.28,115,0.815,125,2.399,131,3.93,139,0.671,154,1.289,157,5.054,162,2.437,163,0.777,165,1.079,167,4.043,169,0.858,182,1.224,200,1.643,204,0.986,205,1.149,216,0.699,219,1.123,233,1.739,239,0.982,248,3.719,250,1.215,273,1.115,274,0.963,291,2.571,300,1.804,310,0.719,311,1.128,344,1.713,369,0.914,375,3.17,378,2.521,389,1.817,392,3.989,399,1.836,401,1.029,410,1.36,412,1.197,426,1.812,445,1.506,465,1.36,497,3.249,498,1.344,503,1.651,512,1.18,515,2.196,529,1.344,556,1.033,558,6.367,560,1.024,596,1.224,601,3.415,626,1.244,631,1.344,638,1.918,685,1.329,697,1.085,700,1.344,702,1.048,708,0.846,722,0.9,734,0.978,744,1.115,829,1.266,884,1.277,890,1.479,916,1.558,928,1.329,959,1.244,964,1.206,965,0.878,967,0.897,1028,1.771,1048,4.197,1074,1.535,1121,3.829,1125,2.038,1183,3.42,1187,3.599,1231,1.053,1256,1.704,1259,2.064,1340,1.224,1363,1.164,1391,4.128,1409,3.464,1488,1.651,1501,3.792,1503,2.688,1525,1.455,1544,1.36,1572,2.947,1584,2.106,2035,1.188,2062,1.413,2192,1.455,2201,1.506,2265,1.344,2337,1.569,2437,1.36,2549,3.884,2566,1.771,2667,1.315,2880,1.455,3216,1.455,3502,3.518,3666,4.346,3932,1.86,3946,1.704,4482,1.771,4610,1.651,5777,6.807,6537,3.991,6577,1.86,6621,1.771,6681,5.873,6701,1.86,6827,2.8,6865,1.651,6889,1.704,6960,1.651,7083,4.28,7084,1.771,7085,3.561,7086,3.32,7087,7.193,7088,1.86,7089,1.86,7090,3.32,7091,3.32,7092,1.995,7093,4.496,7094,1.995,7095,1.995,7096,1.995,7097,1.771,7098,1.86,7099,5.862,7100,1.995,7101,3.32,7102,3.561,7103,1.995,7104,1.86,7105,1.995,7106,1.86,7107,1.995,7108,1.995]],["component/537",[145,0.971,220,0.348]],["title/538-1",[40,19.323,558,37.537,1501,47.718]],["name/538-1",[]],["text/538-1",[]],["component/538-1",[]],["title/538-2",[52,26.02,1507,30.238,6962,51.839]],["name/538-2",[]],["text/538-2",[]],["component/538-2",[]],["title/538-3",[392,18.132,403,36.593,560,26.523,6962,44.138]],["name/538-3",[]],["text/538-3",[]],["component/538-3",[]],["title/538-4",[52,22.155,169,22.217,342,33.724,347,15.956]],["name/538-4",[]],["text/538-4",[]],["component/538-4",[]],["title/538-5",[52,19.29,310,16.224,499,20.162,1125,25.752,2062,31.861]],["name/538-5",[]],["text/538-5",[]],["component/538-5",[]],["title/538-6",[40,19.323,558,37.537,3666,45.004]],["name/538-6",[]],["text/538-6",[]],["component/538-6",[]],["title/538-7",[3666,54.515,4227,56.58]],["name/538-7",[]],["text/538-7",[]],["component/538-7",[]],["title/538-8",[40,23.406,1183,42.892]],["name/538-8",[]],["text/538-8",[]],["component/538-8",[]],["title/538-9",[40,16.452,189,19.506,2261,44.138,7109,48.175]],["name/538-9",[]],["text/538-9",[]],["component/538-9",[]],["title/538-10",[24,19.438,1498,52.06]],["name/538-10",[]],["text/538-10",[]],["component/538-10",[]],["title/538-11",[61,11.44,126,16.942,145,18.912,398,12.21,558,20.049,1048,20.215,1173,28.77,4610,26.823]],["name/538-11",[]],["text/538-11",[]],["component/538-11",[]],["title/538-12",[61,14.06,126,20.823,145,23.244,262,14.197,1048,40.05]],["name/538-12",[]],["text/538-12",[]],["component/538-12",[]],["title/538-13",[40,23.406,1187,32.642]],["name/538-13",[]],["text/538-13",[]],["component/538-13",[]],["title/538",[40,23.406,558,45.47]],["name/538",[40,0.737,558,1.432]],["text/538",[8,2.563,12,0.617,16,0.811,22,0.767,24,2.088,27,1.95,37,0.557,40,2.4,42,0.71,51,0.614,52,1.318,61,0.413,72,1.267,74,0.536,82,1.118,88,1.025,89,0.643,94,0.654,96,0.471,102,1.399,110,0.893,126,1.142,127,0.756,130,0.611,131,3.635,139,0.393,143,0.743,145,0.682,154,1.412,157,4.702,162,0.791,163,2.02,168,0.945,169,0.939,182,1.341,188,0.707,189,1.457,198,0.979,200,3.102,213,0.646,216,0.765,219,0.969,233,0.571,236,1.538,242,0.883,248,4.675,251,0.606,253,0.756,257,0.817,262,0.417,291,2.001,299,2.186,300,1.107,308,0.576,310,1.644,311,0.661,316,0.692,344,1.479,347,0.361,357,0.942,375,2.467,378,2.383,386,0.807,389,0.441,392,1.355,398,2.166,399,1.127,401,0.603,408,0.588,410,0.797,426,1.112,445,0.883,499,0.979,501,1.571,515,0.533,535,0.692,545,1.43,558,6.177,560,0.6,562,1.32,626,0.564,638,0.869,648,2.971,722,0.985,724,1.301,734,1.072,744,0.654,749,1.214,891,0.84,916,0.956,922,0.942,995,1.866,1028,1.038,1048,0.729,1068,1.62,1073,2.158,1121,1.749,1125,2.61,1134,1.57,1183,5.146,1187,4.247,1259,1.782,1409,2.209,1491,2.209,1500,0.742,1501,3.035,1507,0.583,1523,2.544,1541,0.626,1548,0.92,1572,0.968,1584,0.692,1649,0.883,1672,1.866,1673,2.243,1679,0.763,1904,0.968,1951,1.038,2045,0.867,2046,0.9,2062,3.229,2201,0.883,2261,0.999,2589,0.968,2808,0.807,2851,0.942,2867,0.92,2877,0.84,2880,0.853,3029,0.828,3216,3.326,3302,0.817,3447,1.682,3460,0.9,3502,0.853,3606,3.109,3666,2.863,3943,1.091,4227,2.971,4482,4.047,4610,1.808,4690,1.939,5144,1.038,5208,1.091,5777,6.21,6537,0.968,6563,1.939,6621,1.038,6681,4.521,6827,1.718,7018,1.091,7034,1.091,7083,5.104,7084,1.038,7086,4.835,7087,10.214,7088,2.867,7089,2.867,7090,2.867,7091,2.867,7093,2.037,7097,6.692,7098,1.091,7101,1.091,7104,3.599,7106,1.091,7109,3.599,7110,3.075,7111,1.17,7112,2.185,7113,1.17,7114,1.17,7115,1.17,7116,3.075,7117,3.075,7118,1.17,7119,1.17,7120,1.17,7121,1.091,7122,1.17,7123,1.17,7124,1.17,7125,3.861,7126,3.075,7127,3.861,7128,2.185,7129,1.091,7130,4.561,7131,1.17,7132,3.861,7133,2.185,7134,2.185,7135,6.666,7136,2.037,7137,3.599,7138,2.185,7139,1.17,7140,1.17,7141,1.17,7142,1.17,7143,1.17,7144,1.17,7145,1.17,7146,1.17,7147,1.17,7148,1.17]],["component/538",[145,0.971,220,0.348]],["title/539",[115,30.044,558,45.47]],["name/539",[385,2.02]],["text/539",[40,3.826,392,4.216,558,8.613]],["component/539",[145,0.971,220,0.348]],["title/540-1",[88,24.246,116,28.558,291,22.671,562,31.225]],["name/540-1",[]],["text/540-1",[]],["component/540-1",[]],["title/540-2",[40,19.323,3666,45.004,7149,60.7]],["name/540-2",[]],["text/540-2",[]],["component/540-2",[]],["title/540-3",[1507,36.628,2466,59.201]],["name/540-3",[]],["text/540-3",[]],["component/540-3",[]],["title/540",[558,45.47,7150,65.249]],["name/540",[558,1.432,7150,2.055]],["text/540",[8,1.926,22,1.153,24,2.153,25,1.142,26,1.355,27,1.148,40,3.349,52,1.981,67,1.282,88,2.854,96,1.081,115,1.097,116,3.361,131,3.619,154,1.735,162,1.673,163,3.171,169,1.154,189,1.014,216,0.94,232,4.302,239,1.322,248,1.043,253,1.735,257,1.876,291,2.027,310,2.193,328,1.979,329,2.052,375,3.908,378,4.978,379,1.278,381,3.762,390,1.264,398,1.011,402,1.752,444,4.957,498,4.097,499,1.203,522,1.403,558,7.158,562,1.622,596,1.647,749,1.492,916,2.021,946,2.111,959,2.881,1125,1.537,1183,2.696,1256,2.293,1271,5.19,1337,2.027,1352,5.27,1489,1.901,1491,6.843,1498,4.307,1501,3.633,1507,4.057,1545,1.83,1551,4.308,1584,1.588,1644,4.51,1672,5.195,1673,1.959,2201,7.593,2466,2.162,3541,1.991,3666,3.426,3745,2.503,3998,2.066,4610,2.222,4690,4.101,5704,2.503,6627,2.503,6681,3.633,6889,2.293,7083,4.101,7084,2.383,7087,5.398,7097,2.383,7121,2.503,7129,2.503,7135,9.805,7136,2.503,7137,2.503,7150,2.383,7151,2.685,7152,4.621,7153,2.685,7154,2.685,7155,2.503,7156,2.685,7157,2.503,7158,2.685,7159,7.226,7160,7.226,7161,2.685,7162,2.685,7163,2.685,7164,4.621,7165,8.897,7166,4.621,7167,4.621,7168,2.685,7169,2.685,7170,2.685,7171,2.685,7172,2.685,7173,2.685,7174,2.685,7175,2.685]],["component/540",[145,0.971,220,0.348]],["title/541-1",[22,18.346,1879,41.087]],["name/541-1",[]],["text/541-1",[]],["component/541-1",[]],["title/541-2",[67,15.482,196,17.186,266,26.103,271,20.95,638,12.893,1183,18.912,1597,26.103,7176,32.42]],["name/541-2",[]],["text/541-2",[]],["component/541-2",[]],["title/541-3",[188,44.422,1879,41.087]],["name/541-3",[]],["text/541-3",[]],["component/541-3",[]],["title/541-4",[71,26.197,7177,68.537]],["name/541-4",[]],["text/541-4",[]],["component/541-4",[]],["title/541-5",[110,21.119,203,25.643,7178,48.175,7179,48.175]],["name/541-5",[]],["text/541-5",[]],["component/541-5",[]],["title/541-6",[71,26.197,7180,73.528]],["name/541-6",[]],["text/541-6",[]],["component/541-6",[]],["title/541-7",[1640,79.619]],["name/541-7",[]],["text/541-7",[]],["component/541-7",[]],["title/541-8",[7181,86.901]],["name/541-8",[]],["text/541-8",[]],["component/541-8",[]],["title/541-9",[4358,86.901]],["name/541-9",[]],["text/541-9",[]],["component/541-9",[]],["title/541-10",[8,9.098,49,14.998,67,21.488,378,23.516,444,27.393]],["name/541-10",[]],["text/541-10",[]],["component/541-10",[]],["title/541-11",[8,12.273,14,20.977,67,28.986]],["name/541-11",[]],["text/541-11",[]],["component/541-11",[]],["title/541",[39,35.503,412,44.096]],["name/541",[39,1.118,412,1.389]],["text/541",[3,1.018,4,1.901,6,1.433,8,1.951,14,1.632,20,1.279,22,1.834,24,1.639,30,1.9,35,1.223,40,0.877,41,1.08,42,2.387,49,2.45,57,1.061,67,3.51,72,2.738,74,2.164,78,1.275,80,1.617,82,1.001,88,1.292,96,1.901,99,1.106,102,1.763,105,1.482,106,1.216,116,1.522,129,1.426,134,2.345,138,1.117,139,0.926,160,1.262,162,0.997,163,1.839,168,1.191,180,1.306,189,1.783,203,1.367,204,2.334,239,1.356,241,2.231,246,1.012,251,1.426,267,1.467,274,1.33,279,1.798,295,1.748,318,0.629,320,1.279,334,1.95,338,1.531,347,1.458,362,1.64,365,2.048,371,2.921,378,1.44,386,1.018,390,1.297,391,1.372,398,1.037,399,2.435,423,1.191,426,1.401,443,2.218,444,5.034,471,1.877,494,1.49,499,2.778,517,3.445,520,1.629,536,3.393,538,1.95,543,2.166,544,2.079,553,2.403,555,1.198,598,1.924,622,1.531,623,2.703,638,1.879,643,2.72,645,3.128,660,2.334,685,4.131,721,1.061,722,2.13,746,1.718,750,2.279,766,3.082,775,1.798,808,2.542,890,2.042,967,1.238,1077,3.3,1170,2.445,1259,1.597,1274,3.445,1293,3.445,1308,1.453,1495,2.079,1549,3.445,1550,4.034,1573,2.042,1579,1.95,1584,1.629,1591,4.896,1601,2.218,1639,5.13,1640,8.694,1879,1.539,2264,2.166,2284,2.568,2302,1.816,2328,2.166,2340,1.924,2462,1.95,5511,2.445,5650,2.279,6822,2.353,6827,2.166,6901,6.522,6979,3.908,7058,2.568,7177,2.568,7178,2.568,7179,2.568,7181,2.568,7182,2.755,7183,8.27,7184,4.724,7185,2.755,7186,4.403,7187,2.755,7188,8.27,7189,4.724,7190,2.568,7191,2.755,7192,4.724,7193,2.755,7194,4.724,7195,2.755,7196,2.755,7197,4.724,7198,2.755,7199,2.755,7200,4.403,7201,2.755,7202,2.755,7203,2.755]],["component/541",[145,0.971,220,0.348]],["title/542-1",[148,22.803,155,25.056,188,24.073,228,14.815,536,46.135]],["name/542-1",[]],["text/542-1",[]],["component/542-1",[]],["title/542-2",[22,8.92,100,20.72,139,12.022,148,20.459,228,13.293,536,25.679,2651,22.68]],["name/542-2",[]],["text/542-2",[]],["component/542-2",[]],["title/542-3",[139,13.399,148,22.803,225,16.2,228,14.815,536,28.619,647,27.149]],["name/542-3",[]],["text/542-3",[]],["component/542-3",[]],["title/542-4",[22,11.228,188,27.186,2033,26.426,6979,37.23,7204,44.999]],["name/542-4",[]],["text/542-4",[]],["component/542-4",[]],["title/542-5",[139,20.411,381,37.537,1621,56.58]],["name/542-5",[]],["text/542-5",[]],["component/542-5",[]],["title/542",[39,35.503,7205,65.249]],["name/542",[6737,2.159,7205,2.055]],["text/542",[12,1.354,16,0.516,25,1.091,32,0.627,34,1.599,39,0.672,40,0.443,66,1.073,72,0.806,73,0.908,74,0.637,84,3.2,88,3.287,100,2.071,106,0.614,124,0.705,131,4.563,139,1.494,148,5.487,155,0.875,163,2.027,181,1.903,183,1.258,188,0.84,190,0.948,196,0.737,202,1.294,225,1.807,228,2.784,239,1.263,241,1.688,246,0.942,262,0.496,272,0.817,291,0.61,294,0.764,300,0.705,302,1.188,311,0.786,313,0.786,315,1.317,317,0.356,365,0.603,371,2.209,381,6.238,397,2.38,398,1.345,409,3.397,416,0.724,447,0.664,482,1.581,494,0.752,519,2.241,523,1.628,536,7.245,538,0.985,549,0.639,557,0.756,609,4.208,627,1.234,630,1.817,638,0.553,647,0.948,661,2.637,663,0.899,706,0.927,722,1.611,734,1.258,792,1.031,835,0.985,849,0.882,909,0.801,955,0.875,956,1.381,965,1.572,967,0.625,1058,0.875,1060,0.917,1098,0.959,1144,1.031,1177,0.882,1248,1.729,1260,1.12,1270,0.786,1293,4.401,1303,1.12,1307,1.093,1414,0.867,1415,2.017,1427,0.917,1450,0.853,1495,1.937,1512,1.07,1544,0.948,1584,0.822,1624,2.192,1712,0.875,1854,0.89,1862,0.999,1878,0.917,2253,1.234,2265,2.406,2267,1.234,2268,2.606,2337,3.493,2354,0.959,2369,0.972,2436,1.188,2651,4.445,2667,2.355,2928,0.948,3302,4.105,3422,4.191,3447,1.07,3502,6.327,3503,7.162,3601,2.496,3764,1.297,4261,1.151,4329,1.297,4378,8.627,4622,1.188,5358,3.051,5484,1.297,5965,1.234,6052,2.392,6736,4.852,6822,2.192,6979,2.956,7008,2.392,7186,3.33,7190,2.392,7206,1.391,7207,4.444,7208,1.391,7209,9.308,7210,2.566,7211,6.474,7212,2.566,7213,2.566,7214,3.573,7215,1.391,7216,1.391,7217,1.391,7218,1.391,7219,2.566,7220,1.391,7221,1.391,7222,1.391,7223,3.573,7224,1.391,7225,1.391,7226,1.391,7227,3.573,7228,2.566,7229,3.573,7230,1.391,7231,1.391,7232,5.205,7233,5.205,7234,3.573,7235,2.566,7236,2.392,7237,2.566,7238,4.444,7239,5.877,7240,2.566,7241,2.566,7242,2.566,7243,1.391,7244,1.391,7245,2.566,7246,1.391,7247,3.573,7248,1.391,7249,1.391,7250,1.391]],["component/542",[145,0.971,220,0.348]],["title/543-1",[8,10.45,67,24.68,141,26.884,378,27.009]],["name/543-1",[]],["text/543-1",[]],["component/543-1",[]],["title/543-2",[8,14.867,378,38.425]],["name/543-2",[]],["text/543-2",[]],["component/543-2",[]],["title/543-3",[14,25.409,1580,60.833]],["name/543-3",[]],["text/543-3",[]],["component/543-3",[]],["title/543-4",[24,19.438,27,31.431]],["name/543-4",[]],["text/543-4",[]],["component/543-4",[]],["title/543-5",[100,35.179,553,30.879,940,47.718]],["name/543-5",[]],["text/543-5",[]],["component/543-5",[]],["title/543-6",[389,27.691,1580,60.833]],["name/543-6",[]],["text/543-6",[]],["component/543-6",[]],["title/543-7",[47,36.628,412,44.096]],["name/543-7",[]],["text/543-7",[]],["component/543-7",[]],["title/543",[8,10.45,39,24.955,67,24.68,412,30.996]],["name/543",[385,2.02]],["text/543",[3,2.695,4,2.139,5,0.692,8,2.623,10,1.061,11,1.72,12,1.189,14,1.371,16,0.836,21,1.118,22,1.597,24,1.049,25,2.259,26,2.001,27,0.963,34,1.427,39,1.915,40,0.717,41,0.884,42,2.079,47,1.976,49,1.322,52,0.966,57,0.867,62,1.691,64,0.903,66,0.942,67,4.408,74,1.032,82,2.924,85,1.945,88,1.861,93,1.019,96,0.907,100,1.306,106,0.994,115,0.921,131,4.273,134,0.852,139,0.758,160,1.032,162,1.436,163,2.069,172,0.907,189,0.85,198,1.01,202,1.137,206,1.342,212,1.194,220,0.471,225,1.613,238,1.47,239,1.109,241,1.064,248,0.875,254,1.178,267,2.113,268,1.701,270,1.417,287,1.417,291,0.988,299,1.08,337,1.194,343,1.456,347,1.976,369,1.032,375,1.219,378,3.812,381,3.286,386,2.365,389,2.41,390,1.061,392,0.791,396,1.379,412,2.379,424,1.113,426,1.146,429,1.151,430,1.137,444,4.441,472,1.595,474,1.924,479,1.084,480,1.306,482,1.756,497,1.518,498,3.579,513,1.178,517,1.643,519,1.137,535,5.988,542,1.725,544,1.701,545,0.834,548,1.618,549,1.036,553,1.146,582,1.643,594,1.734,598,1.574,607,1.501,689,0.997,719,1.771,724,1.342,746,4.549,928,1.501,959,1.405,1195,1.501,1269,1.701,1285,1.141,1310,1.113,1334,1.745,1450,1.382,1489,1.595,1546,1.618,1580,6.036,1639,1.864,1640,1.924,1644,2.941,1716,3.282,1856,1.671,1893,3.697,2552,2,3030,2,3031,1.864,3033,1.864,3035,1.864,3037,2,3038,3.52,3039,3.52,3479,2.1,3998,1.734,4335,1.864,6338,1.864,6824,2.1,6901,2,7070,2.1,7155,2.1,7157,2.1,7200,2.1,7205,2,7251,3.967,7252,2.253,7253,2.253,7254,2.253,7255,2.253,7256,2.253,7257,2.253,7258,2.253,7259,2.253,7260,2.253,7261,2.253,7262,2.253,7263,2.253,7264,2.253,7265,2.253,7266,2.253,7267,2.253,7268,2.253,7269,2.253,7270,2.253,7271,2.253,7272,2.253,7273,2.253,7274,2.253,7275,2.253,7276,2.253,7277,2.253,7278,2.253]],["component/543",[145,0.971,220,0.348]],["title/544-1",[1971,57.653]],["name/544-1",[]],["text/544-1",[]],["component/544-1",[]],["title/544-2",[162,26.617,225,29.893]],["name/544-2",[]],["text/544-2",[]],["component/544-2",[]],["title/544-3",[5,18.651,8,12.273,967,27.282]],["name/544-3",[]],["text/544-3",[]],["component/544-3",[]],["title/544-4",[134,35.263]],["name/544-4",[]],["text/544-4",[]],["component/544-4",[]],["title/544-5",[46,23.467]],["name/544-5",[]],["text/544-5",[]],["component/544-5",[]],["title/544-6",[5,15.881,24,13.663,46,13.009,171,24.955]],["name/544-6",[]],["text/544-6",[]],["component/544-6",[]],["title/544-7",[5,13.827,46,11.327,171,21.728,191,17.603,705,15.186]],["name/544-7",[]],["text/544-7",[]],["component/544-7",[]],["title/544-8",[5,13.827,8,9.098,46,11.327,2033,26.426,4628,32.819]],["name/544-8",[]],["text/544-8",[]],["component/544-8",[]],["title/544-9",[46,18.508,80,25.176]],["name/544-9",[]],["text/544-9",[]],["component/544-9",[]],["title/544-10",[38,18.004,46,15.279,255,24.375]],["name/544-10",[]],["text/544-10",[]],["component/544-10",[]],["title/544-11",[46,15.279,124,30.747,639,20.521]],["name/544-11",[]],["text/544-11",[]],["component/544-11",[]],["title/544-12",[45,28.919]],["name/544-12",[]],["text/544-12",[]],["component/544-12",[]],["title/544-13",[5,15.881,24,13.663,45,16.032,171,24.955]],["name/544-13",[]],["text/544-13",[]],["component/544-13",[]],["title/544-14",[5,13.827,45,13.958,171,21.728,191,17.603,705,15.186]],["name/544-14",[]],["text/544-14",[]],["component/544-14",[]],["title/544-15",[5,13.827,8,9.098,45,13.958,2033,26.426,4628,32.819]],["name/544-15",[]],["text/544-15",[]],["component/544-15",[]],["title/544-16",[45,22.808,80,25.176]],["name/544-16",[]],["text/544-16",[]],["component/544-16",[]],["title/544-17",[57,35.892]],["name/544-17",[]],["text/544-17",[]],["component/544-17",[]],["title/544-18",[57,28.307,862,48.981]],["name/544-18",[]],["text/544-18",[]],["component/544-18",[]],["title/544-19",[11,31.879,57,28.307]],["name/544-19",[]],["text/544-19",[]],["component/544-19",[]],["title/544",[8,14.867,3615,60.833]],["name/544",[8,0.468,3615,1.916]],["text/544",[3,0.398,5,3.077,6,0.56,8,1.652,11,1.563,14,2.046,20,0.939,22,1.88,23,1.067,24,1.13,25,1.532,26,0.543,27,0.46,32,0.912,34,0.388,35,0.478,37,2.033,38,0.6,40,0.91,41,0.793,42,2.071,45,2.439,46,2.258,49,0.359,51,0.565,57,3.784,61,0.714,62,0.644,63,0.511,66,0.45,71,0.384,77,1.029,80,2.895,82,0.391,85,0.992,86,0.56,92,1.148,99,0.432,105,1.088,110,0.826,111,0.616,120,0.666,124,1.024,126,0.563,128,0.458,129,0.558,131,4.42,134,2.849,135,2.095,137,0.999,138,0.82,139,0.362,144,0.474,155,0.677,159,0.537,160,0.927,162,1.963,168,0.466,171,2.859,181,0.799,189,1.079,191,1.118,199,0.471,201,0.589,205,0.62,209,1.241,216,0.377,218,0.428,219,0.339,225,2.407,228,0.4,239,0.53,246,0.395,250,0.656,254,0.563,255,0.812,262,1.737,274,0.977,275,1.072,281,1.251,310,2.135,317,0.276,318,1.114,319,1.124,320,1.328,321,0.574,347,0.883,364,0.509,365,0.467,367,0.58,386,1.056,389,1.609,390,0.507,395,0.661,396,1.485,398,3.285,399,0.555,416,0.56,417,0.431,423,0.466,425,0.574,426,0.548,432,0.492,435,1.32,515,0.49,519,1.02,542,1.243,551,0.69,557,0.586,581,0.616,586,0.743,588,0.891,589,0.586,591,0.677,609,1.137,618,0.867,623,0.616,626,0.737,631,0.725,633,3.864,638,3.249,639,2.001,653,0.743,660,0.999,668,0.847,705,0.683,708,0.457,734,0.992,745,0.813,746,0.672,786,1.355,795,0.734,806,0.71,812,0.445,843,0.786,862,1.347,864,1.188,882,2.673,887,0.602,908,0.651,916,0.471,931,0.589,956,1.088,967,1.62,969,2.095,1049,2.376,1100,0.92,1103,0.869,1132,0.799,1163,0.813,1174,0.71,1244,1.866,1259,1.172,1363,0.628,1404,0.752,1480,0.71,1584,0.637,1643,0.656,1664,0.867,1665,0.763,1694,1.413,1718,0.624,1876,0.956,1879,1.13,1901,3.556,1971,1.251,2033,1.679,2046,0.829,2098,0.956,2264,0.847,2297,1.59,2302,0.71,2328,1.59,2549,0.867,2679,1.727,2697,0.867,2870,0.656,2872,1.866,2898,0.813,2936,0.813,3601,1.413,4094,0.813,4409,0.92,4628,1.475,5477,0.92,5737,1.004,6086,0.92,6169,1.004,6196,1.004,6198,0.92,6309,1.004,6773,0.956,6774,0.92,6775,0.956,6776,1.004,6777,0.956,6941,1.795,6989,6.332,6992,1.795,6999,0.956,7236,1.004,7279,1.077,7280,1.077,7281,1.077,7282,1.077,7283,1.077,7284,4.876,7285,2.859,7286,3.605,7287,1.077,7288,1.077,7289,1.077,7290,1.077,7291,4.876,7292,1.077,7293,1.077,7294,1.077,7295,1.077,7296,1.077,7297,1.077,7298,1.077,7299,1.077,7300,1.077,7301,1.077,7302,1.077,7303,1.077,7304,1.077,7305,1.077,7306,2.022,7307,1.077,7308,2.022,7309,1.077,7310,1.077,7311,1.077,7312,1.077,7313,1.077,7314,1.077,7315,1.077,7316,6.793,7317,1.077,7318,2.022,7319,1.077,7320,2.022,7321,1.077,7322,1.077,7323,1.077,7324,1.077,7325,2.022,7326,1.077,7327,1.077,7328,1.077,7329,1.077,7330,1.077,7331,1.077,7332,1.077,7333,1.077,7334,1.077,7335,1.077,7336,1.077,7337,1.077,7338,1.077,7339,1.077,7340,1.077,7341,1.077,7342,1.077,7343,1.077,7344,1.077,7345,2.022,7346,1.077,7347,1.077,7348,1.077,7349,1.077,7350,1.077,7351,1.077]],["component/544",[145,0.971,220,0.348]],["title/545",[383,39.564,385,37.901]],["name/545",[385,2.02]],["text/545",[8,2.5,3615,10.232]],["component/545",[145,0.971,220,0.348]],["title/546-1",[3,19.096,134,19.549,347,15.956,845,39.771]],["name/546-1",[]],["text/546-1",[]],["component/546-1",[]],["title/546",[]],["name/546",[8,0.258,24,0.337,601,0.902,2035,0.759]],["text/546",[3,3.328,8,1.821,20,2.872,24,2.808,35,2.746,41,3.532,42,2.009,45,3.619,46,2.937,49,3.54,88,2.902,134,3.407,189,2.335,217,3.54,220,1.292,227,5.062,248,4.126,310,2.23,317,1.585,347,1.91,390,2.912,402,5.877,407,4.443,411,4.669,545,2.291,549,2.844,601,4.38,615,4.321,625,3.658,689,2.738,845,4.76,1121,3.519,1334,3.963,1584,3.658,2035,6.947,2983,7.252,6750,8.788,6827,4.863,6858,5.49,6859,5.49,6860,5.283,6861,5.283,6862,5.49,6863,5.49,6864,5.49,6865,5.118]],["component/546",[145,0.971,220,0.348]]],"invertedIndex":[["",{"_index":131,"title":{"91":{},"192":{},"193":{},"268":{},"359":{},"389":{},"27-5":{},"55-1":{},"130-1":{},"235-4":{},"247-8":{},"247-9":{},"247-10":{},"247-11":{},"247-12":{},"247-14":{},"247-15":{},"247-17":{},"247-18":{},"247-19":{},"247-20":{},"247-21":{},"247-22":{},"247-145":{},"338-4":{},"433-4":{},"433-5":{},"433-6":{},"433-7":{},"433-9":{},"532-11":{}},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"11":{},"13":{},"15":{},"16":{},"17":{},"19":{},"21":{},"22":{},"24":{},"25":{},"27":{},"29":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"44":{},"46":{},"47":{},"50":{},"53":{},"54":{},"55":{},"56":{},"58":{},"64":{},"66":{},"68":{},"71":{},"76":{},"77":{},"78":{},"79":{},"81":{},"83":{},"86":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"107":{},"117":{},"130":{},"133":{},"150":{},"151":{},"152":{},"153":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"174":{},"176":{},"178":{},"179":{},"185":{},"186":{},"192":{},"193":{},"194":{},"203":{},"205":{},"209":{},"212":{},"216":{},"217":{},"219":{},"220":{},"221":{},"222":{},"223":{},"225":{},"227":{},"228":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"241":{},"246":{},"247":{},"249":{},"250":{},"257":{},"258":{},"259":{},"262":{},"264":{},"268":{},"269":{},"270":{},"273":{},"274":{},"277":{},"279":{},"280":{},"284":{},"290":{},"291":{},"292":{},"294":{},"295":{},"297":{},"298":{},"303":{},"305":{},"309":{},"311":{},"313":{},"314":{},"315":{},"316":{},"317":{},"319":{},"320":{},"322":{},"323":{},"324":{},"325":{},"326":{},"331":{},"337":{},"338":{},"341":{},"344":{},"345":{},"346":{},"347":{},"349":{},"352":{},"354":{},"355":{},"358":{},"359":{},"360":{},"361":{},"363":{},"364":{},"365":{},"366":{},"367":{},"371":{},"372":{},"373":{},"375":{},"376":{},"377":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"388":{},"389":{},"390":{},"392":{},"394":{},"395":{},"404":{},"405":{},"410":{},"426":{},"433":{},"437":{},"441":{},"442":{},"448":{},"450":{},"453":{},"461":{},"464":{},"465":{},"466":{},"468":{},"472":{},"474":{},"475":{},"476":{},"485":{},"487":{},"488":{},"489":{},"491":{},"499":{},"508":{},"513":{},"514":{},"518":{},"520":{},"525":{},"527":{},"528":{},"529":{},"531":{},"532":{},"533":{},"534":{},"535":{},"537":{},"538":{},"540":{},"542":{},"543":{},"544":{}},"component":{}}],["0",{"_index":734,"title":{"50-3":{}},"name":{},"text":{"7":{},"36":{},"37":{},"38":{},"41":{},"56":{},"77":{},"83":{},"154":{},"161":{},"162":{},"166":{},"167":{},"172":{},"185":{},"204":{},"205":{},"213":{},"216":{},"221":{},"222":{},"227":{},"228":{},"230":{},"234":{},"235":{},"243":{},"246":{},"247":{},"249":{},"250":{},"258":{},"259":{},"262":{},"270":{},"275":{},"283":{},"291":{},"294":{},"305":{},"313":{},"315":{},"317":{},"318":{},"331":{},"337":{},"339":{},"346":{},"349":{},"357":{},"358":{},"363":{},"364":{},"366":{},"374":{},"381":{},"453":{},"467":{},"489":{},"498":{},"500":{},"501":{},"514":{},"527":{},"537":{},"538":{},"542":{},"544":{}},"component":{}}],["0,1",{"_index":3303,"title":{},"name":{},"text":{"130":{}},"component":{}}],["0.###e0",{"_index":6107,"title":{},"name":{},"text":{"366":{}},"component":{}}],["0..24",{"_index":4860,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0..59",{"_index":4861,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0..60",{"_index":4862,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.0",{"_index":4180,"title":{},"name":{},"text":{"205":{}},"component":{}}],["0.0.0.0",{"_index":1911,"title":{},"name":{},"text":{"41":{},"50":{},"514":{}},"component":{}}],["0.00001",{"_index":5075,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.00073691",{"_index":5104,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.027322",{"_index":5113,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.027322465",{"_index":5133,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.035",{"_index":2431,"title":{},"name":{},"text":{"55":{}},"component":{}}],["0.052",{"_index":2424,"title":{},"name":{},"text":{"55":{}},"component":{}}],["0.054644930",{"_index":5131,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.054645",{"_index":5109,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.084224",{"_index":5035,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.092",{"_index":2013,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.1",{"_index":5212,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.1.18.2",{"_index":5143,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.1010491",{"_index":5083,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.108",{"_index":2958,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0.12",{"_index":4746,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.124652",{"_index":5032,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.126099999999",{"_index":4187,"title":{},"name":{},"text":{"205":{}},"component":{}}],["0.1261",{"_index":4181,"title":{},"name":{},"text":{"205":{}},"component":{}}],["0.1261000000001",{"_index":4188,"title":{},"name":{},"text":{"205":{}},"component":{}}],["0.12612612612612611",{"_index":4183,"title":{},"name":{},"text":{"205":{}},"component":{}}],["0.227",{"_index":2963,"title":{},"name":{},"text":{"83":{}},"component":{}}],["0.3",{"_index":5023,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.435",{"_index":1380,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0.45",{"_index":2598,"title":{},"name":{},"text":{"56":{}},"component":{}}],["0.450",{"_index":2599,"title":{},"name":{},"text":{"56":{}},"component":{}}],["0.462117",{"_index":5127,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.499",{"_index":1864,"title":{},"name":{},"text":{"38":{}},"component":{}}],["0.5",{"_index":4096,"title":{},"name":{},"text":{"205":{},"247":{}},"component":{}}],["0.5.0",{"_index":3190,"title":{},"name":{},"text":{"110":{}},"component":{}}],["0.542",{"_index":1861,"title":{},"name":{},"text":{"38":{}},"component":{}}],["0.54402111",{"_index":5079,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.57650273",{"_index":4928,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.57808219",{"_index":4933,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.58055556",{"_index":4924,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.65",{"_index":2432,"title":{},"name":{},"text":{"55":{}},"component":{}}],["0.650",{"_index":2433,"title":{},"name":{},"text":{"55":{}},"component":{}}],["0.668",{"_index":1384,"title":{},"name":{},"text":{"19":{}},"component":{}}],["0.70",{"_index":1300,"title":{},"name":{},"text":{"16":{}},"component":{}}],["0.785",{"_index":5119,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.9.1",{"_index":3204,"title":{},"name":{},"text":{"114":{}},"component":{}}],["0.964028",{"_index":5123,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.96403",{"_index":5124,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.977",{"_index":2027,"title":{},"name":{},"text":{"41":{}},"component":{}}],["0.99",{"_index":1277,"title":{},"name":{},"text":{"15":{}},"component":{}}],["0.99469533",{"_index":5102,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0.99920",{"_index":5118,"title":{},"name":{},"text":{"247":{}},"component":{}}],["0/1",{"_index":3707,"title":{},"name":{},"text":{"162":{},"247":{}},"component":{}}],["00",{"_index":732,"title":{},"name":{},"text":{"7":{},"305":{}},"component":{}}],["0000",{"_index":2487,"title":{},"name":{},"text":{"56":{},"305":{}},"component":{}}],["0000001",{"_index":4234,"title":{},"name":{},"text":{"217":{},"367":{},"383":{}},"component":{}}],["0001",{"_index":6840,"title":{},"name":{},"text":{"527":{}},"component":{}}],["00:00:00",{"_index":4303,"title":{},"name":{},"text":{"227":{},"256":{}},"component":{}}],["00:00:00.000",{"_index":5765,"title":{},"name":{},"text":{"304":{},"305":{}},"component":{}}],["01",{"_index":485,"title":{},"name":{},"text":{"5":{},"10":{},"220":{},"304":{},"305":{},"349":{},"350":{},"366":{}},"component":{}}],["0166",{"_index":1777,"title":{},"name":{},"text":{"37":{}},"component":{}}],["01t01:40:26.210",{"_index":5451,"title":{},"name":{},"text":{"270":{}},"component":{}}],["02",{"_index":1214,"title":{},"name":{},"text":{"10":{},"247":{}},"component":{}}],["04",{"_index":1203,"title":{},"name":{},"text":{"10":{},"164":{},"273":{}},"component":{}}],["05",{"_index":1190,"title":{},"name":{},"text":{"10":{},"56":{},"247":{}},"component":{}}],["06",{"_index":1189,"title":{},"name":{},"text":{"10":{},"244":{}},"component":{}}],["06:59:03",{"_index":1381,"title":{},"name":{},"text":{"19":{}},"component":{}}],["06:59:04",{"_index":1383,"title":{},"name":{},"text":{"19":{}},"component":{}}],["06aff689afe0\",\"ec974060",{"_index":1812,"title":{},"name":{},"text":{"37":{}},"component":{}}],["06b0",{"_index":1817,"title":{},"name":{},"text":{"37":{}},"component":{}}],["07",{"_index":1969,"title":{},"name":{},"text":{"41":{},"56":{},"247":{},"366":{}},"component":{}}],["07:07:47",{"_index":1360,"title":{},"name":{},"text":{"19":{}},"component":{}}],["07:20:19",{"_index":1410,"title":{},"name":{},"text":{"19":{}},"component":{}}],["07:33:44",{"_index":1401,"title":{},"name":{},"text":{"19":{}},"component":{}}],["07:50:08",{"_index":2486,"title":{},"name":{},"text":{"56":{}},"component":{}}],["07t07:50:08.601+0000",{"_index":2503,"title":{},"name":{},"text":{"56":{}},"component":{}}],["07t07:50:08.652+0000",{"_index":2506,"title":{},"name":{},"text":{"56":{}},"component":{}}],["07t07:50:08.653+0000",{"_index":2508,"title":{},"name":{},"text":{"56":{}},"component":{}}],["07t07:50:08.657+0000",{"_index":2510,"title":{},"name":{},"text":{"56":{}},"component":{}}],["07t07:50:08.658+0000",{"_index":2514,"title":{},"name":{},"text":{"56":{}},"component":{}}],["07t07:50:08.660+0000",{"_index":2517,"title":{},"name":{},"text":{"56":{}},"component":{}}],["08",{"_index":2620,"title":{},"name":{},"text":{"56":{},"247":{},"256":{}},"component":{}}],["0800",{"_index":6125,"title":{},"name":{},"text":{"366":{}},"component":{}}],["08:00",{"_index":6122,"title":{},"name":{},"text":{"366":{}},"component":{}}],["08:21:34",{"_index":2621,"title":{},"name":{},"text":{"56":{}},"component":{}}],["08:52:35",{"_index":3599,"title":{},"name":{},"text":{"161":{}},"component":{}}],["08:52:44",{"_index":3612,"title":{},"name":{},"text":{"161":{}},"component":{}}],["08:52:45",{"_index":3619,"title":{},"name":{},"text":{"161":{}},"component":{}}],["08:52:46",{"_index":3620,"title":{},"name":{},"text":{"161":{}},"component":{}}],["08:52:47",{"_index":3622,"title":{},"name":{},"text":{"161":{}},"component":{}}],["09",{"_index":1184,"title":{},"name":{},"text":{"10":{}},"component":{}}],["09:01:07",{"_index":3639,"title":{},"name":{},"text":{"161":{}},"component":{}}],["09:30:23",{"_index":5394,"title":{},"name":{},"text":{"258":{}},"component":{}}],["0:00",{"_index":4145,"title":{},"name":{},"text":{"205":{}},"component":{}}],["0d",{"_index":4411,"title":{},"name":{},"text":{"237":{}},"component":{}}],["0d,0a",{"_index":4412,"title":{},"name":{},"text":{"237":{}},"component":{}}],["0kpgruz9hxv1j+oa26ibica6qubi2fevkh7o4vzadnlzp7vgukzg6edsbsbvbcgcbaeflmren2e5",{"_index":2144,"title":{},"name":{},"text":{"42":{}},"component":{}}],["0s",{"_index":6300,"title":{},"name":{},"text":{"400":{}},"component":{}}],["0w1awnlaxpxigjid6kmex0qu6z9osnmerokmrryaxmmr1hwj/tusdc0mqwvmd0ksf0nfwjjbxaod",{"_index":2136,"title":{},"name":{},"text":{"42":{}},"component":{}}],["1",{"_index":200,"title":{"50-4":{},"53-1":{},"54-1":{},"349-6":{}},"name":{},"text":{"1":{},"5":{},"7":{},"27":{},"37":{},"38":{},"41":{},"42":{},"52":{},"55":{},"56":{},"57":{},"83":{},"88":{},"90":{},"93":{},"133":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"170":{},"174":{},"178":{},"179":{},"185":{},"204":{},"205":{},"216":{},"217":{},"222":{},"227":{},"246":{},"247":{},"249":{},"250":{},"262":{},"263":{},"264":{},"270":{},"273":{},"274":{},"275":{},"290":{},"291":{},"292":{},"294":{},"313":{},"324":{},"337":{},"357":{},"358":{},"366":{},"367":{},"372":{},"373":{},"374":{},"380":{},"381":{},"383":{},"389":{},"405":{},"453":{},"456":{},"460":{},"461":{},"463":{},"464":{},"489":{},"511":{},"520":{},"527":{},"530":{},"537":{},"538":{}},"component":{}}],["1)=date(2005;11;1",{"_index":4775,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1)=date(2005;7;30",{"_index":4778,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1)=date(2006;3;30",{"_index":4777,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1,000",{"_index":6303,"title":{},"name":{},"text":{"400":{}},"component":{}}],["1,000.10",{"_index":6306,"title":{},"name":{},"text":{"400":{}},"component":{}}],["1,037.03",{"_index":4939,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1,048,575",{"_index":4390,"title":{},"name":{},"text":{"235":{}},"component":{}}],["1,1",{"_index":5052,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1,188.44",{"_index":5012,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1,190.9",{"_index":5201,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1,234.6",{"_index":5192,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1.0",{"_index":1375,"title":{},"name":{},"text":{"19":{},"38":{},"161":{},"305":{}},"component":{}}],["1.0.0",{"_index":3748,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.000",{"_index":6304,"title":{},"name":{},"text":{"400":{}},"component":{}}],["1.000,10",{"_index":6307,"title":{},"name":{},"text":{"400":{}},"component":{}}],["1.03",{"_index":5084,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1.1",{"_index":1939,"title":{},"name":{},"text":{"41":{},"50":{}},"component":{}}],["1.1.0",{"_index":3747,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.11",{"_index":3751,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.13",{"_index":3531,"title":{},"name":{},"text":{"160":{},"163":{},"167":{}},"component":{}}],["1.13.5/config/hop",{"_index":3554,"title":{},"name":{},"text":{"160":{}},"component":{}}],["1.14.4",{"_index":3744,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.15.2",{"_index":3742,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.15.x",{"_index":3735,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.16.x",{"_index":3730,"title":{},"name":{},"text":{"163":{}},"component":{}}],["1.2",{"_index":3530,"title":{},"name":{},"text":{"160":{},"247":{}},"component":{}}],["1.2.0",{"_index":3745,"title":{},"name":{},"text":{"163":{},"540":{}},"component":{}}],["1.234e3",{"_index":6109,"title":{},"name":{},"text":{"366":{}},"component":{}}],["1.27.0",{"_index":6826,"title":{},"name":{},"text":{"527":{}},"component":{}}],["1.3.3.1004",{"_index":3229,"title":{},"name":{},"text":{"117":{}},"component":{}}],["1.3.6",{"_index":3533,"title":{},"name":{},"text":{"160":{}},"component":{}}],["1.475",{"_index":5056,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1.48",{"_index":5057,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1.when",{"_index":4890,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1/(24*60*60",{"_index":4820,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1/1",{"_index":3710,"title":{},"name":{},"text":{"162":{}},"component":{}}],["1/1/2012",{"_index":4925,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1/2",{"_index":1222,"title":{},"name":{},"text":{"10":{},"205":{}},"component":{}}],["1/3",{"_index":1207,"title":{},"name":{},"text":{"10":{}},"component":{}}],["10",{"_index":1177,"title":{},"name":{},"text":{"10":{},"27":{},"46":{},"55":{},"56":{},"178":{},"216":{},"219":{},"227":{},"247":{},"270":{},"273":{},"287":{},"292":{},"335":{},"337":{},"366":{},"381":{},"462":{},"483":{},"527":{},"528":{},"542":{}},"component":{}}],["10,000",{"_index":4607,"title":{},"name":{},"text":{"243":{}},"component":{}}],["10,000.00",{"_index":3957,"title":{},"name":{},"text":{"178":{},"217":{},"258":{},"273":{},"316":{},"366":{},"367":{},"383":{}},"component":{}}],["10,20,30,40,50..60",{"_index":5935,"title":{},"name":{},"text":{"335":{}},"component":{}}],["10.0.0.1",{"_index":151,"title":{},"name":{},"text":{"1":{},"13":{},"401":{},"402":{}},"component":{}}],["10.000",{"_index":2701,"title":{},"name":{},"text":{"68":{},"169":{}},"component":{}}],["10.16.1.1",{"_index":3195,"title":{},"name":{},"text":{"112":{}},"component":{}}],["10/1/2012",{"_index":4841,"title":{},"name":{},"text":{"247":{}},"component":{}}],["10/1/2021",{"_index":4837,"title":{},"name":{},"text":{"247":{}},"component":{}}],["10/11",{"_index":1199,"title":{},"name":{},"text":{"10":{}},"component":{}}],["10/3",{"_index":5044,"title":{},"name":{},"text":{"247":{}},"component":{}}],["100",{"_index":1635,"title":{},"name":{},"text":{"27":{},"29":{},"36":{},"37":{},"42":{},"61":{},"79":{},"154":{},"169":{},"203":{},"205":{},"243":{},"246":{},"247":{},"292":{},"322":{},"366":{},"453":{}},"component":{}}],["1000",{"_index":853,"title":{},"name":{},"text":{"7":{},"27":{},"42":{},"53":{},"54":{},"62":{},"167":{},"168":{},"247":{},"298":{},"366":{}},"component":{}}],["10000",{"_index":861,"title":{},"name":{},"text":{"7":{},"42":{},"163":{},"264":{}},"component":{}}],["1000000",{"_index":6430,"title":{},"name":{},"text":{"453":{}},"component":{}}],["10000000",{"_index":5731,"title":{},"name":{},"text":{"298":{}},"component":{}}],["1000m",{"_index":3918,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["100m",{"_index":3528,"title":{},"name":{},"text":{"159":{},"160":{}},"component":{}}],["101",{"_index":5846,"title":{},"name":{},"text":{"320":{}},"component":{}}],["102",{"_index":5453,"title":{},"name":{},"text":{"270":{}},"component":{}}],["1024",{"_index":814,"title":{},"name":{},"text":{"7":{},"98":{},"161":{},"165":{}},"component":{}}],["1048576",{"_index":5774,"title":{},"name":{},"text":{"305":{}},"component":{}}],["105",{"_index":5456,"title":{},"name":{},"text":{"270":{}},"component":{}}],["10646",{"_index":5215,"title":{},"name":{},"text":{"247":{}},"component":{}}],["10672",{"_index":3867,"title":{},"name":{},"text":{"167":{}},"component":{}}],["109",{"_index":4840,"title":{},"name":{},"text":{"247":{}},"component":{}}],["10:00",{"_index":2628,"title":{},"name":{},"text":{"56":{}},"component":{}}],["10:05:23",{"_index":2962,"title":{},"name":{},"text":{"83":{}},"component":{}}],["10:14:42",{"_index":2637,"title":{},"name":{},"text":{"57":{}},"component":{}}],["10:58:03",{"_index":4874,"title":{},"name":{},"text":{"247":{}},"component":{}}],["10;000.00",{"_index":6095,"title":{},"name":{},"text":{"366":{}},"component":{}}],["10pb",{"_index":4327,"title":{},"name":{},"text":{"228":{}},"component":{}}],["11",{"_index":472,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"14":{},"162":{},"164":{},"247":{},"317":{},"366":{},"381":{},"514":{},"531":{},"543":{}},"component":{}}],["11.0.15",{"_index":3783,"title":{},"name":{},"text":{"164":{}},"component":{}}],["11.0.15+0",{"_index":3786,"title":{},"name":{},"text":{"164":{}},"component":{}}],["11.0.17.8",{"_index":1321,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["11.0.2",{"_index":483,"title":{},"name":{},"text":{"5":{}},"component":{}}],["11.0.2+9",{"_index":488,"title":{},"name":{},"text":{"5":{}},"component":{}}],["11.1",{"_index":3311,"title":{},"name":{},"text":{"133":{}},"component":{}}],["11.2.3.jre11.jar",{"_index":3285,"title":{},"name":{},"text":{"130":{}},"component":{}}],["11.2.3.x64.dll",{"_index":3279,"title":{},"name":{},"text":{"130":{}},"component":{}}],["11/22/2012",{"_index":4843,"title":{},"name":{},"text":{"247":{}},"component":{}}],["110",{"_index":4836,"title":{},"name":{},"text":{"247":{}},"component":{}}],["117)*60*60*24",{"_index":4872,"title":{},"name":{},"text":{"247":{}},"component":{}}],["117;0)*60*60*24",{"_index":4876,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1190.9",{"_index":5199,"title":{},"name":{},"text":{"247":{}},"component":{}}],["11:25:07",{"_index":2417,"title":{},"name":{},"text":{"55":{}},"component":{}}],["11:25:08",{"_index":2426,"title":{},"name":{},"text":{"55":{}},"component":{}}],["11:28:36",{"_index":3525,"title":{},"name":{},"text":{"159":{}},"component":{}}],["11:29:24",{"_index":3526,"title":{},"name":{},"text":{"159":{}},"component":{}}],["11:29:26",{"_index":3527,"title":{},"name":{},"text":{"159":{}},"component":{}}],["11:30:44",{"_index":3529,"title":{},"name":{},"text":{"159":{}},"component":{}}],["11:59:59",{"_index":4867,"title":{},"name":{},"text":{"247":{}},"component":{}}],["11g",{"_index":3310,"title":{},"name":{},"text":{"133":{}},"component":{}}],["12",{"_index":1197,"title":{},"name":{},"text":{"10":{},"178":{},"227":{},"247":{},"270":{},"291":{},"322":{},"366":{},"381":{}},"component":{}}],["12*[field3",{"_index":4945,"title":{},"name":{},"text":{"247":{}},"component":{}}],["12,345.68",{"_index":5307,"title":{},"name":{},"text":{"247":{}},"component":{}}],["12.4.1.jre11",{"_index":3267,"title":{},"name":{},"text":{"130":{}},"component":{}}],["121ab12",{"_index":5292,"title":{},"name":{},"text":{"247":{}},"component":{}}],["123",{"_index":6106,"title":{},"name":{},"text":{"366":{}},"component":{}}],["1230",{"_index":5194,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1234",{"_index":6108,"title":{},"name":{},"text":{"366":{},"533":{}},"component":{}}],["12345",{"_index":7048,"title":{},"name":{},"text":{"533":{}},"component":{}}],["12345x.europ",{"_index":4055,"title":{},"name":{},"text":{"197":{},"275":{},"276":{}},"component":{}}],["1234q56789",{"_index":5253,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1234q89",{"_index":5251,"title":{},"name":{},"text":{"247":{}},"component":{}}],["125",{"_index":4879,"title":{},"name":{},"text":{"247":{}},"component":{}}],["127.0.0.1",{"_index":1916,"title":{},"name":{},"text":{"41":{},"130":{},"161":{},"168":{}},"component":{}}],["127.0.0.1:8081",{"_index":3717,"title":{},"name":{},"text":{"162":{}},"component":{}}],["128k",{"_index":5736,"title":{},"name":{},"text":{"298":{}},"component":{}}],["129625",{"_index":3560,"title":{},"name":{},"text":{"160":{}},"component":{}}],["12:00:00",{"_index":4864,"title":{},"name":{},"text":{"247":{}},"component":{}}],["12:25:45",{"_index":4825,"title":{},"name":{},"text":{"247":{}},"component":{}}],["12:30:52",{"_index":6249,"title":{},"name":{},"text":{"380":{}},"component":{}}],["12:34:56",{"_index":4623,"title":{},"name":{},"text":{"244":{},"247":{}},"component":{}}],["12:34:56\")=date(2004;12;25",{"_index":4786,"title":{},"name":{},"text":{"247":{}},"component":{}}],["12:50:25",{"_index":3555,"title":{},"name":{},"text":{"160":{}},"component":{}}],["12:50:26",{"_index":3556,"title":{},"name":{},"text":{"160":{}},"component":{}}],["12:52:45",{"_index":3574,"title":{},"name":{},"text":{"160":{}},"component":{}}],["12:56:45",{"_index":4884,"title":{},"name":{},"text":{"247":{}},"component":{}}],["13",{"_index":4769,"title":{},"name":{},"text":{"247":{},"292":{},"381":{}},"component":{}}],["130c",{"_index":3653,"title":{},"name":{},"text":{"161":{}},"component":{}}],["1333",{"_index":4116,"title":{},"name":{},"text":{"205":{}},"component":{}}],["13:26:45",{"_index":2007,"title":{},"name":{},"text":{"41":{}},"component":{}}],["13:26:45.128",{"_index":2003,"title":{},"name":{},"text":{"41":{}},"component":{}}],["13:26:45.220",{"_index":2004,"title":{},"name":{},"text":{"41":{}},"component":{}}],["13:27:04",{"_index":2002,"title":{},"name":{},"text":{"41":{}},"component":{}}],["13:27:04.363",{"_index":2005,"title":{},"name":{},"text":{"41":{}},"component":{}}],["13:37:27",{"_index":3721,"title":{},"name":{},"text":{"162":{}},"component":{}}],["13:37:28",{"_index":3722,"title":{},"name":{},"text":{"162":{}},"component":{}}],["13:47:49.645",{"_index":2094,"title":{},"name":{},"text":{"42":{}},"component":{}}],["13:54:39",{"_index":2593,"title":{},"name":{},"text":{"56":{}},"component":{}}],["13:54:40",{"_index":2600,"title":{},"name":{},"text":{"56":{}},"component":{}}],["14",{"_index":3964,"title":{},"name":{},"text":{"178":{},"247":{},"381":{},"489":{}},"component":{}}],["1433",{"_index":3292,"title":{},"name":{},"text":{"130":{}},"component":{}}],["144)*60*60*24",{"_index":4880,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1440",{"_index":866,"title":{},"name":{},"text":{"7":{},"19":{},"41":{},"514":{}},"component":{}}],["14:02:13",{"_index":1995,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:06:39",{"_index":1863,"title":{},"name":{},"text":{"38":{}},"component":{}}],["14:09:58",{"_index":1860,"title":{},"name":{},"text":{"38":{}},"component":{}}],["14:18:00",{"_index":1968,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:18:00.267:info::main",{"_index":1970,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:18:00.276:dbug:oejuc.containerlifecycle:main",{"_index":1974,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:18:00.303:dbug:oejuc.containerlifecycle:main",{"_index":1977,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:18:00.304:dbug:oeju.decoratedobjectfactory:main",{"_index":1980,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:23:10",{"_index":3355,"title":{},"name":{},"text":{"151":{},"152":{}},"component":{}}],["14:23:21",{"_index":3357,"title":{},"name":{},"text":{"151":{},"152":{}},"component":{}}],["14:27:37",{"_index":3371,"title":{},"name":{},"text":{"151":{}},"component":{}}],["14:27:41",{"_index":3372,"title":{},"name":{},"text":{"151":{}},"component":{}}],["14:27:42",{"_index":3373,"title":{},"name":{},"text":{"151":{}},"component":{}}],["14:27:45",{"_index":2020,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:27:45.891",{"_index":2019,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:27:46",{"_index":2021,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:27:47",{"_index":2022,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:27:48",{"_index":2028,"title":{},"name":{},"text":{"41":{}},"component":{}}],["14:40:51",{"_index":6293,"title":{},"name":{},"text":{"389":{}},"component":{}}],["14:40:54",{"_index":6295,"title":{},"name":{},"text":{"389":{}},"component":{}}],["14:40:55",{"_index":6296,"title":{},"name":{},"text":{"389":{}},"component":{}}],["14f01b28",{"_index":3652,"title":{},"name":{},"text":{"161":{}},"component":{}}],["15",{"_index":486,"title":{},"name":{},"text":{"5":{},"10":{},"41":{},"247":{},"381":{}},"component":{}}],["150",{"_index":3137,"title":{},"name":{},"text":{"99":{}},"component":{}}],["1582",{"_index":4915,"title":{},"name":{},"text":{"247":{}},"component":{}}],["15:44:18",{"_index":3516,"title":{},"name":{},"text":{"158":{}},"component":{}}],["15:44:19",{"_index":3517,"title":{},"name":{},"text":{"158":{}},"component":{}}],["15:47:25",{"_index":3518,"title":{},"name":{},"text":{"158":{}},"component":{}}],["16",{"_index":1636,"title":{},"name":{},"text":{"27":{},"168":{},"234":{},"338":{},"366":{},"367":{}},"component":{}}],["16,384",{"_index":4391,"title":{},"name":{},"text":{"235":{}},"component":{}}],["160",{"_index":2100,"title":{},"name":{},"text":{"42":{}},"component":{}}],["160000",{"_index":5341,"title":{},"name":{},"text":{"248":{}},"component":{}}],["1605",{"_index":7066,"title":{"536-1":{}},"name":{},"text":{},"component":{}}],["16384000",{"_index":4199,"title":{},"name":{},"text":{"207":{}},"component":{}}],["165",{"_index":5016,"title":{},"name":{},"text":{"247":{}},"component":{}}],["16:37:02",{"_index":6291,"title":{},"name":{},"text":{"389":{}},"component":{}}],["16:39:29",{"_index":2213,"title":{},"name":{},"text":{"46":{}},"component":{}}],["16:39:37",{"_index":2229,"title":{},"name":{},"text":{"46":{}},"component":{}}],["16:39:41",{"_index":2231,"title":{},"name":{},"text":{"46":{}},"component":{}}],["16:39:43",{"_index":2233,"title":{},"name":{},"text":{"46":{}},"component":{}}],["17.0.6.10",{"_index":3281,"title":{},"name":{},"text":{"130":{}},"component":{}}],["1723.86",{"_index":5855,"title":{},"name":{},"text":{"320":{}},"component":{}}],["18",{"_index":3092,"title":{},"name":{},"text":{"92":{}},"component":{}}],["18.9",{"_index":487,"title":{},"name":{},"text":{"5":{}},"component":{}}],["186",{"_index":1276,"title":{},"name":{},"text":{"15":{}},"component":{}}],["1888",{"_index":7067,"title":{"536-3":{}},"name":{},"text":{},"component":{}}],["189",{"_index":6113,"title":{},"name":{},"text":{"366":{}},"component":{}}],["18:13:39.786",{"_index":1553,"title":{},"name":{},"text":{"25":{}},"component":{}}],["18:13:39.790",{"_index":1557,"title":{},"name":{},"text":{"25":{}},"component":{}}],["18:13:39.797",{"_index":1562,"title":{},"name":{},"text":{"25":{}},"component":{}}],["18:14:37",{"_index":1566,"title":{},"name":{},"text":{"25":{}},"component":{}}],["18:35:12",{"_index":1994,"title":{},"name":{},"text":{"41":{}},"component":{}}],["19",{"_index":3784,"title":{},"name":{},"text":{"164":{}},"component":{}}],["190.00",{"_index":5170,"title":{},"name":{},"text":{"247":{}},"component":{}}],["190.000",{"_index":5196,"title":{},"name":{},"text":{"247":{}},"component":{}}],["190.9",{"_index":5172,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1900",{"_index":4753,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1904",{"_index":4751,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1915",{"_index":4910,"title":{},"name":{},"text":{"247":{}},"component":{}}],["192",{"_index":840,"title":{},"name":{},"text":{"7":{}},"component":{}}],["192.168",{"_index":841,"title":{},"name":{},"text":{"7":{}},"component":{}}],["192.168.1.1",{"_index":839,"title":{},"name":{},"text":{"7":{}},"component":{}}],["192.168.1.221",{"_index":1912,"title":{},"name":{},"text":{"41":{}},"component":{}}],["192.168.86.44",{"_index":3603,"title":{},"name":{},"text":{"161":{}},"component":{}}],["192168",{"_index":842,"title":{},"name":{},"text":{"7":{}},"component":{}}],["1969/02/14",{"_index":5853,"title":{},"name":{},"text":{"320":{}},"component":{}}],["1970",{"_index":5764,"title":{},"name":{},"text":{"304":{},"305":{}},"component":{}}],["1990",{"_index":2959,"title":{},"name":{},"text":{"83":{}},"component":{}}],["1:00",{"_index":4146,"title":{},"name":{},"text":{"205":{}},"component":{}}],["1:07:24",{"_index":4870,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1;0",{"_index":5238,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1;name",{"_index":5543,"title":{},"name":{},"text":{"273":{}},"component":{}}],["1]:8081",{"_index":3718,"title":{},"name":{},"text":{"162":{}},"component":{}}],["1a",{"_index":4639,"title":{},"name":{},"text":{"246":{}},"component":{}}],["1ab1ab1ab",{"_index":5290,"title":{},"name":{},"text":{"247":{}},"component":{}}],["1b30bd987561\",\"32837620",{"_index":1820,"title":{},"name":{},"text":{"37":{}},"component":{}}],["1k.txt",{"_index":3511,"title":{},"name":{},"text":{"158":{}},"component":{}}],["1kb",{"_index":5773,"title":{},"name":{},"text":{"305":{}},"component":{}}],["1m",{"_index":5737,"title":{},"name":{},"text":{"298":{},"544":{}},"component":{}}],["1m.0",{"_index":2023,"title":{},"name":{},"text":{"41":{}},"component":{}}],["1m.txt",{"_index":3510,"title":{},"name":{},"text":{"158":{}},"component":{}}],["1s",{"_index":4065,"title":{},"name":{},"text":{"198":{}},"component":{}}],["1st",{"_index":5231,"title":{},"name":{},"text":{"247":{},"366":{}},"component":{}}],["1”;1",{"_index":5180,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2",{"_index":204,"title":{"50-5":{},"53-2":{},"54-2":{},"349-7":{}},"name":{},"text":{"1":{},"7":{},"24":{},"30":{},"38":{},"41":{},"52":{},"57":{},"82":{},"90":{},"93":{},"97":{},"151":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"170":{},"174":{},"178":{},"179":{},"181":{},"185":{},"205":{},"223":{},"227":{},"247":{},"250":{},"264":{},"270":{},"273":{},"274":{},"290":{},"292":{},"297":{},"317":{},"324":{},"337":{},"349":{},"354":{},"358":{},"366":{},"373":{},"380":{},"381":{},"384":{},"389":{},"405":{},"456":{},"460":{},"464":{},"480":{},"489":{},"507":{},"511":{},"527":{},"528":{},"529":{},"533":{},"537":{},"541":{}},"component":{}}],["2).trim",{"_index":6224,"title":{},"name":{},"text":{"373":{}},"component":{}}],["2)=date(2017",{"_index":4764,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2+3",{"_index":5089,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2+true",{"_index":4970,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2,3",{"_index":4993,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.0",{"_index":1372,"title":{},"name":{},"text":{"19":{},"38":{},"99":{},"305":{},"518":{},"533":{}},"component":{}}],["2.0.0",{"_index":3662,"title":{},"name":{},"text":{"162":{},"163":{}},"component":{}}],["2.1.0",{"_index":3739,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.1.0.19",{"_index":3326,"title":{},"name":{},"text":{"136":{}},"component":{}}],["2.11",{"_index":3535,"title":{},"name":{},"text":{"160":{},"163":{}},"component":{}}],["2.12",{"_index":3729,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.2.0",{"_index":3738,"title":{},"name":{},"text":{"163":{},"429":{}},"component":{}}],["2.2.224",{"_index":3239,"title":{},"name":{},"text":{"119":{}},"component":{}}],["2.22.0",{"_index":3843,"title":{},"name":{},"text":{"166":{}},"component":{}}],["2.3.0",{"_index":3736,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.30258509",{"_index":4980,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.32.0",{"_index":3749,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.35.0",{"_index":3746,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.38.0",{"_index":3743,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.4.0",{"_index":3732,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.4.8",{"_index":3750,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.41.0",{"_index":3740,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.43.0",{"_index":3737,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.46.0",{"_index":3733,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.48.0",{"_index":3731,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.5",{"_index":4766,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.5.0",{"_index":563,"title":{},"name":{},"text":{"5":{},"55":{},"117":{},"163":{}},"component":{}}],["2.50.0",{"_index":3728,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.6.0",{"_index":3727,"title":{},"name":{},"text":{"163":{}},"component":{}}],["2.60",{"_index":564,"title":{},"name":{},"text":{"5":{}},"component":{}}],["2.7",{"_index":3576,"title":{},"name":{},"text":{"161":{}},"component":{}}],["2.7.2",{"_index":3242,"title":{},"name":{},"text":{"120":{}},"component":{}}],["2.714",{"_index":2031,"title":{},"name":{},"text":{"41":{}},"component":{}}],["2.715",{"_index":2030,"title":{},"name":{},"text":{"41":{}},"component":{}}],["2.718",{"_index":4988,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.7182818",{"_index":4986,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.73",{"_index":5114,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.868*sinh(0.0342*1.03",{"_index":5082,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.when",{"_index":4891,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2.x",{"_index":7070,"title":{},"name":{},"text":{"536":{},"543":{}},"component":{}}],["2/2",{"_index":1225,"title":{},"name":{},"text":{"10":{}},"component":{}}],["2/28/2022",{"_index":4809,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2/3",{"_index":1205,"title":{},"name":{},"text":{"10":{}},"component":{}}],["2/6tmt0uj4tvas+fz0s/jvy/x3qb/z91y5itdltjaazoxjzvgwa/3u9gb/fc2tcbxbyoggub9jc",{"_index":2146,"title":{},"name":{},"text":{"42":{}},"component":{}}],["20",{"_index":792,"title":{},"name":{"536":{}},"text":{"7":{},"10":{},"169":{},"247":{},"298":{},"335":{},"364":{},"530":{},"542":{}},"component":{}}],["20.0.6",{"_index":3182,"title":{},"name":{},"text":{"108":{}},"component":{}}],["20.333333",{"_index":5140,"title":{},"name":{},"text":{"247":{}},"component":{}}],["200",{"_index":4407,"title":{},"name":{},"text":{"236":{},"263":{}},"component":{}}],["2000",{"_index":2660,"title":{},"name":{},"text":{"62":{},"247":{}},"component":{}}],["2000m",{"_index":3919,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["2004",{"_index":4760,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2005",{"_index":4383,"title":{},"name":{},"text":{"234":{},"247":{}},"component":{}}],["20051028",{"_index":4380,"title":{},"name":{},"text":{"234":{}},"component":{}}],["20051231",{"_index":6614,"title":{},"name":{},"text":{"503":{}},"component":{}}],["2006",{"_index":4621,"title":{},"name":{},"text":{"244":{},"366":{}},"component":{}}],["20081231",{"_index":5795,"title":{},"name":{},"text":{"314":{},"352":{}},"component":{}}],["20091231",{"_index":6513,"title":{},"name":{},"text":{"468":{}},"component":{}}],["2012",{"_index":4930,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2014",{"_index":5664,"title":{},"name":{},"text":{"291":{}},"component":{}}],["2015",{"_index":4911,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2019",{"_index":484,"title":{},"name":{},"text":{"5":{},"247":{},"520":{},"521":{}},"component":{}}],["2020",{"_index":6748,"title":{},"name":{},"text":{"519":{}},"component":{}}],["2020/05/14",{"_index":6248,"title":{},"name":{},"text":{"380":{}},"component":{}}],["2020/06/20",{"_index":1993,"title":{},"name":{},"text":{"41":{}},"component":{}}],["2021",{"_index":1196,"title":{},"name":{},"text":{"10":{},"25":{},"273":{},"519":{}},"component":{}}],["2021/02/01",{"_index":6290,"title":{},"name":{},"text":{"389":{}},"component":{}}],["2021/04/21",{"_index":2949,"title":{},"name":{},"text":{"83":{}},"component":{}}],["2021/04/22",{"_index":1565,"title":{},"name":{},"text":{"25":{},"83":{}},"component":{}}],["2021/06/22",{"_index":2212,"title":{},"name":{},"text":{"46":{}},"component":{}}],["2021/10/01",{"_index":2001,"title":{},"name":{},"text":{"41":{}},"component":{}}],["2022",{"_index":1176,"title":{},"name":{},"text":{"10":{},"41":{},"164":{}},"component":{}}],["2022/02/03",{"_index":2093,"title":{},"name":{},"text":{"42":{}},"component":{}}],["2022/02/11",{"_index":3524,"title":{},"name":{},"text":{"159":{},"160":{}},"component":{}}],["2022/06/27",{"_index":3720,"title":{},"name":{},"text":{"162":{}},"component":{}}],["2022/07/15",{"_index":1967,"title":{},"name":{},"text":{"41":{}},"component":{}}],["2022/12/12",{"_index":1859,"title":{},"name":{},"text":{"38":{}},"component":{}}],["2022/12/15",{"_index":6292,"title":{},"name":{},"text":{"389":{}},"component":{}}],["2022/12/16",{"_index":1359,"title":{},"name":{},"text":{"19":{},"41":{},"151":{},"152":{}},"component":{}}],["2023",{"_index":2485,"title":{},"name":{},"text":{"56":{}},"component":{}}],["2023/04/24",{"_index":2416,"title":{},"name":{},"text":{"55":{}},"component":{}}],["2023/05/01",{"_index":2636,"title":{},"name":{},"text":{"57":{}},"component":{}}],["2023/05/07",{"_index":2596,"title":{},"name":{},"text":{"56":{}},"component":{}}],["2023/05/08",{"_index":2622,"title":{},"name":{},"text":{"56":{}},"component":{}}],["2023/06/03",{"_index":3515,"title":{},"name":{},"text":{"158":{}},"component":{}}],["2023/07/21",{"_index":5393,"title":{},"name":{},"text":{"258":{}},"component":{}}],["2023/10/08",{"_index":3618,"title":{},"name":{},"text":{"161":{}},"component":{}}],["2024",{"_index":5537,"title":{},"name":{},"text":{"273":{}},"component":{}}],["2048mb",{"_index":576,"title":{},"name":{},"text":{"5":{}},"component":{}}],["20g",{"_index":5732,"title":{},"name":{},"text":{"298":{}},"component":{}}],["20gb",{"_index":2376,"title":{},"name":{},"text":{"52":{}},"component":{}}],["21",{"_index":1034,"title":{},"name":{},"text":{"8":{},"162":{},"247":{}},"component":{}}],["2199",{"_index":4323,"title":{},"name":{},"text":{"227":{}},"component":{}}],["21:16:43",{"_index":2950,"title":{},"name":{},"text":{"83":{}},"component":{}}],["22",{"_index":1217,"title":{},"name":{},"text":{"10":{},"25":{},"247":{},"326":{},"487":{},"488":{}},"component":{}}],["223",{"_index":5944,"title":{},"name":{},"text":{"337":{}},"component":{}}],["224",{"_index":3835,"title":{},"name":{},"text":{"165":{}},"component":{}}],["22t00:00:00.000z",{"_index":5538,"title":{},"name":{},"text":{"273":{}},"component":{}}],["23",{"_index":4622,"title":{},"name":{},"text":{"244":{},"247":{},"366":{},"542":{}},"component":{}}],["23\");datevalue(\"2004",{"_index":4794,"title":{},"name":{},"text":{"247":{}},"component":{}}],["23.7825",{"_index":5053,"title":{},"name":{},"text":{"247":{}},"component":{}}],["23/10/08",{"_index":3598,"title":{},"name":{},"text":{"161":{}},"component":{}}],["235959",{"_index":5796,"title":{},"name":{},"text":{"314":{},"352":{},"468":{},"503":{}},"component":{}}],["23:59:59",{"_index":5381,"title":{},"name":{},"text":{"256":{}},"component":{}}],["23:59:59.999",{"_index":4324,"title":{},"name":{},"text":{"227":{}},"component":{}}],["24",{"_index":1210,"title":{},"name":{},"text":{"10":{},"56":{},"247":{},"366":{}},"component":{}}],["2491",{"_index":3861,"title":{},"name":{},"text":{"167":{}},"component":{}}],["25",{"_index":2490,"title":{},"name":{},"text":{"56":{},"61":{},"84":{},"247":{},"528":{}},"component":{}}],["25\");datevalue(\"2004",{"_index":4795,"title":{},"name":{},"text":{"247":{}},"component":{}}],["25\")=date(2004;12;25",{"_index":4785,"title":{},"name":{},"text":{"247":{}},"component":{}}],["254",{"_index":4949,"title":{},"name":{},"text":{"247":{}},"component":{}}],["255",{"_index":5150,"title":{},"name":{},"text":{"247":{}},"component":{}}],["256",{"_index":3948,"title":{},"name":{},"text":{"174":{}},"component":{}}],["25m",{"_index":2967,"title":{},"name":{},"text":{"84":{}},"component":{}}],["25px",{"_index":2836,"title":{},"name":{},"text":{"78":{}},"component":{}}],["26",{"_index":1178,"title":{},"name":{},"text":{"10":{}},"component":{}}],["26param1%3dvalue%3fparam2%3dvalue2",{"_index":5317,"title":{},"name":{},"text":{"247":{}},"component":{}}],["26t20:51:43.795+0000",{"_index":5536,"title":{},"name":{},"text":{"273":{}},"component":{}}],["27",{"_index":1206,"title":{},"name":{},"text":{"10":{},"366":{}},"component":{}}],["270",{"_index":5048,"title":{},"name":{},"text":{"247":{}},"component":{}}],["27017",{"_index":2669,"title":{},"name":{},"text":{"65":{}},"component":{}}],["28/222",{"_index":4179,"title":{},"name":{},"text":{"205":{}},"component":{}}],["28th",{"_index":4382,"title":{},"name":{},"text":{"234":{}},"component":{}}],["29",{"_index":1215,"title":{},"name":{},"text":{"10":{},"247":{}},"component":{}}],["2:00",{"_index":4149,"title":{},"name":{},"text":{"205":{}},"component":{}}],["2;3;7;8",{"_index":4629,"title":{},"name":{},"text":{"246":{}},"component":{}}],["2;name",{"_index":5544,"title":{},"name":{},"text":{"273":{}},"component":{}}],["2^6",{"_index":4747,"title":{},"name":{},"text":{"247":{}},"component":{}}],["2be98afc86aa79f9dbb18bd63c99dbdd",{"_index":1347,"title":{},"name":{},"text":{"19":{}},"component":{}}],["2be98afc86aa7f2e4cb79ce10df90acd",{"_index":2197,"title":{},"name":{},"text":{"44":{},"77":{}},"component":{}}],["2d16h",{"_index":3714,"title":{},"name":{},"text":{"162":{}},"component":{}}],["2g",{"_index":3694,"title":{},"name":{},"text":{"162":{}},"component":{}}],["2gb",{"_index":577,"title":{},"name":{},"text":{"5":{}},"component":{}}],["2nd",{"_index":6090,"title":{},"name":{},"text":{"366":{}},"component":{}}],["2s",{"_index":3709,"title":{},"name":{},"text":{"162":{}},"component":{}}],["2x",{"_index":6594,"title":{},"name":{},"text":{"492":{}},"component":{}}],["3",{"_index":213,"title":{"50-6":{},"53-3":{},"54-3":{}},"name":{},"text":{"1":{},"7":{},"18":{},"41":{},"46":{},"50":{},"76":{},"98":{},"133":{},"153":{},"160":{},"161":{},"162":{},"167":{},"168":{},"178":{},"179":{},"185":{},"222":{},"227":{},"233":{},"246":{},"247":{},"250":{},"270":{},"273":{},"274":{},"337":{},"346":{},"349":{},"358":{},"380":{},"381":{},"405":{},"437":{},"489":{},"513":{},"527":{},"534":{},"538":{}},"component":{}}],["3&2",{"_index":5148,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3)=date(2006",{"_index":4767,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3)=date(2007",{"_index":4770,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3.0",{"_index":1378,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["3.0.5",{"_index":6982,"title":{},"name":{},"text":{"532":{}},"component":{}}],["3.1",{"_index":3259,"title":{},"name":{},"text":{"128":{},"168":{},"247":{}},"component":{}}],["3.1.2",{"_index":3581,"title":{},"name":{},"text":{"161":{},"163":{}},"component":{}}],["3.1.3",{"_index":3169,"title":{},"name":{},"text":{"107":{},"163":{}},"component":{}}],["3.14.3",{"_index":3332,"title":{},"name":{},"text":{"138":{}},"component":{}}],["3.141",{"_index":5063,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3.14159",{"_index":5024,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3.2",{"_index":5069,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3.3.0",{"_index":3741,"title":{},"name":{},"text":{"163":{}},"component":{}}],["3.3.x",{"_index":3734,"title":{},"name":{},"text":{"163":{}},"component":{}}],["3.4.1",{"_index":3608,"title":{},"name":{},"text":{"161":{}},"component":{}}],["3.4.x",{"_index":3577,"title":{},"name":{},"text":{"161":{},"163":{}},"component":{}}],["3.43.0.0",{"_index":3338,"title":{},"name":{},"text":{"140":{}},"component":{}}],["3.5)=date(2006",{"_index":4768,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3.when",{"_index":4892,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3.x",{"_index":4196,"title":{},"name":{},"text":{"207":{},"208":{},"377":{}},"component":{}}],["3/1/2013",{"_index":4842,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3/1/2022",{"_index":4838,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3/3",{"_index":1202,"title":{},"name":{},"text":{"10":{}},"component":{}}],["3/9/2012",{"_index":4904,"title":{},"name":{},"text":{"247":{}},"component":{}}],["30",{"_index":1198,"title":{},"name":{},"text":{"10":{},"67":{},"73":{},"154":{},"165":{},"247":{},"335":{},"366":{},"500":{}},"component":{}}],["3000:3000",{"_index":6344,"title":{},"name":{},"text":{"431":{}},"component":{}}],["31",{"_index":1191,"title":{},"name":{},"text":{"10":{},"46":{},"205":{},"227":{},"247":{},"270":{}},"component":{}}],["31400",{"_index":5065,"title":{},"name":{},"text":{"247":{}},"component":{}}],["31415.92654",{"_index":5066,"title":{},"name":{},"text":{"247":{}},"component":{}}],["31500",{"_index":5071,"title":{},"name":{},"text":{"247":{}},"component":{}}],["31956",{"_index":4881,"title":{},"name":{},"text":{"247":{}},"component":{}}],["31ef",{"_index":1768,"title":{},"name":{},"text":{"37":{}},"component":{}}],["31t00:00:00.000z",{"_index":5665,"title":{},"name":{},"text":{"291":{}},"component":{}}],["32",{"_index":1629,"title":{},"name":{},"text":{"27":{},"174":{},"205":{},"249":{}},"component":{}}],["32)=date(2006",{"_index":4772,"title":{},"name":{},"text":{"247":{}},"component":{}}],["32580",{"_index":4877,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3262",{"_index":7069,"title":{"536-5":{}},"name":{},"text":{},"component":{}}],["32bit",{"_index":3274,"title":{},"name":{},"text":{"130":{}},"component":{}}],["32nd",{"_index":6088,"title":{},"name":{},"text":{"366":{}},"component":{}}],["33",{"_index":5157,"title":{},"name":{},"text":{"247":{}},"component":{}}],["34",{"_index":2513,"title":{},"name":{},"text":{"56":{},"292":{}},"component":{}}],["34)=date(2008;2;3",{"_index":4774,"title":{},"name":{},"text":{"247":{}},"component":{}}],["35",{"_index":1634,"title":{},"name":{},"text":{"27":{}},"component":{}}],["356",{"_index":5688,"title":{},"name":{},"text":{"292":{}},"component":{}}],["3561151667",{"_index":5897,"title":{},"name":{},"text":{"325":{}},"component":{}}],["360",{"_index":4796,"title":{},"name":{},"text":{"247":{}},"component":{}}],["365",{"_index":4120,"title":{},"name":{},"text":{"205":{},"247":{}},"component":{}}],["366",{"_index":4931,"title":{},"name":{},"text":{"247":{}},"component":{}}],["37255",{"_index":4758,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3732m",{"_index":1972,"title":{},"name":{},"text":{"41":{}},"component":{}}],["375c9113",{"_index":1996,"title":{},"name":{},"text":{"41":{}},"component":{}}],["38",{"_index":4316,"title":{},"name":{},"text":{"227":{}},"component":{}}],["39483",{"_index":4873,"title":{},"name":{},"text":{"247":{}},"component":{}}],["3:00",{"_index":4150,"title":{},"name":{},"text":{"205":{}},"component":{}}],["3;null",{"_index":5545,"title":{},"name":{},"text":{"273":{}},"component":{}}],["3ab1",{"_index":1825,"title":{},"name":{},"text":{"37":{}},"component":{}}],["3des_ede_cbc",{"_index":3836,"title":{},"name":{},"text":{"165":{}},"component":{}}],["3x",{"_index":6595,"title":{},"name":{},"text":{"492":{}},"component":{}}],["3π/2",{"_index":5049,"title":{},"name":{},"text":{"247":{}},"component":{}}],["4",{"_index":744,"title":{"50-7":{},"53-4":{},"54-4":{}},"name":{},"text":{"7":{},"41":{},"55":{},"56":{},"66":{},"92":{},"151":{},"154":{},"158":{},"162":{},"163":{},"167":{},"168":{},"178":{},"179":{},"185":{},"205":{},"217":{},"247":{},"249":{},"258":{},"259":{},"270":{},"273":{},"274":{},"297":{},"358":{},"366":{},"380":{},"381":{},"383":{},"389":{},"429":{},"433":{},"527":{},"533":{},"537":{},"538":{}},"component":{}}],["4.0",{"_index":1376,"title":{},"name":{},"text":{"19":{},"38":{},"154":{}},"component":{}}],["4.454",{"_index":4989,"title":{},"name":{},"text":{"247":{}},"component":{}}],["4.4543473",{"_index":4987,"title":{},"name":{},"text":{"247":{}},"component":{}}],["4.5/3.1",{"_index":5043,"title":{},"name":{},"text":{"247":{}},"component":{}}],["4.712389",{"_index":5047,"title":{},"name":{},"text":{"247":{}},"component":{}}],["40",{"_index":5936,"title":{},"name":{},"text":{"335":{}},"component":{}}],["400",{"_index":1428,"title":{},"name":{},"text":{"20":{}},"component":{}}],["404",{"_index":5418,"title":{},"name":{},"text":{"263":{}},"component":{}}],["408a",{"_index":1834,"title":{},"name":{},"text":{"37":{}},"component":{}}],["415d",{"_index":3649,"title":{},"name":{},"text":{"161":{}},"component":{}}],["416",{"_index":2096,"title":{},"name":{},"text":{"42":{}},"component":{}}],["42.6.0",{"_index":3323,"title":{},"name":{},"text":{"135":{}},"component":{}}],["43",{"_index":2234,"title":{},"name":{},"text":{"46":{}},"component":{}}],["4353",{"_index":1810,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4438",{"_index":1814,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4491",{"_index":1826,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4499",{"_index":1818,"title":{},"name":{},"text":{"37":{}},"component":{}}],["45",{"_index":3711,"title":{},"name":{},"text":{"162":{},"247":{},"320":{}},"component":{}}],["4559",{"_index":1998,"title":{},"name":{},"text":{"41":{}},"component":{}}],["46",{"_index":3965,"title":{},"name":{},"text":{"178":{}},"component":{}}],["460000",{"_index":5342,"title":{},"name":{},"text":{"248":{}},"component":{}}],["4602",{"_index":1822,"title":{},"name":{},"text":{"37":{}},"component":{}}],["47244",{"_index":4869,"title":{},"name":{},"text":{"247":{}},"component":{}}],["486",{"_index":2960,"title":{},"name":{},"text":{"83":{}},"component":{}}],["487",{"_index":2961,"title":{},"name":{},"text":{"83":{}},"component":{}}],["48b4",{"_index":3654,"title":{},"name":{},"text":{"161":{}},"component":{}}],["49465cbb1392",{"_index":3656,"title":{},"name":{},"text":{"161":{}},"component":{}}],["499",{"_index":5274,"title":{},"name":{},"text":{"247":{}},"component":{}}],["4992",{"_index":1769,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4;name",{"_index":5546,"title":{},"name":{},"text":{"273":{}},"component":{}}],["4ac3",{"_index":1830,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4am",{"_index":4821,"title":{},"name":{},"text":{"247":{}},"component":{}}],["4b06",{"_index":1809,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4bd0",{"_index":2168,"title":{},"name":{},"text":{"42":{}},"component":{}}],["4c76",{"_index":2072,"title":{},"name":{},"text":{"42":{}},"component":{}}],["4cf5",{"_index":2054,"title":{},"name":{},"text":{"42":{}},"component":{}}],["4d77",{"_index":2016,"title":{},"name":{},"text":{"41":{}},"component":{}}],["4dea",{"_index":1778,"title":{},"name":{},"text":{"37":{}},"component":{}}],["4gb",{"_index":456,"title":{},"name":{},"text":{"5":{}},"component":{}}],["4lumvygcwiux25iho2lkoqgy3qavas3potfe3vr2pp8tgmuyxn/4y2b4mw/hw2aybl/mchnvc4t4",{"_index":2127,"title":{},"name":{},"text":{"42":{}},"component":{}}],["4m",{"_index":5734,"title":{},"name":{},"text":{"298":{}},"component":{}}],["4th",{"_index":3546,"title":{},"name":{},"text":{"160":{},"161":{},"162":{}},"component":{}}],["5",{"_index":1020,"title":{"50-8":{}},"name":{},"text":{"8":{},"10":{},"55":{},"56":{},"154":{},"172":{},"174":{},"178":{},"179":{},"185":{},"247":{},"260":{},"261":{},"270":{},"358":{},"381":{},"527":{},"528":{}},"component":{}}],["5&\"b",{"_index":5145,"title":{},"name":{},"text":{"247":{}},"component":{}}],["5,000.00",{"_index":5530,"title":{},"name":{},"text":{"273":{},"331":{}},"component":{}}],["5.0",{"_index":4421,"title":{},"name":{},"text":{"239":{}},"component":{}}],["5.0.1",{"_index":3166,"title":{},"name":{},"text":{"106":{}},"component":{}}],["5.000,00",{"_index":3959,"title":{},"name":{},"text":{"178":{},"217":{},"273":{},"316":{},"331":{},"366":{},"367":{},"383":{}},"component":{}}],["5.46",{"_index":5108,"title":{},"name":{},"text":{"247":{}},"component":{}}],["5/2",{"_index":5041,"title":{},"name":{},"text":{"247":{}},"component":{}}],["5/24th",{"_index":4817,"title":{},"name":{},"text":{"247":{}},"component":{}}],["50",{"_index":882,"title":{},"name":{},"text":{"7":{},"8":{},"9":{},"16":{},"24":{},"78":{},"335":{},"394":{},"528":{},"544":{}},"component":{}}],["50.000",{"_index":3916,"title":{},"name":{},"text":{"169":{}},"component":{}}],["50.55",{"_index":5060,"title":{},"name":{},"text":{"247":{}},"component":{}}],["500",{"_index":3777,"title":{},"name":{},"text":{"163":{},"503":{}},"component":{}}],["500,300,200,100",{"_index":5993,"title":{},"name":{},"text":{"349":{}},"component":{}}],["5000",{"_index":858,"title":{},"name":{},"text":{"7":{},"42":{},"52":{},"62":{},"82":{},"262":{}},"component":{}}],["5004/4996",{"_index":2924,"title":{},"name":{},"text":{"82":{}},"component":{}}],["5005",{"_index":7042,"title":{},"name":{},"text":{"533":{}},"component":{}}],["50m",{"_index":1885,"title":{},"name":{},"text":{"40":{}},"component":{}}],["512",{"_index":3125,"title":{},"name":{},"text":{"98":{},"147":{},"152":{}},"component":{}}],["512m",{"_index":3683,"title":{},"name":{},"text":{"162":{}},"component":{}}],["512mb",{"_index":575,"title":{},"name":{},"text":{"5":{}},"component":{}}],["53",{"_index":4127,"title":{},"name":{},"text":{"205":{},"316":{}},"component":{}}],["54",{"_index":4124,"title":{},"name":{},"text":{"205":{}},"component":{}}],["5432",{"_index":2805,"title":{},"name":{},"text":{"77":{}},"component":{}}],["55",{"_index":6117,"title":{},"name":{},"text":{"366":{}},"component":{}}],["550",{"_index":5899,"title":{},"name":{},"text":{"325":{}},"component":{}}],["5667",{"_index":6562,"title":{},"name":{},"text":{"485":{}},"component":{}}],["567",{"_index":5235,"title":{},"name":{},"text":{"247":{}},"component":{}}],["59",{"_index":4823,"title":{},"name":{},"text":{"247":{},"270":{}},"component":{}}],["59,777.15",{"_index":4946,"title":{},"name":{},"text":{"247":{}},"component":{}}],["59.673865",{"_index":4852,"title":{},"name":{},"text":{"247":{}},"component":{}}],["5am",{"_index":4819,"title":{},"name":{},"text":{"247":{}},"component":{}}],["5b",{"_index":5146,"title":{},"name":{},"text":{"247":{}},"component":{}}],["5gb",{"_index":3122,"title":{},"name":{},"text":{"97":{}},"component":{}}],["5mb",{"_index":889,"title":{},"name":{},"text":{"7":{},"97":{}},"component":{}}],["5xa2q1xhqfx1jakuoqbyljbou03gih2ers7kpwk5krfmfxypkc5r9xzxfuozrkkav6kdywmucde2",{"_index":2133,"title":{},"name":{},"text":{"42":{}},"component":{}}],["6",{"_index":3962,"title":{},"name":{},"text":{"178":{},"179":{},"185":{},"247":{},"270":{},"358":{},"381":{},"527":{}},"component":{}}],["60",{"_index":3465,"title":{},"name":{},"text":{"154":{},"202":{},"247":{},"335":{},"500":{}},"component":{}}],["6080",{"_index":7028,"title":{},"name":{},"text":{"533":{}},"component":{}}],["626.3",{"_index":5059,"title":{},"name":{},"text":{"247":{}},"component":{}}],["63fcaf649999",{"_index":3651,"title":{},"name":{},"text":{"161":{}},"component":{}}],["64",{"_index":470,"title":{},"name":{},"text":{"5":{},"6":{},"164":{},"216":{},"247":{},"249":{}},"component":{}}],["64bit",{"_index":3272,"title":{},"name":{},"text":{"130":{}},"component":{}}],["65",{"_index":5154,"title":{},"name":{},"text":{"247":{}},"component":{}}],["65535",{"_index":737,"title":{},"name":{},"text":{"7":{},"247":{}},"component":{}}],["6684",{"_index":1833,"title":{},"name":{},"text":{"37":{}},"component":{}}],["68c6g",{"_index":3713,"title":{},"name":{},"text":{"162":{}},"component":{}}],["69111689767f\",\"db2e3feb",{"_index":1824,"title":{},"name":{},"text":{"37":{}},"component":{}}],["6976569cb",{"_index":3712,"title":{},"name":{},"text":{"162":{}},"component":{}}],["69bffb6a",{"_index":3647,"title":{},"name":{},"text":{"161":{}},"component":{}}],["6f,ff,00,1f",{"_index":4256,"title":{},"name":{},"text":{"220":{},"349":{},"350":{},"366":{}},"component":{}}],["7",{"_index":460,"title":{},"name":{},"text":{"5":{},"10":{},"22":{},"30":{},"84":{},"87":{},"178":{},"185":{},"205":{},"247":{},"317":{},"349":{},"381":{},"527":{}},"component":{}}],["7/30/12",{"_index":4926,"title":{},"name":{},"text":{"247":{}},"component":{}}],["70",{"_index":5733,"title":{},"name":{},"text":{"298":{}},"component":{}}],["7036cc0c3a3f\",\"4653fb73",{"_index":1828,"title":{},"name":{},"text":{"37":{}},"component":{}}],["72",{"_index":7140,"title":{},"name":{},"text":{"538":{}},"component":{}}],["720",{"_index":2101,"title":{},"name":{},"text":{"42":{}},"component":{}}],["72b73cf66d0d",{"_index":1780,"title":{},"name":{},"text":{"37":{}},"component":{}}],["72b73cf66d0d\",\"name\":\"test",{"_index":1794,"title":{},"name":{},"text":{"37":{}},"component":{}}],["72b73cf66d0d\",\"parentid\":null,\"executiontype\":\"pipelin",{"_index":1790,"title":{},"name":{},"text":{"37":{}},"component":{}}],["72b73cf66d0e",{"_index":1782,"title":{},"name":{},"text":{"37":{}},"component":{}}],["72b73cf66d0f",{"_index":1784,"title":{},"name":{},"text":{"37":{}},"component":{}}],["7444:7444",{"_index":6343,"title":{},"name":{},"text":{"431":{}},"component":{}}],["75",{"_index":5457,"title":{},"name":{},"text":{"270":{}},"component":{}}],["754",{"_index":4108,"title":{},"name":{},"text":{"205":{}},"component":{}}],["7687",{"_index":3437,"title":{},"name":{},"text":{"154":{},"433":{}},"component":{}}],["7687:7687",{"_index":6342,"title":{},"name":{},"text":{"431":{}},"component":{}}],["7777777533",{"_index":5017,"title":{},"name":{},"text":{"247":{}},"component":{}}],["79",{"_index":4954,"title":{},"name":{},"text":{"247":{}},"component":{}}],["7th",{"_index":5233,"title":{},"name":{},"text":{"247":{}},"component":{}}],["8",{"_index":741,"title":{},"name":{},"text":{"7":{},"42":{},"131":{},"160":{},"162":{},"178":{},"205":{},"234":{},"247":{},"273":{},"305":{},"338":{},"366":{},"367":{},"381":{},"527":{},"528":{}},"component":{}}],["8,274",{"_index":1556,"title":{},"name":{},"text":{"25":{}},"component":{}}],["8.9",{"_index":4974,"title":{},"name":{},"text":{"247":{}},"component":{}}],["80",{"_index":2663,"title":{},"name":{},"text":{"63":{}},"component":{}}],["8012",{"_index":1770,"title":{},"name":{},"text":{"37":{}},"component":{}}],["8079",{"_index":1991,"title":{},"name":{},"text":{"41":{},"514":{}},"component":{}}],["8079:8079",{"_index":1984,"title":{},"name":{},"text":{"41":{}},"component":{}}],["8080",{"_index":1561,"title":{},"name":{},"text":{"25":{},"41":{},"514":{}},"component":{}}],["8080:8080",{"_index":1550,"title":{},"name":{},"text":{"25":{},"41":{},"514":{},"541":{}},"component":{}}],["8081",{"_index":1397,"title":{},"name":{},"text":{"19":{},"41":{},"162":{}},"component":{}}],["8180:8180",{"_index":6672,"title":{},"name":{},"text":{"514":{}},"component":{}}],["8181",{"_index":1919,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{}}],["8181:8181",{"_index":6671,"title":{},"name":{},"text":{"514":{}},"component":{}}],["8182",{"_index":1920,"title":{},"name":{},"text":{"41":{},"50":{}},"component":{}}],["8182:8182",{"_index":2305,"title":{},"name":{},"text":{"50":{}},"component":{}}],["822",{"_index":6124,"title":{},"name":{},"text":{"366":{}},"component":{}}],["8319",{"_index":1564,"title":{},"name":{},"text":{"25":{}},"component":{}}],["83f34cefa8d061994b7028df2dcebfcd",{"_index":3559,"title":{},"name":{},"text":{"160":{}},"component":{}}],["84",{"_index":2215,"title":{},"name":{},"text":{"46":{}},"component":{}}],["8408",{"_index":1815,"title":{},"name":{},"text":{"37":{}},"component":{}}],["85b8fc7d5f",{"_index":3705,"title":{},"name":{},"text":{"162":{}},"component":{}}],["86",{"_index":2235,"title":{},"name":{},"text":{"46":{},"247":{}},"component":{}}],["8601",{"_index":4901,"title":{},"name":{},"text":{"247":{}},"component":{}}],["86399",{"_index":4866,"title":{},"name":{},"text":{"247":{}},"component":{}}],["8859",{"_index":6482,"title":{},"name":{},"text":{"461":{},"463":{}},"component":{}}],["89",{"_index":4953,"title":{},"name":{},"text":{"247":{}},"component":{}}],["89,\"a\",[field]>79,\"b\",[field]>69,\"c\",[field]>59,\"d\",true,\"f",{"_index":4951,"title":{},"name":{},"text":{"247":{}},"component":{}}],["8:52:36",{"_index":4882,"title":{},"name":{},"text":{"247":{}},"component":{}}],["8e98",{"_index":1999,"title":{},"name":{},"text":{"41":{}},"component":{}}],["9",{"_index":1856,"title":{},"name":{},"text":{"38":{},"178":{},"205":{},"247":{},"270":{},"366":{},"374":{},"381":{},"527":{},"543":{}},"component":{}}],["9.txt",{"_index":6485,"title":{},"name":{},"text":{"461":{}},"component":{}}],["90",{"_index":5738,"title":{},"name":{},"text":{"298":{}},"component":{}}],["90e2",{"_index":3648,"title":{},"name":{},"text":{"161":{}},"component":{}}],["92",{"_index":7231,"title":{},"name":{},"text":{"542":{}},"component":{}}],["93b534f0",{"_index":1767,"title":{},"name":{},"text":{"37":{}},"component":{}}],["93dc",{"_index":3655,"title":{},"name":{},"text":{"161":{}},"component":{}}],["940cd0f771d9.zip",{"_index":2056,"title":{},"name":{},"text":{"42":{}},"component":{}}],["95",{"_index":3715,"title":{},"name":{},"text":{"162":{}},"component":{}}],["956f",{"_index":1779,"title":{},"name":{},"text":{"37":{}},"component":{}}],["95a1",{"_index":1819,"title":{},"name":{},"text":{"37":{}},"component":{}}],["96",{"_index":2097,"title":{},"name":{},"text":{"42":{}},"component":{}}],["9721",{"_index":2053,"title":{},"name":{},"text":{"42":{}},"component":{}}],["9735",{"_index":4341,"title":{},"name":{},"text":{"231":{}},"component":{}}],["973a",{"_index":1811,"title":{},"name":{},"text":{"37":{}},"component":{}}],["978",{"_index":6118,"title":{},"name":{},"text":{"366":{}},"component":{}}],["987e",{"_index":2017,"title":{},"name":{},"text":{"41":{}},"component":{}}],["9:03:00",{"_index":4878,"title":{},"name":{},"text":{"247":{}},"component":{}}],["9].txt",{"_index":6569,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["9]{4})([0",{"_index":5817,"title":{},"name":{},"text":{"317":{}},"component":{}}],["9]{7",{"_index":5818,"title":{},"name":{},"text":{"317":{}},"component":{}}],["_",{"_index":2498,"title":{},"name":{},"text":{"56":{},"250":{},"270":{}},"component":{}}],["_/_",{"_index":2501,"title":{},"name":{},"text":{"56":{}},"component":{}}],["_0",{"_index":6130,"title":{},"name":{},"text":{"367":{},"383":{}},"component":{}}],["_20041231",{"_index":6131,"title":{},"name":{},"text":{"367":{},"383":{}},"component":{}}],["_20051231",{"_index":6547,"title":{},"name":{},"text":{"481":{},"489":{}},"component":{}}],["_20101231",{"_index":6486,"title":{},"name":{},"text":{"461":{}},"component":{}}],["_235959",{"_index":6132,"title":{},"name":{},"text":{"367":{},"383":{},"461":{},"481":{},"489":{}},"component":{}}],["__",{"_index":2494,"title":{},"name":{},"text":{"56":{}},"component":{}}],["__/__",{"_index":2496,"title":{},"name":{},"text":{"56":{}},"component":{}}],["___",{"_index":2500,"title":{},"name":{},"text":{"56":{}},"component":{}}],["___/_",{"_index":2499,"title":{},"name":{},"text":{"56":{}},"component":{}}],["____",{"_index":2493,"title":{},"name":{},"text":{"56":{}},"component":{}}],["____/____/|__",{"_index":2502,"title":{},"name":{},"text":{"56":{}},"component":{}}],["________",{"_index":2497,"title":{},"name":{},"text":{"56":{}},"component":{}}],["_________",{"_index":2495,"title":{},"name":{},"text":{"56":{}},"component":{}}],["____________",{"_index":2491,"title":{},"name":{},"text":{"56":{}},"component":{}}],["_____________",{"_index":2492,"title":{},"name":{},"text":{"56":{}},"component":{}}],["__metricscontain",{"_index":3561,"title":{},"name":{},"text":{"160":{}},"component":{}}],["_body_part_x",{"_index":1050,"title":{},"name":{},"text":{"8":{}},"component":{}}],["_fieldnam",{"_index":5351,"title":{},"name":{},"text":{"250":{}},"component":{}}],["_hop_java",{"_index":1962,"title":{},"name":{},"text":{"41":{}},"component":{}}],["_id",{"_index":5669,"title":{},"name":{},"text":{"291":{}},"component":{}}],["a\":\"b",{"_index":4361,"title":{},"name":{},"text":{"233":{},"274":{}},"component":{}}],["a*a",{"_index":4089,"title":{},"name":{},"text":{"205":{}},"component":{}}],["a+b",{"_index":6211,"title":{},"name":{},"text":{"373":{}},"component":{}}],["a,b",{"_index":2006,"title":{},"name":{},"text":{"41":{}},"component":{}}],["a,b.0",{"_index":2008,"title":{},"name":{},"text":{"41":{}},"component":{}}],["a.*[eng:0",{"_index":6568,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["a.eng:0",{"_index":6484,"title":{},"name":{},"text":{"461":{}},"component":{}}],["a.k.a",{"_index":6792,"title":{},"name":{},"text":{"525":{}},"component":{}}],["a/b",{"_index":4177,"title":{},"name":{},"text":{"205":{}},"component":{}}],["a/key",{"_index":3129,"title":{},"name":{},"text":{"98":{}},"component":{}}],["a0",{"_index":6075,"title":{},"name":{},"text":{"366":{}},"component":{}}],["a1",{"_index":4401,"title":{},"name":{},"text":{"235":{}},"component":{}}],["a14e6129aa14\"],\"details\":{},\"failed\":false,\"containerid\":\"c7c90ed5",{"_index":1832,"title":{},"name":{},"text":{"37":{}},"component":{}}],["a2",{"_index":6219,"title":{},"name":{},"text":{"373":{}},"component":{}}],["a2+b2",{"_index":4091,"title":{},"name":{},"text":{"205":{}},"component":{}}],["a210",{"_index":2169,"title":{},"name":{},"text":{"42":{}},"component":{}}],["a4dc",{"_index":1827,"title":{},"name":{},"text":{"37":{}},"component":{}}],["aaa",{"_index":3976,"title":{},"name":{},"text":{"179":{},"366":{}},"component":{}}],["aaaa,\"123,456\",ccc",{"_index":5990,"title":{},"name":{},"text":{"349":{}},"component":{}}],["aaaa,123\\\\,456,ccc",{"_index":5991,"title":{},"name":{},"text":{"349":{}},"component":{}}],["ab",{"_index":3300,"title":{"247-81":{}},"name":{},"text":{"130":{},"222":{},"247":{}},"component":{}}],["abandon",{"_index":6754,"title":{},"name":{},"text":{"519":{}},"component":{}}],["abbrevi",{"_index":4519,"title":{},"name":{},"text":{"241":{},"528":{}},"component":{}}],["abc",{"_index":5309,"title":{},"name":{},"text":{"247":{},"373":{}},"component":{}}],["abcd",{"_index":2196,"title":{},"name":{},"text":{"44":{},"77":{},"90":{},"150":{},"152":{},"389":{}},"component":{}}],["abcdef",{"_index":5166,"title":{},"name":{},"text":{"247":{}},"component":{}}],["abil",{"_index":330,"title":{},"name":{},"text":{"2":{},"83":{},"87":{},"88":{},"250":{},"251":{},"366":{}},"component":{}}],["abn",{"_index":3301,"title":{},"name":{},"text":{"130":{}},"component":{}}],["abort",{"_index":2866,"title":{"172":{},"434":{}},"name":{"172":{},"434":{}},"text":{"81":{},"86":{},"103":{},"172":{},"275":{},"303":{},"337":{},"346":{},"376":{},"434":{},"481":{},"527":{}},"component":{}}],["abort_pipelin",{"_index":5473,"title":{},"name":{},"text":{"270":{}},"component":{}}],["abov",{"_index":633,"title":{},"name":{},"text":{"7":{},"27":{},"30":{},"31":{},"36":{},"37":{},"41":{},"43":{},"50":{},"76":{},"81":{},"162":{},"163":{},"227":{},"232":{},"235":{},"246":{},"247":{},"251":{},"271":{},"280":{},"316":{},"320":{},"323":{},"345":{},"359":{},"367":{},"372":{},"381":{},"433":{},"439":{},"450":{},"483":{},"528":{},"529":{},"530":{},"533":{},"544":{}},"component":{}}],["above’",{"_index":5887,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["abs(a",{"_index":4138,"title":{},"name":{},"text":{"205":{}},"component":{}}],["absent",{"_index":6098,"title":{},"name":{},"text":{"366":{}},"component":{}}],["absolut",{"_index":986,"title":{},"name":{},"text":{"8":{},"205":{},"247":{},"525":{}},"component":{}}],["abstract",{"_index":2864,"title":{},"name":{},"text":{"81":{}},"component":{}}],["ac94",{"_index":1829,"title":{},"name":{},"text":{"37":{}},"component":{}}],["accdb",{"_index":3161,"title":{},"name":{},"text":{"106":{}},"component":{}}],["accept",{"_index":752,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"25":{},"52":{},"55":{},"56":{},"82":{},"83":{},"84":{},"91":{},"93":{},"97":{},"167":{},"168":{},"234":{},"247":{},"255":{},"256":{},"263":{},"264":{},"275":{},"309":{},"314":{},"319":{},"338":{},"344":{},"363":{},"366":{},"367":{},"381":{},"389":{},"390":{},"461":{},"462":{},"463":{},"481":{},"503":{},"514":{},"533":{}},"component":{}}],["acceptor",{"_index":901,"title":{},"name":{},"text":{"7":{}},"component":{}}],["acceptqueues",{"_index":904,"title":{},"name":{},"text":{"7":{}},"component":{}}],["access",{"_index":519,"title":{"106":{},"173":{}},"name":{"106":{}},"text":{"5":{},"8":{},"14":{},"18":{},"22":{},"27":{},"30":{},"41":{},"43":{},"81":{},"83":{},"85":{},"86":{},"87":{},"97":{},"98":{},"99":{},"100":{},"101":{},"106":{},"158":{},"160":{},"161":{},"173":{},"186":{},"187":{},"198":{},"199":{},"218":{},"231":{},"233":{},"259":{},"260":{},"261":{},"264":{},"273":{},"274":{},"276":{},"286":{},"315":{},"319":{},"324":{},"325":{},"331":{},"340":{},"366":{},"437":{},"453":{},"457":{},"461":{},"465":{},"481":{},"491":{},"514":{},"524":{},"533":{},"542":{},"543":{},"544":{}},"component":{}}],["accessoutput",{"_index":3934,"title":{},"name":{"173":{}},"text":{},"component":{}}],["accesstyp",{"_index":2804,"title":{},"name":{},"text":{"77":{}},"component":{}}],["accident",{"_index":3789,"title":{},"name":{},"text":{"164":{}},"component":{}}],["accommod",{"_index":5624,"title":{},"name":{},"text":{"287":{}},"component":{}}],["accompani",{"_index":5740,"title":{},"name":{},"text":{"299":{}},"component":{}}],["accord",{"_index":1295,"title":{},"name":{},"text":{"15":{},"20":{},"53":{},"82":{},"85":{},"179":{},"227":{},"238":{},"247":{},"275":{},"289":{},"316":{},"344":{},"451":{}},"component":{}}],["accordingli",{"_index":4354,"title":{},"name":{},"text":{"233":{},"234":{},"246":{},"338":{}},"component":{}}],["account",{"_index":1643,"title":{"260-4":{},"261-4":{}},"name":{},"text":{"27":{},"79":{},"98":{},"100":{},"147":{},"148":{},"152":{},"158":{},"165":{},"186":{},"247":{},"259":{},"260":{},"261":{},"280":{},"297":{},"364":{},"372":{},"376":{},"436":{},"461":{},"462":{},"463":{},"466":{},"499":{},"544":{}},"component":{}}],["account’",{"_index":5401,"title":{},"name":{},"text":{"259":{}},"component":{}}],["accru",{"_index":4833,"title":{},"name":{},"text":{"247":{}},"component":{}}],["acction",{"_index":2728,"title":{},"name":{},"text":{"75":{}},"component":{}}],["accumul",{"_index":2899,"title":{"324":{}},"name":{},"text":{"81":{},"160":{},"309":{},"324":{},"378":{}},"component":{}}],["accur",{"_index":4301,"title":{},"name":{},"text":{"227":{}},"component":{}}],["achiev",{"_index":235,"title":{},"name":{},"text":{"2":{}},"component":{}}],["achiv",{"_index":6506,"title":{},"name":{},"text":{"466":{}},"component":{}}],["acid",{"_index":6386,"title":{},"name":{},"text":{"433":{}},"component":{}}],["ack",{"_index":4051,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["acl",{"_index":3638,"title":{},"name":{},"text":{"161":{}},"component":{}}],["aco",{"_index":4681,"title":{"247-82":{}},"name":{},"text":{},"component":{}}],["acosh",{"_index":4682,"title":{"247-83":{}},"name":{},"text":{},"component":{}}],["acp",{"_index":6522,"title":{},"name":{},"text":{"470":{}},"component":{}}],["acquir",{"_index":3445,"title":{},"name":{},"text":{"154":{},"163":{}},"component":{}}],["acquisit",{"_index":3433,"title":{"154-10":{}},"name":{},"text":{"154":{}},"component":{}}],["act",{"_index":2795,"title":{},"name":{},"text":{"77":{},"227":{},"251":{},"481":{}},"component":{}}],["action",{"_index":77,"title":{"489":{},"9-3":{},"16-2":{},"16-3":{},"24-3":{},"55-14":{},"57-1":{},"75-7":{},"87-2":{},"94-2":{},"102-1":{},"103-3":{},"395-1":{},"429-3":{},"432-4":{},"492-2":{},"492-3":{},"492-4":{},"492-5":{},"492-6":{},"530-5":{}},"name":{"102":{},"399":{}},"text":{"1":{},"4":{},"7":{},"9":{},"13":{},"16":{},"18":{},"23":{},"24":{},"27":{},"29":{},"30":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"55":{},"57":{},"68":{},"71":{},"74":{},"75":{},"76":{},"78":{},"80":{},"83":{},"84":{},"85":{},"88":{},"94":{},"95":{},"102":{},"103":{},"105":{},"153":{},"156":{},"163":{},"218":{},"220":{},"237":{},"242":{},"244":{},"245":{},"250":{},"256":{},"273":{},"287":{},"297":{},"299":{},"303":{},"309":{},"311":{},"312":{},"313":{},"314":{},"316":{},"322":{},"352":{},"372":{},"378":{},"379":{},"384":{},"387":{},"390":{},"395":{},"397":{},"399":{},"403":{},"404":{},"409":{},"431":{},"433":{},"434":{},"435":{},"436":{},"437":{},"438":{},"439":{},"440":{},"441":{},"442":{},"443":{},"444":{},"445":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"452":{},"453":{},"454":{},"455":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"473":{},"474":{},"475":{},"476":{},"477":{},"478":{},"479":{},"480":{},"481":{},"482":{},"483":{},"484":{},"485":{},"486":{},"487":{},"488":{},"489":{},"490":{},"491":{},"492":{},"493":{},"494":{},"495":{},"496":{},"497":{},"498":{},"499":{},"500":{},"501":{},"502":{},"503":{},"504":{},"505":{},"506":{},"507":{},"508":{},"509":{},"511":{},"518":{},"519":{},"520":{},"525":{},"527":{},"530":{},"531":{},"532":{},"534":{},"544":{}},"component":{}}],["action.hwf",{"_index":6553,"title":{},"name":{},"text":{"483":{}},"component":{}}],["action/transform",{"_index":679,"title":{},"name":{},"text":{"7":{},"94":{},"363":{},"426":{}},"component":{}}],["actioncom",{"_index":2781,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actiondummi",{"_index":7325,"title":{},"name":{},"text":{"544":{}},"component":{}}],["actiondummy(\"dummi",{"_index":7326,"title":{},"name":{},"text":{"544":{}},"component":{}}],["actiondur",{"_index":2776,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionerror",{"_index":2774,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionexitstatu",{"_index":2777,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionfilenam",{"_index":2780,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionlogchannelid",{"_index":2772,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionlogd",{"_index":2775,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionloggingtext",{"_index":2773,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionmeta",{"_index":7320,"title":{},"name":{},"text":{"544":{}},"component":{}}],["actionmeta(actionstart",{"_index":7322,"title":{},"name":{},"text":{"544":{}},"component":{}}],["actionmeta(dummymeta",{"_index":7327,"title":{},"name":{},"text":{"544":{}},"component":{}}],["actionnam",{"_index":2769,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionnr",{"_index":2770,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionnrfilesretriev",{"_index":2779,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionreason",{"_index":2783,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionresult",{"_index":2771,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["actionstart",{"_index":7318,"title":{},"name":{},"text":{"544":{}},"component":{}}],["actionstart(\"start",{"_index":7319,"title":{},"name":{},"text":{"544":{}},"component":{}}],["action’",{"_index":1522,"title":{},"name":{},"text":{"24":{},"57":{},"466":{},"493":{},"503":{}},"component":{}}],["activ",{"_index":532,"title":{},"name":{},"text":{"5":{},"24":{},"53":{},"54":{},"56":{},"57":{},"64":{},"67":{},"73":{},"75":{},"78":{},"79":{},"83":{},"84":{},"235":{},"275":{},"341":{},"441":{},"461":{},"462":{},"463":{},"481":{},"489":{},"494":{},"533":{}},"component":{}}],["active/inact",{"_index":2259,"title":{},"name":{},"text":{"50":{}},"component":{}}],["actor",{"_index":4543,"title":{},"name":{},"text":{"241":{}},"component":{}}],["actual",{"_index":97,"title":{},"name":{},"text":{"1":{},"13":{},"198":{},"199":{},"227":{},"233":{},"235":{},"239":{},"243":{},"270":{},"271":{},"274":{},"294":{},"361":{},"380":{},"401":{},"402":{},"404":{},"407":{},"408":{},"465":{},"468":{},"481":{},"501":{},"525":{},"536":{}},"component":{}}],["actual/365",{"_index":4934,"title":{},"name":{},"text":{"247":{}},"component":{}}],["actual/actu",{"_index":4929,"title":{},"name":{},"text":{"247":{}},"component":{}}],["acycl",{"_index":1266,"title":{},"name":{},"text":{"15":{},"56":{}},"component":{}}],["ad",{"_index":299,"title":{"337-13":{},"527-1":{},"527-2":{},"528-12":{}},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"11":{},"20":{},"23":{},"30":{},"41":{},"52":{},"56":{},"57":{},"78":{},"79":{},"90":{},"95":{},"130":{},"150":{},"152":{},"161":{},"163":{},"165":{},"167":{},"177":{},"178":{},"205":{},"213":{},"216":{},"220":{},"222":{},"227":{},"230":{},"235":{},"237":{},"244":{},"246":{},"247":{},"251":{},"255":{},"270":{},"271":{},"273":{},"279":{},"280":{},"285":{},"316":{},"341":{},"354":{},"363":{},"372":{},"379":{},"381":{},"382":{},"389":{},"396":{},"437":{},"465":{},"477":{},"478":{},"487":{},"488":{},"498":{},"514":{},"527":{},"530":{},"532":{},"533":{},"534":{},"535":{},"538":{},"543":{}},"component":{}}],["adalenni",{"_index":1192,"title":{},"name":{},"text":{"10":{}},"component":{}}],["adapt",{"_index":627,"title":{},"name":{},"text":{"7":{},"50":{},"542":{}},"component":{}}],["adbb00a",{"_index":7243,"title":{},"name":{},"text":{"542":{}},"component":{}}],["add",{"_index":310,"title":{"174":{},"175":{},"176":{},"177":{},"178":{},"435":{},"15-2":{},"15-3":{},"16-2":{},"16-3":{},"53-3":{},"54-3":{},"78-4":{},"78-5":{},"83-6":{},"103-3":{},"270-12":{},"530-6":{},"530-8":{},"538-5":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"10":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"25":{},"30":{},"41":{},"42":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"64":{},"76":{},"78":{},"81":{},"83":{},"85":{},"86":{},"90":{},"93":{},"94":{},"95":{},"103":{},"104":{},"105":{},"107":{},"150":{},"152":{},"164":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"185":{},"201":{},"202":{},"205":{},"209":{},"210":{},"212":{},"217":{},"220":{},"222":{},"223":{},"227":{},"228":{},"233":{},"234":{},"235":{},"238":{},"242":{},"244":{},"246":{},"247":{},"248":{},"250":{},"251":{},"255":{},"257":{},"258":{},"262":{},"270":{},"271":{},"273":{},"274":{},"277":{},"278":{},"279":{},"294":{},"297":{},"301":{},"309":{},"312":{},"313":{},"314":{},"319":{},"322":{},"337":{},"338":{},"347":{},"352":{},"358":{},"366":{},"367":{},"368":{},"369":{},"373":{},"374":{},"377":{},"380":{},"381":{},"382":{},"383":{},"384":{},"386":{},"387":{},"388":{},"389":{},"397":{},"423":{},"424":{},"434":{},"435":{},"439":{},"441":{},"442":{},"448":{},"450":{},"452":{},"454":{},"455":{},"457":{},"458":{},"461":{},"465":{},"466":{},"468":{},"470":{},"471":{},"472":{},"475":{},"477":{},"478":{},"481":{},"487":{},"488":{},"489":{},"499":{},"501":{},"503":{},"505":{},"506":{},"508":{},"509":{},"513":{},"514":{},"520":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"536":{},"537":{},"538":{},"540":{},"544":{},"546":{}},"component":{}}],["addchecksum",{"_index":3935,"title":{},"name":{"174":{}},"text":{},"component":{}}],["addconst",{"_index":3949,"title":{},"name":{"175":{}},"text":{},"component":{}}],["addexport",{"_index":2037,"title":{"42-1":{}},"name":{},"text":{"42":{}},"component":{}}],["addfieldschangesequ",{"_index":3950,"title":{},"name":{"176":{}},"text":{},"component":{}}],["addit",{"_index":47,"title":{"5-10":{},"234-9":{},"273-9":{},"279-7":{},"331-9":{},"361-6":{},"366-10":{},"543-7":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"19":{},"23":{},"24":{},"40":{},"50":{},"52":{},"55":{},"56":{},"58":{},"79":{},"80":{},"81":{},"87":{},"90":{},"93":{},"94":{},"154":{},"159":{},"163":{},"164":{},"165":{},"166":{},"179":{},"205":{},"208":{},"227":{},"238":{},"239":{},"244":{},"248":{},"250":{},"263":{},"273":{},"290":{},"291":{},"292":{},"298":{},"325":{},"331":{},"372":{},"381":{},"413":{},"418":{},"424":{},"430":{},"466":{},"483":{},"494":{},"505":{},"514":{},"533":{},"536":{},"543":{}},"component":{}}],["addition",{"_index":322,"title":{},"name":{},"text":{"2":{},"7":{},"29":{},"70":{},"81":{}},"component":{}}],["addon",{"_index":6560,"title":{},"name":{},"text":{"485":{}},"component":{}}],["addpipelin",{"_index":2038,"title":{"42-2":{}},"name":{},"text":{"42":{}},"component":{}}],["address",{"_index":1406,"title":{"280-4":{},"466-3":{}},"name":{},"text":{"19":{},"41":{},"50":{},"63":{},"72":{},"92":{},"101":{},"130":{},"154":{},"158":{},"161":{},"165":{},"167":{},"168":{},"216":{},"241":{},"253":{},"254":{},"256":{},"259":{},"264":{},"277":{},"278":{},"280":{},"292":{},"326":{},"337":{},"436":{},"461":{},"462":{},"463":{},"464":{},"466":{},"467":{},"480":{},"485":{},"487":{},"488":{},"491":{},"514":{}},"component":{}}],["addressid",{"_index":6047,"title":{},"name":{},"text":{"363":{}},"component":{}}],["addresultfilenam",{"_index":6389,"title":{},"name":{"435":{}},"text":{},"component":{}}],["addrowproduc",{"_index":7307,"title":{},"name":{},"text":{"544":{}},"component":{}}],["addsequ",{"_index":3951,"title":{},"name":{"177":{}},"text":{},"component":{}}],["addtion",{"_index":2709,"title":{},"name":{},"text":{"70":{}},"component":{}}],["addundopositioninterfac",{"_index":7217,"title":{},"name":{},"text":{"542":{}},"component":{}}],["addworkflow",{"_index":2039,"title":{"42-3":{}},"name":{},"text":{"42":{}},"component":{}}],["addxml",{"_index":3954,"title":{},"name":{"178":{}},"text":{},"component":{}}],["adef",{"_index":1831,"title":{},"name":{},"text":{"37":{}},"component":{}}],["adher",{"_index":3520,"title":{},"name":{},"text":{"159":{},"164":{},"166":{}},"component":{}}],["adject",{"_index":4520,"title":{},"name":{},"text":{"241":{}},"component":{}}],["adjust",{"_index":1120,"title":{},"name":{},"text":{"9":{},"50":{},"395":{}},"component":{}}],["adler",{"_index":3940,"title":{},"name":{},"text":{"174":{},"205":{}},"component":{}}],["admin",{"_index":2291,"title":{},"name":{},"text":{"50":{},"158":{},"298":{},"433":{}},"component":{}}],["administr",{"_index":1316,"title":{},"name":{},"text":{"19":{},"41":{},"50":{}},"component":{}}],["adopt",{"_index":4912,"title":{},"name":{},"text":{"247":{}},"component":{}}],["adoptium",{"_index":616,"title":{},"name":{},"text":{"6":{}},"component":{}}],["advanc",{"_index":438,"title":{"90":{},"71-5":{},"154-6":{},"277-5":{},"331-8":{},"360-5":{},"450-4":{},"454-4":{},"461-5":{},"468-5":{},"470-4":{},"506-4":{},"509-4":{}},"name":{"90":{}},"text":{"5":{},"7":{},"24":{},"25":{},"40":{},"107":{},"154":{},"163":{},"170":{},"243":{},"318":{},"331":{},"372":{},"499":{},"511":{},"518":{}},"component":{}}],["advantag",{"_index":1436,"title":{},"name":{},"text":{"20":{},"50":{},"82":{},"163":{},"220":{},"340":{},"433":{}},"component":{}}],["advic",{"_index":1094,"title":{},"name":{},"text":{"9":{},"157":{},"390":{},"395":{},"398":{}},"component":{}}],["advis",{"_index":712,"title":{},"name":{},"text":{"7":{},"50":{}},"component":{}}],["ae",{"_index":2816,"title":{"157":{}},"name":{},"text":{"77":{},"157":{}},"component":{}}],["aespassword",{"_index":3478,"title":{},"name":{"157":{}},"text":{},"component":{}}],["af84cbc2",{"_index":1776,"title":{},"name":{},"text":{"37":{}},"component":{}}],["afa3",{"_index":2055,"title":{},"name":{},"text":{"42":{}},"component":{}}],["affect",{"_index":4083,"title":{"205-4":{},"536-2":{},"536-4":{},"536-6":{}},"name":{},"text":{"233":{},"246":{},"247":{},"292":{},"430":{}},"component":{}}],["aforement",{"_index":5333,"title":{},"name":{},"text":{"248":{}},"component":{}}],["afterward",{"_index":2288,"title":{},"name":{},"text":{"50":{}},"component":{}}],["ag",{"_index":867,"title":{},"name":{},"text":{"7":{},"160":{},"162":{},"291":{},"292":{}},"component":{}}],["again",{"_index":631,"title":{},"name":{},"text":{"7":{},"9":{},"55":{},"56":{},"82":{},"83":{},"104":{},"154":{},"160":{},"164":{},"222":{},"273":{},"397":{},"519":{},"533":{},"537":{},"544":{}},"component":{}}],["against",{"_index":345,"title":{},"name":{},"text":{"2":{},"9":{},"43":{},"50":{},"52":{},"64":{},"70":{},"83":{},"221":{},"247":{},"297":{},"316":{},"324":{},"325":{},"384":{},"397":{},"482":{},"492":{},"507":{},"533":{}},"component":{}}],["agent",{"_index":3295,"title":{},"name":{},"text":{"130":{},"165":{},"166":{},"167":{},"168":{}},"component":{}}],["aggrag",{"_index":5844,"title":{},"name":{},"text":{"320":{}},"component":{}}],["aggreg",{"_index":781,"title":{"291-10":{},"337-9":{}},"name":{},"text":{"7":{},"68":{},"82":{},"163":{},"168":{},"256":{},"262":{},"283":{},"291":{},"320":{}},"component":{}}],["agiledigital/s3",{"_index":3665,"title":{},"name":{},"text":{"162":{}},"component":{}}],["agnost",{"_index":771,"title":{},"name":{},"text":{"7":{},"38":{},"78":{},"489":{}},"component":{}}],["agre",{"_index":6888,"title":{},"name":{},"text":{"528":{},"533":{}},"component":{}}],["agreement",{"_index":3811,"title":{},"name":{},"text":{"165":{},"533":{}},"component":{}}],["ahead",{"_index":3968,"title":{},"name":{},"text":{"179":{},"499":{}},"component":{}}],["aid",{"_index":5454,"title":{},"name":{},"text":{"270":{}},"component":{}}],["aim",{"_index":1421,"title":{},"name":{},"text":{"20":{},"532":{}},"component":{}}],["aircraft",{"_index":4454,"title":{},"name":{},"text":{"241":{}},"component":{}}],["airflow",{"_index":2329,"title":{"56":{},"56-1":{},"56-2":{},"56-3":{},"56-6":{}},"name":{"56":{}},"text":{"51":{},"56":{}},"component":{}}],["airflow.model",{"_index":2615,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow.operators.bash_oper",{"_index":2558,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow.operators.docker_oper",{"_index":2528,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow.operators.dummy_oper",{"_index":2562,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow.operators.python_oper",{"_index":2560,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow__core__load_exampl",{"_index":2482,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow_www_user_password",{"_index":2523,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow_www_user_usernam",{"_index":2522,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airflow’",{"_index":2587,"title":{},"name":{},"text":{"56":{}},"component":{}}],["airport",{"_index":4455,"title":{},"name":{},"text":{"241":{}},"component":{}}],["aka",{"_index":4818,"title":{},"name":{},"text":{"247":{},"520":{}},"component":{}}],["akelyen",{"_index":1221,"title":{},"name":{},"text":{"10":{}},"component":{}}],["al",{"_index":3508,"title":{},"name":{},"text":{"158":{}},"component":{}}],["alert",{"_index":5553,"title":{},"name":{},"text":{"275":{},"466":{},"485":{},"491":{}},"component":{}}],["algorithm",{"_index":2991,"title":{},"name":{},"text":{"87":{},"165":{},"167":{},"174":{},"219":{},"220":{},"227":{},"248":{},"297":{},"318":{},"347":{},"432":{}},"component":{}}],["alia",{"_index":1951,"title":{},"name":{},"text":{"41":{},"280":{},"538":{}},"component":{}}],["alias",{"_index":5582,"title":{},"name":{},"text":{"278":{}},"component":{}}],["align",{"_index":1697,"title":{},"name":{},"text":{"36":{},"80":{},"163":{},"519":{}},"component":{}}],["align=\"bottom",{"_index":2837,"title":{},"name":{},"text":{"78":{}},"component":{}}],["alip",{"_index":5460,"title":{},"name":{},"text":{"270":{}},"component":{}}],["alli",{"_index":5458,"title":{},"name":{},"text":{"270":{}},"component":{}}],["alloc",{"_index":567,"title":{},"name":{},"text":{"5":{},"56":{},"82":{},"298":{},"304":{}},"component":{}}],["allow",{"_index":71,"title":{"541-4":{},"541-6":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"9":{},"11":{},"16":{},"19":{},"20":{},"23":{},"24":{},"25":{},"27":{},"29":{},"31":{},"32":{},"34":{},"37":{},"39":{},"41":{},"48":{},"52":{},"53":{},"54":{},"61":{},"62":{},"64":{},"67":{},"68":{},"73":{},"75":{},"78":{},"79":{},"82":{},"83":{},"84":{},"103":{},"105":{},"154":{},"155":{},"157":{},"159":{},"163":{},"165":{},"166":{},"167":{},"170":{},"171":{},"172":{},"173":{},"174":{},"178":{},"179":{},"182":{},"183":{},"187":{},"196":{},"206":{},"213":{},"215":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"223":{},"225":{},"227":{},"228":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"241":{},"245":{},"246":{},"247":{},"250":{},"251":{},"255":{},"257":{},"258":{},"263":{},"268":{},"269":{},"270":{},"271":{},"272":{},"274":{},"276":{},"277":{},"278":{},"279":{},"280":{},"287":{},"289":{},"291":{},"292":{},"294":{},"297":{},"298":{},"299":{},"303":{},"304":{},"309":{},"311":{},"313":{},"318":{},"319":{},"320":{},"321":{},"325":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"337":{},"338":{},"339":{},"342":{},"344":{},"345":{},"346":{},"349":{},"352":{},"355":{},"360":{},"361":{},"363":{},"364":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"383":{},"391":{},"395":{},"398":{},"400":{},"418":{},"419":{},"427":{},"428":{},"429":{},"430":{},"431":{},"432":{},"433":{},"442":{},"464":{},"466":{},"468":{},"469":{},"475":{},"481":{},"483":{},"485":{},"489":{},"491":{},"492":{},"499":{},"503":{},"506":{},"509":{},"511":{},"513":{},"519":{},"524":{},"528":{},"529":{},"530":{},"533":{},"534":{},"544":{}},"component":{}}],["allowlist",{"_index":3822,"title":{},"name":{},"text":{"165":{}},"component":{}}],["alon",{"_index":6835,"title":{},"name":{},"text":{"527":{}},"component":{}}],["along",{"_index":2936,"title":{},"name":{},"text":{"83":{},"95":{},"162":{},"275":{},"366":{},"372":{},"377":{},"492":{},"544":{}},"component":{}}],["alongsid",{"_index":3084,"title":{},"name":{},"text":{"91":{},"389":{}},"component":{}}],["alpha",{"_index":6009,"title":{},"name":{},"text":{"354":{}},"component":{}}],["alphabet",{"_index":164,"title":{},"name":{},"text":{"1":{}},"component":{}}],["alphanumer",{"_index":4606,"title":{},"name":{},"text":{"243":{}},"component":{}}],["alpin",{"_index":6635,"title":{},"name":{},"text":{"514":{}},"component":{}}],["alreadi",{"_index":311,"title":{},"name":{},"text":{"2":{},"7":{},"16":{},"23":{},"56":{},"57":{},"78":{},"81":{},"83":{},"84":{},"91":{},"130":{},"164":{},"208":{},"216":{},"233":{},"235":{},"287":{},"289":{},"346":{},"352":{},"354":{},"368":{},"388":{},"441":{},"443":{},"444":{},"461":{},"463":{},"465":{},"481":{},"492":{},"509":{},"528":{},"530":{},"531":{},"537":{},"538":{},"542":{}},"component":{}}],["alt",{"_index":1696,"title":{},"name":{},"text":{"36":{},"117":{}},"component":{}}],["alter",{"_index":4233,"title":{"338-4":{},"492-6":{}},"name":{},"text":{"217":{},"277":{},"338":{},"367":{},"383":{},"492":{}},"component":{}}],["altern",{"_index":701,"title":{},"name":{},"text":{"7":{},"9":{},"60":{},"64":{},"70":{},"78":{},"130":{},"160":{},"227":{},"246":{},"303":{},"367":{},"375":{},"395":{},"442":{},"453":{},"468":{},"481":{},"533":{}},"component":{}}],["although",{"_index":711,"title":{},"name":{},"text":{"7":{},"78":{},"172":{},"247":{}},"component":{}}],["altogeth",{"_index":5354,"title":{},"name":{},"text":{"250":{}},"component":{}}],["alway",{"_index":982,"title":{},"name":{},"text":{"8":{},"9":{},"56":{},"81":{},"154":{},"158":{},"163":{},"169":{},"172":{},"181":{},"204":{},"205":{},"216":{},"217":{},"221":{},"227":{},"235":{},"236":{},"246":{},"247":{},"258":{},"260":{},"262":{},"270":{},"271":{},"278":{},"283":{},"345":{},"355":{},"372":{},"378":{},"396":{},"433":{},"469":{},"510":{},"527":{},"528":{},"533":{}},"component":{}}],["am/pm",{"_index":6115,"title":{},"name":{},"text":{"366":{}},"component":{}}],["amazon",{"_index":971,"title":{"152-15":{}},"name":{},"text":{"8":{},"46":{},"97":{},"161":{},"162":{},"198":{},"199":{},"305":{}},"component":{}}],["amazon’",{"_index":6333,"title":{},"name":{},"text":{"429":{}},"component":{}}],["american",{"_index":4244,"title":{},"name":{},"text":{"219":{}},"component":{}}],["amex",{"_index":4245,"title":{},"name":{},"text":{"219":{}},"component":{}}],["amount",{"_index":260,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"9":{},"29":{},"52":{},"75":{},"88":{},"154":{},"158":{},"161":{},"165":{},"166":{},"167":{},"168":{},"177":{},"184":{},"208":{},"220":{},"235":{},"275":{},"277":{},"298":{},"305":{},"309":{},"330":{},"346":{},"367":{},"378":{},"397":{},"429":{},"433":{},"501":{},"520":{}},"component":{}}],["ampersand",{"_index":6417,"title":{},"name":{},"text":{"453":{}},"component":{}}],["analysi",{"_index":4260,"title":{},"name":{},"text":{"220":{},"228":{},"366":{}},"component":{}}],["analyt",{"_index":2868,"title":{"179":{},"259":{},"259-5":{}},"name":{"259":{}},"text":{"81":{},"86":{},"87":{},"179":{},"228":{},"259":{},"430":{},"431":{}},"component":{}}],["analyticqueri",{"_index":3966,"title":{},"name":{"179":{}},"text":{},"component":{}}],["analyz",{"_index":5862,"title":{},"name":{},"text":{"324":{},"493":{},"528":{}},"component":{}}],["ancient",{"_index":4442,"title":{},"name":{},"text":{"241":{}},"component":{}}],["and",{"_index":6416,"title":{},"name":{},"text":{"453":{}},"component":{}}],["and/or",{"_index":108,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"29":{},"53":{},"54":{},"71":{},"153":{},"234":{},"247":{},"250":{},"275":{},"313":{},"358":{},"364":{},"366":{},"376":{},"378":{},"404":{},"407":{},"432":{},"433":{},"442":{},"454":{},"468":{},"498":{},"506":{}},"component":{}}],["angl",{"_index":5077,"title":{},"name":{},"text":{"247":{}},"component":{}}],["anim",{"_index":4447,"title":{},"name":{},"text":{"241":{}},"component":{}}],["ann",{"_index":5807,"title":{},"name":{},"text":{"316":{}},"component":{}}],["annot",{"_index":880,"title":{"528-6":{},"529-1":{}},"name":{},"text":{"7":{},"518":{},"528":{},"529":{},"530":{},"532":{}},"component":{}}],["announc",{"_index":1173,"title":{"538-11":{}},"name":{},"text":{"10":{},"466":{}},"component":{}}],["annuiti",{"_index":4947,"title":{},"name":{},"text":{"247":{}},"component":{}}],["anon",{"_index":3837,"title":{},"name":{},"text":{"165":{}},"component":{}}],["anoth",{"_index":202,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"24":{},"29":{},"36":{},"41":{},"52":{},"53":{},"56":{},"64":{},"67":{},"68":{},"70":{},"73":{},"75":{},"76":{},"79":{},"82":{},"83":{},"157":{},"158":{},"161":{},"163":{},"169":{},"205":{},"209":{},"210":{},"220":{},"227":{},"246":{},"247":{},"248":{},"250":{},"253":{},"254":{},"270":{},"313":{},"314":{},"325":{},"343":{},"344":{},"352":{},"354":{},"374":{},"375":{},"383":{},"397":{},"405":{},"439":{},"453":{},"481":{},"487":{},"488":{},"500":{},"510":{},"511":{},"529":{},"533":{},"542":{},"543":{}},"component":{}}],["answer",{"_index":4351,"title":{},"name":{},"text":{"232":{},"324":{},"464":{}},"component":{}}],["anti",{"_index":7206,"title":{},"name":{},"text":{"542":{}},"component":{}}],["antipattern",{"_index":7205,"title":{"542":{}},"name":{"542":{}},"text":{"543":{}},"component":{}}],["anymor",{"_index":3859,"title":{},"name":{},"text":{"167":{},"446":{}},"component":{}}],["anyon",{"_index":3080,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["anyth",{"_index":340,"title":{"263-5":{}},"name":{},"text":{"2":{},"9":{},"66":{},"78":{},"82":{},"226":{},"263":{},"380":{},"391":{},"468":{},"505":{},"514":{}},"component":{}}],["anyway",{"_index":192,"title":{},"name":{},"text":{"1":{},"24":{},"205":{},"227":{},"405":{}},"component":{}}],["anywher",{"_index":1269,"title":{},"name":{},"text":{"15":{},"16":{},"53":{},"54":{},"78":{},"94":{},"168":{},"359":{},"543":{}},"component":{}}],["apach",{"_index":248,"title":{"5":{},"6":{},"20":{},"50":{},"55":{},"56":{},"57":{},"107":{},"112":{},"113":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"180":{},"520":{},"8-2":{},"8-3":{},"10-1":{},"10-2":{},"10-3":{},"10-4":{},"17-1":{},"48-1":{},"56-1":{},"56-2":{},"56-3":{},"56-6":{},"158-2":{},"163-1":{},"519-3":{},"533-2":{},"533-8":{}},"name":{"50":{},"55":{},"56":{},"107":{},"180":{}},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"16":{},"17":{},"18":{},"19":{},"20":{},"25":{},"27":{},"37":{},"38":{},"45":{},"46":{},"48":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"57":{},"61":{},"62":{},"68":{},"81":{},"82":{},"84":{},"86":{},"87":{},"88":{},"96":{},"97":{},"105":{},"107":{},"113":{},"117":{},"133":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"171":{},"180":{},"185":{},"194":{},"207":{},"208":{},"216":{},"228":{},"234":{},"247":{},"259":{},"275":{},"276":{},"287":{},"291":{},"304":{},"305":{},"309":{},"315":{},"336":{},"337":{},"368":{},"378":{},"389":{},"414":{},"423":{},"427":{},"428":{},"429":{},"430":{},"431":{},"513":{},"514":{},"518":{},"519":{},"520":{},"522":{},"527":{},"528":{},"531":{},"532":{},"533":{},"534":{},"535":{},"537":{},"538":{},"540":{},"543":{},"546":{}},"component":{}}],["apache.org",{"_index":7146,"title":{},"name":{},"text":{"538":{}},"component":{}}],["apache/hop",{"_index":1548,"title":{},"name":{},"text":{"25":{},"41":{},"50":{},"56":{},"513":{},"514":{},"538":{}},"component":{}}],["apache/hop:1.1.0",{"_index":2287,"title":{},"name":{},"text":{"50":{}},"component":{}}],["apache/hop:2.4.0",{"_index":2550,"title":{},"name":{},"text":{"56":{}},"component":{}}],["apache/hop:develop",{"_index":2551,"title":{},"name":{},"text":{"56":{},"514":{}},"component":{}}],["apachehop",{"_index":1598,"title":{},"name":{},"text":{"25":{}},"component":{}}],["apart",{"_index":5566,"title":{},"name":{},"text":{"275":{},"514":{}},"component":{}}],["api",{"_index":2033,"title":{"536":{},"270-9":{},"532-3":{},"536-5":{},"542-4":{},"544-8":{},"544-15":{}},"name":{"42":{}},"text":{"41":{},"50":{},"52":{},"76":{},"99":{},"117":{},"158":{},"163":{},"165":{},"235":{},"259":{},"260":{},"261":{},"267":{},"270":{},"366":{},"373":{},"381":{},"430":{},"465":{},"525":{},"530":{},"532":{},"536":{},"544":{}},"component":{}}],["api_version='auto",{"_index":2537,"title":{},"name":{},"text":{"56":{}},"component":{}}],["apivers",{"_index":3670,"title":{},"name":{},"text":{"162":{}},"component":{}}],["apk",{"_index":6691,"title":{},"name":{},"text":{"514":{}},"component":{}}],["apl",{"_index":6738,"title":{},"name":{},"text":{"518":{},"533":{}},"component":{}}],["apoc",{"_index":6533,"title":{},"name":{},"text":{"475":{}},"component":{}}],["app",{"_index":1597,"title":{"541-2":{}},"name":{},"text":{"25":{},"50":{},"63":{},"99":{},"241":{}},"component":{}}],["appear",{"_index":1645,"title":{},"name":{},"text":{"28":{},"56":{},"88":{},"160":{},"165":{},"177":{},"179":{},"203":{},"234":{},"245":{},"248":{},"255":{},"257":{},"258":{},"265":{},"291":{},"316":{},"319":{},"366":{},"372":{},"441":{},"465":{},"466":{},"525":{}},"component":{}}],["append",{"_index":2870,"title":{"181":{}},"name":{"181":{}},"text":{"81":{},"86":{},"181":{},"196":{},"233":{},"235":{},"261":{},"274":{},"275":{},"292":{},"303":{},"314":{},"340":{},"352":{},"360":{},"367":{},"368":{},"442":{},"465":{},"481":{},"489":{},"503":{},"504":{},"522":{},"529":{},"544":{}},"component":{}}],["append(name).tostr",{"_index":6217,"title":{},"name":{},"text":{"373":{}},"component":{}}],["appli",{"_index":217,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"20":{},"41":{},"53":{},"54":{},"78":{},"82":{},"83":{},"84":{},"163":{},"217":{},"222":{},"227":{},"247":{},"269":{},"273":{},"275":{},"287":{},"289":{},"291":{},"292":{},"295":{},"297":{},"316":{},"324":{},"325":{},"331":{},"344":{},"367":{},"405":{},"441":{},"527":{},"528":{},"531":{},"546":{}},"component":{}}],["applic",{"_index":1450,"title":{"37":{}},"name":{},"text":{"20":{},"24":{},"25":{},"37":{},"50":{},"154":{},"160":{},"161":{},"165":{},"247":{},"259":{},"260":{},"261":{},"264":{},"271":{},"319":{},"360":{},"367":{},"379":{},"428":{},"485":{},"496":{},"533":{},"534":{},"542":{},"543":{}},"component":{}}],["application/json",{"_index":1719,"title":{},"name":{},"text":{"37":{},"40":{}},"component":{}}],["application/x",{"_index":5602,"title":{},"name":{},"text":{"280":{}},"component":{}}],["applicationwindow",{"_index":7216,"title":{},"name":{},"text":{"542":{}},"component":{}}],["appris",{"_index":2733,"title":{},"name":{},"text":{"76":{}},"component":{}}],["approach",{"_index":252,"title":{},"name":{},"text":{"2":{},"521":{}},"component":{}}],["appropri",{"_index":1481,"title":{},"name":{},"text":{"23":{},"82":{},"103":{},"157":{},"222":{},"227":{},"271":{},"297":{},"299":{},"337":{},"338":{},"352":{},"388":{}},"component":{}}],["approv",{"_index":5704,"title":{},"name":{},"text":{"294":{},"540":{}},"component":{}}],["approvalclass",{"_index":5907,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalclassif",{"_index":5905,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalclassification.nam",{"_index":5906,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalclassification.payload",{"_index":5909,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalclassification.typ",{"_index":5908,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalstatu",{"_index":5900,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalstatus.nam",{"_index":5901,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalstatus.payload",{"_index":5904,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approvalstatus.typ",{"_index":5902,"title":{},"name":{},"text":{"325":{}},"component":{}}],["approxim",{"_index":4186,"title":{},"name":{},"text":{"205":{},"247":{},"386":{}},"component":{}}],["apr",{"_index":1552,"title":{},"name":{},"text":{"25":{}},"component":{}}],["aqua",{"_index":4448,"title":{},"name":{},"text":{"241":{}},"component":{}}],["arab",{"_index":5270,"title":{},"name":{},"text":{"247":{}},"component":{}}],["arbitrari",{"_index":3839,"title":{},"name":{},"text":{"166":{},"247":{},"292":{}},"component":{}}],["arbitrarili",{"_index":2923,"title":{},"name":{},"text":{"82":{}},"component":{}}],["arch",{"_index":1029,"title":{},"name":{},"text":{"8":{}},"component":{}}],["archetyp",{"_index":6965,"title":{},"name":{},"text":{"530":{}},"component":{}}],["architectur",{"_index":224,"title":{"2-3":{},"20-2":{},"91-1":{},"389-1":{}},"name":{"522":{}},"text":{"2":{},"5":{},"13":{},"20":{},"50":{},"228":{},"319":{},"341":{},"518":{},"521":{},"522":{}},"component":{}}],["archiv",{"_index":125,"title":{},"name":{},"text":{"1":{},"8":{},"13":{},"37":{},"170":{},"280":{},"366":{},"367":{},"383":{},"387":{},"404":{},"410":{},"466":{},"499":{},"509":{},"511":{},"537":{}},"component":{}}],["archive.not",{"_index":6085,"title":{},"name":{},"text":{"366":{}},"component":{}}],["area",{"_index":1271,"title":{},"name":{},"text":{"15":{},"16":{},"53":{},"54":{},"78":{},"246":{},"247":{},"263":{},"270":{},"354":{},"530":{},"540":{}},"component":{}}],["aren’t",{"_index":6900,"title":{},"name":{},"text":{"528":{}},"component":{}}],["arff",{"_index":5822,"title":{},"name":{},"text":{"318":{}},"component":{}}],["arg",{"_index":3700,"title":{},"name":{},"text":{"162":{},"439":{},"447":{},"448":{},"450":{},"462":{},"468":{},"477":{},"478":{},"487":{},"488":{},"498":{},"499":{},"506":{}},"component":{}}],["argument",{"_index":655,"title":{"271-3":{}},"name":{},"text":{"7":{},"37":{},"40":{},"41":{},"45":{},"160":{},"161":{},"162":{},"167":{},"168":{},"205":{},"206":{},"237":{},"247":{},"258":{},"262":{},"263":{},"271":{},"291":{},"303":{},"435":{},"441":{},"489":{},"506":{},"509":{}},"component":{}}],["arm",{"_index":463,"title":{},"name":{},"text":{"5":{}},"component":{}}],["armi",{"_index":6371,"title":{},"name":{},"text":{"433":{}},"component":{}}],["armor",{"_index":7125,"title":{},"name":{},"text":{"538":{}},"component":{}}],["arn:aws:iam:::rol",{"_index":5800,"title":{},"name":{},"text":{"315":{}},"component":{}}],["around",{"_index":440,"title":{},"name":{},"text":{"5":{},"9":{},"21":{},"27":{},"78":{},"88":{},"102":{},"163":{},"238":{},"247":{},"289":{},"346":{},"349":{},"367":{},"377":{},"389":{},"396":{},"400":{},"435":{}},"component":{}}],["array",{"_index":1017,"title":{},"name":{},"text":{"8":{},"233":{},"247":{},"270":{},"274":{},"291":{},"292":{},"298":{},"337":{},"453":{}},"component":{}}],["array[o",{"_index":5692,"title":{},"name":{},"text":{"292":{}},"component":{}}],["arriv",{"_index":1092,"title":{},"name":{},"text":{"9":{},"82":{},"163":{},"186":{},"198":{},"202":{},"247":{},"281":{},"496":{}},"component":{}}],["arrow",{"_index":1274,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"29":{},"30":{},"35":{},"78":{},"153":{},"154":{},"297":{},"541":{}},"component":{}}],["articl",{"_index":1169,"title":{},"name":{},"text":{"10":{},"433":{}},"component":{}}],["artifact",{"_index":3666,"title":{"538-6":{},"538-7":{},"540-2":{}},"name":{},"text":{"162":{},"168":{},"530":{},"532":{},"537":{},"538":{},"540":{}},"component":{}}],["artifact_dir",{"_index":3689,"title":{},"name":{},"text":{"162":{}},"component":{}}],["artist",{"_index":4451,"title":{},"name":{},"text":{"241":{}},"component":{}}],["arument",{"_index":5513,"title":{},"name":{},"text":{"271":{}},"component":{}}],["as/400",{"_index":6391,"title":{"436":{}},"name":{},"text":{"436":{}},"component":{}}],["as400",{"_index":3181,"title":{"108":{}},"name":{"108":{}},"text":{"436":{}},"component":{}}],["as400command",{"_index":6392,"title":{},"name":{"436":{}},"text":{},"component":{}}],["asc",{"_index":5670,"title":{},"name":{},"text":{"291":{},"470":{}},"component":{}}],["ascend",{"_index":2976,"title":{},"name":{},"text":{"85":{},"291":{},"292":{},"347":{},"470":{}},"component":{}}],["ascending/descend",{"_index":5987,"title":{},"name":{},"text":{"347":{},"348":{}},"component":{}}],["ascii",{"_index":5149,"title":{},"name":{},"text":{"247":{},"316":{},"349":{},"350":{},"366":{},"478":{}},"component":{}}],["asf",{"_index":6750,"title":{},"name":{},"text":{"519":{},"527":{},"531":{},"533":{},"546":{}},"component":{}}],["ashevil",{"_index":5461,"title":{},"name":{},"text":{"270":{}},"component":{}}],["asid",{"_index":6956,"title":{},"name":{},"text":{"530":{}},"component":{}}],["asin",{"_index":4683,"title":{"247-84":{}},"name":{},"text":{},"component":{}}],["asinh",{"_index":4684,"title":{"247-85":{}},"name":{},"text":{},"component":{}}],["ask",{"_index":1244,"title":{"12":{}},"name":{},"text":{"12":{},"23":{},"25":{},"27":{},"40":{},"79":{},"83":{},"93":{},"154":{},"256":{},"389":{},"432":{},"469":{},"523":{},"527":{},"532":{},"533":{},"535":{},"544":{}},"component":{}}],["aslo",{"_index":6839,"title":{},"name":{},"text":{"527":{}},"component":{}}],["aspect",{"_index":13,"title":{},"name":{},"text":{"1":{},"18":{},"19":{},"20":{},"23":{},"27":{},"90":{},"271":{},"411":{},"418":{}},"component":{}}],["assembl",{"_index":3998,"title":{"530-8":{}},"name":{},"text":{"186":{},"187":{},"352":{},"531":{},"534":{},"540":{},"543":{}},"component":{}}],["assemblies/client/target",{"_index":6889,"title":{},"name":{},"text":{"528":{},"533":{},"537":{},"540":{}},"component":{}}],["assemblies/client/target/hop",{"_index":7129,"title":{},"name":{},"text":{"538":{},"540":{}},"component":{}}],["assemblies/client/target/hop/hop",{"_index":7168,"title":{},"name":{},"text":{"540":{}},"component":{}}],["assemblies/plugins/dist/target",{"_index":7158,"title":{},"name":{},"text":{"540":{}},"component":{}}],["assemblies/plugins/dist/target/hop",{"_index":7157,"title":{},"name":{},"text":{"540":{},"543":{}},"component":{}}],["assemblies/static/src/main/resources/config/projects/sampl",{"_index":6973,"title":{},"name":{},"text":{"531":{}},"component":{}}],["assemblies/web/target/hop.war",{"_index":7155,"title":{},"name":{},"text":{"540":{},"543":{}},"component":{}}],["assemblies/web/target/webapp",{"_index":7156,"title":{},"name":{},"text":{"540":{}},"component":{}}],["assign",{"_index":2268,"title":{},"name":{},"text":{"50":{},"165":{},"168":{},"227":{},"247":{},"256":{},"270":{},"275":{},"280":{},"514":{},"542":{}},"component":{}}],["assist",{"_index":5781,"title":{},"name":{},"text":{"309":{},"350":{}},"component":{}}],["associ",{"_index":2302,"title":{},"name":{},"text":{"50":{},"177":{},"250":{},"251":{},"259":{},"287":{},"319":{},"366":{},"372":{},"436":{},"461":{},"462":{},"463":{},"465":{},"481":{},"488":{},"493":{},"541":{},"544":{}},"component":{}}],["assum",{"_index":3447,"title":{},"name":{},"text":{"154":{},"247":{},"284":{},"292":{},"533":{},"534":{},"538":{},"542":{}},"component":{}}],["assumpt",{"_index":4262,"title":{},"name":{},"text":{"220":{},"366":{}},"component":{}}],["assur",{"_index":3978,"title":{},"name":{},"text":{"179":{}},"component":{}}],["asterisk",{"_index":5528,"title":{},"name":{},"text":{"273":{},"291":{}},"component":{}}],["async",{"_index":1875,"title":{},"name":{"40":{}},"text":{"40":{}},"component":{}}],["asynchron",{"_index":1874,"title":{"40":{},"58":{}},"name":{},"text":{"40":{},"41":{},"50":{},"58":{},"64":{},"429":{}},"component":{}}],["asyncrun",{"_index":1902,"title":{},"name":{},"text":{"40":{}},"component":{}}],["asyncwebservic",{"_index":2640,"title":{},"name":{"58":{}},"text":{},"component":{}}],["asyoulikeitquot",{"_index":4570,"title":{},"name":{},"text":{"241":{}},"component":{}}],["atan",{"_index":4685,"title":{"247-86":{}},"name":{},"text":{},"component":{}}],["atan2",{"_index":4686,"title":{"247-87":{}},"name":{},"text":{},"component":{}}],["atanh",{"_index":4687,"title":{"247-88":{}},"name":{},"text":{},"component":{}}],["atolcd",{"_index":2982,"title":{"87-6":{}},"name":{},"text":{"87":{}},"component":{}}],["atom",{"_index":4201,"title":{},"name":{},"text":{"208":{},"319":{}},"component":{}}],["atribut",{"_index":5585,"title":{},"name":{},"text":{"278":{}},"component":{}}],["attach",{"_index":586,"title":{"280-7":{},"466-6":{},"533-11":{}},"name":{},"text":{"5":{},"8":{},"185":{},"213":{},"232":{},"245":{},"280":{},"298":{},"464":{},"466":{},"533":{},"544":{}},"component":{}}],["attempt",{"_index":2922,"title":{},"name":{},"text":{"82":{},"154":{},"160":{},"261":{},"264":{},"290":{},"292":{},"338":{}},"component":{}}],["attent",{"_index":2183,"title":{"43-7":{}},"name":{},"text":{"46":{},"86":{},"536":{}},"component":{}}],["attribut",{"_index":2808,"title":{},"name":{},"text":{"77":{},"91":{},"178":{},"227":{},"233":{},"250":{},"277":{},"278":{},"303":{},"313":{},"381":{},"383":{},"389":{},"529":{},"538":{}},"component":{}}],["atyp",{"_index":2347,"title":{},"name":{},"text":{"52":{}},"component":{}}],["audit",{"_index":544,"title":{},"name":{"421":{}},"text":{"5":{},"7":{},"75":{},"94":{},"421":{},"525":{},"541":{},"543":{}},"component":{}}],["auditev",{"_index":6806,"title":{},"name":{},"text":{"525":{}},"component":{}}],["auditmanag",{"_index":6805,"title":{},"name":{},"text":{"525":{}},"component":{}}],["aura",{"_index":1913,"title":{"154-5":{}},"name":{},"text":{"41":{},"154":{},"165":{}},"component":{}}],["auth",{"_index":3275,"title":{},"name":{},"text":{"130":{}},"component":{}}],["authent",{"_index":1082,"title":{"25-4":{},"130-1":{},"319-6":{}},"name":{},"text":{"8":{},"25":{},"41":{},"65":{},"101":{},"117":{},"130":{},"153":{},"165":{},"196":{},"197":{},"198":{},"199":{},"232":{},"249":{},"263":{},"264":{},"275":{},"276":{},"277":{},"278":{},"280":{},"315":{},"319":{},"327":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"377":{},"462":{},"464":{},"465":{},"466":{},"479":{}},"component":{}}],["authenticationconsumerplugintyp",{"_index":6818,"title":{},"name":{},"text":{"525":{}},"component":{}}],["authenticationproviderplugintyp",{"_index":6817,"title":{},"name":{},"text":{"525":{}},"component":{}}],["author",{"_index":2468,"title":{},"name":{},"text":{"56":{},"235":{},"241":{},"316":{},"319":{}},"component":{}}],["authoris",{"_index":6494,"title":{},"name":{},"text":{"464":{}},"component":{}}],["author’",{"_index":5806,"title":{},"name":{},"text":{"316":{}},"component":{}}],["auto",{"_index":1618,"title":{},"name":{},"text":{"27":{},"160":{},"162":{},"165":{},"167":{},"204":{},"206":{},"216":{},"227":{},"235":{},"364":{},"492":{}},"component":{}}],["auto.offset.reset",{"_index":4034,"title":{},"name":{},"text":{"196":{},"275":{},"276":{}},"component":{}}],["auto.register.schema",{"_index":4058,"title":{},"name":{},"text":{"197":{},"276":{},"427":{}},"component":{}}],["auto_remove=tru",{"_index":2538,"title":{},"name":{},"text":{"56":{}},"component":{}}],["autom",{"_index":2662,"title":{"83-9":{}},"name":{},"text":{"62":{},"527":{}},"component":{}}],["automat",{"_index":910,"title":{},"name":{},"text":{"7":{},"9":{},"16":{},"27":{},"29":{},"41":{},"53":{},"54":{},"70":{},"82":{},"83":{},"151":{},"152":{},"154":{},"165":{},"167":{},"168":{},"169":{},"185":{},"209":{},"222":{},"227":{},"234":{},"235":{},"247":{},"271":{},"278":{},"287":{},"297":{},"303":{},"314":{},"322":{},"344":{},"355":{},"363":{},"364":{},"366":{},"377":{},"389":{},"394":{},"427":{},"466":{},"481":{},"483":{},"492":{},"498":{},"510":{},"529":{},"533":{}},"component":{}}],["autosav",{"_index":1612,"title":{},"name":{},"text":{"27":{}},"component":{}}],["autosc",{"_index":3793,"title":{},"name":{},"text":{"165":{}},"component":{}}],["autotun",{"_index":3806,"title":{},"name":{},"text":{"165":{}},"component":{}}],["avail",{"_index":64,"title":{"211":{},"502":{},"7-16":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"11":{},"15":{},"16":{},"19":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"29":{},"30":{},"31":{},"33":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"46":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"64":{},"69":{},"77":{},"78":{},"79":{},"80":{},"81":{},"83":{},"85":{},"86":{},"87":{},"92":{},"152":{},"154":{},"160":{},"162":{},"163":{},"165":{},"168":{},"171":{},"174":{},"178":{},"180":{},"196":{},"197":{},"204":{},"206":{},"211":{},"216":{},"218":{},"222":{},"227":{},"233":{},"234":{},"239":{},"240":{},"245":{},"246":{},"247":{},"248":{},"254":{},"256":{},"259":{},"260":{},"262":{},"270":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"287":{},"291":{},"292":{},"297":{},"298":{},"313":{},"314":{},"316":{},"338":{},"341":{},"344":{},"347":{},"354":{},"355":{},"364":{},"366":{},"367":{},"369":{},"370":{},"372":{},"381":{},"386":{},"416":{},"418":{},"429":{},"431":{},"438":{},"453":{},"464":{},"469":{},"473":{},"481":{},"492":{},"496":{},"502":{},"503":{},"512":{},"514":{},"520":{},"523":{},"527":{},"528":{},"530":{},"531":{},"537":{},"543":{}},"component":{}}],["availab",{"_index":1494,"title":{},"name":{},"text":{"23":{}},"component":{}}],["avatar",{"_index":4452,"title":{},"name":{},"text":{"241":{}},"component":{}}],["avedev",{"_index":4688,"title":{"247-89":{}},"name":{},"text":{},"component":{}}],["averag",{"_index":4689,"title":{"247-90":{}},"name":{},"text":{"262":{},"320":{}},"component":{}}],["aviat",{"_index":4453,"title":{},"name":{},"text":{"241":{}},"component":{}}],["avoid",{"_index":188,"title":{"541-3":{},"542-1":{},"542-4":{}},"name":{},"text":{"1":{},"9":{},"11":{},"133":{},"177":{},"204":{},"220":{},"222":{},"250":{},"268":{},"270":{},"311":{},"344":{},"360":{},"363":{},"367":{},"372":{},"383":{},"392":{},"394":{},"395":{},"398":{},"405":{},"530":{},"538":{},"542":{}},"component":{}}],["avro",{"_index":2871,"title":{"182":{},"183":{},"184":{},"185":{},"427":{},"196-5":{},"197-5":{},"275-11":{},"276-5":{}},"name":{"182":{},"183":{},"184":{},"185":{}},"text":{"81":{},"86":{},"182":{},"183":{},"184":{},"185":{},"196":{},"197":{},"198":{},"199":{},"275":{},"276":{},"368":{},"427":{}},"component":{}}],["avro.apache.org",{"_index":6310,"title":{},"name":{},"text":{"427":{}},"component":{}}],["avro_type_boolean",{"_index":3989,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_doubl",{"_index":3990,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_enum",{"_index":3995,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_float",{"_index":3991,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_int",{"_index":3992,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_long",{"_index":3993,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_non",{"_index":3988,"title":{},"name":{},"text":{"185":{}},"component":{}}],["avro_type_str",{"_index":3994,"title":{},"name":{},"text":{"185":{}},"component":{}}],["aw",{"_index":893,"title":{"97":{}},"name":{"97":{}},"text":{"7":{},"8":{},"18":{},"41":{},"46":{},"88":{},"97":{},"198":{},"199":{},"305":{},"315":{}},"component":{}}],["awar",{"_index":1684,"title":{},"name":{},"text":{"36":{},"169":{},"227":{},"247":{},"250":{},"251":{},"316":{},"510":{}},"component":{}}],["away",{"_index":3448,"title":{},"name":{},"text":{"154":{},"205":{},"227":{},"247":{}},"component":{}}],["aws/credenti",{"_index":3116,"title":{},"name":{},"text":{"97":{}},"component":{}}],["aws_access_key_id",{"_index":3117,"title":{},"name":{},"text":{"97":{},"162":{},"315":{}},"component":{}}],["aws_default_region",{"_index":3691,"title":{},"name":{},"text":{"162":{}},"component":{}}],["aws_secret_access_key",{"_index":3119,"title":{},"name":{},"text":{"97":{},"162":{},"315":{}},"component":{}}],["axeubksvvjhys+8ywbo2qcbu8ere64m5nyfavh8iteo4vt/lm3oxejlub4m3tspkxw4v4kuwbrzp",{"_index":2145,"title":{},"name":{},"text":{"42":{}},"component":{}}],["aza",{"_index":3126,"title":{},"name":{},"text":{"98":{},"147":{},"152":{}},"component":{}}],["azi",{"_index":3127,"title":{},"name":{},"text":{"98":{},"147":{},"152":{}},"component":{}}],["azk",{"_index":3128,"title":{},"name":{},"text":{"98":{},"147":{},"152":{}},"component":{}}],["azur",{"_index":973,"title":{"98":{},"186":{},"187":{},"428":{},"152-16":{}},"name":{"98":{},"147":{},"186":{},"187":{}},"text":{"8":{},"18":{},"27":{},"81":{},"86":{},"88":{},"96":{},"98":{},"147":{},"152":{},"162":{},"186":{},"187":{},"428":{}},"component":{}}],["b",{"_index":2192,"title":{},"name":{},"text":{"43":{},"205":{},"233":{},"247":{},"274":{},"321":{},"323":{},"355":{},"373":{},"534":{},"537":{}},"component":{}}],["b*b",{"_index":4090,"title":{},"name":{},"text":{"205":{}},"component":{}}],["b049803eb316\",\"f7344a76",{"_index":1816,"title":{},"name":{},"text":{"37":{}},"component":{}}],["b123",{"_index":2073,"title":{},"name":{},"text":{"42":{}},"component":{}}],["b3",{"_index":4402,"title":{},"name":{},"text":{"235":{}},"component":{}}],["b32c",{"_index":1823,"title":{},"name":{},"text":{"37":{}},"component":{}}],["b4bc",{"_index":3650,"title":{},"name":{},"text":{"161":{}},"component":{}}],["b538",{"_index":1997,"title":{},"name":{},"text":{"41":{}},"component":{}}],["b867",{"_index":2071,"title":{},"name":{},"text":{"42":{}},"component":{}}],["b=0",{"_index":4097,"title":{},"name":{},"text":{"205":{}},"component":{}}],["back",{"_index":1073,"title":{},"name":{},"text":{"8":{},"24":{},"40":{},"42":{},"58":{},"87":{},"154":{},"158":{},"160":{},"163":{},"167":{},"177":{},"179":{},"196":{},"206":{},"217":{},"220":{},"223":{},"241":{},"249":{},"262":{},"273":{},"283":{},"303":{},"309":{},"336":{},"340":{},"344":{},"345":{},"364":{},"366":{},"367":{},"374":{},"378":{},"383":{},"400":{},"433":{},"453":{},"483":{},"513":{},"538":{}},"component":{}}],["backend",{"_index":7071,"title":{},"name":{},"text":{"536":{}},"component":{}}],["background",{"_index":2328,"title":{},"name":{},"text":{"50":{},"56":{},"264":{},"316":{},"355":{},"541":{},"544":{}},"component":{}}],["backoff",{"_index":3471,"title":{},"name":{},"text":{"154":{}},"component":{}}],["backslash",{"_index":5726,"title":{},"name":{},"text":{"298":{},"349":{}},"component":{}}],["backup",{"_index":1161,"title":{},"name":{},"text":{"9":{},"390":{}},"component":{}}],["backward",{"_index":834,"title":{},"name":{},"text":{"7":{},"78":{},"179":{},"194":{},"247":{},"274":{},"530":{}},"component":{}}],["bad",{"_index":624,"title":{},"name":{},"text":{"7":{},"298":{},"303":{},"325":{},"506":{}},"component":{}}],["balanc",{"_index":3450,"title":{},"name":{},"text":{"154":{},"165":{}},"component":{}}],["bali",{"_index":1212,"title":{},"name":{},"text":{"10":{}},"component":{}}],["banker",{"_index":4104,"title":{},"name":{},"text":{"205":{}},"component":{}}],["bar",{"_index":756,"title":{},"name":{},"text":{"7":{},"17":{},"24":{},"27":{},"41":{},"50":{}},"component":{}}],["bare",{"_index":1434,"title":{},"name":{},"text":{"20":{},"25":{},"75":{}},"component":{}}],["bart",{"_index":1179,"title":{},"name":{},"text":{"10":{},"161":{}},"component":{}}],["base",{"_index":93,"title":{"37-2":{},"43-7":{},"130-1":{},"246-5":{}},"name":{"424":{}},"text":{"1":{},"5":{},"7":{},"13":{},"25":{},"37":{},"50":{},"52":{},"60":{},"70":{},"78":{},"82":{},"83":{},"92":{},"93":{},"94":{},"103":{},"152":{},"163":{},"185":{},"202":{},"204":{},"216":{},"220":{},"227":{},"233":{},"234":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"256":{},"259":{},"262":{},"263":{},"269":{},"274":{},"276":{},"277":{},"278":{},"279":{},"285":{},"290":{},"291":{},"292":{},"295":{},"297":{},"298":{},"299":{},"305":{},"309":{},"313":{},"315":{},"316":{},"331":{},"336":{},"338":{},"347":{},"349":{},"357":{},"359":{},"360":{},"366":{},"372":{},"377":{},"378":{},"387":{},"403":{},"404":{},"406":{},"424":{},"481":{},"487":{},"488":{},"489":{},"494":{},"503":{},"508":{},"509":{},"514":{},"518":{},"519":{},"533":{},"537":{},"543":{}},"component":{}}],["base64",{"_index":2149,"title":{},"name":{},"text":{"42":{}},"component":{}}],["basemessag",{"_index":6794,"title":{},"name":{},"text":{"525":{},"528":{}},"component":{}}],["basemessages.getstr",{"_index":6891,"title":{},"name":{},"text":{"528":{}},"component":{}}],["baseplugintyp",{"_index":6946,"title":{},"name":{},"text":{"530":{}},"component":{}}],["basestep",{"_index":6995,"title":{},"name":{},"text":{"532":{}},"component":{}}],["basetransform",{"_index":6996,"title":{},"name":{},"text":{"532":{},"536":{}},"component":{}}],["basetransformmeta",{"_index":7003,"title":{},"name":{},"text":{"532":{},"536":{}},"component":{}}],["bash",{"_index":6678,"title":{},"name":{},"text":{"514":{}},"component":{}}],["bashoper",{"_index":2559,"title":{},"name":{},"text":{"56":{}},"component":{}}],["bashrc",{"_index":533,"title":{},"name":{},"text":{"5":{}},"component":{}}],["basi",{"_index":4922,"title":{},"name":{},"text":{"247":{},"334":{},"373":{},"533":{}},"component":{}}],["basic",{"_index":425,"title":{"5-4":{},"9-11":{},"154-3":{},"247-7":{}},"name":{"75":{},"396":{}},"text":{"5":{},"7":{},"9":{},"15":{},"19":{},"21":{},"22":{},"24":{},"25":{},"30":{},"37":{},"38":{},"41":{},"42":{},"47":{},"53":{},"55":{},"56":{},"61":{},"75":{},"78":{},"81":{},"83":{},"84":{},"85":{},"92":{},"103":{},"104":{},"154":{},"162":{},"247":{},"263":{},"287":{},"319":{},"363":{},"367":{},"380":{},"389":{},"391":{},"494":{},"505":{},"514":{},"531":{},"544":{}},"component":{}}],["basic.auth.credentials.sourc",{"_index":4042,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["basic.auth.user.info",{"_index":4044,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["basic.hpl",{"_index":1349,"title":{},"name":{},"text":{"19":{},"38":{},"47":{},"56":{},"246":{},"273":{},"514":{}},"component":{}}],["basketbal",{"_index":4457,"title":{},"name":{},"text":{"241":{}},"component":{}}],["batch",{"_index":117,"title":{"186-6":{},"275-6":{}},"name":{},"text":{"1":{},"2":{},"7":{},"13":{},"20":{},"27":{},"53":{},"54":{},"103":{},"153":{},"163":{},"167":{},"168":{},"186":{},"187":{},"198":{},"208":{},"232":{},"237":{},"275":{},"292":{},"297":{},"299":{},"329":{},"330":{},"332":{},"333":{},"334":{},"360":{},"364":{},"371":{},"404":{},"409":{},"433":{},"457":{},"470":{},"489":{}},"component":{}}],["batch/stream",{"_index":1435,"title":{},"name":{},"text":{"20":{}},"component":{}}],["batch_forc",{"_index":3866,"title":{},"name":{},"text":{"167":{}},"component":{}}],["batchdur",{"_index":3892,"title":{},"name":{},"text":{"168":{}},"component":{}}],["bay",{"_index":3011,"title":{},"name":{},"text":{"87":{}},"component":{}}],["bbb",{"_index":3977,"title":{},"name":{},"text":{"179":{}},"component":{}}],["bcc",{"_index":5595,"title":{},"name":{},"text":{"280":{},"466":{}},"component":{}}],["bdat",{"_index":1464,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["be",{"_index":177,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"29":{},"39":{},"40":{},"47":{},"58":{},"75":{},"90":{},"133":{},"154":{},"163":{},"165":{},"167":{},"170":{},"196":{},"198":{},"205":{},"206":{},"216":{},"220":{},"222":{},"250":{},"264":{},"270":{},"292":{},"305":{},"313":{},"314":{},"318":{},"346":{},"352":{},"359":{},"364":{},"366":{},"367":{},"380":{},"389":{},"391":{},"400":{},"405":{},"449":{},"482":{},"503":{},"505":{},"511":{},"519":{},"527":{},"528":{},"533":{}},"component":{}}],["be11",{"_index":1835,"title":{},"name":{},"text":{"37":{}},"component":{}}],["beam",{"_index":329,"title":{"59":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"10-4":{},"158-2":{},"163-1":{},"163-3":{},"163-6":{},"163-11":{},"165-1":{},"166-1":{},"167-1":{},"168-1":{},"430-4":{},"513-4":{},"519-3":{}},"name":{"59":{},"158":{},"159":{},"160":{},"161":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{}},"text":{"2":{},"4":{},"20":{},"24":{},"37":{},"59":{},"64":{},"69":{},"81":{},"84":{},"86":{},"88":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"171":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"320":{},"389":{},"430":{},"513":{},"518":{},"519":{},"540":{}},"component":{}}],["beam/input",{"_index":3494,"title":{},"name":{},"text":{"158":{}},"component":{}}],["beam/pipelines/complex.hpl",{"_index":2643,"title":{},"name":{},"text":{"59":{},"151":{},"152":{},"389":{}},"component":{}}],["beam/pipelines/gener",{"_index":2644,"title":{},"name":{},"text":{"59":{},"159":{}},"component":{}}],["beam/pipelines/input",{"_index":2647,"title":{},"name":{},"text":{"59":{}},"component":{}}],["beam/pipelines/switch",{"_index":2649,"title":{},"name":{},"text":{"59":{},"158":{}},"component":{}}],["beam/pipelines/unbound",{"_index":2650,"title":{},"name":{},"text":{"59":{}},"component":{}}],["beam:metric:user:sum_int64:v1",{"_index":3564,"title":{},"name":{},"text":{"160":{}},"component":{}}],["beam:metrics:sum_int64:v1",{"_index":3565,"title":{},"name":{},"text":{"160":{}},"component":{}}],["beambigqueryinput",{"_index":4009,"title":{},"name":{"188":{}},"text":{},"component":{}}],["beambigqueryoutput",{"_index":4011,"title":{},"name":{"189":{}},"text":{},"component":{}}],["beambigtableinput",{"_index":4012,"title":{},"name":{"190":{}},"text":{},"component":{}}],["beambigtableoutput",{"_index":4013,"title":{},"name":{"191":{}},"text":{},"component":{}}],["beamgcppublish",{"_index":4016,"title":{},"name":{"192":{}},"text":{},"component":{}}],["beamgcpsubscrib",{"_index":4018,"title":{},"name":{"193":{}},"text":{},"component":{}}],["beamhivecataloginput",{"_index":4021,"title":{},"name":{"194":{}},"text":{},"component":{}}],["beaminput",{"_index":4025,"title":{},"name":{"195":{}},"text":{},"component":{}}],["beamkafkaconsum",{"_index":4028,"title":{},"name":{"196":{}},"text":{},"component":{}}],["beamkafkaproduc",{"_index":4052,"title":{},"name":{"197":{}},"text":{},"component":{}}],["beamkinesisconsum",{"_index":4061,"title":{},"name":{"198":{}},"text":{},"component":{}}],["beamkinesisproduc",{"_index":4067,"title":{},"name":{"199":{}},"text":{},"component":{}}],["beamoutput",{"_index":4068,"title":{},"name":{"200":{}},"text":{},"component":{}}],["beamoutputtransform/gener",{"_index":3572,"title":{},"name":{},"text":{"160":{}},"component":{}}],["beamsparkpipelinerunconfigur",{"_index":3631,"title":{},"name":{},"text":{"161":{}},"component":{}}],["beamtimestamp",{"_index":4070,"title":{},"name":{"201":{}},"text":{},"component":{}}],["beamwindow",{"_index":4072,"title":{},"name":{"202":{}},"text":{},"component":{}}],["becom",{"_index":663,"title":{},"name":{},"text":{"7":{},"9":{},"52":{},"53":{},"54":{},"82":{},"84":{},"247":{},"261":{},"291":{},"298":{},"316":{},"366":{},"381":{},"395":{},"397":{},"441":{},"466":{},"489":{},"528":{},"542":{}},"component":{}}],["beeblebrox",{"_index":5686,"title":{},"name":{},"text":{"292":{}},"component":{}}],["beer",{"_index":4460,"title":{"433-4":{}},"name":{},"text":{"241":{},"433":{}},"component":{}}],["beetlejuic",{"_index":5687,"title":{},"name":{},"text":{"292":{}},"component":{}}],["befor",{"_index":689,"title":{},"name":{},"text":{"7":{},"11":{},"13":{},"23":{},"25":{},"27":{},"29":{},"30":{},"37":{},"41":{},"50":{},"52":{},"57":{},"74":{},"76":{},"79":{},"82":{},"105":{},"107":{},"130":{},"152":{},"153":{},"154":{},"162":{},"163":{},"165":{},"167":{},"169":{},"186":{},"189":{},"198":{},"205":{},"208":{},"222":{},"224":{},"225":{},"227":{},"228":{},"234":{},"235":{},"239":{},"247":{},"258":{},"268":{},"270":{},"272":{},"275":{},"280":{},"288":{},"289":{},"292":{},"297":{},"298":{},"309":{},"315":{},"316":{},"319":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"344":{},"346":{},"360":{},"364":{},"365":{},"366":{},"367":{},"371":{},"372":{},"376":{},"378":{},"380":{},"383":{},"433":{},"435":{},"439":{},"442":{},"455":{},"461":{},"468":{},"470":{},"477":{},"478":{},"481":{},"483":{},"490":{},"492":{},"501":{},"513":{},"514":{},"521":{},"527":{},"531":{},"533":{},"543":{},"546":{}},"component":{}}],["beforehand",{"_index":692,"title":{},"name":{},"text":{"7":{},"295":{}},"component":{}}],["begin",{"_index":2323,"title":{},"name":{},"text":{"50":{},"165":{},"177":{},"202":{},"235":{},"247":{},"270":{},"316":{},"321":{},"338":{},"357":{},"373":{},"381":{}},"component":{}}],["behav",{"_index":443,"title":{},"name":{},"text":{"5":{},"222":{},"247":{},"271":{},"366":{},"541":{}},"component":{}}],["behavior",{"_index":830,"title":{},"name":{},"text":{"7":{},"27":{},"55":{},"57":{},"78":{},"81":{},"90":{},"94":{},"102":{},"103":{},"150":{},"152":{},"163":{},"167":{},"222":{},"247":{},"271":{},"273":{},"287":{},"297":{},"309":{},"316":{},"329":{},"330":{},"332":{},"333":{},"334":{},"346":{},"388":{},"389":{},"501":{},"508":{}},"component":{}}],["behaviour",{"_index":673,"title":{},"name":{},"text":{"7":{},"167":{}},"component":{}}],["behind",{"_index":751,"title":{},"name":{},"text":{"7":{},"75":{},"163":{},"363":{},"519":{},"533":{}},"component":{}}],["belgian",{"_index":6366,"title":{},"name":{},"text":{"433":{}},"component":{}}],["belgium",{"_index":3493,"title":{},"name":{},"text":{"158":{}},"component":{}}],["believ",{"_index":244,"title":{},"name":{},"text":{"2":{},"519":{}},"component":{}}],["bell",{"_index":2473,"title":{},"name":{},"text":{"56":{}},"component":{}}],["belong",{"_index":2264,"title":{},"name":{},"text":{"50":{},"93":{},"196":{},"202":{},"519":{},"541":{},"544":{}},"component":{}}],["below",{"_index":482,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"13":{},"15":{},"16":{},"17":{},"19":{},"22":{},"23":{},"24":{},"25":{},"29":{},"30":{},"31":{},"36":{},"37":{},"38":{},"40":{},"41":{},"48":{},"53":{},"54":{},"55":{},"56":{},"57":{},"61":{},"69":{},"71":{},"76":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"92":{},"97":{},"103":{},"104":{},"105":{},"130":{},"152":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"170":{},"178":{},"186":{},"221":{},"222":{},"227":{},"233":{},"234":{},"246":{},"250":{},"261":{},"269":{},"270":{},"287":{},"295":{},"298":{},"313":{},"316":{},"321":{},"331":{},"337":{},"344":{},"349":{},"366":{},"367":{},"373":{},"380":{},"384":{},"430":{},"431":{},"442":{},"448":{},"450":{},"453":{},"455":{},"468":{},"475":{},"511":{},"514":{},"529":{},"530":{},"533":{},"535":{},"542":{},"543":{}},"component":{}}],["benefici",{"_index":1156,"title":{},"name":{},"text":{"9":{},"396":{}},"component":{}}],["benefit",{"_index":2373,"title":{},"name":{},"text":{"52":{},"247":{}},"component":{}}],["besid",{"_index":2191,"title":{},"name":{},"text":{"43":{},"76":{},"303":{}},"component":{}}],["best",{"_index":316,"title":{"9":{},"157-4":{}},"name":{},"text":{"2":{},"9":{},"18":{},"43":{},"53":{},"91":{},"94":{},"97":{},"165":{},"167":{},"168":{},"171":{},"205":{},"218":{},"227":{},"245":{},"254":{},"271":{},"287":{},"297":{},"344":{},"368":{},"389":{},"398":{},"429":{},"500":{},"509":{},"531":{},"533":{},"538":{}},"component":{}}],["better",{"_index":687,"title":{},"name":{},"text":{"7":{},"10":{},"106":{},"157":{},"158":{},"163":{},"167":{},"168":{},"205":{},"218":{},"233":{},"235":{},"245":{},"246":{},"254":{},"298":{},"299":{},"355":{},"381":{},"503":{},"528":{}},"component":{}}],["between",{"_index":32,"title":{"78-5":{},"93-3":{}},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"13":{},"15":{},"17":{},"19":{},"20":{},"24":{},"25":{},"27":{},"30":{},"31":{},"36":{},"41":{},"44":{},"52":{},"59":{},"78":{},"80":{},"81":{},"82":{},"87":{},"88":{},"93":{},"103":{},"105":{},"154":{},"162":{},"167":{},"170":{},"179":{},"194":{},"202":{},"204":{},"205":{},"217":{},"223":{},"227":{},"241":{},"247":{},"248":{},"249":{},"250":{},"262":{},"268":{},"276":{},"284":{},"285":{},"290":{},"291":{},"292":{},"297":{},"303":{},"309":{},"322":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"338":{},"344":{},"360":{},"361":{},"363":{},"368":{},"371":{},"373":{},"381":{},"398":{},"400":{},"403":{},"404":{},"412":{},"418":{},"432":{},"433":{},"445":{},"454":{},"464":{},"485":{},"500":{},"501":{},"511":{},"521":{},"532":{},"542":{},"544":{}},"component":{}}],["between,i",{"_index":5641,"title":{},"name":{},"text":{"290":{}},"component":{}}],["beyond",{"_index":963,"title":{},"name":{},"text":{"8":{},"41":{},"247":{},"366":{},"533":{}},"component":{}}],["bf84cbc2",{"_index":1781,"title":{},"name":{},"text":{"37":{}},"component":{}}],["bg",{"_index":4596,"title":{},"name":{},"text":{"241":{}},"component":{}}],["bic",{"_index":4507,"title":{},"name":{},"text":{"241":{}},"component":{}}],["big",{"_index":3753,"title":{},"name":{},"text":{"163":{},"381":{}},"component":{}}],["bigdecim",{"_index":4189,"title":{},"name":{},"text":{"205":{},"373":{}},"component":{}}],["biggest",{"_index":5735,"title":{},"name":{},"text":{"298":{}},"component":{}}],["bignumb",{"_index":790,"title":{},"name":{},"text":{"7":{},"205":{},"227":{},"253":{},"254":{},"258":{},"373":{},"374":{}},"component":{}}],["bigqueri",{"_index":2874,"title":{"117":{},"188":{},"189":{},"117-2":{}},"name":{},"text":{"81":{},"86":{},"117":{},"163":{},"165":{},"188":{},"189":{},"430":{}},"component":{}}],["bigquerystorag",{"_index":3223,"title":{},"name":{},"text":{"117":{}},"component":{}}],["bigtabl",{"_index":2875,"title":{"190":{},"191":{}},"name":{},"text":{"81":{},"190":{},"191":{},"429":{},"430":{}},"component":{}}],["bill",{"_index":3797,"title":{},"name":{},"text":{"165":{},"492":{}},"component":{}}],["bin",{"_index":3582,"title":{},"name":{},"text":{"161":{}},"component":{}}],["bin/bash",{"_index":6680,"title":{},"name":{},"text":{"514":{}},"component":{}}],["bin/flink",{"_index":3547,"title":{},"name":{},"text":{"160":{},"167":{}},"component":{}}],["bin/spark",{"_index":3591,"title":{},"name":{},"text":{"161":{}},"component":{}}],["bin/start",{"_index":3536,"title":{},"name":{},"text":{"160":{}},"component":{}}],["bin/startup.bat",{"_index":7277,"title":{},"name":{},"text":{"543":{}},"component":{}}],["bin/startup.sh",{"_index":7275,"title":{},"name":{},"text":{"543":{}},"component":{}}],["bin/zsh",{"_index":6696,"title":{},"name":{},"text":{"514":{}},"component":{}}],["binari",{"_index":182,"title":{},"name":{},"text":{"1":{},"7":{},"8":{},"40":{},"42":{},"174":{},"185":{},"205":{},"235":{},"247":{},"253":{},"254":{},"258":{},"275":{},"277":{},"304":{},"305":{},"338":{},"339":{},"340":{},"367":{},"373":{},"405":{},"461":{},"463":{},"537":{},"538":{}},"component":{}}],["bind",{"_index":3606,"title":{"337-4":{}},"name":{},"text":{"161":{},"238":{},"303":{},"337":{},"538":{}},"component":{}}],["bindsiz",{"_index":5755,"title":{},"name":{},"text":{"303":{}},"component":{}}],["bioinformat",{"_index":5330,"title":{},"name":{},"text":{"248":{}},"component":{}}],["birth",{"_index":2943,"title":{},"name":{},"text":{"83":{},"227":{}},"component":{}}],["birthday",{"_index":4484,"title":{},"name":{},"text":{"241":{}},"component":{}}],["bit",{"_index":471,"title":{},"name":{},"text":{"5":{},"6":{},"163":{},"164":{},"174":{},"196":{},"197":{},"216":{},"249":{},"270":{},"275":{},"276":{},"294":{},"525":{},"528":{},"541":{}},"component":{}}],["black",{"_index":613,"title":{},"name":{},"text":{"6":{},"23":{},"79":{},"103":{},"105":{}},"component":{}}],["blank",{"_index":3298,"title":{},"name":{},"text":{"130":{},"153":{},"154":{},"165":{},"188":{},"201":{},"206":{},"207":{},"222":{},"233":{},"234":{},"253":{},"254":{},"309":{},"338":{},"357":{},"359":{},"366":{},"367":{},"378":{},"441":{}},"component":{}}],["bleed",{"_index":3473,"title":{},"name":{},"text":{"154":{},"519":{}},"component":{}}],["blend",{"_index":439,"title":{},"name":{},"text":{"5":{}},"component":{}}],["blige",{"_index":5851,"title":{},"name":{},"text":{"320":{}},"component":{}}],["blind",{"_index":5596,"title":{},"name":{},"text":{"280":{}},"component":{}}],["blob",{"_index":974,"title":{},"name":{"98":{},"147":{}},"text":{"8":{},"27":{},"88":{},"98":{},"428":{}},"component":{}}],["block",{"_index":2818,"title":{"203":{},"204":{}},"name":{},"text":{"78":{},"81":{},"84":{},"86":{},"98":{},"105":{},"147":{},"152":{},"167":{},"203":{},"220":{},"233":{},"274":{},"318":{},"344":{},"372":{},"481":{},"503":{}},"component":{}}],["blockincr",{"_index":3131,"title":{},"name":{},"text":{"98":{}},"component":{}}],["blockingtransform",{"_index":4078,"title":{},"name":{"203":{}},"text":{},"component":{}}],["blockmanag",{"_index":3641,"title":{},"name":{},"text":{"161":{}},"component":{}}],["blockmanagermast",{"_index":3642,"title":{},"name":{},"text":{"161":{}},"component":{}}],["blockuntiltransformsfinish",{"_index":4080,"title":{},"name":{"204":{}},"text":{},"component":{}}],["blog",{"_index":1167,"title":{"10":{}},"name":{},"text":{"10":{}},"component":{}}],["blown",{"_index":265,"title":{},"name":{},"text":{"2":{}},"component":{}}],["blue",{"_index":1497,"title":{},"name":{},"text":{"23":{},"30":{},"178":{},"324":{}},"component":{}}],["bmp",{"_index":5218,"title":{},"name":{},"text":{"247":{}},"component":{}}],["bnr6fox6+lwun/cnx/3njts3n7gy/6+ht9tqbnhvrkmskyqimnqxm7ftm5fy3cgqn8qjidpyce6w",{"_index":2131,"title":{},"name":{},"text":{"42":{}},"component":{}}],["board",{"_index":6786,"title":{},"name":{},"text":{"525":{}},"component":{}}],["bob",{"_index":5678,"title":{},"name":{},"text":{"292":{},"324":{}},"component":{}}],["bob.column[\"color",{"_index":5884,"title":{},"name":{},"text":{"324":{}},"component":{}}],["bob.column[\"posit",{"_index":5882,"title":{},"name":{},"text":{"324":{}},"component":{}}],["bobrow",{"_index":5876,"title":{},"name":{},"text":{"324":{}},"component":{}}],["bobrow.addcolumn(\"color",{"_index":5883,"title":{},"name":{},"text":{"324":{}},"component":{}}],["bobrow.addcolumn(\"nam",{"_index":5880,"title":{},"name":{},"text":{"324":{}},"component":{}}],["bobrow.addcolumn(\"posit",{"_index":5881,"title":{},"name":{},"text":{"324":{}},"component":{}}],["bodi",{"_index":1765,"title":{"264-5":{}},"name":{},"text":{"37":{},"40":{},"42":{},"43":{},"58":{},"264":{},"280":{},"319":{},"464":{},"466":{},"469":{}},"component":{}}],["bodycont",{"_index":1764,"title":{},"name":{},"text":{"37":{}},"component":{}}],["bojack",{"_index":4461,"title":{},"name":{},"text":{"241":{}},"component":{}}],["bold",{"_index":1614,"title":{},"name":{},"text":{"27":{}},"component":{}}],["bolt",{"_index":3461,"title":{},"name":{},"text":{"154":{},"294":{},"431":{}},"component":{}}],["bolt+rout",{"_index":3438,"title":{},"name":{},"text":{"154":{}},"component":{}}],["book",{"_index":384,"title":{},"name":{},"text":{"3":{},"68":{},"241":{}},"component":{}}],["bookkeep",{"_index":4106,"title":{},"name":{},"text":{"205":{}},"component":{}}],["bookmark",{"_index":1457,"title":{},"name":{},"text":{"22":{},"27":{}},"component":{}}],["books.hpl",{"_index":2392,"title":{},"name":{},"text":{"53":{},"67":{},"68":{}},"component":{}}],["books.hwf",{"_index":2403,"title":{},"name":{},"text":{"54":{},"73":{}},"component":{}}],["bool",{"_index":4464,"title":{},"name":{},"text":{"241":{}},"component":{}}],["boolean",{"_index":2385,"title":{"536-1":{}},"name":{},"text":{"52":{},"55":{},"58":{},"71":{},"76":{},"78":{},"210":{},"211":{},"212":{},"215":{},"219":{},"227":{},"234":{},"236":{},"242":{},"247":{},"253":{},"254":{},"257":{},"258":{},"262":{},"265":{},"267":{},"269":{},"273":{},"275":{},"279":{},"311":{},"324":{},"325":{},"326":{},"362":{},"366":{},"372":{},"453":{},"529":{},"530":{},"536":{}},"component":{}}],["boolean.tru",{"_index":5436,"title":{},"name":{},"text":{"269":{}},"component":{}}],["boost",{"_index":3007,"title":{},"name":{},"text":{"87":{}},"component":{}}],["boot",{"_index":2488,"title":{},"name":{},"text":{"56":{},"165":{}},"component":{}}],["bootstrap",{"_index":4029,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{},"520":{},"525":{}},"component":{}}],["border",{"_index":1622,"title":{},"name":{},"text":{"27":{}},"component":{}}],["both",{"_index":319,"title":{},"name":{},"text":{"2":{},"3":{},"20":{},"24":{},"41":{},"52":{},"55":{},"57":{},"98":{},"101":{},"158":{},"164":{},"167":{},"181":{},"205":{},"227":{},"234":{},"235":{},"246":{},"247":{},"248":{},"258":{},"277":{},"279":{},"285":{},"294":{},"299":{},"310":{},"319":{},"326":{},"358":{},"366":{},"379":{},"427":{},"428":{},"433":{},"466":{},"480":{},"494":{},"514":{},"520":{},"544":{}},"component":{}}],["bottleneck",{"_index":2352,"title":{},"name":{},"text":{"52":{}},"component":{}}],["bottom",{"_index":644,"title":{},"name":{},"text":{"7":{},"15":{},"27":{},"29":{},"32":{},"34":{},"36":{},"80":{},"83":{},"85":{},"158":{},"270":{},"529":{}},"component":{}}],["bought",{"_index":4267,"title":{},"name":{},"text":{"221":{}},"component":{}}],["bound",{"_index":5739,"title":{},"name":{},"text":{"298":{},"302":{}},"component":{}}],["boundari",{"_index":5747,"title":{},"name":{},"text":{"302":{},"305":{},"366":{}},"component":{}}],["box",{"_index":1273,"title":{},"name":{},"text":{"15":{},"16":{},"71":{},"78":{},"83":{},"87":{},"165":{},"213":{},"220":{},"270":{},"273":{},"287":{},"305":{},"331":{},"337":{},"372":{},"381":{},"464":{},"466":{},"469":{},"532":{}},"component":{}}],["bq",{"_index":4010,"title":{},"name":{},"text":{"188":{}},"component":{}}],["bracket",{"_index":4736,"title":{},"name":{},"text":{"247":{},"273":{},"291":{}},"component":{}}],["branch",{"_index":1501,"title":{"538-1":{}},"name":{},"text":{"23":{},"455":{},"533":{},"537":{},"538":{},"540":{}},"component":{}}],["branchpythonoper",{"_index":2561,"title":{},"name":{},"text":{"56":{}},"component":{}}],["brand",{"_index":3624,"title":{},"name":{},"text":{"161":{},"535":{}},"component":{}}],["brandguideline_hop.pdf",{"_index":6719,"title":{},"name":{},"text":{"516":{}},"component":{}}],["brazil",{"_index":4143,"title":{},"name":{},"text":{"205":{}},"component":{}}],["break",{"_index":2631,"title":{"536":{}},"name":{},"text":{"56":{},"220":{},"247":{},"270":{},"346":{},"503":{},"536":{}},"component":{}}],["breakpoint",{"_index":7047,"title":{},"name":{},"text":{"533":{}},"component":{}}],["breed",{"_index":4470,"title":{},"name":{},"text":{"241":{}},"component":{}}],["breez",{"_index":1165,"title":{},"name":{},"text":{"9":{},"392":{}},"component":{}}],["bride",{"_index":4563,"title":{},"name":{},"text":{"241":{}},"component":{}}],["briefli",{"_index":1478,"title":{},"name":{},"text":{"23":{},"56":{},"430":{}},"component":{}}],["broadcast",{"_index":3884,"title":{},"name":{},"text":{"168":{}},"component":{}}],["broken",{"_index":4105,"title":{},"name":{},"text":{"205":{}},"component":{}}],["broker",{"_index":4030,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["broom",{"_index":6045,"title":{},"name":{},"text":{"363":{}},"component":{}}],["brows",{"_index":925,"title":{},"name":{},"text":{"7":{},"9":{},"22":{},"29":{},"58":{},"90":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"150":{},"152":{},"162":{},"255":{},"260":{},"261":{},"273":{},"275":{},"279":{},"287":{},"289":{},"306":{},"307":{},"309":{},"363":{},"381":{},"386":{},"389":{},"391":{},"439":{},"441":{},"454":{},"457":{},"458":{},"462":{},"463":{},"470":{},"481":{},"487":{},"488":{},"503":{},"504":{}},"component":{}}],["browser",{"_index":271,"title":{"541-2":{}},"name":{},"text":{"2":{},"5":{},"19":{},"22":{},"26":{},"27":{},"41":{},"56":{},"78":{},"99":{},"101":{},"103":{},"130":{},"154":{},"255":{},"279":{},"287":{},"309":{},"457":{},"533":{}},"component":{}}],["bu",{"_index":4008,"title":{},"name":{},"text":{"187":{},"428":{}},"component":{}}],["buchillón",{"_index":1193,"title":{},"name":{},"text":{"10":{}},"component":{}}],["bucket",{"_index":972,"title":{},"name":{},"text":{"8":{},"97":{},"158":{},"162":{},"165":{},"305":{},"315":{},"430":{},"513":{}},"component":{}}],["buffer",{"_index":795,"title":{},"name":{},"text":{"7":{},"78":{},"82":{},"85":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"220":{},"228":{},"289":{},"298":{},"353":{},"544":{}},"component":{}}],["bug",{"_index":351,"title":{},"name":{},"text":{"2":{},"4":{},"431":{},"519":{}},"component":{}}],["build",{"_index":378,"title":{"164-4":{},"533-5":{},"541-10":{},"543-1":{},"543-2":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"9":{},"10":{},"17":{},"25":{},"26":{},"41":{},"50":{},"52":{},"55":{},"56":{},"61":{},"78":{},"84":{},"86":{},"88":{},"93":{},"105":{},"160":{},"161":{},"162":{},"163":{},"164":{},"216":{},"227":{},"241":{},"245":{},"254":{},"267":{},"270":{},"283":{},"395":{},"428":{},"483":{},"514":{},"525":{},"527":{},"528":{},"530":{},"532":{},"533":{},"537":{},"538":{},"540":{},"541":{},"543":{}},"component":{}}],["builder",{"_index":2893,"title":{},"name":{},"text":{"81":{}},"component":{}}],["buildx",{"_index":7159,"title":{},"name":{},"text":{"540":{}},"component":{}}],["built",{"_index":598,"title":{},"name":{},"text":{"5":{},"20":{},"28":{},"35":{},"71":{},"88":{},"161":{},"168":{},"222":{},"309":{},"514":{},"533":{},"541":{},"543":{}},"component":{}}],["builtin",{"_index":3628,"title":{},"name":{},"text":{"161":{}},"component":{}}],["bulk",{"_index":214,"title":{"228":{},"289":{},"303":{},"311":{},"315":{},"346":{},"365":{},"376":{},"470":{},"471":{},"472":{},"346-4":{},"433-10":{}},"name":{},"text":{"1":{},"24":{},"70":{},"71":{},"81":{},"86":{},"228":{},"289":{},"292":{},"303":{},"311":{},"315":{},"346":{},"367":{},"376":{},"405":{},"433":{},"470":{},"471":{},"472":{}},"component":{}}],["bulkload",{"_index":5797,"title":{},"name":{"315":{}},"text":{"365":{}},"component":{}}],["bunch",{"_index":2937,"title":{},"name":{},"text":{"83":{},"337":{}},"component":{}}],["bundl",{"_index":1413,"title":{},"name":{},"text":{"19":{},"163":{},"164":{},"167":{},"168":{},"414":{},"528":{}},"component":{}}],["burden",{"_index":6133,"title":{},"name":{},"text":{"367":{}},"component":{}}],["busi",{"_index":4217,"title":{},"name":{},"text":{"216":{},"222":{},"241":{},"373":{}},"component":{}}],["button",{"_index":527,"title":{"279-8":{},"366-11":{}},"name":{},"text":{"5":{},"7":{},"15":{},"16":{},"23":{},"24":{},"30":{},"34":{},"53":{},"54":{},"76":{},"78":{},"85":{},"93":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"130":{},"153":{},"156":{},"158":{},"174":{},"182":{},"183":{},"204":{},"207":{},"208":{},"216":{},"220":{},"227":{},"232":{},"233":{},"250":{},"260":{},"261":{},"264":{},"268":{},"270":{},"271":{},"273":{},"274":{},"283":{},"289":{},"291":{},"292":{},"297":{},"299":{},"304":{},"305":{},"309":{},"319":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"338":{},"344":{},"346":{},"352":{},"360":{},"366":{},"368":{},"371":{},"374":{},"377":{},"378":{},"381":{},"389":{},"433":{},"437":{},"439":{},"441":{},"448":{},"464":{},"468":{},"469":{},"487":{},"488":{},"498":{},"503":{},"506":{},"520":{},"528":{},"529":{},"532":{},"533":{}},"component":{}}],["bypass",{"_index":1204,"title":{"83-8":{}},"name":{},"text":{"10":{},"70":{},"78":{},"83":{},"299":{}},"component":{}}],["byte",{"_index":728,"title":{},"name":{},"text":{"7":{},"8":{},"98":{},"205":{},"220":{},"228":{},"234":{},"247":{},"256":{},"280":{},"298":{},"355":{},"373":{},"454":{}},"component":{}}],["bz2",{"_index":981,"title":{},"name":{},"text":{"8":{}},"component":{}}],["bzip2",{"_index":977,"title":{},"name":{},"text":{"8":{}},"component":{}}],["c",{"_index":1409,"title":{},"name":{},"text":{"19":{},"27":{},"36":{},"41":{},"46":{},"205":{},"270":{},"321":{},"323":{},"388":{},"537":{},"538":{}},"component":{}}],["c,d.0",{"_index":2009,"title":{},"name":{},"text":{"41":{}},"component":{}}],["c29d2b05da17",{"_index":2074,"title":{},"name":{},"text":{"42":{}},"component":{}}],["c:/program",{"_index":996,"title":{},"name":{},"text":{"8":{}},"component":{}}],["c:\\/env",{"_index":3074,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["c:\\\\env",{"_index":3069,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["c:\\\\hop",{"_index":1921,"title":{},"name":{},"text":{"41":{}},"component":{}}],["c:\\\\hop>echo",{"_index":1354,"title":{},"name":{},"text":{"19":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["c:\\\\hop\\config\\hop",{"_index":3066,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["c:\\\\path\\\\to\\\\your\\\\metadata",{"_index":2188,"title":{},"name":{},"text":{"43":{}},"component":{}}],["c:\\\\variables.json",{"_index":3068,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["c:\\echo",{"_index":1398,"title":{},"name":{},"text":{"19":{},"90":{},"150":{},"152":{}},"component":{}}],["c:\\foo\\bar\\somefile.txt",{"_index":4619,"title":{},"name":{},"text":{"244":{}},"component":{}}],["c:\\log",{"_index":6546,"title":{},"name":{},"text":{"481":{},"489":{},"503":{}},"component":{}}],["c:\\program",{"_index":993,"title":{},"name":{},"text":{"8":{},"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"130":{},"150":{},"151":{},"152":{}},"component":{}}],["c:\\temp",{"_index":5367,"title":{},"name":{},"text":{"251":{}},"component":{}}],["c:\\windows\\system32\\sqlservermanager15.msc",{"_index":3289,"title":{},"name":{},"text":{"130":{}},"component":{}}],["c:custom",{"_index":5701,"title":{},"name":{},"text":{"294":{}},"component":{}}],["c=a+b",{"_index":6210,"title":{},"name":{},"text":{"373":{}},"component":{}}],["ca",{"_index":3368,"title":{},"name":{},"text":{"151":{},"158":{},"161":{},"241":{},"389":{}},"component":{}}],["cach",{"_index":647,"title":{"109":{},"52-4":{},"542-3":{}},"name":{"109":{}},"text":{"7":{},"27":{},"52":{},"203":{},"216":{},"222":{},"227":{},"272":{},"298":{},"363":{},"514":{},"542":{}},"component":{}}],["calcul",{"_index":2248,"title":{"205":{}},"name":{"205":{}},"text":{"50":{},"81":{},"82":{},"84":{},"86":{},"174":{},"179":{},"205":{},"213":{},"216":{},"227":{},"247":{},"248":{},"262":{},"320":{},"338":{},"345":{},"355":{},"373":{},"377":{}},"component":{}}],["calculateibanchecksum",{"_index":4509,"title":{},"name":{},"text":{"241":{}},"component":{}}],["calendar",{"_index":4914,"title":{},"name":{},"text":{"247":{},"363":{}},"component":{}}],["california",{"_index":3755,"title":{},"name":{},"text":{"163":{}},"component":{}}],["call",{"_index":660,"title":{"206":{},"50-8":{}},"name":{},"text":{"7":{},"20":{},"37":{},"40":{},"41":{},"50":{},"52":{},"58":{},"71":{},"76":{},"81":{},"82":{},"83":{},"86":{},"90":{},"100":{},"107":{},"154":{},"158":{},"161":{},"162":{},"164":{},"170":{},"186":{},"187":{},"205":{},"206":{},"220":{},"222":{},"247":{},"263":{},"264":{},"271":{},"275":{},"281":{},"282":{},"285":{},"291":{},"294":{},"331":{},"366":{},"372":{},"377":{},"389":{},"427":{},"428":{},"432":{},"433":{},"436":{},"453":{},"465":{},"475":{},"480":{},"489":{},"490":{},"493":{},"511":{},"514":{},"528":{},"529":{},"530":{},"532":{},"533":{},"541":{},"544":{}},"component":{}}],["calldbproc",{"_index":4192,"title":{},"name":{"206":{}},"text":{},"component":{}}],["came",{"_index":6309,"title":{},"name":{},"text":{"400":{},"544":{}},"component":{}}],["campu",{"_index":4502,"title":{},"name":{},"text":{"241":{}},"component":{}}],["can't",{"_index":7092,"title":{},"name":{},"text":{"537":{}},"component":{}}],["cancel",{"_index":3856,"title":{},"name":{},"text":{"167":{},"356":{},"469":{},"498":{}},"component":{}}],["candid",{"_index":4610,"title":{"538-11":{}},"name":{},"text":{"243":{},"537":{},"538":{},"540":{}},"component":{}}],["canva",{"_index":1270,"title":{},"name":{},"text":{"15":{},"16":{},"27":{},"36":{},"42":{},"53":{},"54":{},"78":{},"80":{},"94":{},"103":{},"330":{},"331":{},"332":{},"333":{},"334":{},"372":{},"400":{},"434":{},"435":{},"438":{},"439":{},"440":{},"449":{},"451":{},"453":{},"454":{},"461":{},"462":{},"463":{},"477":{},"478":{},"479":{},"487":{},"488":{},"506":{},"507":{},"508":{},"542":{}},"component":{}}],["can’t",{"_index":699,"title":{},"name":{},"text":{"7":{},"15":{},"27":{},"52":{},"78":{},"87":{},"99":{},"105":{},"154":{},"157":{},"216":{},"222":{},"227":{},"247":{},"258":{},"268":{},"309":{},"344":{},"371":{},"430":{},"528":{}},"component":{}}],["cap",{"_index":5976,"title":{},"name":{},"text":{"344":{}},"component":{}}],["capabl",{"_index":920,"title":{},"name":{},"text":{"7":{},"84":{},"162":{},"171":{},"227":{},"345":{},"433":{}},"component":{}}],["capac",{"_index":4066,"title":{},"name":{},"text":{"198":{},"228":{}},"component":{}}],["capit",{"_index":2184,"title":{"43-7":{}},"name":{},"text":{"205":{},"358":{},"366":{}},"component":{}}],["capitalc",{"_index":4553,"title":{},"name":{},"text":{"241":{}},"component":{}}],["captur",{"_index":1142,"title":{"316-6":{}},"name":{},"text":{"9":{},"20":{},"29":{},"53":{},"54":{},"67":{},"68":{},"73":{},"76":{},"244":{},"316":{},"391":{},"503":{}},"component":{}}],["car",{"_index":5027,"title":{},"name":{},"text":{"247":{}},"component":{}}],["carbon",{"_index":5594,"title":{},"name":{},"text":{"280":{}},"component":{}}],["card",{"_index":2885,"title":{"219":{}},"name":{},"text":{"81":{},"86":{},"219":{},"366":{}},"component":{}}],["care",{"_index":2340,"title":{},"name":{},"text":{"52":{},"105":{},"163":{},"179":{},"181":{},"298":{},"367":{},"373":{},"380":{},"400":{},"505":{},"532":{},"535":{},"541":{}},"component":{}}],["carefulli",{"_index":6961,"title":{},"name":{},"text":{"530":{}},"component":{}}],["carri",{"_index":4205,"title":{},"name":{},"text":{"209":{},"360":{},"529":{}},"component":{}}],["carriag",{"_index":4155,"title":{},"name":{},"text":{"205":{},"220":{},"366":{},"367":{},"381":{}},"component":{}}],["cart",{"_index":902,"title":{},"name":{},"text":{"7":{},"518":{},"519":{}},"component":{}}],["cartesian",{"_index":2333,"title":{},"name":{},"text":{"52":{},"81":{},"272":{},"363":{}},"component":{}}],["case",{"_index":199,"title":{"359":{},"20-4":{},"178-6":{}},"name":{},"text":{"1":{},"7":{},"9":{},"19":{},"20":{},"29":{},"30":{},"34":{},"37":{},"38":{},"39":{},"47":{},"50":{},"53":{},"54":{},"55":{},"56":{},"57":{},"71":{},"78":{},"79":{},"81":{},"83":{},"86":{},"130":{},"151":{},"154":{},"158":{},"161":{},"162":{},"163":{},"167":{},"168":{},"169":{},"172":{},"178":{},"179":{},"182":{},"196":{},"205":{},"206":{},"218":{},"220":{},"222":{},"227":{},"230":{},"232":{},"233":{},"234":{},"238":{},"246":{},"247":{},"248":{},"250":{},"251":{},"262":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"280":{},"285":{},"287":{},"289":{},"291":{},"297":{},"309":{},"310":{},"316":{},"317":{},"322":{},"338":{},"347":{},"352":{},"355":{},"359":{},"366":{},"367":{},"369":{},"378":{},"379":{},"380":{},"389":{},"390":{},"394":{},"400":{},"405":{},"433":{},"481":{},"500":{},"505":{},"510":{},"511":{},"514":{},"527":{},"528":{},"533":{},"544":{}},"component":{}}],["case(switch",{"_index":1392,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["case.hpl",{"_index":1389,"title":{},"name":{},"text":{"19":{},"47":{},"59":{},"158":{}},"component":{}}],["cassandra",{"_index":1448,"title":{"153":{},"207":{},"208":{},"353":{},"429":{},"437":{},"429-1":{}},"name":{"153":{},"207":{},"208":{},"437":{}},"text":{"20":{},"24":{},"64":{},"81":{},"86":{},"88":{},"92":{},"96":{},"153":{},"207":{},"208":{},"353":{},"429":{},"437":{}},"component":{}}],["cassandra.yaml",{"_index":6005,"title":{},"name":{},"text":{"353":{}},"component":{}}],["cassandraql",{"_index":6394,"title":{},"name":{},"text":{"437":{}},"component":{}}],["cassandra’",{"_index":6326,"title":{},"name":{},"text":{"429":{}},"component":{}}],["cast",{"_index":2851,"title":{},"name":{},"text":{"79":{},"81":{},"194":{},"205":{},"344":{},"538":{}},"component":{}}],["cat",{"_index":4469,"title":{},"name":{},"text":{"241":{}},"component":{}}],["catalina_hom",{"_index":7251,"title":{},"name":{},"text":{"543":{}},"component":{}}],["catalina_home/bin/startup.sh",{"_index":7253,"title":{},"name":{},"text":{"543":{}},"component":{}}],["catalina_home/webapps/hop",{"_index":7252,"title":{},"name":{},"text":{"543":{}},"component":{}}],["catalina_opts='${hop_opt",{"_index":7261,"title":{},"name":{},"text":{"543":{}},"component":{}}],["catalog",{"_index":4020,"title":{"194":{}},"name":{},"text":{"194":{},"257":{},"271":{}},"component":{}}],["catch",{"_index":3824,"title":{},"name":{},"text":{"165":{},"227":{},"372":{},"533":{}},"component":{}}],["catchphras",{"_index":4529,"title":{},"name":{},"text":{"241":{}},"component":{}}],["catchup=fals",{"_index":2578,"title":{},"name":{},"text":{"56":{}},"component":{}}],["categor",{"_index":1511,"title":{},"name":{},"text":{"24":{},"247":{}},"component":{}}],["categori",{"_index":1510,"title":{"241-4":{}},"name":{},"text":{"24":{},"27":{},"52":{},"82":{},"83":{},"88":{},"163":{},"227":{},"241":{},"275":{},"276":{},"338":{},"466":{},"530":{},"534":{}},"component":{}}],["category\":null,\"name\":\"beam",{"_index":1753,"title":{},"name":{},"text":{"37":{}},"component":{}}],["caus",{"_index":1854,"title":{},"name":{},"text":{"38":{},"82":{},"83":{},"94":{},"154":{},"168":{},"169":{},"172":{},"207":{},"227":{},"235":{},"273":{},"303":{},"318":{},"337":{},"381":{},"426":{},"431":{},"460":{},"501":{},"535":{},"542":{}},"component":{}}],["cc",{"_index":5593,"title":{},"name":{},"text":{"280":{},"466":{}},"component":{}}],["ccontribut",{"_index":4360,"title":{},"name":{},"text":{"233":{}},"component":{}}],["cd",{"_index":6681,"title":{},"name":{},"text":{"514":{},"527":{},"528":{},"533":{},"537":{},"538":{},"540":{}},"component":{}}],["cdata",{"_index":4153,"title":{},"name":{},"text":{"205":{},"358":{},"381":{}},"component":{}}],["cdc",{"_index":1442,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cdxcix",{"_index":5273,"title":{},"name":{},"text":{"247":{}},"component":{}}],["cea3",{"_index":738,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ceil",{"_index":4117,"title":{"247-91":{}},"name":{},"text":{"205":{}},"component":{}}],["celeryexecutor",{"_index":2505,"title":{},"name":{},"text":{"56":{}},"component":{}}],["cell",{"_index":4395,"title":{},"name":{},"text":{"235":{},"247":{}},"component":{}}],["cellphon",{"_index":4560,"title":{},"name":{},"text":{"241":{}},"component":{}}],["center",{"_index":6315,"title":{},"name":{},"text":{"428":{},"432":{}},"component":{}}],["central",{"_index":152,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{},"27":{},"90":{},"94":{},"98":{},"99":{},"100":{},"101":{},"389":{},"406":{},"422":{},"530":{},"532":{}},"component":{}}],["certain",{"_index":612,"title":{},"name":{},"text":{"6":{},"7":{},"39":{},"64":{},"75":{},"83":{},"165":{},"179":{},"222":{},"245":{},"247":{},"250":{},"268":{},"292":{},"298":{},"301":{},"309":{},"313":{},"317":{},"336":{},"337":{},"359":{},"360":{},"362":{},"378":{},"389":{},"439":{},"449":{},"451":{},"459":{},"483":{},"486":{},"497":{},"500":{},"530":{},"534":{}},"component":{}}],["certif",{"_index":1946,"title":{},"name":{},"text":{"41":{},"277":{},"278":{},"319":{}},"component":{}}],["cf84cbc2",{"_index":1783,"title":{},"name":{},"text":{"37":{}},"component":{}}],["cfd",{"_index":3408,"title":{},"name":{},"text":{"152":{}},"component":{}}],["cfg",{"_index":3388,"title":{},"name":{},"text":{"152":{}},"component":{}}],["cfg/dat",{"_index":5760,"title":{},"name":{},"text":{"303":{}},"component":{}}],["cfv",{"_index":3409,"title":{},"name":{},"text":{"152":{}},"component":{}}],["ch",{"_index":4599,"title":{},"name":{},"text":{"241":{}},"component":{}}],["chain",{"_index":1263,"title":{},"name":{},"text":{"15":{},"52":{},"78":{},"82":{},"103":{},"271":{}},"component":{}}],["challeng",{"_index":6356,"title":{},"name":{},"text":{"433":{}},"component":{}}],["champion",{"_index":4541,"title":{},"name":{},"text":{"241":{}},"component":{}}],["chanc",{"_index":5821,"title":{},"name":{},"text":{"318":{},"528":{}},"component":{}}],["chang",{"_index":499,"title":{"176":{},"209":{},"536":{},"528-2":{},"532-1":{},"532-3":{},"538-5":{}},"name":{},"text":{"5":{},"7":{},"8":{},"20":{},"22":{},"23":{},"27":{},"30":{},"35":{},"36":{},"38":{},"41":{},"50":{},"52":{},"55":{},"56":{},"78":{},"81":{},"82":{},"83":{},"85":{},"86":{},"88":{},"90":{},"93":{},"94":{},"95":{},"103":{},"105":{},"130":{},"154":{},"158":{},"161":{},"170":{},"176":{},"177":{},"204":{},"205":{},"206":{},"209":{},"216":{},"222":{},"223":{},"225":{},"227":{},"230":{},"234":{},"235":{},"246":{},"247":{},"248":{},"255":{},"256":{},"268":{},"273":{},"285":{},"292":{},"309":{},"316":{},"319":{},"329":{},"330":{},"332":{},"333":{},"334":{},"337":{},"338":{},"360":{},"363":{},"367":{},"378":{},"388":{},"389":{},"425":{},"492":{},"498":{},"500":{},"508":{},"511":{},"513":{},"519":{},"528":{},"532":{},"533":{},"536":{},"538":{},"540":{},"541":{}},"component":{}}],["changed_d",{"_index":6050,"title":{},"name":{},"text":{"363":{}},"component":{}}],["changefileencod",{"_index":4204,"title":{},"name":{"209":{}},"text":{},"component":{}}],["channel",{"_index":1901,"title":{"522-3":{}},"name":{},"text":{"40":{},"55":{},"76":{},"308":{},"310":{},"379":{},"453":{},"522":{},"524":{},"544":{}},"component":{}}],["chapter",{"_index":1604,"title":{},"name":{},"text":{"26":{}},"component":{}}],["char",{"_index":4129,"title":{"247-146":{}},"name":{},"text":{"205":{},"220":{},"246":{},"247":{},"349":{},"350":{},"358":{},"366":{},"470":{}},"component":{}}],["char(1",{"_index":4306,"title":{},"name":{},"text":{"227":{}},"component":{}}],["char(100",{"_index":5152,"title":{},"name":{},"text":{"247":{}},"component":{}}],["char(3",{"_index":4284,"title":{},"name":{},"text":{"222":{}},"component":{}}],["char(33",{"_index":5156,"title":{},"name":{},"text":{"247":{}},"component":{}}],["char(65",{"_index":5153,"title":{},"name":{},"text":{"247":{}},"component":{}}],["charact",{"_index":174,"title":{"246-6":{}},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"29":{},"38":{},"94":{},"97":{},"98":{},"194":{},"195":{},"200":{},"205":{},"217":{},"219":{},"220":{},"222":{},"228":{},"237":{},"238":{},"241":{},"243":{},"246":{},"247":{},"248":{},"270":{},"280":{},"289":{},"298":{},"303":{},"311":{},"316":{},"317":{},"346":{},"349":{},"350":{},"357":{},"358":{},"366":{},"367":{},"368":{},"373":{},"381":{},"395":{},"400":{},"405":{},"426":{},"461":{},"463":{},"470":{},"472":{}},"component":{}}],["charset",{"_index":4609,"title":{},"name":{},"text":{"243":{},"316":{}},"component":{}}],["chart",{"_index":2261,"title":{"538-9":{}},"name":{},"text":{"50":{},"235":{},"538":{}},"component":{}}],["chat",{"_index":6744,"title":{},"name":{},"text":{"519":{}},"component":{}}],["check",{"_index":392,"title":{"210":{},"211":{},"438":{},"439":{},"458":{},"473":{},"485":{},"502":{},"506":{},"537":{},"53-4":{},"54-4":{},"154-7":{},"270-11":{},"527-6":{},"537-1":{},"537-2":{},"538-3":{}},"name":{"537":{}},"text":{"4":{},"5":{},"8":{},"14":{},"15":{},"16":{},"17":{},"19":{},"24":{},"25":{},"26":{},"27":{},"30":{},"38":{},"40":{},"43":{},"46":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"63":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"77":{},"78":{},"79":{},"80":{},"81":{},"83":{},"84":{},"85":{},"86":{},"90":{},"91":{},"93":{},"94":{},"103":{},"130":{},"154":{},"158":{},"159":{},"160":{},"161":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"174":{},"205":{},"209":{},"210":{},"211":{},"212":{},"213":{},"215":{},"218":{},"219":{},"220":{},"230":{},"232":{},"233":{},"234":{},"235":{},"237":{},"238":{},"239":{},"242":{},"245":{},"247":{},"248":{},"250":{},"254":{},"259":{},"260":{},"261":{},"264":{},"271":{},"273":{},"274":{},"280":{},"296":{},"297":{},"298":{},"302":{},"305":{},"308":{},"309":{},"310":{},"312":{},"314":{},"315":{},"320":{},"324":{},"325":{},"331":{},"346":{},"351":{},"352":{},"355":{},"359":{},"360":{},"363":{},"366":{},"367":{},"368":{},"369":{},"372":{},"378":{},"379":{},"380":{},"382":{},"383":{},"384":{},"387":{},"389":{},"430":{},"431":{},"432":{},"433":{},"438":{},"439":{},"442":{},"451":{},"455":{},"458":{},"460":{},"462":{},"464":{},"465":{},"466":{},"467":{},"468":{},"470":{},"472":{},"473":{},"475":{},"481":{},"483":{},"485":{},"487":{},"488":{},"489":{},"490":{},"492":{},"496":{},"498":{},"499":{},"500":{},"501":{},"502":{},"504":{},"506":{},"508":{},"519":{},"520":{},"521":{},"527":{},"529":{},"533":{},"534":{},"535":{},"537":{},"538":{},"539":{},"543":{}},"component":{}}],["checkbox",{"_index":2368,"title":{},"name":{},"text":{"52":{},"261":{},"273":{},"481":{},"509":{}},"component":{}}],["checkconnect",{"_index":6530,"title":{},"name":{"473":{}},"text":{},"component":{}}],["checkdbconnect",{"_index":6398,"title":{},"name":{"438":{}},"text":{},"component":{}}],["checkfeedback",{"_index":6193,"title":{},"name":{},"text":{"372":{}},"component":{}}],["checkfilelock",{"_index":4206,"title":{},"name":{"210":{},"439":{}},"text":{},"component":{}}],["checklist",{"_index":3794,"title":{},"name":{},"text":{"165":{}},"component":{}}],["checkout",{"_index":1672,"title":{},"name":{},"text":{"30":{},"533":{},"538":{},"540":{}},"component":{}}],["checkpoint",{"_index":3853,"title":{},"name":{},"text":{"167":{},"168":{},"186":{}},"component":{}}],["checksum",{"_index":2867,"title":{"174":{}},"name":{},"text":{"81":{},"82":{},"86":{},"174":{},"205":{},"538":{}},"component":{}}],["checkwebserviceavail",{"_index":4207,"title":{},"name":{"211":{}},"text":{},"component":{}}],["cheer",{"_index":7144,"title":{},"name":{},"text":{"538":{}},"component":{}}],["child",{"_index":653,"title":{},"name":{},"text":{"7":{},"29":{},"37":{},"55":{},"57":{},"105":{},"169":{},"213":{},"309":{},"344":{},"345":{},"378":{},"483":{},"510":{},"544":{}},"component":{}}],["child.hpl",{"_index":4645,"title":{},"name":{},"text":{"246":{},"345":{}},"component":{}}],["children",{"_index":4409,"title":{},"name":{},"text":{"236":{},"432":{},"453":{},"544":{}},"component":{}}],["choic",{"_index":1258,"title":{},"name":{},"text":{"14":{},"29":{},"40":{},"76":{},"168":{},"429":{},"483":{},"518":{}},"component":{}}],["choos",{"_index":1659,"title":{"171-2":{},"247-52":{},"512-2":{}},"name":{},"text":{"29":{},"40":{},"52":{},"53":{},"54":{},"79":{},"85":{},"94":{},"99":{},"103":{},"104":{},"105":{},"158":{},"169":{},"183":{},"203":{},"205":{},"227":{},"235":{},"247":{},"251":{},"270":{},"275":{},"305":{},"315":{},"318":{},"337":{},"347":{},"369":{},"372":{},"441":{},"442":{},"464":{},"465":{},"470":{},"481":{},"529":{},"533":{}},"component":{}}],["choosen",{"_index":2973,"title":{},"name":{},"text":{"85":{}},"component":{}}],["chooser",{"_index":1606,"title":{},"name":{},"text":{"26":{}},"component":{}}],["chord",{"_index":4549,"title":{},"name":{},"text":{"241":{}},"component":{}}],["chose",{"_index":5966,"title":{},"name":{},"text":{"338":{},"364":{},"367":{},"460":{}},"component":{}}],["chosen",{"_index":1296,"title":{},"name":{},"text":{"15":{},"165":{},"175":{},"214":{},"247":{},"303":{},"318":{},"441":{}},"component":{}}],["chown",{"_index":6683,"title":{},"name":{},"text":{"514":{}},"component":{}}],["chown=hop:hop",{"_index":6692,"title":{},"name":{},"text":{"514":{}},"component":{}}],["chucknorri",{"_index":4468,"title":{},"name":{},"text":{"241":{}},"component":{}}],["chunk",{"_index":917,"title":{},"name":{},"text":{"7":{},"233":{},"381":{}},"component":{}}],["churn",{"_index":3456,"title":{},"name":{},"text":{"154":{}},"component":{}}],["ci",{"_index":3413,"title":{},"name":{},"text":{"152":{}},"component":{}}],["ci/cd",{"_index":374,"title":{},"name":{},"text":{"2":{},"83":{}},"component":{}}],["cif",{"_index":985,"title":{},"name":{},"text":{"8":{}},"component":{}}],["circl",{"_index":2609,"title":{},"name":{},"text":{"56":{},"178":{}},"component":{}}],["citi",{"_index":4429,"title":{},"name":{},"text":{"241":{},"291":{},"373":{}},"component":{}}],["citizen",{"_index":2471,"title":{},"name":{},"text":{"56":{}},"component":{}}],["cl",{"_index":6393,"title":{},"name":{},"text":{"436":{}},"component":{}}],["cl/wnwuapnleyodbshgx6pifeyrxnviwqkdkvgu0fe9p77ik6nbptjmo7rj4ijpjanuffwkad1yd",{"_index":2135,"title":{},"name":{},"text":{"42":{}},"component":{}}],["claim",{"_index":3996,"title":{},"name":{},"text":{"186":{},"187":{},"247":{}},"component":{}}],["class",{"_index":609,"title":{"372":{},"37-11":{},"37-12":{},"372-8":{},"529-3":{}},"name":{},"text":{"5":{},"7":{},"11":{},"37":{},"71":{},"81":{},"86":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"178":{},"270":{},"291":{},"324":{},"325":{},"337":{},"372":{},"373":{},"427":{},"429":{},"524":{},"525":{},"528":{},"529":{},"530":{},"532":{},"536":{},"542":{},"544":{}},"component":{}}],["class':'simplestrategi",{"_index":3427,"title":{},"name":{},"text":{"153":{},"437":{}},"component":{}}],["classic",{"_index":2246,"title":{},"name":{},"text":{"50":{},"52":{},"247":{},"284":{},"480":{}},"component":{}}],["classifi",{"_index":3004,"title":{},"name":{},"text":{"87":{},"323":{}},"component":{}}],["classloader.getresourc",{"_index":1061,"title":{},"name":{},"text":{"8":{}},"component":{}}],["classnam",{"_index":2717,"title":{},"name":{},"text":{"71":{}},"component":{}}],["classpath",{"_index":1323,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{},"163":{},"530":{}},"component":{}}],["claus",{"_index":3172,"title":{},"name":{},"text":{"107":{},"208":{},"222":{},"361":{}},"component":{}}],["clean",{"_index":102,"title":{"247-147":{}},"name":{},"text":{"1":{},"2":{},"7":{},"9":{},"13":{},"20":{},"78":{},"247":{},"395":{},"404":{},"407":{},"409":{},"433":{},"514":{},"527":{},"531":{},"532":{},"533":{},"537":{},"538":{},"541":{}},"component":{}}],["cleans",{"_index":1452,"title":{},"name":{},"text":{"20":{}},"component":{}}],["cleanup",{"_index":2036,"title":{"62-7":{},"433-7":{}},"name":{},"text":{"41":{},"433":{},"520":{},"536":{}},"component":{}}],["clear",{"_index":826,"title":{},"name":{},"text":{"7":{},"24":{},"27":{},"55":{},"77":{},"78":{},"83":{},"103":{},"161":{},"273":{},"316":{},"331":{},"363":{},"435":{},"455":{},"481":{},"482":{},"495":{},"501":{},"527":{}},"component":{}}],["clearli",{"_index":5636,"title":{},"name":{},"text":{"289":{}},"component":{}}],["clever",{"_index":6894,"title":{},"name":{},"text":{"528":{}},"component":{}}],["cli",{"_index":1543,"title":{"25-3":{},"48-1":{}},"name":{},"text":{},"component":{}}],["click",{"_index":521,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"15":{},"16":{},"23":{},"24":{},"27":{},"29":{},"30":{},"31":{},"35":{},"36":{},"53":{},"54":{},"56":{},"57":{},"78":{},"79":{},"82":{},"83":{},"85":{},"93":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"130":{},"153":{},"154":{},"158":{},"163":{},"169":{},"171":{},"179":{},"206":{},"217":{},"220":{},"222":{},"234":{},"246":{},"247":{},"250":{},"259":{},"260":{},"261":{},"262":{},"268":{},"270":{},"273":{},"275":{},"285":{},"287":{},"290":{},"291":{},"292":{},"313":{},"316":{},"319":{},"323":{},"327":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"337":{},"338":{},"344":{},"347":{},"348":{},"360":{},"363":{},"367":{},"369":{},"371":{},"372":{},"381":{},"383":{},"441":{},"457":{},"464":{},"466":{},"469":{},"481":{},"498":{},"503":{},"512":{},"520":{}},"component":{}}],["clickabl",{"_index":7189,"title":{},"name":{},"text":{"541":{}},"component":{}}],["clickhous",{"_index":3188,"title":{"110":{}},"name":{"110":{}},"text":{},"component":{}}],["client",{"_index":1183,"title":{"263":{},"319":{},"263-5":{},"263-6":{},"538-8":{},"541-2":{}},"name":{},"text":{"10":{},"25":{},"41":{},"52":{},"81":{},"82":{},"86":{},"90":{},"101":{},"170":{},"263":{},"273":{},"276":{},"319":{},"372":{},"389":{},"429":{},"461":{},"462":{},"463":{},"485":{},"511":{},"514":{},"531":{},"533":{},"537":{},"538":{},"540":{}},"component":{}}],["client.0",{"_index":5395,"title":{},"name":{},"text":{"258":{}},"component":{}}],["client.dns.lookup",{"_index":4049,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["client’",{"_index":5531,"title":{},"name":{},"text":{"273":{}},"component":{}}],["clipboard",{"_index":1520,"title":{},"name":{},"text":{"24":{},"78":{},"103":{},"156":{},"165":{},"246":{},"528":{}},"component":{}}],["clock",{"_index":4812,"title":{},"name":{},"text":{"247":{}},"component":{}}],["clone",{"_index":2880,"title":{"212":{},"533-3":{}},"name":{},"text":{"81":{},"86":{},"212":{},"514":{},"527":{},"533":{},"534":{},"537":{},"538":{}},"component":{}}],["clonerow",{"_index":4208,"title":{},"name":{"212":{}},"text":{},"component":{}}],["close",{"_index":530,"title":{},"name":{},"text":{"5":{},"7":{},"24":{},"36":{},"41":{},"53":{},"54":{},"154":{},"159":{},"164":{},"166":{},"247":{},"263":{},"264":{},"270":{}},"component":{}}],["close/reopen",{"_index":817,"title":{},"name":{},"text":{"7":{}},"component":{}}],["closer",{"_index":240,"title":{},"name":{},"text":{"2":{},"18":{},"55":{},"56":{},"57":{},"248":{}},"component":{}}],["closest",{"_index":4092,"title":{},"name":{},"text":{"205":{}},"component":{}}],["closur",{"_index":2881,"title":{"213":{}},"name":{"213":{}},"text":{"81":{},"86":{},"213":{}},"component":{}}],["cloud",{"_index":15,"title":{"100":{},"158":{},"152-14":{},"152-18":{},"154-5":{},"430-4":{}},"name":{"100":{},"147":{},"148":{},"149":{}},"text":{"1":{},"8":{},"10":{},"18":{},"19":{},"20":{},"27":{},"37":{},"88":{},"97":{},"100":{},"117":{},"148":{},"152":{},"154":{},"158":{},"163":{},"164":{},"165":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"196":{},"197":{},"259":{},"260":{},"261":{},"275":{},"276":{},"411":{},"418":{},"428":{},"429":{},"430":{},"513":{},"518":{}},"component":{}}],["cloud’",{"_index":327,"title":{},"name":{},"text":{"2":{}},"component":{}}],["club",{"_index":4242,"title":{},"name":{},"text":{"219":{}},"component":{}}],["cluster",{"_index":325,"title":{"160-2":{},"161-3":{}},"name":{},"text":{"2":{},"9":{},"19":{},"20":{},"41":{},"64":{},"65":{},"77":{},"154":{},"159":{},"160":{},"161":{},"162":{},"163":{},"166":{},"168":{},"170":{},"196":{},"197":{},"207":{},"208":{},"220":{},"275":{},"276":{},"395":{},"429":{},"437":{},"441":{},"492":{},"514":{}},"component":{}}],["cluster.sh",{"_index":3537,"title":{},"name":{},"text":{"160":{}},"component":{}}],["cluster:clust",{"_index":1888,"title":{},"name":{},"text":{"40":{}},"component":{}}],["cluster_api_key",{"_index":4059,"title":{},"name":{},"text":{"197":{},"276":{}},"component":{}}],["cluster_api_key:cluster_api_secret",{"_index":4045,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["cluster_api_secret",{"_index":4060,"title":{},"name":{},"text":{"197":{},"276":{}},"component":{}}],["cluster’",{"_index":3542,"title":{},"name":{},"text":{"160":{}},"component":{}}],["clutter",{"_index":1116,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["cmd",{"_index":717,"title":{},"name":{},"text":{"7":{},"36":{},"38":{},"94":{},"258":{},"420":{},"426":{}},"component":{}}],["cmyk",{"_index":6717,"title":{"516-1":{}},"name":{},"text":{},"component":{}}],["co",{"_index":4690,"title":{"247-94":{}},"name":{},"text":{"538":{},"540":{}},"component":{}}],["coach",{"_index":4458,"title":{},"name":{},"text":{"241":{}},"component":{}}],["coalesc",{"_index":2882,"title":{"214":{}},"name":{"214":{}},"text":{"81":{},"86":{},"214":{}},"component":{}}],["coast",{"_index":1113,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["cobol",{"_index":4637,"title":{},"name":{},"text":{"246":{}},"component":{}}],["code",{"_index":88,"title":{"2-2":{},"38-2":{},"247-148":{},"372-8":{},"528-2":{},"528-5":{},"528-11":{},"533-6":{},"540-1":{}},"name":{},"text":{"1":{},"2":{},"7":{},"9":{},"13":{},"19":{},"20":{},"23":{},"30":{},"38":{},"48":{},"50":{},"53":{},"56":{},"57":{},"77":{},"79":{},"81":{},"102":{},"103":{},"159":{},"163":{},"165":{},"166":{},"167":{},"185":{},"205":{},"216":{},"241":{},"247":{},"248":{},"249":{},"263":{},"264":{},"269":{},"270":{},"294":{},"319":{},"322":{},"337":{},"342":{},"354":{},"372":{},"374":{},"375":{},"379":{},"398":{},"399":{},"404":{},"414":{},"453":{},"470":{},"483":{},"519":{},"520":{},"522":{},"523":{},"525":{},"527":{},"528":{},"529":{},"531":{},"532":{},"533":{},"534":{},"537":{},"538":{},"540":{},"541":{},"542":{},"543":{},"546":{}},"component":{}}],["code(\"d",{"_index":5160,"title":{},"name":{},"text":{"247":{}},"component":{}}],["codebas",{"_index":6783,"title":{},"name":{},"text":{"525":{},"533":{},"535":{},"536":{}},"component":{}}],["codec",{"_index":3985,"title":{},"name":{},"text":{"185":{},"305":{}},"component":{}}],["codepag",{"_index":6520,"title":{},"name":{},"text":{"470":{}},"component":{}}],["codepage/encod",{"_index":3101,"title":{},"name":{},"text":{"94":{},"426":{}},"component":{}}],["coeffici",{"_index":4171,"title":{},"name":{},"text":{"205":{}},"component":{}}],["coher",{"_index":5483,"title":{},"name":{},"text":{"270":{}},"component":{}}],["coin",{"_index":4474,"title":{},"name":{},"text":{"241":{}},"component":{}}],["collaps",{"_index":1508,"title":{},"name":{},"text":{"24":{},"27":{},"237":{}},"component":{}}],["collect",{"_index":581,"title":{"29-2":{}},"name":{},"text":{"5":{},"13":{},"29":{},"51":{},"56":{},"60":{},"64":{},"78":{},"87":{},"88":{},"91":{},"103":{},"151":{},"158":{},"167":{},"169":{},"262":{},"275":{},"285":{},"290":{},"291":{},"292":{},"294":{},"309":{},"324":{},"329":{},"330":{},"332":{},"333":{},"334":{},"372":{},"378":{},"389":{},"433":{},"525":{},"544":{}},"component":{}}],["collectors.tolist",{"_index":6175,"title":{},"name":{},"text":{"372":{}},"component":{}}],["collis",{"_index":5836,"title":{},"name":{},"text":{"320":{},"370":{}},"component":{}}],["colon",{"_index":6396,"title":{},"name":{},"text":{"437":{},"475":{},"493":{}},"component":{}}],["color",{"_index":1495,"title":{"535-3":{}},"name":{},"text":{"23":{},"30":{},"241":{},"324":{},"518":{},"535":{},"541":{},"542":{}},"component":{}}],["colour",{"_index":3960,"title":{},"name":{},"text":{"178":{}},"component":{}}],["column",{"_index":634,"title":{"215":{},"440":{}},"name":{},"text":{"7":{},"29":{},"52":{},"55":{},"60":{},"71":{},"81":{},"86":{},"128":{},"142":{},"182":{},"188":{},"191":{},"204":{},"208":{},"214":{},"215":{},"220":{},"222":{},"223":{},"227":{},"228":{},"234":{},"235":{},"236":{},"247":{},"248":{},"250":{},"262":{},"268":{},"271":{},"273":{},"287":{},"292":{},"298":{},"313":{},"315":{},"316":{},"317":{},"319":{},"323":{},"324":{},"325":{},"328":{},"332":{},"333":{},"334":{},"336":{},"344":{},"346":{},"356":{},"359":{},"360":{},"361":{},"364":{},"366":{},"376":{},"380":{},"381":{},"429":{},"440":{},"471":{},"481":{},"483":{},"503":{}},"component":{}}],["column(nam",{"_index":5898,"title":{},"name":{},"text":{"325":{}},"component":{}}],["column[\"color",{"_index":5873,"title":{},"name":{},"text":{"324":{}},"component":{}}],["column[\"nam",{"_index":5870,"title":{},"name":{},"text":{"324":{}},"component":{}}],["column[\"posit",{"_index":5871,"title":{},"name":{},"text":{"324":{}},"component":{}}],["columnar",{"_index":3189,"title":{},"name":{},"text":{"110":{},"305":{}},"component":{}}],["columnexist",{"_index":4212,"title":{},"name":{"215":{}},"text":{},"component":{}}],["columninfo",{"_index":6297,"title":{},"name":{"400":{}},"text":{},"component":{}}],["columnnam",{"_index":4215,"title":{},"name":{},"text":{"215":{}},"component":{}}],["columnsexist",{"_index":6401,"title":{},"name":{"440":{}},"text":{},"component":{}}],["column’",{"_index":4015,"title":{},"name":{},"text":{"191":{},"220":{},"366":{}},"component":{}}],["combin",{"_index":677,"title":{"216":{},"57-3":{},"247-92":{}},"name":{},"text":{"7":{},"20":{},"41":{},"52":{},"55":{},"57":{},"71":{},"76":{},"78":{},"81":{},"83":{},"84":{},"86":{},"94":{},"105":{},"152":{},"154":{},"165":{},"168":{},"170":{},"216":{},"228":{},"229":{},"234":{},"247":{},"250":{},"256":{},"259":{},"272":{},"274":{},"280":{},"283":{},"287":{},"291":{},"311":{},"313":{},"355":{},"356":{},"363":{},"366":{},"429":{},"466":{},"481":{},"489":{},"503":{},"511":{}},"component":{}}],["combinationlookup",{"_index":4216,"title":{},"name":{"216":{}},"text":{},"component":{}}],["combinefn",{"_index":3841,"title":{},"name":{},"text":{"166":{}},"component":{}}],["combo",{"_index":7015,"title":{},"name":{},"text":{"532":{}},"component":{}}],["come",{"_index":597,"title":{},"name":{},"text":{"5":{},"6":{},"20":{},"35":{},"52":{},"56":{},"67":{},"68":{},"69":{},"73":{},"74":{},"78":{},"83":{},"85":{},"91":{},"95":{},"158":{},"163":{},"164":{},"171":{},"178":{},"181":{},"211":{},"220":{},"221":{},"251":{},"269":{},"271":{},"275":{},"284":{},"292":{},"294":{},"323":{},"344":{},"347":{},"348":{},"355":{},"361":{},"363":{},"366":{},"447":{},"448":{},"499":{},"512":{},"514":{},"525":{},"533":{}},"component":{}}],["comma",{"_index":589,"title":{"38-7":{},"152-5":{}},"name":{},"text":{"5":{},"7":{},"11":{},"25":{},"38":{},"41":{},"50":{},"94":{},"152":{},"154":{},"165":{},"166":{},"167":{},"168":{},"196":{},"197":{},"205":{},"220":{},"234":{},"243":{},"247":{},"258":{},"262":{},"275":{},"276":{},"277":{},"279":{},"291":{},"292":{},"315":{},"320":{},"335":{},"338":{},"346":{},"349":{},"361":{},"367":{},"400":{},"424":{},"425":{},"472":{},"476":{},"514":{},"544":{}},"component":{}}],["command",{"_index":10,"title":{"152":{},"326":{},"436":{},"41-3":{},"41-10":{},"41-11":{},"41-12":{},"90-7":{},"90-8":{},"150-1":{},"152-8":{},"389-6":{},"389-12":{}},"name":{},"text":{"1":{},"5":{},"7":{},"19":{},"25":{},"34":{},"38":{},"39":{},"40":{},"41":{},"44":{},"46":{},"47":{},"78":{},"81":{},"86":{},"90":{},"94":{},"97":{},"98":{},"103":{},"130":{},"150":{},"151":{},"152":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"167":{},"168":{},"228":{},"258":{},"264":{},"270":{},"289":{},"298":{},"311":{},"315":{},"326":{},"346":{},"365":{},"367":{},"389":{},"411":{},"412":{},"414":{},"415":{},"416":{},"418":{},"426":{},"431":{},"432":{},"433":{},"436":{},"475":{},"480":{},"489":{},"498":{},"514":{},"518":{},"519":{},"527":{},"533":{},"543":{}},"component":{}}],["comment",{"_index":2782,"title":{},"name":{},"text":{"76":{},"235":{},"240":{},"244":{},"247":{},"250":{},"280":{},"288":{},"314":{},"316":{},"379":{},"381":{},"466":{},"492":{}},"component":{}}],["commerc",{"_index":4476,"title":{},"name":{},"text":{"241":{}},"component":{}}],["commit",{"_index":1125,"title":{"533-12":{},"538-5":{}},"name":{},"text":{"9":{},"23":{},"30":{},"53":{},"54":{},"169":{},"173":{},"196":{},"206":{},"208":{},"216":{},"225":{},"227":{},"239":{},"256":{},"268":{},"275":{},"303":{},"329":{},"330":{},"332":{},"333":{},"334":{},"360":{},"364":{},"371":{},"390":{},"395":{},"493":{},"510":{},"528":{},"533":{},"537":{},"538":{},"540":{}},"component":{}}],["commod",{"_index":6323,"title":{},"name":{},"text":{"429":{}},"component":{}}],["common",{"_index":955,"title":{"227-4":{}},"name":{},"text":{"8":{},"20":{},"30":{},"93":{},"117":{},"179":{},"205":{},"247":{},"248":{},"262":{},"273":{},"275":{},"276":{},"287":{},"316":{},"320":{},"342":{},"400":{},"481":{},"493":{},"514":{},"521":{},"542":{}},"component":{}}],["commonli",{"_index":1279,"title":{},"name":{},"text":{"15":{},"16":{},"247":{},"367":{},"428":{}},"component":{}}],["commun",{"_index":1166,"title":{"10":{}},"name":{},"text":{"10":{},"56":{},"167":{},"168":{},"464":{},"491":{},"520":{},"521":{},"534":{}},"component":{}}],["community\",\"ids\":[\"beamdataflowpipelineengine\"],\"plugintype\":\"org.apache.hop.pipeline.engine.pipelineengineplugintype\",\"imagefile\":null,\"separateclassloaderneeded\":false,\"classloadergroup\":null,\"nativeplugin\":fals",{"_index":1755,"title":{},"name":{},"text":{"37":{}},"component":{}}],["compani",{"_index":3026,"title":{},"name":{},"text":{"88":{},"93":{},"152":{},"241":{}},"component":{}}],["company(id",{"_index":6535,"title":{},"name":{},"text":{"475":{}},"component":{}}],["compar",{"_index":2341,"title":{"361":{},"456":{},"460":{}},"name":{},"text":{"52":{},"60":{},"71":{},"78":{},"81":{},"83":{},"86":{},"163":{},"176":{},"222":{},"227":{},"247":{},"248":{},"268":{},"285":{},"290":{},"316":{},"360":{},"361":{},"369":{},"370":{},"371":{},"454":{},"456":{},"460":{},"490":{},"501":{}},"component":{}}],["comparis",{"_index":6268,"title":{},"name":{},"text":{"382":{}},"component":{}}],["comparison",{"_index":4278,"title":{"518":{},"247-16":{}},"name":{},"text":{"222":{},"227":{},"246":{},"247":{},"248":{},"285":{},"290":{},"334":{},"355":{},"359":{},"361":{},"521":{}},"component":{}}],["compat",{"_index":835,"title":{"274-9":{}},"name":{},"text":{"7":{},"113":{},"160":{},"194":{},"274":{},"315":{},"377":{},"431":{},"520":{},"530":{},"535":{},"542":{}},"component":{}}],["compil",{"_index":5475,"title":{},"name":{},"text":{"270":{},"372":{},"533":{},"534":{}},"component":{}}],["complain",{"_index":2336,"title":{},"name":{},"text":{"52":{}},"component":{}}],["complement",{"_index":1609,"title":{},"name":{},"text":{"27":{}},"component":{}}],["complet",{"_index":367,"title":{},"name":{},"text":{"2":{},"7":{},"29":{},"38":{},"41":{},"50":{},"57":{},"85":{},"95":{},"97":{},"105":{},"160":{},"165":{},"166":{},"167":{},"168":{},"178":{},"203":{},"208":{},"217":{},"227":{},"234":{},"235":{},"251":{},"258":{},"266":{},"273":{},"275":{},"287":{},"312":{},"344":{},"347":{},"352":{},"364":{},"365":{},"366":{},"367":{},"372":{},"378":{},"381":{},"382":{},"447":{},"457":{},"500":{},"514":{},"519":{},"533":{},"544":{}},"component":{}}],["complex",{"_index":1425,"title":{"247-93":{},"433-9":{}},"name":{},"text":{"20":{},"52":{},"56":{},"151":{},"152":{},"182":{},"248":{},"272":{},"316":{},"366":{},"381":{},"382":{},"384":{},"389":{},"433":{}},"component":{}}],["complianc",{"_index":6739,"title":{},"name":{},"text":{"518":{},"533":{}},"component":{}}],["compliant",{"_index":6387,"title":{},"name":{},"text":{"433":{}},"component":{}}],["compon",{"_index":1254,"title":{"83-2":{}},"name":{},"text":{"13":{},"167":{},"366":{},"527":{}},"component":{}}],["compos",{"_index":2278,"title":{"56-2":{},"527-4":{}},"name":{},"text":{"50":{},"56":{},"305":{},"503":{},"527":{}},"component":{}}],["compose.yaml",{"_index":2480,"title":{},"name":{},"text":{"56":{}},"component":{}}],["composit",{"_index":6926,"title":{},"name":{},"text":{"529":{}},"component":{}}],["compound",{"_index":5693,"title":{},"name":{},"text":{"292":{}},"component":{}}],["compress",{"_index":980,"title":{},"name":{},"text":{"8":{},"153":{},"185":{},"203":{},"305":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"347":{},"366":{},"367":{},"488":{},"509":{}},"component":{}}],["compressionplugintyp",{"_index":6816,"title":{},"name":{},"text":{"525":{}},"component":{}}],["compris",{"_index":3130,"title":{},"name":{},"text":{"98":{}},"component":{}}],["compromis",{"_index":6321,"title":{},"name":{},"text":{"429":{}},"component":{}}],["comput",{"_index":3798,"title":{"247-7":{}},"name":{},"text":{"165":{},"205":{},"247":{},"428":{},"533":{}},"component":{}}],["compute.googleapis.com/projects//zones//disktypes/pd",{"_index":3813,"title":{},"name":{},"text":{"165":{}},"component":{}}],["computer’",{"_index":5155,"title":{},"name":{},"text":{"247":{}},"component":{}}],["concat",{"_index":2883,"title":{"217":{}},"name":{},"text":{"81":{},"86":{},"217":{},"247":{}},"component":{}}],["concaten",{"_index":4229,"title":{"247-149":{}},"name":{},"text":{"217":{},"223":{},"247":{},"262":{},"326":{},"373":{},"374":{}},"component":{}}],["concatenate(\"a\";\"b",{"_index":5164,"title":{},"name":{},"text":{"247":{}},"component":{}}],["concatenate(\"ab\";\"cd\";\"ef",{"_index":5165,"title":{},"name":{},"text":{"247":{}},"component":{}}],["concatenate([field1",{"_index":4738,"title":{},"name":{},"text":{"247":{}},"component":{}}],["concatenate(left,right",{"_index":5141,"title":{},"name":{},"text":{"247":{}},"component":{}}],["concatfield",{"_index":4228,"title":{},"name":{"217":{}},"text":{},"component":{}}],["concept",{"_index":7,"title":{"1":{},"13":{},"13-1":{},"78-2":{},"91-1":{},"103-1":{},"518-1":{},"519-2":{}},"name":{"1":{},"13":{}},"text":{"1":{},"2":{},"13":{},"15":{},"16":{},"21":{},"57":{},"82":{},"83":{},"246":{},"521":{},"522":{}},"component":{}}],["conceptu",{"_index":132,"title":{},"name":{},"text":{"1":{},"13":{},"402":{},"408":{},"519":{}},"component":{}}],["concern",{"_index":747,"title":{"528-7":{}},"name":{},"text":{"7":{},"65":{},"227":{},"535":{}},"component":{}}],["concis",{"_index":2724,"title":{},"name":{},"text":{"75":{},"247":{}},"component":{}}],["conclus",{"_index":2243,"title":{"50-9":{}},"name":{},"text":{},"component":{}}],["concret",{"_index":2274,"title":{},"name":{},"text":{"50":{}},"component":{}}],["concurr",{"_index":4081,"title":{},"name":{},"text":{"204":{}},"component":{}}],["condit",{"_index":1533,"title":{"246-8":{}},"name":{},"text":{"24":{},"55":{},"84":{},"85":{},"222":{},"227":{},"246":{},"247":{},"269":{},"270":{},"272":{},"291":{},"292":{},"331":{},"442":{},"448":{},"450":{},"455":{},"461":{},"462":{},"464":{},"468":{},"477":{},"478":{},"483":{},"490":{},"499":{},"501":{},"506":{},"520":{},"533":{}},"component":{}}],["condition",{"_index":1299,"title":{},"name":{},"text":{"16":{},"78":{}},"component":{}}],["condition(",{"_index":5517,"title":{},"name":{},"text":{"272":{}},"component":{}}],["conf",{"_index":9,"title":{"152":{},"19-2":{}},"name":{"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"411":{}},"text":{"1":{},"19":{},"25":{},"38":{},"49":{},"56":{},"75":{},"90":{},"97":{},"98":{},"99":{},"100":{},"101":{},"150":{},"152":{},"389":{},"411":{},"418":{},"513":{},"514":{}},"component":{}}],["conf.bat",{"_index":1318,"title":{},"name":{},"text":{"19":{},"90":{},"98":{},"150":{},"152":{}},"component":{}}],["conf.json",{"_index":2209,"title":{},"name":{},"text":{"46":{},"389":{}},"component":{}}],["conf.sh",{"_index":1337,"title":{},"name":{},"text":{"19":{},"37":{},"90":{},"98":{},"150":{},"152":{},"162":{},"389":{},"540":{}},"component":{}}],["conf.yml",{"_index":3871,"title":{},"name":{},"text":{"167":{}},"component":{}}],["conf/flink",{"_index":3870,"title":{},"name":{},"text":{"167":{}},"component":{}}],["confidenti",{"_index":5600,"title":{},"name":{},"text":{"280":{}},"component":{}}],["config",{"_index":537,"title":{"74":{}},"name":{"69":{},"74":{},"422":{}},"text":{"5":{},"7":{},"22":{},"25":{},"46":{},"56":{},"90":{},"94":{},"97":{},"150":{},"152":{},"388":{},"389":{},"422":{},"430":{},"514":{},"518":{},"519":{}},"component":{}}],["config.json",{"_index":746,"title":{},"name":{},"text":{"7":{},"19":{},"27":{},"56":{},"90":{},"91":{},"92":{},"97":{},"98":{},"99":{},"100":{},"101":{},"150":{},"152":{},"160":{},"161":{},"167":{},"168":{},"389":{},"514":{},"518":{},"528":{},"541":{},"543":{},"544":{}},"component":{}}],["config.sh",{"_index":763,"title":{},"name":{},"text":{"7":{},"163":{},"167":{},"168":{}},"component":{}}],["config.xml",{"_index":1915,"title":{},"name":{},"text":{"41":{}},"component":{}}],["config/env",{"_index":2546,"title":{},"name":{},"text":{"56":{}},"component":{}}],["config/hop",{"_index":1608,"title":{},"name":{},"text":{"27":{},"41":{},"56":{},"389":{},"518":{}},"component":{}}],["config/projects/default",{"_index":1332,"title":{},"name":{},"text":{"19":{},"90":{},"389":{}},"component":{}}],["config/projects/sampl",{"_index":1335,"title":{},"name":{},"text":{"19":{},"90":{},"95":{},"151":{},"164":{},"389":{},"514":{},"531":{}},"component":{}}],["config/projects/samples//transforms/switch",{"_index":1382,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["config/projects/samples/beam/output",{"_index":3379,"title":{},"name":{},"text":{"151":{},"389":{}},"component":{}}],["config/projects/samples/beam/pipelines/complex.hpl",{"_index":3356,"title":{},"name":{},"text":{"151":{},"152":{}},"component":{}}],["config/projects/samples/metadata",{"_index":3375,"title":{},"name":{},"text":{"151":{},"389":{}},"component":{}}],["config/projects/samples/metadata/pipelin",{"_index":3376,"title":{},"name":{},"text":{"151":{},"389":{},"531":{}},"component":{}}],["config/projects/samples/project",{"_index":3042,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["config/projects/samples/transforms/add",{"_index":6971,"title":{},"name":{},"text":{"531":{}},"component":{}}],["config/projects/samples/transforms/switch",{"_index":1361,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["configfilenam",{"_index":3039,"title":{},"name":{},"text":{"90":{},"389":{},"543":{}},"component":{}}],["configur",{"_index":14,"title":{"5":{},"27":{},"69":{},"152":{},"171":{},"512":{},"2-4":{},"5-10":{},"5-14":{},"7-13":{},"27-3":{},"37-3":{},"41-4":{},"41-5":{},"43-5":{},"50-5":{},"50-6":{},"53-3":{},"54-3":{},"90-1":{},"90-2":{},"90-3":{},"90-6":{},"90-7":{},"90-8":{},"90-12":{},"97-2":{},"98-2":{},"99-2":{},"100-2":{},"101-2":{},"150-1":{},"150-5":{},"152-7":{},"152-8":{},"152-12":{},"152-14":{},"157-2":{},"160-3":{},"165-2":{},"171-2":{},"259-3":{},"389-5":{},"389-6":{},"389-11":{},"389-12":{},"389-17":{},"473-2":{},"475-3":{},"512-2":{},"518-2":{},"528-3":{},"541-11":{},"543-3":{}},"name":{"5":{},"27":{},"171":{},"512":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"24":{},"25":{},"26":{},"27":{},"29":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"61":{},"64":{},"67":{},"69":{},"73":{},"74":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"88":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"105":{},"114":{},"130":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"178":{},"196":{},"197":{},"199":{},"206":{},"220":{},"231":{},"235":{},"261":{},"273":{},"275":{},"276":{},"277":{},"278":{},"287":{},"308":{},"309":{},"310":{},"322":{},"325":{},"338":{},"345":{},"353":{},"364":{},"367":{},"368":{},"379":{},"388":{},"389":{},"398":{},"399":{},"401":{},"402":{},"404":{},"406":{},"408":{},"411":{},"415":{},"418":{},"422":{},"433":{},"462":{},"481":{},"483":{},"493":{},"503":{},"510":{},"511":{},"512":{},"513":{},"514":{},"518":{},"519":{},"520":{},"528":{},"531":{},"533":{},"534":{},"541":{},"543":{},"544":{}},"component":{}}],["configuration\",\"pipelin",{"_index":1732,"title":{},"name":{},"text":{"37":{}},"component":{}}],["configuration\",\"unit",{"_index":1728,"title":{},"name":{},"text":{"37":{}},"component":{}}],["configuration/direct.json",{"_index":3377,"title":{},"name":{},"text":{"151":{},"389":{},"531":{}},"component":{}}],["configuration/flink",{"_index":1747,"title":{},"name":{},"text":{"37":{}},"component":{}}],["configuration/loc",{"_index":1741,"title":{},"name":{},"text":{"37":{}},"component":{}}],["configuration’",{"_index":3504,"title":{},"name":{},"text":{"158":{}},"component":{}}],["confirm",{"_index":614,"title":{},"name":{},"text":{"6":{},"23":{},"27":{},"29":{},"83":{},"356":{}},"component":{}}],["conflict",{"_index":1233,"title":{"117-1":{}},"name":{},"text":{"11":{},"117":{}},"component":{}}],["confluent",{"_index":4033,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{},"427":{}},"component":{}}],["conform",{"_index":4339,"title":{},"name":{},"text":{"231":{}},"component":{}}],["confus",{"_index":3100,"title":{},"name":{},"text":{"94":{},"426":{}},"component":{}}],["conjunct",{"_index":652,"title":{},"name":{},"text":{"7":{},"316":{},"318":{},"360":{}},"component":{}}],["connect",{"_index":142,"title":{"65":{},"71":{},"72":{},"153":{},"154":{},"438":{},"473":{},"11-1":{},"15-2":{},"16-2":{},"41-13":{},"130-2":{},"130-3":{},"130-4":{},"133-1":{},"154-7":{},"154-8":{},"154-10":{},"186-3":{},"259-5":{},"327-1":{},"330-5":{},"331-5":{},"332-4":{},"333-4":{},"334-4":{},"532-10":{}},"name":{"65":{},"71":{},"72":{},"153":{},"154":{},"327":{}},"text":{"1":{},"2":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"15":{},"16":{},"19":{},"24":{},"39":{},"41":{},"46":{},"50":{},"53":{},"54":{},"64":{},"65":{},"70":{},"71":{},"72":{},"77":{},"78":{},"83":{},"84":{},"88":{},"91":{},"92":{},"93":{},"94":{},"103":{},"105":{},"106":{},"107":{},"109":{},"129":{},"130":{},"131":{},"133":{},"153":{},"154":{},"155":{},"156":{},"162":{},"165":{},"168":{},"169":{},"173":{},"177":{},"186":{},"187":{},"206":{},"207":{},"208":{},"211":{},"215":{},"216":{},"221":{},"222":{},"225":{},"227":{},"228":{},"230":{},"232":{},"236":{},"238":{},"239":{},"246":{},"257":{},"260":{},"261":{},"263":{},"264":{},"268":{},"271":{},"273":{},"276":{},"277":{},"278":{},"280":{},"286":{},"289":{},"290":{},"291":{},"292":{},"297":{},"303":{},"311":{},"315":{},"319":{},"322":{},"326":{},"327":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"346":{},"351":{},"352":{},"356":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"371":{},"376":{},"381":{},"388":{},"395":{},"401":{},"402":{},"406":{},"408":{},"414":{},"429":{},"431":{},"432":{},"433":{},"437":{},"438":{},"440":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"470":{},"471":{},"472":{},"473":{},"474":{},"475":{},"476":{},"485":{},"487":{},"488":{},"490":{},"491":{},"492":{},"493":{},"496":{},"497":{},"498":{},"501":{},"502":{},"510":{},"520":{}},"component":{}}],["connect_data=(service_name=service_nam",{"_index":3319,"title":{},"name":{},"text":{"133":{}},"component":{}}],["connection\",\"fil",{"_index":1730,"title":{},"name":{},"text":{"37":{}},"component":{}}],["connection\",\"pipelin",{"_index":1735,"title":{},"name":{},"text":{"37":{}},"component":{}}],["connection\",\"workflow",{"_index":1727,"title":{},"name":{},"text":{"37":{}},"component":{}}],["connection.json",{"_index":2396,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["connector",{"_index":5780,"title":{},"name":{},"text":{"309":{}},"component":{}}],["connnections.csv",{"_index":6765,"title":{},"name":{},"text":{"520":{}},"component":{}}],["consecut",{"_index":5410,"title":{},"name":{},"text":{"262":{},"298":{}},"component":{}}],["consequ",{"_index":3481,"title":{},"name":{},"text":{"157":{}},"component":{}}],["consid",{"_index":561,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"40":{},"52":{},"54":{},"57":{},"81":{},"82":{},"83":{},"162":{},"163":{},"214":{},"222":{},"247":{},"250":{},"251":{},"258":{},"273":{},"294":{},"295":{},"297":{},"298":{},"299":{},"304":{},"309":{},"345":{},"366":{},"378":{},"390":{},"391":{},"393":{},"394":{},"395":{},"396":{},"533":{}},"component":{}}],["consider",{"_index":3790,"title":{"165-4":{},"227-9":{},"246-8":{},"273-10":{}},"name":{},"text":{"220":{}},"component":{}}],["consist",{"_index":123,"title":{},"name":{},"text":{"1":{},"13":{},"15":{},"56":{},"78":{},"82":{},"103":{},"105":{},"208":{},"247":{},"248":{},"275":{},"316":{},"354":{},"378":{},"382":{},"404":{},"410":{},"519":{},"527":{},"534":{}},"component":{}}],["consol",{"_index":809,"title":{},"name":{},"text":{"7":{},"38":{},"41":{},"56":{},"97":{},"100":{},"101":{},"158":{},"165":{},"260":{},"261":{},"513":{}},"component":{}}],["consolid",{"_index":1356,"title":{},"name":{},"text":{"19":{},"50":{},"151":{},"152":{}},"component":{}}],["conson",{"_index":5340,"title":{},"name":{},"text":{"248":{}},"component":{}}],["const",{"_index":6795,"title":{},"name":{},"text":{"525":{}},"component":{}}],["constant",{"_index":2400,"title":{"175":{},"342":{}},"name":{},"text":{"53":{},"54":{},"81":{},"86":{},"175":{},"205":{},"246":{},"247":{},"269":{},"270":{},"287":{},"322":{},"342":{},"466":{}},"component":{}}],["constantli",{"_index":4845,"title":{},"name":{},"text":{"247":{}},"component":{}}],["constrain",{"_index":4251,"title":{},"name":{},"text":{"220":{},"360":{}},"component":{}}],["constraint",{"_index":4741,"title":{"474":{}},"name":{"474":{}},"text":{"247":{},"297":{},"299":{},"431":{},"432":{},"433":{},"470":{},"474":{},"493":{}},"component":{}}],["construct",{"_index":4628,"title":{"544-8":{},"544-15":{}},"name":{},"text":{"246":{},"247":{},"270":{},"292":{},"309":{},"366":{},"372":{},"433":{},"544":{}},"component":{}}],["constructor",{"_index":7213,"title":{},"name":{},"text":{"542":{}},"component":{}}],["consult",{"_index":2659,"title":{},"name":{},"text":{"62":{},"235":{}},"component":{}}],["consum",{"_index":1746,"title":{"196":{},"198":{},"275":{}},"name":{},"text":{"37":{},"55":{},"56":{},"81":{},"86":{},"182":{},"186":{},"196":{},"198":{},"243":{},"247":{},"267":{},"275":{},"276":{},"319":{}},"component":{}}],["consumpt",{"_index":5552,"title":{},"name":{},"text":{"275":{},"381":{}},"component":{}}],["contact",{"_index":5591,"title":{},"name":{},"text":{"280":{},"341":{},"466":{},"536":{}},"component":{}}],["contain",{"_index":49,"title":{"514":{},"50-2":{},"50-7":{},"514-3":{},"514-5":{},"514-6":{},"541-10":{}},"name":{"514":{}},"text":{"1":{},"4":{},"5":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"18":{},"19":{},"20":{},"22":{},"24":{},"25":{},"27":{},"29":{},"30":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"64":{},"68":{},"75":{},"76":{},"77":{},"78":{},"79":{},"81":{},"83":{},"85":{},"86":{},"87":{},"88":{},"90":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"117":{},"152":{},"158":{},"162":{},"164":{},"167":{},"168":{},"170":{},"171":{},"174":{},"178":{},"184":{},"186":{},"187":{},"192":{},"193":{},"198":{},"199":{},"201":{},"202":{},"209":{},"210":{},"213":{},"215":{},"219":{},"220":{},"221":{},"222":{},"223":{},"226":{},"227":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"238":{},"239":{},"242":{},"243":{},"245":{},"247":{},"248":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"263":{},"264":{},"269":{},"270":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"285":{},"287":{},"288":{},"289":{},"291":{},"294":{},"295":{},"297":{},"298":{},"300":{},"303":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"316":{},"319":{},"322":{},"324":{},"325":{},"326":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"342":{},"346":{},"349":{},"350":{},"355":{},"359":{},"361":{},"362":{},"364":{},"366":{},"367":{},"368":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"378":{},"379":{},"382":{},"384":{},"385":{},"386":{},"387":{},"388":{},"389":{},"402":{},"408":{},"413":{},"418":{},"425":{},"431":{},"433":{},"451":{},"453":{},"457":{},"458":{},"461":{},"463":{},"465":{},"466":{},"483":{},"490":{},"503":{},"506":{},"509":{},"511":{},"512":{},"513":{},"514":{},"517":{},"518":{},"520":{},"525":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"536":{},"537":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["container’",{"_index":6676,"title":{},"name":{},"text":{"514":{}},"component":{}}],["contan",{"_index":5611,"title":{},"name":{},"text":{"285":{}},"component":{}}],["content",{"_index":515,"title":{"279":{},"178-4":{},"234-6":{},"235-5":{},"250-5":{},"252-5":{},"273-7":{},"279-5":{},"313-5":{},"314-5":{},"316-9":{},"331-7":{},"352-5":{},"366-6":{},"367-5":{},"383-5":{},"386-5":{},"531-4":{}},"name":{},"text":{"5":{},"7":{},"8":{},"37":{},"40":{},"42":{},"43":{},"50":{},"55":{},"58":{},"81":{},"86":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"154":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"178":{},"180":{},"205":{},"227":{},"233":{},"234":{},"235":{},"247":{},"250":{},"264":{},"273":{},"277":{},"279":{},"280":{},"309":{},"315":{},"316":{},"319":{},"331":{},"336":{},"340":{},"366":{},"367":{},"377":{},"383":{},"384":{},"389":{},"422":{},"433":{},"441":{},"448":{},"453":{},"456":{},"460":{},"464":{},"466":{},"468":{},"490":{},"506":{},"508":{},"529":{},"531":{},"533":{},"536":{},"537":{},"538":{},"544":{}},"component":{}}],["context",{"_index":1272,"title":{"24":{}},"name":{},"text":{"15":{},"27":{},"50":{},"52":{},"76":{},"79":{},"82":{},"83":{},"87":{},"130":{},"161":{},"164":{},"167":{},"168":{},"247":{},"270":{},"337":{},"532":{}},"component":{}}],["contexthandlercollection@74120029{stop",{"_index":1978,"title":{},"name":{},"text":{"41":{}},"component":{}}],["contextu",{"_index":1505,"title":{},"name":{},"text":{"24":{}},"component":{}}],["contin",{"_index":1547,"title":{},"name":{},"text":{"25":{}},"component":{}}],["continu",{"_index":355,"title":{},"name":{},"text":{"2":{},"9":{},"42":{},"52":{},"55":{},"57":{},"68":{},"78":{},"91":{},"93":{},"105":{},"163":{},"165":{},"167":{},"202":{},"258":{},"270":{},"273":{},"275":{},"346":{},"372":{},"376":{},"389":{},"390":{},"483":{},"494":{},"500":{},"501":{}},"component":{}}],["continue_pipelin",{"_index":5470,"title":{},"name":{},"text":{"270":{},"337":{}},"component":{}}],["contraint",{"_index":5304,"title":{},"name":{},"text":{"247":{}},"component":{}}],["contrari",{"_index":2353,"title":{},"name":{},"text":{"52":{},"159":{},"250":{}},"component":{}}],["contrast",{"_index":2966,"title":{},"name":{},"text":{"84":{},"381":{}},"component":{}}],["contribut",{"_index":411,"title":{},"name":{},"text":{"4":{},"19":{},"27":{},"30":{},"48":{},"527":{},"530":{},"531":{},"546":{}},"component":{}}],["contributor",{"_index":6860,"title":{},"name":{},"text":{"527":{},"531":{},"533":{},"546":{}},"component":{}}],["control",{"_index":53,"title":{"365-4":{}},"name":{"420":{}},"text":{"1":{},"2":{},"9":{},"19":{},"23":{},"26":{},"27":{},"30":{},"54":{},"90":{},"91":{},"158":{},"164":{},"270":{},"271":{},"285":{},"291":{},"292":{},"298":{},"303":{},"315":{},"365":{},"389":{},"390":{},"413":{},"418":{},"461":{},"463":{},"481":{},"529":{}},"component":{}}],["conveni",{"_index":1035,"title":{},"name":{},"text":{"8":{},"41":{},"50":{},"56":{},"160":{},"161":{},"164":{},"271":{},"275":{},"276":{},"466":{},"530":{}},"component":{}}],["convent",{"_index":1119,"title":{"536-1":{}},"name":{"395":{}},"text":{"9":{},"303":{},"395":{},"527":{},"536":{}},"component":{}}],["converg",{"_index":4099,"title":{},"name":{},"text":{"205":{}},"component":{}}],["convers",{"_index":173,"title":{},"name":{},"text":{"1":{},"7":{},"19":{},"52":{},"205":{},"220":{},"227":{},"231":{},"234":{},"247":{},"250":{},"289":{},"313":{},"324":{},"325":{},"337":{},"338":{},"342":{},"359":{},"363":{},"374":{},"375":{},"386":{},"388":{},"405":{},"414":{},"450":{}},"component":{}}],["convert",{"_index":837,"title":{},"name":{},"text":{"7":{},"19":{},"43":{},"46":{},"77":{},"133":{},"175":{},"178":{},"182":{},"205":{},"214":{},"217":{},"220":{},"227":{},"231":{},"246":{},"247":{},"250":{},"258":{},"270":{},"273":{},"287":{},"289":{},"294":{},"304":{},"313":{},"316":{},"320":{},"323":{},"325":{},"331":{},"336":{},"338":{},"344":{},"346":{},"358":{},"367":{},"372":{},"375":{},"383":{},"386":{},"388":{},"414":{},"433":{},"450":{},"481":{},"487":{},"488":{},"520":{}},"component":{}}],["cooki",{"_index":1016,"title":{},"name":{},"text":{"8":{}},"component":{}}],["coordin",{"_index":3018,"title":{},"name":{},"text":{"87":{}},"component":{}}],["copi",{"_index":27,"title":{"218":{},"441":{},"442":{},"55-1":{},"55-7":{},"543-4":{}},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"11":{},"19":{},"24":{},"27":{},"29":{},"36":{},"41":{},"42":{},"44":{},"52":{},"55":{},"66":{},"76":{},"78":{},"81":{},"82":{},"83":{},"85":{},"86":{},"94":{},"103":{},"130":{},"156":{},"161":{},"162":{},"163":{},"165":{},"204":{},"205":{},"212":{},"216":{},"218":{},"220":{},"222":{},"223":{},"235":{},"245":{},"246":{},"247":{},"253":{},"254":{},"256":{},"270":{},"273":{},"280":{},"289":{},"305":{},"308":{},"309":{},"310":{},"311":{},"312":{},"314":{},"315":{},"343":{},"346":{},"347":{},"352":{},"367":{},"368":{},"376":{},"378":{},"383":{},"388":{},"396":{},"398":{},"412":{},"418":{},"422":{},"433":{},"435":{},"439":{},"441":{},"442":{},"447":{},"448":{},"450":{},"453":{},"462":{},"465":{},"466":{},"468":{},"477":{},"478":{},"481":{},"487":{},"488":{},"489":{},"490":{},"503":{},"506":{},"514":{},"520":{},"530":{},"531":{},"533":{},"534":{},"538":{},"540":{},"543":{},"544":{}},"component":{}}],["copy/distribut",{"_index":1529,"title":{},"name":{},"text":{"24":{}},"component":{}}],["copy/past",{"_index":1460,"title":{},"name":{},"text":{"22":{},"223":{}},"component":{}}],["copyfil",{"_index":6402,"title":{},"name":{"441":{}},"text":{},"component":{}}],["copymoveresultfilenam",{"_index":6403,"title":{},"name":{"442":{}},"text":{},"component":{}}],["copynr",{"_index":2161,"title":{},"name":{},"text":{"42":{},"204":{},"368":{}},"component":{}}],["copyright",{"_index":7016,"title":{"533-7":{},"535-2":{}},"name":{},"text":{"533":{}},"component":{}}],["copyrowstoresult",{"_index":4235,"title":{},"name":{"218":{}},"text":{},"component":{}}],["core",{"_index":295,"title":{"13-1":{},"525-1":{}},"name":{},"text":{"2":{},"13":{},"20":{},"21":{},"27":{},"81":{},"82":{},"84":{},"105":{},"117":{},"165":{},"166":{},"167":{},"168":{},"337":{},"341":{},"525":{},"530":{},"532":{},"534":{},"541":{}},"component":{}}],["core/src/resourc",{"_index":6947,"title":{},"name":{},"text":{"530":{}},"component":{}}],["corner",{"_index":1175,"title":{},"name":{},"text":{"10":{},"15":{},"23":{},"24":{},"27":{},"56":{},"85":{},"104":{},"158":{},"309":{},"378":{}},"component":{}}],["cornerston",{"_index":2665,"title":{},"name":{},"text":{"64":{},"86":{}},"component":{}}],["corpor",{"_index":1124,"title":{},"name":{},"text":{"9":{},"395":{},"465":{}},"component":{}}],["correct",{"_index":1584,"title":{},"name":{},"text":{"25":{},"52":{},"56":{},"82":{},"130":{},"131":{},"154":{},"161":{},"163":{},"222":{},"223":{},"227":{},"247":{},"268":{},"270":{},"289":{},"338":{},"344":{},"360":{},"366":{},"371":{},"381":{},"527":{},"531":{},"534":{},"537":{},"538":{},"540":{},"541":{},"542":{},"544":{},"546":{}},"component":{}}],["correctli",{"_index":342,"title":{"538-4":{}},"name":{},"text":{"2":{},"41":{},"91":{},"97":{},"98":{},"99":{},"100":{},"101":{},"160":{},"170":{},"220":{},"243":{},"247":{},"262":{},"347":{},"361":{},"389":{},"431":{},"511":{}},"component":{}}],["correspond",{"_index":523,"title":{},"name":{},"text":{"5":{},"14":{},"35":{},"38":{},"43":{},"52":{},"83":{},"92":{},"225":{},"247":{},"264":{},"273":{},"274":{},"279":{},"303":{},"316":{},"331":{},"366":{},"372":{},"451":{},"489":{},"532":{},"542":{}},"component":{}}],["cosh",{"_index":4691,"title":{"247-95":{}},"name":{},"text":{},"component":{}}],["cost",{"_index":187,"title":{},"name":{},"text":{"1":{},"222":{},"355":{},"405":{}},"component":{}}],["couldn’t",{"_index":496,"title":{},"name":{},"text":{"5":{},"14":{}},"component":{}}],["count",{"_index":2657,"title":{"252":{},"247-53":{}},"name":{},"text":{"61":{},"68":{},"81":{},"82":{},"83":{},"151":{},"152":{},"228":{},"247":{},"252":{},"262":{},"275":{},"283":{},"288":{},"320":{},"346":{},"366":{},"381":{},"389":{},"454":{},"501":{}},"component":{}}],["count=10",{"_index":5955,"title":{},"name":{},"text":{"337":{}},"component":{}}],["counta",{"_index":4663,"title":{"247-54":{}},"name":{},"text":{},"component":{}}],["countblank",{"_index":4664,"title":{"247-55":{}},"name":{},"text":{},"component":{}}],["counter",{"_index":2413,"title":{},"name":{},"text":{"55":{},"177":{},"369":{},"380":{},"483":{},"505":{}},"component":{}}],["counter.0",{"_index":2421,"title":{},"name":{},"text":{"55":{}},"component":{}}],["counter.hpl",{"_index":2425,"title":{},"name":{},"text":{"55":{}},"component":{}}],["countperst",{"_index":3358,"title":{},"name":{},"text":{"151":{},"152":{},"389":{}},"component":{}}],["countri",{"_index":1107,"title":{},"name":{},"text":{"9":{},"354":{},"395":{},"528":{}},"component":{}}],["countteam",{"_index":2320,"title":{},"name":{},"text":{"50":{}},"component":{}}],["countteams.hpl",{"_index":2263,"title":{},"name":{},"text":{"50":{}},"component":{}}],["coupl",{"_index":582,"title":{},"name":{},"text":{"5":{},"18":{},"25":{},"52":{},"56":{},"94":{},"158":{},"160":{},"519":{},"520":{},"543":{}},"component":{}}],["cours",{"_index":4388,"title":{},"name":{},"text":{"235":{},"241":{},"533":{}},"component":{}}],["cousins_birth_d",{"_index":5852,"title":{},"name":{},"text":{"320":{}},"component":{}}],["cousins_first_nam",{"_index":5847,"title":{},"name":{},"text":{"320":{}},"component":{}}],["cousins_incom",{"_index":5854,"title":{},"name":{},"text":{"320":{}},"component":{}}],["cousins_last_nam",{"_index":5850,"title":{},"name":{},"text":{"320":{}},"component":{}}],["cousins_second_nam",{"_index":5849,"title":{},"name":{},"text":{"320":{}},"component":{}}],["cover",{"_index":359,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"13":{},"18":{},"21":{},"26":{},"50":{},"56":{},"528":{},"536":{}},"component":{}}],["cp",{"_index":7128,"title":{},"name":{},"text":{"538":{}},"component":{}}],["cpu",{"_index":186,"title":{},"name":{},"text":{"1":{},"57":{},"82":{},"161":{},"162":{},"169":{},"256":{},"341":{},"355":{},"405":{},"500":{}},"component":{}}],["cpu/cor",{"_index":455,"title":{},"name":{},"text":{"5":{}},"component":{}}],["cpython",{"_index":2986,"title":{},"name":{},"text":{"87":{}},"component":{}}],["cql",{"_index":3426,"title":{"437":{}},"name":{"437":{}},"text":{"153":{},"207":{},"208":{},"429":{},"437":{}},"component":{}}],["cr",{"_index":4154,"title":{},"name":{},"text":{"205":{},"237":{},"238":{},"358":{},"367":{}},"component":{}}],["cr+lf",{"_index":6134,"title":{},"name":{},"text":{"367":{}},"component":{}}],["cr/lf",{"_index":4413,"title":{},"name":{},"text":{"237":{},"450":{}},"component":{}}],["craft",{"_index":280,"title":{},"name":{},"text":{"2":{}},"component":{}}],["crawl",{"_index":6477,"title":{},"name":{},"text":{"461":{}},"component":{}}],["crc",{"_index":4130,"title":{},"name":{},"text":{"205":{}},"component":{}}],["crc32",{"_index":3936,"title":{},"name":{},"text":{"174":{}},"component":{}}],["creart",{"_index":6354,"title":{},"name":{},"text":{"432":{}},"component":{}}],["creat",{"_index":40,"title":{"78":{},"103":{},"443":{},"444":{},"534":{},"538":{},"5-6":{},"5-7":{},"15-1":{},"15-4":{},"16-1":{},"16-4":{},"24-1":{},"53-1":{},"53-2":{},"54-1":{},"54-2":{},"78-3":{},"83-4":{},"83-6":{},"90-9":{},"93-1":{},"93-2":{},"133-1":{},"150-2":{},"152-9":{},"389-7":{},"389-13":{},"492-2":{},"513-5":{},"530-7":{},"538-1":{},"538-6":{},"538-8":{},"538-9":{},"538-13":{},"540-2":{}},"name":{"78":{},"103":{},"538":{}},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"9":{},"11":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"28":{},"30":{},"31":{},"36":{},"41":{},"42":{},"46":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"66":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"88":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"99":{},"102":{},"103":{},"104":{},"105":{},"106":{},"129":{},"130":{},"131":{},"133":{},"150":{},"151":{},"152":{},"153":{},"154":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"171":{},"173":{},"179":{},"181":{},"185":{},"186":{},"189":{},"195":{},"196":{},"198":{},"199":{},"200":{},"205":{},"208":{},"209":{},"212":{},"216":{},"217":{},"218":{},"227":{},"233":{},"235":{},"236":{},"244":{},"245":{},"246":{},"247":{},"257":{},"258":{},"259":{},"261":{},"268":{},"270":{},"274":{},"280":{},"285":{},"287":{},"292":{},"294":{},"297":{},"299":{},"302":{},"303":{},"312":{},"314":{},"316":{},"317":{},"322":{},"324":{},"325":{},"336":{},"338":{},"346":{},"349":{},"351":{},"352":{},"356":{},"357":{},"358":{},"360":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"371":{},"372":{},"380":{},"382":{},"383":{},"387":{},"388":{},"389":{},"394":{},"398":{},"413":{},"418":{},"420":{},"428":{},"429":{},"431":{},"432":{},"433":{},"435":{},"437":{},"441":{},"442":{},"443":{},"444":{},"445":{},"461":{},"464":{},"466":{},"468":{},"470":{},"471":{},"474":{},"475":{},"476":{},"477":{},"478":{},"481":{},"487":{},"488":{},"489":{},"492":{},"493":{},"496":{},"498":{},"499":{},"500":{},"503":{},"504":{},"505":{},"508":{},"509":{},"512":{},"513":{},"514":{},"519":{},"520":{},"526":{},"527":{},"528":{},"529":{},"530":{},"531":{},"533":{},"534":{},"535":{},"537":{},"538":{},"539":{},"540":{},"541":{},"542":{},"543":{},"544":{}},"component":{}}],["create.valu",{"_index":3765,"title":{},"name":{},"text":{"163":{}},"component":{}}],["create/drop",{"_index":5673,"title":{"292-11":{},"292-12":{}},"name":{},"text":{"292":{}},"component":{}}],["createbuttonsforbuttonbar",{"_index":6933,"title":{},"name":{},"text":{"529":{}},"component":{}}],["createcontrol",{"_index":6925,"title":{},"name":{},"text":{"529":{}},"component":{}}],["created/open",{"_index":4357,"title":{},"name":{},"text":{"233":{},"274":{}},"component":{}}],["created_at",{"_index":5662,"title":{},"name":{},"text":{"291":{}},"component":{}}],["createfil",{"_index":6406,"title":{},"name":{"443":{}},"text":{},"component":{}}],["createfold",{"_index":6407,"title":{},"name":{"444":{}},"text":{},"component":{}}],["createobject",{"_index":6939,"title":{},"name":{},"text":{"529":{}},"component":{}}],["createoutputrow",{"_index":6159,"title":{},"name":{},"text":{"372":{}},"component":{}}],["createoutputrow(r",{"_index":6162,"title":{},"name":{},"text":{"372":{}},"component":{}}],["creates/maintain",{"_index":4219,"title":{},"name":{},"text":{"216":{}},"component":{}}],["createtreeitem",{"_index":7240,"title":{},"name":{},"text":{"542":{}},"component":{}}],["creation",{"_index":1444,"title":{"50-4":{},"103-2":{}},"name":{},"text":{"20":{},"50":{},"208":{},"216":{},"227":{},"233":{},"257":{},"274":{},"292":{},"299":{},"433":{}},"component":{}}],["creativ",{"_index":1091,"title":{},"name":{},"text":{"9":{}},"component":{}}],["creator",{"_index":2840,"title":{},"name":{},"text":{"78":{},"103":{}},"component":{}}],["creatornam",{"_index":1081,"title":{},"name":{},"text":{"8":{}},"component":{}}],["creatur",{"_index":4584,"title":{},"name":{},"text":{"241":{}},"component":{}}],["credenti",{"_index":3109,"title":{"97-3":{}},"name":{},"text":{"97":{},"101":{},"130":{},"149":{},"152":{},"158":{},"260":{},"261":{},"315":{},"319":{},"326":{},"466":{}},"component":{}}],["credentials.json",{"_index":3148,"title":{},"name":{},"text":{"101":{}},"component":{}}],["credentialsfil",{"_index":3146,"title":{},"name":{},"text":{"101":{}},"component":{}}],["credit",{"_index":2884,"title":{"219":{}},"name":{},"text":{"81":{},"86":{},"219":{}},"component":{}}],["creditcard",{"_index":4506,"title":{},"name":{},"text":{"241":{}},"component":{}}],["creditcardexpiri",{"_index":4467,"title":{},"name":{},"text":{"241":{}},"component":{}}],["creditcardnumb",{"_index":4465,"title":{},"name":{},"text":{"241":{}},"component":{}}],["creditcardtyp",{"_index":4466,"title":{},"name":{},"text":{"241":{}},"component":{}}],["creditcardvalid",{"_index":4236,"title":{},"name":{"219":{}},"text":{},"component":{}}],["criteria",{"_index":2929,"title":{},"name":{},"text":{"82":{},"234":{},"303":{}},"component":{}}],["criterion",{"_index":2931,"title":{},"name":{},"text":{"82":{}},"component":{}}],["critic",{"_index":5099,"title":{},"name":{},"text":{"247":{},"429":{},"485":{}},"component":{}}],["crlf",{"_index":4157,"title":{},"name":{},"text":{"205":{},"262":{},"358":{}},"component":{}}],["crm",{"_index":1109,"title":{},"name":{},"text":{"9":{},"92":{},"395":{}},"component":{}}],["crm.json",{"_index":3091,"title":{},"name":{},"text":{"92":{}},"component":{}}],["crm_dbname",{"_index":3088,"title":{},"name":{},"text":{"92":{}},"component":{}}],["crm_host",{"_index":3087,"title":{},"name":{},"text":{"92":{}},"component":{}}],["cron",{"_index":2627,"title":{},"name":{},"text":{"56":{}},"component":{}}],["cross",{"_index":2635,"title":{},"name":{},"text":{"57":{},"83":{},"271":{}},"component":{}}],["crucial",{"_index":406,"title":{},"name":{},"text":{"4":{}},"component":{}}],["crud",{"_index":7013,"title":{},"name":{},"text":{"532":{}},"component":{}}],["crypt",{"_index":6489,"title":{},"name":{},"text":{"462":{}},"component":{}}],["crypto",{"_index":4479,"title":{},"name":{},"text":{"241":{}},"component":{}}],["csl3cdp37coh8gq1evts7rpqo6eivcfsu/j66g3jephlu5qs78lzjjyl2ejwmcbebc8zkww3iolv",{"_index":2122,"title":{},"name":{},"text":{"42":{}},"component":{}}],["css",{"_index":7181,"title":{"541-8":{}},"name":{},"text":{"541":{}},"component":{}}],["csv",{"_index":1461,"title":{"220":{},"295":{}},"name":{},"text":{"22":{},"30":{},"52":{},"53":{},"54":{},"68":{},"81":{},"82":{},"83":{},"86":{},"93":{},"97":{},"98":{},"99":{},"100":{},"101":{},"152":{},"170":{},"220":{},"228":{},"243":{},"287":{},"295":{},"298":{},"315":{},"346":{},"366":{},"367":{},"432":{},"433":{},"511":{}},"component":{}}],["csvinput",{"_index":4247,"title":{},"name":{"220":{}},"text":{},"component":{}}],["ctabfolder.setsimpl",{"_index":7180,"title":{"541-6":{}},"name":{},"text":{},"component":{}}],["ctlr",{"_index":2826,"title":{},"name":{},"text":{"78":{},"103":{}},"component":{}}],["ctr",{"_index":1685,"title":{},"name":{},"text":{"36":{}},"component":{}}],["ctrl",{"_index":715,"title":{},"name":{},"text":{"7":{},"19":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"41":{},"94":{},"103":{},"258":{},"420":{},"520":{}},"component":{}}],["cube",{"_index":5969,"title":{},"name":{},"text":{"339":{}},"component":{}}],["cumul",{"_index":5033,"title":{},"name":{},"text":{"247":{},"262":{}},"component":{}}],["curl",{"_index":1720,"title":{},"name":{},"text":{"37":{},"40":{}},"component":{}}],["curren",{"_index":6137,"title":{},"name":{},"text":{"368":{}},"component":{}}],["currenc",{"_index":2379,"title":{},"name":{},"text":{"52":{},"178":{},"217":{},"220":{},"234":{},"247":{},"250":{},"258":{},"273":{},"277":{},"279":{},"313":{},"316":{},"331":{},"338":{},"349":{},"366":{},"367":{},"383":{},"386":{},"400":{}},"component":{}}],["current",{"_index":479,"title":{"163-12":{}},"name":{},"text":{"5":{},"7":{},"22":{},"24":{},"29":{},"34":{},"35":{},"38":{},"52":{},"53":{},"54":{},"55":{},"78":{},"81":{},"83":{},"88":{},"96":{},"130":{},"131":{},"152":{},"160":{},"161":{},"163":{},"170":{},"196":{},"197":{},"198":{},"199":{},"220":{},"222":{},"227":{},"233":{},"234":{},"235":{},"240":{},"247":{},"250":{},"256":{},"264":{},"270":{},"274":{},"277":{},"286":{},"287":{},"309":{},"310":{},"313":{},"315":{},"322":{},"337":{},"344":{},"345":{},"356":{},"360":{},"366":{},"368":{},"378":{},"379":{},"427":{},"441":{},"450":{},"453":{},"481":{},"483":{},"486":{},"488":{},"499":{},"503":{},"511":{},"528":{},"532":{},"533":{},"543":{}},"component":{}}],["cursor",{"_index":5474,"title":{},"name":{},"text":{"270":{}},"component":{}}],["custom",{"_index":141,"title":{"514-7":{},"543-1":{}},"name":{},"text":{"1":{},"5":{},"13":{},"24":{},"27":{},"50":{},"52":{},"75":{},"78":{},"81":{},"83":{},"88":{},"94":{},"103":{},"107":{},"151":{},"152":{},"158":{},"161":{},"165":{},"167":{},"185":{},"201":{},"205":{},"221":{},"222":{},"227":{},"234":{},"263":{},"277":{},"294":{},"305":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"355":{},"363":{},"364":{},"372":{},"373":{},"380":{},"389":{},"401":{},"402":{},"408":{},"455":{},"465":{},"501":{},"505":{},"514":{}},"component":{}}],["custom.dockerfil",{"_index":6705,"title":{},"name":{},"text":{"514":{}},"component":{}}],["customer.customernr",{"_index":4271,"title":{},"name":{},"text":{"221":{}},"component":{}}],["customer.date_of_birth",{"_index":4273,"title":{},"name":{},"text":{"221":{}},"component":{}}],["customer.id",{"_index":5702,"title":{},"name":{},"text":{"294":{}},"component":{}}],["customer.nam",{"_index":5703,"title":{},"name":{},"text":{"294":{}},"component":{}}],["customer_id",{"_index":3970,"title":{},"name":{},"text":{"179":{}},"component":{}}],["customerid",{"_index":5845,"title":{},"name":{},"text":{"320":{}},"component":{}}],["customernr",{"_index":4268,"title":{},"name":{},"text":{"221":{}},"component":{}}],["customers(statecod",{"_index":3175,"title":{},"name":{},"text":{"107":{}},"component":{}}],["customer’",{"_index":2372,"title":{},"name":{},"text":{"52":{}},"component":{}}],["customis",{"_index":2279,"title":{},"name":{},"text":{"50":{}},"component":{}}],["cut",{"_index":1695,"title":{"357":{}},"name":{},"text":{"36":{},"81":{},"86":{},"357":{},"528":{}},"component":{}}],["cut/copy/past",{"_index":1637,"title":{},"name":{},"text":{"27":{}},"component":{}}],["cycl",{"_index":44,"title":{"2-7":{}},"name":{},"text":{"1":{},"2":{},"19":{},"35":{},"413":{},"418":{},"500":{},"501":{},"530":{}},"component":{}}],["cyclic",{"_index":3937,"title":{},"name":{},"text":{"174":{}},"component":{}}],["cypher",{"_index":1213,"title":{"294":{},"475":{},"433-6":{},"433-9":{}},"name":{"294":{}},"text":{"10":{},"32":{},"81":{},"86":{},"154":{},"163":{},"294":{},"297":{},"298":{},"299":{},"431":{},"432":{},"433":{},"475":{}},"component":{}}],["cypherscript",{"_index":6532,"title":{},"name":{"475":{}},"text":{},"component":{}}],["czvf",{"_index":7124,"title":{},"name":{},"text":{"538":{}},"component":{}}],["d",{"_index":1644,"title":{},"name":{},"text":{"28":{},"36":{},"37":{},"167":{},"247":{},"316":{},"321":{},"366":{},"540":{},"543":{}},"component":{}}],["d1fd1c65164a",{"_index":1836,"title":{},"name":{},"text":{"37":{}},"component":{}}],["d9bba3aacac2\">back",{"_index":2170,"title":{},"name":{},"text":{"42":{}},"component":{}}],["da",{"_index":4597,"title":{},"name":{},"text":{"241":{}},"component":{}}],["daemon",{"_index":3539,"title":{},"name":{},"text":{"160":{},"485":{}},"component":{}}],["dag",{"_index":1265,"title":{"56-3":{},"56-4":{},"56-5":{},"56-6":{}},"name":{},"text":{"15":{},"56":{}},"component":{}}],["dag('sampl",{"_index":2575,"title":{},"name":{},"text":{"56":{}},"component":{}}],["dag_id=sampl",{"_index":2602,"title":{},"name":{},"text":{"56":{}},"component":{}}],["dagfileprocessormanag",{"_index":2512,"title":{},"name":{},"text":{"56":{}},"component":{}}],["daili",{"_index":2342,"title":{},"name":{},"text":{"52":{},"465":{},"527":{}},"component":{}}],["damerau",{"_index":5319,"title":{},"name":{},"text":{"248":{}},"component":{}}],["dameraulevenshtein",{"_index":4165,"title":{},"name":{},"text":{"205":{}},"component":{}}],["dark",{"_index":1639,"title":{},"name":{},"text":{"27":{},"79":{},"528":{},"541":{},"543":{}},"component":{}}],["dark.j",{"_index":7198,"title":{},"name":{},"text":{"541":{}},"component":{}}],["darkest",{"_index":6902,"title":{},"name":{},"text":{"528":{}},"component":{}}],["dash",{"_index":5967,"title":{},"name":{},"text":{"338":{},"531":{}},"component":{}}],["dashboard",{"_index":2258,"title":{},"name":{},"text":{"50":{},"160":{},"186":{},"187":{}},"component":{}}],["dat",{"_index":5368,"title":{},"name":{},"text":{"251":{},"447":{}},"component":{}}],["data",{"_index":38,"title":{"28":{},"60":{},"61":{},"223":{},"241":{},"250":{},"308":{},"313":{},"314":{},"374":{},"433":{},"519":{},"50-5":{},"55-7":{},"61-3":{},"82-1":{},"82-3":{},"82-5":{},"83-5":{},"83-6":{},"178-7":{},"205-4":{},"292-8":{},"338-7":{},"346-5":{},"361-4":{},"433-5":{},"433-7":{},"433-8":{},"544-10":{}},"name":{"28":{},"60":{},"61":{},"308":{},"433":{}},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"9":{},"10":{},"13":{},"15":{},"16":{},"19":{},"20":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"35":{},"36":{},"37":{},"40":{},"41":{},"43":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"60":{},"61":{},"62":{},"64":{},"68":{},"69":{},"70":{},"71":{},"74":{},"75":{},"76":{},"78":{},"81":{},"82":{},"83":{},"84":{},"86":{},"91":{},"93":{},"96":{},"102":{},"105":{},"133":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"170":{},"171":{},"172":{},"173":{},"175":{},"178":{},"179":{},"181":{},"182":{},"185":{},"188":{},"189":{},"190":{},"191":{},"194":{},"195":{},"196":{},"198":{},"199":{},"200":{},"202":{},"205":{},"207":{},"208":{},"211":{},"214":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"223":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"233":{},"234":{},"235":{},"237":{},"240":{},"241":{},"246":{},"247":{},"248":{},"249":{},"250":{},"253":{},"254":{},"256":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"300":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"318":{},"320":{},"321":{},"322":{},"324":{},"325":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"339":{},"340":{},"344":{},"345":{},"346":{},"347":{},"349":{},"351":{},"352":{},"353":{},"354":{},"355":{},"359":{},"360":{},"361":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"370":{},"371":{},"372":{},"373":{},"374":{},"376":{},"377":{},"378":{},"380":{},"381":{},"383":{},"384":{},"386":{},"388":{},"389":{},"394":{},"397":{},"403":{},"404":{},"405":{},"407":{},"409":{},"410":{},"413":{},"418":{},"427":{},"428":{},"429":{},"430":{},"432":{},"433":{},"453":{},"457":{},"465":{},"470":{},"471":{},"472":{},"475":{},"481":{},"489":{},"490":{},"496":{},"502":{},"503":{},"507":{},"511":{},"512":{},"513":{},"518":{},"519":{},"520":{},"521":{},"525":{},"529":{},"531":{},"534":{},"544":{}},"component":{}}],["data.0",{"_index":1362,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["data.csv",{"_index":2706,"title":{},"name":{},"text":{"68":{}},"component":{}}],["data.hpl",{"_index":2646,"title":{},"name":{},"text":{"59":{},"159":{},"160":{}},"component":{}}],["data.outputmeta",{"_index":6192,"title":{},"name":{},"text":{"372":{}},"component":{}}],["data.outputrowmeta",{"_index":6186,"title":{},"name":{},"text":{"372":{}},"component":{}}],["data.outputrowmeta.s",{"_index":6163,"title":{},"name":{},"text":{"372":{}},"component":{}}],["data/parmultido(hoptostr",{"_index":3573,"title":{},"name":{},"text":{"160":{}},"component":{}}],["data/parmultido(transform",{"_index":3569,"title":{},"name":{},"text":{"160":{}},"component":{}}],["data[?(@=~/a.*/i",{"_index":5539,"title":{},"name":{},"text":{"273":{}},"component":{}}],["data_dir",{"_index":3513,"title":{},"name":{},"text":{"158":{}},"component":{}}],["data_input",{"_index":3505,"title":{},"name":{},"text":{"158":{}},"component":{}}],["data_output",{"_index":3507,"title":{},"name":{},"text":{"158":{}},"component":{}}],["data_output=${project_home}/beam/output",{"_index":3378,"title":{},"name":{},"text":{"151":{},"389":{}},"component":{}}],["data_path_1",{"_index":3925,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["data_path_1}/bigfile.csv",{"_index":3924,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["databas",{"_index":112,"title":{"11":{},"71":{},"221":{},"222":{},"130-2":{},"130-3":{},"315-5":{},"376-5":{},"532-10":{}},"name":{"11":{}},"text":{"1":{},"4":{},"5":{},"7":{},"9":{},"11":{},"13":{},"19":{},"20":{},"24":{},"27":{},"32":{},"46":{},"50":{},"52":{},"53":{},"54":{},"55":{},"57":{},"62":{},"64":{},"65":{},"67":{},"70":{},"71":{},"73":{},"75":{},"77":{},"78":{},"81":{},"83":{},"84":{},"86":{},"88":{},"91":{},"92":{},"94":{},"106":{},"114":{},"121":{},"124":{},"127":{},"129":{},"130":{},"131":{},"132":{},"133":{},"136":{},"137":{},"141":{},"142":{},"144":{},"153":{},"154":{},"156":{},"163":{},"169":{},"173":{},"177":{},"178":{},"194":{},"206":{},"215":{},"216":{},"220":{},"221":{},"222":{},"225":{},"227":{},"228":{},"230":{},"238":{},"239":{},"257":{},"267":{},"268":{},"271":{},"286":{},"287":{},"289":{},"290":{},"291":{},"292":{},"298":{},"299":{},"303":{},"311":{},"315":{},"322":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"346":{},"352":{},"353":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"371":{},"375":{},"376":{},"388":{},"389":{},"391":{},"394":{},"395":{},"397":{},"401":{},"402":{},"404":{},"405":{},"406":{},"408":{},"409":{},"414":{},"429":{},"431":{},"432":{},"433":{},"436":{},"438":{},"440":{},"453":{},"470":{},"471":{},"472":{},"481":{},"492":{},"493":{},"496":{},"498":{},"501":{},"510":{},"519":{},"520":{},"525":{},"530":{},"532":{}},"component":{}}],["database.hwf",{"_index":2228,"title":{},"name":{},"text":{"46":{}},"component":{}}],["database/datadirect",{"_index":3234,"title":{},"name":{},"text":{"118":{}},"component":{}}],["databasejoin",{"_index":4264,"title":{},"name":{"221":{}},"text":{},"component":{}}],["databaselookup",{"_index":3164,"title":{},"name":{"222":{}},"text":{"106":{}},"component":{}}],["databasemeta",{"_index":6936,"title":{},"name":{},"text":{"529":{},"532":{}},"component":{}}],["databasemetadata",{"_index":5493,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getbestrowidentifi",{"_index":5496,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getcatalog",{"_index":5495,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getcolumn",{"_index":5499,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getcolumnprivileg",{"_index":5498,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getcrossrefer",{"_index":5500,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getexportedkey",{"_index":5501,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getimportedkey",{"_index":5503,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getprimarykey",{"_index":5504,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getschema",{"_index":5505,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.gett",{"_index":5508,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.gettableprivileg",{"_index":5506,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.gettabletyp",{"_index":5507,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.gettypeinfo",{"_index":5509,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasemetadata.getversioncolumn",{"_index":5510,"title":{},"name":{},"text":{"271":{}},"component":{}}],["databasenam",{"_index":2799,"title":{},"name":{},"text":{"77":{}},"component":{}}],["databaseplugintyp",{"_index":6798,"title":{},"name":{},"text":{"525":{}},"component":{}}],["datacent",{"_index":6327,"title":{},"name":{},"text":{"429":{}},"component":{}}],["datacenters,[2",{"_index":6331,"title":{},"name":{},"text":{"429":{}},"component":{}}],["datadirect_jdbc.html",{"_index":3235,"title":{},"name":{},"text":{"118":{}},"component":{}}],["dataflow",{"_index":328,"title":{"158":{},"165":{},"513":{},"165-1":{},"165-2":{},"513-5":{}},"name":{"158":{},"165":{},"513":{}},"text":{"2":{},"4":{},"7":{},"10":{},"20":{},"37":{},"69":{},"88":{},"158":{},"163":{},"164":{},"165":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"430":{},"513":{},"518":{},"519":{},"540":{}},"component":{}}],["dataflow’",{"_index":3803,"title":{},"name":{},"text":{"165":{}},"component":{}}],["datagrid",{"_index":4290,"title":{},"name":{"223":{}},"text":{},"component":{}}],["dataload",{"_index":1884,"title":{},"name":{},"text":{"40":{}},"component":{}}],["dataservic",{"_index":7250,"title":{},"name":{},"text":{"542":{}},"component":{}}],["dataset",{"_index":2377,"title":{},"name":{},"text":{"52":{},"78":{},"92":{},"152":{},"163":{},"188":{},"189":{},"220":{},"228":{},"251":{},"324":{},"366":{},"531":{}},"component":{}}],["dataset\",\"workflow",{"_index":1722,"title":{},"name":{},"text":{"37":{}},"component":{}}],["datasetscsvfold",{"_index":3046,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["datastor",{"_index":3800,"title":{},"name":{},"text":{"165":{}},"component":{}}],["datatablespac",{"_index":2803,"title":{},"name":{},"text":{"77":{}},"component":{}}],["datatatyp",{"_index":5634,"title":{},"name":{},"text":{"289":{}},"component":{}}],["datatyp",{"_index":5637,"title":{},"name":{},"text":{"289":{},"378":{}},"component":{}}],["data’",{"_index":5635,"title":{},"name":{},"text":{"289":{}},"component":{}}],["date",{"_index":798,"title":{"247-24":{}},"name":{},"text":{"7":{},"22":{},"29":{},"32":{},"41":{},"52":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"103":{},"133":{},"178":{},"179":{},"185":{},"205":{},"216":{},"217":{},"220":{},"227":{},"233":{},"234":{},"236":{},"241":{},"244":{},"247":{},"253":{},"254":{},"256":{},"258":{},"259":{},"266":{},"267":{},"270":{},"273":{},"274":{},"277":{},"280":{},"285":{},"289":{},"291":{},"296":{},"303":{},"304":{},"305":{},"310":{},"311":{},"314":{},"316":{},"320":{},"322":{},"325":{},"331":{},"338":{},"342":{},"344":{},"352":{},"359":{},"363":{},"366":{},"367":{},"368":{},"373":{},"379":{},"383":{},"400":{},"442":{},"453":{},"461":{},"464":{},"465":{},"466":{},"468":{},"470":{},"477":{},"478":{},"481":{},"489":{},"499":{},"503":{},"509":{}},"component":{}}],["date(\"2023",{"_index":5450,"title":{},"name":{},"text":{"270":{}},"component":{}}],["date(1904;1;1",{"_index":4757,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2000;2;29)=date(2000;2;28)+1",{"_index":4761,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2003;2;29)=date(2003;3;1",{"_index":4779,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2004;2;29)=date(2004;2;28)+1",{"_index":4759,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2005;12;31",{"_index":4756,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2005;1;31)=[.c7",{"_index":4755,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2005;3;1)=date(2005;2;28)+1",{"_index":4762,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2006",{"_index":4765,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2006;4",{"_index":4776,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date(2017.5",{"_index":4763,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date.setdate(date.getd",{"_index":6434,"title":{},"name":{},"text":{"453":{}},"component":{}}],["date/tim",{"_index":4304,"title":{},"name":{},"text":{"227":{},"368":{},"442":{},"461":{},"509":{}},"component":{}}],["date/timestamp",{"_index":5761,"title":{},"name":{},"text":{"303":{},"311":{}},"component":{}}],["date_field",{"_index":4810,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date_field]=2",{"_index":5094,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date_from",{"_index":4320,"title":{},"name":{},"text":{"227":{}},"component":{}}],["date_to",{"_index":4319,"title":{},"name":{},"text":{"227":{}},"component":{}}],["dateandtim",{"_index":4483,"title":{},"name":{},"text":{"241":{}},"component":{}}],["datefield",{"_index":4300,"title":{},"name":{},"text":{"227":{}},"component":{}}],["dateformat",{"_index":6435,"title":{},"name":{},"text":{"453":{}},"component":{}}],["dateformat.format(d",{"_index":6438,"title":{},"name":{},"text":{"453":{}},"component":{}}],["dateparam",{"_index":4787,"title":{},"name":{},"text":{"247":{}},"component":{}}],["datetim",{"_index":2556,"title":{"247-23":{}},"name":{},"text":{"56":{},"247":{},"303":{},"311":{}},"component":{}}],["datetime(2022",{"_index":2569,"title":{},"name":{},"text":{"56":{}},"component":{}}],["datevalu",{"_index":4647,"title":{"247-25":{}},"name":{},"text":{"247":{}},"component":{}}],["datevalue(\"2004",{"_index":4784,"title":{},"name":{},"text":{"247":{}},"component":{}}],["date’",{"_index":4748,"title":{},"name":{},"text":{"247":{}},"component":{}}],["daunt",{"_index":6784,"title":{},"name":{},"text":{"525":{}},"component":{}}],["day",{"_index":911,"title":{"247-26":{},"247-27":{}},"name":{},"text":{"7":{},"82":{},"205":{},"247":{},"256":{},"366":{},"453":{},"494":{},"514":{},"519":{}},"component":{}}],["day(\"2006",{"_index":4790,"title":{},"name":{},"text":{"247":{}},"component":{}}],["day(date(2006;5;21",{"_index":4789,"title":{},"name":{},"text":{"247":{}},"component":{}}],["daya",{"_index":2831,"title":{},"name":{},"text":{"78":{}},"component":{}}],["dayfraction=(t",{"_index":4813,"title":{},"name":{},"text":{"247":{}},"component":{}}],["daylight",{"_index":4139,"title":{},"name":{},"text":{"205":{}},"component":{}}],["days(datevalue(\"2004",{"_index":4793,"title":{},"name":{},"text":{"247":{}},"component":{}}],["days360",{"_index":4648,"title":{"247-28":{}},"name":{},"text":{"247":{}},"component":{}}],["days360(start_date,end_date,[method",{"_index":4799,"title":{},"name":{},"text":{"247":{}},"component":{}}],["day’",{"_index":4886,"title":{},"name":{},"text":{"247":{}},"component":{}}],["db",{"_index":2271,"title":{"121":{},"137":{},"206":{},"438":{}},"name":{},"text":{"50":{},"52":{},"70":{},"71":{},"81":{},"86":{},"177":{},"206":{},"275":{},"311":{},"363":{},"365":{},"438":{}},"component":{}}],["db.constraint",{"_index":6383,"title":{},"name":{},"text":{"433":{}},"component":{}}],["db.index",{"_index":6382,"title":{},"name":{},"text":{"433":{}},"component":{}}],["db2",{"_index":3192,"title":{"111":{}},"name":{"111":{}},"text":{"216":{},"227":{}},"component":{}}],["db_host",{"_index":2273,"title":{},"name":{},"text":{"50":{}},"component":{}}],["db_hostnam",{"_index":3075,"title":{},"name":{},"text":{"90":{},"91":{},"150":{},"152":{},"389":{}},"component":{}}],["db_hostname=localhost,db_password=abcd",{"_index":3073,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["db_password",{"_index":3076,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["dbconn",{"_index":2810,"title":{},"name":{},"text":{"77":{}},"component":{}}],["dbeaver",{"_index":2398,"title":{},"name":{},"text":{"53":{}},"component":{}}],["dbname",{"_index":2800,"title":{},"name":{},"text":{"77":{}},"component":{}}],["dbuser",{"_index":2809,"title":{},"name":{},"text":{"77":{}},"component":{}}],["dbxt",{"_index":3136,"title":{},"name":{},"text":{"99":{}},"component":{}}],["dc",{"_index":3389,"title":{},"name":{},"text":{"152":{}},"component":{}}],["dd",{"_index":4733,"title":{},"name":{},"text":{"247":{},"259":{},"270":{},"273":{},"331":{}},"component":{}}],["ddl",{"_index":2404,"title":{},"name":{},"text":{"54":{},"156":{}},"component":{}}],["dd’t’hh:mm:ss.sssz",{"_index":5535,"title":{},"name":{},"text":{"273":{}},"component":{}}],["de",{"_index":935,"title":{"339":{}},"name":{"339":{}},"text":{"7":{},"9":{},"81":{},"86":{},"152":{},"163":{},"165":{},"241":{},"304":{},"320":{},"339":{},"397":{}},"component":{}}],["de/german",{"_index":6237,"title":{},"name":{},"text":{"375":{}},"component":{}}],["de97",{"_index":2167,"title":{},"name":{},"text":{"42":{}},"component":{}}],["deal",{"_index":3774,"title":{},"name":{},"text":{"163":{},"299":{},"366":{}},"component":{}}],["debug",{"_index":273,"title":{"85":{},"104":{},"81-3":{},"85-3":{},"533-9":{},"533-10":{},"533-11":{},"534-3":{}},"name":{"85":{},"104":{}},"text":{"2":{},"4":{},"9":{},"15":{},"17":{},"24":{},"26":{},"37":{},"38":{},"41":{},"55":{},"75":{},"78":{},"80":{},"81":{},"84":{},"85":{},"88":{},"104":{},"105":{},"159":{},"163":{},"166":{},"211":{},"287":{},"350":{},"397":{},"514":{},"533":{},"534":{},"537":{}},"component":{}}],["debugg",{"_index":585,"title":{},"name":{},"text":{"5":{},"533":{}},"component":{}}],["dec",{"_index":4806,"title":{},"name":{},"text":{"247":{}},"component":{}}],["dec_0",{"_index":6188,"title":{},"name":{},"text":{"372":{}},"component":{}}],["decad",{"_index":6762,"title":{},"name":{},"text":{"519":{}},"component":{}}],["decemb",{"_index":6751,"title":{},"name":{},"text":{"519":{}},"component":{}}],["decid",{"_index":1090,"title":{},"name":{},"text":{"9":{},"53":{},"54":{},"163":{},"171":{}},"component":{}}],["decim",{"_index":733,"title":{},"name":{},"text":{"7":{},"178":{},"205":{},"217":{},"220":{},"227":{},"234":{},"247":{},"250":{},"258":{},"260":{},"273":{},"277":{},"279":{},"313":{},"316":{},"331":{},"338":{},"346":{},"349":{},"359":{},"366":{},"367":{},"374":{},"383":{},"386":{},"400":{}},"component":{}}],["decimal_symbol",{"_index":4615,"title":{},"name":{},"text":{"243":{}},"component":{}}],["decimalplac",{"_index":5167,"title":{},"name":{},"text":{"247":{}},"component":{}}],["decis",{"_index":3003,"title":{},"name":{},"text":{"87":{}},"component":{}}],["declar",{"_index":659,"title":{},"name":{},"text":{"7":{},"378":{}},"component":{}}],["declin",{"_index":3854,"title":{},"name":{},"text":{"167":{},"325":{}},"component":{}}],["decod",{"_index":175,"title":{"182":{}},"name":{"182":{}},"text":{"1":{},"81":{},"86":{},"157":{},"182":{},"205":{},"405":{},"427":{}},"component":{}}],["decomposit",{"_index":6613,"title":{},"name":{},"text":{"503":{}},"component":{}}],["decor",{"_index":1981,"title":{},"name":{},"text":{"41":{}},"component":{}}],["decoupl",{"_index":3928,"title":{},"name":{},"text":{"171":{},"512":{}},"component":{}}],["decreas",{"_index":185,"title":{},"name":{},"text":{"1":{},"9":{},"177":{},"292":{},"396":{},"405":{}},"component":{}}],["decrypt",{"_index":2896,"title":{"306":{},"477":{}},"name":{},"text":{"81":{},"86":{},"157":{},"306":{},"477":{},"478":{}},"component":{}}],["dedic",{"_index":2254,"title":{},"name":{},"text":{"50":{},"239":{},"259":{}},"component":{}}],["deep",{"_index":2998,"title":{},"name":{},"text":{"87":{}},"component":{}}],["deeper",{"_index":1247,"title":{},"name":{},"text":{"13":{},"21":{},"105":{}},"component":{}}],["deepli",{"_index":6764,"title":{},"name":{},"text":{"519":{}},"component":{}}],["defaul",{"_index":1468,"title":{},"name":{},"text":{"22":{}},"component":{}}],["default",{"_index":82,"title":{},"name":{"400":{}},"text":{"1":{},"5":{},"7":{},"8":{},"11":{},"13":{},"16":{},"19":{},"20":{},"22":{},"23":{},"25":{},"27":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"85":{},"90":{},"91":{},"93":{},"94":{},"97":{},"103":{},"104":{},"105":{},"133":{},"150":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"169":{},"170":{},"172":{},"186":{},"189":{},"196":{},"198":{},"202":{},"203":{},"204":{},"205":{},"207":{},"208":{},"222":{},"233":{},"234":{},"235":{},"243":{},"247":{},"259":{},"260":{},"261":{},"262":{},"264":{},"270":{},"273":{},"274":{},"275":{},"276":{},"287":{},"290":{},"291":{},"292":{},"295":{},"297":{},"298":{},"300":{},"302":{},"303":{},"305":{},"309":{},"316":{},"322":{},"326":{},"327":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"337":{},"338":{},"344":{},"347":{},"352":{},"354":{},"355":{},"359":{},"360":{},"364":{},"366":{},"367":{},"372":{},"375":{},"376":{},"378":{},"381":{},"388":{},"389":{},"399":{},"400":{},"404":{},"406":{},"410":{},"422":{},"424":{},"425":{},"430":{},"431":{},"433":{},"443":{},"446":{},"461":{},"462":{},"463":{},"464":{},"467":{},"468":{},"480":{},"481":{},"483":{},"498":{},"499":{},"501":{},"503":{},"509":{},"511":{},"514":{},"528":{},"531":{},"533":{},"534":{},"538":{},"541":{},"543":{},"544":{}},"component":{}}],["default.0",{"_index":1377,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["default_arg",{"_index":2565,"title":{},"name":{},"text":{"56":{}},"component":{}}],["default_args=default_arg",{"_index":2576,"title":{},"name":{},"text":{"56":{}},"component":{}}],["defaultcountri",{"_index":6010,"title":{},"name":{},"text":{"354":{}},"component":{}}],["defaultenviron",{"_index":3034,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{},"513":{}},"component":{}}],["defaultproject",{"_index":3033,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{},"543":{}},"component":{}}],["defin",{"_index":138,"title":{"372":{},"373":{},"7-7":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"13":{},"16":{},"24":{},"29":{},"41":{},"43":{},"56":{},"60":{},"64":{},"66":{},"78":{},"81":{},"82":{},"83":{},"86":{},"90":{},"91":{},"92":{},"94":{},"103":{},"151":{},"152":{},"154":{},"155":{},"163":{},"167":{},"170":{},"171":{},"173":{},"179":{},"195":{},"200":{},"201":{},"205":{},"206":{},"216":{},"220":{},"221":{},"223":{},"227":{},"230":{},"233":{},"234":{},"237":{},"238":{},"239":{},"247":{},"248":{},"250":{},"251":{},"254":{},"255":{},"256":{},"258":{},"259":{},"260":{},"263":{},"264":{},"265":{},"269":{},"270":{},"273":{},"275":{},"279":{},"280":{},"287":{},"291":{},"292":{},"297":{},"309":{},"312":{},"313":{},"316":{},"319":{},"320":{},"324":{},"325":{},"331":{},"337":{},"338":{},"342":{},"344":{},"349":{},"358":{},"360":{},"364":{},"366":{},"367":{},"369":{},"372":{},"373":{},"374":{},"375":{},"378":{},"381":{},"384":{},"386":{},"387":{},"389":{},"402":{},"408":{},"420":{},"426":{},"441":{},"442":{},"455":{},"465":{},"466":{},"480":{},"481":{},"485":{},"490":{},"498":{},"501":{},"503":{},"508":{},"511":{},"512":{},"514":{},"524":{},"528":{},"530":{},"541":{},"544":{}},"component":{}}],["definit",{"_index":678,"title":{"59":{},"163-11":{},"195-4":{},"200-4":{},"259-6":{},"292-9":{}},"name":{"59":{}},"text":{"7":{},"24":{},"59":{},"63":{},"64":{},"66":{},"90":{},"92":{},"107":{},"150":{},"152":{},"158":{},"163":{},"170":{},"171":{},"195":{},"200":{},"223":{},"234":{},"246":{},"247":{},"248":{},"250":{},"273":{},"287":{},"291":{},"292":{},"313":{},"316":{},"324":{},"325":{},"365":{},"366":{},"367":{},"384":{},"389":{},"451":{},"507":{},"511":{},"512":{}},"component":{}}],["definition\",\"splunk\",\"pipelin",{"_index":1731,"title":{},"name":{},"text":{"37":{}},"component":{}}],["degrad",{"_index":5729,"title":{},"name":{},"text":{"298":{}},"component":{}}],["degre",{"_index":3852,"title":{"247-96":{}},"name":{},"text":{"167":{},"247":{}},"component":{}}],["del",{"_index":1484,"title":{},"name":{},"text":{"23":{},"36":{}},"component":{}}],["delay",{"_index":855,"title":{"224":{},"445":{}},"name":{"224":{},"445":{}},"text":{"7":{},"42":{},"62":{},"81":{},"86":{},"154":{},"167":{},"170":{},"198":{},"224":{},"290":{},"292":{},"445":{},"483":{},"511":{}},"component":{}}],["delet",{"_index":1071,"title":{"225":{},"290":{},"330":{},"446":{},"447":{},"448":{},"449":{},"462":{},"37-9":{},"90-11":{},"93-4":{},"93-5":{},"150-4":{},"152-11":{},"290-5":{},"290-6":{},"290-7":{},"389-9":{},"389-15":{}},"name":{"225":{}},"text":{"8":{},"23":{},"24":{},"27":{},"29":{},"30":{},"31":{},"36":{},"37":{},"52":{},"55":{},"78":{},"81":{},"86":{},"90":{},"93":{},"97":{},"103":{},"105":{},"150":{},"152":{},"161":{},"162":{},"206":{},"208":{},"225":{},"236":{},"238":{},"239":{},"246":{},"248":{},"255":{},"256":{},"270":{},"273":{},"278":{},"285":{},"290":{},"292":{},"312":{},"319":{},"330":{},"331":{},"332":{},"333":{},"334":{},"338":{},"352":{},"355":{},"360":{},"370":{},"372":{},"386":{},"389":{},"433":{},"441":{},"442":{},"446":{},"447":{},"448":{},"449":{},"453":{},"454":{},"458":{},"462":{},"464":{},"466":{},"468":{},"475":{},"477":{},"478":{},"487":{},"488":{},"490":{},"498":{},"499":{}},"component":{}}],["delete/edit",{"_index":6400,"title":{},"name":{},"text":{"439":{}},"component":{}}],["deletefil",{"_index":6408,"title":{},"name":{"446":{},"447":{}},"text":{},"component":{}}],["deletefold",{"_index":6409,"title":{},"name":{"448":{}},"text":{},"component":{}}],["deleteresultfilenam",{"_index":6410,"title":{},"name":{"449":{}},"text":{},"component":{}}],["deliber",{"_index":2794,"title":{},"name":{},"text":{"77":{},"224":{}},"component":{}}],["delimit",{"_index":878,"title":{},"name":{},"text":{"7":{},"165":{},"166":{},"167":{},"168":{},"220":{},"223":{},"228":{},"237":{},"243":{},"247":{},"260":{},"311":{},"315":{},"346":{},"349":{},"350":{},"368":{}},"component":{}}],["deliv",{"_index":1983,"title":{},"name":{},"text":{"41":{},"350":{},"519":{}},"component":{}}],["deliveri",{"_index":2304,"title":{},"name":{},"text":{"50":{},"247":{}},"component":{}}],["delta",{"_index":4665,"title":{"247-56":{}},"name":{},"text":{},"component":{}}],["demand",{"_index":4329,"title":{},"name":{},"text":{"228":{},"542":{}},"component":{}}],["demo",{"_index":3496,"title":{},"name":{},"text":{"158":{},"223":{}},"component":{}}],["demograph",{"_index":4485,"title":{},"name":{},"text":{"241":{}},"component":{}}],["demonstr",{"_index":2476,"title":{},"name":{},"text":{"56":{},"246":{},"270":{}},"component":{}}],["dendemil",{"_index":4437,"title":{},"name":{},"text":{"241":{}},"component":{}}],["denomin",{"_index":5039,"title":{},"name":{},"text":{"247":{}},"component":{}}],["denonym",{"_index":4488,"title":{},"name":{},"text":{"241":{}},"component":{}}],["denorm",{"_index":2702,"title":{},"name":{},"text":{"68":{}},"component":{}}],["denormalis",{"_index":2266,"title":{"320":{}},"name":{},"text":{"50":{},"81":{},"86":{},"163":{}},"component":{}}],["denot",{"_index":4064,"title":{},"name":{},"text":{"198":{},"270":{}},"component":{}}],["densiti",{"_index":5105,"title":{},"name":{},"text":{"247":{}},"component":{}}],["depart",{"_index":3093,"title":{},"name":{},"text":{"93":{},"152":{},"241":{}},"component":{}}],["depend",{"_index":432,"title":{"5-13":{},"532-1":{}},"name":{},"text":{"5":{},"7":{},"20":{},"29":{},"50":{},"52":{},"56":{},"62":{},"69":{},"71":{},"75":{},"82":{},"84":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"158":{},"164":{},"210":{},"211":{},"217":{},"227":{},"233":{},"234":{},"236":{},"243":{},"247":{},"251":{},"274":{},"277":{},"279":{},"302":{},"309":{},"331":{},"338":{},"352":{},"367":{},"373":{},"383":{},"457":{},"466":{},"496":{},"502":{},"519":{},"530":{},"532":{},"534":{},"544":{}},"component":{}}],["depend_on_past",{"_index":2567,"title":{},"name":{},"text":{"56":{}},"component":{}}],["deploy",{"_index":387,"title":{"56-4":{},"162-4":{}},"name":{},"text":{"4":{},"25":{},"37":{},"50":{},"56":{},"162":{},"165":{},"168":{},"428":{}},"component":{}}],["deployment.yml",{"_index":3669,"title":{},"name":{},"text":{"162":{}},"component":{}}],["deprec",{"_index":2407,"title":{"55-1":{}},"name":{},"text":{"55":{},"81":{},"161":{},"514":{}},"component":{}}],["depth",{"_index":6621,"title":{},"name":{},"text":{"509":{},"537":{},"538":{}},"component":{}}],["derbi",{"_index":3194,"title":{"112":{}},"name":{"112":{}},"text":{"112":{}},"component":{}}],["derby.jar",{"_index":3199,"title":{},"name":{},"text":{"112":{}},"component":{}}],["derbyclient.jar",{"_index":3198,"title":{},"name":{},"text":{"112":{}},"component":{}}],["derefalia",{"_index":5581,"title":{},"name":{},"text":{"278":{}},"component":{}}],["derefer",{"_index":5583,"title":{},"name":{},"text":{"278":{}},"component":{}}],["dereferenc",{"_index":5298,"title":{},"name":{},"text":{"247":{},"278":{}},"component":{}}],["des3",{"_index":1944,"title":{},"name":{},"text":{"41":{}},"component":{}}],["desc",{"_index":6524,"title":{},"name":{},"text":{"470":{}},"component":{}}],["descend",{"_index":2977,"title":{},"name":{},"text":{"85":{},"291":{},"292":{},"347":{},"470":{}},"component":{}}],["describ",{"_index":556,"title":{},"name":{},"text":{"5":{},"20":{},"23":{},"41":{},"59":{},"60":{},"64":{},"65":{},"66":{},"69":{},"70":{},"71":{},"72":{},"74":{},"78":{},"85":{},"90":{},"91":{},"93":{},"103":{},"104":{},"150":{},"152":{},"155":{},"163":{},"165":{},"166":{},"167":{},"168":{},"171":{},"178":{},"227":{},"251":{},"270":{},"277":{},"278":{},"281":{},"282":{},"287":{},"366":{},"367":{},"374":{},"384":{},"389":{},"427":{},"432":{},"433":{},"507":{},"510":{},"511":{},"512":{},"514":{},"528":{},"529":{},"533":{},"537":{}},"component":{}}],["descript",{"_index":676,"title":{"8-1":{},"27-1":{},"28-1":{},"29-1":{},"30-1":{},"30-4":{},"31-1":{},"32-1":{},"33-2":{},"34-1":{},"37-1":{},"39-1":{},"40-1":{},"58-1":{},"59-1":{},"61-1":{},"62-1":{},"63-1":{},"65-1":{},"66-1":{},"67-1":{},"68-1":{},"69-1":{},"70-1":{},"71-1":{},"72-1":{},"73-1":{},"74-1":{},"75-2":{},"153-1":{},"154-1":{},"155-1":{},"156-1":{},"157-1":{},"171-1":{},"172-1":{},"173-1":{},"174-1":{},"175-1":{},"176-1":{},"177-1":{},"178-1":{},"179-1":{},"180-1":{},"181-1":{},"182-1":{},"183-1":{},"184-1":{},"185-1":{},"186-1":{},"187-1":{},"188-1":{},"189-1":{},"190-1":{},"191-1":{},"192-1":{},"193-1":{},"194-1":{},"195-1":{},"196-1":{},"197-1":{},"198-1":{},"199-1":{},"200-1":{},"201-1":{},"202-1":{},"203-1":{},"204-1":{},"205-1":{},"206-1":{},"207-1":{},"208-1":{},"209-1":{},"210-1":{},"211-1":{},"212-1":{},"213-1":{},"214-1":{},"215-1":{},"216-1":{},"217-1":{},"218-1":{},"219-1":{},"220-1":{},"221-1":{},"222-1":{},"223-1":{},"224-1":{},"225-1":{},"226-1":{},"227-1":{},"228-1":{},"229-1":{},"230-1":{},"231-1":{},"232-1":{},"233-1":{},"234-1":{},"235-1":{},"236-1":{},"237-1":{},"238-1":{},"239-1":{},"240-1":{},"241-1":{},"242-1":{},"243-1":{},"244-1":{},"245-1":{},"246-1":{},"247-1":{},"248-1":{},"249-1":{},"250-1":{},"251-1":{},"252-1":{},"253-1":{},"254-1":{},"255-1":{},"256-1":{},"257-1":{},"258-1":{},"259-1":{},"260-1":{},"261-1":{},"262-1":{},"263-1":{},"264-1":{},"265-1":{},"266-1":{},"267-1":{},"268-1":{},"269-1":{},"270-1":{},"271-1":{},"272-1":{},"273-1":{},"274-1":{},"275-1":{},"276-1":{},"277-1":{},"278-1":{},"279-1":{},"280-1":{},"281-1":{},"282-1":{},"283-1":{},"284-1":{},"285-1":{},"286-1":{},"287-1":{},"288-1":{},"289-1":{},"290-1":{},"291-1":{},"292-1":{},"293-1":{},"294-1":{},"295-1":{},"296-1":{},"297-1":{},"298-1":{},"299-1":{},"300-1":{},"301-1":{},"302-1":{},"303-1":{},"304-1":{},"305-1":{},"306-1":{},"307-1":{},"308-1":{},"309-1":{},"310-1":{},"311-1":{},"312-1":{},"313-1":{},"314-1":{},"315-1":{},"316-1":{},"317-1":{},"318-1":{},"319-1":{},"320-1":{},"321-1":{},"322-1":{},"323-1":{},"324-1":{},"325-1":{},"326-1":{},"330-1":{},"331-1":{},"332-1":{},"333-1":{},"334-1":{},"335-1":{},"336-1":{},"337-1":{},"338-1":{},"339-1":{},"340-1":{},"341-1":{},"342-1":{},"343-1":{},"344-1":{},"345-1":{},"346-1":{},"347-1":{},"348-1":{},"349-1":{},"350-1":{},"351-1":{},"352-1":{},"353-1":{},"354-1":{},"355-1":{},"356-1":{},"357-1":{},"358-1":{},"359-1":{},"360-1":{},"361-1":{},"362-1":{},"363-1":{},"364-1":{},"365-1":{},"366-1":{},"367-1":{},"368-1":{},"369-1":{},"370-1":{},"371-1":{},"372-1":{},"373-1":{},"374-1":{},"375-1":{},"377-1":{},"378-1":{},"379-1":{},"380-1":{},"381-1":{},"382-1":{},"383-1":{},"384-1":{},"385-1":{},"386-1":{},"387-1":{},"431-1":{},"432-1":{},"434-1":{},"435-1":{},"436-1":{},"438-1":{},"439-1":{},"440-1":{},"441-1":{},"442-1":{},"443-1":{},"444-1":{},"445-1":{},"446-1":{},"447-1":{},"448-1":{},"449-1":{},"450-1":{},"451-1":{},"452-1":{},"453-1":{},"454-1":{},"455-1":{},"456-1":{},"457-1":{},"458-1":{},"459-1":{},"460-1":{},"461-1":{},"462-1":{},"463-1":{},"464-1":{},"465-1":{},"466-1":{},"467-1":{},"468-1":{},"469-1":{},"470-1":{},"471-1":{},"472-1":{},"473-1":{},"474-1":{},"475-1":{},"476-1":{},"477-1":{},"478-1":{},"479-1":{},"480-1":{},"481-1":{},"482-1":{},"483-1":{},"484-1":{},"485-1":{},"486-1":{},"487-1":{},"488-1":{},"489-1":{},"490-1":{},"491-1":{},"493-1":{},"494-1":{},"495-1":{},"496-1":{},"497-1":{},"498-1":{},"499-1":{},"500-1":{},"501-1":{},"502-1":{},"503-1":{},"504-1":{},"505-1":{},"506-1":{},"507-1":{},"508-1":{},"509-1":{},"512-1":{}},"name":{},"text":{"7":{},"8":{},"23":{},"24":{},"25":{},"27":{},"29":{},"33":{},"34":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"47":{},"50":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"78":{},"79":{},"80":{},"83":{},"85":{},"90":{},"93":{},"103":{},"104":{},"133":{},"150":{},"152":{},"153":{},"154":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"220":{},"221":{},"222":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"283":{},"284":{},"285":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"299":{},"300":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"327":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"341":{},"342":{},"343":{},"344":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"388":{},"389":{},"427":{},"434":{},"435":{},"436":{},"438":{},"439":{},"440":{},"441":{},"442":{},"443":{},"444":{},"445":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"453":{},"454":{},"455":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"475":{},"477":{},"478":{},"479":{},"480":{},"481":{},"483":{},"484":{},"485":{},"486":{},"487":{},"488":{},"489":{},"490":{},"491":{},"493":{},"495":{},"496":{},"497":{},"498":{},"499":{},"500":{},"501":{},"502":{},"503":{},"504":{},"505":{},"506":{},"507":{},"508":{},"509":{},"510":{},"511":{},"512":{},"513":{},"514":{},"520":{},"529":{},"530":{},"533":{}},"component":{}}],["design",{"_index":272,"title":{"20-1":{}},"name":{},"text":{"2":{},"5":{},"14":{},"19":{},"20":{},"24":{},"25":{},"78":{},"83":{},"87":{},"103":{},"104":{},"158":{},"159":{},"163":{},"164":{},"166":{},"171":{},"248":{},"256":{},"262":{},"267":{},"283":{},"302":{},"319":{},"357":{},"358":{},"429":{},"433":{},"512":{},"514":{},"542":{}},"component":{}}],["desir",{"_index":493,"title":{},"name":{},"text":{"5":{},"9":{},"18":{},"22":{},"41":{},"53":{},"54":{},"168":{},"205":{},"275":{},"276":{},"304":{},"336":{},"466":{}},"component":{}}],["desktop",{"_index":266,"title":{"541-2":{}},"name":{},"text":{"2":{},"5":{},"26":{},"27":{},"533":{}},"component":{}}],["despit",{"_index":4003,"title":{},"name":{},"text":{"186":{}},"component":{}}],["destin",{"_index":3986,"title":{"468-4":{},"477-4":{},"477-5":{},"478-4":{},"478-5":{}},"name":{},"text":{"185":{},"269":{},"280":{},"289":{},"372":{},"441":{},"442":{},"465":{},"466":{},"468":{},"477":{},"478":{},"487":{},"488":{},"509":{}},"component":{}}],["destkeystor",{"_index":1959,"title":{},"name":{},"text":{"41":{}},"component":{}}],["detach",{"_index":1523,"title":{},"name":{},"text":{"24":{},"78":{},"103":{},"479":{},"538":{}},"component":{}}],["detail",{"_index":969,"title":{"27-3":{},"41-6":{},"251-6":{},"324-3":{},"325-3":{}},"name":{},"text":{"8":{},"15":{},"17":{},"21":{},"24":{},"29":{},"37":{},"38":{},"41":{},"42":{},"50":{},"56":{},"57":{},"58":{},"61":{},"63":{},"69":{},"70":{},"71":{},"74":{},"75":{},"76":{},"78":{},"81":{},"85":{},"104":{},"153":{},"159":{},"160":{},"161":{},"162":{},"164":{},"165":{},"170":{},"171":{},"222":{},"227":{},"233":{},"234":{},"244":{},"247":{},"251":{},"264":{},"280":{},"283":{},"287":{},"291":{},"296":{},"298":{},"310":{},"319":{},"366":{},"379":{},"380":{},"481":{},"485":{},"505":{},"511":{},"512":{},"514":{},"520":{},"533":{},"536":{},"544":{}},"component":{}}],["deteach",{"_index":3155,"title":{},"name":{},"text":{"103":{}},"component":{}}],["detect",{"_index":897,"title":{"226":{}},"name":{},"text":{"7":{},"23":{},"55":{},"81":{},"86":{},"194":{},"226":{},"243":{},"246":{},"248":{},"298":{},"369":{},"370":{},"374":{},"483":{},"500":{}},"component":{}}],["detectemptystream",{"_index":4294,"title":{},"name":{"226":{}},"text":{},"component":{}}],["determin",{"_index":571,"title":{},"name":{},"text":{"5":{},"16":{},"27":{},"37":{},"57":{},"62":{},"85":{},"94":{},"154":{},"163":{},"165":{},"177":{},"179":{},"203":{},"210":{},"214":{},"221":{},"225":{},"234":{},"240":{},"243":{},"247":{},"256":{},"258":{},"275":{},"278":{},"280":{},"298":{},"303":{},"311":{},"324":{},"325":{},"334":{},"338":{},"349":{},"366":{},"426":{},"441":{},"453":{},"460":{},"465":{},"496":{},"500":{},"527":{}},"component":{}}],["dev",{"_index":145,"title":{"538-11":{},"538-12":{}},"name":{"533":{}},"text":{"1":{},"13":{},"90":{},"401":{},"402":{},"408":{},"535":{},"536":{},"538":{}},"component":{"525":{},"526":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"535":{},"536":{},"537":{},"538":{},"539":{},"540":{},"541":{},"542":{},"543":{},"544":{},"545":{},"546":{}}}],["dev@hop.apache.org",{"_index":7138,"title":{},"name":{},"text":{"538":{}},"component":{}}],["develop",{"_index":39,"title":{"530":{},"533":{},"541":{},"542":{},"543":{}},"name":{"530":{},"541":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"17":{},"19":{},"20":{},"24":{},"26":{},"41":{},"45":{},"49":{},"50":{},"53":{},"54":{},"55":{},"56":{},"70":{},"75":{},"81":{},"83":{},"84":{},"90":{},"91":{},"93":{},"105":{},"150":{},"152":{},"157":{},"159":{},"166":{},"169":{},"170":{},"171":{},"240":{},"241":{},"259":{},"260":{},"261":{},"274":{},"287":{},"372":{},"389":{},"390":{},"397":{},"413":{},"418":{},"511":{},"512":{},"514":{},"519":{},"520":{},"521":{},"526":{},"528":{},"530":{},"531":{},"533":{},"534":{},"535":{},"536":{},"542":{},"543":{}},"component":{}}],["deviat",{"_index":5414,"title":{},"name":{},"text":{"262":{}},"component":{}}],["devic",{"_index":302,"title":{},"name":{},"text":{"2":{},"19":{},"491":{},"542":{}},"component":{}}],["device’",{"_index":6589,"title":{},"name":{},"text":{"491":{}},"component":{}}],["df15",{"_index":1821,"title":{},"name":{},"text":{"37":{}},"component":{}}],["dgeneratebackuppoms=fals",{"_index":7115,"title":{},"name":{},"text":{"538":{}},"component":{}}],["dh",{"_index":3833,"title":{},"name":{},"text":{"165":{}},"component":{}}],["dhop_aes_encoder_key=\"${hop_aes_encoder_key",{"_index":7262,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_audit_folder=\"${hop_audit_fold",{"_index":7263,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_audit_folder=.\\audit",{"_index":1326,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["dhop_auto_create_config=i",{"_index":1329,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["dhop_config_folder=\"${hop_config_fold",{"_index":7264,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_log_level=\"${hop_log_level",{"_index":7265,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_password_encoder_plugin=\"${hop_password_encoder_plugin",{"_index":7266,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_platform_os=window",{"_index":1327,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["dhop_platform_runtime=conf",{"_index":1328,"title":{},"name":{},"text":{"19":{},"90":{},"150":{},"152":{}},"component":{}}],["dhop_platform_runtime=gui",{"_index":1344,"title":{},"name":{},"text":{"19":{},"41":{},"44":{}},"component":{}}],["dhop_platform_runtime=run",{"_index":1355,"title":{},"name":{},"text":{"19":{},"38":{},"151":{},"152":{}},"component":{}}],["dhop_platform_runtime=search",{"_index":1386,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["dhop_plugin_base_folders=\"${hop_plugin_base_fold",{"_index":7267,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_shared_jdbc_folders=\"${hop_shared_jdbc_fold",{"_index":7268,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dhop_web_theme=\"${hop_web_them",{"_index":7269,"title":{},"name":{},"text":{"543":{}},"component":{}}],["dialect",{"_index":4418,"title":{},"name":{},"text":{"238":{},"324":{},"325":{},"352":{}},"component":{}}],["dialog",{"_index":525,"title":{"24":{},"22-1":{}},"name":{"22":{},"24":{}},"text":{"5":{},"7":{},"9":{},"15":{},"16":{},"22":{},"23":{},"24":{},"26":{},"27":{},"32":{},"41":{},"52":{},"53":{},"54":{},"56":{},"76":{},"78":{},"79":{},"82":{},"83":{},"85":{},"92":{},"93":{},"94":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"153":{},"154":{},"204":{},"221":{},"270":{},"287":{},"292":{},"299":{},"305":{},"338":{},"359":{},"372":{},"373":{},"374":{},"387":{},"389":{},"394":{},"433":{},"468":{},"470":{},"471":{},"473":{},"483":{},"503":{},"509":{},"519":{},"520":{},"525":{},"529":{},"532":{}},"component":{}}],["dialogu",{"_index":3095,"title":{},"name":{},"text":{"93":{}},"component":{}}],["dialog’",{"_index":1632,"title":{},"name":{},"text":{"27":{}},"component":{}}],["dictionari",{"_index":5775,"title":{},"name":{},"text":{"305":{}},"component":{}}],["didn’t",{"_index":2610,"title":{},"name":{},"text":{"56":{},"186":{},"355":{}},"component":{}}],["diff",{"_index":1503,"title":{"285":{}},"name":{},"text":{"23":{},"30":{},"52":{},"81":{},"86":{},"285":{},"360":{},"537":{}},"component":{}}],["differ",{"_index":365,"title":{"50-6":{}},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"14":{},"20":{},"22":{},"25":{},"27":{},"29":{},"30":{},"31":{},"38":{},"46":{},"50":{},"52":{},"55":{},"56":{},"78":{},"81":{},"82":{},"84":{},"85":{},"90":{},"91":{},"94":{},"103":{},"105":{},"112":{},"151":{},"153":{},"157":{},"158":{},"159":{},"162":{},"163":{},"165":{},"166":{},"171":{},"174":{},"183":{},"205":{},"222":{},"227":{},"236":{},"237":{},"246":{},"247":{},"248":{},"251":{},"269":{},"274":{},"276":{},"284":{},"285":{},"287":{},"291":{},"292":{},"294":{},"297":{},"303":{},"309":{},"316":{},"318":{},"321":{},"337":{},"338":{},"345":{},"354":{},"356":{},"361":{},"363":{},"366":{},"370":{},"378":{},"381":{},"389":{},"394":{},"398":{},"428":{},"431":{},"433":{},"435":{},"450":{},"455":{},"456":{},"464":{},"468":{},"481":{},"490":{},"498":{},"506":{},"509":{},"512":{},"519":{},"520":{},"521":{},"528":{},"529":{},"530":{},"533":{},"534":{},"541":{},"542":{},"544":{}},"component":{}}],["differenti",{"_index":5411,"title":{},"name":{},"text":{"262":{},"289":{}},"component":{}}],["difficult",{"_index":2479,"title":{},"name":{},"text":{"56":{},"77":{},"528":{}},"component":{}}],["digest",{"_index":3943,"title":{},"name":{},"text":{"174":{},"538":{}},"component":{}}],["digit",{"_index":836,"title":{},"name":{},"text":{"7":{},"205":{},"217":{},"219":{},"234":{},"247":{},"248":{},"253":{},"254":{},"258":{},"267":{},"273":{},"277":{},"279":{},"316":{},"317":{},"331":{},"338":{},"358":{},"366":{},"367":{},"374":{},"383":{},"400":{}},"component":{}}],["digits_onli",{"_index":6027,"title":{},"name":{},"text":{"358":{}},"component":{}}],["dim_tabl",{"_index":4322,"title":{},"name":{},"text":{"227":{}},"component":{}}],["dimens",{"_index":1440,"title":{"227":{}},"name":{},"text":{"20":{},"52":{},"81":{},"86":{},"216":{},"227":{},"259":{},"481":{},"503":{}},"component":{}}],["dimensionlookup",{"_index":4295,"title":{},"name":{"227":{}},"text":{},"component":{}}],["dimensions.hwf",{"_index":6623,"title":{},"name":{},"text":{"511":{}},"component":{}}],["dimension’",{"_index":4296,"title":{},"name":{},"text":{"227":{}},"component":{}}],["din",{"_index":4115,"title":{},"name":{},"text":{"205":{}},"component":{}}],["diner",{"_index":4241,"title":{},"name":{},"text":{"219":{}},"component":{}}],["dir",{"_index":995,"title":{},"name":{},"text":{"8":{},"168":{},"489":{},"538":{}},"component":{}}],["dira",{"_index":6068,"title":{},"name":{},"text":{"366":{}},"component":{}}],["dirb",{"_index":6071,"title":{},"name":{},"text":{"366":{}},"component":{}}],["dirc",{"_index":6072,"title":{},"name":{},"text":{"366":{}},"component":{}}],["direct",{"_index":1264,"title":{"159":{},"166":{},"164-6":{},"166-1":{}},"name":{"159":{},"166":{}},"text":{"15":{},"56":{},"69":{},"78":{},"82":{},"83":{},"151":{},"152":{},"154":{},"159":{},"163":{},"164":{},"166":{},"167":{},"171":{},"206":{},"241":{},"270":{},"292":{},"303":{},"347":{},"348":{},"372":{},"389":{},"470":{},"499":{}},"component":{}}],["direct=tru",{"_index":5758,"title":{},"name":{},"text":{"303":{}},"component":{}}],["direct_num_work",{"_index":3844,"title":{},"name":{},"text":{"166":{}},"component":{}}],["directli",{"_index":121,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"22":{},"24":{},"34":{},"41":{},"54":{},"56":{},"92":{},"105":{},"159":{},"162":{},"168":{},"212":{},"218":{},"235":{},"271":{},"273":{},"287":{},"319":{},"330":{},"331":{},"332":{},"333":{},"334":{},"376":{},"404":{},"405":{},"410":{},"428":{},"430":{},"513":{},"519":{}},"component":{}}],["directori",{"_index":501,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"22":{},"25":{},"38":{},"41":{},"50":{},"56":{},"88":{},"92":{},"93":{},"95":{},"130":{},"152":{},"158":{},"161":{},"168":{},"203":{},"234":{},"250":{},"251":{},"252":{},"255":{},"262":{},"272":{},"273":{},"277":{},"278":{},"279":{},"313":{},"346":{},"347":{},"353":{},"366":{},"386":{},"387":{},"388":{},"429":{},"441":{},"457":{},"461":{},"462":{},"463":{},"464":{},"465":{},"481":{},"487":{},"488":{},"489":{},"499":{},"503":{},"504":{},"509":{},"514":{},"530":{},"534":{},"538":{}},"component":{}}],["directory/lib",{"_index":1239,"title":{},"name":{},"text":{"11":{}},"component":{}}],["directory/plugin",{"_index":3027,"title":{},"name":{},"text":{"88":{}},"component":{}}],["directory/plugins/databases/databas",{"_index":1228,"title":{},"name":{},"text":{"11":{}},"component":{}}],["dirti",{"_index":4399,"title":{},"name":{},"text":{"235":{}},"component":{}}],["disabl",{"_index":674,"title":{},"name":{},"text":{"7":{},"8":{},"23":{},"24":{},"27":{},"40":{},"43":{},"50":{},"76":{},"78":{},"81":{},"83":{},"103":{},"152":{},"154":{},"165":{},"167":{},"206":{},"216":{},"222":{},"227":{},"235":{},"290":{},"366":{},"367":{},"374":{},"377":{},"380":{},"493":{},"505":{}},"component":{}}],["disable/en",{"_index":1538,"title":{},"name":{},"text":{"24":{}},"component":{}}],["discard",{"_index":3455,"title":{},"name":{},"text":{"154":{},"167":{},"247":{},"288":{},"303":{},"498":{}},"component":{}}],["discount",{"_index":5008,"title":{},"name":{},"text":{"247":{}},"component":{}}],["discov",{"_index":1312,"title":{},"name":{},"text":{"18":{},"61":{},"233":{},"274":{},"337":{}},"component":{}}],["discuss",{"_index":1479,"title":{},"name":{},"text":{"23":{},"55":{},"291":{},"345":{}},"component":{}}],["diseas",{"_index":4491,"title":{},"name":{},"text":{"241":{}},"component":{}}],["dish",{"_index":4513,"title":{},"name":{},"text":{"241":{}},"component":{}}],["disk",{"_index":210,"title":{},"name":{},"text":{"1":{},"8":{},"165":{},"220":{},"272":{},"347":{},"405":{}},"component":{}}],["dispar",{"_index":5658,"title":{},"name":{},"text":{"291":{}},"component":{}}],["display",{"_index":1293,"title":{"469":{}},"name":{},"text":{"15":{},"22":{},"24":{},"27":{},"29":{},"32":{},"38":{},"41":{},"46":{},"47":{},"50":{},"53":{},"54":{},"78":{},"85":{},"99":{},"103":{},"152":{},"156":{},"234":{},"247":{},"250":{},"270":{},"273":{},"287":{},"291":{},"292":{},"313":{},"314":{},"316":{},"331":{},"366":{},"369":{},"370":{},"384":{},"441":{},"469":{},"481":{},"503":{},"541":{},"542":{}},"component":{}}],["display#getdefault",{"_index":7184,"title":{},"name":{},"text":{"541":{}},"component":{}}],["display.getdefault",{"_index":7177,"title":{"541-4":{}},"name":{},"text":{"541":{}},"component":{}}],["display_vers",{"_index":7119,"title":{},"name":{},"text":{"538":{}},"component":{}}],["dispos",{"_index":1260,"title":{},"name":{},"text":{"14":{},"18":{},"22":{},"433":{},"532":{},"542":{}},"component":{}}],["dissect",{"_index":5334,"title":{},"name":{},"text":{"248":{}},"component":{}}],["dist",{"_index":7060,"title":{},"name":{},"text":{"534":{}},"component":{}}],["distanc",{"_index":4132,"title":{},"name":{},"text":{"205":{},"213":{},"248":{}},"component":{}}],["distinct",{"_index":31,"title":{},"name":{},"text":{"1":{},"19":{},"44":{},"82":{},"202":{},"247":{},"262":{},"291":{},"297":{},"412":{},"418":{},"527":{}},"component":{}}],["distinguish",{"_index":5573,"title":{},"name":{},"text":{"276":{},"278":{}},"component":{}}],["distribut",{"_index":453,"title":{},"name":{},"text":{"5":{},"11":{},"24":{},"27":{},"36":{},"78":{},"80":{},"82":{},"90":{},"158":{},"163":{},"220":{},"228":{},"247":{},"275":{},"276":{},"280":{},"389":{},"429":{},"466":{},"485":{},"531":{},"533":{},"534":{}},"component":{}}],["dive",{"_index":1246,"title":{},"name":{},"text":{"13":{},"21":{},"151":{},"389":{}},"component":{}}],["divers",{"_index":1445,"title":{},"name":{},"text":{"20":{}},"component":{}}],["divid",{"_index":1304,"title":{},"name":{},"text":{"17":{},"82":{},"205":{},"247":{},"248":{},"275":{},"400":{}},"component":{}}],["dividend",{"_index":5001,"title":{},"name":{},"text":{"247":{}},"component":{}}],["divis",{"_index":2927,"title":{},"name":{},"text":{"82":{},"205":{},"247":{}},"component":{}}],["divisor",{"_index":5000,"title":{},"name":{},"text":{"247":{}},"component":{}}],["divisor/dividend",{"_index":5002,"title":{},"name":{},"text":{"247":{}},"component":{}}],["dj2uzyxizg646nxxcm8jd1bbvupvapmtpamwoteuwczljxkspii/lcdz5hy0v/tofsaohvmjdm5d",{"_index":2134,"title":{},"name":{},"text":{"42":{}},"component":{}}],["djava.compiler=non",{"_index":7045,"title":{},"name":{},"text":{"533":{}},"component":{}}],["djava.library.path=$libpath",{"_index":1963,"title":{},"name":{},"text":{"41":{}},"component":{}}],["djava.library.path=lib\\core;lib\\beam",{"_index":1325,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["dk",{"_index":4598,"title":{},"name":{},"text":{"241":{}},"component":{}}],["dl4j",{"_index":2997,"title":{},"name":{},"text":{"87":{}},"component":{}}],["dll",{"_index":3276,"title":{},"name":{},"text":{"130":{}},"component":{}}],["dml",{"_index":2394,"title":{},"name":{},"text":{"53":{},"54":{},"364":{}},"component":{}}],["dn",{"_index":5576,"title":{},"name":{},"text":{"277":{},"278":{}},"component":{}}],["dnewversion=x.xx",{"_index":7114,"title":{},"name":{},"text":{"538":{}},"component":{}}],["do",{"_index":761,"title":{"450":{}},"name":{},"text":{"7":{},"43":{},"76":{},"79":{},"100":{},"151":{},"152":{},"163":{},"228":{},"234":{},"239":{},"247":{},"299":{},"366":{},"367":{},"389":{},"433":{},"450":{},"528":{},"533":{}},"component":{}}],["doc",{"_index":1257,"title":{},"name":{},"text":{"14":{},"19":{},"24":{},"43":{},"50":{},"58":{},"63":{},"158":{},"159":{},"165":{},"167":{},"168":{},"183":{},"246":{},"247":{},"259":{},"260":{},"261":{},"298":{},"315":{},"351":{},"366":{},"431":{},"519":{}},"component":{}}],["docker",{"_index":444,"title":{"514":{},"41-7":{},"50-2":{},"50-7":{},"56-2":{},"431-2":{},"514-5":{},"527-4":{},"541-10":{}},"name":{"50":{},"514":{}},"text":{"5":{},"10":{},"25":{},"41":{},"50":{},"51":{},"56":{},"170":{},"431":{},"511":{},"513":{},"514":{},"517":{},"527":{},"540":{},"541":{},"543":{}},"component":{}}],["docker.io/apache/hop",{"_index":7165,"title":{},"name":{},"text":{"540":{}},"component":{}}],["docker.io/apache/hop:latest",{"_index":7163,"title":{},"name":{},"text":{"540":{}},"component":{}}],["docker.io/apache/hop:x.xx",{"_index":7162,"title":{},"name":{},"text":{"540":{}},"component":{}}],["docker.py:391",{"_index":2595,"title":{},"name":{},"text":{"56":{}},"component":{}}],["docker.sh",{"_index":6829,"title":{},"name":{},"text":{"527":{}},"component":{}}],["docker.typ",{"_index":2564,"title":{},"name":{},"text":{"56":{}},"component":{}}],["docker/create_hop_web_container.sh",{"_index":7200,"title":{},"name":{},"text":{"541":{},"543":{}},"component":{}}],["docker/dockerfil",{"_index":7161,"title":{},"name":{},"text":{"540":{}},"component":{}}],["docker/dockerfile.dataflowtempl",{"_index":7170,"title":{},"name":{},"text":{"540":{}},"component":{}}],["docker/dockerfile.web",{"_index":7164,"title":{},"name":{},"text":{"540":{}},"component":{}}],["docker_img_check",{"_index":6700,"title":{},"name":{},"text":{"514":{}},"component":{}}],["docker_img_check=$(dock",{"_index":6697,"title":{},"name":{},"text":{"514":{}},"component":{}}],["docker_url=\"unix://var/run/docker.sock",{"_index":2584,"title":{},"name":{},"text":{"56":{}},"component":{}}],["dockerfil",{"_index":2280,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["dockerhub",{"_index":7149,"title":{"540-2":{}},"name":{},"text":{},"component":{}}],["dockeroper",{"_index":2525,"title":{},"name":{},"text":{"56":{}},"component":{}}],["docs/english/welcome/index.html",{"_index":1593,"title":{},"name":{},"text":{"25":{}},"component":{}}],["docs/hop",{"_index":7116,"title":{},"name":{},"text":{"538":{}},"component":{}}],["document",{"_index":169,"title":{"292-6":{},"292-9":{},"292-10":{},"538-4":{}},"name":{},"text":{"1":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"11":{},"17":{},"25":{},"27":{},"38":{},"40":{},"41":{},"50":{},"56":{},"62":{},"91":{},"97":{},"99":{},"101":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"162":{},"163":{},"165":{},"183":{},"185":{},"227":{},"231":{},"235":{},"241":{},"246":{},"247":{},"250":{},"259":{},"273":{},"274":{},"275":{},"276":{},"290":{},"291":{},"292":{},"320":{},"324":{},"325":{},"366":{},"377":{},"382":{},"383":{},"389":{},"395":{},"427":{},"432":{},"433":{},"451":{},"466":{},"485":{},"508":{},"514":{},"530":{},"531":{},"536":{},"537":{},"538":{},"540":{}},"component":{}}],["document.json",{"_index":1886,"title":{},"name":{},"text":{"40":{}},"component":{}}],["documentationurl",{"_index":6954,"title":{},"name":{},"text":{"530":{}},"component":{}}],["doesn't",{"_index":3072,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["doesn\\'t",{"_index":3067,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["doesn’t",{"_index":206,"title":{"263-5":{}},"name":{},"text":{"1":{},"2":{},"45":{},"57":{},"71":{},"78":{},"83":{},"105":{},"158":{},"161":{},"163":{},"164":{},"216":{},"227":{},"232":{},"242":{},"247":{},"263":{},"308":{},"352":{},"377":{},"405":{},"432":{},"433":{},"446":{},"464":{},"509":{},"532":{},"533":{},"543":{}},"component":{}}],["dofn",{"_index":3840,"title":{},"name":{},"text":{"166":{}},"component":{}}],["dog",{"_index":4495,"title":{},"name":{},"text":{"241":{}},"component":{}}],["dollar",{"_index":4720,"title":{"247-150":{}},"name":{},"text":{"247":{}},"component":{}}],["dollar(\"190",{"_index":5169,"title":{},"name":{},"text":{"247":{}},"component":{}}],["dollar(\"190.89\";1",{"_index":5171,"title":{},"name":{},"text":{"247":{}},"component":{}}],["domain",{"_index":5408,"title":{},"name":{},"text":{"261":{},"467":{}},"component":{}}],["domainnam",{"_index":4536,"title":{},"name":{},"text":{"241":{}},"component":{}}],["done",{"_index":105,"title":{},"name":{},"text":{"1":{},"11":{},"13":{},"15":{},"20":{},"26":{},"29":{},"40":{},"55":{},"56":{},"78":{},"82":{},"85":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"154":{},"157":{},"158":{},"161":{},"163":{},"165":{},"223":{},"251":{},"268":{},"305":{},"320":{},"344":{},"363":{},"366":{},"371":{},"372":{},"404":{},"407":{},"457":{},"483":{},"492":{},"508":{},"514":{},"528":{},"529":{},"530":{},"533":{},"541":{},"544":{}},"component":{}}],["don’t",{"_index":620,"title":{},"name":{},"text":{"7":{},"9":{},"22":{},"56":{},"79":{},"84":{},"105":{},"163":{},"164":{},"170":{},"179":{},"181":{},"205":{},"206":{},"220":{},"227":{},"230":{},"234":{},"243":{},"245":{},"247":{},"250":{},"268":{},"280":{},"287":{},"295":{},"297":{},"309":{},"352":{},"355":{},"359":{},"364":{},"367":{},"378":{},"388":{},"395":{},"458":{},"461":{},"463":{},"464":{},"468":{},"511":{},"519":{},"525":{},"528":{},"530":{}},"component":{}}],["door",{"_index":5753,"title":{},"name":{},"text":{"303":{}},"component":{}}],["dorg.eclipse.jetty.level=debug",{"_index":1966,"title":{},"name":{},"text":{"41":{}},"component":{}}],["dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.stderrlog",{"_index":1965,"title":{},"name":{},"text":{"41":{}},"component":{}}],["dori",{"_index":2886,"title":{"113":{},"228":{}},"name":{"113":{}},"text":{"81":{},"113":{},"228":{}},"component":{}}],["dorisbulkload",{"_index":4325,"title":{},"name":{"228":{}},"text":{},"component":{}}],["dostounix",{"_index":6411,"title":{},"name":{"450":{}},"text":{},"component":{}}],["dot",{"_index":1154,"title":{},"name":{},"text":{"9":{},"27":{},"57":{},"234":{},"247":{},"273":{},"277":{},"279":{},"292":{},"311":{},"316":{},"338":{},"366":{},"376":{},"396":{},"465":{}},"component":{}}],["dotal",{"_index":5812,"title":{},"name":{},"text":{"316":{}},"component":{}}],["doubl",{"_index":1482,"title":{},"name":{},"text":{"23":{},"27":{},"29":{},"30":{},"31":{},"57":{},"78":{},"103":{},"130":{},"164":{},"205":{},"227":{},"243":{},"247":{},"248":{},"262":{},"270":{},"287":{},"298":{},"349":{},"366":{},"535":{}},"component":{}}],["doubli",{"_index":3484,"title":{},"name":{},"text":{"157":{}},"component":{}}],["doubt",{"_index":6127,"title":{},"name":{},"text":{"366":{},"518":{}},"component":{}}],["down",{"_index":195,"title":{"29-8":{}},"name":{},"text":{"1":{},"8":{},"9":{},"15":{},"16":{},"29":{},"35":{},"36":{},"54":{},"78":{},"84":{},"153":{},"154":{},"160":{},"161":{},"162":{},"167":{},"224":{},"235":{},"246":{},"247":{},"290":{},"291":{},"303":{},"309":{},"324":{},"337":{},"381":{},"397":{},"405":{},"481":{},"503":{},"525":{}},"component":{}}],["download",{"_index":497,"title":{"14":{},"14-1":{}},"name":{"14":{}},"text":{"5":{},"11":{},"14":{},"21":{},"50":{},"130":{},"158":{},"160":{},"161":{},"432":{},"465":{},"535":{},"537":{},"543":{}},"component":{}}],["downstream",{"_index":629,"title":{},"name":{},"text":{"7":{},"24":{},"246":{},"271":{},"273":{},"309":{},"344":{},"481":{}},"component":{}}],["dozen",{"_index":2252,"title":{},"name":{},"text":{"50":{}},"component":{}}],["dp",{"_index":3390,"title":{},"name":{},"text":{"152":{}},"component":{}}],["dproject_home=/hop/config/projects/sampl",{"_index":3593,"title":{},"name":{},"text":{"161":{}},"component":{}}],["dproject_home=/my/project/hom",{"_index":3902,"title":{},"name":{},"text":{"168":{}},"component":{}}],["dproject_home=/path/to/project",{"_index":3873,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["draft",{"_index":2839,"title":{},"name":{},"text":{"78":{},"103":{},"232":{},"464":{}},"component":{}}],["drag",{"_index":1281,"title":{},"name":{},"text":{"15":{},"16":{},"78":{},"270":{}},"component":{}}],["dragonbal",{"_index":4497,"title":{},"name":{},"text":{"241":{}},"component":{}}],["dramat",{"_index":4221,"title":{},"name":{},"text":{"216":{},"377":{},"433":{}},"component":{}}],["draw",{"_index":1621,"title":{"542-5":{}},"name":{},"text":{"27":{}},"component":{}}],["drawn",{"_index":1623,"title":{},"name":{},"text":{"27":{}},"component":{}}],["drill",{"_index":1646,"title":{"29-8":{}},"name":{},"text":{"29":{},"160":{},"161":{}},"component":{}}],["drive",{"_index":249,"title":{"101":{},"152-19":{}},"name":{"101":{},"149":{}},"text":{"2":{},"8":{},"27":{},"88":{},"101":{},"102":{},"149":{},"152":{},"260":{},"261":{},"322":{},"336":{},"372":{},"430":{}},"component":{}}],["driven",{"_index":221,"title":{"2-1":{}},"name":{},"text":{"2":{},"83":{},"177":{},"514":{}},"component":{}}],["driver",{"_index":430,"title":{"5-13":{},"117-1":{},"117-2":{},"130-2":{}},"name":{},"text":{"5":{},"7":{},"11":{},"50":{},"71":{},"94":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"154":{},"161":{},"168":{},"205":{},"294":{},"311":{},"315":{},"364":{},"425":{},"514":{},"543":{}},"component":{}}],["drool",{"_index":5863,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["drop",{"_index":1613,"title":{"492-3":{}},"name":{},"text":{"27":{},"153":{},"154":{},"270":{},"290":{},"291":{},"292":{},"303":{},"337":{},"381":{},"432":{},"437":{},"474":{},"475":{},"476":{},"492":{},"493":{}},"component":{}}],["dropbox",{"_index":975,"title":{"99":{}},"name":{"99":{}},"text":{"8":{},"27":{},"87":{},"99":{}},"component":{}}],["dropdown",{"_index":1680,"title":{},"name":{},"text":{"33":{},"83":{},"171":{},"247":{},"271":{},"273":{},"337":{},"363":{},"464":{},"512":{},"520":{}},"component":{}}],["drowze",{"_index":4435,"title":{},"name":{},"text":{"241":{}},"component":{}}],["ds/custom",{"_index":6699,"title":{},"name":{},"text":{"514":{}},"component":{}}],["dskiptests=tru",{"_index":7034,"title":{},"name":{},"text":{"533":{},"538":{}},"component":{}}],["dst",{"_index":4140,"title":{},"name":{},"text":{"205":{}},"component":{}}],["dstream",{"_index":3882,"title":{},"name":{},"text":{"168":{}},"component":{}}],["dtd",{"_index":4644,"title":{"451":{}},"name":{},"text":{"246":{},"381":{},"451":{}},"component":{}}],["dtdvalid",{"_index":6414,"title":{},"name":{"451":{}},"text":{},"component":{}}],["duckdb",{"_index":3202,"title":{"114":{}},"name":{"114":{}},"text":{"114":{}},"component":{}}],["due",{"_index":4261,"title":{},"name":{},"text":{"220":{},"247":{},"366":{},"381":{},"542":{}},"component":{}}],["duh",{"_index":1135,"title":{},"name":{},"text":{"9":{},"398":{}},"component":{}}],["dummi",{"_index":1049,"title":{"229":{},"452":{}},"name":{"229":{},"452":{}},"text":{"8":{},"42":{},"53":{},"54":{},"57":{},"68":{},"78":{},"81":{},"83":{},"86":{},"229":{},"380":{},"452":{},"505":{},"544":{}},"component":{}}],["dummy.setlocation(250",{"_index":7293,"title":{},"name":{},"text":{"544":{}},"component":{}}],["dummymeta",{"_index":7291,"title":{},"name":{},"text":{"544":{}},"component":{}}],["dummymeta.setlocation(250",{"_index":7328,"title":{},"name":{},"text":{"544":{}},"component":{}}],["dummyoper",{"_index":2563,"title":{},"name":{},"text":{"56":{}},"component":{}}],["dump",{"_index":4230,"title":{},"name":{},"text":{"217":{},"233":{},"234":{},"274":{},"367":{}},"component":{}}],["dumpfil",{"_index":6527,"title":{},"name":{},"text":{"471":{}},"component":{}}],["dune",{"_index":4498,"title":{},"name":{},"text":{"241":{}},"component":{}}],["duplic",{"_index":1674,"title":{},"name":{},"text":{"31":{},"50":{},"248":{},"271":{},"292":{},"295":{},"298":{},"346":{},"369":{},"370":{},"441":{},"530":{}},"component":{}}],["durabl",{"_index":3894,"title":{},"name":{},"text":{"168":{},"276":{}},"component":{}}],["durat",{"_index":1379,"title":{},"name":{},"text":{"19":{},"32":{},"38":{},"41":{},"55":{},"56":{},"76":{},"83":{},"85":{},"168":{},"179":{},"198":{},"202":{},"236":{},"275":{},"310":{},"379":{}},"component":{}}],["dure",{"_index":931,"title":{"82-1":{}},"name":{},"text":{"7":{},"24":{},"29":{},"38":{},"40":{},"53":{},"54":{},"58":{},"67":{},"70":{},"73":{},"76":{},"78":{},"83":{},"154":{},"160":{},"165":{},"169":{},"170":{},"205":{},"210":{},"219":{},"233":{},"234":{},"238":{},"247":{},"250":{},"263":{},"274":{},"275":{},"277":{},"278":{},"298":{},"309":{},"313":{},"366":{},"386":{},"388":{},"433":{},"466":{},"511":{},"514":{},"534":{},"544":{}},"component":{}}],["dutch",{"_index":4101,"title":{},"name":{},"text":{"205":{},"528":{}},"component":{}}],["dv",{"_index":3391,"title":{},"name":{},"text":{"152":{}},"component":{}}],["dynam",{"_index":1150,"title":{"230":{}},"name":{},"text":{"9":{},"27":{},"52":{},"66":{},"71":{},"81":{},"86":{},"107":{},"130":{},"165":{},"167":{},"230":{},"250":{},"277":{},"280":{},"287":{},"309":{},"394":{},"487":{},"488":{},"498":{}},"component":{}}],["dynamicsqlrow",{"_index":4336,"title":{},"name":{"230":{}},"text":{},"component":{}}],["dynamo",{"_index":6334,"title":{},"name":{},"text":{"429":{}},"component":{}}],["e",{"_index":766,"title":{},"name":{},"text":{"7":{},"30":{},"36":{},"38":{},"39":{},"41":{},"46":{},"47":{},"151":{},"152":{},"247":{},"321":{},"366":{},"389":{},"431":{},"464":{},"466":{},"481":{},"490":{},"541":{}},"component":{}}],["e.g",{"_index":549,"title":{},"name":{},"text":{"5":{},"7":{},"13":{},"23":{},"24":{},"27":{},"34":{},"37":{},"41":{},"42":{},"46":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"67":{},"68":{},"73":{},"77":{},"83":{},"84":{},"91":{},"92":{},"93":{},"94":{},"105":{},"114":{},"152":{},"161":{},"163":{},"170":{},"172":{},"177":{},"205":{},"216":{},"217":{},"220":{},"227":{},"230":{},"237":{},"238":{},"243":{},"244":{},"245":{},"246":{},"247":{},"250":{},"259":{},"263":{},"270":{},"273":{},"287":{},"298":{},"303":{},"309":{},"310":{},"315":{},"324":{},"335":{},"338":{},"349":{},"350":{},"360":{},"361":{},"366":{},"367":{},"376":{},"379":{},"383":{},"423":{},"442":{},"455":{},"466":{},"468":{},"478":{},"485":{},"502":{},"511":{},"514":{},"527":{},"531":{},"533":{},"542":{},"543":{},"546":{}},"component":{}}],["e.id",{"_index":6379,"title":{},"name":{},"text":{"433":{}},"component":{}}],["e164",{"_index":6011,"title":{},"name":{},"text":{"354":{}},"component":{}}],["e228",{"_index":1813,"title":{},"name":{},"text":{"37":{}},"component":{}}],["e24b4549",{"_index":2014,"title":{},"name":{},"text":{"41":{}},"component":{}}],["e28ca8",{"_index":742,"title":{},"name":{},"text":{"7":{}},"component":{}}],["e5.000,00",{"_index":3958,"title":{},"name":{},"text":{"178":{},"217":{},"258":{},"366":{},"367":{},"383":{}},"component":{}}],["e:ev",{"_index":6377,"title":{},"name":{},"text":{"433":{}},"component":{}}],["e=0",{"_index":1369,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{},"83":{}},"component":{}}],["each",{"_index":965,"title":{"55-1":{}},"name":{},"text":{"8":{},"9":{},"11":{},"15":{},"25":{},"41":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"76":{},"78":{},"79":{},"82":{},"84":{},"85":{},"88":{},"91":{},"93":{},"105":{},"153":{},"165":{},"171":{},"176":{},"177":{},"178":{},"179":{},"184":{},"186":{},"187":{},"204":{},"205":{},"207":{},"208":{},"216":{},"220":{},"223":{},"227":{},"231":{},"234":{},"238":{},"247":{},"248":{},"251":{},"262":{},"264":{},"270":{},"271":{},"273":{},"274":{},"275":{},"285":{},"287":{},"290":{},"291":{},"292":{},"294":{},"298":{},"304":{},"309":{},"310":{},"316":{},"323":{},"324":{},"325":{},"331":{},"346":{},"349":{},"350":{},"352":{},"360":{},"361":{},"363":{},"367":{},"374":{},"377":{},"378":{},"379":{},"381":{},"389":{},"392":{},"435":{},"450":{},"465":{},"467":{},"468":{},"483":{},"499":{},"503":{},"506":{},"509":{},"512":{},"521":{},"527":{},"530":{},"537":{},"542":{}},"component":{}}],["eager",{"_index":6742,"title":{},"name":{},"text":{"519":{}},"component":{}}],["earlier",{"_index":3497,"title":{},"name":{},"text":{"158":{},"160":{},"514":{}},"component":{}}],["earliest",{"_index":4035,"title":{},"name":{},"text":{"196":{},"227":{}},"component":{}}],["eas",{"_index":3927,"title":{},"name":{},"text":{"170":{},"503":{},"511":{}},"component":{}}],["easi",{"_index":281,"title":{},"name":{},"text":{"2":{},"5":{},"9":{},"14":{},"17":{},"20":{},"22":{},"23":{},"27":{},"50":{},"64":{},"76":{},"91":{},"114":{},"162":{},"163":{},"228":{},"246":{},"389":{},"398":{},"457":{},"528":{},"529":{},"530":{},"531":{},"544":{}},"component":{}}],["easier",{"_index":284,"title":{},"name":{},"text":{"2":{},"5":{},"9":{},"14":{},"81":{},"206":{},"228":{},"372":{},"395":{},"519":{},"530":{}},"component":{}}],["easiest",{"_index":1163,"title":{},"name":{},"text":{"9":{},"25":{},"151":{},"152":{},"158":{},"389":{},"392":{},"528":{},"544":{}},"component":{}}],["easili",{"_index":1676,"title":{},"name":{},"text":{"31":{},"50":{},"52":{},"56":{},"338":{},"347":{},"433":{},"466":{},"469":{},"533":{},"535":{}},"component":{}}],["east",{"_index":1112,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["eat",{"_index":1159,"title":{},"name":{},"text":{"9":{},"288":{},"396":{}},"component":{}}],["eaten",{"_index":5631,"title":{},"name":{},"text":{"288":{},"377":{}},"component":{}}],["ec",{"_index":3380,"title":{},"name":{},"text":{"152":{},"165":{}},"component":{}}],["echo",{"_index":6701,"title":{},"name":{},"text":{"514":{},"537":{}},"component":{}}],["eclips",{"_index":7058,"title":{},"name":{},"text":{"534":{},"541":{}},"component":{}}],["ecma",{"_index":5439,"title":{},"name":{},"text":{"270":{}},"component":{}}],["ecmascript",{"_index":5941,"title":{"337-6":{},"337-10":{}},"name":{},"text":{"337":{}},"component":{}}],["eco",{"_index":3024,"title":{},"name":{},"text":{"88":{}},"component":{}}],["ecosystem",{"_index":3791,"title":{},"name":{},"text":{"165":{},"167":{},"337":{}},"component":{}}],["ed",{"_index":3077,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["edat",{"_index":4649,"title":{"247-29":{}},"name":{},"text":{"247":{}},"component":{}}],["edate([date_field",{"_index":4805,"title":{},"name":{},"text":{"247":{}},"component":{}}],["edate([date_field],1",{"_index":4803,"title":{},"name":{},"text":{"247":{}},"component":{}}],["edate(start_d",{"_index":4802,"title":{},"name":{},"text":{"247":{}},"component":{}}],["edf0",{"_index":2015,"title":{},"name":{},"text":{"41":{}},"component":{}}],["edg",{"_index":301,"title":{},"name":{},"text":{"2":{},"154":{},"170":{},"433":{},"519":{}},"component":{}}],["edi",{"_index":2887,"title":{"231":{}},"name":{},"text":{"81":{},"86":{},"231":{}},"component":{}}],["edi2xml",{"_index":4338,"title":{},"name":{"231":{}},"text":{},"component":{}}],["edifact",{"_index":4343,"title":{},"name":{},"text":{"231":{}},"component":{}}],["edit",{"_index":522,"title":{"29-10":{},"93-4":{},"93-5":{},"338-5":{},"529-3":{}},"name":{},"text":{"5":{},"7":{},"10":{},"22":{},"23":{},"24":{},"29":{},"31":{},"78":{},"83":{},"90":{},"93":{},"103":{},"150":{},"152":{},"153":{},"154":{},"158":{},"160":{},"195":{},"200":{},"246":{},"248":{},"255":{},"270":{},"273":{},"278":{},"291":{},"309":{},"328":{},"332":{},"333":{},"334":{},"338":{},"374":{},"378":{},"386":{},"389":{},"439":{},"448":{},"454":{},"458":{},"466":{},"470":{},"471":{},"498":{},"513":{},"529":{},"540":{}},"component":{}}],["editor",{"_index":222,"title":{"2-2":{},"247-4":{},"529-3":{}},"name":{"80":{}},"text":{"2":{},"7":{},"23":{},"24":{},"27":{},"29":{},"30":{},"79":{},"84":{},"246":{},"247":{},"297":{},"529":{},"533":{}},"component":{}}],["editor’",{"_index":2853,"title":{},"name":{},"text":{"80":{}},"component":{}}],["edsl/ha4mysx1/5kvatzfmzvzg+z2cqftg/2xc4wiz+8hvvt4bp2lucmwtizffyxo+hsd1hmc3/p",{"_index":2128,"title":{},"name":{},"text":{"42":{}},"component":{}}],["educ",{"_index":4500,"title":{},"name":{},"text":{"241":{}},"component":{}}],["educationalattain",{"_index":4487,"title":{},"name":{},"text":{"241":{}},"component":{}}],["ee",{"_index":6731,"title":{},"name":{},"text":{"518":{},"519":{}},"component":{}}],["ee02a435fbb9",{"_index":2000,"title":{},"name":{},"text":{"41":{}},"component":{}}],["effect",{"_index":181,"title":{},"name":{},"text":{"1":{},"15":{},"57":{},"167":{},"208":{},"247":{},"400":{},"405":{},"542":{},"544":{}},"component":{}}],["effici",{"_index":788,"title":{},"name":{},"text":{"7":{},"159":{},"164":{},"166":{},"167":{},"228":{}},"component":{}}],["effort",{"_index":2250,"title":{},"name":{},"text":{"50":{},"528":{}},"component":{}}],["efhlp",{"_index":2200,"title":{},"name":{},"text":{"46":{}},"component":{}}],["eg",{"_index":592,"title":{},"name":{},"text":{"5":{},"7":{},"94":{},"130":{},"152":{},"365":{},"424":{},"503":{}},"component":{}}],["ek",{"_index":3660,"title":{},"name":{},"text":{"162":{}},"component":{}}],["el",{"_index":3381,"title":{},"name":{},"text":{"152":{}},"component":{}}],["elaps",{"_index":3898,"title":{},"name":{},"text":{"168":{}},"component":{}}],["elast",{"_index":3659,"title":{},"name":{},"text":{"162":{}},"component":{}}],["eleg",{"_index":2435,"title":{},"name":{},"text":{"55":{}},"component":{}}],["element",{"_index":1298,"title":{"31-4":{},"37-6":{},"37-7":{},"37-8":{},"37-9":{}},"name":{},"text":{"16":{},"25":{},"29":{},"31":{},"37":{},"52":{},"166":{},"167":{},"168":{},"178":{},"183":{},"231":{},"233":{},"246":{},"247":{},"250":{},"273":{},"274":{},"279":{},"291":{},"346":{},"377":{},"381":{},"382":{},"383":{},"386":{},"514":{},"532":{}},"component":{}}],["elementari",{"_index":3435,"title":{},"name":{},"text":{"154":{}},"component":{}}],["elementnam",{"_index":6271,"title":{},"name":{},"text":{"383":{}},"component":{}}],["elements.hpl",{"_index":5521,"title":{},"name":{},"text":{"273":{}},"component":{}}],["elements/attribut",{"_index":6251,"title":{},"name":{},"text":{"381":{}},"component":{}}],["elimin",{"_index":2251,"title":{},"name":{},"text":{"50":{},"85":{},"227":{},"381":{}},"component":{}}],["else’",{"_index":7054,"title":{},"name":{},"text":{"533":{}},"component":{}}],["em",{"_index":768,"title":{},"name":{},"text":{"7":{},"152":{}},"component":{}}],["email",{"_index":127,"title":{"232":{},"280-6":{},"466-5":{}},"name":{},"text":{"1":{},"13":{},"78":{},"81":{},"86":{},"232":{},"235":{},"259":{},"260":{},"261":{},"280":{},"291":{},"404":{},"410":{},"464":{},"466":{},"467":{},"538":{}},"component":{}}],["email_on_failur",{"_index":2570,"title":{},"name":{},"text":{"56":{}},"component":{}}],["email_on_retri",{"_index":2571,"title":{},"name":{},"text":{"56":{}},"component":{}}],["emailaddress",{"_index":4534,"title":{},"name":{},"text":{"241":{}},"component":{}}],["emailinput",{"_index":4344,"title":{},"name":{"232":{}},"text":{},"component":{}}],["emails[0",{"_index":5653,"title":{},"name":{},"text":{"291":{}},"component":{}}],["emails[].send",{"_index":5654,"title":{},"name":{},"text":{"291":{}},"component":{}}],["email’",{"_index":5598,"title":{},"name":{},"text":{"280":{}},"component":{}}],["emb",{"_index":5605,"title":{},"name":{},"text":{"280":{},"345":{}},"component":{}}],["embarrassingli",{"_index":3752,"title":{},"name":{},"text":{"163":{}},"component":{}}],["embbed",{"_index":3197,"title":{},"name":{},"text":{"112":{}},"component":{}}],["embed",{"_index":2526,"title":{"167-4":{},"168-6":{},"280-8":{}},"name":{},"text":{"56":{},"112":{},"160":{},"167":{},"168":{},"280":{},"316":{},"466":{}},"component":{}}],["embrac",{"_index":5827,"title":{},"name":{},"text":{"319":{}},"component":{}}],["emiss",{"_index":3863,"title":{},"name":{},"text":{"167":{}},"component":{}}],["employe",{"_index":4832,"title":{},"name":{},"text":{"247":{}},"component":{}}],["empti",{"_index":786,"title":{"226":{},"459":{}},"name":{},"text":{"7":{},"24":{},"41":{},"42":{},"56":{},"63":{},"78":{},"79":{},"81":{},"83":{},"86":{},"90":{},"103":{},"133":{},"150":{},"152":{},"165":{},"166":{},"167":{},"168":{},"189":{},"201":{},"205":{},"208":{},"213":{},"214":{},"220":{},"223":{},"226":{},"227":{},"231":{},"233":{},"234":{},"235":{},"247":{},"250":{},"263":{},"273":{},"275":{},"279":{},"287":{},"289":{},"291":{},"298":{},"299":{},"301":{},"313":{},"315":{},"316":{},"317":{},"322":{},"331":{},"342":{},"344":{},"346":{},"352":{},"354":{},"366":{},"367":{},"375":{},"382":{},"383":{},"386":{},"389":{},"400":{},"441":{},"443":{},"446":{},"459":{},"468":{},"481":{},"485":{},"489":{},"490":{},"499":{},"544":{}},"component":{}}],["empty/stat",{"_index":3758,"title":{},"name":{},"text":{"163":{}},"component":{}}],["emptydir",{"_index":3692,"title":{},"name":{},"text":{"162":{}},"component":{}}],["emptyfield_",{"_index":4259,"title":{},"name":{},"text":{"220":{},"366":{}},"component":{}}],["en",{"_index":4600,"title":{},"name":{},"text":{"241":{}},"component":{}}],["en/english",{"_index":6233,"title":{},"name":{},"text":{"375":{}},"component":{}}],["en_u",{"_index":6868,"title":{},"name":{},"text":{"528":{}},"component":{}}],["enabl",{"_index":172,"title":{"41-6":{}},"name":{},"text":{"1":{},"2":{},"7":{},"8":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"37":{},"38":{},"40":{},"41":{},"43":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"67":{},"68":{},"73":{},"76":{},"78":{},"79":{},"85":{},"90":{},"103":{},"130":{},"151":{},"152":{},"154":{},"158":{},"159":{},"165":{},"167":{},"168":{},"169":{},"170":{},"173":{},"177":{},"178":{},"186":{},"187":{},"206":{},"211":{},"215":{},"216":{},"219":{},"220":{},"221":{},"222":{},"227":{},"232":{},"234":{},"235":{},"236":{},"242":{},"243":{},"248":{},"251":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"268":{},"270":{},"274":{},"277":{},"278":{},"280":{},"283":{},"289":{},"290":{},"291":{},"292":{},"297":{},"298":{},"305":{},"309":{},"313":{},"316":{},"319":{},"326":{},"331":{},"338":{},"347":{},"352":{},"355":{},"363":{},"364":{},"366":{},"367":{},"374":{},"376":{},"381":{},"382":{},"383":{},"389":{},"405":{},"439":{},"444":{},"447":{},"448":{},"449":{},"461":{},"462":{},"463":{},"464":{},"466":{},"487":{},"488":{},"489":{},"491":{},"492":{},"493":{},"500":{},"501":{},"503":{},"509":{},"510":{},"511":{},"514":{},"543":{}},"component":{}}],["enable/dis",{"_index":1699,"title":{},"name":{},"text":{"36":{}},"component":{}}],["encapsul",{"_index":3982,"title":{},"name":{},"text":{"184":{},"427":{},"433":{}},"component":{}}],["enclos",{"_index":4026,"title":{},"name":{},"text":{"195":{},"200":{},"205":{},"217":{},"366":{},"367":{},"471":{},"472":{}},"component":{}}],["enclosur",{"_index":914,"title":{},"name":{},"text":{"7":{},"59":{},"195":{},"200":{},"217":{},"220":{},"243":{},"289":{},"311":{},"349":{},"366":{},"367":{},"471":{},"472":{}},"component":{}}],["encod",{"_index":212,"title":{"157":{},"183":{},"209":{}},"name":{"183":{},"426":{}},"text":{"1":{},"7":{},"42":{},"77":{},"81":{},"86":{},"94":{},"157":{},"166":{},"178":{},"180":{},"183":{},"205":{},"209":{},"220":{},"233":{},"234":{},"247":{},"248":{},"250":{},"264":{},"274":{},"279":{},"280":{},"289":{},"303":{},"316":{},"338":{},"346":{},"352":{},"355":{},"366":{},"367":{},"368":{},"381":{},"382":{},"383":{},"405":{},"426":{},"427":{},"461":{},"463":{},"466":{},"504":{},"529":{},"543":{}},"component":{}}],["encount",{"_index":2446,"title":{},"name":{},"text":{"55":{},"82":{},"167":{},"234":{},"298":{},"346":{},"359":{},"366":{},"495":{}},"component":{}}],["encr",{"_index":2194,"title":{},"name":{},"text":{"44":{},"525":{}},"component":{}}],["encrypt",{"_index":17,"title":{"44":{},"307":{},"478":{},"19-3":{},"77-3":{},"157-5":{}},"name":{"44":{},"412":{}},"text":{"1":{},"19":{},"41":{},"44":{},"49":{},"77":{},"81":{},"86":{},"130":{},"154":{},"157":{},"165":{},"280":{},"306":{},"307":{},"412":{},"418":{},"478":{},"485":{},"525":{}},"component":{}}],["encrypt.bat",{"_index":1342,"title":{},"name":{},"text":{"19":{},"44":{}},"component":{}}],["encrypt.sh",{"_index":1348,"title":{},"name":{},"text":{"19":{},"44":{},"157":{}},"component":{}}],["end",{"_index":379,"title":{"482":{},"55-14":{}},"name":{"482":{}},"text":{"2":{},"21":{},"24":{},"41":{},"46":{},"50":{},"53":{},"54":{},"55":{},"56":{},"67":{},"73":{},"76":{},"78":{},"82":{},"88":{},"103":{},"105":{},"160":{},"161":{},"162":{},"163":{},"169":{},"202":{},"205":{},"227":{},"228":{},"232":{},"233":{},"235":{},"247":{},"256":{},"259":{},"270":{},"296":{},"297":{},"298":{},"303":{},"310":{},"312":{},"316":{},"324":{},"325":{},"331":{},"337":{},"357":{},"364":{},"366":{},"367":{},"368":{},"374":{},"379":{},"381":{},"383":{},"437":{},"447":{},"450":{},"453":{},"461":{},"465":{},"466":{},"470":{},"482":{},"483":{},"485":{},"487":{},"488":{},"490":{},"510":{},"524":{},"530":{},"531":{},"536":{},"540":{}},"component":{}}],["end=start+count",{"_index":5956,"title":{},"name":{},"text":{"337":{}},"component":{}}],["end_dag",{"_index":2582,"title":{},"name":{},"text":{"56":{}},"component":{}}],["end_dat",{"_index":4829,"title":{},"name":{},"text":{"247":{}},"component":{}}],["end_date=20230507t135440",{"_index":2606,"title":{},"name":{},"text":{"56":{}},"component":{}}],["end_docu",{"_index":6258,"title":{},"name":{},"text":{"381":{}},"component":{}}],["end_el",{"_index":6255,"title":{},"name":{},"text":{"381":{}},"component":{}}],["end_loop",{"_index":2464,"title":{},"name":{},"text":{"55":{},"483":{}},"component":{}}],["enddat",{"_index":4791,"title":{},"name":{},"text":{"247":{}},"component":{}}],["endeavour",{"_index":358,"title":{},"name":{},"text":{"2":{}},"component":{}}],["endocrinolog",{"_index":5462,"title":{},"name":{},"text":{"270":{}},"component":{}}],["endofpipelinedelta",{"_index":5712,"title":{},"name":{},"text":{"296":{}},"component":{}}],["endofworkflowdelta",{"_index":5714,"title":{},"name":{},"text":{"296":{}},"component":{}}],["endpoint",{"_index":1297,"title":{},"name":{},"text":{"16":{},"42":{},"61":{}},"component":{}}],["eneabl",{"_index":6266,"title":{},"name":{},"text":{"382":{}},"component":{}}],["enforc",{"_index":1122,"title":{},"name":{},"text":{"9":{},"93":{},"152":{},"166":{},"284":{},"395":{}},"component":{}}],["enforcingexecutioninhom",{"_index":3047,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["eng:a",{"_index":6073,"title":{},"name":{},"text":{"366":{}},"component":{}}],["engin",{"_index":318,"title":{"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"510":{},"511":{},"170-1":{},"172-2":{},"173-2":{},"174-2":{},"175-2":{},"176-2":{},"177-2":{},"178-2":{},"179-2":{},"180-2":{},"181-2":{},"182-2":{},"183-2":{},"184-2":{},"185-2":{},"186-2":{},"187-2":{},"188-2":{},"189-2":{},"190-2":{},"191-2":{},"192-2":{},"193-2":{},"194-2":{},"195-2":{},"196-2":{},"197-2":{},"198-2":{},"199-2":{},"200-2":{},"201-2":{},"202-2":{},"203-2":{},"204-2":{},"205-2":{},"206-2":{},"207-2":{},"208-2":{},"209-2":{},"210-2":{},"211-2":{},"212-2":{},"213-2":{},"214-2":{},"215-2":{},"216-2":{},"217-2":{},"218-2":{},"219-2":{},"220-2":{},"221-2":{},"222-2":{},"223-2":{},"224-2":{},"225-2":{},"226-2":{},"227-2":{},"228-2":{},"229-2":{},"230-2":{},"231-2":{},"232-2":{},"233-2":{},"234-2":{},"235-2":{},"236-2":{},"237-2":{},"238-2":{},"239-2":{},"240-2":{},"241-2":{},"242-2":{},"243-2":{},"244-2":{},"245-2":{},"246-2":{},"247-2":{},"248-2":{},"249-2":{},"250-2":{},"251-2":{},"252-2":{},"253-2":{},"254-2":{},"255-2":{},"256-2":{},"257-2":{},"258-2":{},"259-2":{},"260-2":{},"261-2":{},"262-2":{},"263-2":{},"264-2":{},"265-2":{},"266-2":{},"267-2":{},"268-2":{},"269-2":{},"270-2":{},"271-2":{},"272-2":{},"273-4":{},"274-2":{},"275-2":{},"276-2":{},"277-2":{},"278-2":{},"279-2":{},"280-2":{},"281-2":{},"282-2":{},"283-2":{},"284-2":{},"285-2":{},"286-2":{},"287-2":{},"288-2":{},"289-2":{},"290-2":{},"291-2":{},"292-2":{},"293-2":{},"294-2":{},"295-2":{},"296-2":{},"297-2":{},"298-2":{},"299-2":{},"300-2":{},"301-2":{},"302-2":{},"303-2":{},"304-2":{},"305-2":{},"306-2":{},"307-2":{},"308-2":{},"309-2":{},"310-2":{},"311-2":{},"312-2":{},"313-2":{},"314-2":{},"315-2":{},"316-2":{},"317-2":{},"318-2":{},"319-3":{},"320-2":{},"321-2":{},"322-2":{},"323-2":{},"324-2":{},"325-2":{},"326-2":{},"330-2":{},"331-2":{},"332-2":{},"333-2":{},"334-2":{},"335-2":{},"336-2":{},"337-2":{},"338-2":{},"339-2":{},"340-2":{},"341-2":{},"342-2":{},"343-2":{},"344-2":{},"345-2":{},"346-2":{},"347-2":{},"348-2":{},"349-2":{},"350-2":{},"351-2":{},"352-2":{},"353-2":{},"354-2":{},"355-2":{},"356-2":{},"357-2":{},"358-2":{},"359-2":{},"360-2":{},"361-2":{},"362-2":{},"363-2":{},"364-2":{},"365-2":{},"366-2":{},"367-2":{},"368-2":{},"369-2":{},"370-2":{},"371-2":{},"372-2":{},"373-2":{},"374-2":{},"375-2":{},"376-1":{},"377-2":{},"378-2":{},"379-2":{},"380-2":{},"381-2":{},"382-2":{},"383-2":{},"384-2":{},"385-2":{},"386-2":{},"387-2":{},"510-1":{},"511-1":{},"518-3":{},"525-2":{}},"name":{"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"510":{},"511":{}},"text":{"2":{},"7":{},"15":{},"19":{},"20":{},"37":{},"38":{},"40":{},"41":{},"43":{},"55":{},"56":{},"64":{},"69":{},"71":{},"74":{},"83":{},"85":{},"87":{},"88":{},"104":{},"151":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"167":{},"168":{},"169":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"389":{},"429":{},"453":{},"483":{},"491":{},"494":{},"510":{},"511":{},"512":{},"518":{},"519":{},"525":{},"527":{},"530":{},"532":{},"534":{},"541":{},"544":{}},"component":{}}],["engine\",\"dataprofile\":\"first",{"_index":1743,"title":{},"name":{},"text":{"37":{}},"component":{}}],["engine\",\"description\":\"thi",{"_index":1754,"title":{},"name":{},"text":{"37":{}},"component":{}}],["engine/src/main/resources/hop",{"_index":6906,"title":{},"name":{},"text":{"529":{}},"component":{}}],["engine/src/resourc",{"_index":6948,"title":{},"name":{},"text":{"530":{}},"component":{}}],["enginerunconfiguration\":{\"local\":{\"feedback_size\":\"50000\",\"sample_size\":\"1000\",\"sample_type_in_gui\":\"none\",\"wait_time\":\"2\",\"rowset_size\":\"10000\",\"safe_mode\":false,\"show_feedback\":false,\"topo_sort\":false,\"gather_metrics\":false,\"transactional\":false}},\"defaultselection\":false,\"configurationvariables\":[],\"name\":\"local\",\"description\":\"run",{"_index":1742,"title":{},"name":{},"text":{"37":{}},"component":{}}],["english",{"_index":1642,"title":{},"name":{},"text":{"27":{},"248":{},"433":{},"528":{}},"component":{}}],["enhanc",{"_index":2888,"title":{"233":{}},"name":{},"text":{"81":{},"86":{},"227":{},"233":{},"287":{}},"component":{}}],["enhancedjsonoutput",{"_index":4353,"title":{},"name":{"233":{}},"text":{},"component":{}}],["enough",{"_index":4288,"title":{},"name":{},"text":{"222":{},"298":{},"304":{},"372":{},"400":{},"433":{},"531":{}},"component":{}}],["enqueu",{"_index":4000,"title":{},"name":{},"text":{"186":{}},"component":{}}],["enqueuedtim",{"_index":4007,"title":{},"name":{},"text":{"186":{}},"component":{}}],["enrich",{"_index":101,"title":{},"name":{},"text":{"1":{},"13":{},"20":{},"52":{},"78":{},"404":{},"407":{},"409":{}},"component":{}}],["enrout",{"_index":4243,"title":{},"name":{},"text":{"219":{}},"component":{}}],["ensur",{"_index":2928,"title":{},"name":{},"text":{"82":{},"130":{},"154":{},"159":{},"164":{},"166":{},"169":{},"227":{},"247":{},"270":{},"372":{},"381":{},"479":{},"483":{},"530":{},"542":{}},"component":{}}],["enter",{"_index":703,"title":{},"name":{},"text":{"7":{},"15":{},"16":{},"22":{},"24":{},"36":{},"50":{},"62":{},"78":{},"97":{},"98":{},"99":{},"100":{},"101":{},"204":{},"223":{},"227":{},"246":{},"247":{},"253":{},"254":{},"258":{},"259":{},"270":{},"271":{},"272":{},"273":{},"275":{},"276":{},"279":{},"280":{},"282":{},"287":{},"291":{},"292":{},"309":{},"316":{},"319":{},"324":{},"325":{},"327":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"346":{},"359":{},"364":{},"372":{},"373":{},"376":{},"381":{},"420":{},"437":{},"466":{},"473":{},"475":{},"481":{},"487":{},"488":{},"490":{},"499":{},"520":{}},"component":{}}],["enterpris",{"_index":6596,"title":{},"name":{},"text":{"492":{}},"component":{}}],["entir",{"_index":607,"title":{},"name":{},"text":{"5":{},"7":{},"18":{},"24":{},"64":{},"79":{},"235":{},"243":{},"247":{},"251":{},"273":{},"292":{},"316":{},"355":{},"366":{},"368":{},"527":{},"543":{}},"component":{}}],["entiti",{"_index":5423,"title":{},"name":{},"text":{"264":{},"298":{},"345":{},"384":{},"507":{}},"component":{}}],["entity_declar",{"_index":6261,"title":{},"name":{},"text":{"381":{}},"component":{}}],["entity_refer",{"_index":6259,"title":{},"name":{},"text":{"381":{}},"component":{}}],["entri",{"_index":524,"title":{},"name":{},"text":{"5":{},"7":{},"98":{},"99":{},"100":{},"101":{},"160":{},"161":{},"222":{},"227":{},"291":{},"292":{},"297":{},"298":{},"337":{},"338":{},"481":{},"518":{},"519":{},"520":{},"528":{}},"component":{}}],["entryclass",{"_index":3699,"title":{},"name":{},"text":{"162":{}},"component":{}}],["entrypoint",{"_index":6633,"title":{"514-7":{}},"name":{},"text":{"514":{}},"component":{}}],["enum",{"_index":6913,"title":{},"name":{},"text":{"529":{}},"component":{}}],["env",{"_index":1573,"title":{},"name":{},"text":{"25":{},"46":{},"50":{},"56":{},"90":{},"150":{},"152":{},"162":{},"514":{},"541":{}},"component":{}}],["env.java.opt",{"_index":3872,"title":{},"name":{},"text":{"167":{}},"component":{}}],["env_vari",{"_index":2613,"title":{},"name":{},"text":{"56":{}},"component":{}}],["env_variable}.0",{"_index":2625,"title":{},"name":{},"text":{"56":{}},"component":{}}],["enviro",{"_index":3050,"title":{},"name":{},"text":{"90":{}},"component":{}}],["environ",{"_index":4,"title":{"90":{},"91":{},"93":{},"389":{},"533":{},"1-3":{},"2-6":{},"5-5":{},"5-6":{},"5-7":{},"5-8":{},"5-12":{},"7-12":{},"7-17":{},"13-3":{},"25-2":{},"50-6":{},"90-6":{},"90-9":{},"90-10":{},"90-11":{},"91-3":{},"93-2":{},"93-3":{},"93-5":{},"94-3":{},"150-2":{},"150-3":{},"150-4":{},"152-9":{},"152-10":{},"152-11":{},"389-10":{},"389-13":{},"389-14":{},"389-15":{},"402-1":{},"513-1":{},"514-4":{}},"name":{"93":{},"401":{},"402":{},"533":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"13":{},"17":{},"18":{},"19":{},"20":{},"25":{},"26":{},"27":{},"36":{},"37":{},"38":{},"39":{},"41":{},"44":{},"45":{},"46":{},"47":{},"50":{},"53":{},"54":{},"56":{},"80":{},"87":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"100":{},"105":{},"150":{},"151":{},"152":{},"154":{},"157":{},"158":{},"160":{},"161":{},"162":{},"164":{},"165":{},"167":{},"168":{},"196":{},"197":{},"256":{},"258":{},"275":{},"276":{},"298":{},"315":{},"388":{},"389":{},"390":{},"395":{},"398":{},"401":{},"402":{},"408":{},"411":{},"413":{},"415":{},"416":{},"418":{},"420":{},"422":{},"426":{},"433":{},"441":{},"465":{},"478":{},"481":{},"501":{},"510":{},"514":{},"519":{},"526":{},"527":{},"528":{},"533":{},"541":{},"543":{}},"component":{}}],["environment(",{"_index":7041,"title":{},"name":{},"text":{"533":{}},"component":{}}],["environment.json",{"_index":3054,"title":{},"name":{},"text":{"90":{}},"component":{}}],["environment/project",{"_index":6729,"title":{},"name":{},"text":{"518":{}},"component":{}}],["environment/workflow",{"_index":691,"title":{},"name":{},"text":{"7":{}},"component":{}}],["environment_home}/input/sourc",{"_index":713,"title":{},"name":{},"text":{"7":{}},"component":{}}],["environmentconfig",{"_index":3051,"title":{},"name":{},"text":{"90":{}},"component":{}}],["environmentconfigfilenam",{"_index":3053,"title":{},"name":{},"text":{"90":{}},"component":{}}],["environmentfold",{"_index":3055,"title":{},"name":{},"text":{"90":{}},"component":{}}],["environmentmandatori",{"_index":3032,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["environmentnam",{"_index":1715,"title":{},"name":{},"text":{"37":{}},"component":{}}],["environmentsubstitut",{"_index":7006,"title":{},"name":{},"text":{"532":{}},"component":{}}],["environmentutils.getinstance().isweb",{"_index":7176,"title":{"541-2":{}},"name":{},"text":{},"component":{}}],["environment’",{"_index":3094,"title":{},"name":{},"text":{"93":{}},"component":{}}],["eof",{"_index":4636,"title":{},"name":{},"text":{"246":{}},"component":{}}],["eomonth",{"_index":4650,"title":{"247-30":{}},"name":{},"text":{"247":{}},"component":{}}],["eomonth([date_field]],1",{"_index":4808,"title":{},"name":{},"text":{"247":{}},"component":{}}],["eomonth(start_d",{"_index":4807,"title":{},"name":{},"text":{"247":{}},"component":{}}],["ep",{"_index":3392,"title":{},"name":{},"text":{"152":{}},"component":{}}],["ephemer",{"_index":3663,"title":{},"name":{},"text":{"162":{}},"component":{}}],["epoc",{"_index":5763,"title":{},"name":{},"text":{"304":{},"305":{}},"component":{}}],["epoch",{"_index":4750,"title":{},"name":{},"text":{"247":{}},"component":{}}],["equal",{"_index":4095,"title":{},"name":{},"text":{"205":{},"222":{},"227":{},"247":{},"275":{},"284":{},"291":{},"301":{},"318":{},"355":{},"360":{},"453":{},"454":{},"455":{},"456":{},"464":{},"490":{}},"component":{}}],["equal/etc",{"_index":6583,"title":{},"name":{},"text":{"490":{}},"component":{}}],["equal/non",{"_index":6582,"title":{},"name":{},"text":{"490":{}},"component":{}}],["equals(\"foo",{"_index":6464,"title":{},"name":{},"text":{"453":{}},"component":{}}],["equip",{"_index":3457,"title":{},"name":{},"text":{"154":{}},"component":{}}],["equival",{"_index":2393,"title":{},"name":{},"text":{"53":{},"54":{},"168":{},"247":{},"364":{}},"component":{}}],["eras",{"_index":5759,"title":{},"name":{},"text":{"303":{}},"component":{}}],["erjht1aznxdno2jqskq1r4ekbcqrcwgesgnhu6f7jh9ckhyk5grq5ryyk6bprgfjm8diiykv52nb",{"_index":2137,"title":{},"name":{},"text":{"42":{}},"component":{}}],["errcnt",{"_index":6185,"title":{},"name":{},"text":{"372":{}},"component":{}}],["errmsg",{"_index":6183,"title":{},"name":{},"text":{"372":{}},"component":{}}],["error",{"_index":128,"title":{"79-1":{},"168-7":{},"234-7":{},"247-57":{},"275-10":{},"366-7":{},"372-6":{}},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"13":{},"24":{},"29":{},"32":{},"37":{},"38":{},"41":{},"55":{},"56":{},"75":{},"76":{},"78":{},"79":{},"83":{},"84":{},"85":{},"93":{},"102":{},"103":{},"104":{},"105":{},"130":{},"154":{},"167":{},"168":{},"169":{},"172":{},"189":{},"219":{},"222":{},"232":{},"234":{},"235":{},"237":{},"240":{},"244":{},"247":{},"250":{},"251":{},"256":{},"258":{},"264":{},"270":{},"273":{},"275":{},"298":{},"303":{},"309":{},"310":{},"311":{},"313":{},"316":{},"326":{},"329":{},"330":{},"332":{},"333":{},"334":{},"337":{},"338":{},"341":{},"346":{},"350":{},"361":{},"364":{},"365":{},"366":{},"369":{},"370":{},"372":{},"374":{},"376":{},"378":{},"379":{},"380":{},"386":{},"389":{},"404":{},"410":{},"431":{},"432":{},"442":{},"448":{},"450":{},"453":{},"462":{},"466":{},"468":{},"470":{},"477":{},"478":{},"481":{},"482":{},"484":{},"495":{},"499":{},"502":{},"503":{},"505":{},"510":{},"514":{},"544":{}},"component":{}}],["error_pipelin",{"_index":5472,"title":{},"name":{},"text":{"270":{},"337":{}},"component":{}}],["errorhandl",{"_index":2842,"title":{},"name":{"79":{}},"text":{"536":{}},"component":{}}],["errorpath",{"_index":6191,"title":{},"name":{},"text":{"372":{}},"component":{}}],["es",{"_index":3255,"title":{"126":{}},"name":{},"text":{},"component":{}}],["es/spanish",{"_index":6236,"title":{},"name":{},"text":{"375":{}},"component":{}}],["es2015/es6",{"_index":5440,"title":{},"name":{},"text":{"270":{}},"component":{}}],["es2016",{"_index":5441,"title":{},"name":{},"text":{"270":{}},"component":{}}],["es2017",{"_index":5442,"title":{},"name":{},"text":{"270":{}},"component":{}}],["esc",{"_index":1692,"title":{},"name":{},"text":{"36":{}},"component":{}}],["escap",{"_index":1033,"title":{},"name":{},"text":{"8":{},"205":{},"238":{},"298":{},"349":{},"358":{},"366":{},"367":{},"377":{},"472":{}},"component":{}}],["escapehtml",{"_index":6025,"title":{},"name":{},"text":{"358":{}},"component":{}}],["escapesql",{"_index":6024,"title":{},"name":{},"text":{"358":{}},"component":{}}],["escapexml",{"_index":6022,"title":{},"name":{},"text":{"358":{}},"component":{}}],["espac",{"_index":6029,"title":{},"name":{},"text":{"358":{}},"component":{}}],["especi",{"_index":2267,"title":{},"name":{},"text":{"50":{},"298":{},"542":{}},"component":{}}],["esport",{"_index":4503,"title":{},"name":{},"text":{"241":{}},"component":{}}],["essenc",{"_index":6142,"title":{},"name":{},"text":{"372":{}},"component":{}}],["essenti",{"_index":2275,"title":{},"name":{},"text":{"50":{},"75":{},"525":{}},"component":{}}],["establish",{"_index":2930,"title":{},"name":{},"text":{"82":{},"130":{}},"component":{}}],["etc",{"_index":130,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"10":{},"13":{},"20":{},"24":{},"25":{},"27":{},"41":{},"50":{},"51":{},"54":{},"55":{},"63":{},"67":{},"68":{},"73":{},"78":{},"81":{},"88":{},"91":{},"92":{},"94":{},"130":{},"154":{},"166":{},"205":{},"217":{},"220":{},"227":{},"235":{},"238":{},"239":{},"244":{},"266":{},"322":{},"325":{},"344":{},"366":{},"367":{},"400":{},"402":{},"404":{},"408":{},"410":{},"422":{},"453":{},"490":{},"492":{},"499":{},"522":{},"533":{},"538":{}},"component":{}}],["etl",{"_index":1151,"title":{"287-7":{}},"name":{},"text":{"9":{},"50":{},"81":{},"178":{},"220":{},"227":{},"235":{},"246":{},"250":{},"253":{},"254":{},"256":{},"258":{},"272":{},"273":{},"274":{},"283":{},"285":{},"287":{},"293":{},"301":{},"317":{},"320":{},"323":{},"338":{},"341":{},"342":{},"343":{},"347":{},"348":{},"349":{},"355":{},"357":{},"358":{},"360":{},"364":{},"366":{},"367":{},"372":{},"373":{},"374":{},"375":{},"376":{},"382":{},"383":{},"394":{},"481":{},"503":{}},"component":{}}],["eu",{"_index":3393,"title":{},"name":{},"text":{"152":{}},"component":{}}],["europ",{"_index":3491,"title":{},"name":{},"text":{"158":{},"205":{},"461":{},"463":{}},"component":{}}],["european",{"_index":4801,"title":{},"name":{},"text":{"247":{}},"component":{}}],["ev",{"_index":769,"title":{},"name":{},"text":{"7":{}},"component":{}}],["eval",{"_index":6415,"title":{},"name":{"453":{}},"text":{},"component":{}}],["evalfilesmetr",{"_index":6466,"title":{},"name":{"454":{}},"text":{},"component":{}}],["evalu",{"_index":2850,"title":{"316":{},"454":{},"455":{},"490":{},"453-3":{},"533-15":{}},"name":{},"text":{"79":{},"81":{},"86":{},"214":{},"247":{},"251":{},"269":{},"289":{},"291":{},"316":{},"453":{},"454":{},"455":{},"483":{},"490":{},"500":{},"501":{}},"component":{}}],["evaluatetablecont",{"_index":6470,"title":{},"name":{"455":{}},"text":{},"component":{}}],["evalut",{"_index":7304,"title":{},"name":{},"text":{"544":{}},"component":{}}],["even",{"_index":313,"title":{"247-97":{}},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"26":{},"30":{},"46":{},"49":{},"53":{},"54":{},"56":{},"84":{},"91":{},"105":{},"157":{},"163":{},"205":{},"220":{},"221":{},"227":{},"243":{},"247":{},"262":{},"270":{},"283":{},"299":{},"336":{},"354":{},"366":{},"378":{},"395":{},"400":{},"441":{},"490":{},"500":{},"514":{},"520":{},"542":{}},"component":{}}],["evenli",{"_index":1698,"title":{},"name":{},"text":{"36":{},"80":{},"247":{}},"component":{}}],["event",{"_index":2872,"title":{"186":{},"187":{}},"name":{"186":{},"187":{}},"text":{"81":{},"86":{},"167":{},"186":{},"187":{},"201":{},"202":{},"241":{},"247":{},"275":{},"298":{},"337":{},"428":{},"433":{},"485":{},"544":{}},"component":{}}],["event.id",{"_index":6378,"title":{},"name":{},"text":{"433":{}},"component":{}}],["event.year",{"_index":6376,"title":{},"name":{},"text":{"433":{}},"component":{}}],["eventu",{"_index":3483,"title":{},"name":{},"text":{"157":{},"167":{},"222":{},"367":{}},"component":{}}],["everyth",{"_index":250,"title":{},"name":{},"text":{"2":{},"5":{},"13":{},"19":{},"38":{},"50":{},"53":{},"54":{},"56":{},"81":{},"158":{},"164":{},"186":{},"188":{},"222":{},"223":{},"295":{},"368":{},"388":{},"389":{},"414":{},"433":{},"448":{},"499":{},"513":{},"525":{},"537":{},"544":{}},"component":{}}],["everything.hwf",{"_index":6381,"title":{},"name":{},"text":{"433":{}},"component":{}}],["everything/remov",{"_index":2227,"title":{},"name":{},"text":{"46":{}},"component":{}}],["everywher",{"_index":2326,"title":{},"name":{},"text":{"50":{}},"component":{}}],["evid",{"_index":1160,"title":{},"name":{},"text":{"9":{},"390":{}},"component":{}}],["evolv",{"_index":370,"title":{},"name":{},"text":{"2":{},"30":{}},"component":{}}],["ex",{"_index":6181,"title":{},"name":{},"text":{"372":{},"503":{}},"component":{}}],["ex.getmessag",{"_index":6184,"title":{},"name":{},"text":{"372":{}},"component":{}}],["exact",{"_index":587,"title":{"247-151":{}},"name":{},"text":{"5":{},"26":{},"52":{},"81":{},"163":{},"243":{},"247":{},"338":{},"368":{},"432":{},"483":{}},"component":{}}],["exact(\"1\";1",{"_index":5179,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exact(\"1\";2",{"_index":5177,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exact(\"a\";\"a",{"_index":5173,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exact(\"h\";1",{"_index":5178,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exact((1/3)*3;1",{"_index":5175,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exact(1;1",{"_index":5174,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exact(true();tru",{"_index":5176,"title":{},"name":{},"text":{"247":{}},"component":{}}],["exactli",{"_index":356,"title":{},"name":{},"text":{"2":{},"5":{},"20":{},"56":{},"83":{},"163":{},"167":{},"245":{},"247":{},"322":{},"355":{},"359":{},"363":{},"441":{},"531":{}},"component":{}}],["examin",{"_index":1651,"title":{},"name":{},"text":{"29":{},"82":{},"180":{},"234":{},"247":{},"291":{},"372":{},"522":{}},"component":{}}],["exampl",{"_index":139,"title":{"38-3":{},"38-4":{},"43-10":{},"44-3":{},"44-4":{},"44-5":{},"46-2":{},"47-1":{},"84-2":{},"105-3":{},"152-2":{},"162-3":{},"179-4":{},"246-10":{},"269-4":{},"270-4":{},"270-10":{},"273-3":{},"290-7":{},"291-8":{},"292-7":{},"292-12":{},"316-10":{},"317-4":{},"319-2":{},"320-5":{},"321-4":{},"324-6":{},"325-6":{},"349-5":{},"349-6":{},"349-7":{},"363-3":{},"373-6":{},"380-4":{},"432-6":{},"433-4":{},"433-6":{},"433-7":{},"437-2":{},"475-4":{},"483-2":{},"542-2":{},"542-3":{},"542-5":{}},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"9":{},"11":{},"13":{},"19":{},"24":{},"25":{},"29":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"47":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"67":{},"68":{},"73":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"88":{},"90":{},"91":{},"95":{},"97":{},"103":{},"105":{},"107":{},"150":{},"151":{},"152":{},"153":{},"160":{},"161":{},"162":{},"163":{},"165":{},"167":{},"168":{},"170":{},"172":{},"179":{},"180":{},"182":{},"196":{},"197":{},"199":{},"216":{},"220":{},"221":{},"222":{},"227":{},"233":{},"234":{},"235":{},"236":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"250":{},"251":{},"258":{},"269":{},"270":{},"273":{},"274":{},"275":{},"276":{},"277":{},"285":{},"286":{},"287":{},"289":{},"291":{},"292":{},"294":{},"298":{},"305":{},"309":{},"313":{},"314":{},"316":{},"319":{},"321":{},"322":{},"323":{},"327":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"344":{},"345":{},"349":{},"352":{},"363":{},"364":{},"366":{},"368":{},"372":{},"373":{},"375":{},"380":{},"381":{},"383":{},"389":{},"394":{},"395":{},"400":{},"401":{},"402":{},"408":{},"427":{},"431":{},"432":{},"433":{},"437":{},"447":{},"453":{},"457":{},"459":{},"461":{},"465":{},"466":{},"468":{},"475":{},"481":{},"483":{},"487":{},"488":{},"489":{},"499":{},"503":{},"505":{},"509":{},"511":{},"514":{},"523":{},"525":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"537":{},"538":{},"541":{},"542":{},"543":{},"544":{}},"component":{}}],["example.hpl",{"_index":2695,"title":{},"name":{},"text":{"67":{},"68":{},"73":{}},"component":{}}],["exasol",{"_index":3207,"title":{"115":{}},"name":{"115":{}},"text":{},"component":{}}],["exce",{"_index":2463,"title":{},"name":{},"text":{"55":{},"262":{},"275":{},"483":{}},"component":{}}],["exceed",{"_index":819,"title":{},"name":{},"text":{"7":{},"235":{}},"component":{}}],["excel",{"_index":2244,"title":{"234":{},"235":{}},"name":{},"text":{"50":{},"81":{},"86":{},"87":{},"234":{},"235":{},"247":{},"465":{}},"component":{}}],["excelinput",{"_index":4364,"title":{},"name":{"234":{}},"text":{},"component":{}}],["excelwrit",{"_index":4387,"title":{},"name":{"235":{}},"text":{},"component":{}}],["excel’",{"_index":4389,"title":{},"name":{},"text":{"235":{}},"component":{}}],["except",{"_index":929,"title":{"251-6":{}},"name":{},"text":{"7":{},"38":{},"64":{},"154":{},"216":{},"227":{},"250":{},"251":{},"287":{},"291":{},"308":{},"312":{},"360":{},"374":{},"376":{},"431":{},"465":{},"519":{},"533":{}},"component":{}}],["excerpt",{"_index":7210,"title":{},"name":{},"text":{"542":{}},"component":{}}],["exchang",{"_index":3864,"title":{},"name":{},"text":{"167":{},"467":{}},"component":{}}],["exclud",{"_index":3213,"title":{"117-1":{}},"name":{},"text":{"117":{},"234":{},"247":{},"270":{},"273":{},"279":{},"361":{},"364":{},"442":{},"449":{},"499":{},"509":{},"530":{}},"component":{}}],["exclus",{"_index":2730,"title":{},"name":{},"text":{"76":{},"357":{},"461":{},"509":{}},"component":{}}],["exec",{"_index":6338,"title":{"437":{}},"name":{"437":{}},"text":{"429":{},"437":{},"543":{}},"component":{}}],["execinfo",{"_index":4406,"title":{},"name":{"236":{}},"text":{},"component":{}}],["execprocess",{"_index":4410,"title":{},"name":{"237":{}},"text":{},"component":{}}],["execsql",{"_index":4414,"title":{},"name":{"238":{}},"text":{},"component":{}}],["execsqlrow",{"_index":4420,"title":{},"name":{"239":{}},"text":{},"component":{}}],["exectest",{"_index":4423,"title":{},"name":{"240":{}},"text":{},"component":{}}],["execut",{"_index":80,"title":{"29":{},"57":{},"61":{},"62":{},"236":{},"237":{},"238":{},"239":{},"240":{},"37-13":{},"37-14":{},"37-15":{},"37-16":{},"37-17":{},"37-18":{},"40-2":{},"42-10":{},"42-16":{},"55-1":{},"55-4":{},"55-5":{},"55-6":{},"55-10":{},"55-11":{},"55-12":{},"57-2":{},"57-3":{},"83-9":{},"162-5":{},"163-5":{},"297-5":{},"309-8":{},"378-8":{},"432-2":{},"544-9":{},"544-16":{}},"name":{"29":{},"57":{},"61":{},"62":{}},"text":{"1":{},"7":{},"9":{},"10":{},"13":{},"15":{},"16":{},"19":{},"20":{},"22":{},"24":{},"29":{},"32":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"61":{},"62":{},"63":{},"64":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"76":{},"78":{},"80":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"93":{},"94":{},"95":{},"101":{},"102":{},"103":{},"104":{},"105":{},"151":{},"152":{},"153":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"186":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"205":{},"206":{},"207":{},"210":{},"216":{},"219":{},"227":{},"230":{},"236":{},"237":{},"238":{},"239":{},"240":{},"246":{},"247":{},"270":{},"275":{},"287":{},"289":{},"290":{},"291":{},"292":{},"294":{},"297":{},"305":{},"309":{},"310":{},"311":{},"316":{},"324":{},"325":{},"326":{},"331":{},"337":{},"345":{},"355":{},"360":{},"363":{},"367":{},"372":{},"378":{},"379":{},"389":{},"396":{},"399":{},"404":{},"409":{},"410":{},"426":{},"429":{},"430":{},"432":{},"433":{},"436":{},"437":{},"439":{},"453":{},"455":{},"466":{},"469":{},"475":{},"478":{},"481":{},"482":{},"483":{},"484":{},"489":{},"490":{},"493":{},"494":{},"500":{},"501":{},"503":{},"511":{},"512":{},"514":{},"518":{},"527":{},"541":{},"544":{}},"component":{}}],["execution/sync",{"_index":1756,"title":{},"name":{},"text":{"37":{}},"component":{}}],["execution_date=20230507t135409",{"_index":2604,"title":{},"name":{},"text":{"56":{}},"component":{}}],["executionexitstatu",{"_index":2440,"title":{},"name":{},"text":{"55":{},"309":{}},"component":{}}],["executionfilesretriev",{"_index":2455,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionid",{"_index":1786,"title":{},"name":{},"text":{"37":{}},"component":{}}],["executionlinesdelet",{"_index":2454,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlinesinput",{"_index":2449,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlinesoutput",{"_index":2451,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlinesread",{"_index":2447,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlinesreject",{"_index":2452,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlinesupd",{"_index":2453,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlineswritten",{"_index":2448,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlogchannelid",{"_index":2457,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionlogtext",{"_index":2456,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executionnrerror",{"_index":2441,"title":{},"name":{},"text":{"55":{},"309":{}},"component":{}}],["executionresult",{"_index":2439,"title":{},"name":{},"text":{"55":{},"309":{}},"component":{}}],["executiontim",{"_index":2443,"title":{},"name":{},"text":{"55":{}},"component":{}}],["executiontype\":\"pipeline\",\"parentid\":null,\"id\":\"df84cbc2",{"_index":1793,"title":{},"name":{},"text":{"37":{}},"component":{}}],["executor",{"_index":649,"title":{"309":{},"325":{},"378":{},"493":{},"55-2":{},"55-3":{},"55-4":{},"55-5":{},"55-6":{},"55-7":{},"55-8":{},"55-9":{},"55-10":{},"55-11":{},"55-12":{},"55-13":{}},"name":{"309":{},"378":{}},"text":{"7":{},"9":{},"55":{},"56":{},"81":{},"86":{},"94":{},"95":{},"161":{},"253":{},"254":{},"258":{},"309":{},"325":{},"344":{},"378":{},"392":{},"481":{},"483":{},"493":{},"503":{}},"component":{}}],["executor.hpl",{"_index":5783,"title":{},"name":{},"text":{"309":{},"344":{},"378":{}},"component":{}}],["executor_loader.py:114",{"_index":2504,"title":{},"name":{},"text":{"56":{}},"component":{}}],["exhaust",{"_index":3230,"title":{},"name":{},"text":{"117":{}},"component":{}}],["exist",{"_index":540,"title":{"215":{},"242":{},"362":{},"440":{},"457":{},"458":{},"496":{},"270-11":{},"527-1":{}},"name":{},"text":{"5":{},"7":{},"30":{},"38":{},"46":{},"52":{},"55":{},"58":{},"71":{},"81":{},"82":{},"83":{},"86":{},"90":{},"93":{},"94":{},"150":{},"152":{},"153":{},"154":{},"165":{},"168":{},"179":{},"185":{},"189":{},"195":{},"200":{},"204":{},"208":{},"214":{},"215":{},"216":{},"223":{},"233":{},"235":{},"242":{},"246":{},"247":{},"250":{},"251":{},"260":{},"261":{},"270":{},"274":{},"278":{},"292":{},"312":{},"314":{},"315":{},"319":{},"322":{},"330":{},"331":{},"332":{},"333":{},"334":{},"338":{},"340":{},"352":{},"361":{},"362":{},"366":{},"368":{},"372":{},"373":{},"380":{},"381":{},"387":{},"388":{},"389":{},"422":{},"437":{},"440":{},"441":{},"442":{},"443":{},"444":{},"446":{},"457":{},"458":{},"461":{},"462":{},"463":{},"464":{},"465":{},"468":{},"471":{},"477":{},"478":{},"481":{},"487":{},"488":{},"490":{},"492":{},"494":{},"496":{},"499":{},"500":{},"503":{},"505":{},"508":{},"509":{},"514":{},"520":{},"521":{},"527":{},"533":{}},"component":{}}],["exit",{"_index":87,"title":{"38-2":{}},"name":{},"text":{"1":{},"13":{},"27":{},"38":{},"46":{},"47":{},"55":{},"56":{},"57":{},"76":{},"78":{},"83":{},"84":{},"102":{},"103":{},"105":{},"152":{},"237":{},"256":{},"379":{},"399":{},"403":{},"404":{},"453":{},"469":{},"527":{}},"component":{}}],["exit_statu",{"_index":6426,"title":{},"name":{},"text":{"453":{}},"component":{}}],["exitcod",{"_index":1964,"title":{},"name":{},"text":{"41":{}},"component":{}}],["exp",{"_index":4692,"title":{"247-98":{}},"name":{},"text":{},"component":{}}],["expand",{"_index":1509,"title":{},"name":{},"text":{"24":{},"27":{},"56":{},"130":{},"258":{},"316":{}},"component":{}}],["expect",{"_index":348,"title":{},"name":{},"text":{"2":{},"9":{},"19":{},"30":{},"41":{},"44":{},"47":{},"48":{},"50":{},"55":{},"70":{},"83":{},"90":{},"150":{},"151":{},"152":{},"163":{},"167":{},"170":{},"205":{},"228":{},"247":{},"251":{},"253":{},"254":{},"309":{},"352":{},"363":{},"374":{},"378":{},"391":{},"400":{},"433":{},"466":{},"511":{},"532":{}},"component":{}}],["expectedvalu",{"_index":6853,"title":{},"name":{},"text":{"527":{}},"component":{}}],["expectedvalues[i",{"_index":6855,"title":{},"name":{},"text":{"527":{}},"component":{}}],["expectedvari",{"_index":6841,"title":{},"name":{},"text":{"527":{}},"component":{}}],["expectedvariables[i",{"_index":6850,"title":{},"name":{},"text":{"527":{}},"component":{}}],["experi",{"_index":1607,"title":{},"name":{},"text":{"26":{},"56":{},"211":{},"309":{},"502":{}},"component":{}}],["experiment",{"_index":3821,"title":{"194":{}},"name":{},"text":{"165":{},"194":{}},"component":{}}],["expert",{"_index":2527,"title":{},"name":{},"text":{"56":{}},"component":{}}],["expir",{"_index":3135,"title":{},"name":{},"text":{"99":{},"208":{}},"component":{}}],["explain",{"_index":1313,"title":{"529-4":{}},"name":{},"text":{"18":{},"52":{},"81":{},"88":{},"247":{},"274":{},"389":{},"433":{},"521":{},"527":{},"528":{},"530":{},"531":{},"533":{}},"component":{}}],["explan",{"_index":1537,"title":{},"name":{},"text":{"24":{},"490":{},"527":{}},"component":{}}],["explanatori",{"_index":2355,"title":{},"name":{},"text":{"52":{},"95":{},"345":{}},"component":{}}],["explicit",{"_index":664,"title":{},"name":{},"text":{"7":{},"204":{},"246":{}},"component":{}}],["explicitli",{"_index":671,"title":{},"name":{},"text":{"7":{},"57":{},"167":{},"299":{},"338":{},"346":{}},"component":{}}],["explor",{"_index":56,"title":{"30":{},"23-1":{},"23-2":{}},"name":{"30":{}},"text":{"1":{},"2":{},"19":{},"23":{},"26":{},"27":{},"30":{},"35":{},"36":{},"53":{},"56":{},"195":{},"200":{},"259":{},"413":{},"418":{}},"component":{}}],["exploratori",{"_index":4330,"title":{},"name":{},"text":{"228":{}},"component":{}}],["explorer’",{"_index":1475,"title":{},"name":{},"text":{"23":{}},"component":{}}],["explos",{"_index":2334,"title":{},"name":{},"text":{"52":{}},"component":{}}],["expon",{"_index":6101,"title":{},"name":{},"text":{"366":{}},"component":{}}],["exponenti",{"_index":3470,"title":{},"name":{},"text":{"154":{}},"component":{}}],["export",{"_index":535,"title":{"164-5":{},"170-3":{},"511-3":{}},"name":{},"text":{"5":{},"7":{},"11":{},"37":{},"38":{},"41":{},"42":{},"94":{},"152":{},"157":{},"158":{},"160":{},"161":{},"162":{},"164":{},"167":{},"168":{},"170":{},"271":{},"291":{},"367":{},"424":{},"465":{},"511":{},"513":{},"514":{},"527":{},"538":{},"543":{}},"component":{}}],["export.json",{"_index":3878,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["expos",{"_index":2185,"title":{},"name":{},"text":{"43":{},"337":{},"373":{},"453":{}},"component":{}}],["express",{"_index":1138,"title":{"373":{},"291-9":{}},"name":{},"text":{"9":{},"19":{},"34":{},"39":{},"47":{},"56":{},"81":{},"86":{},"205":{},"207":{},"208":{},"219":{},"227":{},"234":{},"246":{},"247":{},"250":{},"251":{},"252":{},"269":{},"270":{},"273":{},"279":{},"280":{},"291":{},"313":{},"316":{},"317":{},"366":{},"373":{},"374":{},"386":{},"398":{},"435":{},"437":{},"439":{},"441":{},"447":{},"449":{},"453":{},"459":{},"460":{},"461":{},"462":{},"463":{},"465":{},"467":{},"483":{},"487":{},"488":{},"499":{},"501":{},"506":{},"509":{},"527":{},"533":{}},"component":{}}],["extend",{"_index":397,"title":{},"name":{},"text":{"4":{},"25":{},"38":{},"41":{},"78":{},"103":{},"152":{},"202":{},"241":{},"247":{},"291":{},"510":{},"511":{},"519":{},"529":{},"530":{},"532":{},"542":{}},"component":{}}],["extens",{"_index":312,"title":{"514-7":{},"532-9":{}},"name":{},"text":{"2":{},"5":{},"22":{},"25":{},"84":{},"87":{},"165":{},"166":{},"167":{},"168":{},"233":{},"234":{},"241":{},"251":{},"273":{},"274":{},"279":{},"305":{},"314":{},"352":{},"366":{},"367":{},"383":{},"385":{},"388":{},"439":{},"441":{},"442":{},"461":{},"465":{},"466":{},"468":{},"477":{},"478":{},"481":{},"483":{},"489":{},"503":{},"508":{},"514":{},"532":{}},"component":{}}],["extensionpointinterfac",{"_index":7008,"title":{},"name":{},"text":{"532":{},"542":{}},"component":{}}],["extensionpointplugintyp",{"_index":6799,"title":{},"name":{},"text":{"525":{}},"component":{}}],["extern",{"_index":309,"title":{"87":{},"75-16":{}},"name":{"87":{}},"text":{"2":{},"50":{},"52":{},"75":{},"165":{},"166":{},"167":{},"168":{},"324":{},"325":{},"328":{},"331":{},"332":{},"333":{},"334":{},"430":{},"496":{},"533":{},"536":{}},"component":{}}],["externalsourc",{"_index":5865,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["extinct",{"_index":2478,"title":{},"name":{},"text":{"56":{}},"component":{}}],["extra",{"_index":2237,"title":{"537-2":{}},"name":{},"text":{"46":{},"71":{},"82":{},"90":{},"130":{},"151":{},"216":{},"228":{},"298":{},"337":{},"358":{},"360":{},"366":{},"367":{},"381":{},"389":{},"527":{},"531":{},"532":{},"535":{}},"component":{}}],["extract",{"_index":928,"title":{},"name":{},"text":{"7":{},"50":{},"83":{},"180":{},"205":{},"222":{},"231":{},"247":{},"273":{},"316":{},"319":{},"427":{},"467":{},"496":{},"499":{},"520":{},"537":{},"543":{}},"component":{}}],["extrem",{"_index":441,"title":{},"name":{},"text":{"5":{},"7":{},"56":{},"57":{},"233":{},"355":{}},"component":{}}],["ey",{"_index":3382,"title":{},"name":{},"text":{"152":{},"236":{}},"component":{}}],["f",{"_index":1352,"title":{},"name":{},"text":{"19":{},"36":{},"38":{},"46":{},"162":{},"247":{},"321":{},"364":{},"366":{},"514":{},"540":{}},"component":{}}],["f09d849e",{"_index":743,"title":{},"name":{},"text":{"7":{}},"component":{}}],["f1",{"_index":3809,"title":{},"name":{},"text":{"165":{}},"component":{}}],["f103b630b4cc",{"_index":2018,"title":{},"name":{},"text":{"41":{}},"component":{}}],["f2",{"_index":1485,"title":{},"name":{},"text":{"23":{}},"component":{}}],["f5",{"_index":1687,"title":{},"name":{},"text":{"36":{}},"component":{}}],["f8",{"_index":1287,"title":{},"name":{},"text":{"15":{},"36":{},"85":{}},"component":{}}],["facilit",{"_index":6243,"title":{},"name":{},"text":{"378":{}},"component":{}}],["facillit",{"_index":1422,"title":{},"name":{},"text":{"20":{}},"component":{}}],["fact",{"_index":3575,"title":{"247-99":{}},"name":{},"text":{"161":{},"186":{},"241":{},"433":{}},"component":{}}],["factdoubl",{"_index":4693,"title":{"247-100":{}},"name":{},"text":{},"component":{}}],["factor",{"_index":6604,"title":{},"name":{},"text":{"499":{}},"component":{}}],["factori",{"_index":2679,"title":{},"name":{},"text":{"65":{},"508":{},"529":{},"544":{}},"component":{}}],["fail",{"_index":1855,"title":{},"name":{},"text":{"38":{},"70":{},"79":{},"83":{},"85":{},"103":{},"105":{},"130":{},"159":{},"166":{},"167":{},"168":{},"189":{},"205":{},"211":{},"222":{},"233":{},"234":{},"237":{},"247":{},"251":{},"264":{},"273":{},"274":{},"275":{},"278":{},"292":{},"298":{},"303":{},"316":{},"329":{},"330":{},"332":{},"333":{},"334":{},"366":{},"374":{},"380":{},"431":{},"439":{},"443":{},"444":{},"446":{},"461":{},"467":{},"468":{},"471":{},"477":{},"478":{},"480":{},"481":{},"485":{},"488":{},"492":{},"501":{},"502":{},"505":{},"508":{},"527":{}},"component":{}}],["fail.hpl",{"_index":2690,"title":{},"name":{},"text":{"66":{}},"component":{}}],["fail2.hpl",{"_index":2683,"title":{},"name":{},"text":{"66":{}},"component":{}}],["failur",{"_index":1542,"title":{},"name":{},"text":{"24":{},"57":{},"79":{},"103":{},"105":{},"154":{},"169":{},"247":{},"371":{},"380":{},"429":{},"443":{},"446":{},"456":{},"466":{},"490":{},"500":{},"510":{}},"component":{}}],["fairli",{"_index":1918,"title":{},"name":{},"text":{"41":{},"52":{},"345":{},"525":{}},"component":{}}],["fake",{"_index":2391,"title":{"241":{}},"name":{"241":{}},"text":{"53":{},"54":{},"67":{},"68":{},"73":{},"81":{},"86":{},"241":{}},"component":{}}],["faker",{"_index":4424,"title":{},"name":{},"text":{"241":{}},"component":{}}],["fall",{"_index":4309,"title":{},"name":{},"text":{"227":{},"247":{}},"component":{}}],["fallback",{"_index":4608,"title":{},"name":{},"text":{"243":{}},"component":{}}],["fals",{"_index":86,"title":{"247-73":{}},"name":{},"text":{"1":{},"8":{},"13":{},"34":{},"39":{},"41":{},"47":{},"56":{},"63":{},"65":{},"67":{},"70":{},"73":{},"74":{},"78":{},"83":{},"84":{},"90":{},"102":{},"150":{},"152":{},"167":{},"169":{},"210":{},"211":{},"212":{},"230":{},"246":{},"247":{},"265":{},"269":{},"298":{},"326":{},"370":{},"372":{},"380":{},"389":{},"399":{},"404":{},"453":{},"456":{},"457":{},"458":{},"460":{},"480":{},"487":{},"496":{},"502":{},"503":{},"510":{},"527":{},"530":{},"532":{},"544":{}},"component":{}}],["false/n",{"_index":4307,"title":{},"name":{},"text":{"227":{}},"component":{}}],["falseotherwis",{"_index":5429,"title":{},"name":{},"text":{"265":{}},"component":{}}],["famili",{"_index":3807,"title":{},"name":{},"text":{"165":{},"191":{},"208":{},"225":{}},"component":{}}],["familiar",{"_index":1249,"title":{},"name":{},"text":{"13":{},"56":{},"519":{},"522":{}},"component":{}}],["faq",{"_index":1245,"title":{"205-4":{},"263-4":{}},"name":{"12":{}},"text":{},"component":{}}],["far",{"_index":1252,"title":{},"name":{},"text":{"13":{},"25":{},"56":{},"205":{}},"component":{}}],["fashion",{"_index":2784,"title":{},"name":{},"text":{"76":{},"283":{}},"component":{}}],["fast",{"_index":296,"title":{},"name":{},"text":{"2":{},"22":{},"24":{},"50":{},"52":{},"217":{},"235":{},"239":{},"355":{},"367":{},"372":{},"381":{},"433":{},"519":{}},"component":{}}],["faster",{"_index":211,"title":{},"name":{},"text":{"1":{},"57":{},"158":{},"159":{},"166":{},"203":{},"220":{},"228":{},"270":{},"299":{},"347":{},"373":{},"376":{},"405":{},"433":{}},"component":{}}],["fastest",{"_index":1133,"title":{},"name":{},"text":{"9":{},"364":{},"397":{}},"component":{}}],["fastload",{"_index":2905,"title":{"365-4":{}},"name":{},"text":{"81":{},"365":{}},"component":{}}],["fat",{"_index":1545,"title":{"163-10":{},"164-4":{}},"name":{},"text":{"25":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"540":{}},"component":{}}],["fat.jar",{"_index":3499,"title":{},"name":{},"text":{"158":{},"167":{},"168":{}},"component":{}}],["fatjar",{"_index":7172,"title":{},"name":{},"text":{"540":{}},"component":{}}],["fatjar.jar",{"_index":7167,"title":{},"name":{},"text":{"540":{}},"component":{}}],["fault",{"_index":3847,"title":{},"name":{},"text":{"167":{},"168":{},"429":{}},"component":{}}],["favorit",{"_index":1467,"title":{},"name":{},"text":{"22":{},"37":{},"53":{}},"component":{}}],["fds5t0mzarqw2v0jg49vk/coqthypqjfxvs5c5wwgzcynylgwx8xidea4btq2yp6b2rqglet5qy9",{"_index":2139,"title":{},"name":{},"text":{"42":{}},"component":{}}],["fe",{"_index":4332,"title":{},"name":{},"text":{"228":{}},"component":{}}],["featur",{"_index":404,"title":{"107-1":{},"518-4":{}},"name":{},"text":{"4":{},"40":{},"82":{},"95":{},"107":{},"154":{},"165":{},"167":{},"168":{},"235":{},"275":{},"287":{},"291":{},"363":{},"364":{},"366":{},"449":{},"514":{},"518":{},"519":{},"533":{}},"component":{}}],["feb",{"_index":4804,"title":{},"name":{},"text":{"247":{},"366":{}},"component":{}}],["februari",{"_index":6089,"title":{},"name":{},"text":{"366":{}},"component":{}}],["feed",{"_index":6086,"title":{},"name":{},"text":{"366":{},"367":{},"381":{},"544":{}},"component":{}}],["feedback",{"_index":3915,"title":{},"name":{},"text":{"169":{},"519":{}},"component":{}}],["feel",{"_index":476,"title":{"27-5":{}},"name":{},"text":{"5":{},"6":{},"25":{},"27":{},"519":{},"535":{}},"component":{}}],["femal",{"_index":6062,"title":{},"name":{},"text":{"364":{}},"component":{}}],["fervent",{"_index":961,"title":{},"name":{},"text":{"8":{}},"component":{}}],["fetch",{"_index":700,"title":{},"name":{},"text":{"7":{},"52":{},"55":{},"105":{},"186":{},"232":{},"240":{},"258":{},"259":{},"271":{},"277":{},"309":{},"311":{},"315":{},"514":{},"533":{},"537":{}},"component":{}}],["fetcher",{"_index":3667,"title":{},"name":{},"text":{"162":{}},"component":{}}],["few",{"_index":731,"title":{},"name":{},"text":{"7":{},"9":{},"64":{},"98":{},"151":{},"163":{},"167":{},"168":{},"220":{},"275":{},"276":{},"280":{},"366":{},"389":{},"396":{},"427":{},"433":{},"453":{},"528":{},"530":{},"531":{},"532":{}},"component":{}}],["fewer",{"_index":4252,"title":{},"name":{},"text":{"220":{},"247":{},"347":{}},"component":{}}],["ffbfd3d7d489",{"_index":1771,"title":{},"name":{},"text":{"37":{}},"component":{}}],["ffff",{"_index":735,"title":{},"name":{},"text":{"7":{}},"component":{}}],["fi",{"_index":6704,"title":{},"name":{},"text":{"514":{}},"component":{}}],["fica",{"_index":5896,"title":{},"name":{},"text":{"325":{}},"component":{}}],["fica_se",{"_index":5895,"title":{},"name":{},"text":{"325":{}},"component":{}}],["fictiti",{"_index":2257,"title":{},"name":{},"text":{"50":{}},"component":{}}],["fie",{"_index":4355,"title":{},"name":{},"text":{"233":{},"274":{}},"component":{}}],["fiel",{"_index":5721,"title":{},"name":{},"text":{"298":{}},"component":{}}],["field",{"_index":183,"title":{"176":{},"217":{},"342":{},"343":{},"349":{},"350":{},"7-2":{},"178-5":{},"179-4":{},"186-5":{},"214-4":{},"217-5":{},"227-4":{},"227-6":{},"233-7":{},"234-8":{},"234-9":{},"243-4":{},"244-4":{},"246-8":{},"248-5":{},"250-6":{},"259-7":{},"260-6":{},"264-5":{},"264-6":{},"270-8":{},"270-11":{},"270-12":{},"270-15":{},"271-4":{},"273-8":{},"273-9":{},"274-7":{},"275-7":{},"275-8":{},"277-6":{},"278-5":{},"279-6":{},"289-7":{},"291-7":{},"292-6":{},"292-9":{},"310-5":{},"313-6":{},"315-5":{},"316-6":{},"328-1":{},"331-9":{},"331-10":{},"331-11":{},"332-6":{},"332-7":{},"333-7":{},"334-6":{},"334-7":{},"346-6":{},"361-5":{},"361-6":{},"366-9":{},"366-10":{},"367-6":{},"376-5":{},"379-5":{},"383-6":{},"386-6":{}},"name":{"328":{}},"text":{"1":{},"7":{},"9":{},"11":{},"24":{},"36":{},"43":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"59":{},"60":{},"68":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"86":{},"94":{},"106":{},"107":{},"155":{},"161":{},"163":{},"174":{},"175":{},"176":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"219":{},"220":{},"221":{},"222":{},"223":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"250":{},"251":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"327":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"392":{},"395":{},"400":{},"405":{},"420":{},"432":{},"433":{},"437":{},"441":{},"442":{},"448":{},"453":{},"454":{},"455":{},"457":{},"458":{},"465":{},"466":{},"467":{},"468":{},"470":{},"471":{},"472":{},"481":{},"485":{},"487":{},"488":{},"489":{},"490":{},"503":{},"505":{},"507":{},"508":{},"509":{},"529":{},"530":{},"542":{}},"component":{}}],["field(",{"_index":5387,"title":{},"name":{},"text":{"258":{},"361":{},"363":{}},"component":{}}],["field.contain",{"_index":5434,"title":{},"name":{},"text":{"269":{}},"component":{}}],["field.equals(\"posit",{"_index":5435,"title":{},"name":{},"text":{"269":{}},"component":{}}],["field/data",{"_index":696,"title":{},"name":{},"text":{"7":{}},"component":{}}],["field/parameter/vari",{"_index":6242,"title":{},"name":{},"text":{"378":{}},"component":{}}],["field1",{"_index":4218,"title":{},"name":{},"text":{"216":{},"246":{},"247":{},"270":{},"321":{}},"component":{}}],["field1=xxxx",{"_index":4634,"title":{},"name":{},"text":{"246":{}},"component":{}}],["field1]:[field3",{"_index":4941,"title":{},"name":{},"text":{"247":{}},"component":{}}],["field2",{"_index":4630,"title":{},"name":{},"text":{"246":{},"247":{},"270":{},"321":{}},"component":{}}],["field3",{"_index":4632,"title":{},"name":{},"text":{"246":{},"247":{},"321":{}},"component":{}}],["field4",{"_index":4851,"title":{},"name":{},"text":{"247":{}},"component":{}}],["field5",{"_index":5011,"title":{},"name":{},"text":{"247":{}},"component":{}}],["field_count",{"_index":4611,"title":{},"name":{},"text":{"243":{}},"component":{}}],["fieldformat",{"_index":2791,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["fieldlength",{"_index":2792,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["fieldn",{"_index":4214,"title":{},"name":{},"text":{"215":{},"216":{}},"component":{}}],["fieldnam",{"_index":2442,"title":{},"name":{},"text":{"55":{},"76":{},"79":{},"178":{},"185":{},"210":{},"211":{},"215":{},"219":{},"220":{},"233":{},"237":{},"242":{},"252":{},"253":{},"254":{},"255":{},"257":{},"263":{},"264":{},"265":{},"267":{},"270":{},"274":{},"277":{},"278":{},"279":{},"280":{},"285":{},"306":{},"307":{},"308":{},"310":{},"319":{},"323":{},"330":{},"331":{},"332":{},"334":{},"335":{},"338":{},"360":{},"362":{},"372":{},"375":{},"379":{},"381":{},"383":{},"384":{},"385":{},"386":{},"387":{},"457":{}},"component":{}}],["fieldname(",{"_index":2412,"title":{},"name":{},"text":{"55":{}},"component":{}}],["fieldname2=myvalue2",{"_index":5927,"title":{},"name":{},"text":{"331":{}},"component":{}}],["fieldname=myvalu",{"_index":5926,"title":{},"name":{},"text":{"331":{}},"component":{}}],["fieldprecis",{"_index":2793,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["fields.out",{"_index":6176,"title":{},"name":{},"text":{"372":{}},"component":{}}],["fields/opt",{"_index":5651,"title":{},"name":{},"text":{"291":{}},"component":{}}],["fields=tru",{"_index":5728,"title":{},"name":{},"text":{"298":{}},"component":{}}],["fieldtyp",{"_index":2790,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["field’",{"_index":4385,"title":{},"name":{},"text":{"234":{},"247":{},"288":{}},"component":{}}],["figur",{"_index":2410,"title":{},"name":{},"text":{"55":{},"154":{},"168":{},"217":{},"234":{},"253":{},"254":{},"258":{},"267":{},"319":{},"331":{},"366":{},"367":{},"383":{},"528":{}},"component":{}}],["file",{"_index":24,"title":{"8":{},"30":{},"59":{},"184":{},"185":{},"209":{},"210":{},"220":{},"242":{},"243":{},"244":{},"245":{},"252":{},"279":{},"304":{},"305":{},"312":{},"313":{},"314":{},"339":{},"340":{},"352":{},"366":{},"367":{},"387":{},"439":{},"441":{},"442":{},"443":{},"446":{},"447":{},"454":{},"456":{},"457":{},"458":{},"461":{},"463":{},"468":{},"471":{},"477":{},"478":{},"479":{},"487":{},"488":{},"500":{},"504":{},"506":{},"509":{},"535":{},"8-2":{},"8-3":{},"22-1":{},"23-1":{},"23-2":{},"23-3":{},"30-2":{},"41-4":{},"55-6":{},"55-12":{},"62-4":{},"90-1":{},"97-3":{},"163-11":{},"195-4":{},"200-4":{},"233-5":{},"234-4":{},"235-4":{},"250-4":{},"251-4":{},"251-6":{},"252-4":{},"273-6":{},"274-6":{},"279-4":{},"280-7":{},"309-10":{},"313-4":{},"365-4":{},"366-5":{},"367-4":{},"378-10":{},"383-4":{},"386-4":{},"388-3":{},"388-4":{},"441-4":{},"461-4":{},"462-4":{},"463-4":{},"466-6":{},"468-4":{},"477-4":{},"477-5":{},"478-4":{},"478-5":{},"487-4":{},"488-4":{},"513-4":{},"535-1":{},"538-10":{},"543-4":{},"544-6":{},"544-13":{}},"name":{"22":{},"30":{},"59":{},"184":{},"185":{},"304":{},"305":{},"339":{},"340":{},"535":{},"546":{}},"text":{"1":{},"5":{},"7":{},"8":{},"9":{},"11":{},"13":{},"15":{},"16":{},"17":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"33":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"62":{},"64":{},"68":{},"71":{},"75":{},"76":{},"77":{},"78":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"105":{},"106":{},"112":{},"130":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"154":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"170":{},"173":{},"178":{},"180":{},"182":{},"184":{},"185":{},"186":{},"195":{},"196":{},"197":{},"200":{},"203":{},"205":{},"209":{},"210":{},"217":{},"220":{},"233":{},"234":{},"235":{},"237":{},"239":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"250":{},"251":{},"252":{},"255":{},"256":{},"259":{},"260":{},"261":{},"262":{},"264":{},"267":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"279":{},"280":{},"287":{},"289":{},"295":{},"298":{},"303":{},"304":{},"305":{},"309":{},"310":{},"312":{},"313":{},"314":{},"315":{},"316":{},"319":{},"322":{},"324":{},"325":{},"326":{},"336":{},"338":{},"339":{},"340":{},"345":{},"346":{},"347":{},"352":{},"353":{},"365":{},"366":{},"367":{},"368":{},"376":{},"378":{},"379":{},"381":{},"382":{},"383":{},"384":{},"386":{},"387":{},"388":{},"389":{},"392":{},"394":{},"395":{},"397":{},"398":{},"404":{},"405":{},"409":{},"412":{},"413":{},"418":{},"421":{},"428":{},"430":{},"432":{},"433":{},"435":{},"439":{},"441":{},"442":{},"443":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"453":{},"454":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"468":{},"470":{},"471":{},"472":{},"477":{},"478":{},"479":{},"481":{},"483":{},"486":{},"487":{},"488":{},"489":{},"493":{},"499":{},"500":{},"503":{},"504":{},"506":{},"507":{},"508":{},"509":{},"511":{},"513":{},"514":{},"519":{},"520":{},"526":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"535":{},"537":{},"538":{},"540":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["file(",{"_index":3782,"title":{},"name":{},"text":{"163":{},"209":{},"220":{},"250":{},"487":{},"509":{}},"component":{}}],["file.txt",{"_index":714,"title":{},"name":{},"text":{"7":{}},"component":{}}],["file/directori",{"_index":5369,"title":{},"name":{},"text":{"251":{},"273":{}},"component":{}}],["file/directory/wildcard",{"_index":4374,"title":{},"name":{},"text":{"234":{},"250":{},"313":{}},"component":{}}],["file/fold",{"_index":1456,"title":{},"name":{},"text":{"22":{},"435":{},"439":{},"441":{},"447":{},"454":{},"458":{},"460":{},"477":{},"478":{}},"component":{}}],["file/open",{"_index":3123,"title":{},"name":{},"text":{"97":{},"98":{},"99":{},"100":{},"101":{}},"component":{}}],["file://///somehost/someshare/afile.txt",{"_index":991,"title":{},"name":{},"text":{"8":{}},"component":{}}],["file:///c://hop/config/projects/samples/beam/pipelines/switch",{"_index":1388,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["file:///c://hop/config/projects/samples/transforms/switch",{"_index":2240,"title":{},"name":{},"text":{"47":{}},"component":{}}],["file:///c:/docu",{"_index":990,"title":{},"name":{},"text":{"8":{}},"component":{}}],["file:///home/someuser/somedir",{"_index":989,"title":{},"name":{},"text":{"8":{}},"component":{}}],["file:///hop/config/projects/samples/beam/pipelines/switch",{"_index":1395,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["file:///hop/config/projects/samples/transforms/switch",{"_index":2241,"title":{},"name":{},"text":{"47":{}},"component":{}}],["file:///tmp/export_70eb8ef1",{"_index":2052,"title":{},"name":{},"text":{"42":{}},"component":{}}],["file:/hop/config/projects/default/project",{"_index":1338,"title":{},"name":{},"text":{"19":{}},"component":{}}],["file:/hop/config/projects/samples/project",{"_index":1339,"title":{},"name":{},"text":{"19":{}},"component":{}}],["file:\\c:\\\\hop\\config\\projects\\default\\project",{"_index":1333,"title":{},"name":{},"text":{"19":{}},"component":{}}],["file:\\c:\\\\hop\\config\\projects\\samples\\project",{"_index":1336,"title":{},"name":{},"text":{"19":{}},"component":{}}],["file_prefix}_${file_date}.txt",{"_index":5623,"title":{},"name":{},"text":{"287":{},"503":{}},"component":{}}],["filecompar",{"_index":6471,"title":{},"name":{"456":{}},"text":{},"component":{}}],["fileexist",{"_index":4602,"title":{},"name":{"242":{},"457":{}},"text":{},"component":{}}],["filemetadata",{"_index":4604,"title":{},"name":{"243":{}},"text":{},"component":{}}],["filenam",{"_index":1103,"title":{"251":{},"435":{},"449":{}},"name":{},"text":{"9":{},"19":{},"25":{},"27":{},"34":{},"38":{},"40":{},"43":{},"50":{},"55":{},"58":{},"70":{},"76":{},"78":{},"81":{},"83":{},"86":{},"103":{},"114":{},"151":{},"152":{},"158":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"170":{},"173":{},"184":{},"185":{},"209":{},"210":{},"220":{},"233":{},"234":{},"235":{},"241":{},"242":{},"243":{},"244":{},"245":{},"250":{},"251":{},"273":{},"274":{},"279":{},"280":{},"287":{},"295":{},"298":{},"304":{},"305":{},"309":{},"312":{},"313":{},"314":{},"324":{},"325":{},"336":{},"339":{},"352":{},"366":{},"367":{},"368":{},"379":{},"381":{},"383":{},"384":{},"386":{},"387":{},"389":{},"395":{},"435":{},"442":{},"449":{},"450":{},"454":{},"457":{},"461":{},"464":{},"465":{},"466":{},"468":{},"470":{},"471":{},"472":{},"477":{},"478":{},"479":{},"481":{},"483":{},"487":{},"488":{},"489":{},"493":{},"499":{},"503":{},"506":{},"508":{},"509":{},"511":{},"514":{},"531":{},"544":{}},"component":{}}],["filename(",{"_index":3983,"title":{},"name":{},"text":{"184":{},"220":{},"233":{},"235":{},"243":{},"250":{},"251":{},"252":{},"273":{},"274":{},"279":{},"309":{},"367":{},"368":{},"386":{}},"component":{}}],["filename.hpl",{"_index":7283,"title":{},"name":{},"text":{"544":{}},"component":{}}],["filename.hwf",{"_index":7317,"title":{},"name":{},"text":{"544":{}},"component":{}}],["filename/foldernam",{"_index":5603,"title":{},"name":{},"text":{"280":{}},"component":{}}],["filenames(",{"_index":4376,"title":{},"name":{},"text":{"234":{},"313":{},"314":{},"366":{}},"component":{}}],["filepath",{"_index":3984,"title":{},"name":{},"text":{"185":{}},"component":{}}],["fileprefix",{"_index":1393,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["files/config/localtestconfig.json",{"_index":2299,"title":{},"name":{},"text":{"50":{}},"component":{}}],["files/fold",{"_index":5370,"title":{},"name":{},"text":{"251":{},"439":{},"447":{},"454":{},"458":{},"468":{},"477":{},"478":{},"506":{}},"component":{}}],["files/jdbc",{"_index":2303,"title":{},"name":{},"text":{"50":{}},"component":{}}],["files/metadata",{"_index":2301,"title":{},"name":{},"text":{"50":{}},"component":{}}],["files/som",{"_index":997,"title":{},"name":{},"text":{"8":{}},"component":{}}],["files=\"c:\\\\env",{"_index":3064,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["files=/env",{"_index":3070,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["files=/home/user/projects/hop2",{"_index":6289,"title":{},"name":{},"text":{"389":{}},"component":{}}],["files\\microsoft\\jdk",{"_index":1320,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"130":{},"150":{},"151":{},"152":{}},"component":{}}],["files\\som",{"_index":994,"title":{},"name":{},"text":{"8":{}},"component":{}}],["files_retriev",{"_index":6425,"title":{},"name":{},"text":{"453":{}},"component":{}}],["filesexist",{"_index":6473,"title":{},"name":{"458":{}},"text":{},"component":{}}],["filesfromresult",{"_index":4617,"title":{},"name":{"244":{}},"text":{},"component":{}}],["filesnam",{"_index":5589,"title":{},"name":{},"text":{"279":{},"386":{}},"component":{}}],["filestoresult",{"_index":4624,"title":{},"name":{"245":{}},"text":{},"component":{}}],["filesystem",{"_index":1047,"title":{},"name":{},"text":{"8":{},"168":{},"306":{},"307":{},"386":{},"429":{},"454":{},"458":{},"462":{},"463":{},"465":{},"470":{},"504":{}},"component":{}}],["filetyp",{"_index":5709,"title":{},"name":{},"text":{"295":{},"366":{}},"component":{}}],["file’",{"_index":4257,"title":{},"name":{},"text":{"220":{},"366":{}},"component":{}}],["fill",{"_index":650,"title":{},"name":{},"text":{"7":{},"172":{},"187":{},"204":{},"205":{},"206":{},"216":{},"227":{},"234":{},"237":{},"264":{},"265":{},"271":{},"287":{},"302":{},"344":{},"355":{},"467":{}},"component":{}}],["filter",{"_index":1681,"title":{"246":{},"269":{},"232-6":{},"246-4":{},"246-5":{},"246-6":{},"251-5":{},"270-14":{},"366-8":{},"464-5":{}},"name":{},"text":{"33":{},"81":{},"84":{},"86":{},"163":{},"202":{},"227":{},"232":{},"246":{},"251":{},"269":{},"270":{},"273":{},"277":{},"286":{},"291":{},"303":{},"331":{},"366":{},"370":{},"433":{},"441":{},"464":{}},"component":{}}],["filterrow",{"_index":4625,"title":{},"name":{"246":{}},"text":{},"component":{}}],["final",{"_index":2265,"title":{},"name":{},"text":{"50":{},"53":{},"54":{},"68":{},"84":{},"153":{},"158":{},"167":{},"292":{},"433":{},"457":{},"500":{},"513":{},"528":{},"530":{},"537":{},"542":{}},"component":{}}],["finalis",{"_index":3857,"title":{},"name":{},"text":{"167":{}},"component":{}}],["financ",{"_index":4505,"title":{},"name":{},"text":{"241":{}},"component":{}}],["financi",{"_index":4661,"title":{"247-48":{}},"name":{},"text":{"247":{}},"component":{}}],["find",{"_index":391,"title":{"247-152":{}},"name":{},"text":{"4":{},"5":{},"9":{},"15":{},"16":{},"19":{},"29":{},"39":{},"46":{},"48":{},"56":{},"68":{},"81":{},"83":{},"88":{},"90":{},"95":{},"98":{},"130":{},"150":{},"151":{},"152":{},"153":{},"154":{},"158":{},"160":{},"161":{},"163":{},"168":{},"206":{},"222":{},"227":{},"232":{},"235":{},"246":{},"247":{},"248":{},"250":{},"278":{},"291":{},"338":{},"345":{},"347":{},"361":{},"366":{},"370":{},"382":{},"389":{},"394":{},"397":{},"400":{},"431":{},"432":{},"436":{},"461":{},"519":{},"521":{},"525":{},"527":{},"528":{},"530":{},"534":{},"535":{},"541":{}},"component":{}}],["find(\"b\";\"abc\";1",{"_index":5183,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"abcabc",{"_index":5181,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"abcabcabc",{"_index":5182,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"bbbb",{"_index":5184,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"bbbb\";0",{"_index":5188,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"bbbb\";0.9",{"_index":5189,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"bbbb\";2",{"_index":5185,"title":{},"name":{},"text":{"247":{}},"component":{}}],["find(\"b\";\"bbbb\";2.9",{"_index":5186,"title":{},"name":{},"text":{"247":{}},"component":{}}],["findtext",{"_index":5283,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fine",{"_index":941,"title":{},"name":{},"text":{"7":{},"52":{},"61":{},"79":{},"83":{},"97":{},"158":{},"160":{},"304":{},"442":{},"448":{},"462":{},"468":{}},"component":{}}],["finish",{"_index":1363,"title":{"204":{}},"name":{},"text":{"19":{},"24":{},"25":{},"38":{},"41":{},"55":{},"56":{},"57":{},"68":{},"76":{},"78":{},"81":{},"83":{},"84":{},"85":{},"86":{},"102":{},"103":{},"158":{},"159":{},"160":{},"161":{},"167":{},"181":{},"203":{},"204":{},"310":{},"379":{},"453":{},"481":{},"503":{},"537":{},"544":{}},"component":{}}],["finit",{"_index":2387,"title":{},"name":{},"text":{"52":{},"247":{}},"component":{}}],["fire",{"_index":5372,"title":{},"name":{},"text":{"251":{},"470":{}},"component":{}}],["firebird",{"_index":3210,"title":{"116":{}},"name":{"116":{}},"text":{},"component":{}}],["firewal",{"_index":3458,"title":{},"name":{},"text":{"154":{},"461":{},"462":{},"463":{}},"component":{}}],["first",{"_index":916,"title":{"56-3":{},"56-4":{},"104-1":{}},"name":{},"text":{"7":{},"10":{},"15":{},"16":{},"18":{},"29":{},"48":{},"50":{},"52":{},"53":{},"55":{},"56":{},"57":{},"61":{},"82":{},"101":{},"103":{},"105":{},"130":{},"158":{},"161":{},"162":{},"163":{},"167":{},"169":{},"172":{},"181":{},"202":{},"205":{},"214":{},"220":{},"222":{},"223":{},"227":{},"232":{},"233":{},"234":{},"235":{},"236":{},"238":{},"243":{},"247":{},"248":{},"256":{},"260":{},"262":{},"268":{},"270":{},"273":{},"274":{},"275":{},"284":{},"290":{},"291":{},"292":{},"295":{},"297":{},"298":{},"309":{},"311":{},"314":{},"315":{},"330":{},"332":{},"334":{},"337":{},"338":{},"345":{},"346":{},"355":{},"357":{},"361":{},"364":{},"366":{},"367":{},"372":{},"374":{},"376":{},"378":{},"427":{},"433":{},"456":{},"457":{},"460":{},"464":{},"472":{},"480":{},"481":{},"483":{},"508":{},"509":{},"514":{},"519":{},"525":{},"527":{},"528":{},"537":{},"538":{},"540":{},"544":{}},"component":{}}],["first=fals",{"_index":6155,"title":{},"name":{},"text":{"372":{}},"component":{}}],["firstnam",{"_index":5644,"title":{},"name":{},"text":{"290":{},"316":{},"372":{},"373":{}},"component":{}}],["firstnamefield",{"_index":6147,"title":{},"name":{},"text":{"372":{}},"component":{}}],["firstnamefield).getstring(r",{"_index":6165,"title":{},"name":{},"text":{"372":{}},"component":{}}],["firstrow",{"_index":6461,"title":{},"name":{},"text":{"453":{}},"component":{}}],["firstrow.getstring(\"nam",{"_index":6463,"title":{},"name":{},"text":{"453":{}},"component":{}}],["first…​email",{"_index":6497,"title":{},"name":{},"text":{"464":{}},"component":{}}],["fit",{"_index":207,"title":{},"name":{},"text":{"1":{},"2":{},"235":{},"246":{},"272":{},"283":{},"355":{},"405":{},"530":{},"535":{}},"component":{}}],["five",{"_index":4433,"title":{},"name":{},"text":{"241":{},"270":{},"489":{}},"component":{}}],["fivesecondsago",{"_index":2099,"title":{},"name":{},"text":{"42":{}},"component":{}}],["fix",{"_index":287,"title":{"202-5":{},"247-101":{},"247-153":{}},"name":{},"text":{"2":{},"4":{},"24":{},"27":{},"83":{},"163":{},"198":{},"202":{},"207":{},"208":{},"247":{},"256":{},"318":{},"322":{},"354":{},"366":{},"367":{},"437":{},"494":{},"533":{},"543":{}},"component":{}}],["fixed(\"1190.89\";1;fals",{"_index":5200,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fixed(\"1190.89\";1;tru",{"_index":5198,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fixed(\"190",{"_index":5195,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fixed(\"190.89\";1",{"_index":5197,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fixed([number_field",{"_index":5191,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fixed(pi();5",{"_index":5025,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fj",{"_index":3394,"title":{},"name":{},"text":{"152":{},"162":{},"163":{},"167":{},"168":{}},"component":{}}],["fkxvq",{"_index":3706,"title":{},"name":{},"text":{"162":{}},"component":{}}],["fl",{"_index":3370,"title":{},"name":{},"text":{"151":{},"158":{},"246":{},"291":{},"389":{}},"component":{}}],["flag",{"_index":832,"title":{},"name":{},"text":{"7":{},"22":{},"27":{},"58":{},"76":{},"83":{},"152":{},"163":{},"212":{},"215":{},"220":{},"232":{},"235":{},"241":{},"242":{},"262":{},"285":{},"289":{},"297":{},"316":{},"328":{},"332":{},"333":{},"334":{},"360":{},"362":{},"366":{},"369":{},"371":{},"382":{},"433":{},"453":{},"464":{},"466":{},"482":{},"529":{}},"component":{}}],["flagfield",{"_index":6033,"title":{},"name":{},"text":{"360":{}},"component":{}}],["flat",{"_index":5970,"title":{},"name":{},"text":{"340":{},"366":{}},"component":{}}],["flatten",{"_index":2898,"title":{"321":{}},"name":{},"text":{"81":{},"86":{},"163":{},"250":{},"270":{},"321":{},"468":{},"544":{}},"component":{}}],["flatten.iter",{"_index":3768,"title":{},"name":{},"text":{"163":{}},"component":{}}],["flattened_json",{"_index":5467,"title":{},"name":{},"text":{"270":{}},"component":{}}],["flawlessli",{"_index":1852,"title":{},"name":{},"text":{"38":{}},"component":{}}],["flex",{"_index":6625,"title":{"513-4":{}},"name":{},"text":{"513":{}},"component":{}}],["flexibl",{"_index":332,"title":{"20-3":{}},"name":{},"text":{"2":{},"5":{},"20":{},"50":{},"52":{},"55":{},"70":{},"170":{},"221":{},"309":{},"366":{},"381":{},"493":{},"511":{},"514":{}},"component":{}}],["fli",{"_index":5754,"title":{},"name":{},"text":{"303":{}},"component":{}}],["flink",{"_index":324,"title":{"160":{},"162":{},"167":{},"160-1":{},"160-2":{},"160-3":{},"160-5":{},"162-2":{},"162-4":{},"164-5":{},"164-6":{},"167-1":{},"167-3":{},"167-4":{}},"name":{"160":{},"162":{},"167":{}},"text":{"2":{},"4":{},"20":{},"37":{},"69":{},"88":{},"159":{},"160":{},"162":{},"163":{},"164":{},"167":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"518":{},"519":{}},"component":{}}],["flink.apache.org/v1beta1",{"_index":3671,"title":{},"name":{},"text":{"162":{}},"component":{}}],["flink/flink",{"_index":3553,"title":{},"name":{},"text":{"160":{}},"component":{}}],["flink:1.15",{"_index":3675,"title":{},"name":{},"text":{"162":{}},"component":{}}],["flinkconfigur",{"_index":3679,"title":{},"name":{},"text":{"162":{}},"component":{}}],["flinkdeploy",{"_index":3673,"title":{},"name":{},"text":{"162":{}},"component":{}}],["flinkrunconfig",{"_index":3879,"title":{},"name":{},"text":{"167":{}},"component":{}}],["flinkvers",{"_index":3677,"title":{},"name":{},"text":{"162":{}},"component":{}}],["flintston",{"_index":5682,"title":{},"name":{},"text":{"292":{}},"component":{}}],["flip",{"_index":4475,"title":{},"name":{},"text":{"241":{}},"component":{}}],["float",{"_index":4185,"title":{},"name":{},"text":{"205":{},"217":{},"227":{},"234":{},"247":{},"253":{},"254":{},"258":{},"267":{},"270":{},"273":{},"277":{},"279":{},"298":{},"316":{},"331":{},"338":{},"366":{},"367":{},"383":{}},"component":{}}],["floor",{"_index":4093,"title":{"247-102":{}},"name":{},"text":{"205":{}},"component":{}}],["flow",{"_index":684,"title":{},"name":{},"text":{"7":{},"50":{},"61":{},"68":{},"78":{},"81":{},"84":{},"172":{},"275":{},"378":{},"483":{},"500":{}},"component":{}}],["flush",{"_index":822,"title":{},"name":{},"text":{"7":{},"163":{},"165":{},"166":{},"167":{},"168":{},"227":{}},"component":{}}],["flyway",{"_index":2406,"title":{},"name":{},"text":{"54":{}},"component":{}}],["focu",{"_index":1423,"title":{},"name":{},"text":{"20":{},"21":{},"56":{},"154":{},"529":{}},"component":{}}],["focus",{"_index":1171,"title":{},"name":{},"text":{"10":{},"159":{},"164":{},"166":{},"431":{}},"component":{}}],["fold",{"_index":5814,"title":{},"name":{},"text":{"316":{}},"component":{}}],["folder",{"_index":162,"title":{"444":{},"448":{},"459":{},"460":{},"29-6":{},"255-4":{},"514-3":{},"544-2":{}},"name":{"421":{},"422":{},"424":{},"425":{}},"text":{"1":{},"5":{},"7":{},"8":{},"9":{},"11":{},"14":{},"22":{},"23":{},"25":{},"30":{},"37":{},"41":{},"46":{},"50":{},"53":{},"54":{},"55":{},"56":{},"60":{},"62":{},"64":{},"68":{},"75":{},"81":{},"83":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"97":{},"98":{},"101":{},"103":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"167":{},"168":{},"170":{},"185":{},"209":{},"232":{},"233":{},"235":{},"242":{},"251":{},"255":{},"274":{},"280":{},"287":{},"295":{},"298":{},"305":{},"311":{},"312":{},"314":{},"315":{},"352":{},"367":{},"368":{},"372":{},"373":{},"387":{},"388":{},"389":{},"390":{},"395":{},"406":{},"422":{},"424":{},"425":{},"430":{},"433":{},"435":{},"439":{},"441":{},"442":{},"444":{},"447":{},"448":{},"450":{},"454":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"468":{},"477":{},"478":{},"481":{},"487":{},"488":{},"499":{},"503":{},"504":{},"506":{},"509":{},"511":{},"514":{},"520":{},"527":{},"528":{},"529":{},"530":{},"531":{},"533":{},"534":{},"537":{},"538":{},"540":{},"541":{},"543":{},"544":{}},"component":{}}],["folder/test.zip",{"_index":6601,"title":{},"name":{},"text":{"499":{}},"component":{}}],["folderisempti",{"_index":6474,"title":{},"name":{"459":{}},"text":{},"component":{}}],["foldernam",{"_index":5378,"title":{},"name":{},"text":{"255":{}},"component":{}}],["folderscompar",{"_index":6475,"title":{},"name":{"460":{}},"text":{},"component":{}}],["follow",{"_index":163,"title":{"537-1":{}},"name":{},"text":{"1":{},"5":{},"7":{},"11":{},"15":{},"24":{},"25":{},"27":{},"29":{},"37":{},"40":{},"41":{},"42":{},"43":{},"46":{},"50":{},"53":{},"54":{},"55":{},"56":{},"57":{},"64":{},"68":{},"76":{},"77":{},"78":{},"81":{},"82":{},"83":{},"84":{},"85":{},"87":{},"88":{},"90":{},"91":{},"93":{},"94":{},"97":{},"98":{},"99":{},"101":{},"103":{},"105":{},"107":{},"130":{},"150":{},"152":{},"154":{},"160":{},"161":{},"162":{},"163":{},"164":{},"168":{},"176":{},"179":{},"185":{},"186":{},"204":{},"205":{},"217":{},"219":{},"220":{},"221":{},"227":{},"231":{},"234":{},"235":{},"246":{},"247":{},"248":{},"258":{},"259":{},"268":{},"270":{},"273":{},"274":{},"275":{},"277":{},"278":{},"280":{},"287":{},"290":{},"291":{},"292":{},"308":{},"309":{},"316":{},"317":{},"320":{},"321":{},"323":{},"327":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"337":{},"344":{},"350":{},"358":{},"360":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"381":{},"383":{},"389":{},"426":{},"429":{},"432":{},"433":{},"443":{},"446":{},"450":{},"453":{},"456":{},"466":{},"467":{},"481":{},"490":{},"500":{},"514":{},"521":{},"522":{},"524":{},"525":{},"527":{},"528":{},"529":{},"531":{},"532":{},"533":{},"534":{},"537":{},"538":{},"540":{},"541":{},"542":{},"543":{}},"component":{}}],["fomula",{"_index":4745,"title":{},"name":{},"text":{"247":{}},"component":{}}],["font",{"_index":1624,"title":{},"name":{},"text":{"27":{},"518":{},"531":{},"542":{}},"component":{}}],["foo",{"_index":6465,"title":{},"name":{},"text":{"453":{}},"component":{}}],["foo.class",{"_index":6873,"title":{},"name":{},"text":{"528":{}},"component":{}}],["foo.mymessag",{"_index":6871,"title":{},"name":{},"text":{"528":{}},"component":{}}],["foo/bar/hop",{"_index":1925,"title":{},"name":{},"text":{"41":{}},"component":{}}],["food",{"_index":4510,"title":{},"name":{},"text":{"241":{}},"component":{}}],["foodanddrink",{"_index":4574,"title":{},"name":{},"text":{"241":{}},"component":{}}],["footer",{"_index":4396,"title":{},"name":{},"text":{"235":{},"366":{},"367":{}},"component":{}}],["footprint",{"_index":448,"title":{},"name":{},"text":{"5":{},"52":{}},"component":{}}],["forc",{"_index":1837,"title":{"38-8":{},"152-6":{}},"name":{},"text":{"71":{},"163":{},"177":{},"222":{},"233":{},"235":{},"241":{},"289":{},"295":{},"367":{},"369":{},"495":{},"533":{}},"component":{}}],["force_pull=fals",{"_index":2586,"title":{},"name":{},"text":{"56":{}},"component":{}}],["foreign",{"_index":5502,"title":{},"name":{},"text":{"271":{}},"component":{}}],["foremost",{"_index":6311,"title":{},"name":{},"text":{"427":{}},"component":{}}],["forest",{"_index":3013,"title":{},"name":{},"text":{"87":{}},"component":{}}],["forget",{"_index":5742,"title":{},"name":{},"text":{"299":{},"528":{}},"component":{}}],["fork",{"_index":6766,"title":{"533-2":{},"533-13":{}},"name":{},"text":{"521":{},"533":{}},"component":{}}],["form",{"_index":625,"title":{"506":{}},"name":{},"text":{"7":{},"37":{},"41":{},"50":{},"75":{},"82":{},"83":{},"167":{},"170":{},"175":{},"178":{},"205":{},"216":{},"221":{},"233":{},"247":{},"261":{},"264":{},"274":{},"309":{},"319":{},"345":{},"352":{},"366":{},"372":{},"378":{},"506":{},"511":{},"527":{},"531":{},"546":{}},"component":{}}],["format",{"_index":730,"title":{"533-6":{}},"name":{},"text":{"7":{},"8":{},"9":{},"38":{},"46":{},"50":{},"53":{},"59":{},"60":{},"76":{},"81":{},"83":{},"107":{},"133":{},"152":{},"165":{},"167":{},"168":{},"175":{},"178":{},"180":{},"185":{},"194":{},"195":{},"198":{},"199":{},"200":{},"205":{},"214":{},"217":{},"220":{},"223":{},"227":{},"228":{},"234":{},"235":{},"237":{},"246":{},"247":{},"250":{},"258":{},"259":{},"260":{},"273":{},"275":{},"276":{},"277":{},"279":{},"280":{},"288":{},"289":{},"292":{},"298":{},"303":{},"305":{},"308":{},"313":{},"314":{},"315":{},"316":{},"331":{},"336":{},"338":{},"340":{},"342":{},"344":{},"349":{},"350":{},"351":{},"352":{},"354":{},"366":{},"367":{},"368":{},"372":{},"381":{},"383":{},"386":{},"388":{},"394":{},"400":{},"433":{},"442":{},"450":{},"451":{},"461":{},"465":{},"466":{},"468":{},"470":{},"475":{},"477":{},"478":{},"481":{},"487":{},"488":{},"489":{},"499":{},"503":{},"508":{},"509":{},"528":{},"533":{}},"component":{}}],["formatcod",{"_index":5303,"title":{},"name":{},"text":{"247":{}},"component":{}}],["formatt",{"_index":7035,"title":{},"name":{},"text":{"533":{}},"component":{}}],["former",{"_index":5326,"title":{},"name":{},"text":{"248":{}},"component":{}}],["formerli",{"_index":3587,"title":{},"name":{},"text":{"161":{}},"component":{}}],["formlayout",{"_index":6927,"title":{},"name":{},"text":{"529":{}},"component":{}}],["formula",{"_index":2889,"title":{"247":{},"247-4":{}},"name":{"247":{}},"text":{"81":{},"86":{},"235":{},"247":{},"344":{}},"component":{}}],["formula’",{"_index":4740,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fortun",{"_index":7220,"title":{},"name":{},"text":{"542":{}},"component":{}}],["forward",{"_index":2933,"title":{},"name":{},"text":{"82":{},"162":{},"179":{},"202":{},"247":{}},"component":{}}],["found",{"_index":399,"title":{"251-6":{}},"name":{},"text":{"4":{},"7":{},"23":{},"38":{},"41":{},"46":{},"60":{},"78":{},"90":{},"150":{},"152":{},"160":{},"161":{},"162":{},"163":{},"203":{},"211":{},"220":{},"227":{},"230":{},"233":{},"234":{},"247":{},"250":{},"251":{},"268":{},"285":{},"295":{},"313":{},"355":{},"359":{},"360":{},"361":{},"366":{},"371":{},"372":{},"388":{},"441":{},"485":{},"488":{},"489":{},"500":{},"502":{},"503":{},"514":{},"520":{},"527":{},"528":{},"529":{},"530":{},"534":{},"536":{},"537":{},"538":{},"541":{},"544":{}},"component":{}}],["foundat",{"_index":6745,"title":{},"name":{},"text":{"519":{},"533":{},"534":{}},"component":{}}],["foundation’",{"_index":6858,"title":{},"name":{},"text":{"527":{},"531":{},"546":{}},"component":{}}],["four",{"_index":1851,"title":{},"name":{},"text":{"38":{},"234":{},"247":{},"270":{},"277":{},"279":{},"316":{},"321":{},"325":{},"331":{},"338":{},"349":{}},"component":{}}],["fourth",{"_index":3156,"title":{},"name":{},"text":{"103":{},"509":{}},"component":{}}],["fr/french",{"_index":6234,"title":{},"name":{},"text":{"375":{}},"component":{}}],["fr_fr",{"_index":6092,"title":{},"name":{},"text":{"366":{}},"component":{}}],["fractioal",{"_index":6305,"title":{},"name":{},"text":{"400":{}},"component":{}}],["fraction",{"_index":4749,"title":{},"name":{},"text":{"247":{},"248":{}},"component":{}}],["fragment",{"_index":4362,"title":{"372-8":{}},"name":{},"text":{"233":{},"372":{}},"component":{}}],["framework",{"_index":5650,"title":{},"name":{},"text":{"291":{},"428":{},"525":{},"527":{},"541":{}},"component":{}}],["franc",{"_index":1110,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["fraud",{"_index":1114,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["fred",{"_index":5681,"title":{},"name":{},"text":{"292":{},"324":{}},"component":{}}],["fred.column[\"color",{"_index":5874,"title":{},"name":{},"text":{"324":{}},"component":{}}],["fred.column[\"posit",{"_index":5872,"title":{},"name":{},"text":{"324":{}},"component":{}}],["fredrow",{"_index":5875,"title":{},"name":{},"text":{"324":{}},"component":{}}],["fredrow.addcolumn(\"color",{"_index":5879,"title":{},"name":{},"text":{"324":{}},"component":{}}],["fredrow.addcolumn(\"nam",{"_index":5877,"title":{},"name":{},"text":{"324":{}},"component":{}}],["fredrow.addcolumn(\"posit",{"_index":5878,"title":{},"name":{},"text":{"324":{}},"component":{}}],["free",{"_index":477,"title":{},"name":{},"text":{"5":{},"6":{},"7":{},"9":{},"217":{},"247":{},"256":{},"298":{},"341":{},"347":{},"429":{}},"component":{}}],["freedom",{"_index":1089,"title":{},"name":{},"text":{"9":{},"247":{}},"component":{}}],["french",{"_index":6091,"title":{},"name":{},"text":{"366":{}},"component":{}}],["frequenc",{"_index":794,"title":{},"name":{},"text":{"7":{},"169":{}},"component":{}}],["frequent",{"_index":1243,"title":{"12":{}},"name":{},"text":{"12":{},"247":{},"400":{}},"component":{}}],["fresh",{"_index":4393,"title":{},"name":{},"text":{"235":{}},"component":{}}],["freshli",{"_index":5407,"title":{},"name":{},"text":{"261":{}},"component":{}}],["fri",{"_index":4164,"title":{},"name":{},"text":{"205":{}},"component":{}}],["friday",{"_index":4855,"title":{},"name":{},"text":{"247":{}},"component":{}}],["friend",{"_index":4514,"title":{},"name":{},"text":{"241":{}},"component":{}}],["front",{"_index":2324,"title":{},"name":{},"text":{"50":{}},"component":{}}],["frontend",{"_index":2260,"title":{},"name":{},"text":{"50":{},"113":{}},"component":{}}],["ftp",{"_index":998,"title":{"461":{},"462":{},"463":{}},"name":{"461":{}},"text":{"8":{},"235":{},"453":{},"461":{},"462":{},"463":{},"468":{},"481":{},"487":{},"488":{}},"component":{}}],["ftp.nonproxyhostslocal|*.local|169.254/16|*.169.254/16",{"_index":2115,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz",{"_index":1002,"title":{},"name":{},"text":{"8":{}},"component":{}}],["ftp://username:password@ftpserver/dir/testfile.txt",{"_index":6512,"title":{},"name":{},"text":{"468":{}},"component":{}}],["ftp://username:password@ftpserver/dir/testfile_partly.txt",{"_index":6511,"title":{},"name":{},"text":{"468":{}},"component":{}}],["ftpdelet",{"_index":6488,"title":{},"name":{"462":{}},"text":{},"component":{}}],["ftpfilesystemconfigbuilder.getinstance().setuserdirisroot(opt",{"_index":1005,"title":{},"name":{},"text":{"8":{}},"component":{}}],["ftpput",{"_index":6490,"title":{},"name":{"463":{}},"text":{},"component":{}}],["ftps://myusername:mypassword@somehost/pub/downloads/somefile.tgz",{"_index":1007,"title":{},"name":{},"text":{"8":{}},"component":{}}],["full",{"_index":264,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"15":{},"16":{},"19":{},"24":{},"41":{},"50":{},"55":{},"56":{},"85":{},"94":{},"164":{},"165":{},"233":{},"234":{},"235":{},"246":{},"261":{},"274":{},"284":{},"293":{},"298":{},"303":{},"310":{},"366":{},"372":{},"379":{},"414":{},"444":{},"453":{},"466":{},"489":{},"508":{},"509":{},"514":{}},"component":{}}],["fulli",{"_index":508,"title":{},"name":{},"text":{"5":{},"30":{},"32":{},"94":{},"163":{},"165":{},"289":{},"532":{}},"component":{}}],["fullnam",{"_index":4551,"title":{},"name":{},"text":{"241":{},"316":{}},"component":{}}],["fun",{"_index":2524,"title":{},"name":{},"text":{"56":{},"151":{},"389":{},"528":{}},"component":{}}],["function",{"_index":48,"title":{"227-10":{},"247-6":{},"270-5":{},"388-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"16":{},"19":{},"20":{},"26":{},"30":{},"32":{},"34":{},"50":{},"52":{},"53":{},"54":{},"68":{},"78":{},"80":{},"84":{},"85":{},"105":{},"166":{},"170":{},"179":{},"202":{},"203":{},"205":{},"206":{},"217":{},"227":{},"229":{},"234":{},"246":{},"247":{},"263":{},"270":{},"291":{},"309":{},"336":{},"344":{},"345":{},"372":{},"373":{},"377":{},"413":{},"418":{},"431":{},"450":{},"452":{},"453":{},"478":{},"492":{},"503":{},"511":{},"513":{},"514":{},"519":{},"525":{},"530":{},"534":{}},"component":{}}],["function/button",{"_index":6126,"title":{},"name":{},"text":{"366":{}},"component":{}}],["fundament",{"_index":2817,"title":{},"name":{},"text":{"78":{},"248":{}},"component":{}}],["funnynam",{"_index":4515,"title":{},"name":{},"text":{"241":{}},"component":{}}],["further",{"_index":314,"title":{},"name":{},"text":{"2":{},"8":{},"50":{},"52":{},"182":{},"211":{},"234":{},"273":{},"275":{},"276":{},"331":{},"366":{},"367":{},"433":{},"502":{},"536":{}},"component":{}}],["furthermor",{"_index":2975,"title":{},"name":{},"text":{"85":{},"117":{}},"component":{}}],["fuss",{"_index":3354,"title":{},"name":{},"text":{"151":{},"152":{},"389":{},"433":{}},"component":{}}],["futil",{"_index":4184,"title":{},"name":{},"text":{"205":{}},"component":{}}],["futur",{"_index":245,"title":{},"name":{},"text":{"2":{},"165":{},"241":{},"247":{},"263":{}},"component":{}}],["fuzzi",{"_index":2358,"title":{"248":{}},"name":{},"text":{"52":{},"81":{},"86":{},"248":{}},"component":{}}],["fuzzymatch",{"_index":5318,"title":{},"name":{"248":{}},"text":{},"component":{}}],["fv",{"_index":4937,"title":{},"name":{},"text":{"247":{}},"component":{}}],["fyi",{"_index":4635,"title":{},"name":{},"text":{"246":{}},"component":{}}],["février",{"_index":6093,"title":{},"name":{},"text":{"366":{}},"component":{}}],["g",{"_index":6581,"title":{},"name":{},"text":{"490":{}},"component":{}}],["g1",{"_index":3810,"title":{},"name":{},"text":{"165":{}},"component":{}}],["ga4",{"_index":5400,"title":{},"name":{},"text":{"259":{}},"component":{}}],["gain",{"_index":4211,"title":{},"name":{},"text":{"213":{}},"component":{}}],["galaxi",{"_index":4576,"title":{},"name":{},"text":{"241":{}},"component":{}}],["game",{"_index":4595,"title":{},"name":{},"text":{"241":{}},"component":{}}],["gameofthron",{"_index":4516,"title":{},"name":{},"text":{"241":{}},"component":{}}],["gap",{"_index":5331,"title":{},"name":{},"text":{"248":{}},"component":{}}],["garbag",{"_index":580,"title":{},"name":{},"text":{"5":{}},"component":{}}],["gateway",{"_index":7024,"title":{},"name":{},"text":{"533":{}},"component":{}}],["gather",{"_index":2861,"title":{},"name":{},"text":{"81":{}},"component":{}}],["gaussian",{"_index":4102,"title":{},"name":{},"text":{"205":{}},"component":{}}],["gave",{"_index":6042,"title":{},"name":{},"text":{"361":{}},"component":{}}],["gax",{"_index":3220,"title":{},"name":{},"text":{"117":{}},"component":{}}],["gb",{"_index":573,"title":{},"name":{},"text":{"5":{},"52":{},"165":{}},"component":{}}],["gbyte",{"_index":6469,"title":{},"name":{},"text":{"454":{}},"component":{}}],["gc",{"_index":7247,"title":{},"name":{},"text":{"542":{}},"component":{}}],["gc.drawrectangl",{"_index":7248,"title":{},"name":{},"text":{"542":{}},"component":{}}],["gce",{"_index":3801,"title":{},"name":{},"text":{"165":{}},"component":{}}],["gck",{"_index":3139,"title":{},"name":{},"text":{"100":{},"148":{},"152":{}},"component":{}}],["gcloud",{"_index":6340,"title":{},"name":{},"text":{"430":{}},"component":{}}],["gcp",{"_index":1314,"title":{"192":{},"193":{}},"name":{},"text":{"18":{},"41":{},"81":{},"86":{},"100":{},"192":{},"193":{},"430":{}},"component":{}}],["gdc",{"_index":3144,"title":{},"name":{},"text":{"101":{},"149":{},"152":{}},"component":{}}],["gdffjrxmiofdxeht/tdcaw539/pn77rw0wnzhptachmb2edy7jjnolz/tc4hkmadu4to4j45wes",{"_index":2123,"title":{},"name":{},"text":{"42":{}},"component":{}}],["gdt",{"_index":3145,"title":{},"name":{},"text":{"101":{},"149":{},"152":{}},"component":{}}],["gen",{"_index":7145,"title":{},"name":{},"text":{"538":{}},"component":{}}],["gencsv",{"_index":5705,"title":{},"name":{"295":{}},"text":{},"component":{}}],["gender",{"_index":6060,"title":{},"name":{},"text":{"364":{}},"component":{}}],["gener",{"_index":216,"title":{"249":{},"295":{},"322":{},"10-1":{},"11-1":{},"27-4":{},"36-1":{},"41-2":{},"71-4":{},"217-4":{},"227-9":{},"228-4":{},"232-4":{},"233-4":{},"248-4":{},"264-4":{},"274-4":{},"275-4":{},"277-3":{},"278-3":{},"287-5":{},"289-4":{},"289-5":{},"290-4":{},"291-4":{},"292-4":{},"309-5":{},"314-4":{},"315-3":{},"316-5":{},"319-5":{},"326-4":{},"330-4":{},"331-3":{},"332-3":{},"333-3":{},"334-3":{},"337-5":{},"352-4":{},"360-4":{},"366-4":{},"378-5":{},"450-3":{},"454-3":{},"461-3":{},"462-3":{},"463-3":{},"464-3":{},"465-3":{},"468-3":{},"470-3":{},"477-3":{},"478-3":{},"481-3":{},"487-3":{},"488-3":{},"506-3":{},"509-3":{},"533-14":{}},"name":{},"text":{"1":{},"7":{},"8":{},"11":{},"15":{},"27":{},"29":{},"38":{},"41":{},"42":{},"44":{},"53":{},"54":{},"55":{},"56":{},"57":{},"64":{},"68":{},"70":{},"71":{},"75":{},"78":{},"81":{},"82":{},"86":{},"99":{},"100":{},"101":{},"103":{},"107":{},"130":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"169":{},"173":{},"177":{},"178":{},"183":{},"205":{},"213":{},"216":{},"220":{},"223":{},"227":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"241":{},"247":{},"249":{},"251":{},"253":{},"254":{},"256":{},"262":{},"263":{},"264":{},"265":{},"268":{},"270":{},"272":{},"273":{},"274":{},"275":{},"279":{},"280":{},"285":{},"287":{},"289":{},"291":{},"295":{},"297":{},"299":{},"303":{},"309":{},"313":{},"314":{},"316":{},"318":{},"319":{},"322":{},"324":{},"325":{},"326":{},"331":{},"337":{},"339":{},"347":{},"352":{},"360":{},"363":{},"364":{},"366":{},"367":{},"371":{},"380":{},"383":{},"388":{},"389":{},"405":{},"432":{},"433":{},"465":{},"466":{},"481":{},"487":{},"488":{},"490":{},"503":{},"505":{},"510":{},"511":{},"513":{},"520":{},"522":{},"525":{},"527":{},"529":{},"532":{},"533":{},"534":{},"536":{},"537":{},"538":{},"540":{},"544":{}},"component":{}}],["generate_row",{"_index":2092,"title":{},"name":{},"text":{"42":{}},"component":{}}],["generated;otherwis",{"_index":4375,"title":{},"name":{},"text":{"234":{},"250":{},"313":{}},"component":{}}],["generaterandomvalu",{"_index":5343,"title":{},"name":{"249":{}},"text":{},"component":{}}],["generatordummyhop",{"_index":7296,"title":{},"name":{},"text":{"544":{}},"component":{}}],["genr",{"_index":2703,"title":{},"name":{},"text":{"68":{},"241":{}},"component":{}}],["genre/prob",{"_index":2705,"title":{},"name":{},"text":{"68":{}},"component":{}}],["genrsa",{"_index":1943,"title":{},"name":{},"text":{"41":{}},"component":{}}],["geometri",{"_index":3019,"title":{},"name":{},"text":{"87":{}},"component":{}}],["geoprocess",{"_index":3020,"title":{},"name":{},"text":{"87":{}},"component":{}}],["geospati",{"_index":3021,"title":{},"name":{},"text":{"87":{}},"component":{}}],["germani",{"_index":4109,"title":{},"name":{},"text":{"205":{},"400":{}},"component":{}}],["get",{"_index":416,"title":{"163":{},"515":{},"525":{},"21-1":{},"25-1":{},"534-1":{}},"name":{"163":{},"515":{},"525":{}},"text":{"4":{},"14":{},"20":{},"28":{},"40":{},"52":{},"58":{},"82":{},"84":{},"151":{},"152":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"186":{},"193":{},"203":{},"233":{},"244":{},"255":{},"257":{},"277":{},"289":{},"302":{},"320":{},"346":{},"357":{},"363":{},"366":{},"367":{},"368":{},"383":{},"389":{},"433":{},"437":{},"481":{},"514":{},"517":{},"519":{},"526":{},"533":{},"542":{},"544":{}},"component":{}}],["get(fields.in",{"_index":6164,"title":{},"name":{},"text":{"372":{}},"component":{}}],["get(fields.out",{"_index":6167,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getdatafromxml",{"_index":5348,"title":{},"name":{"250":{}},"text":{},"component":{}}],["getfilenam",{"_index":5359,"title":{},"name":{"251":{}},"text":{},"component":{}}],["getfilesrowcount",{"_index":5373,"title":{},"name":{"252":{}},"text":{},"component":{}}],["gethadoopclusterimag",{"_index":7234,"title":{},"name":{},"text":{"542":{}},"component":{}}],["getinputrowmeta",{"_index":6200,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getinputrowmeta().indexofvalue(\"lookup",{"_index":5480,"title":{},"name":{},"text":{"270":{}},"component":{}}],["getinputrowmeta().indexofvalue(getparameter(\"year",{"_index":6204,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getinst",{"_index":7214,"title":{},"name":{},"text":{"542":{}},"component":{}}],["getlinesoutput",{"_index":6194,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getlogbufferfromto",{"_index":7347,"title":{},"name":{},"text":{"544":{}},"component":{}}],["getlogchannel",{"_index":7343,"title":{},"name":{},"text":{"544":{}},"component":{}}],["getlogchannelchildren",{"_index":7339,"title":{},"name":{},"text":{"544":{}},"component":{}}],["getlogchannelid",{"_index":7344,"title":{},"name":{},"text":{"544":{}},"component":{}}],["getloginfo",{"_index":5710,"title":{},"name":{"296":{}},"text":{},"component":{}}],["getmetadata",{"_index":6929,"title":{},"name":{},"text":{"529":{}},"component":{}}],["getobjectid",{"_index":6942,"title":{},"name":{},"text":{"529":{}},"component":{}}],["getparameter(\"firstname_field",{"_index":6152,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getparameter(\"lastname_field",{"_index":6153,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getparameter(\"name_field",{"_index":6154,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getpipelineimag",{"_index":2040,"title":{"42-4":{}},"name":{},"text":{"42":{}},"component":{}}],["getpipelinestatu",{"_index":2041,"title":{"42-5":{}},"name":{},"text":{"42":{}},"component":{}}],["getpop",{"_index":6493,"title":{},"name":{"464":{}},"text":{},"component":{}}],["getrecordsfromstream",{"_index":5374,"title":{},"name":{"253":{}},"text":{},"component":{}}],["getrow",{"_index":6156,"title":{},"name":{},"text":{"372":{}},"component":{}}],["getrowsfromresult",{"_index":5376,"title":{},"name":{"254":{}},"text":{},"component":{}}],["getsubfold",{"_index":5377,"title":{},"name":{"255":{}},"text":{},"component":{}}],["getsystemdata",{"_index":5379,"title":{},"name":{"256":{}},"text":{},"component":{}}],["gettablenam",{"_index":5384,"title":{},"name":{"257":{}},"text":{},"component":{}}],["getter",{"_index":7073,"title":{},"name":{},"text":{"536":{}},"component":{}}],["gettransform",{"_index":7080,"title":{},"name":{},"text":{"536":{}},"component":{}}],["gettransformdata",{"_index":7081,"title":{},"name":{},"text":{"536":{}},"component":{}}],["getvari",{"_index":5386,"title":{},"name":{"258":{}},"text":{},"component":{}}],["getwidgetscont",{"_index":6930,"title":{},"name":{},"text":{"529":{}},"component":{}}],["getworkflowimag",{"_index":2042,"title":{"42-7":{}},"name":{},"text":{"42":{}},"component":{}}],["getworkflowstatu",{"_index":2043,"title":{"42-8":{}},"name":{},"text":{"42":{}},"component":{}}],["getxmlpluginfil",{"_index":6950,"title":{},"name":{},"text":{"530":{}},"component":{}}],["gi",{"_index":3017,"title":{},"name":{},"text":{"87":{}},"component":{}}],["gigabyt",{"_index":3815,"title":{},"name":{},"text":{"165":{},"298":{}},"component":{}}],["git",{"_index":157,"title":{"23":{},"23-3":{},"30-3":{},"30-5":{},"30-6":{},"30-7":{}},"name":{"23":{}},"text":{"1":{},"9":{},"23":{},"26":{},"30":{},"88":{},"91":{},"92":{},"164":{},"388":{},"389":{},"390":{},"406":{},"514":{},"519":{},"533":{},"537":{},"538":{}},"component":{}}],["git/config",{"_index":1667,"title":{},"name":{},"text":{"30":{}},"component":{}}],["git@github.com:apache/hop.git",{"_index":7049,"title":{},"name":{},"text":{"533":{}},"component":{}}],["git@github.com:youraccount/hop.git",{"_index":7021,"title":{},"name":{},"text":{"533":{}},"component":{}}],["git_repo_name=apach",{"_index":6715,"title":{},"name":{},"text":{"514":{}},"component":{}}],["git_repo_name=repo",{"_index":6690,"title":{},"name":{},"text":{"514":{}},"component":{}}],["git_repo_uri",{"_index":6682,"title":{},"name":{},"text":{"514":{}},"component":{}}],["git_repo_uri=http",{"_index":6687,"title":{},"name":{},"text":{"514":{}},"component":{}}],["git_repo_uri=https://github.com/diethardsteiner/apach",{"_index":6714,"title":{},"name":{},"text":{"514":{}},"component":{}}],["githop",{"_index":7031,"title":{},"name":{},"text":{"533":{}},"component":{}}],["github",{"_index":410,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"50":{},"56":{},"87":{},"165":{},"198":{},"199":{},"514":{},"519":{},"527":{},"528":{},"533":{},"537":{},"538":{}},"component":{}}],["gitignor",{"_index":3788,"title":{},"name":{},"text":{"164":{},"388":{}},"component":{}}],["gitlab",{"_index":6643,"title":{},"name":{},"text":{"514":{}},"component":{}}],["gitpod",{"_index":7025,"title":{},"name":{},"text":{"533":{}},"component":{}}],["gitpod.io",{"_index":7022,"title":{},"name":{},"text":{"533":{}},"component":{}}],["give",{"_index":275,"title":{},"name":{},"text":{"2":{},"6":{},"9":{},"33":{},"50":{},"52":{},"55":{},"76":{},"83":{},"85":{},"88":{},"93":{},"99":{},"103":{},"104":{},"130":{},"170":{},"211":{},"217":{},"221":{},"235":{},"246":{},"247":{},"250":{},"251":{},"256":{},"262":{},"283":{},"286":{},"309":{},"312":{},"313":{},"319":{},"323":{},"324":{},"325":{},"336":{},"366":{},"367":{},"378":{},"383":{},"395":{},"400":{},"465":{},"489":{},"502":{},"511":{},"527":{},"528":{},"532":{},"544":{}},"component":{}}],["given",{"_index":1095,"title":{"37-12":{}},"name":{},"text":{"9":{},"23":{},"37":{},"40":{},"57":{},"58":{},"70":{},"91":{},"101":{},"154":{},"157":{},"163":{},"180":{},"188":{},"198":{},"205":{},"211":{},"217":{},"234":{},"235":{},"238":{},"246":{},"247":{},"248":{},"266":{},"273":{},"277":{},"280":{},"296":{},"312":{},"324":{},"348":{},"357":{},"367":{},"380":{},"400":{},"468":{},"480":{},"489":{},"493":{},"501":{},"502":{},"521":{},"528":{},"529":{},"530":{},"532":{}},"component":{}}],["global",{"_index":619,"title":{"7-16":{},"90-2":{},"202-8":{},"376-3":{}},"name":{},"text":{"7":{},"22":{},"27":{},"94":{},"97":{},"202":{}},"component":{}}],["gmt",{"_index":6121,"title":{},"name":{},"text":{"366":{}},"component":{}}],["gnupg",{"_index":6539,"title":{},"name":{},"text":{"478":{}},"component":{}}],["go",{"_index":749,"title":{},"name":{},"text":{"7":{},"9":{},"11":{},"21":{},"46":{},"53":{},"54":{},"55":{},"56":{},"76":{},"94":{},"99":{},"100":{},"101":{},"154":{},"158":{},"160":{},"162":{},"163":{},"179":{},"213":{},"231":{},"232":{},"246":{},"247":{},"251":{},"314":{},"331":{},"391":{},"395":{},"426":{},"453":{},"461":{},"467":{},"513":{},"514":{},"525":{},"530":{},"531":{},"533":{},"538":{},"540":{}},"component":{}}],["goal",{"_index":2475,"title":{},"name":{},"text":{"56":{},"81":{},"96":{},"162":{},"247":{},"372":{},"475":{},"520":{}},"component":{}}],["god",{"_index":4443,"title":{},"name":{},"text":{"241":{}},"component":{}}],["goe",{"_index":1660,"title":{},"name":{},"text":{"29":{},"41":{},"82":{},"222":{},"247":{},"297":{},"483":{},"524":{},"531":{},"533":{}},"component":{}}],["golden",{"_index":346,"title":{},"name":{},"text":{"2":{},"60":{},"64":{},"70":{},"78":{},"83":{},"163":{},"240":{}},"component":{}}],["golfer",{"_index":5868,"title":{},"name":{},"text":{"324":{}},"component":{}}],["gone",{"_index":2388,"title":{},"name":{},"text":{"53":{},"54":{},"519":{}},"component":{}}],["good",{"_index":2437,"title":{},"name":{},"text":{"55":{},"56":{},"105":{},"130":{},"156":{},"163":{},"167":{},"168":{},"239":{},"247":{},"287":{},"299":{},"309":{},"381":{},"500":{},"537":{}},"component":{}}],["googl",{"_index":326,"title":{"100":{},"101":{},"117":{},"158":{},"165":{},"259":{},"260":{},"261":{},"430":{},"513":{},"152-17":{},"152-18":{},"152-19":{},"165-2":{},"259-5":{},"430-4":{}},"name":{"100":{},"101":{},"148":{},"149":{},"259":{},"260":{},"261":{},"513":{}},"text":{"2":{},"4":{},"7":{},"8":{},"10":{},"20":{},"27":{},"37":{},"86":{},"87":{},"88":{},"96":{},"100":{},"101":{},"117":{},"148":{},"149":{},"152":{},"158":{},"163":{},"164":{},"165":{},"171":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"259":{},"260":{},"261":{},"354":{},"430":{},"513":{},"518":{},"519":{},"533":{}},"component":{}}],["google_application_credenti",{"_index":3138,"title":{},"name":{},"text":{"100":{}},"component":{}}],["google_application_credentials=/beam",{"_index":3495,"title":{},"name":{},"text":{"158":{}},"component":{}}],["google_application_credentials=/path/to/googl",{"_index":3827,"title":{},"name":{},"text":{"165":{}},"component":{}}],["googlebigqueri",{"_index":3214,"title":{},"name":{"117":{}},"text":{},"component":{}}],["googlebigqueryjdbc42.jar",{"_index":3222,"title":{},"name":{},"text":{"117":{}},"component":{}}],["googlecloud",{"_index":3140,"title":{},"name":{},"text":{"100":{}},"component":{}}],["googledr",{"_index":976,"title":{},"name":{},"text":{"8":{},"101":{}},"component":{}}],["google’",{"_index":6336,"title":{},"name":{},"text":{"429":{}},"component":{}}],["govern",{"_index":1086,"title":{"9-12":{}},"name":{"390":{}},"text":{"533":{}},"component":{}}],["gpg",{"_index":5777,"title":{},"name":{},"text":{"306":{},"307":{},"477":{},"478":{},"479":{},"537":{},"538":{}},"component":{}}],["grab",{"_index":2549,"title":{},"name":{},"text":{"56":{},"163":{},"179":{},"529":{},"537":{},"544":{}},"component":{}}],["gracefulli",{"_index":2846,"title":{},"name":{},"text":{"79":{},"85":{}},"component":{}}],["gradient",{"_index":3006,"title":{},"name":{},"text":{"87":{}},"component":{}}],["gradual",{"_index":3106,"title":{},"name":{},"text":{"95":{}},"component":{}}],["graduat",{"_index":6749,"title":{},"name":{},"text":{"519":{}},"component":{}}],["grain",{"_index":942,"title":{},"name":{},"text":{"7":{},"158":{}},"component":{}}],["grand",{"_index":5978,"title":{},"name":{},"text":{"344":{},"432":{}},"component":{}}],["grandpar",{"_index":682,"title":{},"name":{},"text":{"7":{}},"component":{}}],["grant",{"_index":723,"title":{},"name":{},"text":{"7":{},"36":{},"258":{},"420":{}},"component":{}}],["granular",{"_index":2822,"title":{},"name":{},"text":{"78":{}},"component":{}}],["graph",{"_index":59,"title":{"155":{},"297":{},"300":{},"156-3":{},"433-3":{},"433-4":{}},"name":{"300":{}},"text":{"1":{},"9":{},"10":{},"15":{},"19":{},"24":{},"37":{},"41":{},"42":{},"56":{},"62":{},"64":{},"81":{},"86":{},"92":{},"155":{},"156":{},"295":{},"296":{},"297":{},"300":{},"391":{},"413":{},"418":{},"431":{},"432":{},"433":{},"474":{},"476":{}},"component":{}}],["graph.hwf",{"_index":6363,"title":{},"name":{},"text":{"433":{}},"component":{}}],["graphic",{"_index":6516,"title":{},"name":{},"text":{"469":{},"518":{},"535":{}},"component":{}}],["graphmodel",{"_index":3476,"title":{},"name":{"155":{}},"text":{},"component":{}}],["graphoutput",{"_index":5715,"title":{},"name":{"297":{}},"text":{},"component":{}}],["gray",{"_index":1669,"title":{},"name":{},"text":{"30":{},"216":{},"227":{},"528":{}},"component":{}}],["great",{"_index":3165,"title":{},"name":{},"text":{"106":{},"156":{},"163":{},"433":{}},"component":{}}],["greater",{"_index":4773,"title":{},"name":{},"text":{"247":{},"280":{},"291":{},"298":{},"309":{},"454":{},"455":{},"464":{}},"component":{}}],["greatli",{"_index":7001,"title":{},"name":{},"text":{"532":{}},"component":{}}],["green",{"_index":1289,"title":{},"name":{},"text":{"15":{},"23":{},"56":{},"85":{},"103":{},"105":{},"158":{},"316":{},"453":{},"469":{},"490":{},"533":{}},"component":{}}],["greenplum",{"_index":3231,"title":{"118":{}},"name":{"118":{}},"text":{},"component":{}}],["greenplum/7/greenplum",{"_index":3233,"title":{},"name":{},"text":{"118":{}},"component":{}}],["gregorian",{"_index":4913,"title":{},"name":{},"text":{"247":{}},"component":{}}],["grep",{"_index":6698,"title":{},"name":{},"text":{"514":{}},"component":{}}],["grey",{"_index":1476,"title":{},"name":{},"text":{"23":{}},"component":{}}],["grid",{"_index":642,"title":{"223":{}},"name":{},"text":{"7":{},"27":{},"36":{},"80":{},"81":{},"86":{},"169":{},"204":{},"221":{},"223":{},"234":{},"250":{},"271":{},"287":{},"304":{},"313":{},"336":{},"435":{},"450":{},"468":{},"498":{},"506":{}},"component":{}}],["gridview",{"_index":5514,"title":{},"name":{},"text":{"271":{}},"component":{}}],["grimer",{"_index":4432,"title":{},"name":{},"text":{"241":{}},"component":{}}],["groovi",{"_index":5942,"title":{"337-7":{},"337-11":{}},"name":{},"text":{"337":{}},"component":{}}],["ground",{"_index":293,"title":{},"name":{},"text":{"2":{},"25":{}},"component":{}}],["group",{"_index":133,"title":{"262":{},"283":{},"179-4":{},"233-6":{},"309-7":{},"316-6":{},"378-7":{}},"name":{},"text":{"1":{},"7":{},"13":{},"24":{},"27":{},"50":{},"55":{},"78":{},"81":{},"82":{},"86":{},"87":{},"151":{},"152":{},"161":{},"163":{},"167":{},"176":{},"178":{},"179":{},"186":{},"196":{},"202":{},"217":{},"220":{},"222":{},"233":{},"234":{},"247":{},"250":{},"258":{},"260":{},"262":{},"273":{},"275":{},"277":{},"279":{},"283":{},"287":{},"291":{},"297":{},"298":{},"299":{},"302":{},"305":{},"309":{},"313":{},"316":{},"317":{},"320":{},"323":{},"331":{},"338":{},"349":{},"359":{},"364":{},"366":{},"367":{},"374":{},"376":{},"378":{},"383":{},"386":{},"389":{},"400":{},"402":{},"408":{},"433":{},"483":{},"514":{},"532":{}},"component":{}}],["group(",{"_index":5809,"title":{},"name":{},"text":{"316":{}},"component":{}}],["groupbi",{"_index":5409,"title":{},"name":{"262":{}},"text":{},"component":{}}],["groupbykey",{"_index":3767,"title":{},"name":{},"text":{"163":{}},"component":{}}],["groupbykey(void",{"_index":3772,"title":{},"name":{},"text":{"163":{}},"component":{}}],["grouping_symbol",{"_index":4616,"title":{},"name":{},"text":{"243":{}},"component":{}}],["grow",{"_index":333,"title":{},"name":{},"text":{"2":{}},"component":{}}],["grown",{"_index":4224,"title":{},"name":{},"text":{"216":{}},"component":{}}],["grpc",{"_index":3217,"title":{},"name":{},"text":{"117":{}},"component":{}}],["gs",{"_index":774,"title":{},"name":{},"text":{"7":{},"8":{},"41":{},"100":{},"162":{},"163":{},"165":{},"513":{}},"component":{}}],["gs://apachehop/hop",{"_index":1914,"title":{},"name":{},"text":{"41":{}},"component":{}}],["gt",{"_index":5659,"title":{},"name":{},"text":{"291":{}},"component":{}}],["gte",{"_index":5663,"title":{},"name":{},"text":{"291":{}},"component":{}}],["guarante",{"_index":350,"title":{},"name":{},"text":{"2":{},"82":{},"159":{},"164":{},"166":{},"167":{},"168":{},"194":{},"247":{},"433":{}},"component":{}}],["guess",{"_index":2946,"title":{},"name":{},"text":{"83":{},"205":{},"220":{},"260":{},"366":{},"450":{}},"component":{}}],["gui",{"_index":35,"title":{"17":{},"24":{},"35":{},"17-1":{},"17-2":{},"19-1":{},"26-1":{},"45-1":{},"48-1":{},"75-4":{},"160-4":{},"168-3":{},"389-5":{},"389-11":{}},"name":{"15":{},"16":{},"17":{},"23":{},"24":{},"45":{},"413":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"9":{},"15":{},"17":{},"19":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"34":{},"36":{},"37":{},"41":{},"45":{},"48":{},"49":{},"50":{},"52":{},"56":{},"64":{},"75":{},"76":{},"83":{},"88":{},"90":{},"91":{},"93":{},"97":{},"98":{},"99":{},"100":{},"101":{},"150":{},"152":{},"153":{},"154":{},"158":{},"159":{},"160":{},"162":{},"163":{},"167":{},"168":{},"169":{},"337":{},"366":{},"388":{},"389":{},"396":{},"413":{},"418":{},"419":{},"433":{},"513":{},"518":{},"519":{},"525":{},"527":{},"528":{},"529":{},"530":{},"531":{},"533":{},"534":{},"541":{},"544":{},"546":{}},"component":{}}],["gui.bat",{"_index":502,"title":{},"name":{},"text":{"5":{},"17":{},"19":{},"45":{},"533":{}},"component":{}}],["gui.sh",{"_index":503,"title":{},"name":{},"text":{"5":{},"17":{},"19":{},"533":{},"537":{}},"component":{}}],["guid",{"_index":412,"title":{"541":{},"543":{},"51-1":{},"516-3":{},"543-7":{}},"name":{"541":{}},"text":{"4":{},"5":{},"11":{},"19":{},"21":{},"27":{},"28":{},"30":{},"48":{},"50":{},"51":{},"52":{},"55":{},"162":{},"164":{},"309":{},"378":{},"519":{},"531":{},"534":{},"535":{},"536":{},"537":{},"543":{}},"component":{}}],["guidanc",{"_index":6770,"title":{},"name":{},"text":{"521":{},"535":{}},"component":{}}],["guimenuel",{"_index":6879,"title":{},"name":{},"text":{"528":{}},"component":{}}],["guiresourc",{"_index":7209,"title":{},"name":{},"text":{"542":{}},"component":{}}],["guiresource.getinst",{"_index":7212,"title":{},"name":{},"text":{"542":{}},"component":{}}],["guiresource.getinstance().getimagelogosmal",{"_index":7229,"title":{},"name":{},"text":{"542":{}},"component":{}}],["gui’",{"_index":1603,"title":{},"name":{},"text":{"26":{},"27":{},"158":{},"160":{}},"component":{}}],["gupta",{"_index":3334,"title":{"139":{}},"name":{},"text":{},"component":{}}],["gz",{"_index":979,"title":{},"name":{},"text":{"8":{}},"component":{}}],["gz:/my/gz/file.gz",{"_index":984,"title":{},"name":{},"text":{"8":{}},"component":{}}],["gzip",{"_index":978,"title":{},"name":{},"text":{"8":{},"42":{},"153":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"366":{},"367":{}},"component":{}}],["h",{"_index":1758,"title":{},"name":{},"text":{"37":{},"38":{},"39":{},"40":{},"41":{},"46":{},"47":{},"152":{},"247":{},"248":{},"366":{},"389":{}},"component":{}}],["h2",{"_index":3238,"title":{"119":{}},"name":{"119":{}},"text":{},"component":{}}],["h4siaaaaaaaa/+1xbvpbobd+kxl/upshzqsuat/sxbzchsrntdudpunrznlrksvxkgk5hv9+k0t",{"_index":2121,"title":{},"name":{},"text":{"42":{}},"component":{}}],["h4siaaaaaaaa/wmaaaaaaaaaaaa",{"_index":2095,"title":{},"name":{},"text":{"42":{}},"component":{}}],["habc7",{"_index":5315,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hack",{"_index":4739,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hacker",{"_index":4518,"title":{},"name":{},"text":{"241":{}},"component":{}}],["hadoop",{"_index":772,"title":{},"name":{},"text":{"7":{},"8":{},"161":{},"167":{}},"component":{}}],["hadoop3.2/logs/spark",{"_index":3583,"title":{},"name":{},"text":{"161":{}},"component":{}}],["hadoop3/config/hop",{"_index":3609,"title":{},"name":{},"text":{"161":{}},"component":{}}],["hadoopclusterimag",{"_index":7233,"title":{},"name":{},"text":{"542":{}},"component":{}}],["hadoopclusterviewtreeextens",{"_index":7232,"title":{},"name":{},"text":{"542":{}},"component":{}}],["half",{"_index":1678,"title":{},"name":{},"text":{"32":{},"83":{},"205":{}},"component":{}}],["hall",{"_index":2981,"title":{"87-4":{}},"name":{},"text":{},"component":{}}],["halt",{"_index":2845,"title":{},"name":{},"text":{"79":{}},"component":{}}],["hamletquot",{"_index":4569,"title":{},"name":{},"text":{"241":{}},"component":{}}],["han",{"_index":1219,"title":{},"name":{},"text":{"10":{}},"component":{}}],["hand",{"_index":279,"title":{"29-5":{},"29-6":{}},"name":{},"text":{"2":{},"4":{},"20":{},"23":{},"29":{},"30":{},"31":{},"35":{},"52":{},"205":{},"247":{},"284":{},"299":{},"324":{},"325":{},"374":{},"528":{},"541":{}},"component":{}}],["handi",{"_index":3049,"title":{},"name":{},"text":{"90":{},"389":{},"514":{}},"component":{}}],["handl",{"_index":129,"title":{"79-1":{},"234-7":{},"275-10":{},"366-7":{},"372-6":{}},"name":{},"text":{"1":{},"4":{},"13":{},"24":{},"76":{},"77":{},"78":{},"79":{},"81":{},"84":{},"85":{},"92":{},"103":{},"105":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"219":{},"222":{},"237":{},"247":{},"250":{},"262":{},"274":{},"275":{},"278":{},"295":{},"297":{},"350":{},"361":{},"366":{},"369":{},"370":{},"372":{},"374":{},"381":{},"389":{},"400":{},"404":{},"410":{},"429":{},"433":{},"453":{},"525":{},"541":{},"544":{}},"component":{}}],["handler",{"_index":1663,"title":{},"name":{},"text":{"30":{},"163":{},"433":{}},"component":{}}],["hang",{"_index":6308,"title":{},"name":{},"text":{"400":{}},"component":{}}],["happen",{"_index":849,"title":{},"name":{},"text":{"7":{},"9":{},"55":{},"75":{},"81":{},"83":{},"84":{},"88":{},"154":{},"162":{},"163":{},"247":{},"270":{},"273":{},"305":{},"337":{},"391":{},"433":{},"453":{},"519":{},"520":{},"531":{},"542":{}},"component":{}}],["hard",{"_index":710,"title":{},"name":{},"text":{"7":{},"9":{},"55":{},"77":{},"81":{},"294":{},"319":{},"322":{},"342":{},"372":{},"395":{},"398":{},"433":{},"483":{},"528":{}},"component":{}}],["hardcod",{"_index":621,"title":{},"name":{},"text":{"7":{},"154":{},"165":{}},"component":{}}],["harder",{"_index":1129,"title":{},"name":{},"text":{"9":{},"55":{},"397":{}},"component":{}}],["hardli",{"_index":6756,"title":{},"name":{},"text":{"519":{}},"component":{}}],["hardwar",{"_index":6324,"title":{},"name":{},"text":{"429":{}},"component":{}}],["harm",{"_index":7230,"title":{},"name":{},"text":{"542":{}},"component":{}}],["harrypott",{"_index":4522,"title":{},"name":{},"text":{"241":{}},"component":{}}],["hasboolean",{"_index":7076,"title":{},"name":{},"text":{"536":{}},"component":{}}],["hash",{"_index":3946,"title":{},"name":{},"text":{"174":{},"216":{},"370":{},"537":{}},"component":{}}],["hashcod",{"_index":4226,"title":{},"name":{},"text":{"216":{},"355":{}},"component":{}}],["hashset",{"_index":2907,"title":{"370":{}},"name":{},"text":{"81":{},"86":{},"369":{},"370":{}},"component":{}}],["hasn’t",{"_index":6608,"title":{},"name":{},"text":{"500":{},"519":{}},"component":{}}],["have",{"_index":615,"title":{},"name":{},"text":{"6":{},"9":{},"50":{},"170":{},"247":{},"270":{},"298":{},"299":{},"368":{},"397":{},"511":{},"527":{},"531":{},"546":{}},"component":{}}],["haven’t",{"_index":473,"title":{},"name":{},"text":{"5":{},"163":{},"388":{}},"component":{}}],["hdf",{"_index":773,"title":{},"name":{},"text":{"7":{},"8":{}},"component":{}}],["hdfs/s3/g",{"_index":3896,"title":{},"name":{},"text":{"168":{}},"component":{}}],["hdfs://somehost:8080/downloads/some_dir",{"_index":1008,"title":{},"name":{},"text":{"8":{}},"component":{}}],["hdfs://somehost:8080/downloads/some_file.ext",{"_index":1009,"title":{},"name":{},"text":{"8":{}},"component":{}}],["head",{"_index":1488,"title":{},"name":{},"text":{"23":{},"158":{},"181":{},"319":{},"537":{}},"component":{}}],["header",{"_index":2035,"title":{"228-5":{},"264-5":{},"319-8":{},"465-4":{}},"name":{"546":{}},"text":{"41":{},"161":{},"178":{},"220":{},"232":{},"234":{},"235":{},"261":{},"263":{},"264":{},"280":{},"298":{},"319":{},"366":{},"367":{},"380":{},"382":{},"383":{},"464":{},"465":{},"527":{},"528":{},"531":{},"533":{},"537":{},"546":{}},"component":{}}],["header.txt",{"_index":6864,"title":{},"name":{},"text":{"527":{},"531":{},"546":{}},"component":{}}],["header/foot",{"_index":4403,"title":{},"name":{},"text":{"235":{}},"component":{}}],["header/valu",{"_index":4334,"title":{},"name":{},"text":{"228":{}},"component":{}}],["header_line_pres",{"_index":4614,"title":{},"name":{},"text":{"243":{}},"component":{}}],["headers/foot",{"_index":4404,"title":{},"name":{},"text":{"235":{}},"component":{}}],["header’",{"_index":6862,"title":{},"name":{},"text":{"527":{},"531":{},"546":{}},"component":{}}],["headless",{"_index":1989,"title":{},"name":{},"text":{"41":{},"267":{}},"component":{}}],["healthcar",{"_index":5455,"title":{},"name":{},"text":{"270":{}},"component":{}}],["heap",{"_index":566,"title":{},"name":{},"text":{"5":{},"298":{}},"component":{}}],["hear",{"_index":6743,"title":{},"name":{},"text":{"519":{}},"component":{}}],["heart",{"_index":6145,"title":{},"name":{},"text":{"372":{}},"component":{}}],["heavi",{"_index":2638,"title":{},"name":{},"text":{"57":{},"78":{},"84":{},"105":{},"465":{}},"component":{}}],["height",{"_index":7246,"title":{},"name":{},"text":{"542":{}},"component":{}}],["hel",{"_index":4197,"title":{},"name":{},"text":{"207":{},"208":{},"437":{}},"component":{}}],["held",{"_index":4222,"title":{},"name":{},"text":{"216":{},"227":{}},"component":{}}],["hello",{"_index":5208,"title":{},"name":{},"text":{"247":{},"538":{}},"component":{}}],["hellobc7",{"_index":5226,"title":{},"name":{},"text":{"247":{}},"component":{}}],["helm",{"_index":7109,"title":{"538-9":{}},"name":{},"text":{"538":{}},"component":{}}],["help",{"_index":414,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"9":{},"10":{},"19":{},"27":{},"30":{},"38":{},"39":{},"41":{},"46":{},"47":{},"50":{},"52":{},"56":{},"152":{},"154":{},"159":{},"165":{},"166":{},"171":{},"213":{},"219":{},"222":{},"233":{},"247":{},"274":{},"346":{},"366":{},"372":{},"396":{},"433":{},"453":{},"525":{},"527":{},"529":{},"533":{},"534":{}},"component":{}}],["helper",{"_index":719,"title":{},"name":{},"text":{"7":{},"258":{},"292":{},"366":{},"420":{},"452":{},"543":{}},"component":{}}],["helptext",{"_index":6628,"title":{},"name":{},"text":{"513":{}},"component":{}}],["henc",{"_index":3449,"title":{},"name":{},"text":{"154":{},"196":{},"197":{},"275":{},"276":{},"345":{}},"component":{}}],["here",{"_index":722,"title":{},"name":{},"text":{"7":{},"9":{},"10":{},"18":{},"26":{},"29":{},"30":{},"35":{},"36":{},"40":{},"41":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"83":{},"154":{},"163":{},"169":{},"176":{},"179":{},"180":{},"187":{},"196":{},"197":{},"199":{},"207":{},"208":{},"209":{},"213":{},"227":{},"235":{},"237":{},"238":{},"239":{},"258":{},"262":{},"264":{},"270":{},"274":{},"275":{},"276":{},"277":{},"285":{},"291":{},"292":{},"294":{},"297":{},"305":{},"309":{},"320":{},"337":{},"338":{},"341":{},"355":{},"357":{},"359":{},"364":{},"366":{},"373":{},"374":{},"377":{},"378":{},"384":{},"390":{},"395":{},"396":{},"398":{},"420":{},"439":{},"453":{},"465":{},"467":{},"474":{},"476":{},"487":{},"488":{},"498":{},"499":{},"507":{},"514":{},"527":{},"528":{},"529":{},"530":{},"533":{},"534":{},"537":{},"538":{},"541":{},"542":{}},"component":{}}],["here’",{"_index":2862,"title":{},"name":{},"text":{"81":{}},"component":{}}],["hero",{"_index":4446,"title":{},"name":{},"text":{"241":{}},"component":{}}],["herraiz",{"_index":1224,"title":{},"name":{},"text":{"10":{}},"component":{}}],["heurist",{"_index":5722,"title":{},"name":{},"text":{"298":{}},"component":{}}],["hex",{"_index":4128,"title":{},"name":{},"text":{"205":{},"241":{},"246":{}},"component":{}}],["hex01",{"_index":4255,"title":{},"name":{},"text":{"220":{},"349":{},"350":{},"366":{}},"component":{}}],["hex2dec",{"_index":4694,"title":{"247-103":{}},"name":{},"text":{},"component":{}}],["hexadecim",{"_index":617,"title":{"7-6":{}},"name":{},"text":{"174":{},"205":{},"262":{}},"component":{}}],["hh:mm:ss",{"_index":4781,"title":{},"name":{},"text":{"247":{},"331":{}},"component":{}}],["hhmmss",{"_index":5772,"title":{},"name":{},"text":{"305":{},"314":{},"352":{},"442":{},"468":{},"481":{},"499":{},"503":{},"509":{}},"component":{}}],["hi",{"_index":5144,"title":{},"name":{},"text":{"247":{},"325":{},"538":{}},"component":{}}],["hidden",{"_index":1470,"title":{},"name":{},"text":{"22":{},"46":{},"50":{},"234":{},"273":{},"279":{},"366":{},"381":{},"388":{}},"component":{}}],["hide",{"_index":1471,"title":{},"name":{},"text":{"22":{},"27":{}},"component":{}}],["hierarch",{"_index":5675,"title":{},"name":{},"text":{"292":{}},"component":{}}],["hierarchi",{"_index":618,"title":{"7-9":{}},"name":{},"text":{"7":{},"292":{},"522":{},"524":{},"544":{}},"component":{}}],["high",{"_index":3446,"title":{},"name":{},"text":{"154":{},"167":{},"175":{},"228":{},"298":{},"299":{},"341":{},"382":{},"429":{},"471":{},"519":{}},"component":{}}],["higher",{"_index":461,"title":{},"name":{},"text":{"5":{},"154":{},"163":{},"165":{},"169":{},"247":{},"527":{},"531":{}},"component":{}}],["highest",{"_index":4283,"title":{},"name":{},"text":{"222":{},"248":{}},"component":{}}],["highfiv",{"_index":4530,"title":{},"name":{},"text":{"241":{}},"component":{}}],["highli",{"_index":4002,"title":{},"name":{},"text":{"186":{}},"component":{}}],["highlight",{"_index":2944,"title":{"528-11":{}},"name":{},"text":{"83":{},"528":{}},"component":{}}],["hilx",{"_index":2239,"title":{},"name":{},"text":{"47":{}},"component":{}}],["hint",{"_index":3177,"title":{},"name":{},"text":{"107":{},"433":{}},"component":{}}],["hipster",{"_index":4523,"title":{},"name":{},"text":{"241":{}},"component":{}}],["histor",{"_index":2380,"title":{},"name":{},"text":{"52":{},"55":{},"64":{},"218":{},"245":{},"254":{},"433":{}},"component":{}}],["histori",{"_index":1459,"title":{},"name":{},"text":{"22":{},"30":{},"32":{},"227":{},"228":{},"521":{}},"component":{}}],["hit",{"_index":1275,"title":{},"name":{},"text":{"15":{},"16":{},"19":{},"24":{},"29":{},"76":{},"85":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"104":{},"154":{},"158":{},"227":{},"352":{},"528":{},"533":{}},"component":{}}],["hitchhikersguidetothegalaxi",{"_index":4524,"title":{},"name":{},"text":{"241":{}},"component":{}}],["hive",{"_index":1208,"title":{"107":{},"194":{}},"name":{"107":{}},"text":{"10":{},"107":{},"194":{}},"component":{}}],["hive.exec.dynamic.partit",{"_index":3178,"title":{},"name":{},"text":{"107":{}},"component":{}}],["hive.exec.dynamic.partition.mod",{"_index":3179,"title":{},"name":{},"text":{"107":{}},"component":{}}],["hmacmd5",{"_index":5346,"title":{},"name":{},"text":{"249":{}},"component":{}}],["hmacsha1",{"_index":5347,"title":{},"name":{},"text":{"249":{}},"component":{}}],["ho",{"_index":1841,"title":{},"name":{},"text":{"38":{}},"component":{}}],["hobbit",{"_index":4526,"title":{},"name":{},"text":{"241":{}},"component":{}}],["hoc",{"_index":2626,"title":{},"name":{},"text":{"56":{}},"component":{}}],["hold",{"_index":149,"title":{},"name":{},"text":{"1":{},"13":{},"15":{},"16":{},"78":{},"219":{},"235":{},"270":{},"298":{},"354":{},"401":{},"402":{},"530":{}},"component":{}}],["holder",{"_index":4415,"title":{},"name":{},"text":{"238":{}},"component":{}}],["holiday",{"_index":4831,"title":{},"name":{},"text":{"247":{}},"component":{}}],["home",{"_index":1004,"title":{},"name":{},"text":{"8":{},"22":{},"25":{},"30":{},"36":{},"41":{},"56":{},"90":{},"93":{},"95":{},"97":{},"152":{},"158":{},"164":{},"167":{},"168":{},"346":{},"388":{},"389":{},"514":{},"519":{}},"component":{}}],["home/.m2/settings.xml",{"_index":6978,"title":{},"name":{},"text":{"532":{}},"component":{}}],["home/admin/path/sub.hpl",{"_index":5619,"title":{},"name":{},"text":{"287":{},"481":{}},"component":{}}],["home/admin/pipeline.hpl",{"_index":5618,"title":{},"name":{},"text":{"287":{},"481":{}},"component":{}}],["home/bart/projects/tech/hop/projects/hop",{"_index":3610,"title":{},"name":{},"text":{"161":{}},"component":{}}],["home/etl/.kettle/kettle.properti",{"_index":2210,"title":{},"name":{},"text":{"46":{}},"component":{}}],["home/hop",{"_index":6637,"title":{},"name":{},"text":{"514":{}},"component":{}}],["home/hop/${git_repo_nam",{"_index":6685,"title":{},"name":{},"text":{"514":{}},"component":{}}],["home/hop/clon",{"_index":6694,"title":{},"name":{},"text":{"514":{}},"component":{}}],["home/hop/project/services/metadata",{"_index":2189,"title":{},"name":{},"text":{"43":{}},"component":{}}],["home/matt/.kettle/shared.xml",{"_index":2211,"title":{},"name":{},"text":{"46":{}},"component":{}}],["home/matt/test",{"_index":3078,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["home/someuser/somedir",{"_index":992,"title":{},"name":{},"text":{"8":{}},"component":{}}],["home/user/projects/hop2",{"_index":6284,"title":{},"name":{},"text":{"389":{}},"component":{}}],["home/user/projects/hop2/project",{"_index":6285,"title":{},"name":{},"text":{"389":{}},"component":{}}],["homebrew",{"_index":3785,"title":{},"name":{},"text":{"164":{}},"component":{}}],["home}/.pentaho/metastor",{"_index":6727,"title":{},"name":{},"text":{"518":{}},"component":{}}],["hood",{"_index":3154,"title":{},"name":{},"text":{"103":{}},"component":{}}],["hook",{"_index":1126,"title":{},"name":{},"text":{"9":{},"161":{},"395":{}},"component":{}}],["hop",{"_index":8,"title":{"2":{},"4":{},"5":{},"6":{},"13":{},"14":{},"17":{},"19":{},"20":{},"24":{},"25":{},"35":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"44":{},"46":{},"47":{},"50":{},"55":{},"57":{},"63":{},"152":{},"162":{},"516":{},"518":{},"520":{},"521":{},"528":{},"530":{},"543":{},"544":{},"5-12":{},"7-1":{},"8-2":{},"10-1":{},"10-2":{},"10-3":{},"10-4":{},"15-4":{},"16-4":{},"17-1":{},"17-2":{},"19-1":{},"19-2":{},"19-3":{},"19-4":{},"19-5":{},"19-6":{},"19-7":{},"19-8":{},"22-1":{},"24-6":{},"25-1":{},"25-2":{},"25-3":{},"26-1":{},"38-1":{},"41-1":{},"41-3":{},"41-4":{},"41-7":{},"41-8":{},"41-13":{},"41-14":{},"43-5":{},"44-4":{},"44-5":{},"45-1":{},"48-1":{},"49-1":{},"56-3":{},"57-1":{},"75-4":{},"77-1":{},"77-2":{},"77-3":{},"78-5":{},"87-1":{},"117-1":{},"157-5":{},"158-2":{},"160-4":{},"163-3":{},"164-4":{},"168-3":{},"170-1":{},"389-5":{},"389-11":{},"429-1":{},"510-1":{},"511-1":{},"513-2":{},"513-3":{},"514-5":{},"519-1":{},"530-4":{},"533-2":{},"533-8":{},"536-1":{},"536-3":{},"536-5":{},"541-10":{},"541-11":{},"543-1":{},"543-2":{},"544-3":{},"544-8":{},"544-15":{}},"name":{"2":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"23":{},"24":{},"25":{},"44":{},"45":{},"46":{},"47":{},"48":{},"50":{},"55":{},"56":{},"63":{},"80":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"162":{},"402":{},"403":{},"411":{},"412":{},"413":{},"414":{},"415":{},"416":{},"417":{},"418":{},"419":{},"421":{},"422":{},"423":{},"424":{},"425":{},"426":{},"516":{},"518":{},"544":{},"546":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"61":{},"62":{},"63":{},"64":{},"68":{},"69":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"86":{},"87":{},"88":{},"90":{},"91":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"150":{},"151":{},"152":{},"153":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"388":{},"389":{},"396":{},"401":{},"402":{},"403":{},"404":{},"406":{},"408":{},"409":{},"411":{},"412":{},"413":{},"414":{},"415":{},"416":{},"417":{},"418":{},"419":{},"422":{},"423":{},"424":{},"427":{},"428":{},"429":{},"430":{},"431":{},"432":{},"433":{},"437":{},"441":{},"443":{},"446":{},"453":{},"456":{},"457":{},"465":{},"467":{},"469":{},"481":{},"483":{},"487":{},"488":{},"489":{},"490":{},"492":{},"496":{},"500":{},"503":{},"505":{},"511":{},"512":{},"513":{},"514":{},"517":{},"518":{},"519":{},"520":{},"521":{},"522":{},"524":{},"525":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"535":{},"536":{},"537":{},"538":{},"540":{},"541":{},"543":{},"544":{},"545":{},"546":{}},"component":{}}],["hop(al",{"_index":1209,"title":{},"name":{},"text":{"10":{}},"component":{}}],["hop.crt",{"_index":1949,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop.csr",{"_index":1953,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop.key",{"_index":1945,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop.pkcs12",{"_index":1955,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop.pwd",{"_index":2812,"title":{},"name":{},"text":{"77":{}},"component":{}}],["hop.vers",{"_index":7059,"title":{},"name":{},"text":{"534":{}},"component":{}}],["hop.war",{"_index":1706,"title":{},"name":{},"text":{"37":{}},"component":{}}],["hop/.hpl",{"_index":3719,"title":{},"name":{},"text":{"162":{}},"component":{}}],["hop/addexport",{"_index":2050,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/addpipelin",{"_index":2057,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/addworkflow",{"_index":2064,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/api/v1",{"_index":1708,"title":{},"name":{},"text":{"37":{}},"component":{}}],["hop/assemblies/plugin",{"_index":6966,"title":{},"name":{},"text":{"530":{}},"component":{}}],["hop/asyncrun",{"_index":1880,"title":{},"name":{},"text":{"40":{}},"component":{}}],["hop/asyncstatu",{"_index":1890,"title":{},"name":{},"text":{"40":{}},"component":{}}],["hop/asyncstatus?service=&id",{"_index":1891,"title":{},"name":{},"text":{"40":{}},"component":{}}],["hop/conf",{"_index":541,"title":{},"name":{},"text":{"5":{},"7":{},"94":{},"422":{}},"component":{}}],["hop/config",{"_index":516,"title":{},"name":{},"text":{"5":{},"91":{}},"component":{}}],["hop/config/hop",{"_index":3071,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["hop/config/projects/samples/beam/pipelines/complex.hpl",{"_index":6294,"title":{},"name":{},"text":{"389":{}},"component":{}}],["hop/config/projects/samples/beam/pipelines/gener",{"_index":3551,"title":{},"name":{},"text":{"160":{}},"component":{}}],["hop/config/projects/samples/beam/pipelines/input",{"_index":3595,"title":{},"name":{},"text":{"161":{}},"component":{}}],["hop/getworkflowstatu",{"_index":1897,"title":{},"name":{},"text":{"40":{}},"component":{}}],["hop/hop",{"_index":3701,"title":{},"name":{},"text":{"162":{}},"component":{}}],["hop/integr",{"_index":6836,"title":{},"name":{},"text":{"527":{}},"component":{}}],["hop/lib",{"_index":5788,"title":{},"name":{},"text":{"311":{},"530":{}},"component":{}}],["hop/lib/jdbc",{"_index":1235,"title":{},"name":{},"text":{"11":{},"311":{},"315":{}},"component":{}}],["hop/pausepipelin",{"_index":2082,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/pipelineimag",{"_index":2068,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/pipelinestatu",{"_index":2075,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/plugin",{"_index":6958,"title":{},"name":{},"text":{"530":{}},"component":{}}],["hop/plugins/databases/databas",{"_index":1234,"title":{},"name":{},"text":{"11":{}},"component":{}}],["hop/plugins/databases/mysql",{"_index":605,"title":{},"name":{},"text":{"5":{}},"component":{}}],["hop/prepareexec",{"_index":2087,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/registerpipelin",{"_index":2090,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/registerworkflow",{"_index":2151,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/removepipelin",{"_index":2153,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/removeworkflow",{"_index":2156,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/s3project",{"_index":2208,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/connections.csv",{"_index":2238,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/graph",{"_index":2221,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/import",{"_index":2232,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/load",{"_index":2216,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/metadata",{"_index":2236,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/remov",{"_index":2226,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/s3project/scal",{"_index":2219,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hop/snifftransform",{"_index":2159,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/startexec",{"_index":2164,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/startpipelin",{"_index":2172,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/stoppipelin",{"_index":2177,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/stopworkflow",{"_index":2180,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/workflowimag",{"_index":2078,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop/workflowstatu",{"_index":2080,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop2",{"_index":3062,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["hop:hop",{"_index":6684,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop:latest",{"_index":6703,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop\\lib\\mssql",{"_index":3280,"title":{},"name":{},"text":{"130":{}},"component":{}}],["hop\\plugins\\databases\\mssqlnative\\lib",{"_index":3286,"title":{},"name":{},"text":{"130":{}},"component":{}}],["hop_aes_encoder_key",{"_index":3479,"title":{},"name":{},"text":{"157":{},"543":{}},"component":{}}],["hop_aes_encoder_key=abcd",{"_index":3489,"title":{},"name":{},"text":{"157":{}},"component":{}}],["hop_aes_encoder_key=ddsfsdfsfsdf",{"_index":3486,"title":{},"name":{},"text":{"157":{}},"component":{}}],["hop_aggregation_all_nulls_are_zero",{"_index":778,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_aggregation_min_null_is_valu",{"_index":783,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_allow_empty_field_names_and_typ",{"_index":785,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_audit_fold",{"_index":543,"title":{},"name":{},"text":{"5":{},"7":{},"75":{},"94":{},"421":{},"518":{},"541":{}},"component":{}}],["hop_audit_folder/users/hans/config/audit",{"_index":2102,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_audit_folder=\"${catalina_home}/webapps/hop/audit",{"_index":7255,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_auto_create_config",{"_index":943,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_auto_create_configi",{"_index":2103,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_batching_rowset",{"_index":787,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_config_fold",{"_index":517,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"37":{},"90":{},"91":{},"94":{},"389":{},"422":{},"541":{},"543":{}},"component":{}}],["hop_config_folder/users/hans/config",{"_index":2104,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_config_folder=\"${catalina_home}/webapps/hop/config",{"_index":7256,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_config_folder=/config",{"_index":7203,"title":{},"name":{},"text":{"541":{}},"component":{}}],["hop_config_folder}/hop",{"_index":6723,"title":{},"name":{},"text":{"518":{}},"component":{}}],["hop_config_folder}/metadata",{"_index":6728,"title":{},"name":{},"text":{"518":{}},"component":{}}],["hop_config_folder}/projects/default",{"_index":7273,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_config_folder}/projects/sampl",{"_index":7274,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_custom_entrypoint_extension_shell_file_path",{"_index":6642,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_custom_entrypoint_extension_shell_file_path=/home/hop/clon",{"_index":6713,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_datasets_fold",{"_index":2653,"title":{},"name":{},"text":{"60":{},"83":{}},"component":{}}],["hop_datasets_folder/users/hans/test/dataset",{"_index":2105,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_default_bignumber_format",{"_index":789,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_default_buffer_polling_waittim",{"_index":791,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_default_date_format",{"_index":797,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_default_integer_format",{"_index":799,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_default_number_format",{"_index":801,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_default_servlet_encod",{"_index":802,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_default_timestamp_format",{"_index":805,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_disable_console_log",{"_index":807,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_docker_imag",{"_index":6716,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_docker_image=ds/custom",{"_index":6706,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_empty_string_differs_from_nul",{"_index":811,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_environment_config_file_name_path",{"_index":1571,"title":{},"name":{},"text":{"25":{},"50":{},"56":{},"514":{}},"component":{}}],["hop_environment_config_file_name_paths=${project_deployment_dir}/dev",{"_index":6712,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_environment_config_file_name_paths=/config/web",{"_index":1577,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hop_environment_config_file_name_paths=/files/config/localtestconfig.json",{"_index":2315,"title":{},"name":{},"text":{"50":{}},"component":{}}],["hop_environment_config_file_name_paths=/files/config/project",{"_index":6665,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_environment_nam",{"_index":1570,"title":{},"name":{},"text":{"25":{},"50":{},"56":{},"514":{}},"component":{}}],["hop_environment_name=dev",{"_index":6711,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_environment_name=loc",{"_index":2314,"title":{},"name":{},"text":{"50":{}},"component":{}}],["hop_environment_name=project",{"_index":6664,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_environment_name=web",{"_index":1576,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hop_environment_nametest1",{"_index":2106,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_file_output_max_stream_count",{"_index":813,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_file_output_max_stream_lif",{"_index":820,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_file_path",{"_index":2542,"title":{},"name":{},"text":{"56":{},"514":{}},"component":{}}],["hop_file_path='${project_home}/main.hwf",{"_index":6708,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_file_path='${project_home}/pipelin",{"_index":6660,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_file_path='${project_home}/transforms/switch",{"_index":6657,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_global_log_variables_clear_on_export",{"_index":823,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_json_include_nul",{"_index":5547,"title":{},"name":{},"text":{"273":{}},"component":{}}],["hop_json_input_include_nul",{"_index":827,"title":{},"name":{},"text":{"7":{},"273":{}},"component":{}}],["hop_lenient_string_to_number_convers",{"_index":831,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_license_header_fil",{"_index":845,"title":{"527-7":{},"531-6":{},"546-1":{}},"name":{},"text":{"7":{},"527":{},"531":{},"533":{},"546":{}},"component":{}}],["hop_log_level",{"_index":2541,"title":{},"name":{},"text":{"56":{},"514":{}},"component":{}}],["hop_log_level=\"bas",{"_index":7257,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_log_level=bas",{"_index":6656,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_log_mark_map",{"_index":846,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_log_path",{"_index":6638,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_log_size_limit",{"_index":850,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_log_tab_refresh_delay",{"_index":852,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_log_tab_refresh_period",{"_index":856,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_max_actions_log",{"_index":857,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_max_log_size_in_lin",{"_index":863,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_max_log_timeout_in_minut",{"_index":865,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_max_logging_registry_s",{"_index":860,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_max_tab_length",{"_index":870,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_max_workflow_tracker_s",{"_index":871,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_metadata_fold",{"_index":944,"title":{},"name":{},"text":{"7":{},"92":{},"518":{}},"component":{}}],["hop_metadata_folder/users/hans/test/metadata",{"_index":2107,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_opt",{"_index":548,"title":{},"name":{},"text":{"5":{},"19":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{},"423":{},"514":{},"543":{}},"component":{}}],["hop_options=\"${hop_opt",{"_index":7043,"title":{},"name":{},"text":{"533":{}},"component":{}}],["hop_password_encoder_plugin",{"_index":873,"title":{},"name":{},"text":{"7":{},"157":{}},"component":{}}],["hop_password_encoder_plugin=\"hop",{"_index":7258,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_password_encoder_plugin=a",{"_index":3485,"title":{},"name":{},"text":{"157":{}},"component":{}}],["hop_pipeline_pan_jvm_exit_cod",{"_index":2108,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_pipeline_rowset_s",{"_index":874,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_plugin_base_fold",{"_index":588,"title":{},"name":{},"text":{"5":{},"7":{},"94":{},"424":{},"544":{}},"component":{}}],["hop_plugin_base_folders=\"${catalina_home}/plugin",{"_index":7259,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_plugin_base_folders=./plugins,/additional/plugin/fold",{"_index":593,"title":{},"name":{},"text":{"5":{},"7":{},"94":{},"424":{}},"component":{}}],["hop_plugin_class",{"_index":877,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_project_config_file_nam",{"_index":6640,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_project_directori",{"_index":2544,"title":{},"name":{},"text":{"56":{},"514":{}},"component":{}}],["hop_project_fold",{"_index":1569,"title":{},"name":{},"text":{"25":{},"50":{},"514":{}},"component":{}}],["hop_project_folder=${project_deployment_dir",{"_index":6709,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_project_folder=/fil",{"_index":2313,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_project_folder=/files/project",{"_index":6662,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_project_folder=/project",{"_index":1574,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hop_project_nam",{"_index":1568,"title":{},"name":{},"text":{"25":{},"50":{},"56":{},"514":{}},"component":{}}],["hop_project_name=apach",{"_index":6710,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_project_name=proj1",{"_index":2312,"title":{},"name":{},"text":{"50":{}},"component":{}}],["hop_project_name=project",{"_index":6663,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_project_name=sampl",{"_index":6658,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_project_name=web",{"_index":1575,"title":{},"name":{},"text":{"25":{}},"component":{}}],["hop_project_nametest",{"_index":2110,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_projects/users/hans/tmp",{"_index":2109,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_public_releas",{"_index":7152,"title":{},"name":{},"text":{"540":{}},"component":{}}],["hop_redirect_stderr",{"_index":945,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_redirect_stdout",{"_index":948,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_releas",{"_index":7137,"title":{},"name":{},"text":{"538":{},"540":{}},"component":{}}],["hop_rest_config_fold",{"_index":1709,"title":{},"name":{},"text":{"37":{}},"component":{}}],["hop_rowset_get_timeout",{"_index":881,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_rowset_put_timeout",{"_index":886,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_run_config",{"_index":2547,"title":{},"name":{},"text":{"56":{},"514":{}},"component":{}}],["hop_run_config=loc",{"_index":6659,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_run_metadata_export",{"_index":6647,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_run_paramet",{"_index":2539,"title":{},"name":{},"text":{"56":{},"514":{}},"component":{}}],["hop_run_parameters=param_log_message=hello,param_wait_for_x_minutes=1",{"_index":6666,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_s3_vfs_part_s",{"_index":888,"title":{},"name":{},"text":{"7":{},"97":{}},"component":{}}],["hop_server_detection_tim",{"_index":895,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_server_hostnam",{"_index":2294,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_hostname=0.0.0.0",{"_index":2311,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_jetty_accept_queue_s",{"_index":903,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_server_jetty_acceptor",{"_index":899,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_server_jetty_res_max_idle_tim",{"_index":905,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_server_key_password",{"_index":6654,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_keystor",{"_index":6652,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_keystore_password",{"_index":6653,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_max_log_lin",{"_index":6649,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_max_log_timeout",{"_index":6650,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_max_object_timeout",{"_index":6651,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_metadata_fold",{"_index":2300,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_metadata_folder=/files/metadata",{"_index":2316,"title":{},"name":{},"text":{"50":{}},"component":{}}],["hop_server_object_timeout_minut",{"_index":907,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_server_pass",{"_index":2292,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_pass=admin",{"_index":2309,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_pass=password",{"_index":1988,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop_server_port",{"_index":2293,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_port=8080",{"_index":1985,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop_server_port=8180",{"_index":6670,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_port=8181",{"_index":6669,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_port=8182",{"_index":2310,"title":{},"name":{},"text":{"50":{}},"component":{}}],["hop_server_refresh_statu",{"_index":912,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_server_shutdownport",{"_index":6648,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_shutdownport=8079",{"_index":1986,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop_server_shutdownport=8080",{"_index":6668,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_server_us",{"_index":2290,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_user=admin",{"_index":2308,"title":{},"name":{},"text":{"50":{},"514":{}},"component":{}}],["hop_server_user=usernam",{"_index":1987,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hop_shared_jdbc_fold",{"_index":594,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"50":{},"94":{},"425":{},"514":{},"543":{}},"component":{}}],["hop_shared_jdbc_folders=/files/jdbc",{"_index":2317,"title":{},"name":{},"text":{"50":{}},"component":{}}],["hop_simple_stack_trac",{"_index":949,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_split_fields_remove_enclosur",{"_index":913,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_system_hostnam",{"_index":918,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_system_properti",{"_index":6644,"title":{},"name":{},"text":{"514":{}},"component":{}}],["hop_transform_performance_snapshot_limit",{"_index":921,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_unit_tests_fold",{"_index":2710,"title":{},"name":{},"text":{"70":{},"83":{}},"component":{}}],["hop_unit_tests_folder/users/hans/test",{"_index":2111,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hop_use_native_file_dialog",{"_index":923,"title":{},"name":{},"text":{"7":{},"22":{}},"component":{}}],["hop_web_them",{"_index":7191,"title":{},"name":{},"text":{"541":{}},"component":{}}],["hop_web_theme=\"light",{"_index":7260,"title":{},"name":{},"text":{"543":{}},"component":{}}],["hop_web_theme=dark",{"_index":7192,"title":{},"name":{},"text":{"541":{}},"component":{}}],["hop_windows_shell_encod",{"_index":3099,"title":{},"name":{},"text":{"94":{},"426":{}},"component":{}}],["hop_zip_max_entry_size_default_str",{"_index":926,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_zip_max_text_s",{"_index":927,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_zip_max_text_size_default_str",{"_index":932,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_zip_min_inflate_ratio",{"_index":933,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hop_zip_min_inflate_ratio_default_str",{"_index":938,"title":{},"name":{},"text":{"7":{}},"component":{}}],["hopclientenvironment.init",{"_index":6801,"title":{},"name":{},"text":{"525":{}},"component":{}}],["hopconfig",{"_index":1331,"title":{},"name":{},"text":{"19":{},"47":{},"90":{},"150":{},"152":{}},"component":{}}],["hopdataorchestrationperspect",{"_index":6820,"title":{},"name":{},"text":{"525":{}},"component":{}}],["hopencrypt",{"_index":1346,"title":{},"name":{},"text":{"19":{},"44":{}},"component":{}}],["hopenvironment.init",{"_index":6774,"title":{},"name":{},"text":{"522":{},"524":{},"525":{},"544":{}},"component":{}}],["hopexcept",{"_index":6150,"title":{},"name":{},"text":{"372":{},"529":{}},"component":{}}],["hopexception(\"year",{"_index":6206,"title":{},"name":{},"text":{"372":{}},"component":{}}],["hopgui",{"_index":1589,"title":{},"name":{},"text":{"25":{},"525":{},"528":{}},"component":{}}],["hopgui.menu",{"_index":6897,"title":{},"name":{},"text":{"528":{}},"component":{}}],["hopgui.menu.edit.cut",{"_index":6898,"title":{},"name":{},"text":{"528":{}},"component":{}}],["hopgui.menu.file=&fil",{"_index":6887,"title":{},"name":{},"text":{"528":{}},"component":{}}],["hopimport",{"_index":2214,"title":{},"name":{},"text":{"46":{}},"component":{}}],["hoplifecycleplugintyp",{"_index":6814,"title":{},"name":{},"text":{"525":{}},"component":{}}],["hoploggingev",{"_index":7340,"title":{},"name":{},"text":{"544":{}},"component":{}}],["hoplogstor",{"_index":6771,"title":{"522-2":{}},"name":{},"text":{"522":{},"525":{}},"component":{}}],["hoplogstore.getappender().getbuffer(logchannelid",{"_index":7351,"title":{},"name":{},"text":{"544":{}},"component":{}}],["hoplogstore.getinst",{"_index":6773,"title":{},"name":{},"text":{"522":{},"524":{},"544":{}},"component":{}}],["hoplogstore.getinstance().getappend",{"_index":7342,"title":{},"name":{},"text":{"544":{}},"component":{}}],["hoplogstore.getinstance().getappender().getbuffer(pipeline.getlogchannelid",{"_index":6778,"title":{},"name":{},"text":{"522":{},"524":{}},"component":{}}],["hoplogstore.getlastbufferlinenr",{"_index":7346,"title":{},"name":{},"text":{"544":{}},"component":{}}],["hopmetadata",{"_index":6904,"title":{"529-1":{},"532-11":{}},"name":{},"text":{"529":{}},"component":{}}],["hopmetadataloc",{"_index":6629,"title":{},"name":{},"text":{"513":{}},"component":{}}],["hopmetadataobject",{"_index":6937,"title":{},"name":{},"text":{"529":{}},"component":{}}],["hopmetadataproperti",{"_index":6909,"title":{},"name":{},"text":{"529":{}},"component":{}}],["hopmetadataprovid",{"_index":7279,"title":{},"name":{},"text":{"544":{}},"component":{}}],["hoppipelinefiletyp",{"_index":6821,"title":{},"name":{},"text":{"525":{}},"component":{}}],["hoppipelineloc",{"_index":6630,"title":{},"name":{},"text":{"513":{}},"component":{}}],["hoprun",{"_index":1357,"title":{},"name":{},"text":{"19":{},"38":{},"56":{},"151":{},"152":{},"389":{}},"component":{}}],["hopserv",{"_index":1400,"title":{},"name":{},"text":{"19":{},"41":{},"42":{},"525":{}},"component":{}}],["hopserverplugintyp",{"_index":6815,"title":{},"name":{},"text":{"525":{}},"component":{}}],["hoptransformexcept",{"_index":7315,"title":{},"name":{},"text":{"544":{}},"component":{}}],["hopui.log",{"_index":2727,"title":{},"name":{},"text":{"75":{}},"component":{}}],["hopweb",{"_index":6737,"title":{},"name":{"542":{}},"text":{"518":{}},"component":{}}],["hop’",{"_index":292,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"26":{},"77":{},"94":{},"103":{},"158":{},"273":{},"421":{},"514":{},"522":{}},"component":{}}],["horizont",{"_index":1267,"title":{},"name":{},"text":{"15":{},"16":{},"80":{}},"component":{}}],["horribl",{"_index":1853,"title":{},"name":{},"text":{"38":{}},"component":{}}],["hors",{"_index":419,"title":{},"name":{},"text":{"4":{}},"component":{}}],["horseman",{"_index":4462,"title":{},"name":{},"text":{"241":{}},"component":{}}],["host",{"_index":150,"title":{"497":{}},"name":{},"text":{"1":{},"7":{},"8":{},"13":{},"50":{},"63":{},"130":{},"153":{},"154":{},"160":{},"186":{},"196":{},"197":{},"228":{},"232":{},"237":{},"263":{},"264":{},"277":{},"278":{},"319":{},"326":{},"377":{},"401":{},"402":{},"436":{},"461":{},"462":{},"463":{},"464":{},"465":{},"467":{},"480":{},"485":{},"488":{},"489":{},"491":{},"497":{},"514":{}},"component":{}}],["host/path/to/config:/config",{"_index":7202,"title":{},"name":{},"text":{"541":{}},"component":{}}],["host:7077",{"_index":3901,"title":{},"name":{},"text":{"168":{}},"component":{}}],["host:port",{"_index":3851,"title":{},"name":{},"text":{"167":{}},"component":{}}],["hostnam",{"_index":919,"title":{},"name":{},"text":{"7":{},"8":{},"41":{},"63":{},"65":{},"72":{},"77":{},"92":{},"133":{},"153":{},"154":{},"161":{},"228":{},"256":{},"263":{},"264":{},"280":{},"292":{},"433":{}},"component":{}}],["hostname/port",{"_index":1908,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hotspot\\\\bin\\java",{"_index":1322,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["hotspot\\bin",{"_index":3282,"title":{},"name":{},"text":{"130":{}},"component":{}}],["hotspot\\lib",{"_index":3283,"title":{},"name":{},"text":{"130":{}},"component":{}}],["hour",{"_index":3460,"title":{"247-31":{}},"name":{},"text":{"154":{},"205":{},"224":{},"247":{},"366":{},"445":{},"538":{}},"component":{}}],["hour(\"14:00",{"_index":4822,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hour(5/24",{"_index":4816,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hour=int(dayfraction*24",{"_index":4815,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hour_of_day",{"_index":4148,"title":{},"name":{},"text":{"205":{}},"component":{}}],["hours*60*60)+(minutes*60)+seconds)/(24*60*60",{"_index":4858,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hous",{"_index":4517,"title":{},"name":{},"text":{"241":{}},"component":{}}],["housekeep",{"_index":2395,"title":{},"name":{},"text":{"53":{},"54":{},"364":{}},"component":{}}],["housenr",{"_index":4646,"title":{},"name":{},"text":{"246":{}},"component":{}}],["hover",{"_index":1506,"title":{},"name":{},"text":{"24":{},"36":{},"85":{},"94":{}},"component":{}}],["howimetyourmoth",{"_index":4528,"title":{},"name":{},"text":{"241":{}},"component":{}}],["howth",{"_index":4225,"title":{},"name":{},"text":{"216":{}},"component":{}}],["hpl",{"_index":1665,"title":{},"name":{"151":{}},"text":{"30":{},"81":{},"83":{},"160":{},"161":{},"162":{},"246":{},"287":{},"309":{},"520":{},"533":{},"544":{}},"component":{}}],["hr",{"_index":6399,"title":{},"name":{},"text":{"438":{}},"component":{}}],["html",{"_index":1898,"title":{},"name":{},"text":{"40":{},"42":{},"205":{},"280":{},"358":{},"433":{},"466":{},"508":{}},"component":{}}],["http",{"_index":1010,"title":{"263":{},"264":{},"465":{},"263-5":{},"263-6":{}},"name":{"263":{},"465":{}},"text":{"8":{},"25":{},"41":{},"52":{},"56":{},"63":{},"81":{},"86":{},"228":{},"235":{},"250":{},"260":{},"261":{},"263":{},"264":{},"319":{},"377":{},"465":{},"488":{},"514":{}},"component":{}}],["http(",{"_index":957,"title":{},"name":{},"text":{"8":{}},"component":{}}],["http.nonproxyhostslocal|*.local|169.254/16|*.169.254/16",{"_index":2116,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http/1.1",{"_index":1940,"title":{},"name":{},"text":{"41":{}},"component":{}}],["http/http",{"_index":1015,"title":{},"name":{},"text":{"8":{}},"component":{}}],["http:///hop/webservic",{"_index":2190,"title":{},"name":{},"text":{"43":{}},"component":{}}],["http://0.0.0.0:8181",{"_index":6673,"title":{},"name":{},"text":{"514":{}},"component":{}}],["http://:/hop/statu",{"_index":2318,"title":{},"name":{},"text":{"50":{}},"component":{}}],["http://:/hop/webservice?service=&param1=value&param2=value2",{"_index":2319,"title":{},"name":{},"text":{"50":{}},"component":{}}],["http://?param1=value1¶m2=value2¶m3",{"_index":5417,"title":{},"name":{},"text":{"263":{}},"component":{}}],["http://confluent",{"_index":6313,"title":{},"name":{},"text":{"427":{}},"component":{}}],["http://en.wikipedia.org/wiki/adl",{"_index":3941,"title":{},"name":{},"text":{"174":{}},"component":{}}],["http://en.wikipedia.org/wiki/cyclic_redundancy_check",{"_index":3939,"title":{},"name":{},"text":{"174":{}},"component":{}}],["http://en.wikipedia.org/wiki/damerau%e2%80%93levenshtein_dist",{"_index":4166,"title":{},"name":{},"text":{"205":{}},"component":{}}],["http://en.wikipedia.org/wiki/double_metaphon",{"_index":4137,"title":{},"name":{},"text":{"205":{}},"component":{}}],["http://en.wikipedia.org/wiki/jaro%e2%80%93winkler_dist",{"_index":4173,"title":{},"name":{},"text":{"205":{}},"component":{}}],["http://en.wikipedia.org/wiki/levenshtein_dist",{"_index":4133,"title":{},"name":{},"text":{"205":{}},"component":{}}],["http://en.wikipedia.org/wiki/md5",{"_index":3944,"title":{},"name":{},"text":{"174":{}},"component":{}}],["http://en.wikipedia.org/wiki/metaphon",{"_index":4136,"title":{},"name":{},"text":{"205":{}},"component":{}}],["http://en.wikipedia.org/wiki/needleman%e2%80%93wunsch_algorithm",{"_index":4168,"title":{},"name":{},"text":{"205":{}},"component":{}}],["http://en.wikipedia.org/wiki/sha",{"_index":3947,"title":{},"name":{},"text":{"174":{}},"component":{}}],["http://java.sun.com/j2se/1.4.2/docs/api/java/text/decimalformat.html",{"_index":6097,"title":{},"name":{},"text":{"366":{}},"component":{}}],["http://java.sun.com/j2se/1.4.2/docs/api/java/text/simpledateformat.html",{"_index":6110,"title":{},"name":{},"text":{"366":{}},"component":{}}],["http://localhost:8080",{"_index":3585,"title":{},"name":{},"text":{"161":{}},"component":{}}],["http://localhost:8080/hom",{"_index":2521,"title":{},"name":{},"text":{"56":{}},"component":{}}],["http://localhost:8080/hop/api/v1/execution/sync",{"_index":1757,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/location/executions/loc",{"_index":1774,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/location/executions/local/df84cbc2",{"_index":1787,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/location/state/local/df84cbc2",{"_index":1792,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/metadata/list/pipelin",{"_index":1738,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/metadata/pipelin",{"_index":1740,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/metadata/typ",{"_index":1721,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/plugins/list/org.apache.hop.pipeline.engine.pipelineengineplugintyp",{"_index":1752,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/api/v1/plugins/typ",{"_index":1749,"title":{},"name":{},"text":{"37":{}},"component":{}}],["http://localhost:8080/hop/ui",{"_index":7278,"title":{},"name":{},"text":{"543":{}},"component":{}}],["http://localhost:8080/ui",{"_index":1567,"title":{},"name":{},"text":{"25":{}},"component":{}}],["http://localhost:8081",{"_index":1408,"title":{},"name":{},"text":{"19":{},"41":{},"160":{}},"component":{}}],["http://localhost:8081/hop/addexport/?type=workflow",{"_index":2051,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/addpipeline/xml=i",{"_index":2063,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/addworkflow/xml=i",{"_index":2067,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/pausepipeline/?name=&id",{"_index":2084,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/pipelineimage/?name=remot",{"_index":2069,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/pipelinestatus/?name=>&id",{"_index":2076,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/prepareexec/?xml=y&name=&id",{"_index":2088,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/registerpipeline/xml=i",{"_index":2091,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/removepipeline/?name=&id",{"_index":2154,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/removeworkflow/?name=&id",{"_index":2157,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/snifftransform/?xml=y&pipeline=&id=&transform=&type=output&lines=100",{"_index":2162,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/startexec?nam",{"_index":2165,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/startpipeline?nam",{"_index":2173,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/startworkflow?nam",{"_index":2175,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/statu",{"_index":2077,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/stoppipeline?name=&id",{"_index":2178,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/stopworkflow?name=&id",{"_index":2181,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/workflowimage/?name=>&id",{"_index":2079,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8081/hop/workflowstatus/?name=&id",{"_index":2081,"title":{},"name":{},"text":{"42":{}},"component":{}}],["http://localhost:8181",{"_index":6674,"title":{},"name":{},"text":{"514":{}},"component":{}}],["http://localhost:8181/hop/webservice/?service=test&a=valuea&b=valueb",{"_index":2193,"title":{},"name":{},"text":{"43":{}},"component":{}}],["http://localhost:8182/hop/webservice/?service=countteams&param_project_id=63",{"_index":2322,"title":{},"name":{},"text":{"50":{}},"component":{}}],["http://localhost:8282/hop/asyncrun/?service=dataload&max=50000000",{"_index":1889,"title":{},"name":{},"text":{"40":{}},"component":{}}],["http://localhost:8282/hop/asyncstatus/?service=dataload&id='$id",{"_index":1896,"title":{},"name":{},"text":{"40":{}},"component":{}}],["http://myusername@somehost/index.html",{"_index":1027,"title":{},"name":{},"text":{"8":{}},"component":{}}],["http://somehost:8080/downloads/somefile.jar",{"_index":1026,"title":{},"name":{},"text":{"8":{}},"component":{}}],["http://www.apache.org/licenses/licens",{"_index":7038,"title":{},"name":{},"text":{"533":{}},"component":{}}],["http://www.example.com/hop",{"_index":1922,"title":{},"name":{},"text":{"41":{}},"component":{}}],["httppost",{"_index":5421,"title":{},"name":{"264":{}},"text":{},"component":{}}],["https://6080",{"_index":7029,"title":{},"name":{},"text":{"533":{}},"component":{}}],["https://abcd",{"_index":4054,"title":{},"name":{},"text":{"197":{},"275":{},"276":{}},"component":{}}],["https://accounts.google.com/o/oauth2/auth?access_type=offline&client_id=yourclientid&redirect_uri=http://localhost:8888/callback&response_type=code&scope=https://www.googleapis.com/auth/dr",{"_index":3152,"title":{},"name":{},"text":{"101":{}},"component":{}}],["https://bugs.eclipse.org/bugs/show_bug.cgi?id=569046",{"_index":7187,"title":{},"name":{},"text":{"541":{}},"component":{}}],["https://cloud.google.com/compute/docs/network",{"_index":3819,"title":{},"name":{},"text":{"165":{}},"component":{}}],["https://dist.apache.org/repos/dist/dev/hop",{"_index":7136,"title":{},"name":{},"text":{"538":{},"540":{}},"component":{}}],["https://dist.apache.org/repos/dist/dev/hop/apach",{"_index":7139,"title":{},"name":{},"text":{"538":{}},"component":{}}],["https://dist.apache.org/repos/dist/dev/hop/key",{"_index":7095,"title":{},"name":{},"text":{"537":{}},"component":{}}],["https://dist.apache.org/repos/dist/release/hop",{"_index":7151,"title":{},"name":{},"text":{"540":{}},"component":{}}],["https://docs.exasol.com/db/latest/connect_exasol/drivers/jdbc.htm#jdbcdriv",{"_index":3208,"title":{},"name":{},"text":{"115":{}},"component":{}}],["https://docs.intersystems.com/latest/csp/docbook/docbook.ui.page.cls?key=bgjd_intro",{"_index":3185,"title":{},"name":{},"text":{"109":{}},"component":{}}],["https://docs.oracle.com/javase/7/docs/api/java/text/simpledateformat.html",{"_index":6302,"title":{},"name":{},"text":{"400":{}},"component":{}}],["https://docs.oracle.com/javase/8/docs/api/java/text/simpledateformat.html",{"_index":5534,"title":{},"name":{},"text":{"273":{}},"component":{}}],["https://docs.vmware.com/en/vmwar",{"_index":3232,"title":{},"name":{},"text":{"118":{}},"component":{}}],["https://duckdb.org/docs/api/java.html",{"_index":3205,"title":{},"name":{},"text":{"114":{}},"component":{}}],["https://en.wikipedia.org/wiki/phonetic_algorithm#:~:text=a%20phonetic%20algorithm%20is%20an,indexing%20words%20in%20other%20languages.[phonet",{"_index":5335,"title":{},"name":{},"text":{"248":{}},"component":{}}],["https://esd.actian.com/product/drivers/jdbc/java/jdbc",{"_index":3351,"title":{},"name":{},"text":{"145":{}},"component":{}}],["https://github.com/apache/hop.git",{"_index":7098,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["https://github.com/apache/hop/pull/1078",{"_index":7082,"title":{},"name":{},"text":{"536":{}},"component":{}}],["https://github.com/apache/hop/pull/1289",{"_index":7079,"title":{},"name":{},"text":{"536":{}},"component":{}}],["https://github.com/apache/hop/pull/1291",{"_index":7077,"title":{},"name":{},"text":{"536":{}},"component":{}}],["https://github.com/diethardsteiner/apach",{"_index":6688,"title":{},"name":{},"text":{"514":{}},"component":{}}],["https://github.com/json",{"_index":5526,"title":{},"name":{},"text":{"273":{}},"component":{}}],["https://github.com/wildfly/jandex",{"_index":6985,"title":{},"name":{},"text":{"532":{}},"component":{}}],["https://hop.apache.org//manual/latest/pipeline/transforms/filterrows.html#_mdi_exampl",{"_index":4641,"title":{},"name":{},"text":{"246":{}},"component":{}}],["https://hub.docker.com/r/apache/hop",{"_index":6634,"title":{},"name":{},"text":{"514":{}},"component":{}}],["https://kafka.apache.org/document",{"_index":5558,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["https://login.salesforce.com/services/soap/u/50.0",{"_index":5918,"title":{},"name":{},"text":{"327":{},"330":{},"331":{},"332":{},"333":{},"334":{}},"component":{}}],["https://neo4j.com/docs/driv",{"_index":3474,"title":{},"name":{},"text":{"154":{}},"component":{}}],["https://repository.apache.org/snapshot",{"_index":6981,"title":{},"name":{},"text":{"532":{}},"component":{}}],["https://stackoverflow.com/questions/18841744/jdbc",{"_index":3290,"title":{},"name":{},"text":{"130":{}},"component":{}}],["https://www.dropbox.com/develop",{"_index":3134,"title":{},"name":{},"text":{"99":{}},"component":{}}],["https://www.eclipse.org/forums/index.php/t/805303",{"_index":7182,"title":{},"name":{},"text":{"541":{}},"component":{}}],["hub",{"_index":1546,"title":{"186":{},"187":{}},"name":{"186":{},"187":{}},"text":{"25":{},"81":{},"86":{},"88":{},"186":{},"187":{},"428":{},"543":{}},"component":{}}],["huge",{"_index":1432,"title":{},"name":{},"text":{"20":{},"52":{}},"component":{}}],["human",{"_index":953,"title":{},"name":{},"text":{"7":{},"77":{},"529":{}},"component":{}}],["hundr",{"_index":422,"title":{},"name":{},"text":{"4":{},"9":{},"20":{},"50":{},"158":{},"164":{},"395":{},"397":{}},"component":{}}],["hunger",{"_index":4450,"title":{},"name":{},"text":{"241":{}},"component":{}}],["hurt",{"_index":2553,"title":{},"name":{},"text":{"56":{}},"component":{}}],["hwf",{"_index":1664,"title":{},"name":{"151":{}},"text":{"30":{},"378":{},"520":{},"533":{},"544":{}},"component":{}}],["hybrid",{"_index":307,"title":{},"name":{},"text":{"2":{},"20":{}},"component":{}}],["hyiz/ix1lqvwzmqfjybhtxaq/lapcqpveljda0v1pguwwkqdfciz2zuwne3l3bic24wuarqnsy/v",{"_index":2141,"title":{},"name":{},"text":{"42":{}},"component":{}}],["hyper",{"_index":1930,"title":{},"name":{},"text":{"41":{}},"component":{}}],["hyperbol",{"_index":5080,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hyperlink",{"_index":4405,"title":{"247-104":{}},"name":{},"text":{"235":{}},"component":{}}],["hyperson",{"_index":3241,"title":{"120":{}},"name":{"120":{}},"text":{},"component":{}}],["hypothesi",{"_index":5098,"title":{},"name":{},"text":{"247":{}},"component":{}}],["hypothet",{"_index":3159,"title":{},"name":{},"text":{"105":{}},"component":{}}],["i.",{"_index":2327,"title":{},"name":{},"text":{"50":{},"220":{},"235":{},"247":{},"298":{},"400":{}},"component":{}}],["i/o",{"_index":2450,"title":{},"name":{},"text":{"55":{},"347":{}},"component":{}}],["i18",{"_index":6892,"title":{},"name":{},"text":{"528":{}},"component":{}}],["i18n",{"_index":6793,"title":{},"name":{},"text":{"525":{},"526":{},"528":{}},"component":{}}],["i18n::hopgui.menu.fil",{"_index":6882,"title":{},"name":{},"text":{"528":{}},"component":{}}],["i18n:package:key",{"_index":6878,"title":{},"name":{},"text":{"528":{}},"component":{}}],["i2",{"_index":5168,"title":{},"name":{},"text":{"247":{}},"component":{}}],["i<expectedvalues.length",{"_index":6854,"title":{},"name":{},"text":{"527":{}},"component":{}}],["i<expectedvariables.length",{"_index":6849,"title":{},"name":{},"text":{"527":{}},"component":{}}],["i=0",{"_index":1364,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{},"83":{}},"component":{}}],["iaa",{"_index":6318,"title":{},"name":{},"text":{"428":{}},"component":{}}],["iam",{"_index":3111,"title":{},"name":{},"text":{"97":{},"158":{},"315":{}},"component":{}}],["iban",{"_index":4508,"title":{},"name":{},"text":{"241":{}},"component":{}}],["ibm",{"_index":3347,"title":{"144":{}},"name":{},"text":{},"component":{}}],["icmp",{"_index":6542,"title":{},"name":{},"text":{"480":{}},"component":{}}],["icon",{"_index":643,"title":{"516":{},"29-7":{}},"name":{"516":{}},"text":{"7":{},"15":{},"17":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"56":{},"57":{},"78":{},"79":{},"80":{},"82":{},"83":{},"84":{},"85":{},"103":{},"158":{},"169":{},"270":{},"363":{},"517":{},"530":{},"533":{},"535":{},"541":{}},"component":{}}],["id",{"_index":37,"title":{"37-16":{}},"name":{},"text":{"1":{},"2":{},"7":{},"19":{},"32":{},"33":{},"37":{},"40":{},"41":{},"42":{},"45":{},"50":{},"52":{},"55":{},"56":{},"58":{},"66":{},"76":{},"101":{},"103":{},"157":{},"161":{},"163":{},"165":{},"178":{},"186":{},"188":{},"189":{},"190":{},"191":{},"196":{},"198":{},"213":{},"216":{},"227":{},"236":{},"247":{},"259":{},"260":{},"261":{},"273":{},"275":{},"276":{},"280":{},"294":{},"298":{},"300":{},"308":{},"310":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"337":{},"349":{},"363":{},"379":{},"381":{},"413":{},"418":{},"430":{},"433":{},"453":{},"466":{},"477":{},"478":{},"491":{},"522":{},"527":{},"528":{},"529":{},"530":{},"538":{},"544":{}},"component":{}}],["id.0",{"_index":1370,"title":{},"name":{},"text":{"19":{},"38":{},"41":{}},"component":{}}],["id.hpl",{"_index":6970,"title":{},"name":{},"text":{"531":{}},"component":{}}],["id/group",{"_index":5730,"title":{},"name":{},"text":{"298":{}},"component":{}}],["id;nam",{"_index":5542,"title":{},"name":{},"text":{"273":{}},"component":{}}],["id=\">back",{"_index":2085,"title":{},"name":{},"text":{"42":{}},"component":{}}],["id=$(cat",{"_index":1892,"title":{},"name":{},"text":{"40":{}},"component":{}}],["id=8bea27db",{"_index":2166,"title":{},"name":{},"text":{"42":{}},"component":{}}],["id=start",{"_index":5957,"title":{},"name":{},"text":{"337":{}},"component":{}}],["id=start;id.jar",{"_index":5958,"title":{},"name":{},"text":{"337":{}},"component":{}}],["id_main_menu",{"_index":6880,"title":{},"name":{},"text":{"528":{}},"component":{}}],["id_main_menu_fil",{"_index":6881,"title":{},"name":{},"text":{"528":{}},"component":{}}],["idatabas",{"_index":6935,"title":{},"name":{},"text":{"529":{}},"component":{}}],["idatabasemeta",{"_index":6790,"title":{},"name":{},"text":{"525":{}},"component":{}}],["idea",{"_index":2438,"title":{},"name":{},"text":{"55":{},"82":{},"163":{},"309":{},"533":{}},"component":{}}],["ident",{"_index":1301,"title":{},"name":{},"text":{"16":{},"41":{},"52":{},"167":{},"168":{},"169":{},"181":{},"217":{},"227":{},"248":{},"269":{},"285":{},"309":{},"337":{},"360":{},"364":{},"373":{},"460":{},"461":{},"466":{},"470":{}},"component":{}}],["identifi",{"_index":286,"title":{"265":{}},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"19":{},"41":{},"44":{},"47":{},"52":{},"71":{},"81":{},"86":{},"90":{},"150":{},"151":{},"152":{},"154":{},"179":{},"203":{},"213":{},"220":{},"247":{},"248":{},"249":{},"251":{},"256":{},"265":{},"271":{},"275":{},"276":{},"280":{},"319":{},"347":{},"359":{},"487":{},"488":{},"491":{},"501":{},"529":{},"530":{}},"component":{}}],["identifylastrow",{"_index":5428,"title":{},"name":{"265":{}},"text":{},"component":{}}],["idiom",{"_index":5826,"title":{},"name":{},"text":{"319":{}},"component":{}}],["idl",{"_index":3443,"title":{},"name":{},"text":{"154":{},"167":{},"169":{},"198":{}},"component":{}}],["idnumb",{"_index":4531,"title":{},"name":{},"text":{"241":{}},"component":{}}],["idx",{"_index":5479,"title":{},"name":{},"text":{"270":{}},"component":{}}],["idx_company_id",{"_index":6534,"title":{},"name":{},"text":{"475":{}},"component":{}}],["id’",{"_index":4408,"title":{},"name":{},"text":{"236":{}},"component":{}}],["ie",{"_index":1477,"title":{},"name":{},"text":{"23":{},"226":{}},"component":{}}],["ieee",{"_index":4107,"title":{},"name":{},"text":{"205":{}},"component":{}}],["iextensionpoint",{"_index":7009,"title":{},"name":{},"text":{"532":{}},"component":{}}],["if",{"_index":4679,"title":{"247-76":{}},"name":{},"text":{},"component":{}}],["if([field",{"_index":4952,"title":{},"name":{},"text":{"247":{}},"component":{}}],["if(isnumber(true()),true()=1,tru",{"_index":4969,"title":{},"name":{},"text":{"247":{}},"component":{}}],["ifna",{"_index":4678,"title":{"247-75":{}},"name":{},"text":{},"component":{}}],["ifnul",{"_index":5430,"title":{},"name":{"266":{}},"text":{},"component":{}}],["ignor",{"_index":89,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"23":{},"24":{},"30":{},"52":{},"57":{},"102":{},"105":{},"162":{},"164":{},"168":{},"202":{},"205":{},"208":{},"222":{},"232":{},"233":{},"234":{},"247":{},"250":{},"270":{},"273":{},"278":{},"279":{},"292":{},"297":{},"298":{},"312":{},"316":{},"346":{},"358":{},"364":{},"366":{},"369":{},"371":{},"386":{},"399":{},"404":{},"465":{},"472":{},"488":{},"538":{}},"component":{}}],["ignoreempti",{"_index":5161,"title":{},"name":{},"text":{"247":{}},"component":{}}],["igor",{"_index":5353,"title":{},"name":{},"text":{"250":{}},"component":{}}],["ihopmetadataobjectfactori",{"_index":6938,"title":{},"name":{},"text":{"529":{}},"component":{}}],["ihopmetadataprovid",{"_index":6911,"title":{},"name":{},"text":{"529":{},"532":{}},"component":{}}],["ihopmetadataseri",{"_index":7012,"title":{},"name":{},"text":{"532":{}},"component":{}}],["ii",{"_index":2365,"title":{},"name":{},"text":{"52":{},"227":{}},"component":{}}],["illeg",{"_index":4310,"title":{},"name":{},"text":{"227":{}},"component":{}}],["illegalargumentexcept",{"_index":4147,"title":{},"name":{},"text":{"205":{}},"component":{}}],["illustr",{"_index":2253,"title":{},"name":{},"text":{"50":{},"82":{},"542":{}},"component":{}}],["ilogchannel",{"_index":6789,"title":{},"name":{},"text":{"525":{}},"component":{}}],["imag",{"_index":381,"title":{"3":{},"280-8":{},"514-5":{},"542-5":{}},"name":{"3":{}},"text":{"3":{},"15":{},"16":{},"25":{},"33":{},"42":{},"50":{},"56":{},"78":{},"130":{},"162":{},"165":{},"241":{},"280":{},"466":{},"513":{},"514":{},"529":{},"540":{},"542":{},"543":{}},"component":{}}],["image::get",{"_index":2834,"title":{},"name":{},"text":{"78":{}},"component":{}}],["image='apache/hop",{"_index":2536,"title":{},"name":{},"text":{"56":{}},"component":{}}],["imagefil",{"_index":6953,"title":{},"name":{},"text":{"530":{}},"component":{}}],["imagin",{"_index":2820,"title":{},"name":{},"text":{"78":{},"274":{},"289":{}},"component":{}}],["imaginari",{"_index":4603,"title":{"247-105":{}},"name":{},"text":{"242":{}},"component":{}}],["imap",{"_index":4346,"title":{},"name":{},"text":{"232":{},"464":{}},"component":{}}],["imetastor",{"_index":7011,"title":{},"name":{},"text":{"532":{}},"component":{}}],["immedi",{"_index":1877,"title":{},"name":{},"text":{"40":{},"50":{},"58":{},"154":{},"158":{},"366":{},"434":{},"519":{}},"component":{}}],["immut",{"_index":3838,"title":{},"name":{},"text":{"166":{}},"component":{}}],["imperson",{"_index":5403,"title":{},"name":{},"text":{"260":{},"261":{}},"component":{}}],["implement",{"_index":371,"title":{},"name":{},"text":{"2":{},"8":{},"16":{},"50":{},"52":{},"77":{},"99":{},"163":{},"227":{},"247":{},"270":{},"324":{},"325":{},"359":{},"372":{},"429":{},"480":{},"489":{},"503":{},"519":{},"529":{},"530":{},"532":{},"536":{},"541":{},"542":{}},"component":{}}],["impli",{"_index":2459,"title":{},"name":{},"text":{"55":{},"83":{},"105":{},"533":{}},"component":{}}],["implicit",{"_index":666,"title":{},"name":{},"text":{"7":{},"41":{},"234":{},"462":{}},"component":{}}],["implicitli",{"_index":628,"title":{},"name":{},"text":{"7":{},"227":{},"338":{}},"component":{}}],["import",{"_index":247,"title":{"46":{},"298":{},"388":{},"520":{},"19-7":{},"186-7":{},"475-2":{},"520-1":{},"533-4":{}},"name":{"46":{},"298":{},"388":{},"414":{},"520":{}},"text":{"2":{},"7":{},"10":{},"13":{},"19":{},"23":{},"41":{},"46":{},"49":{},"53":{},"54":{},"55":{},"56":{},"80":{},"81":{},"82":{},"86":{},"88":{},"131":{},"163":{},"167":{},"168":{},"181":{},"187":{},"222":{},"225":{},"227":{},"233":{},"234":{},"247":{},"268":{},"270":{},"277":{},"279":{},"280":{},"295":{},"297":{},"298":{},"311":{},"313":{},"324":{},"325":{},"337":{},"338":{},"344":{},"360":{},"364":{},"371":{},"376":{},"388":{},"414":{},"427":{},"432":{},"433":{},"466":{},"513":{},"520":{},"521":{},"527":{},"533":{},"534":{},"536":{}},"component":{}}],["import.bat",{"_index":1416,"title":{},"name":{},"text":{"19":{},"46":{}},"component":{}}],["import.sh",{"_index":1417,"title":{},"name":{},"text":{"19":{},"46":{}},"component":{}}],["importkeystor",{"_index":1956,"title":{},"name":{},"text":{"41":{}},"component":{}}],["imposs",{"_index":2797,"title":{},"name":{},"text":{"77":{},"205":{},"243":{}},"component":{}}],["improv",{"_index":415,"title":{},"name":{},"text":{"4":{},"30":{},"220":{},"222":{},"248":{},"273":{},"298":{},"316":{},"346":{},"363":{},"367":{},"377":{},"536":{}},"component":{}}],["imreal",{"_index":4695,"title":{"247-106":{}},"name":{},"text":{},"component":{}}],["inact",{"_index":5652,"title":{},"name":{},"text":{"291":{},"492":{}},"component":{}}],["inappropri",{"_index":4280,"title":{},"name":{},"text":{"222":{},"337":{}},"component":{}}],["inbox",{"_index":6496,"title":{},"name":{},"text":{"464":{}},"component":{}}],["inc",{"_index":5676,"title":{},"name":{},"text":{"292":{},"336":{}},"component":{}}],["incept",{"_index":4916,"title":{},"name":{},"text":{"247":{}},"component":{}}],["incl",{"_index":2285,"title":{},"name":{},"text":{"50":{}},"component":{}}],["includ",{"_index":545,"title":{"117-1":{},"117-2":{}},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"17":{},"22":{},"25":{},"30":{},"33":{},"34":{},"40":{},"41":{},"44":{},"50":{},"52":{},"78":{},"82":{},"83":{},"88":{},"91":{},"93":{},"94":{},"95":{},"96":{},"103":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"146":{},"163":{},"174":{},"178":{},"183":{},"185":{},"202":{},"216":{},"220":{},"228":{},"232":{},"233":{},"236":{},"242":{},"246":{},"247":{},"248":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"262":{},"268":{},"270":{},"271":{},"273":{},"274":{},"275":{},"276":{},"277":{},"279":{},"280":{},"283":{},"284":{},"288":{},"291":{},"303":{},"305":{},"311":{},"313":{},"314":{},"316":{},"331":{},"338":{},"349":{},"352":{},"357":{},"360":{},"366":{},"367":{},"368":{},"372":{},"381":{},"383":{},"386":{},"388":{},"389":{},"394":{},"421":{},"425":{},"428":{},"430":{},"432":{},"433":{},"435":{},"439":{},"441":{},"442":{},"447":{},"450":{},"454":{},"457":{},"460":{},"461":{},"464":{},"466":{},"468":{},"477":{},"478":{},"481":{},"489":{},"492":{},"493":{},"499":{},"501":{},"503":{},"506":{},"509":{},"514":{},"527":{},"531":{},"532":{},"533":{},"534":{},"535":{},"538":{},"543":{},"546":{}},"component":{}}],["includechildren",{"_index":1775,"title":{},"name":{},"text":{"37":{}},"component":{}}],["inclus",{"_index":5151,"title":{},"name":{},"text":{"247":{},"509":{}},"component":{}}],["inclusion/exclus",{"_index":5371,"title":{},"name":{},"text":{"251":{}},"component":{}}],["incom",{"_index":2348,"title":{},"name":{},"text":{"52":{},"81":{},"207":{},"208":{},"221":{},"227":{},"233":{},"235":{},"238":{},"247":{},"251":{},"263":{},"270":{},"271":{},"273":{},"284":{},"287":{},"289":{},"290":{},"292":{},"303":{},"309":{},"311":{},"316":{},"318":{},"319":{},"324":{},"325":{},"353":{},"358":{},"367":{},"386":{},"481":{},"503":{}},"component":{}}],["incomingfieldfromhop",{"_index":5445,"title":{},"name":{},"text":{"270":{}},"component":{}}],["incompat",{"_index":5405,"title":{},"name":{},"text":{"261":{},"521":{}},"component":{}}],["incorpor",{"_index":7201,"title":{},"name":{},"text":{"541":{}},"component":{}}],["incorrect",{"_index":405,"title":{},"name":{},"text":{"4":{},"82":{},"83":{},"233":{},"309":{},"338":{},"366":{}},"component":{}}],["incorrectli",{"_index":4752,"title":{},"name":{},"text":{"247":{}},"component":{}}],["increas",{"_index":1155,"title":{},"name":{},"text":{"9":{},"10":{},"41":{},"81":{},"176":{},"177":{},"222":{},"227":{},"292":{},"352":{},"396":{},"453":{},"519":{}},"component":{}}],["incred",{"_index":4847,"title":{},"name":{},"text":{"247":{}},"component":{}}],["increment",{"_index":2462,"title":{},"name":{},"text":{"55":{},"87":{},"98":{},"147":{},"152":{},"176":{},"177":{},"216":{},"227":{},"381":{},"453":{},"483":{},"541":{}},"component":{}}],["incub",{"_index":6746,"title":{},"name":{},"text":{"519":{}},"component":{}}],["incur",{"_index":3444,"title":{},"name":{},"text":{"154":{},"222":{}},"component":{}}],["inde",{"_index":3113,"title":{},"name":{},"text":{"97":{},"222":{},"433":{}},"component":{}}],["indefinit",{"_index":869,"title":{},"name":{},"text":{"7":{},"163":{},"186":{},"428":{},"500":{}},"component":{}}],["independ",{"_index":510,"title":{},"name":{},"text":{"5":{},"19":{},"82":{},"113":{},"131":{},"165":{},"247":{},"365":{},"367":{},"381":{},"521":{}},"component":{}}],["index",{"_index":385,"title":{"476":{},"517":{},"526":{},"545":{},"292-11":{},"292-12":{}},"name":{"4":{},"9":{},"10":{},"21":{},"26":{},"37":{},"38":{},"39":{},"41":{},"49":{},"51":{},"64":{},"91":{},"94":{},"427":{},"428":{},"429":{},"430":{},"431":{},"432":{},"476":{},"517":{},"521":{},"526":{},"539":{},"543":{},"545":{}},"text":{"64":{},"156":{},"181":{},"216":{},"227":{},"247":{},"248":{},"268":{},"291":{},"292":{},"297":{},"299":{},"360":{},"371":{},"372":{},"431":{},"432":{},"433":{},"437":{},"474":{},"475":{},"476":{},"493":{},"532":{}},"component":{}}],["index_num",{"_index":4948,"title":{},"name":{},"text":{"247":{}},"component":{}}],["indextablespac",{"_index":2802,"title":{},"name":{},"text":{"77":{}},"component":{}}],["indic",{"_index":29,"title":{},"name":{},"text":{"1":{},"9":{},"19":{},"23":{},"30":{},"44":{},"52":{},"58":{},"67":{},"73":{},"82":{},"83":{},"93":{},"105":{},"130":{},"167":{},"169":{},"205":{},"212":{},"216":{},"219":{},"224":{},"227":{},"228":{},"235":{},"236":{},"242":{},"247":{},"248":{},"258":{},"273":{},"285":{},"291":{},"292":{},"305":{},"316":{},"319":{},"324":{},"325":{},"328":{},"329":{},"330":{},"332":{},"333":{},"334":{},"339":{},"347":{},"354":{},"363":{},"366":{},"368":{},"372":{},"388":{},"396":{},"412":{},"418":{},"441":{},"487":{},"488":{},"489":{},"530":{},"537":{}},"component":{}}],["individu",{"_index":2414,"title":{},"name":{},"text":{"55":{},"75":{},"95":{},"275":{},"276":{},"291":{},"292":{},"313":{},"346":{},"363":{},"466":{}},"component":{}}],["industri",{"_index":4478,"title":{},"name":{},"text":{"241":{}},"component":{}}],["inf/jandex.idx",{"_index":6986,"title":{},"name":{},"text":{"532":{}},"component":{}}],["inf/manifest.mf",{"_index":1039,"title":{},"name":{},"text":{"8":{}},"component":{}}],["infin",{"_index":4971,"title":{},"name":{},"text":{"247":{}},"component":{}}],["infinit",{"_index":6610,"title":{},"name":{},"text":{"501":{}},"component":{}}],["inflat",{"_index":936,"title":{},"name":{},"text":{"7":{}},"component":{}}],["influenc",{"_index":2723,"title":{},"name":{},"text":{"75":{},"247":{}},"component":{}}],["info",{"_index":1310,"title":{"256":{},"296":{},"469":{},"30-6":{}},"name":{},"text":{"17":{},"23":{},"25":{},"27":{},"29":{},"30":{},"37":{},"56":{},"81":{},"86":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"158":{},"161":{},"163":{},"165":{},"256":{},"258":{},"296":{},"363":{},"372":{},"432":{},"469":{},"543":{}},"component":{}}],["infobright",{"_index":3244,"title":{"121":{}},"name":{"121":{}},"text":{},"component":{}}],["inform",{"_index":386,"title":{"29":{},"62":{},"236":{},"29-2":{},"37-15":{},"58-3":{},"247-51":{},"256-4":{}},"name":{"29":{},"62":{}},"text":{"4":{},"5":{},"7":{},"8":{},"10":{},"11":{},"15":{},"19":{},"22":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"62":{},"67":{},"69":{},"71":{},"73":{},"74":{},"75":{},"76":{},"77":{},"79":{},"81":{},"83":{},"84":{},"86":{},"87":{},"94":{},"96":{},"113":{},"151":{},"152":{},"154":{},"156":{},"158":{},"160":{},"161":{},"165":{},"167":{},"168":{},"170":{},"171":{},"180":{},"182":{},"207":{},"208":{},"211":{},"213":{},"216":{},"218":{},"220":{},"227":{},"232":{},"234":{},"236":{},"243":{},"245":{},"246":{},"247":{},"251":{},"256":{},"259":{},"260":{},"261":{},"264":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"286":{},"289":{},"290":{},"291":{},"292":{},"296":{},"299":{},"304":{},"305":{},"308":{},"310":{},"313":{},"314":{},"315":{},"316":{},"319":{},"325":{},"326":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"341":{},"342":{},"351":{},"352":{},"355":{},"361":{},"363":{},"366":{},"367":{},"377":{},"378":{},"379":{},"380":{},"381":{},"389":{},"400":{},"421":{},"430":{},"431":{},"432":{},"433":{},"437":{},"453":{},"466":{},"481":{},"485":{},"502":{},"503":{},"505":{},"511":{},"512":{},"514":{},"518":{},"519":{},"530":{},"532":{},"533":{},"534":{},"535":{},"536":{},"538":{},"541":{},"543":{},"544":{}},"component":{}}],["informix",{"_index":3246,"title":{"122":{}},"name":{"122":{}},"text":{},"component":{}}],["infos=0",{"_index":3362,"title":{},"name":{},"text":{"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"389":{}},"component":{}}],["infos=1",{"_index":3363,"title":{},"name":{},"text":{"151":{},"152":{},"389":{}},"component":{}}],["infrastructur",{"_index":3025,"title":{},"name":{},"text":{"88":{},"91":{},"428":{},"429":{}},"component":{}}],["ingest",{"_index":5554,"title":{},"name":{},"text":{"275":{}},"component":{}}],["ingr",{"_index":3249,"title":{"123":{}},"name":{"123":{}},"text":{},"component":{}}],["ingredi",{"_index":4511,"title":{},"name":{},"text":{"241":{}},"component":{}}],["inher",{"_index":3764,"title":{},"name":{},"text":{"163":{},"542":{}},"component":{}}],["inherit",{"_index":136,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"90":{},"91":{},"93":{},"94":{},"152":{},"309":{},"344":{},"364":{},"378":{},"389":{},"402":{},"408":{},"529":{}},"component":{}}],["init",{"_index":3571,"title":{},"name":{},"text":{"160":{},"162":{},"176":{},"532":{}},"component":{}}],["init:0/1",{"_index":3708,"title":{},"name":{},"text":{"162":{}},"component":{}}],["init=neo4j",{"_index":6341,"title":{},"name":{},"text":{"431":{}},"component":{}}],["initcap",{"_index":6020,"title":{},"name":{},"text":{"358":{}},"component":{}}],["initcontain",{"_index":3664,"title":{},"name":{},"text":{"162":{}},"component":{}}],["initi",{"_index":1971,"title":{"544-1":{}},"name":{},"text":{"41":{},"50":{},"53":{},"54":{},"87":{},"154":{},"160":{},"161":{},"162":{},"165":{},"233":{},"238":{},"248":{},"274":{},"287":{},"309":{},"322":{},"344":{},"358":{},"492":{},"514":{},"521":{},"522":{},"524":{},"544":{}},"component":{}}],["initialis",{"_index":3704,"title":{},"name":{},"text":{"162":{}},"component":{}}],["inject",{"_index":255,"title":{"81":{},"287":{},"9-10":{},"81-1":{},"81-2":{},"81-3":{},"81-4":{},"178-9":{},"180-4":{},"181-4":{},"182-4":{},"183-4":{},"184-4":{},"185-4":{},"220-4":{},"223-4":{},"227-13":{},"235-6":{},"246-7":{},"250-7":{},"253-4":{},"254-4":{},"257-4":{},"258-4":{},"266-3":{},"272-4":{},"273-11":{},"274-8":{},"283-4":{},"285-5":{},"287-6":{},"287-7":{},"293-4":{},"301-3":{},"303-4":{},"311-4":{},"315-6":{},"317-5":{},"320-4":{},"323-4":{},"338-8":{},"341-4":{},"342-4":{},"343-4":{},"347-4":{},"348-4":{},"349-4":{},"355-4":{},"357-4":{},"358-4":{},"359-4":{},"360-6":{},"364-4":{},"366-12":{},"367-7":{},"371-4":{},"372-9":{},"373-5":{},"374-4":{},"375-4":{},"376-6":{},"382-4":{},"383-7":{},"544-10":{}},"name":{"81":{},"394":{}},"text":{"2":{},"9":{},"81":{},"84":{},"86":{},"178":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"214":{},"220":{},"223":{},"227":{},"235":{},"243":{},"246":{},"250":{},"253":{},"254":{},"257":{},"258":{},"266":{},"267":{},"272":{},"273":{},"274":{},"283":{},"285":{},"287":{},"293":{},"301":{},"303":{},"311":{},"315":{},"317":{},"320":{},"323":{},"324":{},"325":{},"338":{},"341":{},"342":{},"343":{},"347":{},"348":{},"349":{},"355":{},"357":{},"358":{},"359":{},"360":{},"364":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"382":{},"383":{},"394":{},"483":{},"518":{},"544":{}},"component":{}}],["injection/filt",{"_index":4642,"title":{},"name":{},"text":{"246":{}},"component":{}}],["injector",{"_index":2890,"title":{"267":{}},"name":{"267":{}},"text":{"81":{},"83":{},"86":{},"186":{},"267":{},"275":{}},"component":{}}],["inkey",{"_index":1954,"title":{},"name":{},"text":{"41":{}},"component":{}}],["inkscap",{"_index":7064,"title":{},"name":{},"text":{"535":{}},"component":{}}],["inlaw",{"_index":4565,"title":{},"name":{},"text":{"241":{}},"component":{}}],["inlin",{"_index":4998,"title":{},"name":{},"text":{"247":{}},"component":{}}],["inner",{"_index":2332,"title":{},"name":{},"text":{"52":{},"222":{},"247":{},"284":{},"293":{},"298":{}},"component":{}}],["inout",{"_index":4195,"title":{},"name":{},"text":{"206":{}},"component":{}}],["inpact",{"_index":7072,"title":{},"name":{},"text":{"536":{}},"component":{}}],["input",{"_index":705,"title":{"184":{},"188":{},"190":{},"194":{},"195":{},"207":{},"220":{},"232":{},"234":{},"259":{},"260":{},"273":{},"277":{},"281":{},"286":{},"291":{},"304":{},"331":{},"336":{},"351":{},"363":{},"366":{},"381":{},"386":{},"55-7":{},"291-5":{},"292-8":{},"368-4":{},"544-7":{},"544-14":{}},"name":{"184":{},"207":{},"260":{},"281":{},"286":{},"304":{}},"text":{"7":{},"9":{},"24":{},"32":{},"41":{},"42":{},"46":{},"50":{},"52":{},"55":{},"59":{},"60":{},"64":{},"65":{},"68":{},"70":{},"71":{},"72":{},"76":{},"78":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"151":{},"152":{},"155":{},"158":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"169":{},"170":{},"172":{},"174":{},"179":{},"180":{},"181":{},"183":{},"184":{},"185":{},"186":{},"188":{},"190":{},"194":{},"195":{},"203":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"213":{},"214":{},"215":{},"216":{},"217":{},"219":{},"220":{},"222":{},"224":{},"226":{},"227":{},"232":{},"233":{},"234":{},"236":{},"238":{},"239":{},"240":{},"242":{},"243":{},"244":{},"246":{},"247":{},"250":{},"251":{},"256":{},"258":{},"259":{},"260":{},"262":{},"263":{},"267":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"281":{},"283":{},"284":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"297":{},"298":{},"301":{},"302":{},"303":{},"304":{},"309":{},"310":{},"313":{},"314":{},"316":{},"319":{},"322":{},"323":{},"324":{},"325":{},"326":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"341":{},"345":{},"346":{},"348":{},"351":{},"352":{},"354":{},"356":{},"361":{},"363":{},"366":{},"367":{},"368":{},"369":{},"370":{},"372":{},"374":{},"377":{},"378":{},"379":{},"381":{},"383":{},"384":{},"386":{},"388":{},"389":{},"392":{},"393":{},"395":{},"420":{},"429":{},"430":{},"432":{},"433":{},"437":{},"441":{},"465":{},"489":{},"503":{},"507":{},"511":{},"531":{},"544":{}},"component":{}}],["input\":0}},{\"componentname\":\"5",{"_index":1804,"title":{},"name":{},"text":{"37":{}},"component":{}}],["input\":0}},{\"componentname\":\"enhanc",{"_index":1799,"title":{},"name":{},"text":{"37":{}},"component":{}}],["input\":0}},{\"componentname\":\"get",{"_index":1806,"title":{},"name":{},"text":{"37":{}},"component":{}}],["input\":0}},{\"componentname\":\"output\",\"componentcopy\":\"0\",\"metrics\":{\"read\":1,\"buff",{"_index":1802,"title":{},"name":{},"text":{"37":{}},"component":{}}],["input\":0}},{\"componentname\":\"uuid\",\"componentcopy\":\"0\",\"metrics\":{\"read\":5,\"buff",{"_index":1798,"title":{},"name":{},"text":{"37":{}},"component":{}}],["input\":0}}],\"statusdescription\":\"finished\",\"updatetime\":1678191016156,\"childids\":[\"46690405",{"_index":1808,"title":{},"name":{},"text":{"37":{}},"component":{}}],["input/output",{"_index":2160,"title":{},"name":{},"text":{"42":{}},"component":{}}],["input_dir",{"_index":2540,"title":{},"name":{},"text":{"56":{}},"component":{}}],["input_fold",{"_index":6288,"title":{},"name":{},"text":{"389":{}},"component":{}}],["input_folder=input",{"_index":6286,"title":{},"name":{},"text":{"389":{}},"component":{}}],["input_json",{"_index":5452,"title":{},"name":{},"text":{"270":{}},"component":{}}],["input_json[key",{"_index":5465,"title":{},"name":{},"text":{"270":{}},"component":{}}],["inputrowmeta",{"_index":6199,"title":{},"name":{},"text":{"372":{}},"component":{}}],["inputrowmeta().getinteger(r",{"_index":6207,"title":{},"name":{},"text":{"372":{}},"component":{}}],["inputrowmeta.searchvaluemeta(\"year",{"_index":6202,"title":{},"name":{},"text":{"372":{}},"component":{}}],["inputstream",{"_index":7285,"title":{},"name":{},"text":{"544":{}},"component":{}}],["input’",{"_index":6013,"title":{},"name":{},"text":{"354":{}},"component":{}}],["insensit",{"_index":1682,"title":{},"name":{},"text":{"34":{},"39":{},"47":{},"222":{},"291":{},"316":{}},"component":{}}],["insert",{"_index":720,"title":{"268":{},"332":{}},"name":{},"text":{"7":{},"52":{},"53":{},"54":{},"81":{},"86":{},"107":{},"153":{},"174":{},"189":{},"208":{},"216":{},"217":{},"223":{},"225":{},"227":{},"228":{},"233":{},"238":{},"239":{},"247":{},"248":{},"258":{},"268":{},"270":{},"275":{},"278":{},"285":{},"287":{},"289":{},"292":{},"303":{},"309":{},"311":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"346":{},"353":{},"355":{},"360":{},"363":{},"364":{},"367":{},"369":{},"370":{},"376":{},"378":{},"383":{},"420":{},"481":{},"489":{},"498":{},"533":{}},"component":{}}],["insert&upd",{"_index":5677,"title":{},"name":{},"text":{"292":{}},"component":{}}],["insert(approvalclassif",{"_index":5911,"title":{},"name":{},"text":{"325":{}},"component":{}}],["insert(approvalstatu",{"_index":5910,"title":{},"name":{},"text":{"325":{}},"component":{}}],["insert(bobrow",{"_index":5886,"title":{},"name":{},"text":{"324":{}},"component":{}}],["insert(fredrow",{"_index":5885,"title":{},"name":{},"text":{"324":{}},"component":{}}],["insert/upd",{"_index":2714,"title":{},"name":{},"text":{"71":{},"268":{},"360":{}},"component":{}}],["insert/update/delet",{"_index":6032,"title":{},"name":{},"text":{"360":{}},"component":{}}],["insertupd",{"_index":5431,"title":{},"name":{"268":{}},"text":{},"component":{}}],["insid",{"_index":958,"title":{},"name":{},"text":{"8":{},"10":{},"50":{},"55":{},"56":{},"76":{},"233":{},"247":{},"292":{},"298":{},"316":{},"363":{},"372":{},"384":{},"481":{},"503":{},"527":{}},"component":{}}],["insist",{"_index":3770,"title":{},"name":{},"text":{"163":{}},"component":{}}],["instal",{"_index":426,"title":{"5":{},"14":{},"5-4":{},"14-3":{},"117-2":{}},"name":{"5":{},"14":{}},"text":{"5":{},"6":{},"7":{},"10":{},"11":{},"14":{},"16":{},"19":{},"20":{},"21":{},"27":{},"30":{},"33":{},"38":{},"41":{},"53":{},"54":{},"55":{},"56":{},"64":{},"69":{},"74":{},"88":{},"90":{},"91":{},"94":{},"95":{},"124":{},"130":{},"132":{},"137":{},"141":{},"142":{},"144":{},"152":{},"162":{},"163":{},"164":{},"165":{},"168":{},"422":{},"423":{},"424":{},"478":{},"485":{},"514":{},"527":{},"533":{},"537":{},"538":{},"541":{},"543":{},"544":{}},"component":{}}],["installation/plugins/databases/hive/lib",{"_index":3171,"title":{},"name":{},"text":{"107":{}},"component":{}}],["installation’",{"_index":757,"title":{},"name":{},"text":{"7":{}},"component":{}}],["instanc",{"_index":148,"title":{"542-1":{},"542-2":{},"542-3":{}},"name":{},"text":{"1":{},"5":{},"7":{},"13":{},"65":{},"78":{},"130":{},"165":{},"185":{},"186":{},"187":{},"190":{},"191":{},"196":{},"197":{},"206":{},"220":{},"222":{},"241":{},"247":{},"248":{},"270":{},"275":{},"276":{},"382":{},"401":{},"402":{},"439":{},"441":{},"466":{},"481":{},"503":{},"529":{},"542":{}},"component":{}}],["instancenam",{"_index":3293,"title":{},"name":{},"text":{"130":{}},"component":{}}],["instanti",{"_index":7211,"title":{},"name":{},"text":{"542":{}},"component":{}}],["instead",{"_index":196,"title":{"541-2":{}},"name":{},"text":{"1":{},"20":{},"22":{},"27":{},"34":{},"40":{},"50":{},"52":{},"58":{},"78":{},"79":{},"81":{},"83":{},"159":{},"161":{},"163":{},"164":{},"165":{},"166":{},"205":{},"217":{},"222":{},"233":{},"235":{},"246":{},"247":{},"274":{},"280":{},"292":{},"294":{},"299":{},"309":{},"315":{},"346":{},"364":{},"366":{},"367":{},"381":{},"383":{},"405":{},"431":{},"433":{},"441":{},"489":{},"499":{},"514":{},"519":{},"529":{},"532":{},"542":{}},"component":{}}],["institut",{"_index":5939,"title":{},"name":{},"text":{"336":{}},"component":{}}],["instruct",{"_index":445,"title":{},"name":{},"text":{"5":{},"6":{},"167":{},"427":{},"485":{},"514":{},"527":{},"537":{},"538":{}},"component":{}}],["instrument",{"_index":4548,"title":{},"name":{},"text":{"241":{}},"component":{}}],["insur",{"_index":818,"title":{},"name":{},"text":{"7":{}},"component":{}}],["int",{"_index":4094,"title":{"247-107":{},"247-108":{}},"name":{},"text":{"205":{},"247":{},"298":{},"400":{},"453":{},"529":{},"544":{}},"component":{}}],["int((1/3)*3",{"_index":4972,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(1.2",{"_index":4976,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(1.7",{"_index":4977,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(2",{"_index":4975,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(8.9",{"_index":4973,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(count",{"_index":5260,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(length",{"_index":5202,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(now())=today",{"_index":4846,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(start",{"_index":5187,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(t",{"_index":4814,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int(today())=today",{"_index":4888,"title":{},"name":{},"text":{"247":{}},"component":{}}],["int4",{"_index":5799,"title":{},"name":{},"text":{"315":{}},"component":{}}],["int8",{"_index":5798,"title":{},"name":{},"text":{"315":{}},"component":{}}],["int96",{"_index":5766,"title":{},"name":{},"text":{"304":{}},"component":{}}],["integ",{"_index":800,"title":{},"name":{},"text":{"7":{},"55":{},"76":{},"78":{},"82":{},"177":{},"186":{},"205":{},"216":{},"220":{},"227":{},"236":{},"237":{},"243":{},"246":{},"247":{},"249":{},"250":{},"253":{},"254":{},"258":{},"270":{},"273":{},"275":{},"310":{},"313":{},"320":{},"324":{},"325":{},"337":{},"355":{},"363":{},"372":{},"373":{},"374":{},"379":{},"400":{},"453":{},"529":{}},"component":{}}],["integr",{"_index":227,"title":{"519":{},"527":{},"2-5":{},"30-3":{},"65-4":{},"66-4":{},"130-1":{}},"name":{"527":{}},"text":{"2":{},"8":{},"9":{},"10":{},"16":{},"20":{},"23":{},"30":{},"45":{},"50":{},"55":{},"66":{},"91":{},"93":{},"130":{},"162":{},"167":{},"270":{},"388":{},"389":{},"390":{},"433":{},"457":{},"485":{},"519":{},"520":{},"521":{},"526":{},"527":{},"531":{},"533":{},"546":{}},"component":{}}],["intellig",{"_index":2987,"title":{},"name":{},"text":{"87":{}},"component":{}}],["intellij",{"_index":7017,"title":{"533-11":{}},"name":{},"text":{"533":{},"534":{}},"component":{}}],["intend",{"_index":376,"title":{},"name":{},"text":{"2":{},"5":{},"55":{},"95":{},"160":{},"239":{},"322":{},"437":{}},"component":{}}],["intent",{"_index":2591,"title":{},"name":{},"text":{"56":{},"163":{},"338":{}},"component":{}}],["intention",{"_index":434,"title":{},"name":{},"text":{"5":{}},"component":{}}],["interact",{"_index":1253,"title":{},"name":{},"text":{"13":{},"50":{},"228":{},"319":{}},"component":{}}],["interbas",{"_index":3251,"title":{"124":{}},"name":{"124":{}},"text":{},"component":{}}],["interest",{"_index":1654,"title":{},"name":{},"text":{"29":{},"56":{},"247":{},"533":{}},"component":{}}],["interfac",{"_index":69,"title":{"154-2":{},"532-4":{}},"name":{},"text":{"1":{},"7":{},"19":{},"41":{},"50":{},"56":{},"63":{},"93":{},"154":{},"161":{},"270":{},"417":{},"418":{},"469":{},"514":{},"518":{},"528":{},"529":{},"530":{},"532":{},"536":{}},"component":{}}],["intermedi",{"_index":1130,"title":{},"name":{},"text":{"9":{},"397":{}},"component":{}}],["intern",{"_index":864,"title":{"270-9":{}},"name":{},"text":{"7":{},"50":{},"56":{},"82":{},"165":{},"166":{},"167":{},"168":{},"205":{},"218":{},"220":{},"235":{},"244":{},"245":{},"247":{},"270":{},"280":{},"287":{},"289":{},"346":{},"354":{},"366":{},"367":{},"372":{},"381":{},"387":{},"451":{},"455":{},"466":{},"506":{},"529":{},"544":{}},"component":{}}],["internal.action.current.directori",{"_index":6544,"title":{},"name":{},"text":{"481":{}},"component":{}}],["internal.action.current.directory}/path/sub.hpl",{"_index":6545,"title":{},"name":{},"text":{"481":{}},"component":{}}],["internal.entry.current.directori",{"_index":1139,"title":{},"name":{},"text":{"9":{},"398":{}},"component":{}}],["internal.entry.current.fold",{"_index":3874,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["internal.entry.current.folder}/mapping.hpl",{"_index":3922,"title":{},"name":{},"text":{"170":{}},"component":{}}],["internal.entry.current.folder}/upd",{"_index":6624,"title":{},"name":{},"text":{"511":{}},"component":{}}],["internal.pipeline.filename.directori",{"_index":1140,"title":{},"name":{},"text":{"9":{},"309":{},"398":{}},"component":{}}],["internal.transform.current.directori",{"_index":5617,"title":{},"name":{},"text":{"287":{}},"component":{}}],["internal.transform.current.directory}/path/sub.hpl",{"_index":5620,"title":{},"name":{},"text":{"287":{}},"component":{}}],["internal.transform.id",{"_index":3775,"title":{},"name":{},"text":{"163":{}},"component":{}}],["internal.transform.partition.id",{"_index":6843,"title":{},"name":{},"text":{"527":{}},"component":{}}],["internal.transform.unique.count",{"_index":5622,"title":{},"name":{},"text":{"287":{}},"component":{}}],["internal.workflow.nam",{"_index":6549,"title":{},"name":{},"text":{"481":{},"503":{}},"component":{}}],["internaldiseas",{"_index":4492,"title":{},"name":{},"text":{"241":{}},"component":{}}],["internation",{"_index":6791,"title":{},"name":{},"text":{"525":{}},"component":{}}],["internationalis",{"_index":6823,"title":{"528":{}},"name":{"528":{}},"text":{"526":{},"528":{}},"component":{}}],["internet",{"_index":4533,"title":{},"name":{},"text":{"241":{},"253":{},"254":{},"535":{}},"component":{}}],["interpret",{"_index":5398,"title":{},"name":{},"text":{"258":{},"270":{},"298":{},"366":{}},"component":{}}],["intersystem",{"_index":3184,"title":{"109":{},"125":{}},"name":{},"text":{"109":{}},"component":{}}],["interv",{"_index":2661,"title":{},"name":{},"text":{"62":{},"67":{},"73":{},"76":{},"78":{},"163":{},"165":{},"166":{},"167":{},"168":{},"170":{},"322":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"494":{},"511":{}},"component":{}}],["intranet",{"_index":6500,"title":{},"name":{},"text":{"465":{}},"component":{}}],["introduc",{"_index":5426,"title":{},"name":{},"text":{"264":{}},"component":{}}],["introduct",{"_index":1084,"title":{"523":{},"9-1":{},"43-1":{},"50-1":{},"430-1":{},"433-1":{},"514-1":{},"522-1":{},"524-1":{},"528-1":{},"531-1":{},"533-1":{}},"name":{},"text":{"10":{},"158":{},"207":{},"433":{}},"component":{}}],["introductori",{"_index":6084,"title":{},"name":{},"text":{"366":{}},"component":{}}],["invalid",{"_index":2852,"title":{},"name":{},"text":{"79":{},"241":{},"338":{},"354":{},"489":{}},"component":{}}],["invest",{"_index":4848,"title":{},"name":{},"text":{"247":{},"520":{}},"component":{}}],["investig",{"_index":5567,"title":{},"name":{},"text":{"275":{}},"component":{}}],["invoic",{"_index":4906,"title":{},"name":{},"text":{"247":{}},"component":{}}],["invok",{"_index":5749,"title":{},"name":{},"text":{"303":{}},"component":{}}],["involv",{"_index":2331,"title":{},"name":{},"text":{"52":{},"247":{}},"component":{}}],["io",{"_index":3616,"title":{},"name":{},"text":{"161":{},"298":{}},"component":{}}],["io.confluent.kafka.serializers.kafkaavrodeseri",{"_index":5571,"title":{},"name":{},"text":{"275":{}},"component":{}}],["io.smallry",{"_index":6983,"title":{},"name":{},"text":{"532":{}},"component":{}}],["iot",{"_index":303,"title":{},"name":{},"text":{"2":{},"20":{}},"component":{}}],["ip",{"_index":1909,"title":{},"name":{},"text":{"41":{},"50":{},"63":{},"72":{},"92":{},"130":{},"154":{},"158":{},"165":{},"256":{},"264":{},"277":{},"278":{},"280":{},"326":{},"436":{},"461":{},"462":{},"463":{},"464":{},"480":{},"485":{},"487":{},"488":{},"491":{},"514":{}},"component":{}}],["ipal",{"_index":3294,"title":{},"name":{},"text":{"130":{}},"component":{}}],["ipconfig",{"_index":6578,"title":{},"name":{},"text":{"489":{}},"component":{}}],["ipipelineengin",{"_index":6775,"title":{},"name":{},"text":{"522":{},"525":{},"544":{}},"component":{}}],["ipipelinemeta",{"_index":6802,"title":{},"name":{},"text":{"525":{}},"component":{}}],["iplugin",{"_index":6952,"title":{},"name":{},"text":{"530":{}},"component":{}}],["iplugintyp",{"_index":6945,"title":{},"name":{},"text":{"530":{}},"component":{}}],["iq",{"_index":3342,"title":{"142":{}},"name":{},"text":{},"component":{}}],["iri",{"_index":3187,"title":{"125":{}},"name":{"125":{}},"text":{"109":{}},"component":{}}],["irowmeta",{"_index":6198,"title":{},"name":{},"text":{"372":{},"525":{},"532":{},"544":{}},"component":{}}],["irrelev",{"_index":6963,"title":{},"name":{},"text":{"530":{}},"component":{}}],["is(?m",{"_index":5813,"title":{},"name":{},"text":{"316":{}},"component":{}}],["is_paused_upon_creation=fals",{"_index":2579,"title":{},"name":{},"text":{"56":{}},"component":{}}],["is_window",{"_index":6427,"title":{},"name":{},"text":{"453":{}},"component":{}}],["isblank",{"_index":4666,"title":{"247-58":{}},"name":{},"text":{},"component":{}}],["isbngroup",{"_index":4472,"title":{},"name":{},"text":{"241":{}},"component":{}}],["isbngs1",{"_index":4471,"title":{},"name":{},"text":{"241":{}},"component":{}}],["isbnregistr",{"_index":4473,"title":{},"name":{},"text":{"241":{}},"component":{}}],["isboolean",{"_index":7075,"title":{},"name":{},"text":{"536":{}},"component":{}}],["iserr",{"_index":4667,"title":{"247-59":{}},"name":{},"text":{},"component":{}}],["iserror",{"_index":4668,"title":{"247-60":{}},"name":{},"text":{},"component":{}}],["iseven",{"_index":4669,"title":{"247-61":{}},"name":{},"text":{},"component":{}}],["ishidden",{"_index":5362,"title":{},"name":{},"text":{"251":{}},"component":{}}],["isidlookup",{"_index":5928,"title":{},"name":{},"text":{"331":{}},"component":{}}],["island",{"_index":4434,"title":{},"name":{},"text":{"241":{}},"component":{}}],["isloc",{"_index":3416,"title":{},"name":{},"text":{"152":{}},"component":{}}],["islog",{"_index":4670,"title":{"247-62":{}},"name":{},"text":{},"component":{}}],["isna",{"_index":4671,"title":{"247-63":{}},"name":{},"text":{},"component":{}}],["isnontext",{"_index":4672,"title":{"247-64":{}},"name":{},"text":{},"component":{}}],["isnumb",{"_index":4673,"title":{"247-65":{}},"name":{},"text":{},"component":{}}],["isnumber(tru",{"_index":4968,"title":{},"name":{},"text":{"247":{}},"component":{}}],["isn’t",{"_index":1232,"title":{},"name":{},"text":{"11":{},"52":{},"287":{},"366":{}},"component":{}}],["iso",{"_index":4340,"title":{},"name":{},"text":{"231":{},"247":{},"279":{},"354":{},"461":{},"463":{}},"component":{}}],["iso8601",{"_index":4125,"title":{},"name":{},"text":{"205":{}},"component":{}}],["isodd",{"_index":4674,"title":{"247-66":{}},"name":{},"text":{},"component":{}}],["isol",{"_index":2276,"title":{},"name":{},"text":{"50":{},"57":{},"82":{},"344":{}},"component":{}}],["israel",{"_index":1223,"title":{},"name":{},"text":{"10":{}},"component":{}}],["isread",{"_index":5363,"title":{},"name":{},"text":{"251":{}},"component":{}}],["isref",{"_index":4675,"title":{"247-67":{}},"name":{},"text":{},"component":{}}],["issu",{"_index":409,"title":{"431-4":{}},"name":{},"text":{"4":{},"5":{},"6":{},"55":{},"83":{},"163":{},"165":{},"167":{},"205":{},"227":{},"247":{},"309":{},"344":{},"431":{},"519":{},"527":{},"528":{},"533":{},"542":{}},"component":{}}],["istext",{"_index":4676,"title":{"247-68":{}},"name":{},"text":{},"component":{}}],["iswrit",{"_index":5364,"title":{},"name":{},"text":{"251":{}},"component":{}}],["it'",{"_index":7303,"title":{},"name":{},"text":{"544":{}},"component":{}}],["it.w",{"_index":6686,"title":{},"name":{},"text":{"514":{}},"component":{}}],["item",{"_index":1,"title":{"1-2":{},"13-2":{},"24-1":{},"404-1":{},"520-1":{}},"name":{"404":{}},"text":{"1":{},"2":{},"13":{},"16":{},"24":{},"36":{},"57":{},"68":{},"78":{},"81":{},"82":{},"94":{},"103":{},"130":{},"233":{},"234":{},"256":{},"262":{},"274":{},"286":{},"310":{},"322":{},"372":{},"379":{},"441":{},"520":{}},"component":{}}],["iter",{"_index":6384,"title":{},"name":{},"text":{"433":{},"483":{}},"component":{}}],["itransform",{"_index":6999,"title":{},"name":{},"text":{"532":{},"536":{},"544":{}},"component":{}}],["itransformdata",{"_index":6998,"title":{},"name":{},"text":{"532":{}},"component":{}}],["itransformmeta",{"_index":6994,"title":{},"name":{},"text":{"532":{},"536":{}},"component":{}}],["itself",{"_index":1675,"title":{},"name":{},"text":{"31":{},"40":{},"41":{},"50":{},"55":{},"78":{},"90":{},"150":{},"152":{},"162":{},"163":{},"186":{},"187":{},"210":{},"235":{},"238":{},"287":{},"366":{},"367":{},"381":{},"384":{},"389":{},"433":{},"525":{}},"component":{}}],["it’",{"_index":622,"title":{},"name":{},"text":{"7":{},"9":{},"39":{},"41":{},"53":{},"54":{},"55":{},"76":{},"97":{},"105":{},"106":{},"130":{},"157":{},"167":{},"168":{},"182":{},"212":{},"222":{},"227":{},"228":{},"247":{},"273":{},"285":{},"299":{},"309":{},"337":{},"364":{},"384":{},"388":{},"395":{},"427":{},"433":{},"437":{},"468":{},"473":{},"482":{},"514":{},"528":{},"529":{},"531":{},"533":{},"541":{}},"component":{}}],["ivaluemeta",{"_index":6201,"title":{},"name":{},"text":{"372":{},"525":{}},"component":{}}],["ivari",{"_index":6941,"title":{},"name":{},"text":{"529":{},"532":{},"544":{}},"component":{}}],["iworkflowengin",{"_index":6776,"title":{},"name":{},"text":{"522":{},"544":{}},"component":{}}],["iworkflowmeta",{"_index":6803,"title":{},"name":{},"text":{"525":{}},"component":{}}],["j",{"_index":1350,"title":{},"name":{},"text":{"19":{},"38":{},"39":{},"41":{},"46":{},"47":{},"247":{},"320":{}},"component":{}}],["jackrabbit1",{"_index":1079,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jackrabbit2",{"_index":1080,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jan",{"_index":5329,"title":{},"name":{},"text":{"248":{},"366":{}},"component":{}}],["jandex",{"_index":6976,"title":{"532-2":{}},"name":{},"text":{"532":{}},"component":{}}],["jandex.vers",{"_index":6984,"title":{},"name":{},"text":{"532":{}},"component":{}}],["janino",{"_index":6143,"title":{},"name":{},"text":{"372":{}},"component":{}}],["januari",{"_index":4898,"title":{},"name":{},"text":{"247":{}},"component":{}}],["jar",{"_index":431,"title":{"5-13":{},"117-1":{},"117-2":{},"163-10":{},"164-4":{}},"name":{},"text":{"5":{},"8":{},"117":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"337":{},"373":{},"530":{},"532":{}},"component":{}}],["jar.jar",{"_index":3550,"title":{},"name":{},"text":{"160":{},"161":{}},"component":{}}],["jar:../lib/classes.jar!/meta",{"_index":1038,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jar:file://my/path/to/images.jar!/path/in/classpath/image.png",{"_index":1063,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jar:zip:outer.zip!/nested.jar!/some%21dir",{"_index":1042,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jar:zip:outer.zip!/nested.jar!/somedir",{"_index":1041,"title":{},"name":{},"text":{"8":{}},"component":{}}],["jar=../hop",{"_index":7169,"title":{},"name":{},"text":{"540":{}},"component":{}}],["jaro",{"_index":4169,"title":{},"name":{},"text":{"205":{},"248":{}},"component":{}}],["jarowinkl",{"_index":4172,"title":{},"name":{},"text":{"205":{}},"component":{}}],["jaruri",{"_index":3695,"title":{},"name":{},"text":{"162":{}},"component":{}}],["java",{"_index":424,"title":{"269":{},"372":{},"373":{},"5-3":{},"164-2":{},"528-5":{}},"name":{},"text":{"5":{},"6":{},"7":{},"8":{},"14":{},"19":{},"39":{},"41":{},"44":{},"47":{},"50":{},"57":{},"81":{},"86":{},"90":{},"130":{},"150":{},"151":{},"152":{},"160":{},"161":{},"162":{},"163":{},"164":{},"168":{},"186":{},"187":{},"203":{},"222":{},"241":{},"256":{},"267":{},"269":{},"270":{},"271":{},"273":{},"291":{},"294":{},"313":{},"314":{},"336":{},"337":{},"344":{},"359":{},"366":{},"372":{},"373":{},"439":{},"480":{},"486":{},"489":{},"494":{},"513":{},"514":{},"518":{},"524":{},"528":{},"529":{},"532":{},"533":{},"543":{}},"component":{}}],["java.io.tmpdir}/hop/tempfile.txt",{"_index":5390,"title":{},"name":{},"text":{"258":{}},"component":{}}],["java.lang.doubl",{"_index":6214,"title":{},"name":{},"text":{"373":{}},"component":{}}],["java.lang.long",{"_index":6213,"title":{},"name":{},"text":{"373":{}},"component":{}}],["java.lang.nullpointerexcept",{"_index":3907,"title":{},"name":{},"text":{"168":{}},"component":{}}],["java.lang.str",{"_index":6215,"title":{},"name":{},"text":{"373":{}},"component":{}}],["java.text.simpledateformat(\"yyyymmdd",{"_index":6436,"title":{},"name":{},"text":{"453":{}},"component":{}}],["java.util.d",{"_index":6212,"title":{},"name":{},"text":{"373":{},"453":{},"529":{}},"component":{}}],["java.util.list",{"_index":6915,"title":{},"name":{},"text":{"529":{}},"component":{}}],["java.util.map",{"_index":6914,"title":{},"name":{},"text":{"529":{}},"component":{}}],["java.util.regex",{"_index":5803,"title":{},"name":{},"text":{"316":{}},"component":{}}],["java.util.regex.pattern",{"_index":5804,"title":{},"name":{},"text":{"316":{}},"component":{}}],["java11",{"_index":3676,"title":{},"name":{},"text":{"162":{}},"component":{}}],["java_hom",{"_index":492,"title":{},"name":{},"text":{"5":{}},"component":{}}],["javadoc",{"_index":5511,"title":{},"name":{},"text":{"271":{},"316":{},"541":{}},"component":{}}],["javafilt",{"_index":5433,"title":{},"name":{"269":{}},"text":{},"component":{}}],["javascript",{"_index":775,"title":{"270":{},"453":{},"270-5":{},"270-6":{},"270-9":{}},"name":{"270":{}},"text":{"7":{},"81":{},"86":{},"205":{},"233":{},"270":{},"274":{},"291":{},"294":{},"337":{},"437":{},"453":{},"527":{},"541":{}},"component":{}}],["javasscript",{"_index":5444,"title":{},"name":{},"text":{"270":{}},"component":{}}],["jaxp",{"_index":6618,"title":{},"name":{},"text":{"508":{}},"component":{}}],["jayway",{"_index":5525,"title":{},"name":{},"text":{"273":{}},"component":{}}],["jdb",{"_index":3236,"title":{},"name":{},"text":{"118":{}},"component":{}}],["jdbc",{"_index":429,"title":{"271":{},"5-13":{},"130-2":{}},"name":{"425":{}},"text":{"5":{},"7":{},"11":{},"46":{},"50":{},"71":{},"94":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"206":{},"271":{},"311":{},"315":{},"364":{},"425":{},"514":{},"543":{}},"component":{}}],["jdbc.properti",{"_index":2203,"title":{},"name":{},"text":{"46":{},"388":{},"520":{}},"component":{}}],["jdbc:as400://hostname/default",{"_index":3183,"title":{},"name":{},"text":{"108":{}},"component":{}}],["jdbc:bigquery://[host]:[port];projectid=[project];oauthtype=[authvalu",{"_index":3215,"title":{},"name":{},"text":{"117":{}},"component":{}}],["jdbc:cache://hostname:1972/databas",{"_index":3186,"title":{},"name":{},"text":{"109":{}},"component":{}}],["jdbc:clickhous",{"_index":3191,"title":{},"name":{},"text":{"110":{}},"component":{}}],["jdbc:db2://hostname:port/dbnam",{"_index":3193,"title":{},"name":{},"text":{"111":{}},"component":{}}],["jdbc:derbi",{"_index":3196,"title":{},"name":{},"text":{"112":{}},"component":{}}],["jdbc:duckdb",{"_index":3206,"title":{},"name":{},"text":{"114":{}},"component":{}}],["jdbc:exa",{"_index":3209,"title":{},"name":{},"text":{"115":{}},"component":{}}],["jdbc:firebirdsql://localhost:3050/c:/database/example.fdb",{"_index":3211,"title":{},"name":{},"text":{"116":{}},"component":{}}],["jdbc:h2:[file",{"_index":3240,"title":{},"name":{},"text":{"119":{}},"component":{}}],["jdbc:hive2://,/databasenam",{"_index":3170,"title":{},"name":{},"text":{"107":{}},"component":{}}],["jdbc:hsqldb:hsql//hostnam",{"_index":3243,"title":{},"name":{},"text":{"120":{}},"component":{}}],["jdbc:ibmu2://localhost",{"_index":3349,"title":{},"name":{},"text":{"144":{}},"component":{}}],["jdbc:informix",{"_index":3247,"title":{},"name":{},"text":{"122":{}},"component":{}}],["jdbc:ingres://host:port{,port}{;host:port{,port}}/db{;attr=valu",{"_index":3250,"title":{},"name":{},"text":{"123":{},"145":{}},"component":{}}],["jdbc:interbase://hostname:3050/path/to/database.ib",{"_index":3252,"title":{},"name":{},"text":{"124":{}},"component":{}}],["jdbc:iris://hostname:port/databas",{"_index":3253,"title":{},"name":{},"text":{"125":{}},"component":{}}],["jdbc:jtds:sqlserver",{"_index":3264,"title":{},"name":{},"text":{"129":{}},"component":{}}],["jdbc:jtds:sybas",{"_index":3341,"title":{},"name":{},"text":{"141":{}},"component":{}}],["jdbc:kingbase8://host:port/databas",{"_index":3257,"title":{},"name":{},"text":{"126":{}},"component":{}}],["jdbc:mariadb://hostname:port/databasenam",{"_index":3258,"title":{},"name":{},"text":{"127":{}},"component":{}}],["jdbc:monetdb://hostname/databasenam",{"_index":3260,"title":{},"name":{},"text":{"128":{}},"component":{}}],["jdbc:mysql://hostname:3306/databasenam",{"_index":3245,"title":{},"name":{},"text":{"121":{}},"component":{}}],["jdbc:mysql://hostname:33060/databasenam",{"_index":3304,"title":{},"name":{},"text":{"131":{}},"component":{}}],["jdbc:mysql://hostname:9030/databasenam",{"_index":3201,"title":{},"name":{},"text":{"113":{}},"component":{}}],["jdbc:netezza://hostname:5490/databasenam",{"_index":3307,"title":{},"name":{},"text":{"132":{}},"component":{}}],["jdbc:oracle:thin:@(description=(address=(protocol=tcp)(host=host",{"_index":3317,"title":{},"name":{},"text":{"133":{}},"component":{}}],["jdbc:oracle:thin:@//hostname:port/servicenam",{"_index":3315,"title":{},"name":{},"text":{"133":{}},"component":{}}],["jdbc:oracle:thin:@hostname:port",{"_index":3308,"title":{},"name":{},"text":{"133":{}},"component":{}}],["jdbc:oracle:thin:@hostname:port:sid",{"_index":3314,"title":{},"name":{},"text":{"133":{}},"component":{}}],["jdbc:pivotal:greenplum://host:port;databasenam",{"_index":3237,"title":{},"name":{},"text":{"118":{}},"component":{}}],["jdbc:postgresql://host:port/databas",{"_index":3324,"title":{},"name":{},"text":{"135":{}},"component":{}}],["jdbc:rdbthin",{"_index":3322,"title":{},"name":{},"text":{"134":{}},"component":{}}],["jdbc:redshift://endpoint:port/databas",{"_index":3327,"title":{},"name":{},"text":{"136":{}},"component":{}}],["jdbc:sapdb",{"_index":3331,"title":{},"name":{},"text":{"137":{}},"component":{}}],["jdbc:snowflake://.snowflakecomputing.com",{"_index":3333,"title":{},"name":{},"text":{"138":{}},"component":{}}],["jdbc:sqlbase://hostname:port/databasenam",{"_index":3336,"title":{},"name":{},"text":{"139":{}},"component":{}}],["jdbc:sqlite:sample.db",{"_index":3339,"title":{},"name":{},"text":{"140":{}},"component":{}}],["jdbc:sqlserver://[servername[\\instancename][:portnumber]][;property=value[;property=valu",{"_index":3268,"title":{},"name":{},"text":{"130":{}},"component":{}}],["jdbc:sybase:tds:localhost:2638",{"_index":3345,"title":{},"name":{},"text":{"142":{}},"component":{}}],["jdbc:teradata://hostnam",{"_index":3346,"title":{},"name":{},"text":{"143":{}},"component":{}}],["jdbc:ucanaccess://path.mdb",{"_index":3167,"title":{},"name":{},"text":{"106":{}},"component":{}}],["jdbc:vertica://verticahost:portnumber/databasenam",{"_index":3353,"title":{},"name":{},"text":{"146":{}},"component":{}}],["jdbc_auth",{"_index":3278,"title":{},"name":{},"text":{"130":{}},"component":{}}],["jdbcmetadata",{"_index":5492,"title":{},"name":{"271":{}},"text":{"271":{}},"component":{}}],["jdk",{"_index":3532,"title":{},"name":{},"text":{"160":{}},"component":{}}],["jdk.debugreleas",{"_index":2117,"title":{},"name":{},"text":{"42":{}},"component":{}}],["jdk.tls.disabledalgorithm",{"_index":3829,"title":{},"name":{},"text":{"165":{}},"component":{}}],["jefferi",{"_index":5823,"title":{},"name":{},"text":{"318":{}},"component":{}}],["jenkin",{"_index":1128,"title":{},"name":{},"text":{"9":{},"83":{},"395":{},"527":{}},"component":{}}],["jetbrain",{"_index":7023,"title":{},"name":{},"text":{"533":{}},"component":{}}],["jetti",{"_index":900,"title":{},"name":{},"text":{"7":{},"41":{}},"component":{}}],["jk",{"_index":1941,"title":{},"name":{},"text":{"41":{}},"component":{}}],["jn",{"_index":5337,"title":{},"name":{},"text":{"248":{}},"component":{}}],["jndi",{"_index":6761,"title":{},"name":{},"text":{"519":{},"520":{}},"component":{}}],["job",{"_index":725,"title":{},"name":{},"text":{"7":{},"19":{},"36":{},"46":{},"158":{},"160":{},"162":{},"163":{},"165":{},"167":{},"168":{},"241":{},"258":{},"388":{},"414":{},"420":{},"513":{},"518":{},"519":{},"520":{}},"component":{}}],["jobentryplugintype,jobentrydialogfragmenttyp",{"_index":6811,"title":{},"name":{},"text":{"525":{}},"component":{}}],["jobid",{"_index":3558,"title":{},"name":{},"text":{"160":{}},"component":{}}],["jobmanag",{"_index":3693,"title":{},"name":{},"text":{"162":{}},"component":{}}],["jobmeta",{"_index":7007,"title":{},"name":{},"text":{"532":{}},"component":{}}],["john",{"_index":5328,"title":{},"name":{},"text":{"248":{}},"component":{}}],["join",{"_index":114,"title":{"221":{},"272":{},"284":{},"293":{},"382":{},"52-1":{},"52-2":{}},"name":{"52":{}},"text":{"1":{},"13":{},"51":{},"52":{},"71":{},"81":{},"84":{},"86":{},"151":{},"152":{},"163":{},"221":{},"222":{},"230":{},"272":{},"284":{},"293":{},"361":{},"363":{},"366":{},"382":{},"389":{},"404":{},"409":{}},"component":{}}],["joinrow",{"_index":5516,"title":{},"name":{"272":{}},"text":{},"component":{}}],["jone",{"_index":5679,"title":{},"name":{},"text":{"292":{}},"component":{}}],["journal",{"_index":2681,"title":{},"name":{},"text":{"65":{}},"component":{}}],["jre",{"_index":474,"title":{},"name":{},"text":{"5":{},"6":{},"514":{},"543":{}},"component":{}}],["jrubi",{"_index":5959,"title":{},"name":{},"text":{"337":{}},"component":{}}],["js",{"_index":4358,"title":{"541-9":{}},"name":{},"text":{"233":{}},"component":{}}],["json",{"_index":159,"title":{"233":{},"273":{},"274":{}},"name":{},"text":{"1":{},"7":{},"11":{},"22":{},"27":{},"30":{},"37":{},"38":{},"40":{},"42":{},"43":{},"47":{},"50":{},"53":{},"54":{},"56":{},"64":{},"81":{},"86":{},"88":{},"93":{},"100":{},"101":{},"117":{},"148":{},"149":{},"152":{},"153":{},"154":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"180":{},"182":{},"185":{},"186":{},"187":{},"228":{},"233":{},"260":{},"261":{},"270":{},"273":{},"274":{},"290":{},"291":{},"292":{},"319":{},"346":{},"388":{},"406":{},"433":{},"513":{},"514":{},"529":{},"544":{}},"component":{}}],["json.0",{"_index":2010,"title":{},"name":{},"text":{"41":{}},"component":{}}],["json.parse(incomingjsonfromhop",{"_index":5463,"title":{},"name":{},"text":{"270":{}},"component":{}}],["json.stringify(output_json",{"_index":5468,"title":{},"name":{},"text":{"270":{}},"component":{}}],["json=i",{"_index":1900,"title":{},"name":{},"text":{"40":{},"42":{}},"component":{}}],["jsoninput",{"_index":5518,"title":{},"name":{"273":{}},"text":{},"component":{}}],["jsonmetadataprovid",{"_index":7280,"title":{},"name":{},"text":{"544":{}},"component":{}}],["jsonoutput",{"_index":5549,"title":{},"name":{"274":{}},"text":{},"component":{}}],["jsonpath",{"_index":5519,"title":{},"name":{},"text":{"273":{}},"component":{}}],["jsr",{"_index":5943,"title":{},"name":{},"text":{"337":{}},"component":{}}],["jtd",{"_index":3263,"title":{},"name":{},"text":{"129":{}},"component":{}}],["jul",{"_index":6112,"title":{},"name":{},"text":{"366":{}},"component":{}}],["juli",{"_index":6111,"title":{},"name":{},"text":{"366":{}},"component":{}}],["jump",{"_index":1683,"title":{},"name":{},"text":{"34":{},"432":{}},"component":{}}],["jumphost",{"_index":3899,"title":{},"name":{},"text":{"168":{}},"component":{}}],["junk",{"_index":2360,"title":{},"name":{},"text":{"52":{},"216":{}},"component":{}}],["jvm",{"_index":428,"title":{"6":{},"5-11":{},"6-2":{},"6-3":{}},"name":{"6":{}},"text":{"5":{},"6":{},"7":{},"36":{},"57":{},"167":{},"168":{},"216":{},"256":{},"258":{},"298":{},"337":{},"420":{},"423":{}},"component":{}}],["jython",{"_index":5945,"title":{},"name":{},"text":{"337":{}},"component":{}}],["k",{"_index":1904,"title":{},"name":{},"text":{"41":{},"46":{},"94":{},"366":{},"538":{}},"component":{}}],["k8",{"_index":3657,"title":{},"name":{"162":{}},"text":{"162":{}},"component":{}}],["kaamelott",{"_index":4539,"title":{},"name":{},"text":{"241":{}},"component":{}}],["kafka",{"_index":2401,"title":{"196":{},"197":{},"275":{},"276":{},"427-2":{}},"name":{},"text":{"54":{},"67":{},"73":{},"81":{},"86":{},"165":{},"182":{},"196":{},"197":{},"267":{},"275":{},"276":{},"427":{}},"component":{}}],["kafkaconsum",{"_index":5551,"title":{},"name":{"275":{}},"text":{},"component":{}}],["kafkaproduc",{"_index":5572,"title":{},"name":{"276":{}},"text":{},"component":{}}],["kaufmännisch",{"_index":4113,"title":{},"name":{},"text":{"205":{}},"component":{}}],["kb/8yipqcll/0+/e+gsvcw",{"_index":3488,"title":{},"name":{},"text":{"157":{}},"component":{}}],["kbyte",{"_index":6467,"title":{},"name":{},"text":{"454":{}},"component":{}}],["keep",{"_index":294,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"11":{},"56":{},"57":{},"78":{},"82":{},"91":{},"94":{},"103":{},"160":{},"161":{},"202":{},"205":{},"221":{},"222":{},"227":{},"236":{},"264":{},"270":{},"295":{},"297":{},"346":{},"370":{},"387":{},"395":{},"422":{},"468":{},"470":{},"477":{},"478":{},"483":{},"490":{},"494":{},"514":{},"519":{},"525":{},"529":{},"530":{},"531":{},"535":{},"542":{}},"component":{}}],["kept",{"_index":435,"title":{},"name":{},"text":{"5":{},"7":{},"61":{},"76":{},"82":{},"163":{},"220":{},"250":{},"289":{},"313":{},"314":{},"352":{},"377":{},"388":{},"437":{},"481":{},"503":{},"514":{},"520":{},"544":{}},"component":{}}],["kera",{"_index":3000,"title":{},"name":{},"text":{"87":{}},"component":{}}],["kerasappl",{"_index":2999,"title":{},"name":{},"text":{"87":{}},"component":{}}],["kerbero",{"_index":2673,"title":{},"name":{},"text":{"65":{}},"component":{}}],["kernel",{"_index":223,"title":{"2-3":{}},"name":{},"text":{"2":{}},"component":{}}],["kettl",{"_index":1414,"title":{"388":{},"518":{},"519":{},"520":{},"521":{},"532":{},"388-3":{},"388-4":{}},"name":{"388":{},"518":{},"519":{},"520":{},"532":{}},"text":{"19":{},"46":{},"55":{},"247":{},"388":{},"518":{},"519":{},"520":{},"521":{},"526":{},"532":{},"542":{}},"component":{}}],["kettle.properti",{"_index":2204,"title":{},"name":{},"text":{"46":{},"388":{},"520":{}},"component":{}}],["kettle/pdi",{"_index":6279,"title":{},"name":{},"text":{"388":{},"517":{},"519":{},"520":{},"521":{}},"component":{}}],["kettle_hom",{"_index":6282,"title":{},"name":{},"text":{"388":{}},"component":{}}],["kettle_home}/.kettle/.languagechoic",{"_index":6724,"title":{},"name":{},"text":{"518":{}},"component":{}}],["kettle_home}/.kettle/environment/metastor",{"_index":6730,"title":{},"name":{},"text":{"518":{}},"component":{}}],["kettle_home}/.kettle/kettle.properti",{"_index":6722,"title":{},"name":{},"text":{"518":{}},"component":{}}],["kettle_home}/.kettle/shared.xml",{"_index":6725,"title":{},"name":{},"text":{"518":{}},"component":{}}],["key",{"_index":1187,"title":{"313":{},"37-5":{},"37-6":{},"227-5":{},"227-7":{},"233-6":{},"528-10":{},"538-13":{}},"name":{},"text":{"10":{},"15":{},"16":{},"20":{},"24":{},"27":{},"36":{},"37":{},"38":{},"39":{},"41":{},"52":{},"78":{},"93":{},"94":{},"97":{},"98":{},"100":{},"147":{},"148":{},"152":{},"154":{},"157":{},"158":{},"163":{},"167":{},"183":{},"186":{},"187":{},"191":{},"196":{},"197":{},"198":{},"199":{},"208":{},"216":{},"222":{},"225":{},"227":{},"233":{},"241":{},"248":{},"259":{},"260":{},"261":{},"268":{},"270":{},"271":{},"274":{},"275":{},"276":{},"277":{},"284":{},"285":{},"287":{},"291":{},"295":{},"297":{},"306":{},"307":{},"314":{},"315":{},"319":{},"320":{},"324":{},"326":{},"347":{},"348":{},"351":{},"353":{},"355":{},"360":{},"361":{},"363":{},"364":{},"371":{},"386":{},"433":{},"437":{},"462":{},"478":{},"487":{},"488":{},"514":{},"527":{},"528":{},"529":{},"533":{},"537":{},"538":{}},"component":{}}],["key(",{"_index":4312,"title":{},"name":{},"text":{"227":{}},"component":{}}],["key.deseri",{"_index":5568,"title":{},"name":{},"text":{"275":{}},"component":{}}],["key.json",{"_index":3143,"title":{},"name":{},"text":{"100":{},"165":{}},"component":{}}],["key/valu",{"_index":5639,"title":{},"name":{},"text":{"290":{},"313":{},"314":{}},"component":{}}],["key1",{"_index":1866,"title":{},"name":{},"text":{"38":{},"152":{},"186":{}},"component":{}}],["key2",{"_index":1867,"title":{},"name":{},"text":{"38":{},"152":{},"186":{}},"component":{}}],["key=valu",{"_index":1850,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{}}],["key_column",{"_index":4286,"title":{},"name":{},"text":{"222":{}},"component":{}}],["keyboard",{"_index":1282,"title":{"94-2":{}},"name":{},"text":{"15":{},"16":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"78":{}},"component":{}}],["keyfil",{"_index":6563,"title":{},"name":{},"text":{"487":{},"488":{},"538":{}},"component":{}}],["keygen",{"_index":5916,"title":{},"name":{},"text":{"326":{}},"component":{}}],["keyid",{"_index":7094,"title":{},"name":{},"text":{"537":{}},"component":{}}],["keynam",{"_index":5550,"title":{},"name":{},"text":{"274":{},"307":{}},"component":{}}],["keypassword",{"_index":1937,"title":{},"name":{},"text":{"41":{}},"component":{}}],["keys(",{"_index":4292,"title":{},"name":{},"text":{"225":{}},"component":{}}],["keyserv",{"_index":7093,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["keyserver.ubuntu.com",{"_index":7148,"title":{},"name":{},"text":{"538":{}},"component":{}}],["keysiz",{"_index":3834,"title":{},"name":{},"text":{"165":{}},"component":{}}],["keyskil",{"_index":4538,"title":{},"name":{},"text":{"241":{}},"component":{}}],["keyspac",{"_index":3425,"title":{},"name":{},"text":{"153":{},"353":{},"437":{}},"component":{}}],["keystor",{"_index":1023,"title":{},"name":{},"text":{"8":{},"41":{},"478":{},"514":{}},"component":{}}],["keystorefil",{"_index":1022,"title":{},"name":{},"text":{"8":{}},"component":{}}],["keystorepass",{"_index":1024,"title":{},"name":{},"text":{"8":{}},"component":{}}],["keystorepassword",{"_index":1936,"title":{},"name":{},"text":{"41":{}},"component":{}}],["keystoretyp",{"_index":1025,"title":{},"name":{},"text":{"8":{}},"component":{}}],["keytool",{"_index":1935,"title":{},"name":{},"text":{"41":{}},"component":{}}],["keyword",{"_index":1238,"title":{},"name":{},"text":{"11":{},"270":{},"530":{}},"component":{}}],["kh1ujvf0vfvaqjirfpdhr6my5rnl8btg/tj5swlkklvearf7jdly8mknvluommcime83tozzosa9",{"_index":2130,"title":{},"name":{},"text":{"42":{}},"component":{}}],["kick",{"_index":3464,"title":{},"name":{},"text":{"154":{},"514":{}},"component":{}}],["kill",{"_index":1907,"title":{},"name":{},"text":{"41":{}},"component":{}}],["kimbal",{"_index":2361,"title":{},"name":{},"text":{"52":{},"216":{},"227":{}},"component":{}}],["kimball’",{"_index":2364,"title":{},"name":{},"text":{"52":{},"227":{}},"component":{}}],["kind",{"_index":3672,"title":{},"name":{},"text":{"162":{},"196":{},"250":{},"506":{},"533":{}},"component":{}}],["kindli",{"_index":7063,"title":{},"name":{},"text":{"535":{}},"component":{}}],["kinesi",{"_index":2879,"title":{"198":{},"199":{}},"name":{},"text":{"81":{},"162":{},"198":{},"199":{}},"component":{}}],["kingbas",{"_index":3254,"title":{"126":{}},"name":{},"text":{},"component":{}}],["kingbase",{"_index":3256,"title":{},"name":{"126":{}},"text":{},"component":{}}],["kingrichardiiiquot",{"_index":4571,"title":{},"name":{},"text":{"241":{}},"component":{}}],["kiss",{"_index":6934,"title":{},"name":{},"text":{"529":{}},"component":{}}],["kitchen",{"_index":6721,"title":{},"name":{},"text":{"518":{},"519":{}},"component":{}}],["kjb",{"_index":6281,"title":{},"name":{},"text":{"388":{},"520":{}},"component":{}}],["knife",{"_index":6372,"title":{},"name":{},"text":{"433":{}},"component":{}}],["know",{"_index":338,"title":{"519":{}},"name":{"519":{}},"text":{"2":{},"5":{},"7":{},"10":{},"15":{},"16":{},"18":{},"29":{},"41":{},"43":{},"50":{},"53":{},"54":{},"56":{},"57":{},"78":{},"151":{},"152":{},"158":{},"160":{},"163":{},"165":{},"196":{},"206":{},"243":{},"247":{},"270":{},"344":{},"389":{},"400":{},"429":{},"441":{},"464":{},"467":{},"483":{},"489":{},"521":{},"528":{},"532":{},"541":{}},"component":{}}],["know.bi",{"_index":1181,"title":{},"name":{},"text":{"10":{}},"component":{}}],["knowbi",{"_index":3600,"title":{},"name":{},"text":{"161":{}},"component":{}}],["knowledg",{"_index":1453,"title":{},"name":{},"text":{"21":{},"381":{},"433":{}},"component":{}}],["known",{"_index":465,"title":{"431-4":{},"520-2":{}},"name":{},"text":{"5":{},"10":{},"30":{},"34":{},"50":{},"205":{},"234":{},"247":{},"275":{},"318":{},"345":{},"457":{},"520":{},"537":{}},"component":{}}],["krabbi",{"_index":4427,"title":{},"name":{},"text":{"241":{}},"component":{}}],["ktr",{"_index":6280,"title":{},"name":{},"text":{"388":{},"520":{}},"component":{}}],["kubectl",{"_index":3703,"title":{},"name":{},"text":{"162":{}},"component":{}}],["kubernet",{"_index":446,"title":{"162":{},"162-2":{}},"name":{},"text":{"5":{},"20":{},"162":{}},"component":{}}],["l",{"_index":1842,"title":{},"name":{},"text":{"38":{},"39":{},"41":{},"46":{},"47":{},"247":{}},"component":{}}],["label",{"_index":3366,"title":{"299-4":{}},"name":{},"text":{"151":{},"160":{},"186":{},"187":{},"220":{},"291":{},"297":{},"299":{},"389":{},"474":{},"476":{},"513":{},"528":{},"532":{}},"component":{}}],["lag",{"_index":3973,"title":{},"name":{},"text":{"179":{},"533":{}},"component":{}}],["lage",{"_index":3967,"title":{},"name":{},"text":{"179":{}},"component":{}}],["land",{"_index":4190,"title":{},"name":{},"text":{"205":{},"220":{}},"component":{}}],["land\",5",{"_index":5690,"title":{},"name":{},"text":{"292":{}},"component":{}}],["languag",{"_index":76,"title":{"337-13":{}},"name":{},"text":{"1":{},"5":{},"19":{},"27":{},"48":{},"163":{},"165":{},"207":{},"208":{},"241":{},"248":{},"291":{},"324":{},"325":{},"337":{},"359":{},"375":{},"377":{},"385":{},"418":{},"419":{},"428":{},"508":{},"513":{},"518":{},"528":{},"533":{}},"component":{}}],["languagecod",{"_index":6230,"title":{},"name":{},"text":{"375":{}},"component":{}}],["languagedesc",{"_index":6231,"title":{},"name":{},"text":{"375":{}},"component":{}}],["laptop",{"_index":3086,"title":{},"name":{},"text":{"91":{},"389":{},"514":{}},"component":{}}],["larg",{"_index":54,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"9":{},"19":{},"20":{},"24":{},"52":{},"84":{},"154":{},"158":{},"163":{},"165":{},"167":{},"216":{},"222":{},"234":{},"235":{},"243":{},"247":{},"250":{},"272":{},"273":{},"283":{},"298":{},"347":{},"367":{},"372":{},"381":{},"413":{},"418":{},"429":{},"431":{},"432":{},"433":{},"492":{},"520":{},"528":{},"531":{}},"component":{}}],["larger",{"_index":690,"title":{},"name":{},"text":{"7":{},"9":{},"57":{},"99":{},"232":{},"233":{},"234":{},"247":{},"277":{},"279":{},"305":{},"326":{},"338":{},"364":{},"367":{},"395":{},"397":{},"433":{}},"component":{}}],["largest",{"_index":305,"title":{},"name":{},"text":{"2":{},"205":{}},"component":{}}],["lasso",{"_index":7196,"title":{},"name":{},"text":{"541":{}},"component":{}}],["last",{"_index":513,"title":{"265":{}},"name":{},"text":{"5":{},"7":{},"9":{},"22":{},"23":{},"27":{},"29":{},"36":{},"52":{},"55":{},"57":{},"61":{},"68":{},"78":{},"81":{},"86":{},"93":{},"94":{},"103":{},"160":{},"161":{},"169":{},"203":{},"206":{},"216":{},"227":{},"232":{},"235":{},"247":{},"256":{},"262":{},"265":{},"270":{},"273":{},"279":{},"285":{},"292":{},"295":{},"309":{},"317":{},"331":{},"337":{},"345":{},"346":{},"366":{},"367":{},"373":{},"391":{},"421":{},"449":{},"500":{},"514":{},"543":{}},"component":{}}],["last\",\"executioninfolocationname\":\"loc",{"_index":1744,"title":{},"name":{},"text":{"37":{}},"component":{}}],["lastmodifiedtim",{"_index":5365,"title":{},"name":{},"text":{"251":{}},"component":{}}],["lastnam",{"_index":5643,"title":{},"name":{},"text":{"290":{},"316":{},"372":{}},"component":{}}],["lastnamefield",{"_index":6148,"title":{},"name":{},"text":{"372":{}},"component":{}}],["lastnamefield).getstring(r",{"_index":6166,"title":{},"name":{},"text":{"372":{}},"component":{}}],["lastnr",{"_index":7345,"title":{},"name":{},"text":{"544":{}},"component":{}}],["late",{"_index":2798,"title":{},"name":{},"text":{"77":{},"520":{},"521":{}},"component":{}}],["latenc",{"_index":3776,"title":{},"name":{},"text":{"163":{},"167":{},"429":{}},"component":{}}],["later",{"_index":190,"title":{},"name":{},"text":{"1":{},"2":{},"24":{},"50":{},"55":{},"56":{},"158":{},"163":{},"222":{},"243":{},"366":{},"381":{},"405":{},"528":{},"533":{},"542":{}},"component":{}}],["latest",{"_index":1489,"title":{},"name":{},"text":{"23":{},"25":{},"56":{},"88":{},"160":{},"161":{},"196":{},"227":{},"275":{},"276":{},"514":{},"540":{},"543":{}},"component":{}}],["latter",{"_index":2255,"title":{},"name":{},"text":{"50":{},"57":{},"248":{},"528":{}},"component":{}}],["laucher",{"_index":1839,"title":{},"name":{},"text":{"38":{}},"component":{}}],["launch",{"_index":1288,"title":{},"name":{},"text":{"15":{},"16":{},"38":{},"53":{},"54":{},"56":{},"57":{},"82":{},"85":{},"104":{},"158":{},"159":{},"165":{},"177":{},"222":{},"256":{},"309":{},"366":{},"367":{},"378":{},"383":{},"457":{},"513":{},"533":{}},"component":{}}],["law",{"_index":7039,"title":{},"name":{},"text":{"533":{}},"component":{}}],["lay",{"_index":6038,"title":{},"name":{},"text":{"361":{}},"component":{}}],["layer",{"_index":680,"title":{},"name":{},"text":{"7":{},"41":{},"50":{},"87":{}},"component":{}}],["layout",{"_index":289,"title":{},"name":{},"text":{"2":{},"24":{},"52":{},"59":{},"60":{},"64":{},"81":{},"83":{},"158":{},"163":{},"169":{},"178":{},"181":{},"226":{},"229":{},"243":{},"275":{},"287":{},"309":{},"315":{},"324":{},"325":{},"366":{},"378":{},"384":{},"452":{},"507":{},"522":{}},"component":{}}],["lazi",{"_index":170,"title":{},"name":{"405":{}},"text":{"1":{},"220":{},"289":{},"363":{},"405":{}},"component":{}}],["lazili",{"_index":1653,"title":{},"name":{},"text":{"29":{}},"component":{}}],["ldap",{"_index":2891,"title":{"277":{},"278":{}},"name":{},"text":{"81":{},"86":{},"277":{},"278":{}},"component":{}}],["ldapinput",{"_index":5574,"title":{},"name":{"277":{}},"text":{},"component":{}}],["ldapoutput",{"_index":5579,"title":{},"name":{"278":{}},"text":{},"component":{}}],["ldif",{"_index":2984,"title":{},"name":{},"text":{"87":{}},"component":{}}],["ldvli",{"_index":5277,"title":{},"name":{},"text":{"247":{}},"component":{}}],["ldvliv",{"_index":5276,"title":{},"name":{},"text":{"247":{}},"component":{}}],["lead",{"_index":2346,"title":{},"name":{},"text":{"52":{},"154":{},"162":{},"167":{},"179":{},"205":{},"222":{},"235":{},"247":{},"358":{},"382":{}},"component":{}}],["leaf",{"_index":5523,"title":{},"name":{},"text":{"273":{}},"component":{}}],["leagueoflegend",{"_index":4540,"title":{},"name":{},"text":{"241":{}},"component":{}}],["lean",{"_index":1182,"title":{},"name":{},"text":{"10":{}},"component":{}}],["leap",{"_index":4754,"title":{},"name":{},"text":{"247":{}},"component":{}}],["learn",{"_index":1605,"title":{},"name":{},"text":{"26":{},"53":{},"54":{},"57":{},"79":{},"80":{},"84":{},"85":{},"87":{},"96":{},"158":{},"165":{},"427":{}},"component":{}}],["leas",{"_index":7051,"title":{},"name":{},"text":{"533":{}},"component":{}}],["leav",{"_index":804,"title":{},"name":{},"text":{"7":{},"85":{},"133":{},"153":{},"154":{},"160":{},"165":{},"206":{},"207":{},"208":{},"220":{},"222":{},"234":{},"235":{},"253":{},"254":{},"259":{},"279":{},"287":{},"309":{},"317":{},"330":{},"331":{},"332":{},"333":{},"334":{},"338":{},"354":{},"359":{},"366":{},"367":{},"378":{},"481":{},"482":{},"533":{}},"component":{}}],["lebowski",{"_index":4542,"title":{},"name":{},"text":{"241":{}},"component":{}}],["left",{"_index":393,"title":{"29-5":{},"247-154":{}},"name":{},"text":{"4":{},"23":{},"24":{},"27":{},"29":{},"31":{},"35":{},"36":{},"41":{},"80":{},"158":{},"205":{},"231":{},"234":{},"247":{},"258":{},"270":{},"275":{},"277":{},"279":{},"284":{},"324":{},"325":{},"350":{},"358":{},"366":{},"374":{},"400":{},"433":{},"489":{},"501":{},"528":{}},"component":{}}],["left(\"\";4",{"_index":5210,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"hello",{"_index":5206,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"hello\";0",{"_index":5209,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"hello\";2",{"_index":5204,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"hello\";2.9",{"_index":5205,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"hello\";20",{"_index":5207,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"hello\";2^15",{"_index":5213,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(\"xxx",{"_index":5211,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left(t;length",{"_index":5245,"title":{},"name":{},"text":{"247":{}},"component":{}}],["left/inner/right",{"_index":6041,"title":{},"name":{},"text":{"361":{}},"component":{}}],["leftmost",{"_index":5248,"title":{},"name":{},"text":{"247":{}},"component":{}}],["legaci",{"_index":3472,"title":{},"name":{},"text":{"154":{},"298":{}},"component":{}}],["legal",{"_index":5655,"title":{},"name":{},"text":{"291":{}},"component":{}}],["len",{"_index":4721,"title":{"247-155":{}},"name":{},"text":{"247":{}},"component":{}}],["len(\"hi",{"_index":5220,"title":{},"name":{},"text":{"247":{}},"component":{}}],["len(55",{"_index":5221,"title":{},"name":{},"text":{"247":{}},"component":{}}],["len(t",{"_index":5214,"title":{},"name":{},"text":{"247":{}},"component":{}}],["len=0",{"_index":5249,"title":{},"name":{},"text":{"247":{}},"component":{}}],["lenght",{"_index":6021,"title":{},"name":{},"text":{"358":{}},"component":{}}],["length",{"_index":2641,"title":{"205-4":{}},"name":{},"text":{"59":{},"60":{},"61":{},"76":{},"178":{},"181":{},"195":{},"200":{},"205":{},"207":{},"217":{},"220":{},"227":{},"234":{},"243":{},"247":{},"250":{},"253":{},"254":{},"258":{},"267":{},"270":{},"273":{},"277":{},"279":{},"287":{},"288":{},"308":{},"313":{},"316":{},"331":{},"338":{},"349":{},"351":{},"357":{},"358":{},"366":{},"367":{},"372":{},"373":{},"374":{},"381":{},"383":{},"386":{},"400":{},"438":{}},"component":{}}],["length=0",{"_index":5240,"title":{},"name":{},"text":{"247":{}},"component":{}}],["length=int(length",{"_index":5203,"title":{},"name":{},"text":{"247":{}},"component":{}}],["lenienc",{"_index":5964,"title":{},"name":{},"text":{"338":{}},"component":{}}],["lenient",{"_index":833,"title":{},"name":{},"text":{"7":{},"338":{},"366":{}},"component":{}}],["less",{"_index":459,"title":{},"name":{},"text":{"5":{},"97":{},"104":{},"247":{},"291":{},"347":{},"355":{},"448":{},"462":{},"506":{}},"component":{}}],["lesser",{"_index":6405,"title":{},"name":{},"text":{"442":{},"450":{},"468":{},"477":{},"478":{}},"component":{}}],["let",{"_index":511,"title":{},"name":{},"text":{"5":{},"7":{},"20":{},"22":{},"52":{},"55":{},"81":{},"93":{},"214":{},"260":{},"261":{},"275":{},"297":{},"309":{},"378":{},"464":{}},"component":{}}],["let'",{"_index":6151,"title":{},"name":{},"text":{"372":{}},"component":{}}],["letter",{"_index":4151,"title":{},"name":{},"text":{"205":{},"235":{},"247":{},"248":{},"273":{},"366":{},"465":{}},"component":{}}],["let’",{"_index":1248,"title":{},"name":{},"text":{"13":{},"14":{},"15":{},"16":{},"17":{},"41":{},"55":{},"56":{},"80":{},"90":{},"151":{},"158":{},"273":{},"389":{},"514":{},"525":{},"542":{}},"component":{}}],["level",{"_index":254,"title":{"75-1":{},"75-3":{}},"name":{},"text":{"2":{},"7":{},"15":{},"18":{},"24":{},"27":{},"31":{},"37":{},"38":{},"41":{},"56":{},"65":{},"75":{},"76":{},"78":{},"81":{},"85":{},"90":{},"91":{},"92":{},"93":{},"94":{},"103":{},"104":{},"165":{},"172":{},"208":{},"213":{},"228":{},"246":{},"247":{},"270":{},"277":{},"280":{},"341":{},"380":{},"381":{},"389":{},"441":{},"457":{},"466":{},"481":{},"485":{},"489":{},"503":{},"505":{},"509":{},"514":{},"519":{},"529":{},"543":{},"544":{}},"component":{}}],["levenshtein",{"_index":4131,"title":{},"name":{},"text":{"205":{},"248":{}},"component":{}}],["lf",{"_index":1845,"title":{},"name":{},"text":{"38":{},"205":{},"238":{},"358":{},"367":{},"450":{}},"component":{}}],["lgpl",{"_index":6740,"title":{},"name":{},"text":{"518":{},"532":{}},"component":{}}],["lib",{"_index":603,"title":{},"name":{},"text":{"5":{},"311":{}},"component":{}}],["lib/cor",{"_index":606,"title":{},"name":{},"text":{"5":{}},"component":{}}],["lib/jdbc",{"_index":595,"title":{},"name":{},"text":{"5":{},"7":{},"11":{},"50":{},"94":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"425":{},"514":{}},"component":{}}],["lib\\core\\*;lib\\beam\\*;lib\\swt\\win64",{"_index":1324,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"44":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["libformula",{"_index":5142,"title":{},"name":{},"text":{"247":{}},"component":{}}],["libphonenumb",{"_index":6008,"title":{},"name":{},"text":{"354":{}},"component":{}}],["librari",{"_index":353,"title":{"5-13":{},"117-1":{}},"name":{},"text":{"2":{},"5":{},"158":{},"161":{},"180":{},"235":{},"241":{},"273":{},"336":{},"354":{},"372":{},"373":{},"436":{},"518":{},"530":{}},"component":{}}],["licens",{"_index":601,"title":{},"name":{"546":{}},"text":{"5":{},"11":{},"518":{},"527":{},"528":{},"531":{},"532":{},"533":{},"534":{},"535":{},"537":{},"546":{}},"component":{}}],["life",{"_index":43,"title":{"2-7":{}},"name":{},"text":{"1":{},"2":{},"5":{},"19":{},"54":{},"56":{},"206":{},"413":{},"418":{}},"component":{}}],["lifecycl",{"_index":748,"title":{},"name":{},"text":{"7":{},"9":{},"38":{},"40":{},"41":{},"47":{},"90":{},"91":{},"150":{},"152":{},"389":{},"390":{},"395":{},"518":{},"527":{}},"component":{}}],["lifecycleenviron",{"_index":3040,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["lifecycleplugintyp",{"_index":6813,"title":{},"name":{},"text":{"525":{}},"component":{}}],["lifecyfl",{"_index":1923,"title":{},"name":{},"text":{"41":{}},"component":{}}],["lifetim",{"_index":3431,"title":{"154-8":{}},"name":{},"text":{"154":{},"165":{}},"component":{}}],["lift",{"_index":2639,"title":{},"name":{},"text":{"57":{},"78":{},"84":{},"105":{}},"component":{}}],["light",{"_index":6901,"title":{},"name":{},"text":{"528":{},"541":{},"543":{}},"component":{}}],["light.j",{"_index":7199,"title":{},"name":{},"text":{"541":{}},"component":{}}],["lightest",{"_index":6903,"title":{},"name":{},"text":{"528":{}},"component":{}}],["lightn",{"_index":2382,"title":{},"name":{},"text":{"52":{}},"component":{}}],["lightweight",{"_index":298,"title":{},"name":{},"text":{"2":{},"5":{},"41":{},"63":{}},"component":{}}],["lik",{"_index":3906,"title":{},"name":{},"text":{"168":{}},"component":{}}],["likelihood",{"_index":3451,"title":{},"name":{},"text":{"154":{}},"component":{}}],["likewis",{"_index":2726,"title":{},"name":{},"text":{"75":{}},"component":{}}],["limit",{"_index":447,"title":{"163-12":{},"194-4":{},"196-3":{},"197-3":{},"198-3":{},"199-3":{},"223-5":{},"259-8":{},"297-3":{},"520-2":{}},"name":{},"text":{"5":{},"7":{},"9":{},"29":{},"37":{},"52":{},"103":{},"154":{},"161":{},"163":{},"167":{},"178":{},"184":{},"196":{},"197":{},"198":{},"199":{},"205":{},"216":{},"220":{},"221":{},"234":{},"235":{},"236":{},"243":{},"247":{},"250":{},"251":{},"255":{},"259":{},"272":{},"273":{},"275":{},"277":{},"279":{},"286":{},"291":{},"297":{},"309":{},"313":{},"322":{},"331":{},"339":{},"346":{},"352":{},"363":{},"364":{},"365":{},"366":{},"380":{},"381":{},"386":{},"396":{},"397":{},"442":{},"448":{},"449":{},"459":{},"461":{},"462":{},"468":{},"471":{},"501":{},"520":{},"533":{},"542":{}},"component":{}}],["line",{"_index":11,"title":{"152":{},"41-3":{},"41-10":{},"41-11":{},"41-12":{},"90-7":{},"90-8":{},"150-1":{},"152-8":{},"389-6":{},"389-12":{},"544-19":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"19":{},"27":{},"34":{},"38":{},"39":{},"40":{},"41":{},"42":{},"44":{},"46":{},"47":{},"50":{},"52":{},"55":{},"56":{},"57":{},"68":{},"76":{},"90":{},"94":{},"97":{},"98":{},"152":{},"153":{},"154":{},"167":{},"169":{},"206":{},"217":{},"220":{},"228":{},"234":{},"235":{},"237":{},"244":{},"256":{},"258":{},"260":{},"261":{},"262":{},"270":{},"273":{},"280":{},"297":{},"298":{},"310":{},"314":{},"316":{},"335":{},"344":{},"346":{},"352":{},"354":{},"363":{},"365":{},"366":{},"367":{},"368":{},"379":{},"381":{},"383":{},"386":{},"396":{},"411":{},"412":{},"414":{},"415":{},"416":{},"418":{},"435":{},"437":{},"450":{},"466":{},"468":{},"470":{},"471":{},"472":{},"473":{},"475":{},"480":{},"489":{},"490":{},"506":{},"514":{},"518":{},"519":{},"533":{},"543":{},"544":{}},"component":{}}],["line(",{"_index":6247,"title":{},"name":{},"text":{"380":{},"505":{}},"component":{}}],["lineag",{"_index":2697,"title":{"432-2":{}},"name":{},"text":{"68":{},"432":{},"453":{},"525":{},"544":{}},"component":{}}],["linear",{"_index":3008,"title":{},"name":{},"text":{"87":{},"429":{}},"component":{}}],["linefe",{"_index":4156,"title":{},"name":{},"text":{"205":{},"367":{}},"component":{}}],["linenr",{"_index":2429,"title":{},"name":{},"text":{"55":{},"380":{}},"component":{}}],["lines_delet",{"_index":6451,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lines_input",{"_index":6419,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lines_output",{"_index":6421,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lines_read",{"_index":6423,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lines_reject",{"_index":6453,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lines_upd",{"_index":6422,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lines_written",{"_index":6424,"title":{},"name":{},"text":{"453":{}},"component":{}}],["lingo",{"_index":1251,"title":{},"name":{},"text":{"13":{}},"component":{}}],["link",{"_index":91,"title":{"170-3":{},"511-3":{}},"name":{},"text":{"1":{},"5":{},"10":{},"13":{},"21":{},"50":{},"56":{},"78":{},"103":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"167":{},"170":{},"235":{},"263":{},"271":{},"311":{},"315":{},"328":{},"331":{},"332":{},"333":{},"334":{},"400":{},"403":{},"404":{},"433":{},"511":{},"527":{},"537":{}},"component":{}}],["linux",{"_index":270,"title":{"5-7":{},"533-9":{},"537-1":{}},"name":{},"text":{"2":{},"5":{},"6":{},"17":{},"19":{},"38":{},"41":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"90":{},"150":{},"151":{},"152":{},"158":{},"514":{},"533":{},"543":{}},"component":{}}],["linux/amd64,linux/arm64",{"_index":7160,"title":{},"name":{},"text":{"540":{}},"component":{}}],["linux/mac",{"_index":7276,"title":{},"name":{},"text":{"543":{}},"component":{}}],["linux/unix",{"_index":6412,"title":{},"name":{},"text":{"450":{},"485":{}},"component":{}}],["liquibas",{"_index":2405,"title":{},"name":{},"text":{"54":{}},"component":{}}],["list",{"_index":61,"title":{"37-5":{},"37-6":{},"37-11":{},"37-12":{},"538-11":{},"538-12":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"15":{},"16":{},"18":{},"19":{},"22":{},"23":{},"24":{},"25":{},"26":{},"29":{},"30":{},"36":{},"37":{},"38":{},"40":{},"41":{},"43":{},"46":{},"50":{},"52":{},"55":{},"56":{},"58":{},"59":{},"60":{},"64":{},"66":{},"68":{},"69":{},"70":{},"71":{},"78":{},"83":{},"91":{},"93":{},"94":{},"97":{},"103":{},"117":{},"152":{},"154":{},"157":{},"160":{},"161":{},"162":{},"165":{},"166":{},"167":{},"168":{},"171":{},"176":{},"188":{},"191":{},"195":{},"196":{},"197":{},"199":{},"200":{},"206":{},"208":{},"209":{},"210":{},"214":{},"217":{},"220":{},"221":{},"222":{},"223":{},"227":{},"234":{},"238":{},"242":{},"243":{},"245":{},"246":{},"247":{},"248":{},"250":{},"251":{},"256":{},"258":{},"259":{},"260":{},"268":{},"270":{},"271":{},"273":{},"274":{},"275":{},"276":{},"280":{},"287":{},"290":{},"291":{},"292":{},"294":{},"299":{},"303":{},"311":{},"312":{},"313":{},"314":{},"319":{},"323":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"337":{},"338":{},"341":{},"346":{},"347":{},"348":{},"351":{},"352":{},"355":{},"358":{},"360":{},"361":{},"366":{},"367":{},"368":{},"371":{},"372":{},"374":{},"381":{},"383":{},"386":{},"415":{},"418":{},"420":{},"422":{},"424":{},"425":{},"433":{},"435":{},"436":{},"438":{},"439":{},"440":{},"441":{},"442":{},"447":{},"448":{},"449":{},"450":{},"453":{},"454":{},"455":{},"465":{},"466":{},"467":{},"468":{},"473":{},"474":{},"476":{},"477":{},"478":{},"486":{},"487":{},"488":{},"490":{},"498":{},"499":{},"501":{},"506":{},"508":{},"512":{},"514":{},"520":{},"529":{},"530":{},"532":{},"536":{},"537":{},"538":{},"544":{}},"component":{}}],["listen",{"_index":1404,"title":{"186":{}},"name":{"186":{}},"text":{"19":{},"41":{},"76":{},"81":{},"86":{},"88":{},"130":{},"186":{},"428":{},"465":{},"514":{},"544":{}},"component":{}}],["liter",{"_index":4417,"title":{},"name":{},"text":{"238":{},"271":{}},"component":{}}],["littl",{"_index":641,"title":{},"name":{},"text":{"7":{},"85":{},"103":{},"158":{},"169":{},"170":{},"309":{},"310":{},"372":{},"379":{},"511":{},"514":{}},"component":{}}],["live",{"_index":885,"title":{},"name":{},"text":{"7":{},"41":{},"56":{},"90":{},"154":{},"208":{},"326":{},"389":{},"514":{},"529":{}},"component":{}}],["liveli",{"_index":3430,"title":{"154-7":{}},"name":{},"text":{"154":{}},"component":{}}],["ljwkyk7zo7tojalk3xw8/qvlc+scfraaaa",{"_index":2147,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ln",{"_index":4696,"title":{"247-109":{}},"name":{},"text":{"247":{}},"component":{}}],["ln(10",{"_index":4979,"title":{},"name":{},"text":{"247":{}},"component":{}}],["lo",{"_index":5264,"title":{},"name":{},"text":{"247":{}},"component":{}}],["load",{"_index":171,"title":{"279":{},"433-5":{},"433-10":{},"544-6":{},"544-7":{},"544-13":{},"544-14":{}},"name":{"405":{}},"text":{"1":{},"7":{},"9":{},"10":{},"20":{},"29":{},"32":{},"41":{},"42":{},"50":{},"52":{},"53":{},"54":{},"56":{},"57":{},"81":{},"83":{},"84":{},"86":{},"154":{},"160":{},"161":{},"162":{},"167":{},"168":{},"169":{},"205":{},"222":{},"227":{},"228":{},"234":{},"250":{},"279":{},"280":{},"289":{},"295":{},"303":{},"304":{},"311":{},"313":{},"315":{},"341":{},"346":{},"355":{},"365":{},"366":{},"376":{},"377":{},"381":{},"394":{},"405":{},"433":{},"436":{},"457":{},"466":{},"470":{},"471":{},"472":{},"481":{},"492":{},"493":{},"503":{},"530":{},"534":{},"544":{}},"component":{}}],["load.hpl",{"_index":6369,"title":{},"name":{},"text":{"433":{}},"component":{}}],["loader",{"_index":2712,"title":{"228":{},"289":{},"303":{},"311":{},"315":{},"346":{},"365":{},"376":{},"470":{},"472":{},"346-4":{}},"name":{},"text":{"71":{},"81":{},"86":{},"160":{},"162":{},"228":{},"289":{},"311":{},"315":{},"346":{},"367":{},"376":{},"470":{},"472":{},"530":{},"534":{}},"component":{}}],["loadfileinput",{"_index":5588,"title":{},"name":{"279":{}},"text":{},"component":{}}],["loadrep",{"_index":7005,"title":{},"name":{},"text":{"532":{}},"component":{}}],["loan",{"_index":4935,"title":{},"name":{},"text":{"247":{}},"component":{}}],["local",{"_index":320,"title":{"169":{},"510":{},"7-8":{},"160-2":{},"161-3":{},"169-1":{},"241-5":{},"510-1":{},"527-3":{},"528-12":{}},"name":{"169":{},"510":{}},"text":{"2":{},"5":{},"7":{},"8":{},"15":{},"16":{},"17":{},"19":{},"20":{},"22":{},"25":{},"27":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"48":{},"50":{},"55":{},"56":{},"62":{},"69":{},"74":{},"83":{},"85":{},"104":{},"130":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"220":{},"235":{},"241":{},"247":{},"255":{},"279":{},"305":{},"338":{},"345":{},"346":{},"366":{},"386":{},"441":{},"463":{},"465":{},"472":{},"481":{},"483":{},"488":{},"494":{},"503":{},"510":{},"511":{},"512":{},"527":{},"528":{},"533":{},"541":{},"544":{}},"component":{}}],["local.json",{"_index":3089,"title":{},"name":{},"text":{"92":{}},"component":{}}],["local:///hop",{"_index":3696,"title":{},"name":{},"text":{"162":{}},"component":{}}],["local[4",{"_index":3890,"title":{},"name":{},"text":{"168":{}},"component":{}}],["local[x",{"_index":3886,"title":{},"name":{},"text":{"168":{}},"component":{}}],["local_path_to_env_fold",{"_index":2534,"title":{},"name":{},"text":{"56":{}},"component":{}}],["local_path_to_project_fold",{"_index":2533,"title":{},"name":{},"text":{"56":{}},"component":{}}],["local_task_job_runner.py:232",{"_index":2607,"title":{},"name":{},"text":{"56":{}},"component":{}}],["localedefault",{"_index":6867,"title":{},"name":{},"text":{"528":{}},"component":{}}],["locale’",{"_index":4909,"title":{},"name":{},"text":{"247":{}},"component":{}}],["localhost",{"_index":1396,"title":{},"name":{},"text":{"19":{},"41":{},"43":{},"65":{},"77":{},"90":{},"91":{},"150":{},"152":{},"168":{},"389":{},"514":{}},"component":{}}],["localhost:8081",{"_index":1407,"title":{},"name":{},"text":{"19":{},"41":{},"162":{}},"component":{}}],["localpipeline.gettransform(\"transform",{"_index":7311,"title":{},"name":{},"text":{"544":{}},"component":{}}],["localpipelineengin",{"_index":7306,"title":{},"name":{},"text":{"544":{}},"component":{}}],["locat",{"_index":168,"title":{"62":{},"156":{},"37-15":{},"62-3":{},"62-4":{},"62-5":{},"62-6":{}},"name":{"62":{},"156":{}},"text":{"1":{},"5":{},"7":{},"9":{},"11":{},"19":{},"23":{},"25":{},"27":{},"29":{},"31":{},"32":{},"34":{},"37":{},"39":{},"40":{},"47":{},"50":{},"52":{},"56":{},"62":{},"69":{},"74":{},"78":{},"83":{},"88":{},"93":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"151":{},"152":{},"156":{},"159":{},"160":{},"161":{},"164":{},"165":{},"166":{},"167":{},"168":{},"171":{},"195":{},"200":{},"234":{},"236":{},"241":{},"250":{},"251":{},"273":{},"280":{},"289":{},"304":{},"306":{},"307":{},"311":{},"313":{},"319":{},"346":{},"363":{},"366":{},"367":{},"373":{},"381":{},"383":{},"389":{},"398":{},"422":{},"442":{},"444":{},"457":{},"465":{},"468":{},"470":{},"477":{},"478":{},"479":{},"481":{},"489":{},"499":{},"500":{},"503":{},"504":{},"512":{},"513":{},"514":{},"527":{},"528":{},"530":{},"531":{},"534":{},"538":{},"541":{},"544":{}},"component":{}}],["location\",\"web",{"_index":1725,"title":{},"name":{},"text":{"37":{}},"component":{}}],["location.length",{"_index":6221,"title":{},"name":{},"text":{"373":{}},"component":{}}],["location.length()>2",{"_index":6222,"title":{},"name":{},"text":{"373":{}},"component":{}}],["location.substring(0",{"_index":6223,"title":{},"name":{},"text":{"373":{}},"component":{}}],["location.substring(location.length",{"_index":6220,"title":{},"name":{},"text":{"373":{}},"component":{}}],["location/executions/{locationnam",{"_index":1772,"title":{},"name":{},"text":{"37":{}},"component":{}}],["location/executions/{locationname}/{executionid",{"_index":1785,"title":{},"name":{},"text":{"37":{}},"component":{}}],["location/state/{locationname}/{executionid",{"_index":1791,"title":{},"name":{},"text":{"37":{}},"component":{}}],["locationnam",{"_index":1773,"title":{},"name":{},"text":{"37":{}},"component":{}}],["lock",{"_index":2357,"title":{"210":{},"439":{}},"name":{},"text":{"52":{},"81":{},"86":{},"103":{},"210":{},"275":{},"439":{}},"component":{}}],["log",{"_index":57,"title":{"53":{},"54":{},"67":{},"73":{},"75":{},"296":{},"310":{},"379":{},"380":{},"505":{},"522":{},"524":{},"9-8":{},"41-6":{},"53-1":{},"53-2":{},"53-4":{},"54-1":{},"54-2":{},"54-4":{},"75-4":{},"75-5":{},"75-6":{},"75-8":{},"75-10":{},"75-11":{},"75-15":{},"76-1":{},"76-4":{},"162-6":{},"247-110":{},"372-7":{},"380-4":{},"481-5":{},"503-5":{},"522-4":{},"522-5":{},"544-17":{},"544-18":{},"544-19":{}},"name":{"53":{},"54":{},"67":{},"73":{},"75":{},"76":{},"310":{},"379":{},"391":{},"522":{},"523":{},"524":{}},"text":{"1":{},"2":{},"7":{},"9":{},"10":{},"15":{},"18":{},"19":{},"22":{},"24":{},"25":{},"29":{},"30":{},"32":{},"37":{},"38":{},"40":{},"41":{},"46":{},"50":{},"53":{},"54":{},"55":{},"56":{},"57":{},"62":{},"64":{},"67":{},"68":{},"73":{},"75":{},"76":{},"78":{},"81":{},"83":{},"85":{},"86":{},"90":{},"92":{},"94":{},"103":{},"104":{},"150":{},"152":{},"154":{},"158":{},"161":{},"162":{},"165":{},"169":{},"172":{},"196":{},"211":{},"244":{},"256":{},"275":{},"289":{},"296":{},"298":{},"303":{},"308":{},"310":{},"316":{},"326":{},"337":{},"361":{},"364":{},"365":{},"372":{},"376":{},"379":{},"380":{},"389":{},"391":{},"413":{},"418":{},"426":{},"432":{},"434":{},"453":{},"464":{},"465":{},"466":{},"481":{},"483":{},"484":{},"485":{},"487":{},"488":{},"489":{},"502":{},"503":{},"505":{},"514":{},"522":{},"524":{},"525":{},"527":{},"541":{},"543":{},"544":{}},"component":{}}],["log\",\"async",{"_index":1723,"title":{},"name":{},"text":{"37":{}},"component":{}}],["log\",\"server\",\"partition\",\"execut",{"_index":1733,"title":{},"name":{},"text":{"37":{}},"component":{}}],["log(10",{"_index":4982,"title":{},"name":{},"text":{"247":{}},"component":{}}],["log(8",{"_index":4984,"title":{},"name":{},"text":{"247":{}},"component":{}}],["log(86",{"_index":4985,"title":{},"name":{},"text":{"247":{}},"component":{}}],["log(numb",{"_index":4981,"title":{},"name":{},"text":{"247":{}},"component":{}}],["log.0",{"_index":2624,"title":{},"name":{},"text":{"56":{},"380":{}},"component":{}}],["log.isbas",{"_index":6195,"title":{},"name":{},"text":{"372":{}},"component":{}}],["log.logerror(\"expect",{"_index":6852,"title":{},"name":{},"text":{"527":{}},"component":{}}],["log.logerror(\"valu",{"_index":6857,"title":{},"name":{},"text":{"527":{}},"component":{}}],["log10",{"_index":4697,"title":{"247-111":{}},"name":{},"text":{"247":{}},"component":{}}],["log10(10",{"_index":4990,"title":{},"name":{},"text":{"247":{}},"component":{}}],["log4j",{"_index":6779,"title":{},"name":{},"text":{"523":{}},"component":{}}],["logarithm",{"_index":4978,"title":{},"name":{},"text":{"247":{}},"component":{}}],["logbas",{"_index":6196,"title":{},"name":{},"text":{"372":{},"544":{}},"component":{}}],["logbasic(\"test",{"_index":6782,"title":{},"name":{},"text":{"524":{}},"component":{}}],["logchannelid",{"_index":7348,"title":{},"name":{},"text":{"544":{}},"component":{}}],["logfil",{"_index":1846,"title":{},"name":{},"text":{"38":{},"289":{},"466":{},"481":{},"489":{},"503":{}},"component":{}}],["loggign",{"_index":2972,"title":{},"name":{},"text":{"85":{}},"component":{}}],["logging.hpl",{"_index":2390,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["loggingbuff",{"_index":7341,"title":{},"name":{},"text":{"544":{}},"component":{}}],["loggingd",{"_index":2735,"title":{},"name":{},"text":{"76":{},"310":{},"379":{}},"component":{}}],["loggingphas",{"_index":2731,"title":{},"name":{},"text":{"76":{},"310":{},"379":{}},"component":{}}],["loggingplugintyp",{"_index":6796,"title":{},"name":{},"text":{"525":{}},"component":{}}],["loggingregistri",{"_index":7338,"title":{},"name":{},"text":{"544":{}},"component":{}}],["loggingregistry.getinst",{"_index":6777,"title":{},"name":{},"text":{"522":{},"524":{},"544":{}},"component":{}}],["loggingtext",{"_index":7350,"title":{},"name":{},"text":{"544":{}},"component":{}}],["logic",{"_index":1147,"title":{"82-2":{},"247-71":{}},"name":{},"text":{"9":{},"13":{},"82":{},"102":{},"186":{},"227":{},"247":{},"270":{},"345":{},"367":{},"372":{},"381":{},"393":{},"514":{},"527":{},"534":{}},"component":{}}],["login",{"_index":4333,"title":{},"name":{},"text":{"228":{},"263":{},"264":{},"319":{}},"component":{}}],["logist",{"_index":3009,"title":{},"name":{},"text":{"87":{}},"component":{}}],["loglevel",{"_index":1711,"title":{},"name":{},"text":{"37":{},"85":{},"104":{},"489":{},"503":{}},"component":{}}],["logo",{"_index":3422,"title":{"516":{}},"name":{"516":{}},"text":{"153":{},"154":{},"517":{},"542":{}},"component":{}}],["logtableplugintyp",{"_index":6812,"title":{},"name":{},"text":{"525":{}},"component":{}}],["long",{"_index":179,"title":{},"name":{},"text":{"1":{},"40":{},"41":{},"50":{},"58":{},"76":{},"78":{},"83":{},"98":{},"103":{},"163":{},"227":{},"248":{},"249":{},"298":{},"304":{},"309":{},"337":{},"358":{},"361":{},"372":{},"378":{},"400":{},"405":{},"453":{},"493":{},"514":{},"528":{},"529":{},"533":{}},"component":{}}],["long(1",{"_index":6225,"title":{},"name":{},"text":{"373":{}},"component":{}}],["long(2",{"_index":6226,"title":{},"name":{},"text":{"373":{}},"component":{}}],["long.max_valu",{"_index":3860,"title":{},"name":{},"text":{"167":{}},"component":{}}],["long/seri",{"_index":3120,"title":{},"name":{},"text":{"97":{}},"component":{}}],["longer",{"_index":3114,"title":{},"name":{},"text":{"97":{},"154":{},"186":{},"217":{},"247":{},"367":{},"532":{},"534":{},"536":{}},"component":{}}],["longley",{"_index":1186,"title":{},"name":{},"text":{"10":{}},"component":{}}],["look",{"_index":241,"title":{"27-5":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"14":{},"18":{},"24":{},"27":{},"29":{},"30":{},"37":{},"39":{},"41":{},"43":{},"47":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"78":{},"83":{},"88":{},"90":{},"92":{},"94":{},"104":{},"150":{},"152":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"216":{},"220":{},"221":{},"222":{},"225":{},"227":{},"233":{},"236":{},"247":{},"248":{},"251":{},"268":{},"278":{},"297":{},"320":{},"355":{},"362":{},"366":{},"371":{},"372":{},"384":{},"389":{},"395":{},"396":{},"424":{},"433":{},"453":{},"459":{},"507":{},"527":{},"528":{},"529":{},"530":{},"533":{},"535":{},"541":{},"542":{},"543":{}},"component":{}}],["lookout",{"_index":6951,"title":{},"name":{},"text":{"530":{}},"component":{}}],["lookup",{"_index":113,"title":{"222":{},"355":{},"377":{},"52-1":{},"52-3":{},"52-4":{},"227-11":{}},"name":{"52":{}},"text":{"1":{},"7":{},"8":{},"13":{},"51":{},"52":{},"66":{},"71":{},"81":{},"84":{},"86":{},"151":{},"152":{},"163":{},"216":{},"221":{},"222":{},"227":{},"230":{},"248":{},"268":{},"299":{},"355":{},"360":{},"371":{},"377":{},"389":{},"404":{},"409":{}},"component":{}}],["lookup.hpl",{"_index":2689,"title":{},"name":{},"text":{"66":{}},"component":{}}],["lookup/upd",{"_index":2359,"title":{"216":{},"227":{}},"name":{},"text":{"52":{},"71":{},"81":{},"86":{},"227":{}},"component":{}}],["lookupvalu",{"_index":5481,"title":{},"name":{},"text":{"270":{}},"component":{}}],["lookup’",{"_index":2374,"title":{},"name":{},"text":{"52":{}},"component":{}}],["loop",{"_index":1087,"title":{"55":{},"9-13":{}},"name":{"55":{},"392":{}},"text":{"9":{},"15":{},"29":{},"51":{},"55":{},"218":{},"233":{},"245":{},"250":{},"254":{},"309":{},"322":{},"337":{},"344":{},"372":{},"378":{},"381":{},"392":{},"439":{},"455":{},"483":{},"489":{},"503":{},"508":{}},"component":{}}],["loopback",{"_index":3602,"title":{},"name":{},"text":{"161":{},"514":{}},"component":{}}],["loops/pipelin",{"_index":5782,"title":{},"name":{},"text":{"309":{}},"component":{}}],["loops/repeat",{"_index":6552,"title":{},"name":{},"text":{"483":{}},"component":{}}],["loops/workflow",{"_index":6244,"title":{},"name":{},"text":{"378":{}},"component":{}}],["lordofth",{"_index":4544,"title":{},"name":{},"text":{"241":{}},"component":{}}],["lorem",{"_index":4545,"title":{},"name":{},"text":{"241":{}},"component":{}}],["lost",{"_index":3761,"title":{},"name":{},"text":{"163":{},"363":{},"480":{}},"component":{}}],["lot",{"_index":283,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"18":{},"19":{},"22":{},"24":{},"26":{},"30":{},"36":{},"41":{},"49":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"75":{},"78":{},"80":{},"81":{},"84":{},"94":{},"151":{},"158":{},"161":{},"163":{},"170":{},"227":{},"230":{},"264":{},"271":{},"310":{},"364":{},"379":{},"389":{},"394":{},"414":{},"421":{},"431":{},"511":{},"519":{},"520":{},"525":{},"528":{},"530":{},"535":{}},"component":{}}],["low",{"_index":2247,"title":{},"name":{},"text":{"50":{},"154":{},"167":{},"247":{},"325":{},"429":{}},"component":{}}],["lower",{"_index":2719,"title":{"247-156":{}},"name":{},"text":{"71":{},"163":{},"169":{},"208":{},"247":{},"298":{},"302":{},"309":{},"346":{},"358":{},"378":{},"429":{},"468":{}},"component":{}}],["lower(\"hellobc7",{"_index":5225,"title":{},"name":{},"text":{"247":{}},"component":{}}],["lower/upp",{"_index":6019,"title":{},"name":{},"text":{"358":{}},"component":{}}],["lowercas",{"_index":4152,"title":{},"name":{},"text":{"205":{},"247":{},"248":{},"358":{},"531":{}},"component":{}}],["lowest",{"_index":5325,"title":{},"name":{},"text":{"248":{}},"component":{}}],["lowresourcesmaxidletim",{"_index":906,"title":{},"name":{},"text":{"7":{}},"component":{}}],["ls",{"_index":6577,"title":{},"name":{},"text":{"489":{},"537":{}},"component":{}}],["lte",{"_index":5660,"title":{},"name":{},"text":{"291":{}},"component":{}}],["luhn10",{"_index":4237,"title":{},"name":{},"text":{"219":{}},"component":{}}],["lv3",{"_index":3830,"title":{},"name":{},"text":{"165":{}},"component":{}}],["lz75ofs9dj/pfupqezgwy4+tcdsbtv1ryo/607ga5nncs3+xghjl0zv/mwynwxuz5j0desniowk3",{"_index":2129,"title":{},"name":{},"text":{"42":{}},"component":{}}],["m",{"_index":1673,"title":{},"name":{},"text":{"31":{},"36":{},"38":{},"151":{},"291":{},"364":{},"366":{},"389":{},"533":{},"538":{},"540":{}},"component":{}}],["mac",{"_index":268,"title":{"5-7":{}},"name":{},"text":{"2":{},"17":{},"36":{},"38":{},"41":{},"45":{},"533":{},"543":{}},"component":{}}],["machin",{"_index":452,"title":{},"name":{},"text":{"5":{},"7":{},"19":{},"41":{},"57":{},"77":{},"87":{},"94":{},"159":{},"164":{},"165":{},"166":{},"169":{},"170":{},"171":{},"326":{},"344":{},"421":{},"485":{},"486":{},"487":{},"488":{},"511":{},"512":{},"514":{}},"component":{}}],["maco",{"_index":464,"title":{},"name":{},"text":{"5":{},"6":{},"19":{},"38":{},"41":{},"44":{},"46":{},"47":{},"48":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["macro",{"_index":4742,"title":{},"name":{},"text":{"247":{}},"component":{}}],["made",{"_index":1500,"title":{},"name":{},"text":{"23":{},"50":{},"64":{},"93":{},"165":{},"179":{},"205":{},"216":{},"220":{},"223":{},"270":{},"316":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"366":{},"433":{},"465":{},"532":{},"538":{}},"component":{}}],["maerten",{"_index":1180,"title":{},"name":{},"text":{"10":{}},"component":{}}],["mail",{"_index":1048,"title":{"280":{},"464":{},"466":{},"467":{},"538-11":{},"538-12":{}},"name":{"280":{},"466":{}},"text":{"8":{},"78":{},"81":{},"86":{},"91":{},"103":{},"232":{},"245":{},"277":{},"280":{},"464":{},"466":{},"467":{},"481":{},"536":{},"537":{},"538":{}},"component":{}}],["mailbox",{"_index":4349,"title":{},"name":{},"text":{"232":{}},"component":{}}],["mailvalid",{"_index":6508,"title":{},"name":{"467":{}},"text":{},"component":{}}],["main",{"_index":1308,"title":{"55-8":{},"55-13":{},"83-2":{},"171-4":{},"315-4":{},"376-4":{},"503-3":{}},"name":{},"text":{"17":{},"18":{},"22":{},"23":{},"25":{},"36":{},"40":{},"41":{},"52":{},"55":{},"76":{},"78":{},"79":{},"80":{},"84":{},"90":{},"93":{},"105":{},"162":{},"163":{},"167":{},"168":{},"171":{},"172":{},"196":{},"197":{},"198":{},"199":{},"222":{},"246":{},"247":{},"248":{},"250":{},"272":{},"309":{},"311":{},"355":{},"389":{},"525":{},"527":{},"528":{},"530":{},"533":{},"534":{},"541":{}},"component":{}}],["mainli",{"_index":1307,"title":{},"name":{},"text":{"17":{},"88":{},"171":{},"218":{},"248":{},"254":{},"542":{}},"component":{}}],["maintain",{"_index":282,"title":{},"name":{},"text":{"2":{},"52":{},"55":{},"81":{},"216":{},"270":{},"448":{},"534":{}},"component":{}}],["major",{"_index":357,"title":{},"name":{},"text":{"2":{},"49":{},"56":{},"79":{},"247":{},"538":{}},"component":{}}],["make",{"_index":25,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"9":{},"15":{},"19":{},"23":{},"24":{},"27":{},"40":{},"41":{},"43":{},"44":{},"50":{},"52":{},"55":{},"56":{},"77":{},"78":{},"81":{},"82":{},"83":{},"85":{},"90":{},"91":{},"94":{},"100":{},"101":{},"104":{},"130":{},"131":{},"152":{},"154":{},"156":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"165":{},"168":{},"169":{},"170":{},"178":{},"186":{},"196":{},"197":{},"205":{},"206":{},"220":{},"223":{},"227":{},"228":{},"229":{},"234":{},"235":{},"241":{},"243":{},"247":{},"250":{},"263":{},"275":{},"276":{},"283":{},"297":{},"299":{},"304":{},"305":{},"315":{},"320":{},"337":{},"344":{},"347":{},"361":{},"364":{},"365":{},"366":{},"372":{},"377":{},"378":{},"384":{},"388":{},"389":{},"390":{},"392":{},"395":{},"412":{},"418":{},"424":{},"429":{},"430":{},"431":{},"433":{},"481":{},"489":{},"510":{},"511":{},"514":{},"527":{},"528":{},"530":{},"531":{},"532":{},"533":{},"534":{},"535":{},"540":{},"542":{},"543":{},"544":{}},"component":{}}],["male",{"_index":6061,"title":{},"name":{},"text":{"364":{}},"component":{}}],["manag",{"_index":12,"title":{"90":{},"492":{},"2-7":{},"31-4":{}},"name":{},"text":{"1":{},"2":{},"17":{},"19":{},"23":{},"26":{},"30":{},"31":{},"42":{},"54":{},"64":{},"80":{},"90":{},"91":{},"93":{},"114":{},"130":{},"152":{},"153":{},"154":{},"162":{},"165":{},"167":{},"195":{},"200":{},"207":{},"208":{},"227":{},"275":{},"280":{},"289":{},"411":{},"413":{},"417":{},"418":{},"428":{},"429":{},"432":{},"437":{},"466":{},"492":{},"503":{},"518":{},"532":{},"537":{},"538":{},"542":{},"543":{}},"component":{}}],["manager.py:165",{"_index":2511,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mandatori",{"_index":3081,"title":{},"name":{},"text":{"90":{},"93":{},"105":{},"150":{},"152":{},"162":{},"179":{},"297":{},"389":{},"467":{},"474":{},"530":{}},"component":{}}],["mang",{"_index":4305,"title":{},"name":{},"text":{"227":{}},"component":{}}],["mani",{"_index":234,"title":{},"name":{},"text":{"2":{},"11":{},"20":{},"66":{},"81":{},"82":{},"90":{},"117":{},"150":{},"152":{},"163":{},"165":{},"169":{},"179":{},"216":{},"220":{},"222":{},"232":{},"247":{},"248":{},"275":{},"289":{},"309":{},"318":{},"319":{},"372":{},"382":{},"388":{},"389":{},"400":{},"428":{},"429":{},"528":{}},"component":{}}],["manipul",{"_index":421,"title":{},"name":{},"text":{"4":{},"20":{},"83":{},"102":{},"220":{},"431":{},"453":{},"534":{}},"component":{}}],["mankey",{"_index":4430,"title":{},"name":{},"text":{"241":{}},"component":{}}],["manner",{"_index":6007,"title":{},"name":{},"text":{"354":{},"524":{}},"component":{}}],["mantissa",{"_index":6100,"title":{},"name":{},"text":{"366":{}},"component":{}}],["manual",{"_index":220,"title":{"4":{},"154-12":{}},"name":{},"text":{"2":{},"4":{},"7":{},"9":{},"36":{},"41":{},"56":{},"71":{},"154":{},"227":{},"235":{},"258":{},"270":{},"287":{},"303":{},"319":{},"331":{},"377":{},"394":{},"420":{},"433":{},"481":{},"498":{},"503":{},"514":{},"527":{},"531":{},"543":{},"546":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"327":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"388":{},"389":{},"390":{},"391":{},"392":{},"393":{},"394":{},"395":{},"396":{},"397":{},"398":{},"399":{},"400":{},"401":{},"402":{},"403":{},"404":{},"405":{},"406":{},"407":{},"408":{},"409":{},"410":{},"411":{},"412":{},"413":{},"414":{},"415":{},"416":{},"417":{},"418":{},"419":{},"420":{},"421":{},"422":{},"423":{},"424":{},"425":{},"426":{},"427":{},"428":{},"429":{},"430":{},"431":{},"432":{},"433":{},"434":{},"435":{},"436":{},"437":{},"438":{},"439":{},"440":{},"441":{},"442":{},"443":{},"444":{},"445":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"452":{},"453":{},"454":{},"455":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"473":{},"474":{},"475":{},"476":{},"477":{},"478":{},"479":{},"480":{},"481":{},"482":{},"483":{},"484":{},"485":{},"486":{},"487":{},"488":{},"489":{},"490":{},"491":{},"492":{},"493":{},"494":{},"495":{},"496":{},"497":{},"498":{},"499":{},"500":{},"501":{},"502":{},"503":{},"504":{},"505":{},"506":{},"507":{},"508":{},"509":{},"510":{},"511":{},"512":{},"513":{},"514":{},"515":{},"516":{},"517":{},"518":{},"519":{},"520":{},"521":{},"522":{},"523":{},"524":{},"525":{},"526":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"535":{},"536":{},"537":{},"538":{},"539":{},"540":{},"541":{},"542":{},"543":{},"544":{},"545":{},"546":{}}}],["manual/antora.yml",{"_index":7117,"title":{},"name":{},"text":{"538":{}},"component":{}}],["manual/current/cli",{"_index":3475,"title":{},"name":{},"text":{"154":{}},"component":{}}],["map",{"_index":1085,"title":{"281":{},"282":{},"345":{},"9-9":{},"338-5":{}},"name":{"281":{},"282":{},"345":{},"393":{}},"text":{"9":{},"37":{},"50":{},"55":{},"81":{},"83":{},"86":{},"88":{},"133":{},"155":{},"170":{},"182":{},"185":{},"205":{},"233":{},"247":{},"264":{},"273":{},"274":{},"275":{},"278":{},"281":{},"282":{},"287":{},"289":{},"291":{},"294":{},"297":{},"303":{},"309":{},"315":{},"324":{},"325":{},"328":{},"332":{},"333":{},"334":{},"338":{},"345":{},"346":{},"365":{},"368":{},"372":{},"375":{},"376":{},"378":{},"392":{},"393":{},"432":{},"433":{},"511":{},"518":{}},"component":{}}],["map(cpu",{"_index":3635,"title":{},"name":{},"text":{"161":{}},"component":{}}],["map(memori",{"_index":3633,"title":{},"name":{},"text":{"161":{}},"component":{}}],["mapper",{"_index":2908,"title":{"375":{}},"name":{},"text":{"81":{},"86":{},"375":{}},"component":{}}],["map’",{"_index":5890,"title":{},"name":{},"text":{"324":{}},"component":{}}],["mari",{"_index":5848,"title":{},"name":{},"text":{"320":{}},"component":{}}],["mariadb",{"_index":3200,"title":{"127":{}},"name":{"127":{}},"text":{"113":{}},"component":{}}],["maritalstatu",{"_index":4490,"title":{},"name":{},"text":{"241":{}},"component":{}}],["mark",{"_index":1290,"title":{"87-4":{}},"name":{},"text":{"15":{},"40":{},"56":{},"83":{},"85":{},"167":{},"174":{},"196":{},"221":{},"238":{},"265":{},"329":{},"330":{},"332":{},"333":{},"334":{},"363":{},"466":{},"527":{}},"component":{}}],["markdown",{"_index":1462,"title":{},"name":{},"text":{"22":{},"30":{}},"component":{}}],["marker",{"_index":6116,"title":{},"name":{},"text":{"366":{},"400":{}},"component":{}}],["market",{"_index":611,"title":{},"name":{},"text":{"6":{}},"component":{}}],["marketplac",{"_index":7036,"title":{},"name":{},"text":{"533":{}},"component":{}}],["marvadi",{"_index":1201,"title":{},"name":{},"text":{"10":{}},"component":{}}],["marvinquot",{"_index":4525,"title":{},"name":{},"text":{"241":{}},"component":{}}],["mask",{"_index":3955,"title":{},"name":{},"text":{"178":{},"205":{},"217":{},"223":{},"234":{},"243":{},"250":{},"273":{},"277":{},"279":{},"288":{},"303":{},"305":{},"311":{},"313":{},"316":{},"331":{},"338":{},"342":{},"359":{},"367":{},"372":{},"374":{},"377":{},"383":{},"386":{},"509":{}},"component":{}}],["mass",{"_index":5036,"title":{},"name":{},"text":{"247":{}},"component":{}}],["massiv",{"_index":1437,"title":{},"name":{},"text":{"20":{},"163":{}},"component":{}}],["master",{"_index":3541,"title":{},"name":{},"text":{"160":{},"161":{},"162":{},"167":{},"168":{},"364":{},"481":{},"503":{},"533":{},"540":{}},"component":{}}],["master.sh",{"_index":3579,"title":{},"name":{},"text":{"161":{}},"component":{}}],["mastercard",{"_index":4240,"title":{},"name":{},"text":{"219":{}},"component":{}}],["masterless",{"_index":6332,"title":{},"name":{},"text":{"429":{}},"component":{}}],["master’",{"_index":3584,"title":{},"name":{},"text":{"161":{}},"component":{}}],["match",{"_index":1391,"title":{"248":{}},"name":{},"text":{"19":{},"34":{},"39":{},"40":{},"47":{},"52":{},"64":{},"70":{},"81":{},"82":{},"84":{},"86":{},"91":{},"94":{},"232":{},"246":{},"247":{},"248":{},"269":{},"270":{},"273":{},"277":{},"285":{},"291":{},"292":{},"297":{},"302":{},"303":{},"316":{},"338":{},"346":{},"359":{},"366":{},"368":{},"374":{},"375":{},"389":{},"426":{},"447":{},"461":{},"499":{},"537":{}},"component":{}}],["match/merg",{"_index":5720,"title":{},"name":{},"text":{"297":{}},"component":{}}],["matching/merg",{"_index":5719,"title":{},"name":{},"text":{"297":{}},"component":{}}],["materi",{"_index":6597,"title":{},"name":{},"text":{"493":{}},"component":{}}],["mathemat",{"_index":4680,"title":{"247-80":{}},"name":{},"text":{"247":{}},"component":{}}],["mathematisch",{"_index":4110,"title":{},"name":{},"text":{"205":{}},"component":{}}],["matrix",{"_index":3929,"title":{"319-10":{}},"name":{},"text":{"171":{},"247":{},"319":{}},"component":{}}],["matt",{"_index":6780,"title":{},"name":{},"text":{"523":{}},"component":{}}],["matter",{"_index":539,"title":{"9-6":{}},"name":{"397":{}},"text":{"5":{},"7":{},"11":{},"56":{},"94":{},"103":{},"222":{},"247":{},"384":{},"422":{},"461":{},"463":{}},"component":{}}],["matur",{"_index":3083,"title":{},"name":{},"text":{"91":{},"247":{}},"component":{}}],["matz",{"_index":4546,"title":{},"name":{},"text":{"241":{}},"component":{}}],["maven",{"_index":6960,"title":{"532-1":{}},"name":{},"text":{"530":{},"532":{},"533":{},"537":{}},"component":{}}],["max",{"_index":815,"title":{"247-112":{}},"name":{},"text":{"7":{},"40":{},"61":{},"79":{},"202":{},"207":{},"227":{},"228":{},"247":{},"256":{},"272":{},"291":{},"298":{},"374":{},"442":{},"448":{},"468":{},"470":{},"492":{}},"component":{}}],["max(2;4;1",{"_index":4991,"title":{},"name":{},"text":{"247":{}},"component":{}}],["max([.b4:.b5",{"_index":4992,"title":{},"name":{},"text":{"247":{}},"component":{}}],["maxconnectionsperhost",{"_index":1019,"title":{},"name":{},"text":{"8":{}},"component":{}}],["maxdb",{"_index":3328,"title":{"137":{}},"name":{},"text":{},"component":{}}],["maxim",{"_index":2916,"title":{},"name":{},"text":{"82":{},"163":{},"248":{}},"component":{}}],["maxima",{"_index":2656,"title":{},"name":{},"text":{"61":{}},"component":{}}],["maximum",{"_index":565,"title":{"154-8":{},"154-9":{},"154-11":{}},"name":{},"text":{"5":{},"7":{},"8":{},"29":{},"37":{},"61":{},"78":{},"97":{},"154":{},"163":{},"165":{},"167":{},"168":{},"177":{},"184":{},"186":{},"198":{},"202":{},"207":{},"216":{},"227":{},"247":{},"262":{},"291":{},"298":{},"303":{},"320":{},"322":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"357":{},"364":{},"374":{},"383":{},"492":{},"500":{},"501":{},"514":{}},"component":{}}],["maxsiz",{"_index":1055,"title":{},"name":{},"text":{"8":{}},"component":{}}],["maxtotalconnect",{"_index":1021,"title":{},"name":{},"text":{"8":{}},"component":{}}],["mayb",{"_index":2858,"title":{},"name":{},"text":{"81":{}},"component":{}}],["mb",{"_index":572,"title":{},"name":{},"text":{"5":{},"99":{},"158":{},"164":{},"353":{}},"component":{}}],["mbox",{"_index":4347,"title":{},"name":{},"text":{"232":{},"464":{}},"component":{}}],["mbyte",{"_index":6468,"title":{},"name":{},"text":{"454":{}},"component":{}}],["md5",{"_index":3942,"title":{},"name":{},"text":{"174":{},"205":{},"241":{}},"component":{}}],["md5withrsa",{"_index":3832,"title":{},"name":{},"text":{"165":{}},"component":{}}],["mdb",{"_index":3160,"title":{},"name":{},"text":{"106":{}},"component":{}}],["mdi",{"_index":256,"title":{"246-10":{}},"name":{},"text":{"2":{},"81":{},"214":{},"246":{},"287":{}},"component":{}}],["mean",{"_index":557,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"25":{},"40":{},"57":{},"82":{},"154":{},"157":{},"163":{},"168":{},"169":{},"170":{},"178":{},"188":{},"207":{},"216":{},"220":{},"222":{},"227":{},"230":{},"234":{},"236":{},"237":{},"246":{},"247":{},"250":{},"251":{},"262":{},"264":{},"271":{},"313":{},"338":{},"361":{},"363":{},"366":{},"453":{},"494":{},"510":{},"514":{},"525":{},"528":{},"531":{},"532":{},"542":{},"544":{}},"component":{}}],["meaning",{"_index":1102,"title":{},"name":{},"text":{"9":{},"395":{},"527":{}},"component":{}}],["meant",{"_index":6082,"title":{},"name":{},"text":{"366":{}},"component":{}}],["meantim",{"_index":3869,"title":{},"name":{},"text":{"167":{},"168":{},"520":{}},"component":{}}],["measur",{"_index":2841,"title":{},"name":{},"text":{"78":{},"438":{}},"component":{}}],["mechan",{"_index":2670,"title":{},"name":{},"text":{"65":{}},"component":{}}],["median",{"_index":5412,"title":{},"name":{},"text":{"262":{}},"component":{}}],["medium",{"_index":2633,"title":{},"name":{},"text":{"56":{},"492":{}},"component":{}}],["meet",{"_index":4328,"title":{},"name":{},"text":{"228":{},"234":{},"450":{},"501":{}},"component":{}}],["megabyt",{"_index":2375,"title":{},"name":{},"text":{"52":{}},"component":{}}],["member",{"_index":2337,"title":{},"name":{},"text":{"52":{},"65":{},"154":{},"275":{},"276":{},"537":{},"542":{}},"component":{}}],["memgraph",{"_index":3108,"title":{"431":{},"431-2":{}},"name":{},"text":{"96":{},"431":{}},"component":{}}],["memgraph/memgraph",{"_index":6345,"title":{},"name":{},"text":{"431":{}},"component":{}}],["memgraph’",{"_index":6346,"title":{},"name":{},"text":{"431":{}},"component":{}}],["memgroupbi",{"_index":5606,"title":{},"name":{"283":{}},"text":{},"component":{}}],["memori",{"_index":208,"title":{"279":{},"283":{},"5-11":{}},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"52":{},"55":{},"57":{},"78":{},"81":{},"83":{},"86":{},"114":{},"161":{},"162":{},"163":{},"165":{},"167":{},"203":{},"213":{},"216":{},"218":{},"220":{},"222":{},"227":{},"235":{},"250":{},"256":{},"262":{},"264":{},"272":{},"273":{},"279":{},"283":{},"289":{},"295":{},"298":{},"304":{},"305":{},"309":{},"313":{},"314":{},"341":{},"347":{},"352":{},"355":{},"368":{},"370":{},"381":{},"405":{},"431":{},"437":{},"492":{},"514":{},"518":{}},"component":{}}],["memorystor",{"_index":3640,"title":{},"name":{},"text":{"161":{}},"component":{}}],["mention",{"_index":167,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"50":{},"158":{},"163":{},"372":{},"433":{},"514":{},"525":{},"529":{},"530":{},"533":{},"537":{}},"component":{}}],["menu",{"_index":520,"title":{},"name":{},"text":{"5":{},"7":{},"17":{},"27":{},"31":{},"36":{},"37":{},"78":{},"83":{},"85":{},"97":{},"98":{},"99":{},"101":{},"103":{},"153":{},"154":{},"162":{},"163":{},"167":{},"168":{},"270":{},"289":{},"290":{},"291":{},"363":{},"372":{},"381":{},"388":{},"528":{},"533":{},"541":{}},"component":{}}],["menuitem",{"_index":7188,"title":{},"name":{},"text":{"541":{}},"component":{}}],["mere",{"_index":4253,"title":{},"name":{},"text":{"220":{}},"component":{}}],["merg",{"_index":2330,"title":{"284":{},"285":{},"293":{},"348":{},"356":{},"360":{}},"name":{},"text":{"52":{},"71":{},"81":{},"86":{},"151":{},"152":{},"163":{},"284":{},"285":{},"293":{},"297":{},"299":{},"347":{},"348":{},"356":{},"360":{},"389":{},"433":{},"528":{},"530":{}},"component":{}}],["mergejoin",{"_index":5607,"title":{},"name":{"284":{}},"text":{},"component":{}}],["mergerow",{"_index":5608,"title":{},"name":{"285":{}},"text":{},"component":{}}],["meso",{"_index":3889,"title":{},"name":{},"text":{"168":{}},"component":{}}],["mesos://host:port",{"_index":3888,"title":{},"name":{},"text":{"168":{}},"component":{}}],["messag",{"_index":1490,"title":{"232":{},"280-6":{},"466-5":{}},"name":{},"text":{"23":{},"38":{},"41":{},"46":{},"47":{},"57":{},"75":{},"78":{},"81":{},"83":{},"85":{},"86":{},"87":{},"97":{},"101":{},"103":{},"152":{},"172":{},"174":{},"185":{},"186":{},"187":{},"192":{},"193":{},"196":{},"197":{},"198":{},"199":{},"219":{},"231":{},"232":{},"240":{},"249":{},"251":{},"260":{},"261":{},"275":{},"276":{},"280":{},"341":{},"380":{},"384":{},"428":{},"434":{},"464":{},"466":{},"469":{},"485":{},"491":{},"505":{},"528":{}},"component":{}}],["messages_en_us.properti",{"_index":6875,"title":{},"name":{},"text":{"528":{}},"component":{}}],["met",{"_index":1534,"title":{},"name":{},"text":{"24":{},"55":{},"483":{},"490":{}},"component":{}}],["meta",{"_index":2242,"title":{"50-5":{},"338-7":{}},"name":{},"text":{"50":{},"208":{},"217":{},"223":{},"230":{},"258":{},"324":{},"338":{},"532":{}},"component":{}}],["metadata",{"_index":5,"title":{"31":{},"81":{},"243":{},"271":{},"286":{},"287":{},"288":{},"529":{},"1-4":{},"2-1":{},"9-4":{},"9-10":{},"20-1":{},"37-4":{},"37-5":{},"37-6":{},"37-7":{},"37-8":{},"37-9":{},"43-2":{},"53-1":{},"54-1":{},"64-1":{},"75-9":{},"81-1":{},"81-2":{},"81-3":{},"81-4":{},"92-1":{},"164-5":{},"178-9":{},"180-4":{},"181-4":{},"182-4":{},"183-4":{},"184-4":{},"185-4":{},"220-4":{},"223-4":{},"227-13":{},"235-6":{},"246-7":{},"250-7":{},"253-4":{},"254-4":{},"257-4":{},"258-4":{},"266-3":{},"272-4":{},"273-11":{},"274-8":{},"283-4":{},"285-5":{},"287-6":{},"287-7":{},"293-4":{},"301-3":{},"303-4":{},"311-4":{},"315-6":{},"317-5":{},"320-4":{},"323-4":{},"338-8":{},"341-4":{},"342-4":{},"343-4":{},"347-4":{},"348-4":{},"349-4":{},"355-4":{},"357-4":{},"358-4":{},"359-4":{},"360-6":{},"364-4":{},"366-12":{},"367-7":{},"371-4":{},"372-9":{},"373-5":{},"374-4":{},"375-4":{},"376-6":{},"382-4":{},"383-7":{},"395-2":{},"429-2":{},"432-3":{},"513-3":{},"513-4":{},"525-4":{},"529-2":{},"529-3":{},"529-5":{},"544-3":{},"544-6":{},"544-7":{},"544-8":{},"544-13":{},"544-14":{},"544-15":{}},"name":{"31":{},"81":{},"92":{},"286":{},"394":{},"406":{},"529":{}},"text":{"1":{},"2":{},"7":{},"9":{},"13":{},"16":{},"17":{},"19":{},"20":{},"24":{},"26":{},"29":{},"31":{},"34":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"43":{},"44":{},"46":{},"47":{},"50":{},"53":{},"54":{},"56":{},"64":{},"67":{},"68":{},"73":{},"76":{},"77":{},"78":{},"81":{},"83":{},"84":{},"86":{},"88":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"107":{},"130":{},"151":{},"152":{},"153":{},"154":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"167":{},"168":{},"170":{},"171":{},"178":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"205":{},"207":{},"208":{},"214":{},"220":{},"223":{},"227":{},"234":{},"235":{},"243":{},"244":{},"246":{},"250":{},"253":{},"254":{},"257":{},"258":{},"266":{},"270":{},"271":{},"272":{},"273":{},"274":{},"280":{},"283":{},"285":{},"286":{},"287":{},"288":{},"291":{},"293":{},"301":{},"303":{},"308":{},"310":{},"311":{},"315":{},"317":{},"320":{},"323":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"347":{},"348":{},"349":{},"355":{},"357":{},"358":{},"359":{},"360":{},"364":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"379":{},"382":{},"383":{},"388":{},"389":{},"394":{},"395":{},"400":{},"401":{},"402":{},"406":{},"408":{},"412":{},"413":{},"416":{},"418":{},"428":{},"432":{},"437":{},"511":{},"512":{},"513":{},"514":{},"518":{},"519":{},"520":{},"525":{},"526":{},"529":{},"531":{},"532":{},"543":{},"544":{}},"component":{}}],["metadata.hpl",{"_index":5615,"title":{},"name":{},"text":{"287":{}},"component":{}}],["metadata.json",{"_index":3552,"title":{},"name":{},"text":{"160":{},"161":{},"162":{},"513":{}},"component":{}}],["metadata/cassandra",{"_index":3423,"title":{},"name":{},"text":{"153":{}},"component":{}}],["metadata/list/{key",{"_index":1737,"title":{},"name":{},"text":{"37":{}},"component":{}}],["metadata/neo4j",{"_index":3434,"title":{},"name":{},"text":{"154":{}},"component":{}}],["metadata/rdbm",{"_index":6283,"title":{},"name":{},"text":{"388":{}},"component":{}}],["metadata/typ",{"_index":1717,"title":{},"name":{},"text":{"37":{}},"component":{}}],["metadata/{key",{"_index":1745,"title":{},"name":{},"text":{"37":{}},"component":{}}],["metadata/{key}/{nam",{"_index":1739,"title":{},"name":{},"text":{"37":{}},"component":{}}],["metadatabasefold",{"_index":3043,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["metadataeditor",{"_index":6917,"title":{},"name":{},"text":{"529":{}},"component":{}}],["metadataexportfil",{"_index":1714,"title":{},"name":{},"text":{"37":{}},"component":{}}],["metadataprovid",{"_index":7284,"title":{},"name":{},"text":{"544":{}},"component":{}}],["metainject",{"_index":5612,"title":{},"name":{"287":{}},"text":{},"component":{}}],["metaphon",{"_index":4134,"title":{},"name":{},"text":{"205":{},"248":{}},"component":{}}],["metar",{"_index":4456,"title":{},"name":{},"text":{"241":{}},"component":{}}],["metaselectionlin",{"_index":7014,"title":{},"name":{},"text":{"532":{}},"component":{}}],["metaspace.s",{"_index":3682,"title":{},"name":{},"text":{"162":{}},"component":{}}],["metastor",{"_index":4022,"title":{"532-11":{}},"name":{},"text":{"194":{},"195":{},"200":{},"518":{},"519":{},"520":{},"532":{}},"component":{}}],["metastore_json",{"_index":2148,"title":{},"name":{},"text":{"42":{}},"component":{}}],["metastructur",{"_index":5630,"title":{},"name":{"288":{}},"text":{},"component":{}}],["method",{"_index":1879,"title":{"271-3":{},"529-4":{},"541-1":{},"541-3":{}},"name":{},"text":{"40":{},"82":{},"117":{},"154":{},"205":{},"217":{},"234":{},"246":{},"247":{},"262":{},"264":{},"271":{},"273":{},"277":{},"279":{},"287":{},"291":{},"292":{},"303":{},"315":{},"316":{},"319":{},"320":{},"331":{},"338":{},"367":{},"372":{},"378":{},"480":{},"501":{},"528":{},"529":{},"530":{},"532":{},"536":{},"541":{},"544":{}},"component":{}}],["methodolog",{"_index":4900,"title":{},"name":{},"text":{"247":{}},"component":{}}],["metric",{"_index":1294,"title":{"454":{}},"name":{},"text":{"15":{},"29":{},"55":{},"85":{},"158":{},"160":{},"163":{},"167":{},"168":{},"169":{},"259":{},"275":{},"310":{},"379":{},"454":{}},"component":{}}],["mi",{"_index":2988,"title":{},"name":{},"text":{"87":{}},"component":{}}],["mi/pmi",{"_index":3016,"title":{},"name":{},"text":{"87":{}},"component":{}}],["micro",{"_index":4063,"title":{},"name":{},"text":{"198":{}},"component":{}}],["microsoft",{"_index":468,"title":{"106":{},"173":{},"234":{}},"name":{},"text":{"5":{},"6":{},"81":{},"86":{},"106":{},"130":{},"173":{},"186":{},"187":{},"234":{},"235":{},"247":{},"428":{}},"component":{}}],["microsoft’",{"_index":3269,"title":{},"name":{},"text":{"130":{}},"component":{}}],["mid",{"_index":4722,"title":{"247-157":{},"247-158":{}},"name":{},"text":{"247":{}},"component":{}}],["mid(\"123456789",{"_index":5237,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(\"123456789\";1;0",{"_index":5239,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(\"123456789\";2.9;1",{"_index":5241,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(\"123456789\";20;3",{"_index":5236,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(\"123456789\";2;2.9",{"_index":5242,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(\"123456789\";5;3",{"_index":5234,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid([field],1,5",{"_index":5230,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid([field],7,20",{"_index":5232,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(t;1;length",{"_index":5244,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mid(text",{"_index":5227,"title":{},"name":{},"text":{"247":{}},"component":{}}],["middl",{"_index":1630,"title":{},"name":{},"text":{"27":{}},"component":{}}],["midnight",{"_index":4144,"title":{},"name":{},"text":{"205":{},"247":{}},"component":{}}],["migrat",{"_index":1449,"title":{},"name":{},"text":{"20":{},"50":{},"161":{},"247":{},"520":{}},"component":{}}],["mileag",{"_index":2554,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mill",{"_index":6104,"title":{},"name":{},"text":{"366":{}},"component":{}}],["million",{"_index":2968,"title":{},"name":{},"text":{"84":{}},"component":{}}],["millisecond",{"_index":821,"title":{},"name":{},"text":{"7":{},"25":{},"78":{},"153":{},"167":{},"170":{},"205":{},"208":{},"256":{},"263":{},"264":{},"275":{},"304":{},"305":{},"309":{},"319":{},"322":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"366":{},"511":{}},"component":{}}],["mime",{"_index":1045,"title":{},"name":{},"text":{"8":{}},"component":{}}],["mime:file:///your/path/mail/anymail.mim",{"_index":1052,"title":{},"name":{},"text":{"8":{}},"component":{}}],["mime:file:///your/path/mail/anymail.mime!/_body_part_0",{"_index":1054,"title":{},"name":{},"text":{"8":{}},"component":{}}],["mime:file:///your/path/mail/anymail.mime!/filename.pdf",{"_index":1053,"title":{},"name":{},"text":{"8":{}},"component":{}}],["mimebodypart",{"_index":5601,"title":{},"name":{},"text":{"280":{}},"component":{}}],["mimetyp",{"_index":4504,"title":{},"name":{},"text":{"241":{}},"component":{}}],["mimic",{"_index":2458,"title":{},"name":{},"text":{"55":{},"309":{}},"component":{}}],["mimimum",{"_index":3897,"title":{},"name":{},"text":{"168":{}},"component":{}}],["min",{"_index":784,"title":{"247-113":{}},"name":{},"text":{"7":{},"61":{},"79":{},"227":{},"247":{},"291":{},"374":{},"438":{},"492":{}},"component":{}}],["min(\"a",{"_index":4997,"title":{},"name":{},"text":{"247":{}},"component":{}}],["min(2;4;1",{"_index":4994,"title":{},"name":{},"text":{"247":{}},"component":{}}],["min([.b3",{"_index":4996,"title":{},"name":{},"text":{"247":{}},"component":{}}],["min([.b3:.b5",{"_index":4999,"title":{},"name":{},"text":{"247":{}},"component":{}}],["min([.b4:.b5",{"_index":4995,"title":{},"name":{},"text":{"247":{}},"component":{}}],["min(date_from",{"_index":4321,"title":{},"name":{},"text":{"227":{}},"component":{}}],["mind",{"_index":2472,"title":{},"name":{},"text":{"56":{},"57":{},"103":{},"205":{},"220":{},"221":{},"429":{},"535":{}},"component":{}}],["minim",{"_index":1585,"title":{"117-2":{}},"name":{},"text":{"25":{},"37":{},"38":{},"41":{},"75":{},"85":{},"104":{},"167":{},"217":{},"248":{},"270":{},"320":{},"367":{},"383":{},"514":{}},"component":{}}],["minima",{"_index":2655,"title":{},"name":{},"text":{"61":{}},"component":{}}],["minimum",{"_index":454,"title":{},"name":{},"text":{"5":{},"7":{},"50":{},"61":{},"97":{},"167":{},"168":{},"247":{},"248":{},"262":{},"291":{},"298":{},"302":{},"374":{},"492":{},"514":{}},"component":{}}],["minor",{"_index":2614,"title":{},"name":{},"text":{"56":{}},"component":{}}],["minu",{"_index":4084,"title":{},"name":{},"text":{"205":{},"247":{},"357":{},"366":{}},"component":{}}],["minut",{"_index":868,"title":{"247-32":{}},"name":{},"text":{"7":{},"10":{},"13":{},"19":{},"41":{},"56":{},"158":{},"205":{},"224":{},"247":{},"260":{},"261":{},"264":{},"366":{},"445":{},"492":{},"514":{}},"component":{}}],["minute(datetimevalue(\"2004",{"_index":4824,"title":{},"name":{},"text":{"247":{}},"component":{}}],["misc",{"_index":6959,"title":{},"name":{},"text":{"530":{}},"component":{}}],["miscellan",{"_index":3028,"title":{},"name":{},"text":{"88":{},"235":{},"530":{}},"component":{}}],["mismatch",{"_index":5985,"title":{},"name":{},"text":{"346":{}},"component":{}}],["misnom",{"_index":4248,"title":{},"name":{},"text":{"220":{}},"component":{}}],["miss",{"_index":403,"title":{"538-3":{}},"name":{},"text":{"4":{},"7":{},"10":{},"165":{},"234":{},"247":{},"273":{},"279":{},"294":{},"298":{},"378":{},"528":{}},"component":{}}],["mission",{"_index":6325,"title":{},"name":{},"text":{"429":{}},"component":{}}],["mistakenli",{"_index":4258,"title":{},"name":{},"text":{"220":{},"366":{}},"component":{}}],["mix",{"_index":490,"title":{},"name":{},"text":{"5":{},"157":{},"164":{},"179":{},"223":{},"366":{}},"component":{}}],["mkdir",{"_index":7084,"title":{},"name":{},"text":{"537":{},"538":{},"540":{}},"component":{}}],["mllib",{"_index":2996,"title":{},"name":{},"text":{"87":{}},"component":{}}],["mlr",{"_index":2995,"title":{},"name":{},"text":{"87":{}},"component":{}}],["mm",{"_index":4732,"title":{},"name":{},"text":{"247":{},"259":{},"270":{},"273":{},"331":{}},"component":{}}],["mobil",{"_index":1317,"title":{},"name":{},"text":{"19":{},"354":{}},"component":{}}],["mod",{"_index":4238,"title":{"247-114":{}},"name":{},"text":{"219":{},"247":{}},"component":{}}],["mod(10,3",{"_index":5003,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mode",{"_index":491,"title":{"274-9":{}},"name":{},"text":{"5":{},"27":{},"74":{},"79":{},"112":{},"164":{},"165":{},"167":{},"169":{},"205":{},"220":{},"227":{},"250":{},"270":{},"274":{},"291":{},"312":{},"316":{},"365":{},"367":{},"377":{},"461":{},"462":{},"463":{},"478":{},"485":{},"510":{},"527":{}},"component":{}}],["mode.css",{"_index":7194,"title":{},"name":{},"text":{"541":{}},"component":{}}],["model",{"_index":1514,"title":{"155":{},"156-3":{},"297-4":{}},"name":{},"text":{"24":{},"37":{},"64":{},"87":{},"92":{},"155":{},"156":{},"159":{},"163":{},"164":{},"166":{},"297":{},"432":{},"433":{},"533":{}},"component":{}}],["model.[3",{"_index":6337,"title":{},"name":{},"text":{"429":{}},"component":{}}],["model.json",{"_index":2218,"title":{},"name":{},"text":{"46":{}},"component":{}}],["modern",{"_index":449,"title":{},"name":{},"text":{"5":{},"228":{},"519":{}},"component":{}}],["modif",{"_index":4335,"title":{},"name":{},"text":{"229":{},"273":{},"279":{},"292":{},"543":{}},"component":{}}],["modifi",{"_index":100,"title":{"389-8":{},"542-2":{},"543-5":{}},"name":{},"text":{"1":{},"13":{},"22":{},"78":{},"90":{},"103":{},"150":{},"152":{},"161":{},"246":{},"247":{},"256":{},"270":{},"273":{},"287":{},"291":{},"292":{},"316":{},"330":{},"331":{},"332":{},"333":{},"334":{},"389":{},"400":{},"404":{},"407":{},"529":{},"530":{},"535":{},"542":{},"543":{}},"component":{}}],["modul",{"_index":1077,"title":{},"name":{},"text":{"8":{},"91":{},"161":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"525":{},"530":{},"534":{},"541":{}},"component":{}}],["modulo",{"_index":2932,"title":{},"name":{},"text":{"82":{}},"component":{}}],["moment",{"_index":2484,"title":{},"name":{},"text":{"56":{},"99":{},"366":{}},"component":{}}],["mon",{"_index":4163,"title":{},"name":{},"text":{"205":{}},"component":{}}],["monday",{"_index":4123,"title":{},"name":{},"text":{"205":{},"247":{}},"component":{}}],["mondrian",{"_index":4210,"title":{},"name":{},"text":{"213":{}},"component":{}}],["monetari",{"_index":6099,"title":{},"name":{},"text":{"366":{}},"component":{}}],["monetdb",{"_index":2892,"title":{"128":{},"289":{},"289-6":{}},"name":{"128":{}},"text":{"81":{},"86":{},"289":{}},"component":{}}],["monetdbbulkload",{"_index":5632,"title":{},"name":{"289":{}},"text":{},"component":{}}],["mongo",{"_index":5640,"title":{"292-6":{}},"name":{},"text":{"290":{},"292":{}},"component":{}}],["mongodb",{"_index":1447,"title":{"65":{},"290":{},"291":{},"292":{}},"name":{"65":{}},"text":{"20":{},"24":{},"64":{},"65":{},"81":{},"86":{},"92":{},"289":{},"290":{},"291":{},"292":{}},"component":{}}],["mongodb_cr",{"_index":2672,"title":{},"name":{},"text":{"65":{}},"component":{}}],["mongodbdelet",{"_index":5638,"title":{},"name":{"290":{}},"text":{},"component":{}}],["mongodbinput",{"_index":5648,"title":{},"name":{"291":{}},"text":{},"component":{}}],["mongodboutput",{"_index":5674,"title":{},"name":{"292":{}},"text":{},"component":{}}],["mongodb’",{"_index":5649,"title":{},"name":{},"text":{"291":{}},"component":{}}],["monitor",{"_index":336,"title":{"162-6":{}},"name":{},"text":{"2":{},"56":{},"78":{},"162":{},"165":{},"169":{},"275":{},"485":{},"492":{}},"component":{}}],["monospac",{"_index":1627,"title":{},"name":{},"text":{"27":{}},"component":{}}],["month",{"_index":2338,"title":{"247-33":{}},"name":{},"text":{"52":{},"55":{},"82":{},"205":{},"247":{},"256":{},"322":{},"366":{}},"component":{}}],["month([.c7",{"_index":4826,"title":{},"name":{},"text":{"247":{}},"component":{}}],["month(date(2006;5;21",{"_index":4827,"title":{},"name":{},"text":{"247":{}},"component":{}}],["monthend",{"_index":4651,"title":{"247-34":{}},"name":{},"text":{"247":{}},"component":{}}],["monthend(datevalue(\"2004",{"_index":4828,"title":{},"name":{},"text":{"247":{}},"component":{}}],["monthli",{"_index":4940,"title":{},"name":{},"text":{"247":{}},"component":{}}],["moon",{"_index":4575,"title":{},"name":{},"text":{"241":{}},"component":{}}],["more",{"_index":16,"title":{"58-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"38":{},"40":{},"41":{},"43":{},"48":{},"49":{},"52":{},"55":{},"56":{},"57":{},"58":{},"61":{},"62":{},"63":{},"69":{},"70":{},"71":{},"74":{},"75":{},"76":{},"77":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"91":{},"93":{},"94":{},"95":{},"96":{},"113":{},"154":{},"158":{},"159":{},"160":{},"161":{},"163":{},"165":{},"167":{},"168":{},"171":{},"174":{},"176":{},"179":{},"181":{},"184":{},"202":{},"203":{},"205":{},"207":{},"213":{},"218":{},"221":{},"222":{},"225":{},"227":{},"231":{},"241":{},"246":{},"247":{},"248":{},"249":{},"251":{},"259":{},"260":{},"261":{},"262":{},"268":{},"269":{},"272":{},"273":{},"274":{},"275":{},"283":{},"285":{},"286":{},"287":{},"292":{},"294":{},"296":{},"304":{},"305":{},"308":{},"313":{},"314":{},"315":{},"320":{},"323":{},"337":{},"338":{},"347":{},"351":{},"355":{},"359":{},"364":{},"366":{},"370":{},"371":{},"372":{},"374":{},"383":{},"384":{},"389":{},"396":{},"402":{},"404":{},"408":{},"409":{},"411":{},"414":{},"418":{},"421":{},"427":{},"430":{},"431":{},"432":{},"437":{},"440":{},"441":{},"461":{},"464":{},"466":{},"481":{},"485":{},"487":{},"488":{},"492":{},"493":{},"499":{},"503":{},"506":{},"512":{},"514":{},"519":{},"521":{},"527":{},"529":{},"530":{},"532":{},"533":{},"534":{},"538":{},"542":{},"543":{}},"component":{}}],["morn",{"_index":2629,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mortgag",{"_index":4942,"title":{},"name":{},"text":{"247":{}},"component":{}}],["mostli",{"_index":6772,"title":{},"name":{},"text":{"522":{},"525":{}},"component":{}}],["mount",{"_index":1601,"title":{},"name":{},"text":{"25":{},"50":{},"56":{},"162":{},"514":{},"541":{}},"component":{}}],["mount(source='/config",{"_index":2619,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mount(source='local_path_to_env_fold",{"_index":2532,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mountpath",{"_index":3687,"title":{},"name":{},"text":{"162":{}},"component":{}}],["mounts=[mount(sourc",{"_index":2618,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mounts=[mount(source='local_path_to_project_fold",{"_index":2529,"title":{},"name":{},"text":{"56":{}},"component":{}}],["mous",{"_index":1284,"title":{"94-2":{}},"name":{},"text":{"15":{},"16":{},"36":{},"78":{},"85":{},"94":{}},"component":{}}],["mouse’",{"_index":1286,"title":{},"name":{},"text":{"15":{},"16":{},"78":{}},"component":{}}],["move",{"_index":116,"title":{"442":{},"468":{},"540-1":{}},"name":{},"text":{"1":{},"5":{},"7":{},"13":{},"21":{},"25":{},"27":{},"91":{},"94":{},"105":{},"162":{},"202":{},"210":{},"235":{},"246":{},"299":{},"312":{},"381":{},"386":{},"387":{},"389":{},"404":{},"409":{},"422":{},"441":{},"442":{},"448":{},"458":{},"461":{},"464":{},"468":{},"477":{},"478":{},"488":{},"499":{},"500":{},"506":{},"509":{},"540":{},"541":{}},"component":{}}],["movefil",{"_index":6509,"title":{},"name":{"468":{}},"text":{},"component":{}}],["movement",{"_index":2919,"title":{},"name":{},"text":{"82":{}},"component":{}}],["mozilla.github.io",{"_index":5443,"title":{},"name":{},"text":{"270":{}},"component":{}}],["mpp",{"_index":4326,"title":{},"name":{},"text":{"228":{}},"component":{}}],["mqtt",{"_index":2985,"title":{},"name":{},"text":{"87":{}},"component":{}}],["ms",{"_index":796,"title":{"129":{},"130":{},"470":{},"154-7":{},"154-8":{},"154-10":{},"154-11":{}},"name":{},"text":{"7":{},"25":{},"62":{},"65":{},"71":{},"76":{},"78":{},"130":{},"154":{},"160":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"186":{},"198":{},"211":{},"235":{},"275":{},"322":{},"439":{},"470":{},"480":{},"497":{},"502":{},"511":{}},"component":{}}],["msg",{"_index":6274,"title":{},"name":{},"text":{"384":{}},"component":{}}],["msgbox",{"_index":6514,"title":{"469":{}},"name":{},"text":{"469":{}},"component":{}}],["msgboxinfo",{"_index":6515,"title":{},"name":{"469":{}},"text":{},"component":{}}],["mssql",{"_index":3262,"title":{},"name":{"129":{}},"text":{"470":{}},"component":{}}],["mssqlbulkload",{"_index":6517,"title":{},"name":{"470":{}},"text":{},"component":{}}],["mssqlnativ",{"_index":3266,"title":{},"name":{"130":{}},"text":{},"component":{}}],["mssqlserver",{"_index":3288,"title":{},"name":{},"text":{"130":{}},"component":{}}],["much",{"_index":418,"title":{},"name":{},"text":{"4":{},"9":{},"26":{},"50":{},"151":{},"152":{},"234":{},"270":{},"299":{},"389":{},"395":{},"433":{},"528":{}},"component":{}}],["multi",{"_index":890,"title":{},"name":{},"text":{"7":{},"50":{},"82":{},"87":{},"277":{},"278":{},"292":{},"298":{},"537":{},"541":{}},"component":{}}],["multicommand",{"_index":6348,"title":{},"name":{},"text":{"431":{}},"component":{}}],["multilin",{"_index":5727,"title":{},"name":{},"text":{"298":{},"316":{}},"component":{}}],["multilingu",{"_index":5216,"title":{},"name":{},"text":{"247":{}},"component":{}}],["multilp",{"_index":6617,"title":{},"name":{},"text":{"508":{}},"component":{}}],["multimerg",{"_index":5697,"title":{},"name":{"293":{}},"text":{},"component":{}}],["multinomi",{"_index":3012,"title":{},"name":{},"text":{"87":{}},"component":{}}],["multipart",{"_index":5425,"title":{},"name":{},"text":{"264":{}},"component":{}}],["multipl",{"_index":361,"title":{"57-1":{}},"name":{},"text":{"2":{},"5":{},"7":{},"11":{},"29":{},"42":{},"52":{},"55":{},"56":{},"57":{},"65":{},"81":{},"82":{},"83":{},"91":{},"94":{},"98":{},"105":{},"147":{},"152":{},"154":{},"158":{},"169":{},"177":{},"205":{},"214":{},"217":{},"220":{},"221":{},"222":{},"223":{},"229":{},"233":{},"247":{},"248":{},"250":{},"270":{},"276":{},"280":{},"292":{},"293":{},"298":{},"305":{},"309":{},"314":{},"328":{},"332":{},"333":{},"334":{},"338":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"352":{},"356":{},"363":{},"364":{},"366":{},"367":{},"378":{},"383":{},"429":{},"433":{},"461":{},"466":{},"487":{},"488":{},"493":{},"510":{},"520":{},"528":{},"530":{}},"component":{}}],["multipli",{"_index":4085,"title":{},"name":{},"text":{"205":{},"247":{},"366":{}},"component":{}}],["multitud",{"_index":6319,"title":{},"name":{},"text":{"428":{},"430":{}},"component":{}}],["multiway",{"_index":2345,"title":{"293":{}},"name":{},"text":{"52":{},"81":{},"86":{},"293":{}},"component":{}}],["music",{"_index":4547,"title":{},"name":{},"text":{"241":{}},"component":{}}],["mv",{"_index":7153,"title":{},"name":{},"text":{"540":{}},"component":{}}],["mvel",{"_index":5869,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["mvn",{"_index":6827,"title":{},"name":{},"text":{"527":{},"531":{},"533":{},"537":{},"538":{},"541":{},"546":{}},"component":{}}],["my/folder/custom",{"_index":5769,"title":{},"name":{},"text":{"305":{}},"component":{}}],["my/path/to/location:/fil",{"_index":2306,"title":{},"name":{},"text":{"50":{}},"component":{}}],["my/project/home/pipeline.hpl",{"_index":3877,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["my_lookup_t",{"_index":4285,"title":{},"name":{},"text":{"222":{}},"component":{}}],["my_paramet",{"_index":5700,"title":{},"name":{},"text":{"294":{}},"component":{}}],["my_system_properti",{"_index":759,"title":{},"name":{},"text":{"7":{}},"component":{}}],["my_system_property=somevalu",{"_index":765,"title":{},"name":{},"text":{"7":{}},"component":{}}],["my_token",{"_index":6136,"title":{},"name":{},"text":{"368":{}},"component":{}}],["my_vari",{"_index":5699,"title":{},"name":{},"text":{"294":{}},"component":{}}],["mydat",{"_index":5447,"title":{},"name":{},"text":{"270":{}},"component":{}}],["mydata",{"_index":5529,"title":{},"name":{},"text":{"273":{}},"component":{}}],["mydatetim",{"_index":5449,"title":{},"name":{},"text":{"270":{}},"component":{}}],["myenviron",{"_index":767,"title":{},"name":{},"text":{"7":{}},"component":{}}],["myid",{"_index":6049,"title":{},"name":{},"text":{"363":{}},"component":{}}],["mypassword",{"_index":1341,"title":{},"name":{},"text":{"19":{}},"component":{}}],["mypassword222",{"_index":3487,"title":{},"name":{},"text":{"157":{}},"component":{}}],["mypipeline(parameter1",{"_index":657,"title":{},"name":{},"text":{"7":{}},"component":{}}],["mysql",{"_index":604,"title":{"131":{},"471":{},"472":{}},"name":{"131":{}},"text":{"5":{},"9":{},"50":{},"71":{},"113":{},"121":{},"127":{},"131":{},"206":{},"291":{},"395":{},"471":{},"472":{}},"component":{}}],["mysqlbulkfil",{"_index":6525,"title":{},"name":{"471":{}},"text":{},"component":{}}],["mysqlbulkload",{"_index":6529,"title":{},"name":{"472":{}},"text":{},"component":{}}],["myteststr",{"_index":5446,"title":{},"name":{},"text":{"270":{}},"component":{}}],["myvar",{"_index":4631,"title":{},"name":{},"text":{"246":{},"270":{}},"component":{}}],["myvari",{"_index":694,"title":{},"name":{},"text":{"7":{},"258":{}},"component":{}}],["n",{"_index":779,"title":{"247-115":{}},"name":{},"text":{"7":{},"24":{},"36":{},"41":{},"42":{},"81":{},"82":{},"103":{},"151":{},"178":{},"179":{},"212":{},"220":{},"233":{},"240":{},"246":{},"247":{},"262":{},"268":{},"270":{},"273":{},"279":{},"292":{},"311":{},"316":{},"317":{},"338":{},"360":{},"364":{},"366":{},"367":{},"368":{},"389":{}},"component":{}}],["n(\"10",{"_index":5004,"title":{},"name":{},"text":{"247":{}},"component":{}}],["n(\"abc",{"_index":5006,"title":{},"name":{},"text":{"247":{}},"component":{}}],["n(true",{"_index":5005,"title":{},"name":{},"text":{"247":{}},"component":{}}],["n+1",{"_index":2921,"title":{},"name":{},"text":{"82":{}},"component":{}}],["n/a",{"_index":1641,"title":{},"name":{},"text":{"27":{},"292":{}},"component":{}}],["n1",{"_index":3808,"title":{},"name":{},"text":{"165":{}},"component":{}}],["na",{"_index":4677,"title":{"247-69":{}},"name":{},"text":{"247":{}},"component":{}}],["nagio",{"_index":6557,"title":{"485":{}},"name":{},"text":{"485":{}},"component":{}}],["naiv",{"_index":3010,"title":{},"name":{},"text":{"87":{},"247":{}},"component":{}}],["name",{"_index":626,"title":{"255":{},"257":{},"9-2":{},"9-5":{},"55-6":{},"55-12":{},"270-15":{},"395-3":{},"531-5":{},"532-4":{},"536-1":{}},"name":{"395":{}},"text":{"7":{},"8":{},"9":{},"11":{},"22":{},"23":{},"24":{},"25":{},"27":{},"29":{},"32":{},"33":{},"34":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"76":{},"77":{},"78":{},"81":{},"82":{},"83":{},"85":{},"86":{},"90":{},"91":{},"92":{},"93":{},"95":{},"98":{},"99":{},"103":{},"104":{},"105":{},"106":{},"114":{},"130":{},"133":{},"150":{},"151":{},"152":{},"153":{},"154":{},"156":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"283":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"300":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"328":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"389":{},"395":{},"400":{},"431":{},"432":{},"434":{},"435":{},"436":{},"437":{},"438":{},"439":{},"440":{},"441":{},"442":{},"443":{},"444":{},"445":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"453":{},"454":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"473":{},"474":{},"475":{},"476":{},"477":{},"478":{},"479":{},"480":{},"481":{},"483":{},"484":{},"485":{},"486":{},"487":{},"488":{},"489":{},"490":{},"491":{},"492":{},"493":{},"495":{},"496":{},"497":{},"498":{},"499":{},"500":{},"501":{},"502":{},"503":{},"504":{},"505":{},"506":{},"507":{},"508":{},"509":{},"510":{},"511":{},"512":{},"513":{},"514":{},"520":{},"525":{},"527":{},"529":{},"530":{},"531":{},"532":{},"533":{},"536":{},"537":{},"538":{},"544":{}},"component":{}}],["name\",\"filename\":\"/path/filename.hpl\",\"id\":\"df84cbc2",{"_index":1789,"title":{},"name":{},"text":{"37":{}},"component":{}}],["name\":\"pipelin",{"_index":1788,"title":{},"name":{},"text":{"37":{}},"component":{}}],["name(",{"_index":3424,"title":{},"name":{},"text":{"153":{},"243":{},"305":{},"309":{},"367":{},"461":{}},"component":{}}],["name/ip",{"_index":6478,"title":{},"name":{},"text":{"461":{},"462":{},"463":{},"480":{},"485":{},"497":{}},"component":{}}],["name/relationship",{"_index":5921,"title":{},"name":{},"text":{"328":{},"332":{},"333":{},"334":{}},"component":{}}],["name/transact",{"_index":5768,"title":{},"name":{},"text":{"305":{}},"component":{}}],["name/valu",{"_index":6253,"title":{},"name":{},"text":{"381":{}},"component":{}}],["name1}\"},{\"nam",{"_index":5645,"title":{},"name":{},"text":{"290":{}},"component":{}}],["name2",{"_index":5646,"title":{},"name":{},"text":{"290":{}},"component":{}}],["name3",{"_index":5647,"title":{},"name":{},"text":{"290":{}},"component":{}}],["name:column",{"_index":5920,"title":{},"name":{},"text":{"328":{},"332":{},"333":{},"334":{}},"component":{}}],["name<n",{"_index":3364,"title":{},"name":{},"text":{"151":{},"389":{}},"component":{}}],["name].[field",{"_index":5626,"title":{},"name":{},"text":{"287":{}},"component":{}}],["name_{sys|hhmmss_mmddyyyy|}_#idfile#.mail",{"_index":6495,"title":{},"name":{},"text":{"464":{}},"component":{}}],["namedclust",{"_index":7239,"title":{},"name":{},"text":{"542":{}},"component":{}}],["namedcluster.getnam",{"_index":7242,"title":{},"name":{},"text":{"542":{}},"component":{}}],["namefield",{"_index":6149,"title":{},"name":{},"text":{"372":{}},"component":{}}],["namefield).setvalue(outputrow",{"_index":6168,"title":{},"name":{},"text":{"372":{}},"component":{}}],["nameid",{"_index":6046,"title":{},"name":{},"text":{"363":{}},"component":{}}],["namespac",{"_index":3566,"title":{},"name":{},"text":{"160":{},"162":{},"183":{},"185":{},"186":{},"187":{},"250":{},"381":{}},"component":{}}],["namewithmiddl",{"_index":4550,"title":{},"name":{},"text":{"241":{}},"component":{}}],["nation",{"_index":4552,"title":{},"name":{},"text":{"241":{},"354":{}},"component":{}}],["nativ",{"_index":75,"title":{"130":{},"130-4":{}},"name":{"169":{},"170":{},"510":{},"511":{}},"text":{"1":{},"2":{},"19":{},"20":{},"22":{},"27":{},"48":{},"129":{},"130":{},"158":{},"161":{},"164":{},"168":{},"171":{},"220":{},"373":{},"418":{},"419":{},"470":{},"518":{}},"component":{}}],["native.encodingutf",{"_index":2118,"title":{},"name":{},"text":{"42":{}},"component":{}}],["nativecodeload",{"_index":3626,"title":{},"name":{},"text":{"161":{}},"component":{}}],["nativeplugin",{"_index":6955,"title":{},"name":{},"text":{"530":{}},"component":{}}],["natur",{"_index":30,"title":{},"name":{},"text":{"1":{},"19":{},"44":{},"52":{},"163":{},"167":{},"204":{},"227":{},"239":{},"241":{},"247":{},"295":{},"412":{},"418":{},"541":{}},"component":{}}],["navig",{"_index":1458,"title":{"29-3":{},"29-9":{}},"name":{},"text":{"22":{},"24":{},"29":{},"36":{},"78":{},"103":{},"247":{},"273":{},"372":{},"457":{},"533":{}},"component":{}}],["nb",{"_index":2863,"title":{},"name":{},"text":{"81":{}},"component":{}}],["ncsa",{"_index":6559,"title":{},"name":{},"text":{"485":{}},"component":{}}],["near",{"_index":1961,"title":{},"name":{},"text":{"41":{},"275":{},"276":{}},"component":{}}],["nearest",{"_index":2677,"title":{},"name":{},"text":{"65":{},"205":{},"247":{},"262":{}},"component":{}}],["neat",{"_index":6351,"title":{},"name":{},"text":{"432":{}},"component":{}}],["necessari",{"_index":258,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"50":{},"53":{},"54":{},"81":{},"82":{},"117":{},"130":{},"161":{},"168":{},"247":{},"264":{},"284":{},"319":{},"344":{},"481":{},"530":{}},"component":{}}],["necessarili",{"_index":2436,"title":{},"name":{},"text":{"55":{},"56":{},"85":{},"542":{}},"component":{}}],["need",{"_index":189,"title":{"83-1":{},"538-9":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"14":{},"15":{},"16":{},"19":{},"20":{},"21":{},"24":{},"25":{},"29":{},"36":{},"39":{},"43":{},"46":{},"50":{},"52":{},"53":{},"55":{},"56":{},"57":{},"64":{},"71":{},"75":{},"78":{},"81":{},"82":{},"88":{},"91":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"105":{},"107":{},"131":{},"151":{},"154":{},"156":{},"157":{},"158":{},"159":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"174":{},"176":{},"178":{},"179":{},"180":{},"186":{},"187":{},"189":{},"194":{},"196":{},"197":{},"203":{},"204":{},"205":{},"206":{},"216":{},"220":{},"227":{},"230":{},"232":{},"234":{},"235":{},"236":{},"238":{},"243":{},"246":{},"247":{},"248":{},"251":{},"254":{},"258":{},"259":{},"262":{},"263":{},"273":{},"275":{},"276":{},"285":{},"286":{},"287":{},"291":{},"295":{},"298":{},"309":{},"314":{},"319":{},"328":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"344":{},"346":{},"347":{},"350":{},"355":{},"361":{},"363":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"378":{},"381":{},"382":{},"389":{},"390":{},"394":{},"395":{},"397":{},"400":{},"405":{},"420":{},"425":{},"429":{},"431":{},"433":{},"453":{},"466":{},"467":{},"485":{},"489":{},"490":{},"494":{},"513":{},"514":{},"527":{},"528":{},"530":{},"531":{},"532":{},"533":{},"536":{},"538":{},"540":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["needleman",{"_index":5320,"title":{},"name":{},"text":{"248":{}},"component":{}}],["needlemanwunsch",{"_index":4167,"title":{},"name":{},"text":{"205":{}},"component":{}}],["neg",{"_index":3452,"title":{},"name":{},"text":{"154":{},"235":{},"247":{},"248":{},"292":{},"318":{},"366":{}},"component":{}}],["neo4j",{"_index":58,"title":{"32":{},"154":{},"155":{},"156":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"432":{},"433":{},"473":{},"474":{},"475":{},"476":{},"10-3":{},"62-6":{},"75-13":{},"154-5":{},"433-5":{}},"name":{"32":{},"154":{},"155":{},"156":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"433":{},"473":{},"474":{},"475":{},"476":{}},"text":{"1":{},"7":{},"9":{},"10":{},"19":{},"20":{},"24":{},"32":{},"35":{},"36":{},"62":{},"64":{},"75":{},"81":{},"86":{},"88":{},"92":{},"96":{},"154":{},"155":{},"156":{},"163":{},"165":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"391":{},"413":{},"418":{},"431":{},"432":{},"433":{},"473":{},"474":{},"475":{},"476":{}},"component":{}}],["neo4j+",{"_index":3441,"title":{},"name":{},"text":{"154":{}},"component":{}}],["neo4j.io",{"_index":3442,"title":{},"name":{},"text":{"154":{}},"component":{}}],["neo4j/beer",{"_index":6362,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j/cleanup",{"_index":6380,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j/neo4j",{"_index":6368,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j_connectionneo4j",{"_index":2112,"title":{},"name":{},"text":{"42":{}},"component":{}}],["neo4j_hostnam",{"_index":6358,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j_logging_connect",{"_index":939,"title":{},"name":{},"text":{"7":{},"32":{},"296":{},"432":{}},"component":{}}],["neo4j_password",{"_index":6361,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j_port",{"_index":6359,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j_usernam",{"_index":6360,"title":{},"name":{},"text":{"433":{}},"component":{}}],["neo4j’",{"_index":5706,"title":{},"name":{},"text":{"295":{}},"component":{}}],["nest",{"_index":698,"title":{},"name":{},"text":{"7":{},"52":{},"86":{},"233":{},"246":{},"258":{},"273":{},"309":{},"316":{},"344":{},"381":{}},"component":{}}],["net",{"_index":5007,"title":{},"name":{},"text":{"247":{}},"component":{}}],["netezza",{"_index":3306,"title":{"132":{}},"name":{"132":{}},"text":{},"component":{}}],["netstat",{"_index":3299,"title":{},"name":{},"text":{"130":{}},"component":{}}],["netti",{"_index":3218,"title":{},"name":{},"text":{"117":{}},"component":{}}],["network",{"_index":1152,"title":{},"name":{},"text":{"9":{},"84":{},"87":{},"130":{},"154":{},"165":{},"166":{},"167":{},"168":{},"298":{},"396":{},"433":{}},"component":{}}],["network_mode=\"bridg",{"_index":2585,"title":{},"name":{},"text":{"56":{}},"component":{}}],["networkday",{"_index":4652,"title":{"247-35":{}},"name":{},"text":{"247":{}},"component":{}}],["networkdays([field1],[field2",{"_index":4835,"title":{},"name":{},"text":{"247":{}},"component":{}}],["networkdays([field1],[field2],[field3",{"_index":4839,"title":{},"name":{},"text":{"247":{}},"component":{}}],["networkdays(start_d",{"_index":4834,"title":{},"name":{},"text":{"247":{}},"component":{}}],["neurolog",{"_index":4493,"title":{},"name":{},"text":{"241":{}},"component":{}}],["never",{"_index":2354,"title":{},"name":{},"text":{"52":{},"56":{},"154":{},"162":{},"262":{},"268":{},"278":{},"283":{},"299":{},"322":{},"366":{},"389":{},"514":{},"520":{},"542":{}},"component":{}}],["new",{"_index":398,"title":{"53-2":{},"54-2":{},"270-12":{},"527-2":{},"528-12":{},"530-6":{},"538-11":{}},"name":{},"text":{"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"15":{},"16":{},"17":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"36":{},"41":{},"46":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"76":{},"78":{},"81":{},"83":{},"85":{},"87":{},"88":{},"90":{},"91":{},"93":{},"94":{},"97":{},"98":{},"103":{},"104":{},"106":{},"109":{},"129":{},"130":{},"147":{},"150":{},"152":{},"154":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"170":{},"171":{},"173":{},"174":{},"177":{},"178":{},"179":{},"183":{},"186":{},"195":{},"200":{},"202":{},"216":{},"217":{},"222":{},"227":{},"230":{},"232":{},"233":{},"235":{},"247":{},"258":{},"261":{},"262":{},"268":{},"270":{},"274":{},"278":{},"285":{},"292":{},"299":{},"309":{},"316":{},"317":{},"323":{},"324":{},"325":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"338":{},"344":{},"349":{},"350":{},"352":{},"354":{},"355":{},"357":{},"360":{},"364":{},"366":{},"367":{},"368":{},"372":{},"373":{},"374":{},"381":{},"388":{},"389":{},"397":{},"400":{},"422":{},"433":{},"435":{},"437":{},"439":{},"441":{},"453":{},"464":{},"465":{},"468":{},"470":{},"471":{},"475":{},"481":{},"483":{},"489":{},"492":{},"498":{},"503":{},"504":{},"508":{},"511":{},"512":{},"513":{},"514":{},"519":{},"527":{},"528":{},"530":{},"533":{},"534":{},"538":{},"540":{},"541":{},"542":{},"544":{}},"component":{}}],["new_count",{"_index":4734,"title":{},"name":{},"text":{"247":{}},"component":{}}],["new_field",{"_index":5490,"title":{},"name":{},"text":{"270":{}},"component":{}}],["newdatestr",{"_index":6437,"title":{},"name":{},"text":{"453":{}},"component":{}}],["newer",{"_index":3085,"title":{},"name":{},"text":{"91":{},"133":{},"218":{}},"component":{}}],["newli",{"_index":500,"title":{},"name":{},"text":{"5":{},"83":{},"158":{},"388":{}},"component":{}}],["newlin",{"_index":1105,"title":{},"name":{},"text":{"9":{},"222":{},"298":{},"395":{}},"component":{}}],["next",{"_index":236,"title":{"18":{},"53-5":{},"54-5":{},"84-3":{},"105-4":{},"158-3":{}},"name":{"18":{}},"text":{"2":{},"5":{},"9":{},"16":{},"21":{},"22":{},"30":{},"36":{},"53":{},"56":{},"78":{},"82":{},"85":{},"102":{},"103":{},"158":{},"167":{},"171":{},"203":{},"212":{},"218":{},"220":{},"222":{},"224":{},"234":{},"242":{},"250":{},"256":{},"270":{},"273":{},"275":{},"280":{},"289":{},"291":{},"292":{},"294":{},"313":{},"314":{},"319":{},"344":{},"352":{},"366":{},"377":{},"397":{},"453":{},"466":{},"468":{},"472":{},"482":{},"483":{},"488":{},"499":{},"508":{},"512":{},"514":{},"536":{},"538":{}},"component":{}}],["nextel",{"_index":4557,"title":{},"name":{},"text":{"241":{}},"component":{}}],["nice",{"_index":1164,"title":{},"name":{},"text":{"9":{},"392":{}},"component":{}}],["nightli",{"_index":1127,"title":{},"name":{},"text":{"9":{},"88":{},"395":{}},"component":{}}],["nin",{"_index":5661,"title":{},"name":{},"text":{"291":{}},"component":{}}],["nine",{"_index":6077,"title":{},"name":{},"text":{"366":{}},"component":{}}],["nio",{"_index":1560,"title":{},"name":{},"text":{"25":{},"220":{}},"component":{}}],["nl",{"_index":4601,"title":{},"name":{},"text":{"241":{}},"component":{}}],["nl/dutch",{"_index":6235,"title":{},"name":{},"text":{"375":{}},"component":{}}],["nl_nl",{"_index":6896,"title":{},"name":{},"text":{"528":{}},"component":{}}],["nname",{"_index":5559,"title":{},"name":{},"text":{"275":{}},"component":{}}],["noddy,puppet,\"noddi",{"_index":5689,"title":{},"name":{},"text":{"292":{}},"component":{}}],["node",{"_index":898,"title":{"160-2":{},"161-3":{}},"name":{},"text":{"7":{},"64":{},"153":{},"155":{},"160":{},"161":{},"165":{},"168":{},"170":{},"220":{},"250":{},"270":{},"276":{},"277":{},"295":{},"297":{},"298":{},"299":{},"300":{},"382":{},"432":{},"433":{},"474":{},"476":{}},"component":{}}],["node/relationship",{"_index":5708,"title":{},"name":{},"text":{"295":{},"300":{},"433":{}},"component":{}}],["nodes/contain",{"_index":3668,"title":{},"name":{},"text":{"162":{}},"component":{}}],["nodes/sampl",{"_index":2217,"title":{},"name":{},"text":{"46":{}},"component":{}}],["nohead",{"_index":3509,"title":{},"name":{},"text":{"158":{}},"component":{}}],["nomin",{"_index":5656,"title":{},"name":{},"text":{"291":{}},"component":{}}],["non",{"_index":72,"title":{"388-4":{}},"name":{},"text":{"1":{},"7":{},"19":{},"48":{},"61":{},"66":{},"82":{},"159":{},"163":{},"166":{},"205":{},"208":{},"214":{},"216":{},"219":{},"235":{},"247":{},"262":{},"269":{},"279":{},"287":{},"326":{},"338":{},"360":{},"366":{},"375":{},"388":{},"389":{},"418":{},"419":{},"528":{},"538":{},"541":{},"542":{}},"component":{}}],["none",{"_index":1599,"title":{},"name":{},"text":{"25":{},"32":{},"36":{},"38":{},"39":{},"42":{},"56":{},"60":{},"63":{},"70":{},"71":{},"72":{},"81":{},"90":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"150":{},"152":{},"165":{},"169":{},"247":{},"250":{},"258":{},"277":{},"279":{},"295":{},"358":{},"389":{},"464":{},"488":{},"503":{},"514":{}},"component":{}}],["none/al",{"_index":2652,"title":{},"name":{},"text":{"60":{},"63":{},"66":{},"69":{},"70":{},"74":{}},"component":{}}],["nonprint",{"_index":5158,"title":{},"name":{},"text":{"247":{}},"component":{}}],["nonstrict",{"_index":3180,"title":{},"name":{},"text":{"107":{}},"component":{}}],["normal",{"_index":1032,"title":{"38-5":{},"152-3":{}},"name":{},"text":{"8":{},"9":{},"42":{},"76":{},"154":{},"172":{},"244":{},"247":{},"280":{},"298":{},"320":{},"323":{},"338":{},"354":{},"394":{}},"component":{}}],["normalis",{"_index":2262,"title":{"323":{}},"name":{},"text":{"50":{},"81":{},"86":{},"163":{},"323":{}},"component":{}}],["nosql",{"_index":1446,"title":{},"name":{},"text":{"20":{},"54":{},"64":{},"67":{},"73":{},"92":{},"429":{}},"component":{}}],["not(1/0",{"_index":4957,"title":{},"name":{},"text":{"247":{}},"component":{}}],["not(fals",{"_index":4955,"title":{},"name":{},"text":{"247":{}},"component":{}}],["not(tru",{"_index":4956,"title":{},"name":{},"text":{"247":{}},"component":{}}],["not_nul",{"_index":6531,"title":{},"name":{},"text":{"474":{}},"component":{}}],["notabl",{"_index":5698,"title":{"294-3":{},"297-6":{},"299-5":{}},"name":{},"text":{},"component":{}}],["notat",{"_index":2918,"title":{},"name":{},"text":{"82":{},"235":{},"273":{},"292":{},"366":{}},"component":{}}],["notation_declar",{"_index":6260,"title":{},"name":{},"text":{"381":{}},"component":{}}],["note",{"_index":708,"title":{"186-7":{},"233-8":{},"239-4":{},"247-5":{}},"name":{},"text":{"7":{},"8":{},"9":{},"16":{},"24":{},"27":{},"36":{},"40":{},"43":{},"53":{},"76":{},"83":{},"90":{},"99":{},"150":{},"152":{},"153":{},"154":{},"157":{},"162":{},"163":{},"165":{},"168":{},"169":{},"173":{},"174":{},"175":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"205":{},"212":{},"214":{},"216":{},"220":{},"222":{},"224":{},"227":{},"234":{},"247":{},"250":{},"258":{},"261":{},"275":{},"277":{},"287":{},"289":{},"291":{},"294":{},"295":{},"299":{},"304":{},"305":{},"309":{},"320":{},"336":{},"337":{},"338":{},"344":{},"352":{},"355":{},"359":{},"363":{},"366":{},"367":{},"377":{},"378":{},"389":{},"396":{},"435":{},"437":{},"438":{},"439":{},"440":{},"449":{},"451":{},"453":{},"454":{},"460":{},"461":{},"462":{},"463":{},"466":{},"468":{},"477":{},"478":{},"479":{},"481":{},"483":{},"487":{},"488":{},"489":{},"490":{},"494":{},"506":{},"507":{},"508":{},"510":{},"514":{},"527":{},"531":{},"532":{},"533":{},"537":{},"544":{}},"component":{}}],["noteworthi",{"_index":3477,"title":{"157-3":{}},"name":{},"text":{},"component":{}}],["noth",{"_index":1712,"title":{"229":{}},"name":{},"text":{"37":{},"38":{},"41":{},"75":{},"81":{},"83":{},"85":{},"86":{},"104":{},"227":{},"230":{},"268":{},"358":{},"371":{},"464":{},"468":{},"471":{},"477":{},"478":{},"488":{},"499":{},"508":{},"542":{}},"component":{}}],["notic",{"_index":1544,"title":{},"name":{},"text":{"25":{},"55":{},"103":{},"130":{},"158":{},"163":{},"205":{},"222":{},"273":{},"337":{},"513":{},"519":{},"533":{},"534":{},"537":{},"542":{}},"component":{}}],["notif",{"_index":2948,"title":{},"name":{},"text":{"83":{},"103":{}},"component":{}}],["notifi",{"_index":2844,"title":{},"name":{},"text":{"79":{}},"component":{}}],["noto",{"_index":1625,"title":{},"name":{},"text":{"27":{}},"component":{}}],["nought",{"_index":6899,"title":{},"name":{},"text":{"528":{}},"component":{}}],["noun",{"_index":4521,"title":{},"name":{},"text":{"241":{}},"component":{}}],["now",{"_index":1259,"title":{"247-36":{}},"name":{},"text":{"14":{},"15":{},"16":{},"18":{},"25":{},"42":{},"50":{},"53":{},"54":{},"55":{},"56":{},"64":{},"78":{},"82":{},"83":{},"94":{},"104":{},"158":{},"161":{},"162":{},"198":{},"199":{},"247":{},"273":{},"513":{},"519":{},"527":{},"528":{},"532":{},"533":{},"537":{},"538":{},"541":{},"544":{}},"component":{}}],["now()>date(2006;1;3",{"_index":4844,"title":{},"name":{},"text":{"247":{}},"component":{}}],["now’",{"_index":2465,"title":{},"name":{},"text":{"55":{}},"component":{}}],["nper",{"_index":4653,"title":{"247-37":{}},"name":{},"text":{"247":{}},"component":{}}],["nper([field1]/12",{"_index":4850,"title":{},"name":{},"text":{"247":{}},"component":{}}],["nper(rate,pmt,pv,[fv],[typ",{"_index":4849,"title":{},"name":{},"text":{"247":{}},"component":{}}],["npv",{"_index":4698,"title":{"247-116":{}},"name":{},"text":{},"component":{}}],["npv([field1",{"_index":5010,"title":{},"name":{},"text":{"247":{}},"component":{}}],["npv(rate,value1,[value2",{"_index":5009,"title":{},"name":{},"text":{"247":{}},"component":{}}],["nr",{"_index":2848,"title":{},"name":{},"text":{"79":{},"185":{},"212":{},"234":{},"256":{},"274":{},"335":{},"367":{},"368":{},"380":{},"448":{},"450":{},"453":{},"462":{},"477":{},"478":{},"480":{}},"component":{}}],["ns",{"_index":5972,"title":{},"name":{},"text":{"341":{}},"component":{}}],["nsca",{"_index":6561,"title":{},"name":{},"text":{"485":{}},"component":{}}],["nsdqsymbol",{"_index":4581,"title":{},"name":{},"text":{"241":{}},"component":{}}],["nth",{"_index":2920,"title":{},"name":{},"text":{"82":{},"247":{}},"component":{}}],["nuanc",{"_index":4311,"title":{},"name":{},"text":{"227":{}},"component":{}}],["null",{"_index":661,"title":{"266":{},"301":{}},"name":{},"text":{"7":{},"56":{},"61":{},"81":{},"86":{},"90":{},"97":{},"150":{},"152":{},"163":{},"165":{},"178":{},"205":{},"213":{},"214":{},"217":{},"222":{},"226":{},"227":{},"230":{},"233":{},"234":{},"246":{},"247":{},"250":{},"262":{},"266":{},"268":{},"271":{},"273":{},"289":{},"290":{},"292":{},"297":{},"298":{},"299":{},"301":{},"313":{},"316":{},"319":{},"337":{},"342":{},"346":{},"359":{},"360":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"382":{},"383":{},"389":{},"470":{},"481":{},"490":{},"542":{}},"component":{}}],["null(switch",{"_index":1390,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["null,i",{"_index":5642,"title":{},"name":{},"text":{"290":{}},"component":{}}],["null/default",{"_index":4282,"title":{},"name":{},"text":{"222":{}},"component":{}}],["nullabl",{"_index":3987,"title":{},"name":{},"text":{"185":{}},"component":{}}],["nullif",{"_index":5745,"title":{},"name":{"301":{}},"text":{"400":{}},"component":{}}],["num_char",{"_index":5229,"title":{},"name":{},"text":{"247":{}},"component":{}}],["num_digit",{"_index":5055,"title":{},"name":{},"text":{"247":{}},"component":{}}],["number",{"_index":143,"title":{"302":{},"354":{},"455":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"8":{},"10":{},"13":{},"15":{},"18":{},"19":{},"20":{},"24":{},"26":{},"27":{},"29":{},"30":{},"32":{},"35":{},"37":{},"41":{},"42":{},"50":{},"52":{},"53":{},"54":{},"55":{},"57":{},"61":{},"66":{},"68":{},"74":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"91":{},"92":{},"98":{},"105":{},"130":{},"151":{},"153":{},"154":{},"158":{},"159":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"172":{},"176":{},"178":{},"179":{},"184":{},"185":{},"186":{},"187":{},"198":{},"204":{},"205":{},"208":{},"212":{},"216":{},"217":{},"219":{},"220":{},"221":{},"222":{},"225":{},"227":{},"230":{},"232":{},"233":{},"234":{},"235":{},"238":{},"239":{},"241":{},"243":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"258":{},"259":{},"262":{},"263":{},"264":{},"266":{},"267":{},"268":{},"270":{},"272":{},"273":{},"274":{},"275":{},"277":{},"278":{},"279":{},"280":{},"283":{},"288":{},"289":{},"290":{},"291":{},"292":{},"298":{},"302":{},"303":{},"305":{},"308":{},"309":{},"310":{},"313":{},"314":{},"316":{},"317":{},"318":{},"319":{},"320":{},"322":{},"325":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"337":{},"338":{},"339":{},"344":{},"346":{},"347":{},"349":{},"352":{},"354":{},"360":{},"361":{},"363":{},"365":{},"366":{},"367":{},"368":{},"371":{},"372":{},"373":{},"374":{},"377":{},"378":{},"379":{},"380":{},"381":{},"383":{},"386":{},"389":{},"400":{},"402":{},"408":{},"427":{},"428":{},"430":{},"433":{},"436":{},"442":{},"448":{},"450":{},"453":{},"455":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"468":{},"477":{},"478":{},"480":{},"487":{},"488":{},"490":{},"491":{},"492":{},"500":{},"501":{},"506":{},"512":{},"514":{},"520":{},"527":{},"530":{},"533":{},"538":{}},"component":{}}],["number(6",{"_index":4178,"title":{},"name":{},"text":{"205":{}},"component":{}}],["number2",{"_index":5091,"title":{},"name":{},"text":{"247":{}},"component":{}}],["number:databasenam",{"_index":3309,"title":{},"name":{},"text":{"133":{}},"component":{}}],["number_field",{"_index":5193,"title":{},"name":{},"text":{"247":{}},"component":{}}],["numberbetween",{"_index":4556,"title":{},"name":{},"text":{"241":{}},"component":{}}],["numberformatexcept",{"_index":6180,"title":{},"name":{},"text":{"372":{}},"component":{}}],["numberrang",{"_index":5746,"title":{},"name":{"302":{}},"text":{},"component":{}}],["numbersequ",{"_index":5138,"title":{},"name":{},"text":{"247":{}},"component":{}}],["numbersequencelist",{"_index":4958,"title":{},"name":{},"text":{"247":{}},"component":{}}],["numer",{"_index":844,"title":{"270-13":{}},"name":{},"text":{"7":{},"216":{},"219":{},"220":{},"246":{},"247":{},"248":{},"250":{},"270":{},"273":{},"288":{},"302":{},"313":{},"316":{},"338":{},"358":{},"359":{},"366":{},"374":{},"381":{},"386":{},"400":{}},"component":{}}],["numlist",{"_index":6171,"title":{},"name":{},"text":{"372":{}},"component":{}}],["numlist.tostr",{"_index":6179,"title":{},"name":{},"text":{"372":{}},"component":{}}],["nummer",{"_index":2849,"title":{},"name":{},"text":{"79":{}},"component":{}}],["numwork",{"_index":3804,"title":{},"name":{},"text":{"165":{}},"component":{}}],["nvl",{"_index":4119,"title":{},"name":{},"text":{"205":{}},"component":{}}],["ny",{"_index":3369,"title":{},"name":{},"text":{"151":{},"158":{},"389":{}},"component":{}}],["nysesymbol",{"_index":4582,"title":{},"name":{},"text":{"241":{}},"component":{}}],["n’",{"_index":5018,"title":{},"name":{},"text":{"247":{}},"component":{}}],["n’(o",{"_index":5930,"title":{},"name":{},"text":{"331":{}},"component":{}}],["o",{"_index":1686,"title":{},"name":{},"text":{"36":{},"38":{},"40":{},"46":{},"247":{},"248":{}},"component":{}}],["o''clock",{"_index":6078,"title":{},"name":{},"text":{"366":{}},"component":{}}],["o'clock",{"_index":6080,"title":{},"name":{},"text":{"366":{}},"component":{}}],["o.e.j.s.servletcontexthandler@1a6df932{/,null,stopped},auto",{"_index":1979,"title":{},"name":{},"text":{"41":{}},"component":{}}],["o=0",{"_index":1365,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{},"83":{}},"component":{}}],["o=1",{"_index":2011,"title":{},"name":{},"text":{"41":{}},"component":{}}],["oauth",{"_index":3132,"title":{},"name":{},"text":{"99":{},"259":{}},"component":{}}],["oauth2.0",{"_index":3133,"title":{},"name":{},"text":{"99":{}},"component":{}}],["obey",{"_index":6301,"title":{},"name":{},"text":{"400":{}},"component":{}}],["obf",{"_index":2814,"title":{},"name":{},"text":{"77":{}},"component":{}}],["obf:1s3g1s3i1s3k1s3m",{"_index":2198,"title":{},"name":{},"text":{"44":{}},"component":{}}],["obf:1v8w1uh21z7k1ym71z7i1ugo1v9q,default",{"_index":2815,"title":{},"name":{},"text":{"77":{}},"component":{}}],["obfusc",{"_index":18,"title":{"77-1":{},"77-2":{},"77-3":{}},"name":{},"text":{"1":{},"19":{},"44":{},"77":{},"412":{},"418":{},"525":{}},"component":{}}],["object",{"_index":135,"title":{"53-1":{},"54-1":{},"270-9":{}},"name":{},"text":{"1":{},"7":{},"9":{},"13":{},"16":{},"19":{},"34":{},"36":{},"41":{},"42":{},"43":{},"53":{},"54":{},"64":{},"76":{},"78":{},"83":{},"90":{},"92":{},"95":{},"102":{},"103":{},"167":{},"205":{},"207":{},"220":{},"233":{},"235":{},"257":{},"270":{},"271":{},"274":{},"277":{},"286":{},"289":{},"324":{},"325":{},"328":{},"332":{},"333":{},"334":{},"337":{},"355":{},"372":{},"373":{},"389":{},"395":{},"401":{},"402":{},"408":{},"432":{},"453":{},"474":{},"476":{},"491":{},"513":{},"518":{},"519":{},"520":{},"522":{},"525":{},"529":{},"530":{},"531":{},"532":{},"544":{}},"component":{}}],["oblig",{"_index":4920,"title":{},"name":{},"text":{"247":{}},"component":{}}],["obtain",{"_index":2199,"title":{},"name":{},"text":{"46":{},"52":{},"221":{},"247":{},"271":{},"304":{},"360":{},"533":{}},"component":{}}],["obviou",{"_index":2722,"title":{},"name":{},"text":{"75":{},"220":{},"533":{}},"component":{}}],["obvious",{"_index":1132,"title":{},"name":{},"text":{"9":{},"30":{},"41":{},"76":{},"162":{},"372":{},"397":{},"525":{},"532":{},"544":{}},"component":{}}],["occupi",{"_index":5219,"title":{},"name":{},"text":{"247":{}},"component":{}}],["occur",{"_index":2843,"title":{},"name":{},"text":{"79":{},"85":{},"172":{},"181":{},"202":{},"222":{},"227":{},"234":{},"247":{},"273":{},"287":{},"291":{},"310":{},"311":{},"346":{},"366":{},"372":{},"376":{},"379":{},"432":{}},"component":{}}],["occur/#doc",{"_index":5657,"title":{},"name":{},"text":{"291":{}},"component":{}}],["occurr",{"_index":5287,"title":{},"name":{},"text":{"247":{},"295":{}},"component":{}}],["oct2dec",{"_index":4699,"title":{"247-117":{}},"name":{},"text":{},"component":{}}],["oct2dec(7777777533",{"_index":5015,"title":{},"name":{},"text":{"247":{}},"component":{}}],["oct2dec(numb",{"_index":5014,"title":{},"name":{},"text":{"247":{}},"component":{}}],["octal",{"_index":5013,"title":{},"name":{},"text":{"247":{},"346":{}},"component":{}}],["octet",{"_index":5828,"title":{},"name":{},"text":{"319":{}},"component":{}}],["octob",{"_index":4381,"title":{},"name":{},"text":{"234":{}},"component":{}}],["od",{"_index":4368,"title":{},"name":{},"text":{"234":{}},"component":{}}],["odd",{"_index":4103,"title":{"247-118":{}},"name":{},"text":{"205":{},"247":{}},"component":{}}],["odd(0",{"_index":5019,"title":{},"name":{},"text":{"247":{}},"component":{}}],["odd(0.3",{"_index":5022,"title":{},"name":{},"text":{"247":{}},"component":{}}],["odd(2",{"_index":5021,"title":{},"name":{},"text":{"247":{}},"component":{}}],["odd(5",{"_index":5020,"title":{},"name":{},"text":{"247":{}},"component":{}}],["odfdom",{"_index":4373,"title":{},"name":{},"text":{"234":{}},"component":{}}],["oem",{"_index":6521,"title":{},"name":{},"text":{"470":{}},"component":{}}],["offer",{"_index":343,"title":{},"name":{},"text":{"2":{},"22":{},"24":{},"27":{},"49":{},"50":{},"52":{},"53":{},"54":{},"55":{},"68":{},"76":{},"78":{},"90":{},"96":{},"150":{},"152":{},"389":{},"429":{},"432":{},"543":{}},"component":{}}],["offheap",{"_index":3634,"title":{},"name":{},"text":{"161":{}},"component":{}}],["offic",{"_index":4372,"title":{},"name":{},"text":{"234":{}},"component":{}}],["offici",{"_index":1256,"title":{},"name":{},"text":{"14":{},"514":{},"537":{},"540":{}},"component":{}}],["offset",{"_index":3974,"title":{},"name":{},"text":{"179":{},"186":{},"196":{},"235":{},"275":{}},"component":{}}],["oi0g",{"_index":3570,"title":{},"name":{},"text":{"160":{}},"component":{}}],["oid",{"_index":6587,"title":{},"name":{},"text":{"491":{}},"component":{}}],["ok",{"_index":529,"title":{},"name":{},"text":{"5":{},"42":{},"81":{},"85":{},"103":{},"104":{},"130":{},"287":{},"289":{},"291":{},"356":{},"377":{},"469":{},"485":{},"498":{},"527":{},"537":{}},"component":{}}],["okay",{"_index":4965,"title":{},"name":{},"text":{"247":{}},"component":{}}],["olap",{"_index":3203,"title":{},"name":{},"text":{"114":{},"213":{}},"component":{}}],["old",{"_index":2939,"title":{},"name":{},"text":{"83":{},"109":{},"131":{},"133":{},"154":{},"232":{},"246":{},"247":{},"278":{},"355":{},"377":{},"464":{},"529":{}},"component":{}}],["older",{"_index":3453,"title":{},"name":{},"text":{"154":{},"165":{},"377":{}},"component":{}}],["oldest",{"_index":4265,"title":{},"name":{},"text":{"221":{}},"component":{}}],["omit",{"_index":1938,"title":{},"name":{},"text":{"41":{},"50":{},"161":{},"178":{},"233":{},"235":{},"247":{},"273":{},"382":{},"514":{}},"component":{}}],["omitgroupchar",{"_index":5190,"title":{},"name":{},"text":{"247":{}},"component":{}}],["on",{"_index":34,"title":{},"name":{},"text":{"1":{},"5":{},"6":{},"7":{},"8":{},"9":{},"11":{},"13":{},"15":{},"16":{},"19":{},"23":{},"24":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"44":{},"50":{},"52":{},"55":{},"56":{},"57":{},"61":{},"64":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"91":{},"92":{},"93":{},"94":{},"103":{},"104":{},"105":{},"151":{},"153":{},"154":{},"157":{},"158":{},"160":{},"161":{},"163":{},"164":{},"167":{},"169":{},"174":{},"176":{},"179":{},"181":{},"184":{},"186":{},"187":{},"196":{},"197":{},"198":{},"202":{},"203":{},"204":{},"205":{},"208":{},"209":{},"214":{},"216":{},"217":{},"220":{},"223":{},"225":{},"226":{},"227":{},"230":{},"232":{},"233":{},"235":{},"246":{},"247":{},"248":{},"250":{},"251":{},"259":{},"260":{},"261":{},"262":{},"264":{},"268":{},"269":{},"270":{},"273":{},"274":{},"275":{},"276":{},"277":{},"280":{},"285":{},"286":{},"287":{},"291":{},"292":{},"294":{},"297":{},"299":{},"303":{},"304":{},"309":{},"310":{},"314":{},"316":{},"321":{},"322":{},"323":{},"325":{},"331":{},"337":{},"338":{},"344":{},"345":{},"350":{},"352":{},"355":{},"359":{},"364":{},"366":{},"367":{},"371":{},"374":{},"375":{},"378":{},"379":{},"380":{},"382":{},"383":{},"384":{},"389":{},"391":{},"394":{},"397":{},"399":{},"400":{},"402":{},"404":{},"408":{},"412":{},"418":{},"422":{},"433":{},"437":{},"438":{},"440":{},"441":{},"442":{},"448":{},"461":{},"464":{},"466":{},"467":{},"468":{},"481":{},"487":{},"488":{},"489":{},"490":{},"493":{},"494":{},"498":{},"499":{},"503":{},"505":{},"506":{},"510":{},"514":{},"527":{},"528":{},"530":{},"533":{},"534":{},"542":{},"543":{},"544":{}},"component":{}}],["onc",{"_index":315,"title":{},"name":{},"text":{"2":{},"7":{},"25":{},"46":{},"56":{},"57":{},"78":{},"79":{},"83":{},"84":{},"98":{},"99":{},"100":{},"101":{},"154":{},"160":{},"162":{},"163":{},"164":{},"167":{},"171":{},"186":{},"198":{},"205":{},"207":{},"208":{},"216":{},"222":{},"232":{},"238":{},"246":{},"251":{},"258":{},"270":{},"273":{},"309":{},"324":{},"337":{},"338":{},"340":{},"359":{},"372":{},"374":{},"378":{},"465":{},"481":{},"483":{},"489":{},"490":{},"498":{},"500":{},"503":{},"512":{},"527":{},"528":{},"530":{},"533":{},"542":{}},"component":{}}],["onix",{"_index":4436,"title":{},"name":{},"text":{"241":{}},"component":{}}],["onlin",{"_index":4400,"title":{},"name":{},"text":{"235":{}},"component":{}}],["onto",{"_index":2371,"title":{},"name":{},"text":{"52":{},"222":{},"223":{},"230":{},"251":{},"270":{},"325":{},"533":{}},"component":{}}],["onward",{"_index":5520,"title":{},"name":{},"text":{"273":{}},"component":{}}],["oo",{"_index":3723,"title":{},"name":{},"text":{"162":{}},"component":{}}],["open",{"_index":308,"title":{"441-4":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"15":{},"16":{},"23":{},"24":{},"27":{},"28":{},"29":{},"30":{},"34":{},"36":{},"38":{},"50":{},"53":{},"54":{},"58":{},"78":{},"79":{},"81":{},"82":{},"83":{},"91":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"130":{},"158":{},"159":{},"195":{},"200":{},"232":{},"233":{},"234":{},"235":{},"246":{},"247":{},"264":{},"270":{},"273":{},"274":{},"287":{},"292":{},"316":{},"346":{},"352":{},"421":{},"429":{},"432":{},"438":{},"441":{},"461":{},"462":{},"463":{},"467":{},"519":{},"527":{},"533":{},"538":{}},"component":{}}],["open/sav",{"_index":924,"title":{},"name":{},"text":{"7":{}},"component":{}}],["opendocu",{"_index":4782,"title":{},"name":{},"text":{"247":{}},"component":{}}],["openinglastenvironmentatstartup",{"_index":3052,"title":{},"name":{},"text":{"90":{}},"component":{}}],["openjdk",{"_index":469,"title":{},"name":{},"text":{"5":{},"6":{},"164":{},"514":{}},"component":{}}],["openoffic",{"_index":4367,"title":{},"name":{},"text":{"234":{}},"component":{}}],["openssh",{"_index":6567,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["openssl",{"_index":1942,"title":{},"name":{},"text":{"41":{}},"component":{}}],["openvar}file_prefix}_${file_date}.txt",{"_index":6550,"title":{},"name":{},"text":{"481":{}},"component":{}}],["oper",{"_index":78,"title":{"162":{},"358":{},"30-2":{},"30-7":{},"162-2":{},"514-2":{}},"name":{"162":{}},"text":{"1":{},"5":{},"7":{},"13":{},"14":{},"15":{},"19":{},"20":{},"22":{},"23":{},"24":{},"27":{},"30":{},"38":{},"41":{},"53":{},"54":{},"56":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"86":{},"87":{},"90":{},"91":{},"102":{},"103":{},"105":{},"162":{},"163":{},"179":{},"205":{},"222":{},"227":{},"228":{},"233":{},"234":{},"236":{},"246":{},"247":{},"264":{},"268":{},"273":{},"274":{},"278":{},"279":{},"290":{},"291":{},"292":{},"312":{},"315":{},"317":{},"338":{},"347":{},"358":{},"360":{},"364":{},"366":{},"368":{},"371":{},"373":{},"399":{},"403":{},"404":{},"407":{},"409":{},"410":{},"429":{},"439":{},"480":{},"489":{},"518":{},"533":{},"541":{}},"component":{}}],["opinion",{"_index":7142,"title":{},"name":{},"text":{"538":{}},"component":{}}],["opp",{"_index":5694,"title":{},"name":{},"text":{"292":{}},"component":{}}],["opportun",{"_index":6551,"title":{},"name":{},"text":{"482":{},"533":{}},"component":{}}],["oppos",{"_index":5981,"title":{},"name":{},"text":{"346":{},"460":{},"481":{},"489":{},"503":{}},"component":{}}],["opt",{"_index":3981,"title":{},"name":{},"text":{"182":{}},"component":{}}],["opt/flink/hop",{"_index":3549,"title":{},"name":{},"text":{"160":{}},"component":{}}],["opt/hop",{"_index":6636,"title":{},"name":{},"text":{"514":{}},"component":{}}],["opt/hop/hop.err.log",{"_index":6639,"title":{},"name":{},"text":{"514":{}},"component":{}}],["opt/spark",{"_index":3596,"title":{},"name":{},"text":{"161":{}},"component":{}}],["opt/spark/hop",{"_index":3594,"title":{},"name":{},"text":{"161":{}},"component":{}}],["opt/spark/spark",{"_index":3607,"title":{},"name":{},"text":{"161":{}},"component":{}}],["optim",{"_index":1315,"title":{},"name":{},"text":{"19":{},"78":{},"81":{},"154":{},"165":{},"217":{},"239":{},"247":{},"270":{},"298":{},"372":{},"376":{},"381":{}},"component":{}}],["option",{"_index":60,"title":{"24-2":{},"24-3":{},"24-4":{},"24-5":{},"24-6":{},"38-1":{},"39-2":{},"40-4":{},"43-4":{},"44-2":{},"58-2":{},"59-3":{},"60-2":{},"61-2":{},"62-2":{},"62-3":{},"63-3":{},"65-3":{},"66-3":{},"67-4":{},"68-3":{},"69-3":{},"70-3":{},"71-3":{},"71-6":{},"72-3":{},"73-4":{},"74-3":{},"76-2":{},"76-5":{},"76-8":{},"83-5":{},"153-2":{},"154-3":{},"154-4":{},"154-6":{},"156-2":{},"165-3":{},"166-2":{},"167-2":{},"168-2":{},"169-2":{},"170-2":{},"171-3":{},"172-3":{},"173-3":{},"174-3":{},"175-3":{},"176-3":{},"177-3":{},"178-3":{},"179-3":{},"180-3":{},"181-3":{},"182-3":{},"183-3":{},"184-3":{},"185-3":{},"186-3":{},"186-4":{},"186-6":{},"187-3":{},"188-3":{},"189-3":{},"190-3":{},"191-3":{},"192-3":{},"193-3":{},"194-3":{},"195-3":{},"196-4":{},"197-4":{},"198-4":{},"199-4":{},"200-3":{},"201-3":{},"202-3":{},"203-3":{},"204-3":{},"205-3":{},"206-3":{},"207-3":{},"208-3":{},"209-3":{},"210-3":{},"211-3":{},"212-3":{},"213-3":{},"214-3":{},"215-3":{},"216-3":{},"217-3":{},"218-3":{},"219-3":{},"220-3":{},"221-4":{},"222-3":{},"223-3":{},"224-3":{},"225-3":{},"226-3":{},"227-3":{},"228-3":{},"229-3":{},"230-3":{},"231-3":{},"232-3":{},"233-3":{},"234-3":{},"235-3":{},"236-3":{},"237-3":{},"238-3":{},"239-3":{},"240-3":{},"241-3":{},"242-3":{},"243-3":{},"244-3":{},"245-3":{},"246-3":{},"247-3":{},"248-3":{},"249-3":{},"250-3":{},"252-3":{},"253-3":{},"254-3":{},"255-3":{},"256-3":{},"257-3":{},"258-3":{},"259-4":{},"260-3":{},"261-3":{},"262-3":{},"263-3":{},"264-3":{},"265-3":{},"267-3":{},"268-3":{},"269-3":{},"272-3":{},"273-5":{},"274-3":{},"275-3":{},"275-9":{},"276-3":{},"276-4":{},"279-3":{},"280-3":{},"281-3":{},"283-3":{},"284-3":{},"285-4":{},"286-3":{},"287-4":{},"287-8":{},"288-3":{},"289-3":{},"290-3":{},"290-5":{},"291-3":{},"291-5":{},"292-3":{},"292-5":{},"293-3":{},"294-3":{},"295-3":{},"296-3":{},"297-6":{},"299-5":{},"300-3":{},"302-3":{},"303-3":{},"304-3":{},"305-3":{},"306-3":{},"307-3":{},"308-3":{},"309-4":{},"310-4":{},"311-3":{},"312-3":{},"313-3":{},"314-3":{},"315-3":{},"315-4":{},"316-4":{},"317-3":{},"318-3":{},"319-4":{},"320-3":{},"321-3":{},"322-3":{},"323-3":{},"326-3":{},"331-4":{},"335-3":{},"336-3":{},"337-3":{},"338-3":{},"339-3":{},"341-3":{},"342-3":{},"343-3":{},"344-3":{},"345-3":{},"346-3":{},"347-3":{},"348-3":{},"349-3":{},"350-4":{},"351-3":{},"352-3":{},"354-3":{},"355-3":{},"356-3":{},"357-3":{},"358-3":{},"359-3":{},"360-3":{},"361-3":{},"362-3":{},"364-3":{},"365-3":{},"366-3":{},"367-3":{},"368-3":{},"369-3":{},"370-3":{},"371-3":{},"372-3":{},"373-4":{},"374-3":{},"375-3":{},"376-2":{},"376-3":{},"376-4":{},"377-3":{},"378-4":{},"379-4":{},"380-3":{},"381-4":{},"382-3":{},"383-3":{},"384-3":{},"385-3":{},"386-3":{},"387-3":{},"434-2":{},"435-2":{},"436-2":{},"437-1":{},"438-2":{},"439-2":{},"440-2":{},"441-2":{},"442-2":{},"443-2":{},"444-2":{},"445-2":{},"446-2":{},"447-2":{},"448-2":{},"449-2":{},"450-2":{},"451-2":{},"453-2":{},"454-2":{},"455-2":{},"456-2":{},"457-2":{},"458-2":{},"459-2":{},"460-2":{},"461-2":{},"462-2":{},"463-2":{},"464-2":{},"465-2":{},"466-2":{},"467-2":{},"468-2":{},"469-2":{},"470-2":{},"471-2":{},"472-2":{},"474-2":{},"475-3":{},"476-2":{},"477-2":{},"478-2":{},"479-2":{},"480-2":{},"481-2":{},"481-4":{},"483-3":{},"484-2":{},"485-2":{},"486-2":{},"487-2":{},"488-2":{},"489-2":{},"490-2":{},"491-2":{},"492-1":{},"493-2":{},"495-2":{},"496-2":{},"497-2":{},"498-2":{},"499-2":{},"500-2":{},"501-2":{},"502-2":{},"503-2":{},"503-3":{},"503-4":{},"504-2":{},"505-2":{},"506-2":{},"507-2":{},"508-2":{},"509-2":{},"510-2":{},"511-2":{},"512-3":{}},"name":{"423":{}},"text":{"1":{},"5":{},"7":{},"8":{},"13":{},"15":{},"16":{},"17":{},"19":{},"22":{},"23":{},"24":{},"27":{},"29":{},"30":{},"32":{},"34":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"85":{},"90":{},"98":{},"99":{},"100":{},"101":{},"103":{},"106":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"150":{},"152":{},"153":{},"154":{},"158":{},"160":{},"161":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"206":{},"207":{},"208":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"267":{},"268":{},"269":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"283":{},"284":{},"285":{},"287":{},"288":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"327":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"388":{},"389":{},"399":{},"404":{},"410":{},"415":{},"418":{},"423":{},"427":{},"433":{},"434":{},"435":{},"436":{},"438":{},"439":{},"440":{},"441":{},"442":{},"443":{},"444":{},"445":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"453":{},"454":{},"455":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"475":{},"476":{},"477":{},"478":{},"479":{},"480":{},"481":{},"482":{},"483":{},"484":{},"485":{},"486":{},"487":{},"488":{},"489":{},"490":{},"491":{},"493":{},"494":{},"495":{},"496":{},"497":{},"498":{},"499":{},"500":{},"501":{},"502":{},"503":{},"504":{},"505":{},"506":{},"507":{},"508":{},"509":{},"510":{},"511":{},"512":{},"514":{},"519":{},"520":{},"527":{},"528":{},"529":{},"530":{},"533":{}},"component":{}}],["option=value,option2=value2",{"_index":3823,"title":{},"name":{},"text":{"165":{}},"component":{}}],["or",{"_index":6418,"title":{},"name":{},"text":{"453":{}},"component":{}}],["or(false(),fals",{"_index":4959,"title":{},"name":{},"text":{"247":{}},"component":{}}],["or(false(),false(),tru",{"_index":4964,"title":{},"name":{},"text":{"247":{}},"component":{}}],["or(false(),na",{"_index":4963,"title":{},"name":{},"text":{"247":{}},"component":{}}],["or(false(),tru",{"_index":4960,"title":{},"name":{},"text":{"247":{}},"component":{}}],["or(tru",{"_index":4966,"title":{},"name":{},"text":{"247":{}},"component":{}}],["or(true(),fals",{"_index":4961,"title":{},"name":{},"text":{"247":{}},"component":{}}],["or(true(),tru",{"_index":4962,"title":{},"name":{},"text":{"247":{}},"component":{}}],["orabulkload",{"_index":5748,"title":{},"name":{"303":{}},"text":{},"component":{}}],["oracl",{"_index":467,"title":{"133":{},"134":{},"303":{}},"name":{"133":{}},"text":{"5":{},"6":{},"50":{},"71":{},"86":{},"133":{},"177":{},"206":{},"216":{},"227":{},"303":{}},"component":{}}],["oracle.jdbc.mapdatetotimestamp=fals",{"_index":3312,"title":{},"name":{},"text":{"133":{}},"component":{}}],["oraclerdb",{"_index":3321,"title":{},"name":{"134":{}},"text":{},"component":{}}],["oracle’",{"_index":4315,"title":{},"name":{},"text":{"227":{}},"component":{}}],["orang",{"_index":3157,"title":{},"name":{},"text":{"105":{}},"component":{}}],["orchestr",{"_index":104,"title":{"28":{}},"name":{"28":{}},"text":{"1":{},"2":{},"4":{},"10":{},"13":{},"16":{},"20":{},"23":{},"28":{},"29":{},"30":{},"35":{},"36":{},"84":{},"91":{},"103":{},"105":{},"158":{},"160":{},"223":{},"389":{},"404":{},"407":{},"410":{}},"component":{}}],["order",{"_index":165,"title":{},"name":{},"text":{"1":{},"50":{},"52":{},"57":{},"78":{},"82":{},"83":{},"85":{},"161":{},"163":{},"166":{},"179":{},"181":{},"186":{},"206":{},"214":{},"217":{},"220":{},"221":{},"222":{},"223":{},"236":{},"238":{},"247":{},"264":{},"270":{},"275":{},"280":{},"291":{},"292":{},"297":{},"305":{},"316":{},"318":{},"322":{},"336":{},"338":{},"346":{},"347":{},"380":{},"433":{},"465":{},"467":{},"470":{},"505":{},"536":{},"537":{}},"component":{}}],["order_d",{"_index":3971,"title":{},"name":{},"text":{"179":{}},"component":{}}],["orderbi",{"_index":5667,"title":{},"name":{},"text":{"291":{}},"component":{}}],["orders.customernr",{"_index":4270,"title":{},"name":{},"text":{"221":{}},"component":{}}],["orders.productnr",{"_index":4272,"title":{},"name":{},"text":{"221":{}},"component":{}}],["org.apache.avro.generic.genericrecord",{"_index":6312,"title":{},"name":{},"text":{"427":{}},"component":{}}],["org.apache.beam.runners.core.metrics.metricscontainerstepmap",{"_index":3562,"title":{},"name":{},"text":{"160":{}},"component":{}}],["org.apache.beam.runners.spark.sparkrunner.run(sparkrunner.java:215",{"_index":3912,"title":{},"name":{},"text":{"168":{}},"component":{}}],["org.apache.beam.runners.spark.translation.sparkcontextfactory.createsparkcontext(sparkcontextfactory.java:101",{"_index":3910,"title":{},"name":{},"text":{"168":{}},"component":{}}],["org.apache.beam.runners.spark.translation.sparkcontextfactory.getsparkcontext(sparkcontextfactory.java:67",{"_index":3911,"title":{},"name":{},"text":{"168":{}},"component":{}}],["org.apache.beam.sdk.extensions.joinlibrary.join",{"_index":3757,"title":{},"name":{},"text":{"163":{}},"component":{}}],["org.apache.beam.sdk.io.synthetic.syntheticboundedsourc",{"_index":3759,"title":{},"name":{},"text":{"163":{}},"component":{}}],["org.apache.beam.sdk.io.synthetic.syntheticunboundedsourc",{"_index":3760,"title":{},"name":{},"text":{"163":{}},"component":{}}],["org.apache.beam.sdk.transforms.groupbykey",{"_index":3756,"title":{},"name":{},"text":{"163":{}},"component":{}}],["org.apache.beam:beam",{"_index":3614,"title":{},"name":{},"text":{"161":{}},"component":{}}],["org.apache.catalina.startup.catalina.start",{"_index":1563,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.apache.catalina.startup.hostconfig.deploydirectori",{"_index":1554,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.apache.coyote.abstractprotocol.start",{"_index":1558,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.apache.flink.api.common.executionmod",{"_index":3865,"title":{},"name":{},"text":{"167":{}},"component":{}}],["org.apache.hop",{"_index":6920,"title":{},"name":{},"text":{"529":{},"532":{},"534":{}},"component":{}}],["org.apache.hop.beam.engines.beampipelineengine.executepipeline(beampipelineengine.java:243",{"_index":3913,"title":{},"name":{},"text":{"168":{}},"component":{}}],["org.apache.hop.beam.run.mainbeam",{"_index":3548,"title":{},"name":{},"text":{"160":{},"161":{},"162":{},"167":{},"168":{}},"component":{}}],["org.apache.hop.config.hopconfig",{"_index":1330,"title":{},"name":{},"text":{"19":{},"47":{},"90":{},"150":{},"152":{}},"component":{}}],["org.apache.hop.core.compress.compressionplugintype\",\"org.apache.hop.core.row.value.valuemetaplugintype\",\"org.apache.hop.core.database.databaseplugintype\",\"org.apache.hop.core.plugins.transformplugintype\",\"org.apache.hop.core.auth.authenticationconsumerplugintype\",\"org.apache.hop.imp.importplugintype\",\"org.apache.hop.core.encryption.twowaypasswordencoderplugintype\",\"org.apache.hop.core.auth.authenticationproviderplugintype\",\"org.apache.hop.core.plugins.partitionerplugintype\",\"org.apache.hop.core.logging.loggingplugintype\",\"org.apache.hop.execution.plugin.executioninfolocationplugintype\",\"org.apache.hop.core.config.plugin.configplugintype\",\"org.apache.hop.core.plugins.hopserverplugintype\",\"org.apache.hop.core.plugins.actionplugintype\",\"org.apache.hop.core.extension.extensionpointplugintype\",\"org.apache.hop.pipeline.engine.pipelineengineplugintype\",\"org.apache.hop.pipeline.transform.rowdistributionplugintype\",\"org.apache.hop.workflow.engine.workflowengineplugintype\",\"org.apache.hop.core.vfs.plugin.vfsplugintype\",\"org.apache.hop.execution.sampler.executiondatasamplerplugintype\",\"org.apache.hop.metadata.plugin.metadataplugintyp",{"_index":1750,"title":{},"name":{},"text":{"37":{}},"component":{}}],["org.apache.hop.core.encryption.encr",{"_index":1345,"title":{},"name":{},"text":{"19":{},"44":{}},"component":{}}],["org.apache.hop.core.exception.hopvalueexcept",{"_index":5397,"title":{},"name":{},"text":{"258":{}},"component":{}}],["org.apache.hop.core.row.irowmeta",{"_index":5478,"title":{},"name":{},"text":{"270":{}},"component":{}}],["org.apache.hop.i18n.basemessages.getstring(pkg",{"_index":6870,"title":{},"name":{},"text":{"528":{}},"component":{}}],["org.apache.hop.partition.partitionschema",{"_index":6923,"title":{},"name":{},"text":{"529":{}},"component":{}}],["org.apache.hop.path.to.mymetadata",{"_index":6921,"title":{},"name":{},"text":{"529":{}},"component":{}}],["org.apache.hop.path.to.mymetadataeditor",{"_index":6922,"title":{},"name":{},"text":{"529":{}},"component":{}}],["org.apache.hop.pipeline.transform.errorhandl",{"_index":7068,"title":{"536-3":{}},"name":{},"text":{"536":{}},"component":{}}],["org.apache.hop.pipeline.transform.stream",{"_index":7078,"title":{},"name":{},"text":{"536":{}},"component":{}}],["org.apache.hop.pipeline.transforms.drools.rules.column",{"_index":5894,"title":{},"name":{},"text":{"325":{}},"component":{}}],["org.apache.hop.pipeline.transforms.drools.rules.row",{"_index":5866,"title":{},"name":{},"text":{"324":{}},"component":{}}],["org.apache.hop.pipeline.transforms.javascript.scriptvalu",{"_index":5476,"title":{},"name":{},"text":{"270":{}},"component":{}}],["org.apache.hop.run.hoprun",{"_index":1358,"title":{},"name":{},"text":{"19":{},"38":{},"151":{},"152":{}},"component":{}}],["org.apache.hop.ui",{"_index":6919,"title":{},"name":{},"text":{"529":{}},"component":{}}],["org.apache.hop.ui.hopgui",{"_index":6884,"title":{},"name":{},"text":{"528":{}},"component":{}}],["org.apache.hop.ui.hopgui.hopweb",{"_index":1587,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.apache.hop.ui.hopgui.hopwebservletcontextlisten",{"_index":1588,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.apache.hop.ui.partition.partitionschemaeditor",{"_index":6924,"title":{},"name":{},"text":{"529":{}},"component":{}}],["org.apache.hop.www.hopserv",{"_index":1399,"title":{},"name":{},"text":{"19":{},"41":{}},"component":{}}],["org.apache.hop.www.hopserverservlet",{"_index":1594,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.apache.kafka.common.security.plain.plainloginmodul",{"_index":4037,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["org.apache.kafka.common.serialization.stringdeseri",{"_index":5569,"title":{},"name":{},"text":{"275":{}},"component":{}}],["org.apache.spark.api.java.javasparkcontext.(javasparkcontext.scala:58",{"_index":3909,"title":{},"name":{},"text":{"168":{}},"component":{}}],["org.apache.spark.deploy.master.mast",{"_index":3580,"title":{},"name":{},"text":{"161":{}},"component":{}}],["org.apache.spark.deploy.worker.work",{"_index":3590,"title":{},"name":{},"text":{"161":{}},"component":{}}],["org.apache.spark.sparkcontext.(sparkcontext.scala:640",{"_index":3908,"title":{},"name":{},"text":{"168":{}},"component":{}}],["org.eclipse.jetty.util.deprecationwarning@48cbb4c5",{"_index":1982,"title":{},"name":{},"text":{"41":{}},"component":{}}],["org.eclipse.jetty.util.log.stderrlog",{"_index":1973,"title":{},"name":{},"text":{"41":{}},"component":{}}],["org.eclipse.rap.applicationconfigur",{"_index":1586,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.eclipse.rap.rwt.engine.rwtservlet",{"_index":1590,"title":{},"name":{},"text":{"25":{}},"component":{}}],["org.gjt.mm.mysql.driv",{"_index":3305,"title":{},"name":{},"text":{"131":{}},"component":{}}],["org.neo4j.driver.exceptions.clientexcept",{"_index":6347,"title":{},"name":{},"text":{"431":{}},"component":{}}],["org.postgresql.driv",{"_index":1241,"title":{},"name":{},"text":{"11":{}},"component":{}}],["org.project.hop",{"_index":7061,"title":{},"name":{},"text":{"534":{}},"component":{}}],["organ",{"_index":363,"title":{},"name":{},"text":{"2":{},"9":{},"56":{},"88":{},"95":{},"338":{},"395":{},"520":{},"530":{}},"component":{}}],["orient",{"_index":3344,"title":{},"name":{},"text":{"142":{}},"component":{}}],["origin",{"_index":1671,"title":{},"name":{},"text":{"30":{},"41":{},"70":{},"76":{},"77":{},"78":{},"81":{},"82":{},"103":{},"212":{},"244":{},"246":{},"247":{},"271":{},"273":{},"285":{},"287":{},"288":{},"316":{},"331":{},"342":{},"350":{},"354":{},"357":{},"508":{},"533":{}},"component":{}}],["original_product_tk",{"_index":4297,"title":{},"name":{},"text":{"227":{}},"component":{}}],["orlando",{"_index":5668,"title":{},"name":{},"text":{"291":{}},"component":{}}],["orphan",{"_index":2516,"title":{},"name":{},"text":{"56":{}},"component":{}}],["os",{"_index":269,"title":{"5-7":{}},"name":{},"text":{"2":{},"11":{},"20":{},"45":{},"341":{}},"component":{}}],["osx",{"_index":718,"title":{},"name":{},"text":{"7":{},"258":{},"420":{}},"component":{}}],["other",{"_index":107,"title":{"163-9":{}},"name":{},"text":{"1":{},"13":{},"163":{},"404":{},"407":{},"430":{}},"component":{}}],["otherwis",{"_index":782,"title":{},"name":{},"text":{"7":{},"52":{},"56":{},"157":{},"163":{},"165":{},"211":{},"220":{},"222":{},"233":{},"235":{},"238":{},"239":{},"247":{},"253":{},"254":{},"265":{},"270":{},"297":{},"298":{},"312":{},"324":{},"342":{},"344":{},"354":{},"357":{},"364":{},"366":{},"373":{},"376":{},"465":{},"467":{},"480":{},"488":{},"502":{},"529":{}},"component":{}}],["ouput.0",{"_index":2597,"title":{},"name":{},"text":{"56":{}},"component":{}}],["ourselv",{"_index":1250,"title":{},"name":{},"text":{"13":{}},"component":{}}],["out",{"_index":233,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"15":{},"19":{},"23":{},"25":{},"29":{},"36":{},"41":{},"48":{},"50":{},"55":{},"56":{},"68":{},"71":{},"78":{},"81":{},"82":{},"83":{},"87":{},"105":{},"154":{},"161":{},"163":{},"165":{},"167":{},"168":{},"202":{},"206":{},"216":{},"222":{},"223":{},"227":{},"235":{},"264":{},"271":{},"297":{},"305":{},"314":{},"316":{},"317":{},"319":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"345":{},"357":{},"358":{},"360":{},"361":{},"380":{},"400":{},"433":{},"467":{},"500":{},"503":{},"505":{},"519":{},"521":{},"528":{},"533":{},"534":{},"535":{},"537":{},"538":{}},"component":{}}],["out.0",{"_index":2956,"title":{},"name":{},"text":{"83":{}},"component":{}}],["outag",{"_index":6330,"title":{},"name":{},"text":{"429":{}},"component":{}}],["outcom",{"_index":1093,"title":{},"name":{},"text":{"9":{},"84":{}},"component":{}}],["outcome/hop",{"_index":4626,"title":{},"name":{},"text":{"246":{}},"component":{}}],["outer",{"_index":4275,"title":{},"name":{},"text":{"221":{},"222":{},"230":{},"284":{},"293":{},"381":{}},"component":{}}],["outfil",{"_index":6526,"title":{},"name":{},"text":{"471":{}},"component":{}}],["outgo",{"_index":1700,"title":{},"name":{},"text":{"36":{},"57":{},"270":{},"316":{},"319":{},"443":{},"446":{},"456":{},"500":{}},"component":{}}],["output",{"_index":219,"title":{"173":{},"185":{},"189":{},"191":{},"200":{},"208":{},"233":{},"261":{},"274":{},"278":{},"282":{},"292":{},"297":{},"299":{},"305":{},"352":{},"353":{},"364":{},"367":{},"383":{},"53-3":{},"54-3":{},"55-8":{},"55-13":{},"178-8":{},"186-5":{},"233-5":{},"234-9":{},"243-4":{},"244-4":{},"271-4":{},"273-9":{},"274-6":{},"279-7":{},"289-7":{},"292-5":{},"310-5":{},"332-6":{},"334-6":{},"366-10":{},"368-5":{},"379-5":{},"380-4":{},"433-4":{},"433-5":{}},"name":{"185":{},"208":{},"261":{},"282":{},"299":{},"305":{},"353":{}},"text":{"1":{},"5":{},"7":{},"9":{},"10":{},"19":{},"24":{},"25":{},"32":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"47":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"59":{},"61":{},"64":{},"65":{},"68":{},"70":{},"71":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"90":{},"94":{},"104":{},"106":{},"150":{},"151":{},"152":{},"155":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"173":{},"174":{},"176":{},"178":{},"180":{},"181":{},"183":{},"184":{},"185":{},"186":{},"187":{},"189":{},"191":{},"193":{},"196":{},"198":{},"200":{},"202":{},"203":{},"205":{},"206":{},"208":{},"209":{},"210":{},"212":{},"213":{},"214":{},"216":{},"217":{},"219":{},"220":{},"222":{},"223":{},"226":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"239":{},"240":{},"241":{},"242":{},"244":{},"246":{},"250":{},"251":{},"252":{},"254":{},"255":{},"256":{},"257":{},"258":{},"261":{},"262":{},"264":{},"267":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"277":{},"278":{},"279":{},"282":{},"285":{},"286":{},"288":{},"289":{},"291":{},"292":{},"294":{},"297":{},"298":{},"299":{},"300":{},"302":{},"304":{},"305":{},"308":{},"309":{},"310":{},"313":{},"314":{},"316":{},"318":{},"319":{},"320":{},"322":{},"324":{},"325":{},"326":{},"331":{},"332":{},"334":{},"337":{},"338":{},"341":{},"345":{},"346":{},"347":{},"351":{},"352":{},"353":{},"354":{},"360":{},"361":{},"362":{},"363":{},"364":{},"366":{},"367":{},"368":{},"369":{},"372":{},"374":{},"376":{},"377":{},"378":{},"379":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"389":{},"393":{},"395":{},"400":{},"405":{},"429":{},"430":{},"431":{},"432":{},"433":{},"437":{},"450":{},"457":{},"466":{},"490":{},"503":{},"508":{},"537":{},"538":{},"544":{}},"component":{}}],["output\",\"componentcopy\":\"0\",\"metrics\":{\"read\":5,\"buff",{"_index":1800,"title":{},"name":{},"text":{"37":{}},"component":{}}],["output\":0,\"errors\":0,\"input\":0,\"written\":1,\"updated\":0,\"output\":0,\"rejected\":0,\"buff",{"_index":1803,"title":{},"name":{},"text":{"37":{}},"component":{}}],["output\":0,\"errors\":0,\"input\":0,\"written\":1,\"updated\":0,\"output\":1,\"rejected\":0,\"buff",{"_index":1801,"title":{},"name":{},"text":{"37":{}},"component":{}}],["output\":0,\"errors\":0,\"input\":0,\"written\":5,\"updated\":0,\"output\":0,\"rejected\":0,\"buff",{"_index":1797,"title":{},"name":{},"text":{"37":{}},"component":{}}],["output.0",{"_index":2012,"title":{},"name":{},"text":{"41":{}},"component":{}}],["output.hpl",{"_index":2648,"title":{},"name":{},"text":{"59":{},"161":{}},"component":{}}],["output/read.m",{"_index":2222,"title":{},"name":{},"text":{"46":{}},"component":{}}],["output_field",{"_index":5627,"title":{},"name":{},"text":{"287":{}},"component":{}}],["output_fieldnam",{"_index":5628,"title":{},"name":{},"text":{"287":{}},"component":{}}],["output_fields.output_fieldnam",{"_index":5629,"title":{},"name":{},"text":{"287":{}},"component":{}}],["output_json",{"_index":5464,"title":{},"name":{},"text":{"270":{}},"component":{}}],["output_json.push",{"_index":5466,"title":{},"name":{},"text":{"270":{}},"component":{}}],["outputcommitcoordin",{"_index":3644,"title":{},"name":{},"text":{"161":{}},"component":{}}],["outputcommitcoordinator$outputcommitcoordinatorendpoint",{"_index":3643,"title":{},"name":{},"text":{"161":{}},"component":{}}],["outputfield",{"_index":5743,"title":{},"name":{},"text":{"300":{}},"component":{}}],["outputrow",{"_index":6161,"title":{},"name":{},"text":{"372":{}},"component":{}}],["outputstream",{"_index":5512,"title":{},"name":{},"text":{"271":{}},"component":{}}],["outputvalu",{"_index":2269,"title":{},"name":{},"text":{"50":{}},"component":{}}],["outsid",{"_index":538,"title":{},"name":{},"text":{"5":{},"7":{},"91":{},"94":{},"164":{},"179":{},"259":{},"262":{},"303":{},"389":{},"422":{},"541":{},"542":{}},"component":{}}],["over",{"_index":251,"title":{"82-3":{}},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"9":{},"16":{},"24":{},"36":{},"39":{},"55":{},"82":{},"84":{},"85":{},"94":{},"95":{},"105":{},"158":{},"163":{},"165":{},"166":{},"167":{},"168":{},"170":{},"171":{},"172":{},"220":{},"233":{},"247":{},"248":{},"262":{},"292":{},"298":{},"326":{},"340":{},"345":{},"364":{},"378":{},"383":{},"388":{},"392":{},"398":{},"431":{},"433":{},"439":{},"455":{},"464":{},"497":{},"509":{},"511":{},"525":{},"528":{},"530":{},"531":{},"538":{},"541":{}},"component":{}}],["overal",{"_index":1652,"title":{},"name":{},"text":{"29":{},"220":{},"251":{}},"component":{}}],["overcam",{"_index":7249,"title":{},"name":{},"text":{"542":{}},"component":{}}],["overhead",{"_index":5427,"title":{},"name":{},"text":{"264":{}},"component":{}}],["overlap",{"_index":4076,"title":{},"name":{},"text":{"202":{}},"component":{}}],["overlook",{"_index":3098,"title":{},"name":{},"text":{"94":{}},"component":{}}],["overrid",{"_index":670,"title":{},"name":{},"text":{"7":{},"303":{},"311":{},"481":{}},"component":{}}],["overrul",{"_index":552,"title":{},"name":{},"text":{"5":{},"57":{},"81":{},"92":{},"287":{},"423":{}},"component":{}}],["overview",{"_index":368,"title":{"42":{},"5-1":{},"6-1":{},"27-3":{},"84-1":{},"105-2":{}},"name":{},"text":{"2":{},"8":{},"10":{},"21":{},"29":{},"33":{},"42":{},"49":{},"50":{},"536":{}},"component":{}}],["overwatch",{"_index":4558,"title":{},"name":{},"text":{"241":{}},"component":{}}],["overwrit",{"_index":876,"title":{},"name":{},"text":{"7":{},"214":{},"235":{},"312":{},"368":{},"373":{},"387":{},"442":{},"461":{},"463":{},"468":{},"477":{},"478":{},"499":{},"504":{}},"component":{}}],["overwritten",{"_index":681,"title":{},"name":{},"text":{"7":{},"305":{},"312":{},"388":{},"441":{}},"component":{}}],["owner",{"_index":2566,"title":{},"name":{},"text":{"56":{},"186":{},"537":{}},"component":{}}],["ownership",{"_index":7037,"title":{},"name":{},"text":{"533":{}},"component":{}}],["o’clock",{"_index":6079,"title":{},"name":{},"text":{"366":{}},"component":{}}],["p",{"_index":1549,"title":{},"name":{},"text":{"25":{},"38":{},"41":{},"46":{},"50":{},"152":{},"167":{},"389":{},"431":{},"514":{},"541":{}},"component":{}}],["p1",{"_index":6844,"title":{},"name":{},"text":{"527":{}},"component":{}}],["p12",{"_index":5402,"title":{},"name":{},"text":{"259":{}},"component":{}}],["p1a",{"_index":2119,"title":{},"name":{},"text":{"42":{}},"component":{}}],["p2",{"_index":6846,"title":{},"name":{},"text":{"527":{}},"component":{}}],["p3",{"_index":6848,"title":{},"name":{},"text":{"527":{}},"component":{}}],["pa",{"_index":3395,"title":{},"name":{},"text":{"152":{}},"component":{}}],["paa",{"_index":6317,"title":{},"name":{},"text":{"428":{}},"component":{}}],["pacif",{"_index":6119,"title":{},"name":{},"text":{"366":{}},"component":{}}],["packag",{"_index":3216,"title":{"536-3":{}},"name":{},"text":{"117":{},"163":{},"316":{},"478":{},"514":{},"528":{},"529":{},"536":{},"537":{},"538":{}},"component":{}}],["packages.java.lang.long",{"_index":5951,"title":{},"name":{},"text":{"337":{}},"component":{}}],["packages.org.apache.hop.core.row.rowdatautil",{"_index":5953,"title":{},"name":{},"text":{"337":{}},"component":{}}],["packet",{"_index":6543,"title":{},"name":{},"text":{"480":{}},"component":{}}],["pad",{"_index":3956,"title":{},"name":{},"text":{"178":{},"217":{},"358":{},"367":{},"383":{},"400":{}},"component":{}}],["page",{"_index":383,"title":{"517":{},"526":{},"545":{}},"name":{},"text":{"3":{},"5":{},"6":{},"7":{},"9":{},"10":{},"12":{},"14":{},"15":{},"26":{},"42":{},"49":{},"51":{},"53":{},"54":{},"56":{},"58":{},"75":{},"79":{},"80":{},"82":{},"84":{},"86":{},"99":{},"105":{},"158":{},"160":{},"161":{},"164":{},"179":{},"247":{},"277":{},"291":{},"305":{},"347":{},"366":{},"470":{},"510":{},"511":{},"514":{},"521":{},"530":{},"533":{},"534":{},"535":{}},"component":{}}],["pain",{"_index":6861,"title":{},"name":{},"text":{"527":{},"528":{},"531":{},"546":{}},"component":{}}],["paint",{"_index":7245,"title":{},"name":{},"text":{"542":{}},"component":{}}],["pair",{"_index":1849,"title":{},"name":{},"text":{"38":{},"41":{},"93":{},"163":{},"217":{},"218":{},"248":{},"263":{},"290":{},"313":{},"320":{},"326":{},"338":{},"359":{},"366":{},"367":{},"389":{}},"component":{}}],["palett",{"_index":1619,"title":{},"name":{},"text":{"27":{}},"component":{}}],["pan",{"_index":6720,"title":{},"name":{},"text":{"518":{},"519":{}},"component":{}}],["pan/kitchen/(maitr",{"_index":6758,"title":{},"name":{},"text":{"519":{}},"component":{}}],["pane",{"_index":1302,"title":{},"name":{},"text":{"16":{},"104":{},"270":{}},"component":{}}],["panel",{"_index":825,"title":{"29-5":{},"270-5":{},"270-6":{}},"name":{},"text":{"7":{},"15":{},"29":{},"85":{},"99":{},"130":{},"247":{},"270":{},"331":{},"372":{},"400":{}},"component":{}}],["panic",{"_index":6785,"title":{},"name":{},"text":{"525":{}},"component":{}}],["paragraph",{"_index":237,"title":{},"name":{},"text":{"2":{},"227":{}},"component":{}}],["parallel",{"_index":83,"title":{"57":{},"57-2":{},"57-3":{},"433-5":{}},"name":{"57":{}},"text":{"1":{},"7":{},"9":{},"13":{},"20":{},"24":{},"57":{},"78":{},"82":{},"84":{},"103":{},"160":{},"162":{},"163":{},"166":{},"167":{},"204":{},"220":{},"246":{},"298":{},"303":{},"309":{},"344":{},"346":{},"378":{},"396":{},"399":{},"404":{},"409":{},"410":{},"433":{},"518":{},"533":{}},"component":{}}],["param",{"_index":6548,"title":{},"name":{},"text":{"481":{}},"component":{}}],["param/vari",{"_index":672,"title":{},"name":{},"text":{"7":{}},"component":{}}],["param1",{"_index":4737,"title":{},"name":{},"text":{"247":{}},"component":{}}],["param_1=aaa,param_2=bbb",{"_index":6646,"title":{},"name":{},"text":{"514":{}},"component":{}}],["param_project_id",{"_index":2321,"title":{},"name":{},"text":{"50":{}},"component":{}}],["paramet",{"_index":568,"title":{"7-3":{},"7-10":{},"38-4":{},"41-3":{},"43-8":{},"56-5":{},"264-5":{},"264-6":{},"309-6":{},"319-9":{},"319-10":{},"378-6":{},"481-6":{},"503-6":{}},"name":{},"text":{"5":{},"7":{},"9":{},"19":{},"24":{},"27":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"45":{},"48":{},"50":{},"55":{},"56":{},"78":{},"91":{},"94":{},"103":{},"151":{},"152":{},"154":{},"157":{},"162":{},"163":{},"171":{},"177":{},"178":{},"196":{},"206":{},"215":{},"221":{},"230":{},"238":{},"246":{},"247":{},"250":{},"251":{},"263":{},"264":{},"287":{},"294":{},"299":{},"309":{},"319":{},"322":{},"344":{},"345":{},"372":{},"378":{},"380":{},"392":{},"426":{},"431":{},"432":{},"433":{},"481":{},"483":{},"503":{},"505":{},"512":{},"513":{},"514":{},"532":{},"533":{},"536":{}},"component":{}}],["parameter",{"_index":2349,"title":{},"name":{},"text":{"52":{},"322":{},"363":{},"536":{}},"component":{}}],["parameter.hpl",{"_index":2612,"title":{},"name":{},"text":{"56":{}},"component":{}}],["parameter/svari",{"_index":5389,"title":{},"name":{},"text":{"258":{}},"component":{}}],["parameter/valu",{"_index":2720,"title":{},"name":{},"text":{"71":{}},"component":{}}],["parameter/vari",{"_index":6555,"title":{},"name":{},"text":{"483":{}},"component":{}}],["parameter2",{"_index":658,"title":{},"name":{},"text":{"7":{}},"component":{}}],["parameter=valu",{"_index":1848,"title":{},"name":{},"text":{"38":{}},"component":{}}],["parameters/vari",{"_index":632,"title":{},"name":{},"text":{"7":{},"309":{},"319":{},"483":{}},"component":{}}],["parameters=key1=\"\\\"\\\"str",{"_index":1872,"title":{},"name":{},"text":{"38":{}},"component":{}}],["parameters=key1=\"thi",{"_index":1868,"title":{},"name":{},"text":{"38":{}},"component":{}}],["parameters=key1=\\\"value1,value2",{"_index":1870,"title":{},"name":{},"text":{"38":{}},"component":{}}],["parameters=key1=value1,key2=value2",{"_index":1865,"title":{},"name":{},"text":{"38":{}},"component":{}}],["parametr",{"_index":6044,"title":{},"name":{},"text":{"363":{}},"component":{}}],["params/vari",{"_index":5784,"title":{},"name":{},"text":{"309":{}},"component":{}}],["paramt",{"_index":4416,"title":{},"name":{},"text":{"238":{}},"component":{}}],["pardo",{"_index":3769,"title":{},"name":{},"text":{"163":{}},"component":{}}],["parent",{"_index":137,"title":{"29-9":{},"90-5":{},"389-4":{}},"name":{},"text":{"1":{},"7":{},"13":{},"19":{},"22":{},"29":{},"36":{},"57":{},"67":{},"73":{},"76":{},"79":{},"90":{},"91":{},"93":{},"94":{},"150":{},"152":{},"170":{},"178":{},"185":{},"209":{},"213":{},"233":{},"235":{},"236":{},"258":{},"274":{},"275":{},"281":{},"282":{},"309":{},"310":{},"312":{},"314":{},"337":{},"344":{},"345":{},"352":{},"367":{},"368":{},"379":{},"381":{},"383":{},"387":{},"389":{},"402":{},"408":{},"420":{},"432":{},"441":{},"453":{},"481":{},"482":{},"486":{},"503":{},"504":{},"509":{},"511":{},"529":{},"530":{},"531":{},"532":{},"544":{}},"component":{}}],["parent.hpl",{"_index":4643,"title":{},"name":{},"text":{"246":{},"345":{}},"component":{}}],["parent_workflow",{"_index":6428,"title":{},"name":{},"text":{"453":{}},"component":{}}],["parent_workflow.getvariable(\"input_directory\").equals(\"/tmp",{"_index":6420,"title":{},"name":{},"text":{"453":{}},"component":{}}],["parent_workflow.getvariable(\"nr_of_row",{"_index":6429,"title":{},"name":{},"text":{"453":{}},"component":{}}],["parent_workflow.getvariable(\"use_date\").equals(\"1",{"_index":6433,"title":{},"name":{},"text":{"453":{}},"component":{}}],["parent_workflow.setvariable(\"nr_of_row",{"_index":6431,"title":{},"name":{},"text":{"453":{}},"component":{}}],["parent_workflow.setvariable(\"start_d",{"_index":6439,"title":{},"name":{},"text":{"453":{}},"component":{}}],["parenthes",{"_index":5805,"title":{},"name":{},"text":{"316":{}},"component":{}}],["parenthesi",{"_index":4640,"title":{},"name":{},"text":{"246":{}},"component":{}}],["parentid",{"_index":6883,"title":{},"name":{},"text":{"528":{}},"component":{}}],["parentlog",{"_index":7336,"title":{},"name":{},"text":{"544":{}},"component":{}}],["parentlogchannelid",{"_index":2741,"title":{},"name":{},"text":{"76":{},"310":{},"379":{}},"component":{}}],["parentobject",{"_index":6940,"title":{},"name":{},"text":{"529":{}},"component":{}}],["parentorigin",{"_index":4620,"title":{},"name":{},"text":{"244":{}},"component":{}}],["parentprojectnam",{"_index":3048,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["parquet",{"_index":2894,"title":{"304":{},"305":{}},"name":{"304":{},"305":{}},"text":{"81":{},"86":{},"304":{},"305":{},"315":{}},"component":{}}],["pars",{"_index":829,"title":{},"name":{},"text":{"7":{},"8":{},"19":{},"38":{},"81":{},"152":{},"180":{},"182":{},"234":{},"247":{},"250":{},"291":{},"316":{},"317":{},"338":{},"340":{},"346":{},"366":{},"377":{},"381":{},"414":{},"527":{},"537":{}},"component":{}}],["parser",{"_index":5963,"title":{},"name":{},"text":{"338":{},"381":{}},"component":{}}],["parso",{"_index":5940,"title":{},"name":{},"text":{"336":{}},"component":{}}],["part",{"_index":401,"title":{"97-5":{}},"name":{},"text":{"4":{},"7":{},"8":{},"10":{},"17":{},"29":{},"55":{},"57":{},"84":{},"97":{},"105":{},"155":{},"167":{},"168":{},"183":{},"196":{},"197":{},"205":{},"216":{},"220":{},"223":{},"230":{},"233":{},"234":{},"247":{},"273":{},"274":{},"275":{},"276":{},"279":{},"281":{},"291":{},"305":{},"311":{},"314":{},"316":{},"319":{},"326":{},"337":{},"352":{},"364":{},"366":{},"367":{},"372":{},"381":{},"400":{},"447":{},"457":{},"466":{},"468":{},"509":{},"513":{},"528":{},"529":{},"537":{},"538":{}},"component":{}}],["parti",{"_index":1430,"title":{},"name":{},"text":{"20":{},"46":{},"50":{},"428":{}},"component":{}}],["partial",{"_index":5922,"title":{},"name":{},"text":{"329":{},"330":{},"332":{},"333":{},"334":{}},"component":{}}],["particular",{"_index":1098,"title":{},"name":{},"text":{"9":{},"29":{},"75":{},"76":{},"163":{},"232":{},"247":{},"271":{},"292":{},"376":{},"400":{},"433":{},"439":{},"466":{},"542":{}},"component":{}}],["particularli",{"_index":1873,"title":{},"name":{},"text":{"39":{},"318":{}},"component":{}}],["partit",{"_index":1515,"title":{"66":{},"82":{},"82-1":{},"82-3":{},"82-4":{},"82-6":{},"107-2":{}},"name":{"66":{},"82":{}},"text":{"24":{},"64":{},"66":{},"78":{},"82":{},"84":{},"92":{},"107":{},"167":{},"185":{},"186":{},"198":{},"199":{},"275":{},"276":{},"364":{},"367":{},"368":{},"493":{},"525":{},"527":{}},"component":{}}],["partition(statecod",{"_index":3176,"title":{},"name":{},"text":{"107":{}},"component":{}}],["partitioned.0",{"_index":6842,"title":{},"name":{},"text":{"527":{}},"component":{}}],["partitioned.1",{"_index":6845,"title":{},"name":{},"text":{"527":{}},"component":{}}],["partitioned.2",{"_index":6847,"title":{},"name":{},"text":{"527":{}},"component":{}}],["partitionerplugintyp",{"_index":6810,"title":{},"name":{},"text":{"525":{}},"component":{}}],["partitionid",{"_index":4005,"title":{},"name":{},"text":{"186":{}},"component":{}}],["partitioning.hpl",{"_index":2687,"title":{},"name":{},"text":{"66":{}},"component":{}}],["partitionschema.java",{"_index":6908,"title":{},"name":{},"text":{"529":{}},"component":{}}],["partitionschemaeditor.java",{"_index":6918,"title":{},"name":{},"text":{"529":{}},"component":{}}],["partitionschemasprovid",{"_index":7218,"title":{},"name":{},"text":{"542":{}},"component":{}}],["partner",{"_index":6499,"title":{},"name":{},"text":{"465":{}},"component":{}}],["pass",{"_index":96,"title":{},"name":{},"text":{"1":{},"7":{},"13":{},"15":{},"19":{},"40":{},"43":{},"50":{},"53":{},"54":{},"55":{},"56":{},"68":{},"76":{},"77":{},"78":{},"82":{},"83":{},"84":{},"102":{},"103":{},"105":{},"151":{},"152":{},"160":{},"161":{},"162":{},"164":{},"167":{},"168":{},"169":{},"178":{},"186":{},"203":{},"205":{},"216":{},"218":{},"220":{},"222":{},"224":{},"227":{},"229":{},"233":{},"235":{},"238":{},"239":{},"246":{},"247":{},"250":{},"253":{},"254":{},"255":{},"257":{},"258":{},"263":{},"264":{},"266":{},"271":{},"272":{},"273":{},"274":{},"275":{},"277":{},"278":{},"283":{},"285":{},"287":{},"290":{},"291":{},"293":{},"294":{},"301":{},"303":{},"304":{},"308":{},"309":{},"311":{},"315":{},"317":{},"320":{},"323":{},"324":{},"326":{},"338":{},"341":{},"342":{},"343":{},"344":{},"345":{},"347":{},"348":{},"349":{},"355":{},"357":{},"358":{},"359":{},"360":{},"363":{},"364":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"381":{},"382":{},"383":{},"403":{},"404":{},"430":{},"433":{},"435":{},"439":{},"453":{},"465":{},"467":{},"481":{},"489":{},"503":{},"506":{},"514":{},"527":{},"532":{},"533":{},"537":{},"538":{},"540":{},"541":{},"543":{}},"component":{}}],["passed/fail",{"_index":7143,"title":{},"name":{},"text":{"538":{}},"component":{}}],["passiv",{"_index":6479,"title":{},"name":{},"text":{"461":{},"462":{},"463":{},"485":{}},"component":{}}],["passowrd",{"_index":2813,"title":{},"name":{},"text":{"77":{}},"component":{}}],["passphras",{"_index":5778,"title":{},"name":{},"text":{"306":{},"326":{},"462":{},"487":{},"488":{},"491":{}},"component":{}}],["password",{"_index":21,"title":{"77":{},"157":{},"77-1":{},"77-2":{},"77-3":{},"77-4":{}},"name":{"77":{}},"text":{"1":{},"7":{},"8":{},"11":{},"19":{},"25":{},"41":{},"44":{},"50":{},"56":{},"63":{},"65":{},"71":{},"72":{},"77":{},"88":{},"92":{},"153":{},"154":{},"157":{},"197":{},"228":{},"232":{},"235":{},"263":{},"264":{},"276":{},"277":{},"278":{},"280":{},"319":{},"326":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"377":{},"380":{},"412":{},"418":{},"433":{},"436":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"485":{},"487":{},"488":{},"491":{},"505":{},"514":{},"525":{},"529":{},"543":{}},"component":{}}],["password=\"cluster_api_secret",{"_index":4039,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["passwordtoken",{"_index":5919,"title":{},"name":{},"text":{"327":{},"330":{},"331":{},"332":{},"333":{},"334":{}},"component":{}}],["past",{"_index":1519,"title":{},"name":{},"text":{"24":{},"36":{},"94":{},"241":{},"246":{},"273":{},"441":{}},"component":{}}],["patch",{"_index":5834,"title":{},"name":{},"text":{"319":{}},"component":{}}],["path",{"_index":542,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"11":{},"19":{},"22":{},"25":{},"32":{},"37":{},"38":{},"41":{},"48":{},"50":{},"56":{},"57":{},"62":{},"70":{},"83":{},"91":{},"93":{},"94":{},"100":{},"101":{},"106":{},"114":{},"131":{},"148":{},"149":{},"151":{},"152":{},"158":{},"163":{},"165":{},"166":{},"167":{},"168":{},"170":{},"185":{},"233":{},"234":{},"239":{},"244":{},"246":{},"247":{},"250":{},"251":{},"255":{},"259":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"287":{},"290":{},"291":{},"292":{},"298":{},"303":{},"312":{},"314":{},"315":{},"319":{},"365":{},"366":{},"376":{},"381":{},"386":{},"389":{},"421":{},"422":{},"424":{},"425":{},"432":{},"433":{},"441":{},"443":{},"444":{},"446":{},"450":{},"454":{},"456":{},"457":{},"466":{},"470":{},"477":{},"478":{},"479":{},"481":{},"489":{},"490":{},"499":{},"500":{},"509":{},"511":{},"513":{},"514":{},"520":{},"527":{},"529":{},"530":{},"543":{},"544":{}},"component":{}}],["path/jsonpath",{"_index":5527,"title":{},"name":{},"text":{"273":{}},"component":{}}],["path/on/serv",{"_index":3920,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["path/to/apach",{"_index":3876,"title":{},"name":{},"text":{"167":{}},"component":{}}],["path/to/fat.jar",{"_index":3781,"title":{},"name":{},"text":{"163":{},"167":{},"168":{}},"component":{}}],["path/to/googl",{"_index":3147,"title":{},"name":{},"text":{"101":{}},"component":{}}],["path/to/hop/source/cod",{"_index":6895,"title":{},"name":{},"text":{"528":{}},"component":{}}],["path/to/keystor",{"_index":1960,"title":{},"name":{},"text":{"41":{}},"component":{}}],["path/to/local/dir:/fil",{"_index":6667,"title":{},"name":{},"text":{"514":{}},"component":{}}],["path/to/token",{"_index":3150,"title":{},"name":{},"text":{"101":{}},"component":{}}],["path/to/your/googl",{"_index":3142,"title":{},"name":{},"text":{"100":{}},"component":{}}],["path/to/your/metadata",{"_index":2187,"title":{},"name":{},"text":{"43":{}},"component":{}}],["pattern",{"_index":3302,"title":{},"name":{},"text":{"130":{},"231":{},"309":{},"316":{},"317":{},"340":{},"344":{},"366":{},"464":{},"487":{},"527":{},"528":{},"538":{},"542":{}},"component":{}}],["paulo",{"_index":4142,"title":{},"name":{},"text":{"205":{}},"component":{}}],["paus",{"_index":1532,"title":{},"name":{},"text":{"24":{},"42":{},"80":{},"85":{},"163":{},"167":{}},"component":{}}],["pausepipelin",{"_index":2044,"title":{"42-9":{}},"name":{},"text":{"42":{}},"component":{}}],["pay",{"_index":2978,"title":{},"name":{},"text":{"86":{}},"component":{}}],["payload",{"_index":2049,"title":{},"name":{},"text":{"42":{},"160":{},"325":{}},"component":{}}],["payment",{"_index":4798,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pb",{"_index":3396,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pc",{"_index":3383,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pd",{"_index":3384,"title":{},"name":{},"text":{"152":{},"389":{}},"component":{}}],["pdi",{"_index":1415,"title":{"520":{}},"name":{},"text":{"19":{},"82":{},"518":{},"519":{},"520":{},"542":{}},"component":{}}],["pdi/kettl",{"_index":1411,"title":{},"name":{},"text":{"19":{},"414":{},"521":{}},"component":{}}],["peac",{"_index":6328,"title":{},"name":{},"text":{"429":{}},"component":{}}],["pecifi",{"_index":2838,"title":{},"name":{},"text":{"78":{}},"component":{}}],["peek",{"_index":2970,"title":{},"name":{},"text":{"85":{},"179":{}},"component":{}}],["peel",{"_index":5672,"title":{},"name":{},"text":{"291":{}},"component":{}}],["pem",{"_index":6564,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["penalti",{"_index":5332,"title":{},"name":{},"text":{"248":{},"309":{}},"component":{}}],["pentaho",{"_index":1188,"title":{"519":{}},"name":{},"text":{"10":{},"55":{},"388":{},"518":{},"520":{},"521":{},"532":{}},"component":{}}],["pentaho_metastore_fold",{"_index":6726,"title":{},"name":{},"text":{"518":{}},"component":{}}],["peopl",{"_index":4573,"title":{},"name":{},"text":{"241":{}},"component":{}}],["per",{"_index":366,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"8":{},"15":{},"29":{},"50":{},"64":{},"68":{},"76":{},"81":{},"82":{},"83":{},"85":{},"94":{},"151":{},"152":{},"154":{},"165":{},"166":{},"167":{},"168":{},"169":{},"198":{},"200":{},"207":{},"235":{},"247":{},"262":{},"297":{},"305":{},"309":{},"310":{},"313":{},"350":{},"359":{},"366":{},"377":{},"379":{},"389":{},"421":{},"470":{},"510":{},"530":{}},"component":{}}],["percent",{"_index":5110,"title":{},"name":{},"text":{"247":{},"346":{}},"component":{}}],["percentag",{"_index":1631,"title":{},"name":{},"text":{"27":{},"36":{},"79":{},"205":{},"247":{},"298":{},"366":{}},"component":{}}],["percentil",{"_index":5413,"title":{},"name":{},"text":{"262":{}},"component":{}}],["perceptron",{"_index":3015,"title":{},"name":{},"text":{"87":{}},"component":{}}],["perfect",{"_index":372,"title":{},"name":{},"text":{"2":{},"429":{}},"component":{}}],["perfectli",{"_index":848,"title":{},"name":{},"text":{"7":{},"81":{},"287":{}},"component":{}}],["perfom",{"_index":4744,"title":{},"name":{},"text":{"247":{}},"component":{}}],["perform",{"_index":79,"title":{"9-11":{}},"name":{"396":{}},"text":{"1":{},"2":{},"4":{},"7":{},"9":{},"13":{},"15":{},"19":{},"24":{},"30":{},"39":{},"47":{},"51":{},"52":{},"53":{},"54":{},"55":{},"61":{},"74":{},"78":{},"79":{},"80":{},"82":{},"83":{},"84":{},"85":{},"102":{},"105":{},"154":{},"156":{},"158":{},"159":{},"163":{},"164":{},"166":{},"167":{},"169":{},"175":{},"206":{},"213":{},"216":{},"217":{},"220":{},"221":{},"222":{},"227":{},"234":{},"236":{},"238":{},"239":{},"247":{},"251":{},"263":{},"268":{},"269":{},"270":{},"273":{},"284":{},"287":{},"291":{},"292":{},"298":{},"299":{},"303":{},"309":{},"315":{},"316":{},"317":{},"331":{},"345":{},"346":{},"347":{},"358":{},"360":{},"363":{},"364":{},"366":{},"367":{},"372":{},"373":{},"377":{},"378":{},"384":{},"385":{},"396":{},"397":{},"399":{},"404":{},"405":{},"409":{},"410":{},"429":{},"432":{},"433":{},"437":{},"457":{},"464":{},"467":{},"474":{},"476":{},"492":{},"493":{},"496":{},"503":{},"507":{},"534":{}},"component":{}}],["perhap",{"_index":3778,"title":{},"name":{},"text":{"163":{},"245":{},"389":{},"525":{},"528":{}},"component":{}}],["period",{"_index":354,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"53":{},"54":{},"67":{},"73":{},"76":{},"153":{},"170":{},"186":{},"202":{},"224":{},"225":{},"247":{},"258":{},"268":{},"292":{},"360":{},"364":{},"371":{},"383":{},"395":{},"400":{},"462":{},"480":{},"497":{},"500":{},"501":{},"511":{}},"component":{}}],["perl",{"_index":6472,"title":{},"name":{},"text":{"457":{}},"component":{}}],["permiss",{"_index":3112,"title":{},"name":{},"text":{"97":{},"100":{},"158":{},"259":{},"261":{},"514":{},"533":{}},"component":{}}],["permit",{"_index":5811,"title":{},"name":{},"text":{"316":{}},"component":{}}],["persist",{"_index":158,"title":{},"name":{},"text":{"1":{},"165":{},"406":{}},"component":{}}],["person",{"_index":4266,"title":{},"name":{},"text":{"221":{},"273":{},"280":{},"466":{},"528":{}},"component":{}}],["persons.*.id",{"_index":5540,"title":{},"name":{},"text":{"273":{}},"component":{}}],["persons.*.nam",{"_index":5541,"title":{},"name":{},"text":{"273":{}},"component":{}}],["perspect",{"_index":50,"title":{"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"33-1":{},"36-3":{},"75-12":{},"432-2":{}},"name":{"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{}},"text":{"1":{},"7":{},"9":{},"17":{},"19":{},"23":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"53":{},"54":{},"62":{},"64":{},"67":{},"68":{},"73":{},"75":{},"83":{},"88":{},"92":{},"153":{},"154":{},"158":{},"160":{},"161":{},"296":{},"391":{},"413":{},"418":{},"432":{}},"component":{}}],["perspective’",{"_index":777,"title":{},"name":{},"text":{"7":{}},"component":{}}],["pf",{"_index":3397,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pgp",{"_index":2895,"title":{"306":{},"307":{},"477":{},"478":{},"479":{}},"name":{},"text":{"81":{},"86":{},"306":{},"307":{},"477":{},"478":{},"479":{}},"component":{}}],["pgpdecryptfil",{"_index":6536,"title":{},"name":{"477":{}},"text":{},"component":{}}],["pgpdecryptstream",{"_index":5776,"title":{},"name":{"306":{}},"text":{},"component":{}}],["pgpencryptfil",{"_index":6538,"title":{},"name":{"478":{}},"text":{},"component":{}}],["pgpencryptstream",{"_index":5779,"title":{},"name":{"307":{}},"text":{},"component":{}}],["pgpverifi",{"_index":6541,"title":{},"name":{"479":{}},"text":{},"component":{}}],["ph",{"_index":3398,"title":{},"name":{},"text":{"152":{}},"component":{}}],["phase",{"_index":2732,"title":{},"name":{},"text":{"76":{},"91":{},"169":{},"171":{},"194":{},"238":{},"309":{},"310":{},"344":{},"379":{},"389":{},"510":{},"512":{}},"component":{}}],["phone",{"_index":2904,"title":{"354":{}},"name":{},"text":{"81":{},"86":{},"280":{},"354":{},"466":{}},"component":{}}],["phonenumb",{"_index":4559,"title":{},"name":{},"text":{"241":{}},"component":{}}],["phonet",{"_index":4135,"title":{},"name":{},"text":{"205":{}},"component":{}}],["php.mit.edu",{"_index":7147,"title":{},"name":{},"text":{"538":{}},"component":{}}],["phrase",{"_index":5917,"title":{},"name":{},"text":{"326":{}},"component":{}}],["physic",{"_index":450,"title":{},"name":{},"text":{"5":{},"8":{},"55":{},"230":{},"256":{}},"component":{}}],["physician",{"_index":5459,"title":{},"name":{},"text":{"270":{}},"component":{}}],["pi",{"_index":4700,"title":{"247-119":{}},"name":{},"text":{"247":{}},"component":{}}],["pick",{"_index":1131,"title":{},"name":{},"text":{"9":{},"25":{},"43":{},"52":{},"55":{},"56":{},"163":{},"167":{},"168":{},"214":{},"222":{},"294":{},"315":{},"317":{},"325":{},"326":{},"397":{},"528":{},"530":{},"531":{},"532":{}},"component":{}}],["pickup",{"_index":5889,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["pictur",{"_index":4159,"title":{},"name":{},"text":{"205":{},"378":{}},"component":{}}],["pid",{"_index":2489,"title":{},"name":{},"text":{"56":{},"256":{}},"component":{}}],["piec",{"_index":407,"title":{},"name":{},"text":{"4":{},"9":{},"84":{},"105":{},"180":{},"205":{},"232":{},"390":{},"496":{},"527":{},"531":{},"546":{}},"component":{}}],["ping",{"_index":6364,"title":{"480":{}},"name":{"480":{}},"text":{"433":{},"480":{}},"component":{}}],["pioneer",{"_index":475,"title":{},"name":{},"text":{"5":{},"6":{}},"component":{}}],["pipe",{"_index":2034,"title":{},"name":{},"text":{"41":{},"75":{},"220":{},"303":{},"367":{}},"component":{}}],["pipelin",{"_index":46,"title":{"15":{},"53":{},"56":{},"67":{},"68":{},"69":{},"70":{},"78":{},"83":{},"84":{},"85":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"308":{},"309":{},"310":{},"481":{},"484":{},"513":{},"7-15":{},"15-1":{},"15-5":{},"24-4":{},"24-5":{},"29-10":{},"36-2":{},"37-14":{},"41-11":{},"42-11":{},"42-13":{},"42-16":{},"42-17":{},"42-19":{},"50-2":{},"50-4":{},"53-1":{},"53-2":{},"53-4":{},"54-2":{},"55-2":{},"55-3":{},"55-4":{},"55-5":{},"55-6":{},"55-7":{},"55-8":{},"75-10":{},"76-1":{},"76-7":{},"78-1":{},"78-3":{},"78-4":{},"78-6":{},"79-1":{},"83-11":{},"84-1":{},"84-2":{},"85-1":{},"85-2":{},"85-3":{},"152-13":{},"158-2":{},"161-4":{},"163-5":{},"170-1":{},"291-10":{},"389-16":{},"427-1":{},"428-1":{},"429-4":{},"430-2":{},"432-5":{},"513-2":{},"513-5":{},"544-5":{},"544-6":{},"544-7":{},"544-8":{},"544-9":{},"544-10":{},"544-11":{}},"name":{"15":{},"53":{},"67":{},"68":{},"69":{},"70":{},"78":{},"80":{},"83":{},"84":{},"85":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"308":{},"309":{},"310":{},"407":{},"481":{},"513":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"34":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{},"44":{},"47":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"64":{},"67":{},"68":{},"69":{},"70":{},"73":{},"75":{},"76":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"91":{},"92":{},"93":{},"94":{},"95":{},"102":{},"103":{},"104":{},"105":{},"151":{},"152":{},"154":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"209":{},"210":{},"212":{},"214":{},"215":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"230":{},"233":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"242":{},"244":{},"245":{},"246":{},"247":{},"248":{},"250":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"263":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"272":{},"273":{},"274":{},"275":{},"277":{},"278":{},"280":{},"281":{},"282":{},"283":{},"285":{},"287":{},"289":{},"290":{},"291":{},"292":{},"293":{},"295":{},"296":{},"297":{},"298":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"308":{},"309":{},"310":{},"311":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"330":{},"336":{},"337":{},"338":{},"339":{},"341":{},"342":{},"343":{},"344":{},"345":{},"347":{},"348":{},"349":{},"352":{},"355":{},"357":{},"358":{},"359":{},"360":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"388":{},"389":{},"390":{},"391":{},"392":{},"393":{},"394":{},"395":{},"396":{},"397":{},"402":{},"403":{},"404":{},"407":{},"408":{},"409":{},"413":{},"414":{},"415":{},"417":{},"418":{},"420":{},"430":{},"432":{},"433":{},"453":{},"455":{},"465":{},"466":{},"481":{},"483":{},"484":{},"487":{},"488":{},"489":{},"490":{},"503":{},"507":{},"510":{},"511":{},"512":{},"513":{},"514":{},"518":{},"519":{},"520":{},"525":{},"527":{},"530":{},"531":{},"532":{},"533":{},"544":{},"546":{}},"component":{}}],["pipeline&id=c1451bfb",{"_index":2070,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pipeline(",{"_index":2186,"title":{},"name":{},"text":{"43":{},"53":{}},"component":{}}],["pipeline.hpl",{"_index":2634,"title":{},"name":{},"text":{"57":{}},"component":{}}],["pipeline/workflow",{"_index":688,"title":{},"name":{},"text":{"7":{},"41":{},"309":{},"378":{}},"component":{}}],["pipeline_configur",{"_index":2059,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pipeline_execution_configur",{"_index":2060,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pipeline_specification_method",{"_index":5625,"title":{},"name":{},"text":{"287":{}},"component":{}}],["pipeline_statu",{"_index":5469,"title":{},"name":{},"text":{"270":{},"337":{}},"component":{}}],["pipelineend",{"_index":2739,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipelineengin",{"_index":7299,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelineengine.execut",{"_index":7301,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelineengine.getresult",{"_index":7305,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelineengine.waitunitlfinish",{"_index":7302,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelineenginefactory.createpipelineengin",{"_index":7300,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelineengineplugintyp",{"_index":6819,"title":{},"name":{},"text":{"525":{}},"component":{}}],["pipelineerrorcount",{"_index":2743,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipelinefilenam",{"_index":2737,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipelinehopmeta",{"_index":7295,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelinehopmeta(rowgener",{"_index":7297,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelinelog",{"_index":2742,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipelinelogchannelid",{"_index":2740,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipelinemeta",{"_index":6989,"title":{},"name":{},"text":{"532":{},"544":{}},"component":{}}],["pipelinemeta.addpipelinehop(generatordummyhop",{"_index":7298,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelinemeta.addtransform(dummi",{"_index":7294,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelinemeta.addtransform(rowgener",{"_index":7290,"title":{},"name":{},"text":{"544":{}},"component":{}}],["pipelinenam",{"_index":2736,"title":{},"name":{},"text":{"76":{},"270":{},"310":{},"337":{}},"component":{}}],["pipelines/pipelin",{"_index":2611,"title":{},"name":{},"text":{"56":{}},"component":{}}],["pipelinestart",{"_index":2738,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipelinestatusdescript",{"_index":2744,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["pipeline’",{"_index":1526,"title":{},"name":{},"text":{"24":{},"52":{},"55":{},"258":{},"287":{},"466":{},"481":{}},"component":{}}],["pk1dqwelyzjtwjqgim9sbbxqw/u7htej0+bjug3eniwpraxazaksykaesyrib4c8lid+41oiinp",{"_index":2140,"title":{},"name":{},"text":{"42":{}},"component":{}}],["pkcs12",{"_index":1950,"title":{},"name":{},"text":{"41":{}},"component":{}}],["pkg",{"_index":6872,"title":{},"name":{},"text":{"528":{}},"component":{}}],["pl",{"_index":1319,"title":{},"name":{},"text":{"19":{},"50":{},"152":{}},"component":{}}],["place",{"_index":702,"title":{},"name":{},"text":{"7":{},"55":{},"83":{},"158":{},"161":{},"205":{},"223":{},"234":{},"238":{},"247":{},"251":{},"264":{},"270":{},"287":{},"292":{},"317":{},"337":{},"338":{},"349":{},"366":{},"367":{},"373":{},"432":{},"434":{},"435":{},"438":{},"439":{},"440":{},"441":{},"449":{},"451":{},"453":{},"454":{},"457":{},"461":{},"462":{},"463":{},"466":{},"477":{},"478":{},"479":{},"481":{},"487":{},"488":{},"500":{},"503":{},"506":{},"507":{},"508":{},"528":{},"530":{},"531":{},"537":{}},"component":{}}],["placehold",{"_index":2297,"title":{},"name":{},"text":{"50":{},"105":{},"221":{},"229":{},"382":{},"452":{},"544":{}},"component":{}}],["plain",{"_index":19,"title":{"535-1":{}},"name":{},"text":{"1":{},"19":{},"44":{},"65":{},"196":{},"197":{},"275":{},"276":{},"280":{},"298":{},"319":{},"412":{},"418":{},"508":{},"529":{},"535":{}},"component":{}}],["plan",{"_index":1123,"title":{},"name":{},"text":{"9":{},"223":{},"227":{},"395":{}},"component":{}}],["plane",{"_index":5217,"title":{},"name":{},"text":{"247":{}},"component":{}}],["planet",{"_index":4499,"title":{},"name":{},"text":{"241":{}},"component":{}}],["platform",{"_index":232,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"10":{},"18":{},"19":{},"20":{},"37":{},"38":{},"49":{},"56":{},"78":{},"84":{},"87":{},"113":{},"131":{},"158":{},"161":{},"163":{},"165":{},"186":{},"187":{},"189":{},"273":{},"428":{},"429":{},"431":{},"489":{},"513":{},"519":{},"540":{}},"component":{}}],["play",{"_index":2592,"title":{},"name":{},"text":{"56":{}},"component":{}}],["player",{"_index":4459,"title":{},"name":{},"text":{"241":{}},"component":{}}],["plaza",{"_index":5029,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pleas",{"_index":408,"title":{"535-1":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"9":{},"36":{},"40":{},"43":{},"76":{},"83":{},"90":{},"101":{},"113":{},"150":{},"152":{},"153":{},"157":{},"161":{},"162":{},"163":{},"165":{},"168":{},"182":{},"186":{},"187":{},"198":{},"199":{},"205":{},"208":{},"227":{},"235":{},"238":{},"239":{},"250":{},"271":{},"287":{},"295":{},"299":{},"309":{},"316":{},"336":{},"337":{},"359":{},"378":{},"389":{},"390":{},"427":{},"431":{},"437":{},"439":{},"467":{},"483":{},"488":{},"494":{},"498":{},"514":{},"528":{},"531":{},"532":{},"533":{},"535":{},"538":{}},"component":{}}],["plu",{"_index":3480,"title":{},"name":{},"text":{"157":{},"205":{},"234":{},"382":{}},"component":{}}],["pluggabl",{"_index":6732,"title":{},"name":{},"text":{"518":{}},"component":{}}],["plugin",{"_index":225,"title":{"11":{},"77":{},"86":{},"87":{},"89":{},"529":{},"530":{},"531":{},"532":{},"534":{},"2-3":{},"5-13":{},"27-6":{},"33-1":{},"37-10":{},"37-11":{},"37-12":{},"59-2":{},"60-1":{},"63-2":{},"65-2":{},"66-2":{},"67-3":{},"68-2":{},"69-2":{},"70-2":{},"71-2":{},"72-2":{},"73-3":{},"74-2":{},"75-6":{},"75-16":{},"77-4":{},"87-1":{},"88-1":{},"90-12":{},"102-1":{},"150-5":{},"152-12":{},"310-3":{},"379-3":{},"389-17":{},"525-5":{},"530-1":{},"530-2":{},"530-3":{},"530-4":{},"530-6":{},"531-3":{},"532-9":{},"542-3":{},"544-2":{}},"name":{"33":{},"87":{},"88":{},"424":{},"523":{},"529":{},"530":{},"531":{},"532":{},"534":{}},"text":{"2":{},"5":{},"7":{},"20":{},"22":{},"27":{},"30":{},"32":{},"33":{},"35":{},"36":{},"37":{},"39":{},"41":{},"46":{},"62":{},"64":{},"65":{},"75":{},"76":{},"77":{},"82":{},"87":{},"88":{},"90":{},"94":{},"118":{},"121":{},"127":{},"136":{},"150":{},"152":{},"156":{},"157":{},"160":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"203":{},"311":{},"372":{},"388":{},"389":{},"424":{},"427":{},"430":{},"432":{},"436":{},"437":{},"518":{},"519":{},"523":{},"525":{},"526":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"536":{},"542":{},"543":{},"544":{}},"component":{}}],["pluginid",{"_index":2801,"title":{},"name":{},"text":{"77":{}},"component":{}}],["pluginnam",{"_index":2806,"title":{},"name":{},"text":{"77":{}},"component":{}}],["pluginregistri",{"_index":6787,"title":{},"name":{},"text":{"525":{}},"component":{}}],["pluginregistry.getinst",{"_index":6944,"title":{},"name":{},"text":{"530":{}},"component":{}}],["plugins.xml",{"_index":6907,"title":{},"name":{},"text":{"529":{}},"component":{}}],["plugins/databases/access/lib",{"_index":3168,"title":{},"name":{},"text":{"106":{}},"component":{}}],["plugins/engines/beam",{"_index":3868,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["plugins/engines/beam/src/main/samples/metadata/pipelin",{"_index":6972,"title":{},"name":{},"text":{"531":{}},"component":{}}],["plugins/list/{typeclassnam",{"_index":1751,"title":{},"name":{},"text":{"37":{}},"component":{}}],["plugins/misc/git",{"_index":1666,"title":{},"name":{},"text":{"30":{}},"component":{}}],["plugins/transforms/addsequence/src/main/samples/transforms/add",{"_index":6969,"title":{},"name":{},"text":{"531":{}},"component":{}}],["plugins/transforms/janino/lib",{"_index":608,"title":{},"name":{},"text":{"5":{},"373":{}},"component":{}}],["plugins/typ",{"_index":1748,"title":{},"name":{},"text":{"37":{}},"component":{}}],["plugintyp",{"_index":6957,"title":{},"name":{},"text":{"530":{}},"component":{}}],["plugin’",{"_index":602,"title":{},"name":{},"text":{"5":{}},"component":{}}],["pm",{"_index":3385,"title":{},"name":{},"text":{"152":{},"247":{},"366":{}},"component":{}}],["pmc",{"_index":7141,"title":{},"name":{},"text":{"538":{}},"component":{}}],["pmi",{"_index":2989,"title":{},"name":{},"text":{"87":{}},"component":{}}],["pmt",{"_index":4662,"title":{"247-49":{}},"name":{},"text":{"247":{}},"component":{}}],["pmt([field1]/12,[field2],[field3",{"_index":4938,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pmt(rate",{"_index":4936,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pn",{"_index":3386,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pod",{"_index":3514,"title":{},"name":{},"text":{"158":{},"162":{}},"component":{}}],["pod/hop",{"_index":3716,"title":{},"name":{},"text":{"162":{}},"component":{}}],["podtempl",{"_index":3685,"title":{},"name":{},"text":{"162":{}},"component":{}}],["poi",{"_index":4371,"title":{},"name":{},"text":{"234":{},"235":{},"247":{},"365":{}},"component":{}}],["point",{"_index":390,"title":{"532-9":{}},"name":{},"text":{"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"16":{},"28":{},"37":{},"41":{},"56":{},"90":{},"91":{},"94":{},"95":{},"96":{},"100":{},"103":{},"105":{},"158":{},"160":{},"164":{},"165":{},"166":{},"167":{},"168":{},"170":{},"178":{},"194":{},"203":{},"205":{},"217":{},"227":{},"234":{},"247":{},"253":{},"254":{},"258":{},"267":{},"270":{},"273":{},"277":{},"279":{},"280":{},"316":{},"322":{},"330":{},"331":{},"338":{},"366":{},"367":{},"377":{},"383":{},"389":{},"391":{},"400":{},"422":{},"424":{},"429":{},"457":{},"481":{},"494":{},"496":{},"511":{},"513":{},"514":{},"520":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"540":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["pointer",{"_index":3105,"title":{},"name":{},"text":{"94":{}},"component":{}}],["poisson",{"_index":4701,"title":{"247-120":{}},"name":{},"text":{"247":{}},"component":{}}],["poisson([field1],[field2],fals",{"_index":5034,"title":{},"name":{},"text":{"247":{}},"component":{}}],["poisson([field1],[field2],tru",{"_index":5031,"title":{},"name":{},"text":{"247":{}},"component":{}}],["poisson(x,mean,cumul",{"_index":5030,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pojo",{"_index":6916,"title":{},"name":{},"text":{"529":{}},"component":{}}],["pokemon",{"_index":4561,"title":{},"name":{},"text":{"241":{}},"component":{}}],["pokémon",{"_index":4426,"title":{},"name":{},"text":{"241":{}},"component":{}}],["polbfu7eyfd2ilg2aaeg4cyaqflbjhfuvajilzzwvcxk6pi2ztn01/olei0u9aye91daflnghjjv",{"_index":2132,"title":{},"name":{},"text":{"42":{}},"component":{}}],["polici",{"_index":3439,"title":{},"name":{},"text":{"154":{},"186":{},"187":{},"198":{},"292":{},"534":{}},"component":{}}],["poll",{"_index":793,"title":{},"name":{},"text":{"7":{},"169":{},"170":{},"322":{},"496":{},"511":{}},"component":{}}],["pom",{"_index":6962,"title":{"538-2":{},"538-3":{}},"name":{},"text":{"530":{},"534":{}},"component":{}}],["pom.xml",{"_index":6980,"title":{},"name":{},"text":{"532":{}},"component":{}}],["pool",{"_index":3432,"title":{"154-9":{}},"name":{},"text":{"154":{},"165":{},"331":{}},"component":{}}],["pop",{"_index":526,"title":{},"name":{},"text":{"5":{},"27":{},"83":{},"85":{},"103":{},"104":{},"291":{},"464":{},"520":{},"528":{}},"component":{}}],["pop3",{"_index":4345,"title":{},"name":{},"text":{"232":{},"464":{}},"component":{}}],["pop3/imap",{"_index":6492,"title":{"464":{}},"name":{},"text":{"464":{}},"component":{}}],["popul",{"_index":1149,"title":{},"name":{},"text":{"9":{},"20":{},"22":{},"23":{},"52":{},"156":{},"185":{},"227":{},"237":{},"262":{},"264":{},"273":{},"287":{},"290":{},"291":{},"292":{},"304":{},"305":{},"319":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"338":{},"345":{},"356":{},"377":{},"381":{},"394":{},"481":{}},"component":{}}],["popular",{"_index":3115,"title":{},"name":{},"text":{"97":{},"163":{},"359":{}},"component":{}}],["popup",{"_index":1483,"title":{"24":{}},"name":{"24":{}},"text":{"23":{},"24":{},"26":{},"36":{},"83":{}},"component":{}}],["port",{"_index":1001,"title":{"532":{}},"name":{"532":{}},"text":{"8":{},"19":{},"41":{},"50":{},"63":{},"65":{},"72":{},"77":{},"92":{},"113":{},"130":{},"133":{},"153":{},"154":{},"162":{},"228":{},"263":{},"264":{},"277":{},"278":{},"280":{},"292":{},"319":{},"326":{},"377":{},"433":{},"436":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"485":{},"487":{},"488":{},"491":{},"497":{},"514":{},"526":{},"532":{},"533":{}},"component":{}}],["port=port",{"_index":3318,"title":{},"name":{},"text":{"133":{}},"component":{}}],["portabl",{"_index":226,"title":{"2-4":{}},"name":{},"text":{"2":{},"247":{}},"component":{}}],["portal",{"_index":3124,"title":{},"name":{},"text":{"98":{}},"component":{}}],["portion",{"_index":4788,"title":{},"name":{},"text":{"247":{},"357":{},"489":{},"492":{}},"component":{}}],["posit",{"_index":1633,"title":{},"name":{},"text":{"27":{},"105":{},"184":{},"220":{},"235":{},"241":{},"247":{},"270":{},"288":{},"292":{},"324":{},"366":{},"370":{}},"component":{}}],["possibl",{"_index":180,"title":{"38-2":{},"168-7":{},"537-1":{}},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"14":{},"20":{},"23":{},"29":{},"41":{},"50":{},"52":{},"55":{},"57":{},"64":{},"75":{},"76":{},"77":{},"83":{},"90":{},"94":{},"130":{},"150":{},"152":{},"154":{},"159":{},"160":{},"161":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"206":{},"208":{},"213":{},"216":{},"220":{},"222":{},"223":{},"243":{},"248":{},"250":{},"259":{},"270":{},"285":{},"292":{},"297":{},"303":{},"319":{},"338":{},"341":{},"344":{},"359":{},"367":{},"370":{},"372":{},"374":{},"378":{},"384":{},"389":{},"395":{},"405":{},"426":{},"433":{},"437":{},"453":{},"468":{},"482":{},"503":{},"521":{},"527":{},"528":{},"530":{},"541":{}},"component":{}}],["post",{"_index":1168,"title":{"10":{},"264":{},"43-9":{}},"name":{},"text":{"10":{},"25":{},"37":{},"40":{},"43":{},"52":{},"53":{},"54":{},"56":{},"57":{},"81":{},"86":{},"264":{},"316":{},"319":{},"433":{}},"component":{}}],["postgresbulkload",{"_index":5786,"title":{},"name":{"311":{}},"text":{},"component":{}}],["postgresql",{"_index":1240,"title":{"135":{},"311":{}},"name":{"135":{}},"text":{"11":{},"71":{},"77":{},"81":{},"86":{},"118":{},"136":{},"177":{},"303":{},"311":{}},"component":{}}],["postman",{"_index":5833,"title":{},"name":{},"text":{"319":{}},"component":{}}],["postpon",{"_index":178,"title":{},"name":{},"text":{"1":{},"405":{}},"component":{}}],["potenti",{"_index":2351,"title":{},"name":{},"text":{"52":{},"56":{},"248":{},"433":{}},"component":{}}],["power",{"_index":276,"title":{"247-121":{}},"name":{},"text":{"2":{},"20":{},"55":{},"57":{},"78":{},"84":{},"105":{},"247":{},"492":{}},"component":{}}],["power(2;3",{"_index":5037,"title":{},"name":{},"text":{"247":{}},"component":{}}],["powershel",{"_index":3102,"title":{},"name":{},"text":{"94":{},"426":{}},"component":{}}],["pp",{"_index":3399,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pr",{"_index":3400,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pr1234",{"_index":7056,"title":{},"name":{},"text":{"533":{}},"component":{}}],["practic",{"_index":1088,"title":{"9":{},"157-4":{}},"name":{},"text":{"9":{},"18":{},"53":{},"91":{},"94":{},"97":{},"218":{},"227":{},"245":{},"247":{},"254":{},"287":{},"368":{},"389":{},"398":{},"500":{},"531":{},"533":{}},"component":{}}],["prd",{"_index":147,"title":{},"name":{},"text":{"1":{},"13":{},"90":{},"402":{},"408":{}},"component":{}}],["pre",{"_index":1521,"title":{},"name":{},"text":{"24":{},"52":{},"53":{},"54":{},"60":{},"64":{},"158":{},"186":{},"222":{},"227":{},"235":{},"247":{},"264":{},"270":{},"315":{}},"component":{}}],["preced",{"_index":667,"title":{},"name":{},"text":{"7":{},"200":{},"247":{},"292":{},"381":{}},"component":{}}],["precis",{"_index":2642,"title":{"205-4":{}},"name":{},"text":{"59":{},"60":{},"76":{},"178":{},"195":{},"200":{},"205":{},"217":{},"220":{},"227":{},"234":{},"243":{},"247":{},"250":{},"253":{},"254":{},"258":{},"260":{},"267":{},"270":{},"273":{},"277":{},"279":{},"287":{},"288":{},"308":{},"313":{},"316":{},"331":{},"338":{},"349":{},"366":{},"367":{},"372":{},"373":{},"383":{},"386":{},"400":{}},"component":{}}],["precisiom",{"_index":4027,"title":{},"name":{},"text":{"195":{},"200":{}},"component":{}}],["preconfigur",{"_index":2698,"title":{},"name":{},"text":{"68":{}},"component":{}}],["predecessor",{"_index":5338,"title":{},"name":{},"text":{"248":{}},"component":{}}],["predefin",{"_index":2819,"title":{},"name":{},"text":{"78":{},"93":{},"205":{},"302":{}},"component":{}}],["predict",{"_index":5026,"title":{},"name":{},"text":{"247":{}},"component":{}}],["preemptiv",{"_index":5830,"title":{},"name":{},"text":{"319":{}},"component":{}}],["prefer",{"_index":1136,"title":{},"name":{},"text":{"9":{},"22":{},"27":{},"65":{},"71":{},"109":{},"159":{},"166":{},"373":{},"398":{},"518":{},"529":{}},"component":{}}],["prefetch",{"_index":3999,"title":{},"name":{},"text":{"186":{}},"component":{}}],["prefix",{"_index":28,"title":{},"name":{},"text":{"1":{},"19":{},"44":{},"77":{},"133":{},"157":{},"200":{},"203":{},"241":{},"262":{},"272":{},"295":{},"347":{},"366":{},"381":{},"412":{},"418":{},"528":{},"533":{}},"component":{}}],["prefix:product",{"_index":6252,"title":{},"name":{},"text":{"381":{}},"component":{}}],["prem",{"_index":1433,"title":{},"name":{},"text":{"20":{}},"component":{}}],["prepar",{"_index":2045,"title":{"42-10":{},"513-1":{}},"name":{},"text":{"42":{},"50":{},"81":{},"105":{},"158":{},"238":{},"239":{},"538":{}},"component":{}}],["prepareexec",{"_index":2086,"title":{},"name":{},"text":{"42":{}},"component":{}}],["prepareexecut",{"_index":7308,"title":{},"name":{},"text":{"544":{}},"component":{}}],["prepend",{"_index":6299,"title":{},"name":{},"text":{"400":{}},"component":{}}],["prereleas",{"_index":7118,"title":{},"name":{},"text":{"538":{}},"component":{}}],["prerequisit",{"_index":1255,"title":{"14-2":{},"158-1":{},"161-1":{},"162-1":{},"164-1":{}},"name":{},"text":{"53":{},"158":{},"160":{},"161":{},"162":{},"164":{},"170":{},"511":{}},"component":{}}],["present",{"_index":964,"title":{},"name":{},"text":{"8":{},"17":{},"31":{},"78":{},"170":{},"182":{},"208":{},"220":{},"222":{},"232":{},"235":{},"247":{},"273":{},"275":{},"276":{},"316":{},"324":{},"325":{},"349":{},"366":{},"378":{},"400":{},"511":{},"520":{},"527":{},"530":{},"531":{},"533":{},"537":{}},"component":{}}],["preserv",{"_index":824,"title":{},"name":{},"text":{"7":{},"235":{},"271":{},"355":{},"382":{}},"component":{}}],["preset",{"_index":5556,"title":{},"name":{},"text":{"275":{}},"component":{}}],["press",{"_index":1172,"title":{},"name":{},"text":{"10":{},"15":{},"85":{},"205":{},"331":{},"366":{},"498":{},"503":{},"520":{},"527":{}},"component":{}}],["pressur",{"_index":3849,"title":{},"name":{},"text":{"167":{}},"component":{}}],["pretti",{"_index":2460,"title":{},"name":{},"text":{"55":{},"241":{},"433":{}},"component":{}}],["prev_order_d",{"_index":3972,"title":{},"name":{},"text":{"179":{}},"component":{}}],["prevent",{"_index":2369,"title":{},"name":{},"text":{"52":{},"77":{},"90":{},"150":{},"152":{},"186":{},"220":{},"227":{},"299":{},"368":{},"370":{},"389":{},"528":{},"542":{}},"component":{}}],["preview",{"_index":646,"title":{"85":{},"85-2":{}},"name":{"85":{}},"text":{"7":{},"15":{},"17":{},"24":{},"26":{},"27":{},"42":{},"76":{},"78":{},"80":{},"82":{},"84":{},"85":{},"163":{},"220":{},"234":{},"252":{},"259":{},"279":{},"291":{},"292":{},"322":{},"331":{},"366":{},"386":{}},"component":{}}],["previou",{"_index":95,"title":{"453-5":{}},"name":{},"text":{"1":{},"5":{},"7":{},"13":{},"22":{},"23":{},"24":{},"36":{},"40":{},"52":{},"55":{},"56":{},"78":{},"85":{},"103":{},"105":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"168":{},"174":{},"176":{},"178":{},"179":{},"203":{},"205":{},"220":{},"221":{},"227":{},"233":{},"234":{},"243":{},"246":{},"247":{},"250":{},"253":{},"254":{},"256":{},"258":{},"263":{},"264":{},"273":{},"277":{},"280":{},"285":{},"291":{},"309":{},"313":{},"316":{},"319":{},"322":{},"324":{},"330":{},"337":{},"338":{},"363":{},"366":{},"367":{},"381":{},"386":{},"389":{},"403":{},"404":{},"435":{},"439":{},"441":{},"447":{},"448":{},"450":{},"453":{},"454":{},"460":{},"462":{},"465":{},"468":{},"477":{},"478":{},"481":{},"482":{},"487":{},"488":{},"489":{},"490":{},"498":{},"499":{},"503":{},"504":{},"506":{},"508":{},"509":{},"527":{}},"component":{}}],["previous",{"_index":1647,"title":{},"name":{},"text":{"29":{},"41":{},"83":{},"253":{},"254":{},"273":{},"280":{},"481":{},"503":{}},"component":{}}],["previous_result",{"_index":6440,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getactionnr",{"_index":6443,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getexitstatu",{"_index":6442,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getlogchannelid",{"_index":6460,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getlogtext",{"_index":6459,"title":{},"name":{},"text":{"453":{},"527":{}},"component":{}}],["previous_result.getnrerror",{"_index":6444,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrfilesretriev",{"_index":6458,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlinesdelet",{"_index":6450,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlinesinput",{"_index":6445,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlinesoutput",{"_index":6446,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlinesread",{"_index":6447,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlinesreject",{"_index":6452,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlinesupd",{"_index":6448,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getnrlineswritten",{"_index":6449,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getresult",{"_index":6441,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getresultfileslist",{"_index":6457,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.getrow",{"_index":6454,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previous_result.isstop",{"_index":6455,"title":{},"name":{},"text":{"453":{}},"component":{}}],["previousrow",{"_index":5950,"title":{},"name":{},"text":{"337":{}},"component":{}}],["prevweekday",{"_index":4654,"title":{"247-38":{}},"name":{},"text":{"247":{}},"component":{}}],["prevweekday(1",{"_index":4856,"title":{},"name":{},"text":{"247":{}},"component":{}}],["prgdir\"/\"$execut",{"_index":7254,"title":{},"name":{},"text":{"543":{}},"component":{}}],["price",{"_index":2378,"title":{},"name":{},"text":{"52":{}},"component":{}}],["primari",{"_index":1283,"title":{},"name":{},"text":{"15":{},"16":{},"65":{},"78":{},"216":{},"227":{},"248":{},"271":{},"295":{},"297":{},"299":{},"360":{},"361":{},"364":{},"433":{}},"component":{}}],["primarili",{"_index":3880,"title":{},"name":{},"text":{"167":{},"168":{},"322":{}},"component":{}}],["primary/index",{"_index":5717,"title":{},"name":{},"text":{"297":{}},"component":{}}],["primary_pref",{"_index":2674,"title":{},"name":{},"text":{"65":{}},"component":{}}],["primit",{"_index":5762,"title":{},"name":{},"text":{"304":{}},"component":{}}],["primordi",{"_index":4444,"title":{},"name":{},"text":{"241":{}},"component":{}}],["princess",{"_index":4562,"title":{},"name":{},"text":{"241":{}},"component":{}}],["principl",{"_index":2965,"title":{},"name":{},"text":{"84":{},"529":{}},"component":{}}],["print",{"_index":1340,"title":{"516-1":{}},"name":{},"text":{"19":{},"38":{},"39":{},"46":{},"47":{},"55":{},"56":{},"80":{},"97":{},"152":{},"217":{},"233":{},"234":{},"247":{},"251":{},"258":{},"267":{},"280":{},"322":{},"331":{},"366":{},"367":{},"380":{},"383":{},"505":{},"537":{}},"component":{}}],["printabl",{"_index":5159,"title":{},"name":{},"text":{"247":{}},"component":{}}],["printer",{"_index":6083,"title":{},"name":{},"text":{"366":{}},"component":{}}],["printopt",{"_index":1847,"title":{},"name":{},"text":{"38":{}},"component":{}}],["prior",{"_index":2938,"title":{},"name":{},"text":{"83":{},"227":{},"250":{},"275":{},"309":{},"360":{},"378":{},"466":{},"475":{},"492":{}},"component":{}}],["prioriti",{"_index":5599,"title":{},"name":{},"text":{"280":{},"466":{},"471":{},"472":{},"521":{}},"component":{}}],["pritti",{"_index":4356,"title":{},"name":{},"text":{"233":{}},"component":{}}],["privat",{"_index":3503,"title":{},"name":{},"text":{"158":{},"259":{},"280":{},"326":{},"487":{},"488":{},"528":{},"542":{}},"component":{}}],["private/publ",{"_index":5914,"title":{},"name":{},"text":{"326":{}},"component":{}}],["privileg",{"_index":5497,"title":{},"name":{},"text":{"271":{}},"component":{}}],["prject",{"_index":3415,"title":{},"name":{},"text":{"152":{}},"component":{}}],["prm_counter",{"_index":2415,"title":{},"name":{},"text":{"55":{}},"component":{}}],["prm_counter}.0",{"_index":2428,"title":{},"name":{},"text":{"55":{}},"component":{}}],["prm_exampl",{"_index":2616,"title":{},"name":{},"text":{"56":{}},"component":{}}],["prm_example}.0",{"_index":2623,"title":{},"name":{},"text":{"56":{}},"component":{}}],["prm_name",{"_index":6048,"title":{},"name":{},"text":{"363":{}},"component":{}}],["pro",{"_index":3097,"title":{"94":{}},"name":{},"text":{"94":{}},"component":{}}],["probabl",{"_index":2711,"title":{},"name":{},"text":{"71":{},"205":{},"247":{}},"component":{}}],["probe",{"_index":1517,"title":{"68":{},"308":{},"76-7":{}},"name":{"68":{},"308":{}},"text":{"24":{},"64":{},"68":{},"76":{},"81":{},"86":{},"92":{},"308":{}},"component":{}}],["probe\",\"neo4j",{"_index":1736,"title":{},"name":{},"text":{"37":{}},"component":{}}],["probe/output",{"_index":2707,"title":{},"name":{},"text":{"68":{}},"component":{}}],["probe/pipelin",{"_index":2700,"title":{},"name":{},"text":{"68":{}},"component":{}}],["problem",{"_index":288,"title":{},"name":{},"text":{"2":{},"7":{},"20":{},"130":{},"154":{},"163":{},"222":{},"227":{},"247":{},"275":{},"324":{},"487":{}},"component":{}}],["proc",{"_index":4194,"title":{},"name":{},"text":{"206":{}},"component":{}}],["procedur",{"_index":2356,"title":{"206":{}},"name":{},"text":{"52":{},"71":{},"81":{},"86":{},"167":{},"203":{},"206":{},"257":{},"294":{},"441":{},"453":{},"475":{},"493":{}},"component":{}}],["process",{"_index":115,"title":{"237":{},"312":{},"539":{},"82-1":{},"186-6":{},"372-5":{},"533-11":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"13":{},"15":{},"16":{},"19":{},"20":{},"38":{},"41":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"59":{},"60":{},"67":{},"68":{},"73":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"86":{},"102":{},"103":{},"105":{},"114":{},"158":{},"161":{},"163":{},"166":{},"167":{},"169":{},"171":{},"172":{},"181":{},"186":{},"196":{},"198":{},"210":{},"216":{},"218":{},"220":{},"222":{},"234":{},"237":{},"244":{},"245":{},"247":{},"250":{},"251":{},"256":{},"258":{},"266":{},"270":{},"273":{},"275":{},"280":{},"283":{},"291":{},"292":{},"309":{},"312":{},"314":{},"320":{},"325":{},"329":{},"330":{},"332":{},"333":{},"334":{},"337":{},"338":{},"341":{},"344":{},"346":{},"347":{},"354":{},"366":{},"367":{},"369":{},"370":{},"372":{},"378":{},"381":{},"383":{},"388":{},"404":{},"409":{},"433":{},"439":{},"442":{},"448":{},"450":{},"455":{},"457":{},"460":{},"465":{},"469":{},"481":{},"485":{},"488":{},"492":{},"493":{},"494":{},"496":{},"500":{},"512":{},"519":{},"533":{},"537":{},"540":{},"543":{}},"component":{}}],["processfil",{"_index":5790,"title":{},"name":{"312":{}},"text":{},"component":{}}],["processing/input/file01.csv",{"_index":2230,"title":{},"name":{},"text":{"46":{}},"component":{}}],["processing/input/file02.csv",{"_index":2220,"title":{},"name":{},"text":{"46":{}},"component":{}}],["processing/pdi/check",{"_index":2223,"title":{},"name":{},"text":{"46":{}},"component":{}}],["processing_instruct",{"_index":6256,"title":{},"name":{},"text":{"381":{}},"component":{}}],["processor",{"_index":5383,"title":{},"name":{},"text":{"256":{},"298":{},"372":{}},"component":{}}],["processrow",{"_index":6144,"title":{},"name":{},"text":{"372":{},"532":{}},"component":{}}],["prod",{"_index":2298,"title":{},"name":{},"text":{"50":{}},"component":{}}],["produc",{"_index":1718,"title":{"197":{},"199":{},"276":{},"427-2":{}},"name":{},"text":{"37":{},"41":{},"43":{},"52":{},"70":{},"75":{},"81":{},"82":{},"83":{},"86":{},"162":{},"163":{},"196":{},"197":{},"199":{},"202":{},"236":{},"247":{},"262":{},"271":{},"272":{},"275":{},"276":{},"285":{},"288":{},"308":{},"381":{},"382":{},"433":{},"466":{},"544":{}},"component":{}}],["product",{"_index":277,"title":{},"name":{},"text":{"2":{},"7":{},"9":{},"10":{},"20":{},"50":{},"52":{},"56":{},"78":{},"81":{},"91":{},"93":{},"103":{},"152":{},"157":{},"221":{},"227":{},"228":{},"262":{},"272":{},"323":{},"389":{},"390":{}},"component":{}}],["product_ord",{"_index":4269,"title":{},"name":{},"text":{"221":{}},"component":{}}],["productnam",{"_index":4477,"title":{},"name":{},"text":{"241":{}},"component":{}}],["productnr",{"_index":4274,"title":{},"name":{},"text":{"221":{}},"component":{}}],["profer",{"_index":7026,"title":{},"name":{},"text":{"533":{}},"component":{}}],["profession",{"_index":1426,"title":{},"name":{},"text":{"20":{}},"component":{}}],["profil",{"_index":1451,"title":{"61":{}},"name":{"61":{}},"text":{"20":{},"29":{},"61":{},"68":{},"69":{},"171":{},"533":{}},"component":{}}],["profile\",\"neo4j",{"_index":1734,"title":{},"name":{},"text":{"37":{}},"component":{}}],["program",{"_index":2249,"title":{},"name":{},"text":{"50":{},"160":{},"163":{},"167":{},"345":{},"359":{},"372":{},"428":{},"489":{}},"component":{}}],["programmat",{"_index":2467,"title":{},"name":{},"text":{"56":{}},"component":{}}],["progress",{"_index":1883,"title":{},"name":{},"text":{"40":{},"95":{},"167":{}},"component":{}}],["proj1",{"_index":2295,"title":{},"name":{},"text":{"50":{}},"component":{}}],["project",{"_index":3,"title":{"89":{},"90":{},"91":{},"93":{},"389":{},"520":{},"1-3":{},"2-6":{},"13-3":{},"25-2":{},"90-2":{},"90-3":{},"90-5":{},"90-7":{},"90-12":{},"91-2":{},"92-1":{},"93-1":{},"93-3":{},"93-4":{},"94-3":{},"150-5":{},"152-2":{},"152-7":{},"152-12":{},"158-2":{},"164-3":{},"164-5":{},"389-2":{},"389-4":{},"389-7":{},"389-8":{},"389-9":{},"402-1":{},"527-1":{},"527-2":{},"527-7":{},"531-2":{},"531-4":{},"531-6":{},"533-4":{},"533-5":{},"534-2":{},"546-1":{}},"name":{"89":{},"93":{},"150":{},"389":{},"402":{},"408":{},"520":{}},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"9":{},"11":{},"13":{},"17":{},"18":{},"19":{},"22":{},"23":{},"25":{},"27":{},"30":{},"31":{},"34":{},"37":{},"38":{},"39":{},"41":{},"46":{},"47":{},"50":{},"53":{},"54":{},"55":{},"56":{},"60":{},"64":{},"65":{},"67":{},"68":{},"73":{},"78":{},"80":{},"81":{},"83":{},"87":{},"88":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"150":{},"151":{},"152":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"170":{},"188":{},"189":{},"190":{},"191":{},"234":{},"240":{},"241":{},"246":{},"250":{},"256":{},"259":{},"260":{},"261":{},"273":{},"286":{},"291":{},"309":{},"337":{},"344":{},"345":{},"372":{},"378":{},"389":{},"390":{},"395":{},"398":{},"401":{},"402":{},"408":{},"411":{},"413":{},"414":{},"415":{},"416":{},"418":{},"421":{},"422":{},"430":{},"433":{},"483":{},"511":{},"513":{},"514":{},"518":{},"519":{},"520":{},"521":{},"525":{},"527":{},"530":{},"531":{},"532":{},"533":{},"534":{},"535":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["project.git",{"_index":6689,"title":{},"name":{},"text":{"514":{}},"component":{}}],["project.vers",{"_index":7062,"title":{},"name":{},"text":{"534":{}},"component":{}}],["project_deployment_dir=/home/hop/apach",{"_index":6707,"title":{},"name":{},"text":{"514":{}},"component":{}}],["project_hom",{"_index":1137,"title":{},"name":{},"text":{"9":{},"90":{},"93":{},"160":{},"167":{},"168":{},"170":{},"389":{},"398":{},"511":{}},"component":{}}],["project_home/users/hans/test",{"_index":2113,"title":{},"name":{},"text":{"42":{}},"component":{}}],["project_home=/my/project/hom",{"_index":3875,"title":{},"name":{},"text":{"167":{}},"component":{}}],["project_home}/book",{"_index":2704,"title":{},"name":{},"text":{"68":{}},"component":{}}],["project_home}/dataset",{"_index":2941,"title":{},"name":{},"text":{"83":{},"90":{},"93":{},"389":{}},"component":{}}],["project_home}/files/bigfile.csv",{"_index":3923,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["project_home}/hop/logging/pipelin",{"_index":2389,"title":{},"name":{},"text":{"53":{}},"component":{}}],["project_home}/hop/logging/workflow",{"_index":2402,"title":{},"name":{},"text":{"54":{}},"component":{}}],["project_home}/hop/pipelin",{"_index":2617,"title":{},"name":{},"text":{"56":{}},"component":{}}],["project_home}/mapping.hpl",{"_index":3921,"title":{},"name":{},"text":{"170":{}},"component":{}}],["project_home}/metadata",{"_index":3044,"title":{},"name":{},"text":{"90":{},"92":{},"93":{},"389":{}},"component":{}}],["project_home}/metadata/rdbm",{"_index":1227,"title":{},"name":{},"text":{"11":{}},"component":{}}],["project_home}/pipelin",{"_index":2699,"title":{},"name":{},"text":{"68":{}},"component":{}}],["project_home}/reflection/gener",{"_index":2693,"title":{},"name":{},"text":{"67":{},"73":{}},"component":{}}],["project_home}/reflection/pipelin",{"_index":2694,"title":{},"name":{},"text":{"67":{}},"component":{}}],["project_home}/reflection/workflow",{"_index":2721,"title":{},"name":{},"text":{"73":{}},"component":{}}],["project_home}/transforms/nul",{"_index":2543,"title":{},"name":{},"text":{"56":{}},"component":{}}],["project_home}/transforms/switch",{"_index":1353,"title":{},"name":{},"text":{"19":{},"38":{}},"component":{}}],["project_home}/upd",{"_index":6622,"title":{},"name":{},"text":{"511":{}},"component":{}}],["project_nam",{"_index":6830,"title":{},"name":{},"text":{"527":{}},"component":{}}],["project_name=databas",{"_index":6831,"title":{},"name":{},"text":{"527":{}},"component":{}}],["projectconfigur",{"_index":3037,"title":{},"name":{},"text":{"90":{},"389":{},"543":{}},"component":{}}],["projecthom",{"_index":3038,"title":{},"name":{},"text":{"90":{},"389":{},"543":{}},"component":{}}],["projectlifecycl",{"_index":3041,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["projectmandatori",{"_index":3031,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{},"543":{}},"component":{}}],["projectnam",{"_index":1716,"title":{},"name":{},"text":{"37":{},"90":{},"389":{},"527":{},"543":{}},"component":{}}],["projects/kettle/inventori",{"_index":2206,"title":{},"name":{},"text":{"46":{}},"component":{}}],["projects/one/dev",{"_index":3056,"title":{},"name":{},"text":{"90":{}},"component":{}}],["projects/one/prd",{"_index":3058,"title":{},"name":{},"text":{"90":{}},"component":{}}],["projects/one/uat",{"_index":3057,"title":{},"name":{},"text":{"90":{}},"component":{}}],["projects/two/dev",{"_index":3059,"title":{},"name":{},"text":{"90":{}},"component":{}}],["projects/two/prd",{"_index":3061,"title":{},"name":{},"text":{"90":{}},"component":{}}],["projects/two/uat",{"_index":3060,"title":{},"name":{},"text":{"90":{}},"component":{}}],["projectsconf",{"_index":7272,"title":{},"name":{},"text":{"543":{}},"component":{}}],["projectsconfig",{"_index":3030,"title":{},"name":{},"text":{"90":{},"389":{},"543":{}},"component":{}}],["project’",{"_index":161,"title":{},"name":{},"text":{"1":{},"2":{},"56":{},"64":{},"92":{},"93":{},"95":{},"164":{},"406":{}},"component":{}}],["promot",{"_index":7150,"title":{"540":{}},"name":{"540":{}},"text":{"540":{}},"component":{}}],["prompt",{"_index":2032,"title":{},"name":{},"text":{"41":{},"130":{}},"component":{}}],["pronunci",{"_index":5336,"title":{},"name":{},"text":{"248":{}},"component":{}}],["proof",{"_index":1157,"title":{},"name":{},"text":{"9":{},"396":{}},"component":{}}],["prop1=xxx,prop2=yyi",{"_index":6645,"title":{},"name":{},"text":{"514":{}},"component":{}}],["proper",{"_index":335,"title":{"247-159":{}},"name":{},"text":{"2":{},"303":{},"533":{}},"component":{}}],["proper(\"hello",{"_index":5247,"title":{},"name":{},"text":{"247":{}},"component":{}}],["proper(text",{"_index":5246,"title":{},"name":{},"text":{"247":{}},"component":{}}],["properli",{"_index":4359,"title":{},"name":{},"text":{"233":{},"473":{},"514":{}},"component":{}}],["properti",{"_index":63,"title":{"313":{},"314":{},"7-11":{},"78-6":{},"103-4":{},"529-2":{}},"name":{},"text":{"1":{},"7":{},"9":{},"13":{},"19":{},"24":{},"27":{},"37":{},"38":{},"41":{},"46":{},"47":{},"78":{},"81":{},"86":{},"90":{},"92":{},"93":{},"94":{},"103":{},"133":{},"155":{},"157":{},"165":{},"178":{},"221":{},"234":{},"250":{},"259":{},"275":{},"276":{},"287":{},"291":{},"297":{},"298":{},"299":{},"300":{},"303":{},"309":{},"311":{},"313":{},"314":{},"323":{},"324":{},"325":{},"331":{},"349":{},"366":{},"367":{},"374":{},"375":{},"378":{},"381":{},"383":{},"388":{},"394":{},"402":{},"408":{},"415":{},"418":{},"426":{},"432":{},"433":{},"455":{},"474":{},"476":{},"481":{},"486":{},"514":{},"520":{},"529":{},"544":{}},"component":{}}],["propertyinput",{"_index":5791,"title":{},"name":{"313":{}},"text":{},"component":{}}],["propertyoutput",{"_index":5793,"title":{},"name":{"314":{}},"text":{},"component":{}}],["propertyset",{"_index":5744,"title":{},"name":{},"text":{"300":{}},"component":{}}],["proport",{"_index":4918,"title":{},"name":{},"text":{"247":{}},"component":{}}],["propos",{"_index":3082,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["proposit",{"_index":230,"title":{"2":{}},"name":{},"text":{},"component":{}}],["propsui.getdisplay",{"_index":7215,"title":{},"name":{},"text":{"542":{}},"component":{}}],["protect",{"_index":1926,"title":{},"name":{},"text":{"41":{},"205":{},"234":{},"235":{}},"component":{}}],["proto",{"_index":3227,"title":{},"name":{},"text":{"117":{}},"component":{}}],["protoc",{"_index":2664,"title":{},"name":{},"text":{"63":{}},"component":{}}],["protocol",{"_index":1933,"title":{"154-4":{}},"name":{},"text":{"41":{},"130":{},"154":{},"232":{},"278":{},"280":{},"294":{},"305":{},"326":{},"428":{},"430":{},"431":{},"462":{},"464":{},"465":{},"480":{},"487":{},"488":{},"497":{}},"component":{}}],["protocolhandl",{"_index":1559,"title":{},"name":{},"text":{"25":{}},"component":{}}],["prototyp",{"_index":5741,"title":{},"name":{},"text":{"299":{}},"component":{}}],["proven",{"_index":6322,"title":{},"name":{},"text":{"429":{}},"component":{}}],["provid",{"_index":967,"title":{"544-3":{}},"name":{},"text":{"8":{},"9":{},"10":{},"19":{},"22":{},"23":{},"26":{},"27":{},"29":{},"32":{},"34":{},"37":{},"38":{},"41":{},"48":{},"49":{},"50":{},"52":{},"53":{},"54":{},"56":{},"77":{},"81":{},"87":{},"96":{},"99":{},"130":{},"154":{},"157":{},"160":{},"161":{},"162":{},"163":{},"165":{},"167":{},"168":{},"179":{},"202":{},"205":{},"228":{},"233":{},"234":{},"235":{},"243":{},"247":{},"250":{},"259":{},"263":{},"270":{},"281":{},"287":{},"291":{},"292":{},"297":{},"298":{},"299":{},"301":{},"310":{},"319":{},"320":{},"348":{},"355":{},"361":{},"363":{},"364":{},"366":{},"375":{},"378":{},"379":{},"381":{},"398":{},"428":{},"429":{},"432":{},"457":{},"461":{},"464":{},"465":{},"489":{},"492":{},"496":{},"514":{},"519":{},"520":{},"521":{},"522":{},"527":{},"528":{},"534":{},"537":{},"541":{},"542":{},"544":{}},"component":{}}],["provide).thi",{"_index":6675,"title":{},"name":{},"text":{"514":{}},"component":{}}],["provis",{"_index":3792,"title":{},"name":{},"text":{"165":{}},"component":{}}],["proxi",{"_index":1012,"title":{"461-6":{},"462-5":{},"463-5":{}},"name":{},"text":{"8":{},"154":{},"232":{},"263":{},"264":{},"319":{},"326":{},"377":{},"436":{},"461":{},"462":{},"463":{},"464":{},"465":{},"488":{}},"component":{}}],["proxim",{"_index":3023,"title":{},"name":{},"text":{"87":{}},"component":{}}],["proxyhost",{"_index":1011,"title":{},"name":{},"text":{"8":{}},"component":{}}],["proxyport",{"_index":1013,"title":{},"name":{},"text":{"8":{}},"component":{}}],["proxyschem",{"_index":1014,"title":{},"name":{},"text":{"8":{}},"component":{}}],["prune",{"_index":5356,"title":{},"name":{},"text":{"250":{}},"component":{}}],["ps",{"_index":1843,"title":{},"name":{},"text":{"38":{},"41":{},"152":{}},"component":{}}],["pst",{"_index":6120,"title":{},"name":{},"text":{"366":{}},"component":{}}],["pt",{"_index":3401,"title":{},"name":{},"text":{"152":{}},"component":{}}],["ptransform",{"_index":3568,"title":{},"name":{},"text":{"160":{}},"component":{}}],["pu",{"_index":3402,"title":{},"name":{},"text":{"152":{}},"component":{}}],["pub/sub",{"_index":2876,"title":{"192":{},"193":{}},"name":{},"text":{"81":{},"86":{},"165":{},"192":{},"193":{},"430":{}},"component":{}}],["public",{"_index":3502,"title":{},"name":{},"text":{"158":{},"165":{},"372":{},"462":{},"529":{},"532":{},"533":{},"535":{},"537":{},"538":{},"542":{}},"component":{}}],["publish",{"_index":2877,"title":{"192":{}},"name":{},"text":{"81":{},"86":{},"192":{},"197":{},"241":{},"275":{},"276":{},"430":{},"514":{},"532":{},"538":{}},"component":{}}],["pubsubmessag",{"_index":4017,"title":{},"name":{},"text":{"192":{},"193":{}},"component":{}}],["pud",{"_index":1158,"title":{},"name":{},"text":{"9":{},"396":{}},"component":{}}],["pull",{"_index":1493,"title":{"533-14":{},"533-15":{},"536-2":{},"536-4":{},"536-6":{}},"name":{},"text":{"23":{},"25":{},"30":{},"50":{},"275":{},"514":{},"527":{},"533":{}},"component":{}}],["pull/1234/head:pr1234",{"_index":7057,"title":{},"name":{},"text":{"533":{}},"component":{}}],["punch",{"_index":4318,"title":{},"name":{},"text":{"227":{}},"component":{}}],["pure",{"_index":2362,"title":{},"name":{},"text":{"52":{},"216":{},"269":{}},"component":{}}],["purg",{"_index":1402,"title":{},"name":{},"text":{"19":{},"41":{},"381":{}},"component":{}}],["purpos",{"_index":859,"title":{},"name":{},"text":{"7":{},"50":{},"85":{},"90":{},"93":{},"104":{},"150":{},"152":{},"160":{},"171":{},"203":{},"223":{},"229":{},"234":{},"247":{},"267":{},"312":{},"322":{},"389":{},"466":{}},"component":{}}],["purpose=develop",{"_index":3063,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["push",{"_index":1491,"title":{},"name":{},"text":{"23":{},"25":{},"30":{},"84":{},"163":{},"204":{},"292":{},"488":{},"528":{},"533":{},"538":{},"540":{}},"component":{}}],["put",{"_index":887,"title":{"463":{},"488":{}},"name":{},"text":{"7":{},"9":{},"37":{},"55":{},"56":{},"99":{},"101":{},"133":{},"162":{},"172":{},"196":{},"197":{},"205":{},"216":{},"235":{},"247":{},"264":{},"275":{},"276":{},"280":{},"299":{},"319":{},"338":{},"346":{},"363":{},"364":{},"368":{},"373":{},"377":{},"383":{},"398":{},"457":{},"463":{},"464":{},"474":{},"488":{},"503":{},"531":{},"544":{}},"component":{}}],["puterror",{"_index":6189,"title":{},"name":{},"text":{"372":{}},"component":{}}],["puterror(data.outputrowmeta",{"_index":6187,"title":{},"name":{},"text":{"372":{}},"component":{}}],["putrow",{"_index":6169,"title":{},"name":{},"text":{"372":{},"544":{}},"component":{}}],["putrow(data.outputrowmeta",{"_index":6170,"title":{},"name":{},"text":{"372":{}},"component":{}}],["putti",{"_index":6565,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["puttygen",{"_index":6566,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["pv",{"_index":3410,"title":{"247-50":{}},"name":{},"text":{"152":{},"247":{}},"component":{}}],["pv([field2]/12",{"_index":4944,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pv(rate",{"_index":4943,"title":{},"name":{},"text":{"247":{}},"component":{}}],["pwd",{"_index":2811,"title":{},"name":{},"text":{"77":{}},"component":{}}],["pwd/hop.pwd",{"_index":2195,"title":{},"name":{},"text":{"44":{}},"component":{}}],["px",{"_index":3403,"title":{},"name":{},"text":{"152":{}},"component":{}}],["py",{"_index":3387,"title":{},"name":{},"text":{"152":{}},"component":{}}],["python",{"_index":2470,"title":{"337-8":{},"337-12":{}},"name":{},"text":{"56":{},"87":{},"163":{},"337":{}},"component":{}}],["q",{"_index":1689,"title":{},"name":{},"text":{"36":{},"205":{},"263":{},"528":{}},"component":{}}],["q&a",{"_index":6752,"title":{},"name":{},"text":{"519":{},"520":{}},"component":{}}],["qh8crynujaupfxzafb5xwhwi6uqsig+7gjbvypqtcb2h545sow3bd8ybwd33ece8xd9yquibb3s6",{"_index":2143,"title":{},"name":{},"text":{"42":{}},"component":{}}],["qr",{"_index":7105,"title":{},"name":{},"text":{"537":{}},"component":{}}],["qualifi",{"_index":4014,"title":{},"name":{},"text":{"191":{},"436":{}},"component":{}}],["qualiti",{"_index":2696,"title":{},"name":{},"text":{"68":{},"211":{},"502":{},"519":{}},"component":{}}],["quarter",{"_index":4160,"title":{},"name":{},"text":{"205":{},"256":{}},"component":{}}],["queri",{"_index":1677,"title":{"179":{},"40-3":{},"41-10":{},"41-11":{},"41-12":{},"259-6":{},"264-6":{},"290-6":{},"290-7":{},"291-6":{},"291-9":{}},"name":{},"text":{"32":{},"37":{},"40":{},"41":{},"42":{},"50":{},"52":{},"58":{},"64":{},"78":{},"81":{},"83":{},"84":{},"86":{},"113":{},"179":{},"188":{},"205":{},"207":{},"208":{},"221":{},"222":{},"227":{},"228":{},"230":{},"236":{},"238":{},"246":{},"259":{},"264":{},"290":{},"291":{},"296":{},"331":{},"351":{},"363":{},"429":{},"432":{},"437":{},"467":{},"492":{},"501":{}},"component":{}}],["question",{"_index":1242,"title":{"12":{},"12-1":{}},"name":{},"text":{"12":{},"96":{},"163":{},"221":{},"238":{},"324":{},"363":{},"469":{}},"component":{}}],["queu",{"_index":4001,"title":{},"name":{},"text":{"186":{}},"component":{}}],["queue",{"_index":5565,"title":{},"name":{},"text":{"275":{},"322":{}},"component":{}}],["queuedthreadpool[qtp1195781551]@47462daf{stopped,8[{o.e.j.s.servletcontexthandler@1a6df932{/,null,stopped},[o.e.j.s.servletcontexthandler@1a6df932{/,null,stop",{"_index":1976,"title":{},"name":{},"text":{"41":{}},"component":{}}],["quick",{"_index":968,"title":{"518":{}},"name":{},"text":{"8":{},"10":{},"56":{},"85":{},"162":{}},"component":{}}],["quicker",{"_index":7032,"title":{},"name":{},"text":{"533":{}},"component":{}}],["quickli",{"_index":1662,"title":{},"name":{},"text":{"29":{},"36":{},"50":{},"220":{},"381":{},"432":{},"433":{},"521":{}},"component":{}}],["quickstart",{"_index":3796,"title":{},"name":{},"text":{"165":{}},"component":{}}],["quit",{"_index":1115,"title":{},"name":{},"text":{"9":{},"36":{},"38":{},"46":{},"47":{},"56":{},"152":{},"395":{},"433":{},"528":{},"533":{}},"component":{}}],["quot",{"_index":1838,"title":{"38-8":{},"152-6":{}},"name":{},"text":{"71":{},"238":{},"241":{},"243":{},"247":{},"289":{},"298":{},"311":{},"316":{},"346":{},"366":{}},"component":{}}],["quotient",{"_index":4702,"title":{"247-122":{}},"name":{},"text":{"247":{}},"component":{}}],["quotient(4.5",{"_index":5042,"title":{},"name":{},"text":{"247":{}},"component":{}}],["quotient(5",{"_index":5040,"title":{},"name":{},"text":{"247":{}},"component":{}}],["quotient(numer",{"_index":5038,"title":{},"name":{},"text":{"247":{}},"component":{}}],["qv3t9zgyjjyajvzwutnhcuiqe4qarjjgxh+gsloewhpgpkzenue50w1smkh7h3ubzgid9aygmmpk",{"_index":2124,"title":{},"name":{},"text":{"42":{}},"component":{}}],["r",{"_index":1351,"title":{},"name":{},"text":{"19":{},"38":{},"87":{},"318":{},"372":{},"428":{},"514":{}},"component":{}}],["r=0",{"_index":1366,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{}},"component":{}}],["r=1",{"_index":1373,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{}},"component":{}}],["r=10",{"_index":2422,"title":{},"name":{},"text":{"55":{}},"component":{}}],["r=10000",{"_index":2952,"title":{},"name":{},"text":{"83":{}},"component":{}}],["r=1000000",{"_index":2026,"title":{},"name":{},"text":{"41":{}},"component":{}}],["r=22",{"_index":2955,"title":{},"name":{},"text":{"83":{}},"component":{}}],["r=5",{"_index":1371,"title":{},"name":{},"text":{"19":{},"38":{},"56":{}},"component":{}}],["race",{"_index":4486,"title":{},"name":{},"text":{"241":{},"247":{}},"component":{}}],["radian",{"_index":4703,"title":{"247-123":{}},"name":{},"text":{"247":{}},"component":{}}],["radians(270",{"_index":5046,"title":{},"name":{},"text":{"247":{}},"component":{}}],["radians(angl",{"_index":5045,"title":{},"name":{},"text":{"247":{}},"component":{}}],["radiu",{"_index":3961,"title":{},"name":{},"text":{"178":{}},"component":{}}],["raid",{"_index":5724,"title":{},"name":{},"text":{"298":{}},"component":{}}],["rais",{"_index":4983,"title":{"251-6":{}},"name":{},"text":{"247":{},"250":{},"251":{},"273":{},"386":{}},"component":{}}],["ralph",{"_index":2363,"title":{},"name":{},"text":{"52":{},"227":{}},"component":{}}],["ram",{"_index":457,"title":{},"name":{},"text":{"5":{},"8":{}},"component":{}}],["ram:///any/path/to/file.txt",{"_index":1057,"title":{},"name":{},"text":{"8":{}},"component":{}}],["ran",{"_index":1292,"title":{},"name":{},"text":{"15":{},"56":{},"322":{}},"component":{}}],["rand",{"_index":4704,"title":{"247-124":{}},"name":{},"text":{"247":{}},"component":{}}],["randbetween",{"_index":4705,"title":{"247-125":{}},"name":{},"text":{"247":{}},"component":{}}],["randbetween(1,100",{"_index":5051,"title":{},"name":{},"text":{"247":{}},"component":{}}],["randbetween(bottom",{"_index":5050,"title":{},"name":{},"text":{"247":{}},"component":{}}],["random",{"_index":1656,"title":{"249":{}},"name":{},"text":{"29":{},"61":{},"81":{},"86":{},"87":{},"159":{},"160":{},"162":{},"169":{},"241":{},"247":{},"249":{},"318":{}},"component":{}}],["randomdigit",{"_index":4554,"title":{},"name":{},"text":{"241":{}},"component":{}}],["randomdigitnotzero",{"_index":4555,"title":{},"name":{},"text":{"241":{}},"component":{}}],["randomli",{"_index":5557,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["rang",{"_index":2408,"title":{"302":{}},"name":{},"text":{"55":{},"81":{},"86":{},"227":{},"247":{},"256":{},"275":{},"296":{},"302":{},"331":{},"335":{},"357":{},"363":{},"464":{}},"component":{}}],["rank",{"_index":5415,"title":{},"name":{},"text":{"262":{}},"component":{}}],["rap",{"_index":7183,"title":{},"name":{},"text":{"541":{}},"component":{}}],["rap/rwt",{"_index":7186,"title":{},"name":{},"text":{"541":{},"542":{}},"component":{}}],["rap/src/main/resources/org/apache/hop/ui/hopgui/canva",{"_index":7197,"title":{},"name":{},"text":{"541":{}},"component":{}}],["rap/src/main/resources/org/apache/hop/ui/hopgui/dark",{"_index":7193,"title":{},"name":{},"text":{"541":{}},"component":{}}],["rap/src/main/resources/org/apache/hop/ui/hopgui/light",{"_index":7195,"title":{},"name":{},"text":{"541":{}},"component":{}}],["rare",{"_index":726,"title":{},"name":{},"text":{"7":{},"511":{}},"component":{}}],["rat:check",{"_index":6865,"title":{},"name":{},"text":{"527":{},"531":{},"533":{},"537":{},"546":{}},"component":{}}],["rate",{"_index":2381,"title":{},"name":{},"text":{"52":{},"198":{},"247":{}},"component":{}}],["ratio",{"_index":934,"title":{},"name":{},"text":{"7":{}},"component":{}}],["raw",{"_index":3953,"title":{"178-7":{}},"name":{},"text":{"178":{},"355":{},"381":{},"433":{},"470":{}},"component":{}}],["rc",{"_index":7120,"title":{},"name":{},"text":{"538":{}},"component":{}}],["rc1",{"_index":7121,"title":{},"name":{},"text":{"538":{},"540":{}},"component":{}}],["rc4",{"_index":3831,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rcx",{"_index":7097,"title":{},"name":{},"text":{"537":{},"538":{},"540":{}},"component":{}}],["rdb",{"_index":3320,"title":{"134":{}},"name":{},"text":{},"component":{}}],["rdbm",{"_index":1412,"title":{},"name":{"71":{}},"text":{"19":{},"77":{},"92":{},"107":{},"286":{},"388":{},"414":{}},"component":{}}],["rdd",{"_index":3881,"title":{},"name":{},"text":{"168":{}},"component":{}}],["rdn",{"_index":5587,"title":{},"name":{},"text":{"278":{}},"component":{}}],["re",{"_index":1058,"title":{},"name":{},"text":{"8":{},"9":{},"93":{},"161":{},"163":{},"165":{},"167":{},"206":{},"223":{},"271":{},"281":{},"336":{},"345":{},"380":{},"393":{},"394":{},"472":{},"492":{},"505":{},"525":{},"528":{},"533":{},"535":{},"542":{}},"component":{}}],["re)start",{"_index":531,"title":{},"name":{},"text":{"5":{}},"component":{}}],["reach",{"_index":3436,"title":{},"name":{},"text":{"154":{},"163":{},"202":{},"208":{},"500":{},"501":{}},"component":{}}],["reachabl",{"_index":6365,"title":{},"name":{},"text":{"433":{},"480":{}},"component":{}}],["react",{"_index":6094,"title":{},"name":{},"text":{"366":{}},"component":{}}],["read",{"_index":99,"title":{"313":{}},"name":{},"text":{"1":{},"4":{},"8":{},"9":{},"13":{},"15":{},"19":{},"20":{},"27":{},"32":{},"41":{},"46":{},"50":{},"52":{},"55":{},"65":{},"68":{},"76":{},"77":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"91":{},"97":{},"106":{},"151":{},"154":{},"156":{},"157":{},"158":{},"160":{},"161":{},"163":{},"168":{},"170":{},"180":{},"181":{},"182":{},"184":{},"185":{},"186":{},"193":{},"194":{},"195":{},"196":{},"198":{},"207":{},"211":{},"213":{},"215":{},"220":{},"227":{},"231":{},"232":{},"234":{},"236":{},"238":{},"239":{},"242":{},"243":{},"244":{},"250":{},"256":{},"259":{},"260":{},"267":{},"272":{},"273":{},"275":{},"277":{},"284":{},"287":{},"288":{},"291":{},"294":{},"298":{},"303":{},"304":{},"306":{},"307":{},"310":{},"313":{},"314":{},"319":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"339":{},"340":{},"341":{},"355":{},"363":{},"366":{},"367":{},"368":{},"372":{},"374":{},"376":{},"381":{},"384":{},"386":{},"389":{},"393":{},"401":{},"402":{},"404":{},"405":{},"407":{},"409":{},"427":{},"428":{},"429":{},"430":{},"433":{},"453":{},"461":{},"464":{},"489":{},"502":{},"508":{},"511":{},"514":{},"527":{},"530":{},"541":{},"544":{}},"component":{}}],["readabl",{"_index":954,"title":{},"name":{},"text":{"7":{},"22":{},"56":{},"352":{},"381":{},"522":{},"529":{}},"component":{}}],["readi",{"_index":1268,"title":{},"name":{},"text":{"15":{},"16":{},"23":{},"25":{},"50":{},"56":{},"162":{},"171":{},"512":{}},"component":{}}],["reading/writ",{"_index":3658,"title":{},"name":{},"text":{"162":{}},"component":{}}],["readm",{"_index":7106,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["readsiz",{"_index":5756,"title":{},"name":{},"text":{"303":{}},"component":{}}],["real",{"_index":278,"title":{},"name":{},"text":{"2":{},"50":{},"54":{},"56":{},"78":{},"158":{},"160":{},"228":{},"247":{},"275":{},"276":{},"322":{}},"component":{}}],["realli",{"_index":755,"title":{},"name":{},"text":{"7":{},"8":{},"56":{},"105":{},"373":{},"378":{},"432":{},"533":{}},"component":{}}],["realm",{"_index":1600,"title":{},"name":{},"text":{"25":{}},"component":{}}],["realtim",{"_index":306,"title":{},"name":{},"text":{"2":{},"431":{}},"component":{}}],["reason",{"_index":2409,"title":{},"name":{},"text":{"55":{},"64":{},"76":{},"154":{},"163":{},"170":{},"211":{},"218":{},"220":{},"245":{},"254":{},"298":{},"372":{},"377":{},"379":{},"502":{},"511":{},"519":{},"532":{}},"component":{}}],["rebas",{"_index":7050,"title":{},"name":{},"text":{"533":{}},"component":{}}],["rebuild",{"_index":2284,"title":{},"name":{},"text":{"50":{},"541":{}},"component":{}}],["recalcul",{"_index":4398,"title":{},"name":{},"text":{"235":{}},"component":{}}],["receiv",{"_index":697,"title":{},"name":{},"text":{"7":{},"52":{},"54":{},"55":{},"67":{},"68":{},"73":{},"78":{},"79":{},"82":{},"83":{},"154":{},"158":{},"163":{},"168":{},"170":{},"172":{},"186":{},"198":{},"203":{},"206":{},"220":{},"238":{},"239":{},"240":{},"246":{},"247":{},"275":{},"287":{},"303":{},"308":{},"309":{},"310":{},"315":{},"330":{},"346":{},"364":{},"376":{},"378":{},"379":{},"427":{},"464":{},"511":{},"514":{},"532":{},"537":{}},"component":{}}],["recent",{"_index":1492,"title":{},"name":{},"text":{"23":{},"160":{},"528":{}},"component":{}}],["recipi",{"_index":5592,"title":{},"name":{},"text":{"280":{},"464":{},"466":{}},"component":{}}],["recogn",{"_index":3754,"title":{},"name":{},"text":{"163":{},"316":{},"347":{},"374":{}},"component":{}}],["recogniz",{"_index":675,"title":{},"name":{},"text":{"7":{},"158":{},"203":{}},"component":{}}],["recommend",{"_index":1679,"title":{"81-4":{}},"name":{},"text":{"32":{},"81":{},"82":{},"129":{},"154":{},"171":{},"186":{},"196":{},"197":{},"227":{},"247":{},"274":{},"275":{},"276":{},"381":{},"476":{},"528":{},"529":{},"538":{}},"component":{}}],["record",{"_index":2370,"title":{"253":{}},"name":{},"text":{"52":{},"53":{},"54":{},"78":{},"81":{},"84":{},"85":{},"86":{},"104":{},"163":{},"168":{},"182":{},"183":{},"184":{},"185":{},"186":{},"196":{},"197":{},"198":{},"216":{},"222":{},"227":{},"228":{},"230":{},"234":{},"238":{},"239":{},"253":{},"273":{},"275":{},"276":{},"290":{},"291":{},"292":{},"299":{},"303":{},"309":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"347":{},"361":{},"364":{},"370":{},"378":{},"427":{},"481":{},"503":{}},"component":{}}],["record’",{"_index":4299,"title":{},"name":{},"text":{"227":{}},"component":{}}],["recreat",{"_index":6760,"title":{},"name":{},"text":{"519":{}},"component":{}}],["rectangl",{"_index":3963,"title":{},"name":{},"text":{"178":{}},"component":{}}],["recur",{"_index":1146,"title":{},"name":{},"text":{"9":{},"322":{},"393":{}},"component":{}}],["red",{"_index":1499,"title":{},"name":{},"text":{"23":{},"30":{},"79":{},"85":{},"103":{},"178":{},"270":{},"316":{},"324":{},"469":{},"490":{},"528":{}},"component":{}}],["redirect",{"_index":946,"title":{},"name":{},"text":{"7":{},"222":{},"269":{},"369":{},"370":{},"465":{},"540":{}},"component":{}}],["redistribut",{"_index":2925,"title":{},"name":{},"text":{"82":{}},"component":{}}],["redo",{"_index":1691,"title":{},"name":{},"text":{"36":{},"80":{}},"component":{}}],["redshift",{"_index":3325,"title":{"136":{},"315":{}},"name":{"136":{},"315":{}},"text":{"315":{}},"component":{}}],["reduc",{"_index":259,"title":{},"name":{},"text":{"2":{},"52":{},"81":{},"159":{},"216":{},"227":{},"230":{},"264":{},"287":{},"433":{}},"component":{}}],["redund",{"_index":3938,"title":{},"name":{},"text":{"174":{},"196":{},"197":{},"275":{},"276":{},"485":{}},"component":{}}],["refactor",{"_index":2411,"title":{},"name":{},"text":{"55":{}},"component":{}}],["refer",{"_index":494,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"41":{},"90":{},"91":{},"151":{},"152":{},"165":{},"167":{},"170":{},"216":{},"223":{},"227":{},"235":{},"247":{},"258":{},"270":{},"271":{},"281":{},"285":{},"291":{},"298":{},"316":{},"317":{},"324":{},"325":{},"337":{},"361":{},"372":{},"389":{},"390":{},"428":{},"481":{},"483":{},"511":{},"520":{},"527":{},"528":{},"529":{},"530":{},"532":{},"533":{},"535":{},"541":{},"542":{}},"component":{}}],["referenc",{"_index":706,"title":{},"name":{},"text":{"7":{},"9":{},"76":{},"90":{},"150":{},"151":{},"152":{},"163":{},"168":{},"170":{},"247":{},"305":{},"324":{},"325":{},"389":{},"398":{},"511":{},"542":{}},"component":{}}],["reference/compar",{"_index":6039,"title":{},"name":{},"text":{"361":{}},"component":{}}],["reference/comparison",{"_index":6036,"title":{"361-4":{}},"name":{},"text":{},"component":{}}],["referr",{"_index":5580,"title":{},"name":{},"text":{"278":{}},"component":{}}],["refil",{"_index":5515,"title":{},"name":{},"text":{"271":{}},"component":{}}],["refin",{"_index":4176,"title":{},"name":{},"text":{"205":{},"248":{},"291":{},"331":{}},"component":{}}],["refinedsoundex",{"_index":4175,"title":{},"name":{},"text":{"205":{}},"component":{}}],["reflect",{"_index":1145,"title":{"76":{}},"name":{"76":{}},"text":{"9":{},"56":{},"75":{},"76":{},"88":{},"391":{}},"component":{}}],["reflex",{"_index":4209,"title":{},"name":{},"text":{"213":{}},"component":{}}],["refresh",{"_index":854,"title":{},"name":{},"text":{"7":{},"22":{},"23":{},"29":{},"30":{},"97":{},"98":{},"99":{},"100":{},"101":{},"493":{}},"component":{}}],["refreshnamedclustersubtre",{"_index":7237,"title":{},"name":{},"text":{"542":{}},"component":{}}],["regard",{"_index":1649,"title":{},"name":{},"text":{"29":{},"30":{},"273":{},"280":{},"388":{},"433":{},"518":{},"533":{},"538":{}},"component":{}}],["regardless",{"_index":4392,"title":{},"name":{},"text":{"235":{},"381":{}},"component":{}}],["regex",{"_index":2897,"title":{"316":{},"316-8":{}},"name":{},"text":{"81":{},"86":{},"222":{},"246":{},"251":{},"273":{},"291":{},"316":{},"317":{},"454":{},"477":{},"478":{},"490":{},"499":{},"513":{}},"component":{}}],["regexev",{"_index":5802,"title":{},"name":{"316":{}},"text":{},"component":{}}],["regexp",{"_index":5522,"title":{},"name":{},"text":{"273":{}},"component":{}}],["region",{"_index":1108,"title":{},"name":{},"text":{"9":{},"158":{},"165":{},"205":{},"395":{},"429":{}},"component":{}}],["regist",{"_index":2046,"title":{"42-11":{},"42-12":{}},"name":{},"text":{"42":{},"427":{},"514":{},"530":{},"538":{},"544":{}},"component":{}}],["registerpipelin",{"_index":2089,"title":{},"name":{},"text":{"42":{}},"component":{}}],["registerworkflow",{"_index":2150,"title":{},"name":{},"text":{"42":{}},"component":{}}],["registr",{"_index":1650,"title":{},"name":{},"text":{"29":{}},"component":{}}],["registri",{"_index":862,"title":{"196-5":{},"197-5":{},"275-11":{},"276-5":{},"522-4":{},"530-1":{},"544-18":{}},"name":{},"text":{"7":{},"196":{},"197":{},"241":{},"275":{},"276":{},"427":{},"525":{},"528":{},"530":{},"544":{}},"component":{}}],["regress",{"_index":349,"title":{},"name":{},"text":{"2":{},"83":{},"87":{}},"component":{}}],["regressor",{"_index":3005,"title":{},"name":{},"text":{"87":{}},"component":{}}],["regular",{"_index":33,"title":{},"name":{},"text":{"1":{},"19":{},"34":{},"39":{},"41":{},"44":{},"47":{},"76":{},"83":{},"227":{},"234":{},"250":{},"251":{},"252":{},"273":{},"279":{},"280":{},"291":{},"313":{},"316":{},"317":{},"366":{},"374":{},"386":{},"412":{},"418":{},"435":{},"439":{},"441":{},"447":{},"449":{},"459":{},"460":{},"461":{},"462":{},"463":{},"465":{},"466":{},"467":{},"487":{},"488":{},"499":{},"506":{},"509":{}},"component":{}}],["regularli",{"_index":1162,"title":{},"name":{},"text":{"9":{},"390":{}},"component":{}}],["reject",{"_index":1097,"title":{},"name":{},"text":{"9":{},"32":{},"41":{},"55":{},"76":{},"85":{},"256":{},"303":{},"310":{},"376":{},"453":{}},"component":{}}],["rel",{"_index":591,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"19":{},"38":{},"41":{},"55":{},"56":{},"57":{},"93":{},"94":{},"151":{},"152":{},"167":{},"168":{},"170":{},"222":{},"278":{},"309":{},"389":{},"424":{},"511":{},"514":{},"544":{}},"component":{}}],["relat",{"_index":156,"title":{"71":{},"59-2":{},"60-1":{},"63-2":{},"65-2":{},"66-2":{},"67-3":{},"68-2":{},"69-2":{},"70-2":{},"71-2":{},"72-2":{},"73-3":{},"74-2":{},"130-2":{},"310-3":{},"379-3":{}},"name":{},"text":{"1":{},"9":{},"10":{},"20":{},"24":{},"27":{},"53":{},"54":{},"56":{},"64":{},"67":{},"71":{},"73":{},"92":{},"106":{},"107":{},"108":{},"109":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"143":{},"144":{},"145":{},"146":{},"165":{},"227":{},"233":{},"250":{},"286":{},"287":{},"355":{},"364":{},"366":{},"372":{},"388":{},"389":{},"395":{},"406":{},"433":{},"520":{},"525":{},"530":{}},"component":{}}],["relationship",{"_index":2469,"title":{},"name":{},"text":{"56":{},"64":{},"87":{},"155":{},"213":{},"241":{},"295":{},"297":{},"298":{},"299":{},"300":{},"328":{},"332":{},"333":{},"334":{},"432":{},"433":{},"474":{},"476":{},"532":{}},"component":{}}],["releas",{"_index":558,"title":{"537":{},"538":{},"539":{},"540":{},"538-1":{},"538-6":{},"538-11":{}},"name":{"537":{},"538":{},"540":{}},"text":{"5":{},"10":{},"15":{},"16":{},"30":{},"56":{},"78":{},"133":{},"163":{},"432":{},"514":{},"536":{},"537":{},"538":{},"539":{},"540":{}},"component":{}}],["releasex.xx",{"_index":7110,"title":{},"name":{},"text":{"538":{}},"component":{}}],["releasex.xx:releasex.xx",{"_index":7112,"title":{},"name":{},"text":{"538":{}},"component":{}}],["relev",{"_index":1170,"title":{},"name":{},"text":{"10":{},"163":{},"541":{}},"component":{}}],["reli",{"_index":3521,"title":{},"name":{},"text":{"159":{},"164":{},"166":{}},"component":{}}],["reliabl",{"_index":3895,"title":{},"name":{},"text":{"168":{}},"component":{}}],["remain",{"_index":352,"title":{},"name":{},"text":{"2":{},"50":{},"56":{},"82":{},"83":{},"156":{},"206":{},"216":{},"247":{},"248":{},"270":{},"275":{},"314":{},"331":{},"438":{},"530":{}},"component":{}}],["remaind",{"_index":2926,"title":{},"name":{},"text":{"82":{},"247":{}},"component":{}}],["remedi",{"_index":7222,"title":{},"name":{},"text":{"542":{}},"component":{}}],["rememb",{"_index":1262,"title":{},"name":{},"text":{"15":{},"16":{},"53":{},"54":{},"91":{},"158":{},"163":{},"220":{},"246":{},"309":{},"366":{},"378":{},"490":{},"525":{},"528":{}},"component":{}}],["remot",{"_index":321,"title":{"170":{},"511":{},"534":{},"62-5":{},"168-4":{},"170-1":{},"511-1":{}},"name":{"170":{},"511":{}},"text":{"2":{},"20":{},"23":{},"39":{},"41":{},"56":{},"62":{},"63":{},"69":{},"74":{},"76":{},"105":{},"158":{},"159":{},"161":{},"163":{},"165":{},"166":{},"167":{},"168":{},"170":{},"171":{},"457":{},"461":{},"462":{},"463":{},"465":{},"468":{},"481":{},"483":{},"485":{},"487":{},"488":{},"491":{},"494":{},"503":{},"511":{},"512":{},"518":{},"533":{},"544":{}},"component":{}}],["remov",{"_index":300,"title":{"42-13":{},"42-14":{},"83-8":{},"338-6":{},"433-7":{}},"name":{},"text":{"2":{},"7":{},"10":{},"20":{},"22":{},"24":{},"41":{},"42":{},"62":{},"64":{},"70":{},"78":{},"83":{},"94":{},"105":{},"154":{},"163":{},"205":{},"208":{},"214":{},"216":{},"233":{},"247":{},"270":{},"271":{},"273":{},"275":{},"289":{},"319":{},"331":{},"338":{},"346":{},"349":{},"350":{},"358":{},"367":{},"369":{},"370":{},"374":{},"387":{},"389":{},"433":{},"441":{},"442":{},"448":{},"461":{},"463":{},"487":{},"492":{},"498":{},"514":{},"530":{},"532":{},"537":{},"538":{},"542":{}},"component":{}}],["remove_digit",{"_index":6028,"title":{},"name":{},"text":{"358":{}},"component":{}}],["removepipelin",{"_index":2152,"title":{},"name":{},"text":{"42":{}},"component":{}}],["removeworkflow",{"_index":2155,"title":{},"name":{},"text":{"42":{}},"component":{}}],["renam",{"_index":562,"title":{"536-3":{},"540-1":{}},"name":{},"text":{"5":{},"23":{},"30":{},"31":{},"37":{},"81":{},"163":{},"170":{},"188":{},"227":{},"270":{},"271":{},"277":{},"278":{},"337":{},"338":{},"345":{},"372":{},"439":{},"461":{},"468":{},"511":{},"519":{},"532":{},"536":{},"538":{},"540":{}},"component":{}}],["renew",{"_index":3459,"title":{},"name":{},"text":{"154":{}},"component":{}}],["reopen",{"_index":1611,"title":{},"name":{},"text":{"27":{}},"component":{}}],["repartit",{"_index":2914,"title":{"82-2":{}},"name":{},"text":{"82":{}},"component":{}}],["repartitioning.hpl",{"_index":2685,"title":{},"name":{},"text":{"66":{}},"component":{}}],["repeat",{"_index":528,"title":{"482":{},"483":{},"55-14":{}},"name":{"482":{},"483":{}},"text":{"5":{},"29":{},"55":{},"78":{},"83":{},"234":{},"247":{},"250":{},"273":{},"277":{},"279":{},"285":{},"310":{},"313":{},"318":{},"323":{},"331":{},"345":{},"366":{},"377":{},"379":{},"482":{},"483":{},"494":{}},"component":{}}],["repeatedli",{"_index":4074,"title":{},"name":{},"text":{"202":{},"207":{},"381":{},"483":{}},"component":{}}],["repetit",{"_index":261,"title":{},"name":{},"text":{"2":{},"81":{}},"component":{}}],["replac",{"_index":560,"title":{"317":{},"368":{},"247-160":{},"538-3":{}},"name":{},"text":{"5":{},"8":{},"36":{},"50":{},"70":{},"78":{},"81":{},"82":{},"83":{},"86":{},"112":{},"130":{},"161":{},"205":{},"221":{},"222":{},"230":{},"231":{},"233":{},"235":{},"238":{},"247":{},"248":{},"250":{},"266":{},"270":{},"292":{},"303":{},"311":{},"316":{},"317":{},"342":{},"343":{},"357":{},"363":{},"364":{},"366":{},"368":{},"373":{},"375":{},"382":{},"441":{},"442":{},"472":{},"475":{},"492":{},"494":{},"501":{},"514":{},"532":{},"533":{},"536":{},"537":{},"538":{}},"component":{}}],["replace(\"123456789\";5;0;\"q",{"_index":5252,"title":{},"name":{},"text":{"247":{}},"component":{}}],["replace(\"123456789\";5;3;\"q",{"_index":5250,"title":{},"name":{},"text":{"247":{}},"component":{}}],["replace(this[\"field",{"_index":5491,"title":{},"name":{},"text":{"270":{}},"component":{}}],["replacement_product_tk",{"_index":4298,"title":{},"name":{},"text":{"227":{}},"component":{}}],["replacestr",{"_index":5816,"title":{},"name":{"317":{}},"text":{},"component":{}}],["repli",{"_index":5597,"title":{},"name":{},"text":{"280":{},"466":{}},"component":{}}],["replic",{"_index":2680,"title":{},"name":{},"text":{"65":{},"82":{},"153":{},"429":{},"437":{}},"component":{}}],["replica",{"_index":2678,"title":{},"name":{},"text":{"65":{},"162":{}},"component":{}}],["replication_factor",{"_index":3428,"title":{},"name":{},"text":{"153":{},"437":{}},"component":{}}],["repo.sh",{"_index":6679,"title":{},"name":{},"text":{"514":{}},"component":{}}],["report",{"_index":1878,"title":{},"name":{},"text":{"40":{},"43":{},"46":{},"58":{},"75":{},"168":{},"169":{},"228":{},"234":{},"247":{},"298":{},"338":{},"364":{},"374":{},"448":{},"465":{},"483":{},"527":{},"542":{}},"component":{}}],["reposit",{"_index":2830,"title":{},"name":{},"text":{"78":{}},"component":{}}],["repositori",{"_index":154,"title":{"532-7":{}},"name":{},"text":{"1":{},"2":{},"23":{},"50":{},"56":{},"75":{},"87":{},"91":{},"164":{},"389":{},"406":{},"519":{},"520":{},"527":{},"532":{},"533":{},"534":{},"537":{},"538":{},"540":{}},"component":{}}],["repositoryopensavedialog",{"_index":7227,"title":{},"name":{},"text":{"542":{}},"component":{}}],["repres",{"_index":739,"title":{},"name":{},"text":{"7":{},"42":{},"56":{},"178":{},"216":{},"217":{},"220":{},"231":{},"234":{},"247":{},"277":{},"279":{},"281":{},"289":{},"331":{},"338":{},"367":{},"382":{},"383":{},"432":{},"433":{},"528":{},"530":{}},"component":{}}],["represent",{"_index":2590,"title":{},"name":{},"text":{"56":{},"205":{},"246":{},"247":{},"319":{}},"component":{}}],["reprint",{"_index":3795,"title":{},"name":{},"text":{"165":{}},"component":{}}],["rept",{"_index":4723,"title":{"247-161":{}},"name":{},"text":{"247":{}},"component":{}}],["rept(\"x",{"_index":5262,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rept(\"x\";0",{"_index":5261,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rept(\"x\";2.9",{"_index":5258,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rept(\"x\";3",{"_index":5254,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rept(\"xy\";2",{"_index":5256,"title":{},"name":{},"text":{"247":{}},"component":{}}],["req",{"_index":1947,"title":{},"name":{},"text":{"41":{}},"component":{}}],["request",{"_index":1018,"title":{"43-7":{},"43-8":{},"43-10":{},"533-14":{},"533-15":{},"536-2":{},"536-4":{},"536-6":{}},"name":{},"text":{"8":{},"40":{},"42":{},"43":{},"50":{},"168":{},"198":{},"199":{},"247":{},"250":{},"256":{},"264":{},"273":{},"276":{},"291":{},"319":{},"363":{},"465":{},"519":{},"527":{},"533":{}},"component":{}}],["requir",{"_index":369,"title":{"5":{},"5-2":{},"50-3":{}},"name":{},"text":{"2":{},"5":{},"8":{},"11":{},"25":{},"41":{},"42":{},"50":{},"52":{},"53":{},"54":{},"55":{},"57":{},"67":{},"73":{},"81":{},"91":{},"97":{},"130":{},"158":{},"160":{},"161":{},"164":{},"165":{},"170":{},"196":{},"197":{},"205":{},"216":{},"218":{},"221":{},"223":{},"231":{},"234":{},"247":{},"250":{},"260":{},"261":{},"262":{},"264":{},"270":{},"271":{},"272":{},"273":{},"275":{},"276":{},"283":{},"287":{},"290":{},"299":{},"308":{},"309":{},"310":{},"313":{},"319":{},"346":{},"352":{},"354":{},"360":{},"363":{},"366":{},"369":{},"370":{},"377":{},"378":{},"379":{},"381":{},"433":{},"465":{},"466":{},"475":{},"481":{},"483":{},"487":{},"488":{},"492":{},"500":{},"511":{},"513":{},"514":{},"530":{},"533":{},"534":{},"537":{},"543":{}},"component":{}}],["res://path/in/classpath/image.png",{"_index":1062,"title":{},"name":{},"text":{"8":{}},"component":{}}],["resembl",{"_index":2964,"title":{},"name":{},"text":{"84":{},"105":{}},"component":{}}],["reserv",{"_index":1237,"title":{},"name":{},"text":{"11":{},"71":{},"381":{}},"component":{}}],["reservoir",{"_index":2658,"title":{"318":{}},"name":{},"text":{"61":{},"81":{},"86":{},"169":{},"318":{}},"component":{}}],["reservoirsampl",{"_index":5819,"title":{},"name":{"318":{}},"text":{},"component":{}}],["reset",{"_index":1524,"title":{},"name":{},"text":{"24":{},"36":{},"56":{},"176":{},"313":{},"366":{}},"component":{}}],["resid",{"_index":3952,"title":{},"name":{},"text":{"177":{},"206":{},"216":{},"227":{},"303":{},"311":{},"315":{},"376":{},"498":{},"529":{}},"component":{}}],["resili",{"_index":3893,"title":{},"name":{},"text":{"168":{}},"component":{}}],["resiz",{"_index":6593,"title":{},"name":{},"text":{"492":{}},"component":{}}],["resolut",{"_index":5584,"title":{},"name":{},"text":{"278":{}},"component":{}}],["resolv",{"_index":3601,"title":{},"name":{},"text":{"161":{},"247":{},"328":{},"332":{},"333":{},"334":{},"349":{},"480":{},"483":{},"489":{},"528":{},"532":{},"542":{},"544":{}},"component":{}}],["resort",{"_index":6081,"title":{},"name":{},"text":{"366":{}},"component":{}}],["resourc",{"_index":1060,"title":{"170-3":{},"511-3":{}},"name":{},"text":{"8":{},"18":{},"42":{},"52":{},"57":{},"82":{},"161":{},"162":{},"165":{},"170":{},"319":{},"492":{},"494":{},"511":{},"514":{},"520":{},"542":{}},"component":{}}],["resourceprofil",{"_index":3632,"title":{},"name":{},"text":{"161":{}},"component":{}}],["resourceprofilemanag",{"_index":3636,"title":{},"name":{},"text":{"161":{}},"component":{}}],["resources/clon",{"_index":6693,"title":{},"name":{},"text":{"514":{}},"component":{}}],["resourceutil",{"_index":3629,"title":{},"name":{},"text":{"161":{}},"component":{}}],["respect",{"_index":851,"title":{},"name":{},"text":{"7":{},"57":{},"80":{},"208":{},"235":{},"247":{}},"component":{}}],["respons",{"_index":1881,"title":{},"name":{},"text":{"40":{},"42":{},"263":{},"264":{},"319":{},"326":{},"341":{},"485":{},"530":{}},"component":{}}],["rest",{"_index":1702,"title":{"37":{},"319":{}},"name":{"42":{},"319":{}},"text":{"37":{},"41":{},"52":{},"81":{},"86":{},"158":{},"230":{},"232":{},"258":{},"273":{},"319":{},"367":{},"433":{},"525":{}},"component":{}}],["rest.properti",{"_index":1710,"title":{},"name":{},"text":{"37":{}},"component":{}}],["restar",{"_index":5548,"title":{},"name":{},"text":{"273":{}},"component":{}}],["restart",{"_index":2083,"title":{},"name":{},"text":{"42":{},"130":{},"162":{},"262":{},"337":{},"344":{},"494":{},"533":{}},"component":{}}],["restful",{"_index":5825,"title":{},"name":{},"text":{"319":{}},"component":{}}],["restor",{"_index":3096,"title":{},"name":{},"text":{"93":{}},"component":{}}],["restrict",{"_index":4032,"title":{},"name":{},"text":{"196":{},"208":{},"235":{},"337":{},"533":{}},"component":{}}],["result",{"_index":262,"title":{"218":{},"244":{},"245":{},"254":{},"435":{},"442":{},"449":{},"55-1":{},"55-4":{},"55-5":{},"55-6":{},"55-10":{},"55-11":{},"55-12":{},"205-4":{},"275-8":{},"309-8":{},"309-9":{},"309-10":{},"324-5":{},"325-5":{},"378-8":{},"378-9":{},"378-10":{},"437-3":{},"453-5":{},"538-12":{}},"name":{},"text":{"2":{},"7":{},"8":{},"9":{},"15":{},"16":{},"24":{},"29":{},"34":{},"38":{},"40":{},"41":{},"42":{},"50":{},"52":{},"55":{},"57":{},"58":{},"60":{},"61":{},"68":{},"70":{},"76":{},"78":{},"81":{},"82":{},"85":{},"86":{},"104":{},"105":{},"152":{},"154":{},"160":{},"163":{},"165":{},"174":{},"176":{},"178":{},"179":{},"185":{},"188":{},"193":{},"196":{},"205":{},"206":{},"209":{},"210":{},"211":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"227":{},"233":{},"235":{},"237":{},"242":{},"244":{},"245":{},"246":{},"247":{},"248":{},"250":{},"251":{},"253":{},"254":{},"256":{},"262":{},"263":{},"264":{},"265":{},"273":{},"274":{},"277":{},"279":{},"283":{},"287":{},"291":{},"297":{},"306":{},"307":{},"309":{},"312":{},"313":{},"314":{},"316":{},"317":{},"318":{},"319":{},"324":{},"325":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"351":{},"352":{},"354":{},"362":{},"363":{},"366":{},"367":{},"368":{},"372":{},"378":{},"379":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"390":{},"391":{},"435":{},"437":{},"439":{},"441":{},"442":{},"447":{},"448":{},"449":{},"450":{},"453":{},"454":{},"455":{},"457":{},"460":{},"461":{},"462":{},"465":{},"466":{},"468":{},"470":{},"471":{},"472":{},"477":{},"478":{},"480":{},"481":{},"487":{},"488":{},"489":{},"490":{},"498":{},"499":{},"501":{},"503":{},"506":{},"508":{},"509":{},"527":{},"538":{},"542":{},"544":{}},"component":{}}],["result(",{"_index":4193,"title":{},"name":{},"text":{"206":{}},"component":{}}],["result.0",{"_index":2423,"title":{},"name":{},"text":{"55":{}},"component":{}}],["result.hpl",{"_index":2418,"title":{},"name":{},"text":{"55":{}},"component":{}}],["result=[tru",{"_index":2029,"title":{},"name":{},"text":{"41":{},"55":{}},"component":{}}],["resultset",{"_index":5494,"title":{},"name":{},"text":{"271":{}},"component":{}}],["resum",{"_index":6590,"title":{"492-4":{}},"name":{},"text":{"492":{}},"component":{}}],["retain",{"_index":3855,"title":{},"name":{},"text":{"167":{},"205":{},"247":{},"335":{}},"component":{}}],["retri",{"_index":2572,"title":{"154-11":{}},"name":{},"text":{"56":{},"154":{},"167":{},"168":{},"290":{},"292":{},"491":{}},"component":{}}],["retriev",{"_index":124,"title":{"433-8":{},"544-11":{}},"name":{},"text":{"1":{},"7":{},"13":{},"37":{},"52":{},"55":{},"76":{},"84":{},"182":{},"183":{},"198":{},"205":{},"206":{},"217":{},"218":{},"227":{},"232":{},"234":{},"248":{},"250":{},"251":{},"254":{},"256":{},"259":{},"264":{},"270":{},"273":{},"279":{},"283":{},"291":{},"292":{},"296":{},"309":{},"323":{},"331":{},"337":{},"338":{},"345":{},"347":{},"348":{},"355":{},"367":{},"377":{},"379":{},"383":{},"404":{},"410":{},"433":{},"453":{},"461":{},"463":{},"464":{},"465":{},"473":{},"475":{},"487":{},"529":{},"542":{},"544":{}},"component":{}}],["retry_delay",{"_index":2573,"title":{},"name":{},"text":{"56":{}},"component":{}}],["return",{"_index":84,"title":{"433-9":{}},"name":{},"text":{"1":{},"7":{},"13":{},"42":{},"43":{},"50":{},"55":{},"56":{},"85":{},"102":{},"104":{},"169":{},"177":{},"179":{},"188":{},"194":{},"201":{},"205":{},"206":{},"211":{},"214":{},"216":{},"220":{},"221":{},"222":{},"227":{},"230":{},"233":{},"234":{},"237":{},"240":{},"243":{},"246":{},"247":{},"248":{},"250":{},"251":{},"253":{},"254":{},"256":{},"258":{},"259":{},"263":{},"273":{},"274":{},"275":{},"277":{},"279":{},"289":{},"291":{},"294":{},"297":{},"302":{},"309":{},"319":{},"331":{},"338":{},"341":{},"345":{},"351":{},"357":{},"358":{},"363":{},"364":{},"366":{},"367":{},"372":{},"373":{},"378":{},"381":{},"383":{},"399":{},"404":{},"433":{},"453":{},"455":{},"456":{},"457":{},"458":{},"487":{},"489":{},"496":{},"498":{},"501":{},"502":{},"503":{},"527":{},"542":{}},"component":{}}],["returns.hpl",{"_index":6388,"title":{},"name":{},"text":{"433":{}},"component":{}}],["returns/linefe",{"_index":4158,"title":{},"name":{},"text":{"205":{}},"component":{}}],["reus",{"_index":2668,"title":{},"name":{},"text":{"65":{},"94":{},"167":{},"279":{},"489":{}},"component":{}}],["reusabl",{"_index":5613,"title":{},"name":{},"text":{"287":{}},"component":{}}],["rev",{"_index":7100,"title":{},"name":{},"text":{"537":{}},"component":{}}],["revers",{"_index":6603,"title":{},"name":{},"text":{"499":{}},"component":{}}],["reversecas",{"_index":6174,"title":{},"name":{},"text":{"372":{}},"component":{}}],["reverseord",{"_index":6177,"title":{},"name":{},"text":{"372":{}},"component":{}}],["revert",{"_index":1487,"title":{},"name":{},"text":{"23":{},"30":{},"329":{},"330":{},"332":{},"333":{},"334":{}},"component":{}}],["review",{"_index":2589,"title":{},"name":{},"text":{"56":{},"247":{},"530":{},"533":{},"538":{}},"component":{}}],["revis",{"_index":1502,"title":{},"name":{},"text":{"23":{},"30":{},"227":{}},"component":{}}],["rewrit",{"_index":6759,"title":{},"name":{},"text":{"519":{}},"component":{}}],["rf",{"_index":7101,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["rfc",{"_index":6123,"title":{},"name":{},"text":{"366":{}},"component":{}}],["rfc2616",{"_index":3825,"title":{},"name":{},"text":{"165":{},"166":{},"167":{},"168":{}},"component":{}}],["rfc3966",{"_index":6012,"title":{},"name":{},"text":{"354":{}},"component":{}}],["rgb",{"_index":6718,"title":{"516-2":{}},"name":{},"text":{},"component":{}}],["rhino",{"_index":5438,"title":{},"name":{},"text":{"270":{}},"component":{}}],["rich",{"_index":2047,"title":{},"name":{},"text":{"42":{}},"component":{}}],["rickandmorti",{"_index":4566,"title":{},"name":{},"text":{"241":{}},"component":{}}],["right",{"_index":645,"title":{"29-6":{},"247-162":{}},"name":{},"text":{"7":{},"10":{},"15":{},"23":{},"25":{},"27":{},"29":{},"30":{},"31":{},"36":{},"41":{},"52":{},"56":{},"76":{},"78":{},"80":{},"85":{},"103":{},"104":{},"107":{},"130":{},"153":{},"154":{},"156":{},"207":{},"208":{},"234":{},"246":{},"247":{},"258":{},"261":{},"270":{},"277":{},"279":{},"284":{},"299":{},"309":{},"324":{},"325":{},"337":{},"358":{},"366":{},"367":{},"372":{},"373":{},"374":{},"378":{},"400":{},"429":{},"437":{},"439":{},"487":{},"488":{},"514":{},"519":{},"528":{},"530":{},"531":{},"533":{},"541":{}},"component":{}}],["right(\"\";4",{"_index":5269,"title":{},"name":{},"text":{"247":{}},"component":{}}],["right(\"hello",{"_index":5265,"title":{},"name":{},"text":{"247":{}},"component":{}}],["right(\"hello\";0",{"_index":5267,"title":{},"name":{},"text":{"247":{}},"component":{}}],["right(\"hello\";2",{"_index":5263,"title":{},"name":{},"text":{"247":{}},"component":{}}],["right(\"hello\";20",{"_index":5266,"title":{},"name":{},"text":{"247":{}},"component":{}}],["right(\"hello\";2^15",{"_index":5268,"title":{},"name":{},"text":{"247":{}},"component":{}}],["risk",{"_index":4277,"title":{},"name":{},"text":{"222":{}},"component":{}}],["rm",{"_index":1572,"title":{},"name":{},"text":{"25":{},"50":{},"514":{},"537":{},"538":{}},"component":{}}],["rmi",{"_index":6702,"title":{},"name":{},"text":{"514":{}},"component":{}}],["ro",{"_index":6240,"title":{},"name":{},"text":{"376":{}},"component":{}}],["roadmap",{"_index":6767,"title":{},"name":{},"text":{"521":{}},"component":{}}],["robin",{"_index":1616,"title":{},"name":{},"text":{"27":{},"82":{},"241":{}},"component":{}}],["robot",{"_index":3802,"title":{},"name":{},"text":{"165":{}},"component":{}}],["robust",{"_index":297,"title":{},"name":{},"text":{"2":{},"159":{},"166":{},"167":{}},"component":{}}],["rock",{"_index":5683,"title":{},"name":{},"text":{"292":{}},"component":{}}],["rockband",{"_index":4567,"title":{},"name":{},"text":{"241":{}},"component":{}}],["role",{"_index":5575,"title":{},"name":{},"text":{"277":{},"278":{},"315":{}},"component":{}}],["roll",{"_index":4771,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rollback",{"_index":3917,"title":{},"name":{},"text":{"169":{},"329":{},"330":{},"332":{},"333":{},"334":{},"510":{}},"component":{}}],["roman",{"_index":4724,"title":{"247-163":{}},"name":{},"text":{"247":{}},"component":{}}],["roman(499,0",{"_index":5272,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roman(499,1",{"_index":5275,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roman(499,2",{"_index":5278,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roman(499,3",{"_index":5280,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roman(499,4",{"_index":5282,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roman(numb",{"_index":5271,"title":{},"name":{},"text":{"247":{}},"component":{}}],["root",{"_index":724,"title":{},"name":{},"text":{"7":{},"23":{},"32":{},"36":{},"50":{},"62":{},"162":{},"167":{},"168":{},"178":{},"205":{},"213":{},"231":{},"234":{},"247":{},"258":{},"273":{},"279":{},"287":{},"344":{},"366":{},"381":{},"383":{},"420":{},"481":{},"486":{},"499":{},"514":{},"528":{},"538":{},"543":{}},"component":{}}],["rooturi",{"_index":5366,"title":{},"name":{},"text":{"251":{}},"component":{}}],["round",{"_index":1615,"title":{"247-126":{}},"name":{},"text":{"27":{},"82":{},"205":{},"216":{},"227":{},"247":{},"364":{}},"component":{}}],["round(626.3",{"_index":5058,"title":{},"name":{},"text":{"247":{}},"component":{}}],["round(numb",{"_index":5054,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rounddown",{"_index":4706,"title":{"247-127":{}},"name":{},"text":{},"component":{}}],["rounddown(3.14159",{"_index":5062,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rounddown(31415.92654",{"_index":5064,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rounddown(numb",{"_index":5061,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roundup",{"_index":4707,"title":{"247-128":{}},"name":{},"text":{},"component":{}}],["roundup(3.2,0",{"_index":5068,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roundup(31415.92654",{"_index":5070,"title":{},"name":{},"text":{"247":{}},"component":{}}],["roundup(numb",{"_index":5067,"title":{},"name":{},"text":{"247":{}},"component":{}}],["rout",{"_index":1528,"title":{},"name":{},"text":{"24":{},"82":{},"84":{},"105":{},"154":{},"245":{},"276":{},"325":{},"359":{}},"component":{}}],["router’",{"_index":6588,"title":{},"name":{},"text":{"491":{}},"component":{}}],["row",{"_index":639,"title":{"212":{},"218":{},"224":{},"230":{},"239":{},"246":{},"252":{},"254":{},"265":{},"272":{},"285":{},"320":{},"321":{},"322":{},"323":{},"335":{},"347":{},"350":{},"369":{},"370":{},"455":{},"55-1":{},"55-5":{},"55-11":{},"246-5":{},"270-11":{},"270-12":{},"270-14":{},"309-7":{},"309-9":{},"337-5":{},"337-9":{},"372-5":{},"378-7":{},"378-9":{},"437-3":{},"453-6":{},"544-11":{}},"name":{},"text":{"7":{},"9":{},"15":{},"24":{},"27":{},"29":{},"32":{},"37":{},"42":{},"52":{},"53":{},"54":{},"55":{},"60":{},"61":{},"62":{},"64":{},"66":{},"68":{},"71":{},"75":{},"76":{},"78":{},"79":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"104":{},"159":{},"160":{},"162":{},"163":{},"169":{},"172":{},"176":{},"178":{},"179":{},"181":{},"184":{},"186":{},"191":{},"203":{},"204":{},"206":{},"207":{},"208":{},"211":{},"212":{},"213":{},"216":{},"218":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"230":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"243":{},"246":{},"247":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"258":{},"259":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"277":{},"279":{},"283":{},"284":{},"285":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"294":{},"297":{},"303":{},"305":{},"308":{},"309":{},"311":{},"313":{},"314":{},"315":{},"318":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"331":{},"335":{},"337":{},"338":{},"339":{},"340":{},"344":{},"345":{},"346":{},"347":{},"348":{},"350":{},"352":{},"355":{},"359":{},"360":{},"363":{},"364":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"374":{},"376":{},"377":{},"378":{},"380":{},"381":{},"382":{},"383":{},"386":{},"392":{},"433":{},"437":{},"439":{},"453":{},"454":{},"455":{},"457":{},"465":{},"466":{},"470":{},"481":{},"487":{},"488":{},"489":{},"490":{},"501":{},"503":{},"505":{},"508":{},"509":{},"525":{},"544":{}},"component":{}}],["row'",{"_index":6160,"title":{},"name":{},"text":{"372":{}},"component":{}}],["row(",{"_index":635,"title":{},"name":{},"text":{"7":{},"43":{},"258":{},"322":{},"378":{}},"component":{}}],["row.0",{"_index":2427,"title":{},"name":{},"text":{"55":{},"56":{}},"component":{}}],["row[idx",{"_index":5482,"title":{},"name":{},"text":{"270":{}},"component":{}}],["rowadapt",{"_index":7313,"title":{},"name":{},"text":{"544":{}},"component":{}}],["rowcount",{"_index":2979,"title":{},"name":{},"text":{"86":{}},"component":{}}],["rowdatautil",{"_index":5952,"title":{},"name":{},"text":{"337":{}},"component":{}}],["rowdenormalis",{"_index":5835,"title":{},"name":{"320":{}},"text":{},"component":{}}],["rowdistributionplugintyp",{"_index":6807,"title":{},"name":{},"text":{"525":{}},"component":{}}],["rowflatten",{"_index":5856,"title":{},"name":{"321":{}},"text":{},"component":{}}],["rowgener",{"_index":2098,"title":{},"name":{"322":{}},"text":{"42":{},"544":{}},"component":{}}],["rowgenerator.setlocation(50",{"_index":7289,"title":{},"name":{},"text":{"544":{}},"component":{}}],["rowgeneratormeta",{"_index":7286,"title":{},"name":{},"text":{"544":{}},"component":{}}],["rowgeneratormeta.setrowlimit(\"1000000",{"_index":7287,"title":{},"name":{},"text":{"544":{}},"component":{}}],["rowinerror",{"_index":6182,"title":{},"name":{},"text":{"372":{}},"component":{}}],["rowlevel",{"_index":1713,"title":{},"name":{},"text":{"37":{},"38":{},"41":{},"75":{},"514":{}},"component":{}}],["rowmeta",{"_index":5477,"title":{},"name":{},"text":{"270":{},"337":{},"525":{},"544":{}},"component":{}}],["rowmeta.getstring(row",{"_index":5949,"title":{},"name":{},"text":{"337":{}},"component":{}}],["rowmetainterfac",{"_index":6987,"title":{},"name":{},"text":{"532":{}},"component":{}}],["rownormalis",{"_index":5859,"title":{},"name":{"323":{}},"text":{},"component":{}}],["rownr",{"_index":2789,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["rownum",{"_index":5357,"title":{},"name":{},"text":{"250":{},"255":{},"273":{},"277":{},"279":{},"313":{},"331":{},"366":{},"386":{}},"component":{}}],["rownumb",{"_index":5948,"title":{},"name":{},"text":{"337":{}},"component":{}}],["rowproduc",{"_index":7309,"title":{},"name":{},"text":{"544":{}},"component":{}}],["rows\",\"componentcopy\":\"0\",\"metrics\":{\"read\":0,\"buff",{"_index":1805,"title":{},"name":{},"text":{"37":{}},"component":{}}],["rows.0",{"_index":2419,"title":{},"name":{},"text":{"55":{}},"component":{}}],["rows.hpl",{"_index":2399,"title":{},"name":{},"text":{"53":{},"54":{}},"component":{}}],["rows[0",{"_index":6462,"title":{},"name":{},"text":{"453":{}},"component":{}}],["rowset",{"_index":875,"title":{},"name":{},"text":{"7":{},"55":{},"56":{},"273":{},"309":{}},"component":{}}],["rowwrittenev",{"_index":7314,"title":{},"name":{},"text":{"544":{}},"component":{}}],["row’",{"_index":5609,"title":{},"name":{},"text":{"285":{}},"component":{}}],["rsa",{"_index":5915,"title":{},"name":{},"text":{"326":{}},"component":{}}],["rss/atom",{"_index":5422,"title":{},"name":{},"text":{"264":{}},"component":{}}],["rubi",{"_index":5960,"title":{},"name":{},"text":{"337":{}},"component":{}}],["rule",{"_index":2667,"title":{"324":{},"325":{},"82-6":{},"324-4":{},"324-5":{},"325-4":{},"325-5":{}},"name":{},"text":{"64":{},"81":{},"82":{},"227":{},"231":{},"247":{},"324":{},"325":{},"373":{},"531":{},"537":{},"542":{}},"component":{}}],["rules.column",{"_index":5892,"title":{},"name":{},"text":{"325":{}},"component":{}}],["rules.row",{"_index":5864,"title":{},"name":{},"text":{"324":{}},"component":{}}],["rules.row→row",{"_index":5867,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["rulesaccumul",{"_index":5861,"title":{},"name":{"324":{}},"text":{},"component":{}}],["ruleset",{"_index":5339,"title":{},"name":{},"text":{"248":{}},"component":{}}],["rulesexecutor",{"_index":5891,"title":{},"name":{"325":{}},"text":{},"component":{}}],["run",{"_index":42,"title":{"38":{},"56":{},"69":{},"74":{},"85":{},"104":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"171":{},"326":{},"484":{},"512":{},"7-13":{},"15-5":{},"19-4":{},"38-1":{},"50-2":{},"53-4":{},"54-4":{},"56-2":{},"56-4":{},"83-7":{},"83-10":{},"83-11":{},"85-1":{},"104-1":{},"152-13":{},"158-2":{},"160-3":{},"160-5":{},"161-4":{},"164-6":{},"167-3":{},"168-3":{},"168-4":{},"168-5":{},"171-2":{},"389-16":{},"431-2":{},"512-2":{},"514-6":{},"527-3":{},"533-8":{}},"name":{"56":{},"69":{},"74":{},"85":{},"104":{},"151":{},"162":{},"164":{},"171":{},"415":{},"512":{}},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"37":{},"38":{},"40":{},"41":{},"43":{},"45":{},"46":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"64":{},"67":{},"68":{},"69":{},"71":{},"73":{},"74":{},"75":{},"76":{},"78":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"88":{},"90":{},"91":{},"92":{},"101":{},"102":{},"104":{},"105":{},"107":{},"130":{},"150":{},"151":{},"152":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"177":{},"186":{},"216":{},"220":{},"221":{},"222":{},"225":{},"233":{},"237":{},"238":{},"240":{},"246":{},"247":{},"256":{},"258":{},"268":{},"270":{},"273":{},"275":{},"287":{},"297":{},"298":{},"305":{},"309":{},"314":{},"315":{},"322":{},"326":{},"344":{},"345":{},"346":{},"351":{},"352":{},"360":{},"365":{},"366":{},"367":{},"371":{},"372":{},"379":{},"380":{},"383":{},"389":{},"390":{},"391":{},"392":{},"395":{},"396":{},"406":{},"413":{},"415":{},"417":{},"418":{},"430":{},"431":{},"432":{},"434":{},"436":{},"453":{},"457":{},"464":{},"465":{},"466":{},"473":{},"477":{},"478":{},"481":{},"483":{},"484":{},"487":{},"488":{},"489":{},"492":{},"494":{},"501":{},"503":{},"505":{},"510":{},"511":{},"512":{},"513":{},"514":{},"518":{},"519":{},"522":{},"524":{},"525":{},"527":{},"528":{},"531":{},"533":{},"537":{},"538":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["run.bat",{"_index":504,"title":{},"name":{},"text":{"5":{},"19":{},"38":{},"151":{},"152":{}},"component":{}}],["run.json",{"_index":1887,"title":{},"name":{},"text":{"40":{}},"component":{}}],["run.sh",{"_index":505,"title":{},"name":{},"text":{"5":{},"19":{},"38":{},"45":{},"151":{},"389":{}},"component":{}}],["run_id",{"_index":6064,"title":{},"name":{},"text":{"365":{}},"component":{}}],["runconfig",{"_index":1759,"title":{},"name":{},"text":{"37":{},"38":{},"40":{},"43":{},"151":{},"152":{},"389":{}},"component":{}}],["runden",{"_index":4111,"title":{},"name":{},"text":{"205":{}},"component":{}}],["rundung",{"_index":4114,"title":{},"name":{},"text":{"205":{}},"component":{}}],["runner",{"_index":3519,"title":{"159":{},"164-6":{}},"name":{"159":{}},"text":{"159":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"430":{}},"component":{}}],["runner_us",{"_index":3690,"title":{},"name":{},"text":{"162":{}},"component":{}}],["runpipelinetest",{"_index":6556,"title":{},"name":{"484":{}},"text":{},"component":{}}],["runssh",{"_index":5913,"title":{},"name":{"326":{}},"text":{},"component":{}}],["runtim",{"_index":144,"title":{"2-4":{},"5-3":{},"20-3":{},"50-6":{},"75-3":{},"83-3":{}},"name":{},"text":{"1":{},"2":{},"5":{},"6":{},"7":{},"9":{},"13":{},"14":{},"15":{},"16":{},"20":{},"43":{},"50":{},"53":{},"54":{},"63":{},"69":{},"76":{},"81":{},"82":{},"160":{},"163":{},"164":{},"165":{},"167":{},"168":{},"169":{},"170":{},"171":{},"178":{},"182":{},"209":{},"220":{},"227":{},"235":{},"242":{},"243":{},"246":{},"250":{},"253":{},"254":{},"257":{},"258":{},"266":{},"272":{},"273":{},"274":{},"283":{},"285":{},"287":{},"293":{},"301":{},"303":{},"309":{},"311":{},"315":{},"317":{},"320":{},"323":{},"336":{},"338":{},"341":{},"342":{},"343":{},"347":{},"348":{},"349":{},"355":{},"357":{},"358":{},"359":{},"360":{},"364":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"382":{},"383":{},"397":{},"401":{},"402":{},"408":{},"478":{},"511":{},"512":{},"518":{},"519":{},"522":{},"532":{},"544":{}},"component":{}}],["run’",{"_index":1840,"title":{},"name":{},"text":{"38":{}},"component":{}}],["rw",{"_index":5406,"title":{},"name":{},"text":{"261":{}},"component":{}}],["rwt",{"_index":7190,"title":{},"name":{},"text":{"541":{},"542":{}},"component":{}}],["rxq7777",{"_index":6655,"title":{},"name":{},"text":{"514":{}},"component":{}}],["s",{"_index":764,"title":{"43-7":{}},"name":{},"text":{"7":{},"36":{},"38":{},"41":{},"46":{},"78":{},"103":{},"316":{},"366":{},"438":{}},"component":{}}],["s/\"}$//g",{"_index":1895,"title":{},"name":{},"text":{"40":{}},"component":{}}],["s/^.*\"id\":\"//g",{"_index":1894,"title":{},"name":{},"text":{"40":{}},"component":{}}],["s/config\\/projects/${hop_config_folder}\\/projects/g",{"_index":7270,"title":{},"name":{},"text":{"543":{}},"component":{}}],["s3",{"_index":892,"title":{"97":{},"152-15":{}},"name":{"97":{}},"text":{"7":{},"8":{},"46":{},"88":{},"97":{},"161":{},"162":{},"305":{},"315":{},"514":{}},"component":{}}],["s3:///apach",{"_index":2207,"title":{},"name":{},"text":{"46":{}},"component":{}}],["s3://mi",{"_index":5767,"title":{},"name":{},"text":{"305":{}},"component":{}}],["s3filesystem",{"_index":3613,"title":{},"name":{},"text":{"161":{}},"component":{}}],["s3pvkq4luqr7jj+dnj2491pjxhfrvmyacndburyp3box1yxnza6god1glk53nemrg0mtn8kvhupr",{"_index":2142,"title":{},"name":{},"text":{"42":{}},"component":{}}],["s7jdgdbqqwmh1e/rwggaua",{"_index":3490,"title":{},"name":{},"text":{"157":{}},"component":{}}],["sa",{"_index":1463,"title":{"336":{}},"name":{},"text":{"22":{},"30":{},"81":{},"86":{},"186":{},"187":{},"336":{}},"component":{}}],["saa",{"_index":6316,"title":{},"name":{},"text":{"428":{},"465":{}},"component":{}}],["safe",{"_index":686,"title":{},"name":{},"text":{"7":{},"74":{},"157":{},"169":{},"186":{},"510":{},"532":{},"534":{}},"component":{}}],["safeemailaddress",{"_index":4535,"title":{},"name":{},"text":{"241":{}},"component":{}}],["safest",{"_index":6158,"title":{},"name":{},"text":{"372":{}},"component":{}}],["safeti",{"_index":7020,"title":{},"name":{},"text":{"533":{}},"component":{}}],["sail",{"_index":6757,"title":{},"name":{},"text":{"519":{}},"component":{}}],["sake",{"_index":3500,"title":{},"name":{},"text":{"158":{}},"component":{}}],["sale",{"_index":140,"title":{},"name":{},"text":{"1":{},"13":{},"222":{},"262":{},"323":{},"364":{},"401":{},"402":{},"408":{}},"component":{}}],["sales1",{"_index":5994,"title":{},"name":{},"text":{"349":{}},"component":{}}],["sales2",{"_index":5995,"title":{},"name":{},"text":{"349":{}},"component":{}}],["sales2=310.50",{"_index":5998,"title":{},"name":{},"text":{"349":{}},"component":{}}],["sales3",{"_index":5996,"title":{},"name":{},"text":{"349":{}},"component":{}}],["sales4",{"_index":5997,"title":{},"name":{},"text":{"349":{}},"component":{}}],["sales4=150.23",{"_index":5999,"title":{},"name":{},"text":{"349":{}},"component":{}}],["sales_200501",{"_index":6056,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_200502",{"_index":6057,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_200503",{"_index":6058,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_200504",{"_index":6059,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_200510",{"_index":6053,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_200511",{"_index":6054,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_200512",{"_index":6055,"title":{},"name":{},"text":{"364":{}},"component":{}}],["sales_valu",{"_index":5992,"title":{},"name":{},"text":{"349":{}},"component":{}}],["salesforc",{"_index":2900,"title":{"330":{},"331":{},"332":{},"333":{},"334":{}},"name":{"327":{},"328":{},"329":{}},"text":{"81":{},"86":{},"327":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"465":{}},"component":{}}],["salesforcedelet",{"_index":5923,"title":{},"name":{"330":{}},"text":{},"component":{}}],["salesforceinput",{"_index":5924,"title":{},"name":{"331":{}},"text":{},"component":{}}],["salesforceinsert",{"_index":5931,"title":{},"name":{"332":{}},"text":{},"component":{}}],["salesforceupd",{"_index":5932,"title":{},"name":{"333":{}},"text":{},"component":{}}],["salesforceupsert",{"_index":5933,"title":{},"name":{"334":{}},"text":{},"component":{}}],["same",{"_index":555,"title":{},"name":{},"text":{"5":{},"7":{},"9":{},"24":{},"25":{},"26":{},"29":{},"34":{},"40":{},"41":{},"46":{},"52":{},"55":{},"56":{},"78":{},"81":{},"82":{},"83":{},"85":{},"94":{},"113":{},"154":{},"163":{},"167":{},"168":{},"169":{},"170":{},"176":{},"177":{},"181":{},"186":{},"205":{},"217":{},"221":{},"222":{},"226":{},"229":{},"230":{},"233":{},"235":{},"238":{},"239":{},"246":{},"247":{},"250":{},"258":{},"268":{},"270":{},"274":{},"275":{},"287":{},"291":{},"292":{},"294":{},"297":{},"298":{},"305":{},"309":{},"316":{},"344":{},"345":{},"346":{},"350":{},"359":{},"361":{},"378":{},"394":{},"397":{},"433":{},"434":{},"435":{},"438":{},"439":{},"440":{},"449":{},"451":{},"453":{},"454":{},"456":{},"460":{},"461":{},"462":{},"463":{},"477":{},"478":{},"479":{},"481":{},"487":{},"488":{},"499":{},"506":{},"507":{},"508":{},"510":{},"511":{},"514":{},"519":{},"520":{},"527":{},"528":{},"531":{},"532":{},"533":{},"534":{},"541":{}},"component":{}}],["sampl",{"_index":1334,"title":{"158":{},"159":{},"160":{},"161":{},"164":{},"318":{},"335":{},"531":{},"59-4":{},"60-3":{},"63-4":{},"65-4":{},"66-4":{},"67-2":{},"68-4":{},"69-4":{},"70-4":{},"71-7":{},"72-4":{},"73-2":{},"74-4":{},"95-1":{},"158-2":{},"161-4":{},"164-3":{},"164-6":{},"178-8":{},"246-9":{},"345-4":{},"433-2":{},"531-2":{},"531-3":{}},"name":{"95":{},"158":{},"159":{},"160":{},"161":{},"164":{},"531":{}},"text":{"19":{},"25":{},"29":{},"38":{},"41":{},"47":{},"53":{},"54":{},"55":{},"56":{},"57":{},"61":{},"67":{},"68":{},"73":{},"76":{},"81":{},"86":{},"90":{},"95":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"164":{},"169":{},"220":{},"233":{},"246":{},"247":{},"250":{},"262":{},"269":{},"270":{},"273":{},"287":{},"291":{},"309":{},"318":{},"321":{},"322":{},"335":{},"344":{},"345":{},"366":{},"372":{},"378":{},"389":{},"433":{},"483":{},"514":{},"526":{},"527":{},"531":{},"532":{},"533":{},"534":{},"543":{},"546":{}},"component":{}}],["sample.json",{"_index":2545,"title":{},"name":{},"text":{"56":{}},"component":{}}],["samplemeta",{"_index":7002,"title":{},"name":{},"text":{"532":{}},"component":{}}],["sampler",{"_index":2654,"title":{"61-3":{}},"name":{},"text":{"61":{}},"component":{}}],["samplerow",{"_index":5934,"title":{},"name":{"335":{}},"text":{},"component":{}}],["samples/beam/pipelines/gener",{"_index":3543,"title":{},"name":{},"text":{"160":{}},"component":{}}],["samples/loops/pipelin",{"_index":5785,"title":{},"name":{},"text":{"309":{},"344":{}},"component":{}}],["samplestr",{"_index":6227,"title":{},"name":{},"text":{"373":{}},"component":{}}],["samplestr.indexof(\"abc",{"_index":6228,"title":{},"name":{},"text":{"373":{}},"component":{}}],["samuel",{"_index":1185,"title":{},"name":{},"text":{"10":{}},"component":{}}],["san",{"_index":1626,"title":{},"name":{},"text":{"27":{}},"component":{}}],["sandbox",{"_index":1046,"title":{},"name":{},"text":{"8":{}},"component":{}}],["sane",{"_index":4314,"title":{},"name":{},"text":{"227":{}},"component":{}}],["sao",{"_index":4141,"title":{},"name":{},"text":{"205":{}},"component":{}}],["sap",{"_index":3329,"title":{"137":{}},"name":{},"text":{},"component":{}}],["sapdb",{"_index":3330,"title":{},"name":{"137":{}},"text":{},"component":{}}],["sas7bdat",{"_index":5938,"title":{},"name":{},"text":{"336":{}},"component":{}}],["sasinput",{"_index":5937,"title":{},"name":{"336":{}},"text":{},"component":{}}],["sasl.jaas.config",{"_index":4036,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["sasl.mechan",{"_index":4048,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["sasl_ssl",{"_index":4041,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["satisfi",{"_index":5324,"title":{},"name":{},"text":{"248":{},"275":{}},"component":{}}],["saturday",{"_index":4854,"title":{},"name":{},"text":{"247":{}},"component":{}}],["save",{"_index":1226,"title":{"37-8":{}},"name":{},"text":{"11":{},"16":{},"22":{},"27":{},"36":{},"37":{},"46":{},"50":{},"53":{},"54":{},"56":{},"60":{},"75":{},"78":{},"101":{},"103":{},"130":{},"161":{},"164":{},"185":{},"205":{},"217":{},"275":{},"287":{},"367":{},"382":{},"383":{},"389":{},"464":{},"498":{},"528":{},"529":{},"535":{}},"component":{}}],["saverep",{"_index":7004,"title":{},"name":{},"text":{"532":{}},"component":{}}],["saxon",{"_index":6619,"title":{},"name":{},"text":{"508":{}},"component":{}}],["say",{"_index":3151,"title":{},"name":{},"text":{"101":{},"289":{}},"component":{}}],["sbin/start",{"_index":3578,"title":{},"name":{},"text":{"161":{}},"component":{}}],["scala",{"_index":3534,"title":{},"name":{},"text":{"160":{},"163":{}},"component":{}}],["scalabl",{"_index":6320,"title":{},"name":{},"text":{"429":{},"431":{},"518":{}},"component":{}}],["scalar",{"_index":5302,"title":{},"name":{},"text":{"247":{}},"component":{}}],["scale",{"_index":2256,"title":{},"name":{},"text":{"50":{},"82":{},"160":{},"165":{},"167":{},"275":{},"372":{},"454":{}},"component":{}}],["scan",{"_index":879,"title":{},"name":{},"text":{"7":{},"56":{},"243":{},"367":{},"501":{},"528":{},"530":{}},"component":{}}],["scanner",{"_index":6890,"title":{},"name":{},"text":{"528":{}},"component":{}}],["scd",{"_index":1441,"title":{},"name":{},"text":{"20":{}},"component":{}}],["scenario",{"_index":304,"title":{},"name":{},"text":{"2":{},"7":{},"20":{},"41":{},"54":{},"55":{},"57":{},"158":{},"246":{},"433":{},"514":{},"527":{}},"component":{}}],["scene",{"_index":2725,"title":{},"name":{},"text":{"75":{},"519":{}},"component":{}}],["schedul",{"_index":1218,"title":{"56-6":{}},"name":{},"text":{"10":{},"56":{},"83":{},"275":{},"457":{},"494":{},"513":{}},"component":{}}],["schedule_interv",{"_index":2630,"title":{},"name":{},"text":{"56":{}},"component":{}}],["schedule_interval='0",{"_index":2632,"title":{},"name":{},"text":{"56":{}},"component":{}}],["schedule_interval=non",{"_index":2577,"title":{},"name":{},"text":{"56":{}},"component":{}}],["scheduler_job_runner.py:1576",{"_index":2515,"title":{},"name":{},"text":{"56":{}},"component":{}}],["scheduler_job_runner.py:823",{"_index":2507,"title":{},"name":{},"text":{"56":{}},"component":{}}],["scheduler_job_runner.py:830",{"_index":2509,"title":{},"name":{},"text":{"56":{}},"component":{}}],["schema",{"_index":1516,"title":{"66":{},"356":{},"196-5":{},"197-5":{},"275-11":{},"276-5":{}},"name":{"66":{}},"text":{"24":{},"64":{},"66":{},"71":{},"81":{},"82":{},"86":{},"108":{},"153":{},"177":{},"182":{},"183":{},"184":{},"185":{},"196":{},"197":{},"215":{},"216":{},"222":{},"225":{},"227":{},"257":{},"268":{},"271":{},"275":{},"276":{},"289":{},"303":{},"304":{},"311":{},"315":{},"346":{},"352":{},"356":{},"360":{},"361":{},"362":{},"364":{},"371":{},"376":{},"384":{},"427":{},"440":{},"470":{},"471":{},"472":{},"496":{},"498":{},"501":{},"507":{}},"component":{}}],["schema.registry.basic.auth.user.info",{"_index":4046,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["schema.registry.url",{"_index":4053,"title":{},"name":{},"text":{"197":{},"275":{},"276":{},"427":{}},"component":{}}],["schema_registry_api_key:schema_registry_api_secret",{"_index":4047,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["scheme",{"_index":966,"title":{"97-1":{},"98-1":{},"99-1":{},"100-1":{},"101-1":{},"535-3":{}},"name":{},"text":{"8":{},"23":{},"87":{},"97":{},"98":{},"99":{},"100":{},"101":{},"154":{},"276":{}},"component":{}}],["school",{"_index":4592,"title":{},"name":{},"text":{"241":{}},"component":{}}],["scientif",{"_index":6102,"title":{},"name":{},"text":{"366":{}},"component":{}}],["scikit",{"_index":2994,"title":{},"name":{},"text":{"87":{}},"component":{}}],["scope",{"_index":630,"title":{},"name":{},"text":{"7":{},"36":{},"94":{},"258":{},"277":{},"309":{},"344":{},"420":{},"426":{},"481":{},"483":{},"486":{},"542":{}},"component":{}}],["score",{"_index":5323,"title":{},"name":{},"text":{"248":{}},"component":{}}],["scp",{"_index":1066,"title":{},"name":{},"text":{"8":{}},"component":{}}],["scram_sha1",{"_index":2671,"title":{},"name":{},"text":{"65":{}},"component":{}}],["scratch",{"_index":6755,"title":{},"name":{},"text":{"519":{}},"component":{}}],["scratchpad",{"_index":1070,"title":{},"name":{},"text":{"8":{}},"component":{}}],["screen",{"_index":2608,"title":{},"name":{},"text":{"56":{},"130":{},"158":{}},"component":{}}],["screenshot",{"_index":2182,"title":{"43-3":{}},"name":{},"text":{"43":{},"53":{},"54":{},"57":{},"227":{},"528":{}},"component":{}}],["script",{"_index":553,"title":{"238":{},"239":{},"337":{},"475":{},"493":{},"270-7":{},"337-13":{},"514-7":{},"527-5":{},"543-5":{}},"name":{"337":{}},"text":{"5":{},"9":{},"11":{},"14":{},"38":{},"41":{},"56":{},"76":{},"81":{},"86":{},"87":{},"90":{},"99":{},"101":{},"150":{},"152":{},"161":{},"186":{},"187":{},"203":{},"205":{},"237":{},"238":{},"239":{},"270":{},"299":{},"324":{},"325":{},"337":{},"363":{},"367":{},"388":{},"389":{},"395":{},"423":{},"432":{},"437":{},"453":{},"457":{},"475":{},"489":{},"493":{},"501":{},"514":{},"518":{},"527":{},"533":{},"541":{},"543":{}},"component":{}}],["scripting/dynam",{"_index":4422,"title":{},"name":{},"text":{"239":{}},"component":{}}],["scroll",{"_index":290,"title":{},"name":{},"text":{"2":{},"15":{},"16":{},"78":{}},"component":{}}],["scrub",{"_index":6367,"title":{},"name":{},"text":{"433":{}},"component":{}}],["sdk",{"_index":3615,"title":{"544":{}},"name":{"544":{}},"text":{"161":{},"165":{},"545":{}},"component":{}}],["sdkinfo",{"_index":6631,"title":{},"name":{},"text":{"513":{}},"component":{}}],["se",{"_index":5533,"title":{},"name":{},"text":{"273":{}},"component":{}}],["seamlessli",{"_index":6769,"title":{},"name":{},"text":{"521":{}},"component":{}}],["search",{"_index":51,"title":{"34":{},"39":{},"47":{},"19-5":{},"247-164":{},"277-4":{}},"name":{"34":{},"47":{},"416":{}},"text":{"1":{},"5":{},"15":{},"16":{},"19":{},"24":{},"26":{},"34":{},"35":{},"36":{},"39":{},"47":{},"49":{},"53":{},"54":{},"78":{},"206":{},"234":{},"236":{},"247":{},"250":{},"251":{},"273":{},"277":{},"278":{},"291":{},"317":{},"338":{},"351":{},"355":{},"366":{},"367":{},"413":{},"416":{},"418":{},"459":{},"509":{},"518":{},"527":{},"530":{},"532":{},"533":{},"538":{},"544":{}},"component":{}}],["search(\"p\";\"appl",{"_index":5285,"title":{},"name":{},"text":{"247":{}},"component":{}}],["search(\"p\";\"apple\";3",{"_index":5286,"title":{},"name":{},"text":{"247":{}},"component":{}}],["search.bat",{"_index":1385,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["search.sh",{"_index":1394,"title":{},"name":{},"text":{"19":{},"47":{}},"component":{}}],["second",{"_index":1285,"title":{"247-39":{}},"name":{},"text":{"15":{},"16":{},"19":{},"25":{},"38":{},"41":{},"42":{},"48":{},"52":{},"55":{},"56":{},"57":{},"67":{},"73":{},"76":{},"78":{},"82":{},"83":{},"104":{},"105":{},"154":{},"160":{},"170":{},"179":{},"181":{},"202":{},"205":{},"223":{},"224":{},"228":{},"236":{},"238":{},"247":{},"263":{},"273":{},"274":{},"284":{},"290":{},"292":{},"326":{},"344":{},"361":{},"366":{},"382":{},"445":{},"456":{},"460":{},"461":{},"463":{},"483":{},"500":{},"501":{},"508":{},"509":{},"511":{},"514":{},"520":{},"527":{},"528":{},"543":{}},"component":{}}],["second(datetimevalue(\"2004",{"_index":4857,"title":{},"name":{},"text":{"247":{}},"component":{}}],["secondari",{"_index":2675,"title":{},"name":{},"text":{"65":{},"248":{}},"component":{}}],["secondary_pref",{"_index":2676,"title":{},"name":{},"text":{"65":{}},"component":{}}],["secondaryschool",{"_index":4501,"title":{},"name":{},"text":{"241":{}},"component":{}}],["seconds/minut",{"_index":6598,"title":{},"name":{},"text":{"494":{}},"component":{}}],["secret",{"_index":3110,"title":{},"name":{},"text":{"97":{},"198":{},"199":{}},"component":{}}],["section",{"_index":554,"title":{"274-5":{},"274-6":{}},"name":{},"text":{"5":{},"17":{},"41":{},"55":{},"56":{},"76":{},"88":{},"90":{},"96":{},"98":{},"130":{},"162":{},"165":{},"168":{},"171":{},"186":{},"187":{},"206":{},"223":{},"227":{},"234":{},"235":{},"247":{},"251":{},"270":{},"277":{},"278":{},"291":{},"294":{},"309":{},"316":{},"317":{},"338":{},"367":{},"380":{},"389":{},"490":{},"499":{},"505":{},"512":{},"513":{},"522":{}},"component":{}}],["secur",{"_index":1928,"title":{"165-4":{}},"name":{},"text":{"41":{},"101":{},"130":{},"154":{},"157":{},"165":{},"168":{},"174":{},"280":{},"326":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"464":{},"466":{},"485":{},"487":{},"488":{},"533":{}},"component":{}}],["security.protocol",{"_index":4040,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["securitymanag",{"_index":3637,"title":{},"name":{},"text":{"161":{}},"component":{}}],["sed",{"_index":1893,"title":{},"name":{},"text":{"40":{},"543":{}},"component":{}}],["see",{"_index":638,"title":{"541-2":{}},"name":{},"text":{"7":{},"8":{},"9":{},"15":{},"16":{},"17":{},"24":{},"28":{},"29":{},"30":{},"37":{},"38":{},"40":{},"41":{},"46":{},"50":{},"53":{},"54":{},"56":{},"61":{},"62":{},"68":{},"76":{},"78":{},"82":{},"83":{},"85":{},"88":{},"90":{},"94":{},"97":{},"98":{},"99":{},"100":{},"101":{},"113":{},"130":{},"150":{},"152":{},"154":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"165":{},"167":{},"169":{},"170":{},"172":{},"178":{},"186":{},"198":{},"199":{},"207":{},"208":{},"217":{},"222":{},"227":{},"233":{},"234":{},"246":{},"247":{},"250":{},"251":{},"256":{},"258":{},"260":{},"261":{},"269":{},"270":{},"271":{},"273":{},"274":{},"275":{},"276":{},"280":{},"283":{},"286":{},"290":{},"291":{},"292":{},"297":{},"304":{},"305":{},"309":{},"316":{},"320":{},"326":{},"342":{},"352":{},"366":{},"367":{},"372":{},"373":{},"378":{},"381":{},"383":{},"384":{},"389":{},"391":{},"395":{},"396":{},"420":{},"426":{},"431":{},"432":{},"433":{},"453":{},"466":{},"467":{},"468":{},"469":{},"473":{},"475":{},"481":{},"488":{},"489":{},"503":{},"507":{},"511":{},"514":{},"519":{},"520":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"537":{},"538":{},"541":{},"542":{},"544":{}},"component":{}}],["seed",{"_index":5344,"title":{},"name":{},"text":{"249":{},"318":{}},"component":{}}],["seem",{"_index":4182,"title":{},"name":{},"text":{"205":{},"431":{},"500":{}},"component":{}}],["seen",{"_index":1303,"title":{},"name":{},"text":{"17":{},"43":{},"103":{},"157":{},"235":{},"542":{}},"component":{}}],["seet",{"_index":6575,"title":{},"name":{},"text":{"488":{}},"component":{}}],["segment",{"_index":4075,"title":{},"name":{},"text":{"202":{},"231":{}},"component":{}}],["select",{"_index":721,"title":{"338":{},"29-7":{},"338-4":{}},"name":{},"text":{"7":{},"11":{},"15":{},"16":{},"20":{},"22":{},"23":{},"24":{},"27":{},"29":{},"30":{},"32":{},"34":{},"36":{},"41":{},"50":{},"52":{},"53":{},"54":{},"56":{},"58":{},"61":{},"69":{},"70":{},"71":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"85":{},"86":{},"93":{},"94":{},"99":{},"103":{},"104":{},"130":{},"131":{},"153":{},"158":{},"160":{},"161":{},"163":{},"165":{},"169":{},"182":{},"183":{},"184":{},"185":{},"188":{},"208":{},"209":{},"220":{},"221":{},"222":{},"223":{},"227":{},"230":{},"231":{},"232":{},"234":{},"236":{},"238":{},"239":{},"245":{},"246":{},"247":{},"250":{},"251":{},"252":{},"255":{},"258":{},"260":{},"261":{},"264":{},"270":{},"271":{},"273":{},"275":{},"277":{},"279":{},"286":{},"287":{},"289":{},"291":{},"292":{},"297":{},"303":{},"304":{},"309":{},"313":{},"315":{},"316":{},"318":{},"320":{},"323":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"342":{},"343":{},"350":{},"352":{},"363":{},"364":{},"366":{},"370":{},"372":{},"373":{},"374":{},"381":{},"384":{},"386":{},"420":{},"433":{},"435":{},"441":{},"442":{},"447":{},"448":{},"450":{},"458":{},"461":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"470":{},"481":{},"487":{},"488":{},"490":{},"498":{},"499":{},"508":{},"513":{},"520":{},"528":{},"541":{}},"component":{}}],["selecting.\\nth",{"_index":2832,"title":{},"name":{},"text":{"78":{}},"component":{}}],["selectiontreeextens",{"_index":7238,"title":{},"name":{},"text":{"542":{}},"component":{}}],["selectvalu",{"_index":5961,"title":{},"name":{"338":{}},"text":{},"component":{}}],["self",{"_index":509,"title":{},"name":{},"text":{"5":{},"9":{},"14":{},"52":{},"95":{},"158":{},"297":{},"345":{},"390":{}},"component":{}}],["sell",{"_index":229,"title":{"2":{}},"name":{},"text":{},"component":{}}],["semant",{"_index":3522,"title":{},"name":{},"text":{"159":{},"164":{},"166":{},"247":{}},"component":{}}],["semaphor",{"_index":6599,"title":{},"name":{},"text":{"496":{}},"component":{}}],["semi",{"_index":6395,"title":{},"name":{},"text":{"437":{},"475":{},"493":{}},"component":{}}],["semicolon",{"_index":4250,"title":{},"name":{},"text":{"220":{},"243":{},"246":{},"493":{}},"component":{}}],["send",{"_index":126,"title":{"485":{},"538-11":{},"538-12":{}},"name":{},"text":{"1":{},"7":{},"13":{},"29":{},"54":{},"55":{},"62":{},"67":{},"73":{},"75":{},"78":{},"87":{},"162":{},"167":{},"170":{},"186":{},"187":{},"197":{},"199":{},"238":{},"239":{},"246":{},"256":{},"264":{},"276":{},"280":{},"285":{},"309":{},"319":{},"345":{},"346":{},"366":{},"372":{},"377":{},"378":{},"382":{},"404":{},"410":{},"427":{},"466":{},"480":{},"481":{},"483":{},"485":{},"487":{},"488":{},"491":{},"493":{},"511":{},"538":{},"544":{}},"component":{}}],["sender",{"_index":4352,"title":{},"name":{},"text":{"232":{},"280":{},"464":{},"466":{},"467":{},"485":{}},"component":{}}],["sendnagiospassivecheck",{"_index":6558,"title":{},"name":{"485":{}},"text":{},"component":{}}],["senior",{"_index":4537,"title":{},"name":{},"text":{"241":{}},"component":{}}],["sens",{"_index":745,"title":{},"name":{},"text":{"7":{},"52":{},"78":{},"158":{},"170":{},"227":{},"247":{},"511":{},"544":{}},"component":{}}],["sensit",{"_index":1387,"title":{},"name":{},"text":{"19":{},"34":{},"47":{},"90":{},"247":{},"248":{},"262":{},"280":{},"317":{},"347":{},"380":{},"389":{},"466":{},"505":{}},"component":{}}],["sensor",{"_index":5555,"title":{},"name":{},"text":{"275":{}},"component":{}}],["sent",{"_index":662,"title":{},"name":{},"text":{"7":{},"82":{},"165":{},"166":{},"167":{},"168":{},"170":{},"185":{},"196":{},"197":{},"203":{},"207":{},"245":{},"246":{},"269":{},"275":{},"276":{},"345":{},"359":{},"400":{},"466":{},"487":{},"488":{},"489":{},"511":{}},"component":{}}],["separ",{"_index":364,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"11":{},"25":{},"31":{},"38":{},"41":{},"50":{},"53":{},"57":{},"58":{},"59":{},"71":{},"82":{},"91":{},"94":{},"152":{},"154":{},"165":{},"166":{},"167":{},"168":{},"185":{},"194":{},"195":{},"196":{},"197":{},"200":{},"217":{},"220":{},"228":{},"230":{},"234":{},"238":{},"246":{},"247":{},"248":{},"252":{},"262":{},"274":{},"275":{},"276":{},"277":{},"279":{},"280":{},"287":{},"289":{},"291":{},"292":{},"320":{},"335":{},"338":{},"345":{},"350":{},"361":{},"366":{},"367":{},"374":{},"389":{},"400":{},"424":{},"425":{},"432":{},"466":{},"467":{},"470":{},"471":{},"472":{},"475":{},"476":{},"481":{},"489":{},"493":{},"499":{},"503":{},"514":{},"529":{},"544":{}},"component":{}}],["seper",{"_index":5586,"title":{},"name":{},"text":{"278":{},"475":{}},"component":{}}],["septemb",{"_index":6747,"title":{},"name":{},"text":{"519":{}},"component":{}}],["sequenc",{"_index":119,"title":{"176":{},"177":{}},"name":{},"text":{"1":{},"13":{},"15":{},"78":{},"81":{},"86":{},"105":{},"176":{},"177":{},"186":{},"198":{},"216":{},"227":{},"247":{},"248":{},"271":{},"273":{},"275":{},"316":{},"322":{},"404":{},"410":{},"531":{}},"component":{}}],["sequencenumb",{"_index":4006,"title":{},"name":{},"text":{"186":{}},"component":{}}],["sequenti",{"_index":81,"title":{"57-3":{}},"name":{},"text":{"1":{},"13":{},"16":{},"57":{},"105":{},"247":{},"258":{},"275":{},"309":{},"321":{},"344":{},"399":{},"404":{},"410":{},"518":{}},"component":{}}],["seri",{"_index":2734,"title":{},"name":{},"text":{"76":{},"105":{},"163":{},"165":{},"247":{},"345":{},"368":{},"439":{},"484":{},"518":{},"525":{}},"component":{}}],["serial",{"_index":209,"title":{"339":{},"340":{}},"name":{"339":{},"340":{}},"text":{"1":{},"7":{},"9":{},"81":{},"86":{},"153":{},"154":{},"160":{},"161":{},"166":{},"233":{},"247":{},"304":{},"305":{},"339":{},"340":{},"397":{},"405":{},"427":{},"525":{},"529":{},"532":{},"544":{}},"component":{}}],["serialis",{"_index":6905,"title":{"529-5":{}},"name":{},"text":{"529":{}},"component":{}}],["serializ",{"_index":5375,"title":{},"name":{},"text":{"253":{},"254":{},"258":{}},"component":{}}],["serializablemetadataprovid",{"_index":7281,"title":{},"name":{},"text":{"544":{}},"component":{}}],["seriou",{"_index":1474,"title":{},"name":{},"text":{"23":{}},"component":{}}],["serv",{"_index":2296,"title":{},"name":{},"text":{"50":{},"165":{},"168":{}},"component":{}}],["server",{"_index":66,"title":{"41":{},"42":{},"63":{},"341":{},"470":{},"19-6":{},"41-1":{},"41-3":{},"41-4":{},"41-6":{},"41-7":{},"41-8":{},"41-10":{},"41-13":{},"41-14":{},"43-5":{},"44-5":{},"77-2":{},"130-3":{},"130-4":{},"168-3":{},"170-3":{},"280-5":{},"466-4":{},"511-3":{},"532-10":{}},"name":{"63":{},"417":{}},"text":{"1":{},"2":{},"5":{},"7":{},"8":{},"9":{},"19":{},"24":{},"25":{},"37":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"49":{},"50":{},"52":{},"56":{},"58":{},"62":{},"63":{},"64":{},"76":{},"77":{},"81":{},"82":{},"86":{},"91":{},"92":{},"130":{},"153":{},"154":{},"164":{},"168":{},"170":{},"196":{},"197":{},"206":{},"232":{},"256":{},"263":{},"264":{},"275":{},"276":{},"277":{},"278":{},"280":{},"291":{},"319":{},"326":{},"341":{},"366":{},"389":{},"395":{},"406":{},"417":{},"418":{},"429":{},"431":{},"433":{},"436":{},"453":{},"457":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"470":{},"473":{},"481":{},"483":{},"485":{},"487":{},"488":{},"491":{},"503":{},"511":{},"512":{},"514":{},"518":{},"519":{},"525":{},"542":{},"543":{},"544":{}},"component":{}}],["server.bat",{"_index":506,"title":{},"name":{},"text":{"5":{},"19":{},"41":{}},"component":{}}],["server.hpl",{"_index":2225,"title":{},"name":{},"text":{"46":{}},"component":{}}],["server.sh",{"_index":507,"title":{},"name":{},"text":{"5":{},"19":{},"41":{}},"component":{}}],["server.xml",{"_index":1924,"title":{},"name":{},"text":{"41":{}},"component":{}}],["server/fil",{"_index":3926,"title":{},"name":{},"text":{"170":{},"511":{}},"component":{}}],["server/sql",{"_index":3296,"title":{},"name":{},"text":{"130":{}},"component":{}}],["server:8081",{"_index":6314,"title":{},"name":{},"text":{"427":{}},"component":{}}],["server@3749c6ac{stopped}[9.4.35.v20201120",{"_index":1975,"title":{},"name":{},"text":{"41":{}},"component":{}}],["servernam",{"_index":2807,"title":{},"name":{},"text":{"77":{}},"component":{}}],["serverstatu",{"_index":5971,"title":{},"name":{"341":{}},"text":{},"component":{}}],["server’",{"_index":2048,"title":{},"name":{},"text":{"42":{},"77":{}},"component":{}}],["servic",{"_index":68,"title":{"40":{},"42":{},"43":{},"50":{},"58":{},"377":{},"37-4":{},"37-10":{},"37-13":{},"37-15":{},"41-14":{},"43-2":{},"43-6":{},"50-2":{},"50-3":{},"50-8":{},"152-15":{},"154-5":{},"260-4":{},"261-4":{}},"name":{"40":{},"43":{},"50":{}},"text":{"1":{},"19":{},"24":{},"27":{},"37":{},"40":{},"41":{},"42":{},"43":{},"50":{},"51":{},"52":{},"58":{},"64":{},"81":{},"86":{},"92":{},"97":{},"100":{},"117":{},"130":{},"133":{},"148":{},"152":{},"154":{},"158":{},"162":{},"165":{},"166":{},"167":{},"168":{},"187":{},"198":{},"199":{},"211":{},"259":{},"260":{},"261":{},"264":{},"274":{},"280":{},"319":{},"330":{},"331":{},"332":{},"333":{},"334":{},"367":{},"377":{},"383":{},"417":{},"418":{},"428":{},"485":{},"502":{},"514":{},"527":{}},"component":{}}],["service\",\"cassandra",{"_index":1726,"title":{},"name":{},"text":{"37":{}},"component":{}}],["service\",\"copynr\":null,\"loggingtext\":\"log",{"_index":1795,"title":{},"name":{},"text":{"37":{}},"component":{}}],["service\",\"execut",{"_index":1724,"title":{},"name":{},"text":{"37":{}},"component":{}}],["serviceaccount",{"_index":3684,"title":{},"name":{},"text":{"162":{}},"component":{}}],["serviceaccountkeyfil",{"_index":3141,"title":{},"name":{},"text":{"100":{}},"component":{}}],["services2",{"_index":3617,"title":{},"name":{},"text":{"161":{}},"component":{}}],["serviceunavailableexcept",{"_index":3467,"title":{},"name":{},"text":{"154":{}},"component":{}}],["servlet",{"_index":803,"title":{},"name":{},"text":{"7":{},"43":{},"50":{},"63":{},"64":{},"168":{},"274":{},"367":{},"383":{}},"component":{}}],["session",{"_index":536,"title":{"202-7":{},"542-1":{},"542-2":{},"542-3":{}},"name":{},"text":{"5":{},"16":{},"154":{},"202":{},"365":{},"533":{},"541":{},"542":{}},"component":{}}],["sessionexpiredexcept",{"_index":3468,"title":{},"name":{},"text":{"154":{}},"component":{}}],["set",{"_index":347,"title":{"60":{},"342":{},"343":{},"344":{},"486":{},"533":{},"5-5":{},"5-8":{},"5-11":{},"50-6":{},"50-7":{},"83-5":{},"83-6":{},"90-10":{},"150-3":{},"152-10":{},"232-5":{},"255-5":{},"259-5":{},"274-5":{},"278-4":{},"289-5":{},"289-6":{},"316-7":{},"326-5":{},"329-1":{},"330-6":{},"331-6":{},"332-5":{},"333-5":{},"333-6":{},"334-5":{},"389-14":{},"441-3":{},"464-4":{},"503-5":{},"527-7":{},"531-6":{},"538-4":{},"546-1":{}},"name":{"60":{},"329":{}},"text":{"2":{},"5":{},"7":{},"8":{},"9":{},"11":{},"19":{},"20":{},"24":{},"25":{},"27":{},"29":{},"37":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"60":{},"63":{},"64":{},"65":{},"70":{},"75":{},"76":{},"78":{},"81":{},"82":{},"83":{},"86":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{},"103":{},"107":{},"130":{},"133":{},"150":{},"151":{},"152":{},"153":{},"154":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"174":{},"177":{},"178":{},"179":{},"180":{},"188":{},"189":{},"191":{},"196":{},"197":{},"202":{},"204":{},"205":{},"206":{},"207":{},"216":{},"217":{},"218":{},"220":{},"227":{},"232":{},"233":{},"234":{},"235":{},"237":{},"240":{},"244":{},"245":{},"246":{},"247":{},"248":{},"250":{},"251":{},"252":{},"256":{},"258":{},"259":{},"264":{},"270":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"280":{},"284":{},"287":{},"289":{},"291":{},"292":{},"297":{},"298":{},"300":{},"301":{},"303":{},"309":{},"312":{},"314":{},"316":{},"317":{},"318":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"337":{},"338":{},"342":{},"343":{},"344":{},"346":{},"349":{},"350":{},"351":{},"352":{},"355":{},"356":{},"363":{},"366":{},"367":{},"369":{},"372":{},"376":{},"378":{},"380":{},"383":{},"386":{},"387":{},"388":{},"389":{},"390":{},"392":{},"394":{},"395":{},"398":{},"400":{},"421":{},"422":{},"423":{},"424":{},"426":{},"427":{},"430":{},"431":{},"432":{},"433":{},"435":{},"439":{},"447":{},"448":{},"450":{},"453":{},"461":{},"462":{},"463":{},"464":{},"466":{},"468":{},"481":{},"483":{},"485":{},"486":{},"488":{},"489":{},"490":{},"492":{},"496":{},"498":{},"501":{},"503":{},"505":{},"506":{},"508":{},"511":{},"512":{},"514":{},"526":{},"527":{},"528":{},"529":{},"531":{},"533":{},"534":{},"538":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["setfinish",{"_index":7310,"title":{},"name":{},"text":{"544":{}},"component":{}}],["setfocu",{"_index":6932,"title":{},"name":{},"text":{"529":{}},"component":{}}],["setoutputdon",{"_index":6157,"title":{},"name":{},"text":{"372":{}},"component":{}}],["setter",{"_index":7074,"title":{},"name":{},"text":{"536":{}},"component":{}}],["settings.py:60",{"_index":2518,"title":{},"name":{},"text":{"56":{}},"component":{}}],["setup",{"_index":1195,"title":{"160-3":{},"162-3":{},"275-5":{},"433-2":{}},"name":{"533":{}},"text":{"10":{},"41":{},"56":{},"82":{},"130":{},"157":{},"160":{},"162":{},"165":{},"433":{},"485":{},"514":{},"543":{}},"component":{}}],["setvalu",{"_index":6178,"title":{},"name":{},"text":{"372":{}},"component":{}}],["setvalueconst",{"_index":5973,"title":{},"name":{"342":{}},"text":{},"component":{}}],["setvaluefield",{"_index":5974,"title":{},"name":{"343":{}},"text":{},"component":{}}],["setvari",{"_index":5975,"title":{},"name":{"344":{},"486":{}},"text":{},"component":{}}],["setwidgetscont",{"_index":6928,"title":{},"name":{},"text":{"529":{}},"component":{}}],["sever",{"_index":518,"title":{},"name":{},"text":{"5":{},"78":{},"158":{},"220":{},"222":{},"227":{},"248":{},"256":{},"271":{},"291":{},"292":{},"298":{},"345":{},"367":{},"383":{},"434":{},"435":{},"438":{},"439":{},"440":{},"449":{},"451":{},"453":{},"454":{},"461":{},"462":{},"463":{},"466":{},"477":{},"478":{},"479":{},"487":{},"488":{},"498":{},"506":{},"507":{},"508":{},"514":{}},"component":{}}],["sex",{"_index":4489,"title":{},"name":{},"text":{"241":{}},"component":{}}],["sftp",{"_index":1064,"title":{"487":{},"488":{}},"name":{"487":{}},"text":{"8":{},"453":{},"462":{},"487":{},"488":{}},"component":{}}],["sftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz",{"_index":1067,"title":{},"name":{},"text":{"8":{}},"component":{}}],["sftpput",{"_index":6572,"title":{},"name":{"488":{}},"text":{},"component":{}}],["sh",{"_index":762,"title":{},"name":{},"text":{"7":{},"37":{},"41":{},"46":{},"90":{},"150":{},"151":{},"152":{},"157":{},"163":{},"167":{},"168":{},"389":{},"528":{}},"component":{}}],["sha",{"_index":3945,"title":{},"name":{},"text":{"174":{},"205":{}},"component":{}}],["sha1",{"_index":4480,"title":{},"name":{},"text":{"241":{}},"component":{}}],["sha256",{"_index":4481,"title":{},"name":{},"text":{"241":{}},"component":{}}],["sha512",{"_index":4482,"title":{},"name":{},"text":{"241":{},"537":{},"538":{}},"component":{}}],["sha512sum",{"_index":7086,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["shade",{"_index":3219,"title":{},"name":{},"text":{"117":{}},"component":{}}],["shakespear",{"_index":4568,"title":{},"name":{},"text":{"241":{}},"component":{}}],["shall",{"_index":4394,"title":{},"name":{},"text":{"235":{},"247":{}},"component":{}}],["shape",{"_index":373,"title":{},"name":{},"text":{"2":{},"178":{}},"component":{}}],["shard",{"_index":4062,"title":{},"name":{},"text":{"198":{}},"component":{}}],["share",{"_index":155,"title":{"542-1":{}},"name":{"425":{}},"text":{"1":{},"46":{},"57":{},"64":{},"162":{},"165":{},"186":{},"187":{},"260":{},"261":{},"275":{},"388":{},"400":{},"406":{},"485":{},"518":{},"521":{},"525":{},"529":{},"532":{},"542":{},"544":{}},"component":{}}],["shared.xml",{"_index":2205,"title":{},"name":{},"text":{"46":{},"388":{},"520":{}},"component":{}}],["shared_jdbc_fold",{"_index":5789,"title":{},"name":{},"text":{"311":{}},"component":{}}],["sheet",{"_index":2980,"title":{"260":{},"261":{},"234-5":{},"235-4":{}},"name":{"260":{},"261":{}},"text":{"86":{},"87":{},"234":{},"235":{},"260":{},"261":{},"430":{}},"component":{}}],["sheetnam",{"_index":4386,"title":{},"name":{},"text":{"234":{}},"component":{}}],["shell",{"_index":2778,"title":{"489":{},"514-7":{}},"name":{"426":{},"489":{}},"text":{"76":{},"94":{},"237":{},"326":{},"426":{},"453":{},"489":{},"514":{}},"component":{}}],["shift",{"_index":1280,"title":{},"name":{},"text":{"15":{},"16":{},"24":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"78":{},"94":{},"235":{}},"component":{}}],["ship",{"_index":2983,"title":{},"name":{},"text":{"87":{},"130":{},"337":{},"527":{},"531":{},"546":{}},"component":{}}],["short",{"_index":884,"title":{},"name":{},"text":{"7":{},"20":{},"38":{},"41":{},"56":{},"78":{},"91":{},"103":{},"152":{},"205":{},"234":{},"247":{},"273":{},"279":{},"314":{},"366":{},"384":{},"385":{},"389":{},"507":{},"514":{},"537":{}},"component":{}}],["short_filenam",{"_index":5361,"title":{},"name":{},"text":{"251":{}},"component":{}}],["shortcut",{"_index":1480,"title":{"36":{},"36-1":{},"36-2":{},"36-3":{},"94-2":{}},"name":{"36":{}},"text":{"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"35":{},"36":{},"52":{},"372":{},"544":{}},"component":{}}],["shortest",{"_index":6353,"title":{},"name":{},"text":{"432":{}},"component":{}}],["shouldn’t",{"_index":2718,"title":{},"name":{},"text":{"71":{},"160":{},"298":{}},"component":{}}],["show",{"_index":1231,"title":{},"name":{},"text":{"11":{},"22":{},"23":{},"24":{},"27":{},"29":{},"32":{},"33":{},"34":{},"38":{},"46":{},"50":{},"53":{},"54":{},"56":{},"57":{},"77":{},"78":{},"83":{},"84":{},"85":{},"94":{},"95":{},"156":{},"160":{},"161":{},"169":{},"233":{},"234":{},"247":{},"250":{},"252":{},"273":{},"274":{},"279":{},"287":{},"292":{},"313":{},"314":{},"347":{},"352":{},"366":{},"367":{},"372":{},"386":{},"433":{},"441":{},"465":{},"509":{},"513":{},"520":{},"537":{}},"component":{}}],["showcas",{"_index":4425,"title":{},"name":{},"text":{"241":{},"433":{}},"component":{}}],["shown",{"_index":481,"title":{},"name":{},"text":{"5":{},"7":{},"23":{},"24":{},"27":{},"29":{},"31":{},"32":{},"36":{},"38":{},"41":{},"56":{},"57":{},"78":{},"79":{},"82":{},"83":{},"84":{},"85":{},"94":{},"103":{},"105":{},"130":{},"151":{},"152":{},"159":{},"160":{},"162":{},"221":{},"246":{},"247":{},"258":{},"291":{},"316":{},"321":{},"344":{},"372":{},"389":{},"420":{},"426":{},"441":{},"520":{},"530":{},"533":{}},"component":{}}],["shuffl",{"_index":3762,"title":{},"name":{},"text":{"163":{}},"component":{}}],["shut",{"_index":1072,"title":{},"name":{},"text":{"8":{},"162":{},"167":{},"324":{}},"component":{}}],["shutdown",{"_index":1990,"title":{},"name":{},"text":{"41":{},"161":{},"167":{},"514":{}},"component":{}}],["shutdownhookmanag",{"_index":3645,"title":{},"name":{},"text":{"161":{}},"component":{}}],["shutdownport",{"_index":1917,"title":{},"name":{},"text":{"41":{}},"component":{}}],["sid",{"_index":3313,"title":{},"name":{},"text":{"133":{}},"component":{}}],["side",{"_index":394,"title":{"29-5":{},"29-6":{}},"name":{},"text":{"4":{},"5":{},"23":{},"29":{},"30":{},"31":{},"36":{},"163":{},"168":{},"205":{},"247":{},"284":{},"299":{},"309":{},"324":{},"325":{},"355":{},"373":{},"374":{}},"component":{}}],["sig",{"_index":7127,"title":{},"name":{},"text":{"538":{}},"component":{}}],["sigil",{"_index":5977,"title":{},"name":{},"text":{"344":{}},"component":{}}],["sign",{"_index":4227,"title":{"247-129":{},"538-7":{}},"name":{},"text":{"216":{},"247":{},"366":{},"478":{},"479":{},"538":{}},"component":{}}],["sign(10",{"_index":5073,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sign(4",{"_index":5074,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sign(numb",{"_index":5072,"title":{},"name":{},"text":{"247":{}},"component":{}}],["signal",{"_index":6456,"title":{},"name":{},"text":{"453":{},"457":{},"481":{},"482":{},"529":{}},"component":{}}],["signatur",{"_index":6537,"title":{"479":{}},"name":{},"text":{"477":{},"479":{},"537":{},"538":{}},"component":{}}],["signifi",{"_index":6034,"title":{},"name":{},"text":{"360":{}},"component":{}}],["signific",{"_index":3153,"title":{},"name":{},"text":{"103":{},"217":{},"220":{},"234":{},"253":{},"254":{},"258":{},"264":{},"267":{},"331":{},"363":{},"366":{},"367":{},"383":{},"400":{}},"component":{}}],["significantli",{"_index":184,"title":{},"name":{},"text":{"1":{},"2":{},"9":{},"52":{},"81":{},"287":{},"289":{},"376":{},"397":{},"405":{},"519":{}},"component":{}}],["silent",{"_index":5424,"title":{},"name":{},"text":{"264":{},"312":{}},"component":{}}],["simba",{"_index":3212,"title":{"117-1":{},"117-2":{}},"name":{},"text":{"117":{}},"component":{}}],["similar",{"_index":480,"title":{},"name":{},"text":{"5":{},"7":{},"16":{},"24":{},"25":{},"36":{},"38":{},"41":{},"52":{},"53":{},"54":{},"55":{},"56":{},"78":{},"82":{},"83":{},"92":{},"103":{},"104":{},"105":{},"160":{},"161":{},"163":{},"164":{},"202":{},"205":{},"223":{},"225":{},"237":{},"248":{},"291":{},"309":{},"431":{},"505":{},"543":{}},"component":{}}],["similitud",{"_index":4170,"title":{},"name":{},"text":{"205":{}},"component":{}}],["simpl",{"_index":436,"title":{"345":{},"490":{},"433-6":{}},"name":{"345":{}},"text":{"5":{},"9":{},"20":{},"41":{},"43":{},"53":{},"54":{},"55":{},"56":{},"57":{},"78":{},"81":{},"84":{},"86":{},"97":{},"103":{},"160":{},"161":{},"163":{},"175":{},"235":{},"247":{},"263":{},"274":{},"295":{},"297":{},"317":{},"337":{},"344":{},"345":{},"375":{},"393":{},"433":{},"490":{},"514":{},"520":{},"525":{},"528":{},"529":{}},"component":{}}],["simple.hpl",{"_index":6374,"title":{},"name":{},"text":{"433":{}},"component":{}}],["simple.pi",{"_index":2588,"title":{},"name":{},"text":{"56":{}},"component":{}}],["simpledateformat",{"_index":5532,"title":{},"name":{},"text":{"273":{}},"component":{}}],["simpleev",{"_index":6580,"title":{},"name":{"490":{}},"text":{},"component":{}}],["simpler",{"_index":952,"title":{},"name":{},"text":{"7":{},"159":{},"166":{},"433":{}},"component":{}}],["simpli",{"_index":623,"title":{},"name":{},"text":{"7":{},"9":{},"30":{},"43":{},"75":{},"97":{},"98":{},"99":{},"101":{},"162":{},"163":{},"176":{},"180":{},"184":{},"204":{},"232":{},"247":{},"294":{},"305":{},"309":{},"359":{},"373":{},"378":{},"388":{},"397":{},"427":{},"432":{},"433":{},"441":{},"527":{},"528":{},"529":{},"531":{},"532":{},"533":{},"541":{},"544":{}},"component":{}}],["simplic",{"_index":3501,"title":{},"name":{},"text":{"158":{}},"component":{}}],["simplif",{"_index":2307,"title":{},"name":{},"text":{"50":{}},"component":{}}],["simplifi",{"_index":3779,"title":{"536-5":{}},"name":{},"text":{"163":{},"247":{},"532":{}},"component":{}}],["simul",{"_index":2935,"title":{},"name":{},"text":{"83":{},"312":{},"468":{}},"component":{}}],["simultan",{"_index":816,"title":{},"name":{},"text":{"7":{},"84":{},"91":{},"222":{},"292":{}},"component":{}}],["sin",{"_index":4708,"title":{"247-130":{}},"name":{},"text":{"247":{}},"component":{}}],["sin(10",{"_index":5078,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sine",{"_index":5076,"title":{},"name":{},"text":{"247":{}},"component":{}}],["singl",{"_index":246,"title":{"160-2":{},"161-3":{}},"name":{},"text":{"2":{},"7":{},"9":{},"24":{},"27":{},"29":{},"37":{},"50":{},"52":{},"53":{},"54":{},"78":{},"82":{},"83":{},"103":{},"152":{},"154":{},"157":{},"160":{},"161":{},"163":{},"164":{},"173":{},"174":{},"175":{},"177":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"206":{},"212":{},"214":{},"215":{},"217":{},"218":{},"220":{},"221":{},"222":{},"224":{},"225":{},"226":{},"228":{},"230":{},"233":{},"234":{},"236":{},"237":{},"238":{},"239":{},"241":{},"242":{},"243":{},"247":{},"248":{},"250":{},"251":{},"254":{},"256":{},"263":{},"268":{},"269":{},"270":{},"272":{},"274":{},"275":{},"277":{},"278":{},"280":{},"283":{},"287":{},"291":{},"292":{},"298":{},"299":{},"302":{},"304":{},"305":{},"313":{},"314":{},"318":{},"320":{},"321":{},"322":{},"323":{},"328":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"342":{},"343":{},"344":{},"346":{},"347":{},"348":{},"349":{},"352":{},"355":{},"362":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"374":{},"375":{},"377":{},"380":{},"382":{},"383":{},"395":{},"429":{},"433":{},"434":{},"435":{},"438":{},"439":{},"440":{},"449":{},"451":{},"453":{},"454":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"466":{},"477":{},"478":{},"479":{},"481":{},"487":{},"488":{},"493":{},"500":{},"506":{},"507":{},"508":{},"527":{},"541":{},"542":{},"544":{}},"component":{}}],["single_beam",{"_index":3773,"title":{},"name":{},"text":{"163":{}},"component":{}}],["singleton",{"_index":7207,"title":{},"name":{},"text":{"542":{}},"component":{}}],["singletonutil",{"_index":7221,"title":{},"name":{},"text":{"542":{}},"component":{}}],["singletonutil.getsessioninst",{"_index":7224,"title":{},"name":{},"text":{"542":{}},"component":{}}],["sinh",{"_index":4709,"title":{"247-131":{}},"name":{},"text":{},"component":{}}],["sinh(numb",{"_index":5081,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sink",{"_index":3862,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["site",{"_index":3270,"title":{},"name":{},"text":{"130":{},"275":{},"276":{},"465":{}},"component":{}}],["situat",{"_index":1099,"title":{},"name":{},"text":{"9":{},"52":{},"172":{},"227":{},"243":{},"375":{},"433":{}},"component":{}}],["six",{"_index":2992,"title":{},"name":{},"text":{"87":{},"248":{}},"component":{}}],["sixth",{"_index":3933,"title":{},"name":{},"text":{"172":{}},"component":{}}],["size",{"_index":547,"title":{"9-6":{},"97-5":{},"154-9":{},"259-8":{}},"name":{"397":{}},"text":{"5":{},"7":{},"8":{},"9":{},"27":{},"29":{},"52":{},"53":{},"54":{},"61":{},"62":{},"80":{},"94":{},"97":{},"98":{},"147":{},"152":{},"154":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"173":{},"178":{},"186":{},"187":{},"202":{},"203":{},"205":{},"207":{},"208":{},"216":{},"220":{},"222":{},"225":{},"227":{},"228":{},"232":{},"234":{},"235":{},"247":{},"251":{},"256":{},"259":{},"268":{},"272":{},"273":{},"275":{},"277":{},"279":{},"280":{},"289":{},"292":{},"297":{},"298":{},"299":{},"303":{},"305":{},"318":{},"329":{},"330":{},"332":{},"333":{},"334":{},"339":{},"347":{},"352":{},"353":{},"360":{},"363":{},"364":{},"366":{},"371":{},"381":{},"398":{},"421":{},"454":{},"460":{},"470":{},"492":{},"500":{},"525":{},"530":{},"535":{}},"component":{}}],["sj",{"_index":3404,"title":{},"name":{},"text":{"152":{}},"component":{}}],["skeleton",{"_index":6943,"title":{"530-7":{}},"name":{},"text":{"530":{},"534":{}},"component":{}}],["sketch",{"_index":6357,"title":{},"name":{},"text":{"433":{}},"component":{}}],["skip",{"_index":2202,"title":{},"name":{},"text":{"46":{},"234":{},"250":{},"273":{},"298":{},"313":{},"346":{},"366":{},"371":{},"381":{},"388":{},"461":{},"463":{},"499":{},"533":{}},"component":{}}],["skip_footer_lin",{"_index":4613,"title":{},"name":{},"text":{"243":{}},"component":{}}],["skip_header_lin",{"_index":4612,"title":{},"name":{},"text":{"243":{}},"component":{}}],["skip_pipelin",{"_index":5471,"title":{},"name":{},"text":{"270":{},"337":{}},"component":{}}],["slackemoji",{"_index":4572,"title":{},"name":{},"text":{"241":{}},"component":{}}],["slash",{"_index":5968,"title":{},"name":{},"text":{"338":{},"499":{}},"component":{}}],["slave",{"_index":2224,"title":{"532-10":{}},"name":{},"text":{"46":{},"161":{},"220":{}},"component":{}}],["slaveserv",{"_index":7010,"title":{},"name":{},"text":{"532":{}},"component":{}}],["sleep",{"_index":6606,"title":{},"name":{},"text":{"500":{}},"component":{}}],["slide",{"_index":4071,"title":{"202-6":{}},"name":{},"text":{"202":{}},"component":{}}],["slightli",{"_index":2384,"title":{},"name":{},"text":{"52":{},"154":{},"287":{}},"component":{}}],["slow",{"_index":193,"title":{},"name":{},"text":{"1":{},"9":{},"216":{},"222":{},"224":{},"372":{},"381":{},"396":{},"397":{},"405":{}},"component":{}}],["slower",{"_index":4317,"title":{},"name":{},"text":{"227":{},"270":{},"364":{},"381":{},"460":{}},"component":{}}],["slowest",{"_index":1153,"title":{},"name":{},"text":{"9":{},"396":{}},"component":{}}],["slowli",{"_index":1439,"title":{},"name":{},"text":{"20":{},"52":{},"227":{}},"component":{}}],["small",{"_index":1427,"title":{},"name":{},"text":{"20":{},"30":{},"57":{},"84":{},"97":{},"98":{},"99":{},"101":{},"105":{},"158":{},"247":{},"437":{},"454":{},"473":{},"492":{},"514":{},"530":{},"535":{},"542":{}},"component":{}}],["smaller",{"_index":263,"title":{},"name":{},"text":{"2":{},"154":{},"208":{},"247":{},"346":{},"454":{},"455":{},"464":{},"503":{}},"component":{}}],["smallest",{"_index":4118,"title":{},"name":{},"text":{"205":{}},"component":{}}],["smart",{"_index":4287,"title":{"528-8":{}},"name":{},"text":{"222":{}},"component":{}}],["smooth",{"_index":559,"title":{},"name":{},"text":{"5":{},"519":{}},"component":{}}],["smtp",{"_index":5590,"title":{},"name":{},"text":{"280":{},"466":{},"467":{}},"component":{}}],["snappi",{"_index":5770,"title":{},"name":{},"text":{"305":{}},"component":{}}],["snapshot",{"_index":922,"title":{},"name":{},"text":{"7":{},"50":{},"78":{},"202":{},"514":{},"538":{}},"component":{}}],["sniff",{"_index":1535,"title":{"42-15":{}},"name":{},"text":{"24":{},"42":{},"78":{}},"component":{}}],["snifftransform",{"_index":2158,"title":{},"name":{},"text":{"42":{}},"component":{}}],["snippet",{"_index":5358,"title":{},"name":{},"text":{"250":{},"273":{},"372":{},"542":{}},"component":{}}],["snippit",{"_index":6197,"title":{},"name":{},"text":{"372":{}},"component":{}}],["snmp",{"_index":6584,"title":{"491":{}},"name":{},"text":{"491":{}},"component":{}}],["snmptrap",{"_index":6586,"title":{},"name":{"491":{}},"text":{},"component":{}}],["snowflak",{"_index":2902,"title":{"138":{},"346":{},"492":{}},"name":{"138":{},"492":{}},"text":{"81":{},"346":{},"492":{}},"component":{}}],["snowflake_debug_mod",{"_index":5984,"title":{},"name":{},"text":{"346":{}},"component":{}}],["snowflakebulkload",{"_index":5980,"title":{},"name":{"346":{}},"text":{},"component":{}}],["snowpoint",{"_index":4428,"title":{},"name":{},"text":{"241":{}},"component":{}}],["soap",{"_index":5416,"title":{"263-6":{}},"name":{},"text":{"263":{},"465":{}},"component":{}}],["sock",{"_index":6476,"title":{"461-6":{},"462-5":{},"463-5":{}},"name":{},"text":{"461":{},"462":{},"463":{}},"component":{}}],["socket",{"_index":1929,"title":{},"name":{},"text":{"41":{},"65":{},"153":{},"208":{},"263":{},"264":{},"467":{}},"component":{}}],["socks5",{"_index":6573,"title":{},"name":{},"text":{"488":{}},"component":{}}],["socksnonproxyhostslocal|*.local|169.254/16|*.169.254/16",{"_index":2120,"title":{},"name":{},"text":{"42":{}},"component":{}}],["softwar",{"_index":402,"title":{"163-4":{}},"name":{},"text":{"4":{},"41":{},"50":{},"152":{},"163":{},"196":{},"197":{},"275":{},"276":{},"336":{},"428":{},"519":{},"527":{},"528":{},"531":{},"533":{},"534":{},"540":{},"546":{}},"component":{}}],["solut",{"_index":380,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"84":{},"91":{},"105":{},"163":{},"270":{},"287":{},"389":{}},"component":{}}],["solv",{"_index":1424,"title":{},"name":{},"text":{"20":{},"163":{},"179":{},"363":{},"375":{}},"component":{}}],["somefile.txt",{"_index":4618,"title":{},"name":{},"text":{"244":{},"251":{}},"component":{}}],["someon",{"_index":7053,"title":{},"name":{},"text":{"533":{}},"component":{}}],["somestring,someint.0",{"_index":2025,"title":{},"name":{},"text":{"41":{}},"component":{}}],["someth",{"_index":1694,"title":{},"name":{},"text":{"36":{},"38":{},"41":{},"101":{},"227":{},"251":{},"453":{},"514":{},"522":{},"524":{},"527":{},"529":{},"533":{},"544":{}},"component":{}}],["sometim",{"_index":3763,"title":{},"name":{},"text":{"163":{},"205":{},"232":{},"297":{},"322":{},"349":{},"388":{},"433":{}},"component":{}}],["somevalu",{"_index":760,"title":{},"name":{},"text":{"7":{}},"component":{}}],["somewher",{"_index":4191,"title":{},"name":{},"text":{"205":{},"275":{},"523":{},"535":{}},"component":{}}],["soon",{"_index":1278,"title":{},"name":{},"text":{"15":{},"16":{},"50":{},"53":{},"172":{},"235":{},"251":{},"376":{},"457":{},"492":{}},"component":{}}],["sootopoli",{"_index":4431,"title":{},"name":{},"text":{"241":{}},"component":{}}],["sophist",{"_index":6067,"title":{},"name":{},"text":{"366":{}},"component":{}}],["soql",{"_index":5925,"title":{},"name":{},"text":{"331":{}},"component":{}}],["sori",{"_index":1194,"title":{},"name":{},"text":{"10":{}},"component":{}}],["sorri",{"_index":3482,"title":{},"name":{},"text":{"157":{}},"component":{}}],["sort",{"_index":205,"title":{"347":{},"348":{}},"name":{"347":{}},"text":{"1":{},"9":{},"29":{},"30":{},"52":{},"68":{},"81":{},"83":{},"86":{},"163":{},"169":{},"179":{},"180":{},"227":{},"233":{},"259":{},"262":{},"277":{},"283":{},"284":{},"291":{},"295":{},"347":{},"348":{},"355":{},"369":{},"370":{},"372":{},"398":{},"405":{},"533":{},"537":{},"544":{}},"component":{}}],["sortedmerg",{"_index":5988,"title":{},"name":{"348":{}},"text":{},"component":{}}],["sound",{"_index":4496,"title":{},"name":{},"text":{"241":{},"248":{}},"component":{}}],["soundex",{"_index":4174,"title":{},"name":{},"text":{"205":{},"248":{}},"component":{}}],["sourc",{"_index":291,"title":{"528-2":{},"540-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"15":{},"19":{},"20":{},"48":{},"50":{},"52":{},"68":{},"76":{},"77":{},"78":{},"81":{},"82":{},"83":{},"84":{},"160":{},"163":{},"167":{},"170":{},"182":{},"185":{},"191":{},"205":{},"209":{},"216":{},"221":{},"225":{},"227":{},"230":{},"232":{},"247":{},"250":{},"262":{},"268":{},"270":{},"273":{},"275":{},"276":{},"285":{},"287":{},"289":{},"297":{},"298":{},"308":{},"311":{},"312":{},"324":{},"325":{},"338":{},"355":{},"358":{},"360":{},"364":{},"366":{},"371":{},"373":{},"375":{},"376":{},"381":{},"382":{},"383":{},"384":{},"386":{},"387":{},"429":{},"432":{},"441":{},"442":{},"454":{},"457":{},"464":{},"468":{},"470":{},"472":{},"477":{},"478":{},"488":{},"490":{},"499":{},"508":{},"509":{},"511":{},"514":{},"519":{},"520":{},"522":{},"523":{},"525":{},"528":{},"531":{},"533":{},"534":{},"537":{},"538":{},"540":{},"542":{},"543":{}},"component":{}}],["source/destin",{"_index":6390,"title":{},"name":{},"text":{"435":{},"450":{},"468":{},"506":{}},"component":{}}],["source/target",{"_index":6232,"title":{},"name":{},"text":{"375":{}},"component":{}}],["source_url",{"_index":3688,"title":{},"name":{},"text":{"162":{}},"component":{}}],["source_vers",{"_index":7099,"title":{},"name":{},"text":{"537":{}},"component":{}}],["sourcepipelinenam",{"_index":2785,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["sourcetransformcopi",{"_index":2788,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["sourcetransformlogchannelid",{"_index":2786,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["sourcetransformnam",{"_index":2787,"title":{},"name":{},"text":{"76":{},"308":{}},"component":{}}],["sp",{"_index":3405,"title":{},"name":{},"text":{"152":{}},"component":{}}],["space",{"_index":716,"title":{"38-6":{},"152-4":{},"270-15":{}},"name":{"420":{}},"text":{"7":{},"36":{},"38":{},"94":{},"152":{},"157":{},"222":{},"241":{},"247":{},"256":{},"258":{},"269":{},"270":{},"280":{},"294":{},"358":{},"367":{},"373":{},"381":{},"382":{},"420":{},"437":{},"466":{},"467":{},"531":{}},"component":{}}],["spaces\",key2=value2",{"_index":1869,"title":{},"name":{},"text":{"38":{},"152":{}},"component":{}}],["span",{"_index":4077,"title":{},"name":{},"text":{"202":{},"298":{},"429":{}},"component":{}}],["spare",{"_index":6859,"title":{},"name":{},"text":{"527":{},"531":{},"546":{}},"component":{}}],["spark",{"_index":323,"title":{"161":{},"168":{},"161-2":{},"161-3":{},"161-4":{},"164-5":{},"164-6":{},"168-1":{},"168-5":{},"168-6":{}},"name":{"161":{},"168":{}},"text":{"2":{},"4":{},"7":{},"20":{},"69":{},"87":{},"88":{},"159":{},"160":{},"161":{},"163":{},"164":{},"168":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"518":{},"519":{}},"component":{}}],["spark.driv",{"_index":3630,"title":{},"name":{},"text":{"161":{}},"component":{}}],["spark.json",{"_index":3090,"title":{},"name":{},"text":{"92":{}},"component":{}}],["spark://.localdomain:7077",{"_index":3586,"title":{},"name":{},"text":{"161":{}},"component":{}}],["spark://host:port",{"_index":3887,"title":{},"name":{},"text":{"168":{}},"component":{}}],["spark://localhost.localdomain:7077",{"_index":3592,"title":{},"name":{},"text":{"161":{}},"component":{}}],["spark://mast",{"_index":3900,"title":{},"name":{},"text":{"168":{}},"component":{}}],["spark:th",{"_index":3787,"title":{},"name":{},"text":{"164":{}},"component":{}}],["spark_local_ip",{"_index":3605,"title":{},"name":{},"text":{"161":{},"168":{}},"component":{}}],["spark_local_ip=\"127.0.0.1",{"_index":3905,"title":{},"name":{},"text":{"168":{}},"component":{}}],["sparkconf#setmaster(str",{"_index":3885,"title":{},"name":{},"text":{"168":{}},"component":{}}],["sparkcontext",{"_index":3625,"title":{},"name":{},"text":{"161":{}},"component":{}}],["sparkcontextfactori",{"_index":3623,"title":{},"name":{},"text":{"161":{}},"component":{}}],["sparkdriv",{"_index":3904,"title":{},"name":{},"text":{"168":{}},"component":{}}],["sparkrunconfig",{"_index":3903,"title":{},"name":{},"text":{"168":{}},"component":{}}],["sparkrunn",{"_index":3621,"title":{},"name":{},"text":{"161":{}},"component":{}}],["spark’",{"_index":3883,"title":{},"name":{},"text":{"168":{}},"component":{}}],["spars",{"_index":5695,"title":{},"name":{},"text":{"292":{}},"component":{}}],["spatial",{"_index":3022,"title":{},"name":{},"text":{"87":{}},"component":{}}],["spec",{"_index":3674,"title":{},"name":{},"text":{"162":{}},"component":{}}],["spec.job",{"_index":3702,"title":{},"name":{},"text":{"162":{}},"component":{}}],["specfiy",{"_index":6498,"title":{},"name":{},"text":{"464":{}},"component":{}}],["speci",{"_index":4579,"title":{},"name":{},"text":{"241":{}},"component":{}}],["special",{"_index":729,"title":{"246-6":{},"246-8":{},"527-6":{}},"name":{},"text":{"7":{},"94":{},"158":{},"163":{},"167":{},"220":{},"227":{},"234":{},"237":{},"238":{},"246":{},"267":{},"270":{},"337":{},"349":{},"350":{},"358":{},"366":{},"382":{},"426":{},"461":{},"463":{},"481":{},"503":{}},"component":{}}],["specif",{"_index":65,"title":{"62-3":{},"163-6":{}},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"11":{},"13":{},"19":{},"26":{},"27":{},"38":{},"41":{},"50":{},"56":{},"62":{},"70":{},"71":{},"75":{},"78":{},"81":{},"82":{},"83":{},"91":{},"93":{},"96":{},"97":{},"103":{},"107":{},"130":{},"151":{},"157":{},"163":{},"165":{},"177":{},"180":{},"185":{},"186":{},"205":{},"215":{},"220":{},"221":{},"222":{},"223":{},"227":{},"241":{},"247":{},"248":{},"250":{},"256":{},"264":{},"266":{},"271":{},"275":{},"291":{},"297":{},"303":{},"305":{},"366":{},"377":{},"380":{},"381":{},"384":{},"389":{},"395":{},"398":{},"416":{},"418":{},"428":{},"430":{},"441":{},"470":{},"483":{},"489":{},"494":{},"505":{},"506":{},"509":{},"510":{},"511":{},"527":{},"532":{},"533":{}},"component":{}}],["specifi",{"_index":62,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"11":{},"13":{},"19":{},"22":{},"24":{},"25":{},"27":{},"29":{},"32":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"46":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"65":{},"68":{},"71":{},"75":{},"76":{},"78":{},"79":{},"80":{},"82":{},"83":{},"90":{},"99":{},"101":{},"103":{},"106":{},"107":{},"114":{},"150":{},"151":{},"152":{},"153":{},"154":{},"157":{},"158":{},"159":{},"162":{},"163":{},"165":{},"167":{},"168":{},"169":{},"170":{},"171":{},"173":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"182":{},"183":{},"184":{},"185":{},"186":{},"196":{},"198":{},"202":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"214":{},"215":{},"216":{},"217":{},"220":{},"221":{},"222":{},"223":{},"225":{},"227":{},"230":{},"232":{},"233":{},"234":{},"235":{},"237":{},"238":{},"239":{},"243":{},"246":{},"247":{},"248":{},"250":{},"251":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"267":{},"268":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"280":{},"285":{},"286":{},"287":{},"289":{},"290":{},"291":{},"292":{},"294":{},"297":{},"298":{},"299":{},"301":{},"302":{},"303":{},"304":{},"305":{},"309":{},"313":{},"314":{},"315":{},"316":{},"319":{},"320":{},"322":{},"326":{},"327":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"341":{},"342":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"352":{},"355":{},"359":{},"360":{},"361":{},"363":{},"364":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"374":{},"376":{},"377":{},"378":{},"380":{},"381":{},"383":{},"384":{},"387":{},"388":{},"389":{},"395":{},"400":{},"401":{},"402":{},"415":{},"418":{},"427":{},"431":{},"435":{},"437":{},"438":{},"439":{},"441":{},"442":{},"444":{},"445":{},"448":{},"450":{},"451":{},"455":{},"457":{},"458":{},"460":{},"461":{},"464":{},"465":{},"466":{},"467":{},"468":{},"474":{},"476":{},"477":{},"478":{},"481":{},"483":{},"485":{},"487":{},"488":{},"489":{},"494":{},"496":{},"498":{},"499":{},"500":{},"502":{},"503":{},"505":{},"506":{},"509":{},"511":{},"514":{},"520":{},"529":{},"530":{},"532":{},"543":{},"544":{}},"component":{}}],["spectacular",{"_index":2823,"title":{},"name":{},"text":{"78":{}},"component":{}}],["speed",{"_index":197,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"52":{},"83":{},"85":{},"205":{},"216":{},"227":{},"228":{},"250":{},"289":{},"347":{},"396":{},"405":{},"433":{},"460":{},"509":{},"532":{}},"component":{}}],["spend",{"_index":1602,"title":{},"name":{},"text":{"26":{},"28":{},"49":{},"275":{},"309":{},"378":{},"533":{}},"component":{}}],["spice",{"_index":4512,"title":{},"name":{},"text":{"241":{}},"component":{}}],["spin",{"_index":6695,"title":{},"name":{},"text":{"514":{}},"component":{}}],["split",{"_index":915,"title":{"300":{},"349":{},"350":{}},"name":{"300":{}},"text":{"7":{},"9":{},"27":{},"66":{},"81":{},"82":{},"86":{},"163":{},"194":{},"208":{},"220":{},"223":{},"228":{},"233":{},"238":{},"292":{},"300":{},"305":{},"316":{},"346":{},"349":{},"350":{},"352":{},"364":{},"367":{},"368":{},"383":{},"397":{},"432":{},"433":{}},"component":{}}],["splitfield",{"_index":5989,"title":{},"name":{"349":{}},"text":{},"component":{}}],["splitfieldtorow",{"_index":6000,"title":{},"name":{"350":{}},"text":{},"component":{}}],["splunk",{"_index":1518,"title":{"72":{},"351":{}},"name":{"72":{}},"text":{"24":{},"64":{},"72":{},"81":{},"86":{},"92":{},"351":{}},"component":{}}],["splunkinput",{"_index":6002,"title":{},"name":{"351":{}},"text":{},"component":{}}],["spoken",{"_index":6866,"title":{},"name":{},"text":{"528":{}},"component":{}}],["spool",{"_index":4079,"title":{},"name":{},"text":{"203":{},"272":{}},"component":{}}],["spoon",{"_index":4378,"title":{},"name":{},"text":{"234":{},"338":{},"367":{},"518":{},"519":{},"542":{}},"component":{}}],["spoon.class",{"_index":7225,"title":{},"name":{},"text":{"542":{}},"component":{}}],["spoon.getdisplay",{"_index":7235,"title":{},"name":{},"text":{"542":{}},"component":{}}],["spoon.getinst",{"_index":7223,"title":{},"name":{},"text":{"542":{}},"component":{}}],["spoon.getinstance().getdisplay",{"_index":7244,"title":{},"name":{},"text":{"542":{}},"component":{}}],["spoon’",{"_index":7208,"title":{},"name":{},"text":{"542":{}},"component":{}}],["sport",{"_index":4585,"title":{},"name":{},"text":{"241":{}},"component":{}}],["spread",{"_index":4370,"title":{},"name":{},"text":{"234":{}},"component":{}}],["spreadsheet",{"_index":4291,"title":{"260-5":{},"261-5":{}},"name":{},"text":{"223":{},"234":{},"247":{},"260":{},"261":{},"366":{},"367":{}},"component":{}}],["sql",{"_index":2350,"title":{"230":{},"238":{},"239":{},"352":{},"470":{},"493":{},"501":{},"130-3":{},"130-4":{}},"name":{"493":{}},"text":{"52":{},"53":{},"54":{},"71":{},"81":{},"84":{},"86":{},"105":{},"114":{},"130":{},"205":{},"206":{},"216":{},"221":{},"222":{},"227":{},"230":{},"238":{},"239":{},"246":{},"257":{},"268":{},"289":{},"291":{},"322":{},"331":{},"352":{},"358":{},"360":{},"363":{},"364":{},"371":{},"455":{},"470":{},"493":{},"498":{},"501":{}},"component":{}}],["sql*loader",{"_index":5750,"title":{},"name":{},"text":{"303":{}},"component":{}}],["sql*loader''",{"_index":5757,"title":{},"name":{},"text":{"303":{}},"component":{}}],["sqlbase",{"_index":3335,"title":{"139":{}},"name":{"139":{}},"text":{},"component":{}}],["sqldr",{"_index":5751,"title":{},"name":{},"text":{"303":{}},"component":{}}],["sqlfileoutput",{"_index":6003,"title":{},"name":{"352":{}},"text":{},"component":{}}],["sqli://hostname:1533/databasenam",{"_index":3248,"title":{},"name":{},"text":{"122":{}},"component":{}}],["sqlite",{"_index":3337,"title":{"140":{}},"name":{"140":{}},"text":{},"component":{}}],["sqljdbc_11.2\\enu\\auth\\x64",{"_index":3271,"title":{},"name":{},"text":{"130":{}},"component":{}}],["sqljdbc_11.2\\enu\\auth\\x64\\mssql",{"_index":3277,"title":{},"name":{},"text":{"130":{}},"component":{}}],["sqljdbc_11.2\\enu\\auth\\x86",{"_index":3273,"title":{},"name":{},"text":{"130":{}},"component":{}}],["sqljdbc_11.2\\enu\\mssql",{"_index":3284,"title":{},"name":{},"text":{"130":{}},"component":{}}],["sqlldr",{"_index":5752,"title":{},"name":{},"text":{"303":{}},"component":{}}],["sqlserver",{"_index":3261,"title":{"129":{},"130":{}},"name":{},"text":{"130":{}},"component":{}}],["sqrt",{"_index":4087,"title":{"247-132":{}},"name":{},"text":{"205":{},"247":{}},"component":{}}],["sqrt(4",{"_index":5085,"title":{},"name":{},"text":{"247":{}},"component":{}}],["squar",{"_index":4086,"title":{},"name":{},"text":{"205":{},"247":{},"273":{}},"component":{}}],["src.tar.gz",{"_index":7104,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["src.tar.gz.asc",{"_index":7090,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["src.tar.gz.sha512",{"_index":7088,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["src/assembly/assembly.xml",{"_index":6967,"title":{},"name":{},"text":{"530":{}},"component":{}}],["src/main",{"_index":6968,"title":{},"name":{},"text":{"531":{}},"component":{}}],["src/main/java/org/apache/hop/p1/foo.java",{"_index":6869,"title":{},"name":{},"text":{"528":{}},"component":{}}],["src/main/resources/org/apache/hop/p1/messag",{"_index":6874,"title":{},"name":{},"text":{"528":{}},"component":{}}],["src/main/resources/org/apache/hop/p1/messages/messages_en_us.properti",{"_index":6876,"title":{},"name":{},"text":{"528":{}},"component":{}}],["srckeystor",{"_index":1957,"title":{},"name":{},"text":{"41":{}},"component":{}}],["srcstoretyp",{"_index":1958,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ssd",{"_index":3814,"title":{},"name":{},"text":{"165":{},"298":{}},"component":{}}],["ssh",{"_index":1065,"title":{"326":{}},"name":{},"text":{"8":{},"39":{},"81":{},"86":{},"326":{},"462":{}},"component":{}}],["ssl",{"_index":1006,"title":{"41-5":{},"319-7":{}},"name":{},"text":{"8":{},"41":{},"50":{},"65":{},"154":{},"232":{},"278":{},"280":{},"319":{},"462":{},"464":{},"466":{},"514":{}},"component":{}}],["ssl.key.password",{"_index":5560,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["ssl.keystore.loc",{"_index":5561,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["ssl.keystore.password",{"_index":5562,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["ssl.truststore.loc",{"_index":5563,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["ssl.truststore.password",{"_index":5564,"title":{},"name":{},"text":{"275":{},"276":{}},"component":{}}],["sslconfig",{"_index":1934,"title":{},"name":{},"text":{"41":{}},"component":{}}],["ssnvalid",{"_index":4532,"title":{},"name":{},"text":{"241":{}},"component":{}}],["sstabl",{"_index":2903,"title":{"353":{}},"name":{"353":{}},"text":{"81":{},"86":{},"353":{},"429":{}},"component":{}}],["stabil",{"_index":2860,"title":{},"name":{},"text":{"81":{}},"component":{}}],["stack",{"_index":950,"title":{},"name":{},"text":{"7":{},"8":{},"50":{},"96":{},"168":{},"196":{},"197":{},"275":{},"276":{},"430":{}},"component":{}}],["stackdriv",{"_index":3799,"title":{},"name":{},"text":{"165":{}},"component":{}}],["stacktrac",{"_index":2971,"title":{},"name":{},"text":{"85":{}},"component":{}}],["stage",{"_index":1498,"title":{"538-10":{}},"name":{},"text":{"23":{},"30":{},"158":{},"162":{},"165":{},"166":{},"167":{},"168":{},"277":{},"346":{},"496":{},"540":{}},"component":{}}],["stale",{"_index":1403,"title":{},"name":{},"text":{"19":{},"41":{},"186":{}},"component":{}}],["stand",{"_index":6834,"title":{},"name":{},"text":{"527":{}},"component":{}}],["standalon",{"_index":2552,"title":{},"name":{},"text":{"56":{},"168":{},"543":{}},"component":{}}],["standalonesess",{"_index":3538,"title":{},"name":{},"text":{"160":{}},"component":{}}],["standard",{"_index":808,"title":{"354":{},"9-5":{},"395-3":{},"531-4":{},"531-5":{}},"name":{},"text":{"7":{},"8":{},"9":{},"37":{},"41":{},"50":{},"75":{},"81":{},"86":{},"90":{},"91":{},"100":{},"150":{},"152":{},"157":{},"162":{},"163":{},"203":{},"205":{},"221":{},"231":{},"232":{},"262":{},"264":{},"297":{},"316":{},"337":{},"345":{},"347":{},"354":{},"366":{},"387":{},"389":{},"395":{},"400":{},"470":{},"471":{},"492":{},"509":{},"518":{},"528":{},"532":{},"541":{}},"component":{}}],["standardizephonenumb",{"_index":6006,"title":{},"name":{"354":{}},"text":{},"component":{}}],["standardparentproject",{"_index":3035,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{},"543":{}},"component":{}}],["standardprojectsfold",{"_index":3036,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{}},"component":{}}],["starcraft",{"_index":4577,"title":{},"name":{},"text":{"241":{}},"component":{}}],["start",{"_index":389,"title":{"163":{},"494":{},"515":{},"525":{},"17-1":{},"21-1":{},"25-2":{},"41-1":{},"41-3":{},"41-4":{},"41-7":{},"42-16":{},"42-17":{},"42-18":{},"50-7":{},"160-2":{},"161-3":{},"534-1":{},"543-6":{}},"name":{"163":{},"494":{},"515":{},"525":{},"534":{}},"text":{"4":{},"5":{},"7":{},"9":{},"11":{},"14":{},"15":{},"16":{},"17":{},"19":{},"25":{},"27":{},"28":{},"29":{},"30":{},"37":{},"38":{},"41":{},"42":{},"44":{},"45":{},"47":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"67":{},"73":{},"74":{},"76":{},"78":{},"80":{},"82":{},"84":{},"85":{},"90":{},"91":{},"96":{},"103":{},"105":{},"130":{},"133":{},"150":{},"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"168":{},"170":{},"171":{},"176":{},"177":{},"186":{},"202":{},"204":{},"227":{},"232":{},"233":{},"234":{},"235":{},"237":{},"247":{},"256":{},"258":{},"259":{},"270":{},"273":{},"274":{},"275":{},"278":{},"291":{},"296":{},"298":{},"303":{},"305":{},"309":{},"310":{},"313":{},"316":{},"320":{},"330":{},"331":{},"337":{},"347":{},"352":{},"366":{},"367":{},"368":{},"372":{},"374":{},"378":{},"379":{},"381":{},"383":{},"389":{},"397":{},"431":{},"433":{},"457":{},"461":{},"464":{},"466":{},"470":{},"472":{},"481":{},"485":{},"489":{},"490":{},"492":{},"494":{},"500":{},"512":{},"513":{},"514":{},"517":{},"519":{},"520":{},"521":{},"526":{},"527":{},"528":{},"529":{},"530":{},"531":{},"533":{},"534":{},"537":{},"538":{},"543":{},"544":{}},"component":{}}],["start=100000",{"_index":5954,"title":{},"name":{},"text":{"337":{}},"component":{}}],["start=int(start",{"_index":5243,"title":{},"name":{},"text":{"247":{}},"component":{}}],["start_",{"_index":6262,"title":{},"name":{},"text":{"381":{}},"component":{}}],["start_dag",{"_index":2580,"title":{},"name":{},"text":{"56":{}},"component":{}}],["start_dat",{"_index":2568,"title":{},"name":{},"text":{"56":{},"247":{}},"component":{}}],["start_date=20230507t135411",{"_index":2605,"title":{},"name":{},"text":{"56":{}},"component":{}}],["start_docu",{"_index":6257,"title":{},"name":{},"text":{"381":{}},"component":{}}],["start_el",{"_index":6254,"title":{},"name":{},"text":{"381":{}},"component":{}}],["start_num",{"_index":5228,"title":{},"name":{},"text":{"247":{}},"component":{}}],["startact",{"_index":1844,"title":{},"name":{},"text":{"38":{}},"component":{}}],["startbundl",{"_index":3567,"title":{},"name":{},"text":{"160":{}},"component":{}}],["startdat",{"_index":4792,"title":{},"name":{},"text":{"247":{}},"component":{}}],["startdatefield",{"_index":4729,"title":{},"name":{},"text":{"247":{}},"component":{}}],["startdummyhop",{"_index":7331,"title":{},"name":{},"text":{"544":{}},"component":{}}],["started/icons/hop.svg[cr",{"_index":2835,"title":{},"name":{},"text":{"78":{}},"component":{}}],["startexec",{"_index":2163,"title":{},"name":{},"text":{"42":{}},"component":{}}],["startmeta",{"_index":7321,"title":{},"name":{},"text":{"544":{}},"component":{}}],["startmeta.setlocation(50",{"_index":7323,"title":{},"name":{},"text":{"544":{}},"component":{}}],["startofpipelinedelta",{"_index":5711,"title":{},"name":{},"text":{"296":{}},"component":{}}],["startofworkflowdelta",{"_index":5713,"title":{},"name":{},"text":{"296":{}},"component":{}}],["startpipelin",{"_index":2171,"title":{},"name":{},"text":{"42":{}},"component":{}}],["startpipelineservlet",{"_index":6804,"title":{},"name":{},"text":{"525":{}},"component":{}}],["startposit",{"_index":5284,"title":{},"name":{},"text":{"247":{}},"component":{}}],["startrek",{"_index":4578,"title":{},"name":{},"text":{"241":{}},"component":{}}],["startup",{"_index":940,"title":{"41-9":{},"543-5":{}},"name":{},"text":{"7":{},"25":{},"27":{},"41":{},"222":{}},"component":{}}],["startworkflow",{"_index":2174,"title":{},"name":{},"text":{"42":{}},"component":{}}],["stash",{"_index":7055,"title":{},"name":{},"text":{"533":{}},"component":{}}],["stat",{"_index":4419,"title":{},"name":{},"text":{"238":{},"239":{},"309":{}},"component":{}}],["state",{"_index":1670,"title":{"37-18":{}},"name":{},"text":{"30":{},"37":{},"43":{},"55":{},"81":{},"82":{},"83":{},"130":{},"151":{},"152":{},"161":{},"162":{},"167":{},"194":{},"222":{},"241":{},"264":{},"291":{},"319":{},"389":{},"492":{},"494":{},"495":{},"520":{},"532":{},"533":{}},"component":{}}],["state_input",{"_index":3506,"title":{},"name":{},"text":{"158":{}},"component":{}}],["statecod",{"_index":3174,"title":{},"name":{},"text":{"107":{},"246":{}},"component":{}}],["stateless",{"_index":3698,"title":{},"name":{},"text":{"162":{},"319":{}},"component":{}}],["statemen",{"_index":6265,"title":{},"name":{},"text":{"382":{}},"component":{}}],["statement",{"_index":2397,"title":{},"name":{},"text":{"53":{},"54":{},"71":{},"107":{},"153":{},"156":{},"207":{},"221":{},"228":{},"230":{},"238":{},"239":{},"257":{},"269":{},"289":{},"291":{},"294":{},"297":{},"299":{},"331":{},"346":{},"352":{},"359":{},"363":{},"364":{},"382":{},"433":{},"437":{},"455":{},"475":{},"493":{},"524":{}},"component":{}}],["static",{"_index":2651,"title":{"542-2":{}},"name":{},"text":{"60":{},"64":{},"66":{},"81":{},"223":{},"234":{},"250":{},"251":{},"270":{},"280":{},"299":{},"309":{},"322":{},"378":{},"433":{},"441":{},"450":{},"473":{},"475":{},"527":{},"528":{},"542":{}},"component":{}}],["staticspoon",{"_index":7219,"title":{},"name":{},"text":{"542":{}},"component":{}}],["statist",{"_index":1657,"title":{},"name":{},"text":{"29":{},"50":{},"491":{},"493":{}},"component":{}}],["statistician’",{"_index":4100,"title":{},"name":{},"text":{"205":{}},"component":{}}],["statment",{"_index":6267,"title":{},"name":{},"text":{"382":{}},"component":{}}],["statu",{"_index":94,"title":{"341":{},"40-3":{},"42-6":{}},"name":{},"text":{"1":{},"7":{},"13":{},"23":{},"29":{},"40":{},"41":{},"42":{},"43":{},"50":{},"52":{},"55":{},"58":{},"63":{},"76":{},"78":{},"81":{},"84":{},"85":{},"86":{},"103":{},"105":{},"162":{},"237":{},"240":{},"256":{},"263":{},"264":{},"310":{},"319":{},"341":{},"379":{},"403":{},"404":{},"453":{},"489":{},"514":{},"538":{}},"component":{}}],["stax",{"_index":2909,"title":{"381":{}},"name":{},"text":{"81":{},"86":{},"250":{},"381":{}},"component":{}}],["stay",{"_index":4313,"title":{},"name":{},"text":{"227":{},"299":{},"309":{},"378":{}},"component":{}}],["stderr",{"_index":947,"title":{},"name":{},"text":{"7":{},"237":{},"326":{}},"component":{}}],["stdin",{"_index":5787,"title":{},"name":{},"text":{"311":{},"367":{}},"component":{}}],["stdout",{"_index":810,"title":{},"name":{},"text":{"7":{},"237":{},"326":{}},"component":{}}],["stdround",{"_index":4112,"title":{},"name":{},"text":{"205":{}},"component":{}}],["stead",{"_index":6413,"title":{},"name":{},"text":{"450":{}},"component":{}}],["steam",{"_index":4281,"title":{},"name":{},"text":{"222":{}},"component":{}}],["steer",{"_index":5718,"title":{},"name":{},"text":{"297":{}},"component":{}}],["step",{"_index":375,"title":{"18":{},"50-3":{},"50-4":{},"50-5":{},"50-6":{},"50-7":{},"50-8":{},"53-1":{},"53-2":{},"53-3":{},"53-4":{},"53-5":{},"54-1":{},"54-2":{},"54-3":{},"54-4":{},"54-5":{},"84-3":{},"105-4":{},"158-3":{},"530-6":{},"532-6":{}},"name":{"18":{}},"text":{"2":{},"15":{},"21":{},"50":{},"78":{},"82":{},"104":{},"158":{},"164":{},"247":{},"271":{},"346":{},"400":{},"433":{},"513":{},"518":{},"519":{},"520":{},"532":{},"534":{},"537":{},"538":{},"540":{},"543":{}},"component":{}}],["stepdatainterfac",{"_index":6997,"title":{},"name":{},"text":{"532":{}},"component":{}}],["stepmeta",{"_index":6991,"title":{},"name":{},"text":{"532":{}},"component":{}}],["stepmetainterfac",{"_index":6993,"title":{},"name":{},"text":{"532":{}},"component":{}}],["stick",{"_index":6974,"title":{},"name":{},"text":{"531":{}},"component":{}}],["still",{"_index":596,"title":{},"name":{},"text":{"5":{},"7":{},"56":{},"71":{},"78":{},"84":{},"94":{},"154":{},"165":{},"169":{},"194":{},"205":{},"235":{},"247":{},"250":{},"271":{},"298":{},"319":{},"377":{},"381":{},"425":{},"489":{},"500":{},"510":{},"530":{},"537":{},"540":{}},"component":{}}],["sting",{"_index":4031,"title":{},"name":{},"text":{"196":{}},"component":{}}],["stink",{"_index":5355,"title":{},"name":{},"text":{"250":{}},"component":{}}],["stitch",{"_index":6626,"title":{},"name":{},"text":{"513":{}},"component":{}}],["stock",{"_index":4580,"title":{},"name":{},"text":{"241":{},"262":{}},"component":{}}],["stop",{"_index":909,"title":{"41-1":{},"41-8":{},"42-19":{},"42-20":{}},"name":{},"text":{"7":{},"19":{},"29":{},"41":{},"42":{},"55":{},"56":{},"80":{},"85":{},"130":{},"161":{},"198":{},"234":{},"251":{},"256":{},"273":{},"275":{},"311":{},"322":{},"337":{},"338":{},"366":{},"376":{},"380":{},"434":{},"453":{},"482":{},"483":{},"500":{},"505":{},"514":{},"542":{}},"component":{}}],["stop_pipelin",{"_index":5947,"title":{},"name":{},"text":{"337":{}},"component":{}}],["stoppipelin",{"_index":2176,"title":{},"name":{},"text":{"42":{}},"component":{}}],["stoprun",{"_index":7000,"title":{},"name":{},"text":{"532":{}},"component":{}}],["stopworkflow",{"_index":2179,"title":{},"name":{},"text":{"42":{}},"component":{}}],["storag",{"_index":153,"title":{"98":{},"100":{},"152-14":{},"152-18":{}},"name":{"98":{},"100":{},"147":{},"148":{}},"text":{"1":{},"8":{},"27":{},"50":{},"82":{},"88":{},"97":{},"98":{},"100":{},"158":{},"165":{},"186":{},"298":{},"346":{},"355":{},"406":{},"428":{},"429":{},"430":{},"513":{}},"component":{}}],["store",{"_index":160,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"8":{},"27":{},"40":{},"46":{},"50":{},"52":{},"61":{},"62":{},"64":{},"77":{},"78":{},"83":{},"90":{},"91":{},"92":{},"93":{},"94":{},"99":{},"103":{},"128":{},"151":{},"156":{},"157":{},"158":{},"162":{},"164":{},"171":{},"177":{},"178":{},"183":{},"195":{},"200":{},"203":{},"205":{},"206":{},"216":{},"222":{},"227":{},"233":{},"246":{},"262":{},"263":{},"272":{},"275":{},"277":{},"278":{},"291":{},"316":{},"325":{},"335":{},"340":{},"346":{},"347":{},"351":{},"355":{},"364":{},"370":{},"375":{},"376":{},"378":{},"383":{},"384":{},"388":{},"389":{},"400":{},"406":{},"421":{},"422":{},"429":{},"432":{},"433":{},"464":{},"465":{},"509":{},"512":{},"513":{},"518":{},"519":{},"522":{},"524":{},"529":{},"532":{},"541":{},"543":{},"544":{}},"component":{}}],["storewithnam",{"_index":6912,"title":{},"name":{},"text":{"529":{}},"component":{}}],["str2date(\"2020",{"_index":5448,"title":{},"name":{},"text":{"270":{}},"component":{}}],["straightforward",{"_index":6824,"title":{},"name":{},"text":{"527":{},"543":{}},"component":{}}],["strain",{"_index":6385,"title":{},"name":{},"text":{"433":{}},"component":{}}],["strategi",{"_index":2281,"title":{},"name":{},"text":{"50":{},"295":{}},"component":{}}],["stream",{"_index":191,"title":{"181":{},"226":{},"253":{},"265":{},"288":{},"306":{},"307":{},"355":{},"356":{},"381":{},"544-7":{},"544-14":{}},"name":{},"text":{"1":{},"2":{},"7":{},"9":{},"20":{},"24":{},"50":{},"52":{},"53":{},"55":{},"64":{},"66":{},"67":{},"68":{},"73":{},"75":{},"76":{},"79":{},"81":{},"82":{},"84":{},"86":{},"105":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"174":{},"175":{},"177":{},"179":{},"181":{},"185":{},"186":{},"187":{},"198":{},"199":{},"201":{},"206":{},"211":{},"214":{},"215":{},"216":{},"222":{},"226":{},"227":{},"228":{},"229":{},"230":{},"234":{},"235":{},"237":{},"238":{},"239":{},"243":{},"245":{},"246":{},"248":{},"250":{},"251":{},"253":{},"256":{},"265":{},"267":{},"269":{},"270":{},"271":{},"272":{},"273":{},"275":{},"276":{},"278":{},"280":{},"282":{},"284":{},"285":{},"287":{},"288":{},"289":{},"290":{},"293":{},"303":{},"306":{},"307":{},"309":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"323":{},"324":{},"328":{},"332":{},"333":{},"334":{},"338":{},"345":{},"346":{},"347":{},"354":{},"355":{},"356":{},"357":{},"358":{},"363":{},"364":{},"366":{},"367":{},"368":{},"369":{},"370":{},"373":{},"376":{},"378":{},"381":{},"382":{},"394":{},"405":{},"428":{},"450":{},"481":{},"487":{},"488":{},"490":{},"503":{},"536":{},"544":{}},"component":{}}],["stream(",{"_index":3969,"title":{},"name":{},"text":{"179":{},"217":{},"222":{},"262":{},"301":{},"323":{},"338":{},"347":{},"348":{},"367":{},"369":{},"383":{}},"component":{}}],["streamingcontext’",{"_index":3891,"title":{},"name":{},"text":{"168":{}},"component":{}}],["streamlookup",{"_index":6014,"title":{},"name":{"355":{}},"text":{},"component":{}}],["streamschemamerg",{"_index":6015,"title":{},"name":{"356":{}},"text":{},"component":{}}],["stream’",{"_index":5633,"title":{},"name":{},"text":{"289":{}},"component":{}}],["street",{"_index":5680,"title":{},"name":{},"text":{"292":{}},"component":{}}],["street\",50",{"_index":5684,"title":{},"name":{},"text":{"292":{}},"component":{}}],["streetaddress",{"_index":4441,"title":{},"name":{},"text":{"241":{}},"component":{}}],["streetaddressnumb",{"_index":4440,"title":{},"name":{},"text":{"241":{}},"component":{}}],["streetnam",{"_index":4439,"title":{},"name":{},"text":{"241":{}},"component":{}}],["strict",{"_index":4379,"title":{},"name":{},"text":{"234":{},"338":{},"366":{},"534":{}},"component":{}}],["strictli",{"_index":5965,"title":{},"name":{},"text":{"338":{},"525":{},"542":{}},"component":{}}],["string",{"_index":812,"title":{"317":{},"357":{},"358":{},"528-4":{}},"name":{},"text":{"7":{},"34":{},"38":{},"39":{},"42":{},"43":{},"47":{},"55":{},"56":{},"75":{},"76":{},"79":{},"81":{},"82":{},"86":{},"130":{},"152":{},"157":{},"163":{},"165":{},"166":{},"167":{},"168":{},"174":{},"175":{},"178":{},"186":{},"187":{},"192":{},"193":{},"194":{},"196":{},"197":{},"198":{},"199":{},"205":{},"214":{},"217":{},"219":{},"220":{},"222":{},"223":{},"227":{},"233":{},"234":{},"237":{},"238":{},"242":{},"244":{},"246":{},"247":{},"248":{},"249":{},"250":{},"253":{},"254":{},"258":{},"262":{},"263":{},"266":{},"267":{},"269":{},"270":{},"273":{},"275":{},"277":{},"289":{},"291":{},"298":{},"304":{},"305":{},"310":{},"311":{},"313":{},"316":{},"317":{},"320":{},"323":{},"324":{},"325":{},"326":{},"331":{},"337":{},"338":{},"342":{},"344":{},"346":{},"349":{},"350":{},"354":{},"357":{},"358":{},"359":{},"363":{},"366":{},"367":{},"368":{},"372":{},"373":{},"374":{},"375":{},"377":{},"379":{},"381":{},"383":{},"384":{},"400":{},"433":{},"453":{},"471":{},"472":{},"475":{},"489":{},"490":{},"491":{},"505":{},"528":{},"529":{},"530":{},"544":{}},"component":{}}],["string.class",{"_index":5903,"title":{},"name":{},"text":{"325":{}},"component":{}}],["stringbuff",{"_index":7349,"title":{},"name":{},"text":{"544":{}},"component":{}}],["stringbuffer(firstname).append",{"_index":6216,"title":{},"name":{},"text":{"373":{}},"component":{}}],["stringcount",{"_index":4725,"title":{"247-165":{}},"name":{},"text":{},"component":{}}],["stringcount(\"apple\";\"p",{"_index":5288,"title":{},"name":{},"text":{"247":{}},"component":{}}],["stringcut",{"_index":6016,"title":{},"name":{"357":{}},"text":{},"component":{}}],["stringoper",{"_index":6018,"title":{},"name":{"358":{}},"text":{},"component":{}}],["string–primari",{"_index":3997,"title":{},"name":{},"text":{"186":{},"187":{}},"component":{}}],["strip",{"_index":4246,"title":{},"name":{},"text":{"219":{},"367":{}},"component":{}}],["strongli",{"_index":4743,"title":{},"name":{},"text":{"247":{}},"component":{}}],["strslist.stream",{"_index":6172,"title":{},"name":{},"text":{"372":{}},"component":{}}],["structur",{"_index":1486,"title":{"288":{},"292-10":{},"514-3":{},"534-2":{}},"name":{},"text":{"23":{},"52":{},"56":{},"81":{},"86":{},"88":{},"95":{},"130":{},"195":{},"200":{},"205":{},"230":{},"231":{},"233":{},"243":{},"246":{},"270":{},"273":{},"274":{},"288":{},"291":{},"292":{},"298":{},"314":{},"322":{},"356":{},"381":{},"382":{},"386":{},"389":{},"451":{},"467":{},"468":{},"477":{},"478":{},"509":{},"525":{},"531":{},"534":{}},"component":{}}],["structure(",{"_index":6264,"title":{},"name":{},"text":{"382":{}},"component":{}}],["structure.hpl",{"_index":4363,"title":{},"name":{},"text":{"233":{}},"component":{}}],["strvalueswitch",{"_index":5487,"title":{},"name":{},"text":{"270":{}},"component":{}}],["stuck",{"_index":4004,"title":{},"name":{},"text":{"186":{}},"component":{}}],["student",{"_index":5128,"title":{},"name":{},"text":{"247":{}},"component":{}}],["student’",{"_index":5097,"title":{},"name":{},"text":{"247":{}},"component":{}}],["stuff",{"_index":3079,"title":{},"name":{},"text":{"90":{},"150":{},"152":{},"389":{},"525":{}},"component":{}}],["style",{"_index":4126,"title":{"516-3":{}},"name":{},"text":{"205":{},"228":{},"235":{},"241":{},"247":{},"298":{}},"component":{}}],["stylesheet",{"_index":6276,"title":{},"name":{},"text":{"385":{},"508":{}},"component":{}}],["sub",{"_index":1118,"title":{},"name":{},"text":{"9":{},"37":{},"46":{},"93":{},"152":{},"163":{},"198":{},"208":{},"228":{},"232":{},"246":{},"275":{},"309":{},"345":{},"366":{},"378":{},"388":{},"395":{},"450":{},"459":{},"460":{},"468":{},"481":{},"503":{},"506":{},"509":{},"514":{},"518":{},"530":{},"531":{},"534":{}},"component":{}}],["sub)graph",{"_index":6355,"title":{},"name":{},"text":{"432":{}},"component":{}}],["sub)str",{"_index":6017,"title":{},"name":{},"text":{"357":{}},"component":{}}],["subdirectori",{"_index":2286,"title":{},"name":{},"text":{"50":{},"441":{}},"component":{}}],["subfold",{"_index":2666,"title":{"255":{}},"name":{},"text":{"64":{},"81":{},"86":{},"232":{},"255":{},"273":{},"280":{},"435":{},"439":{},"441":{},"447":{},"450":{},"454":{},"460":{},"464":{},"468":{},"477":{},"478":{},"506":{},"530":{}},"component":{}}],["subject",{"_index":1134,"title":{},"name":{},"text":{"9":{},"41":{},"179":{},"196":{},"280":{},"398":{},"464":{},"466":{},"505":{},"527":{},"532":{},"538":{}},"component":{}}],["submenu",{"_index":7179,"title":{"541-5":{}},"name":{},"text":{"541":{}},"component":{}}],["submit",{"_index":3557,"title":{"161-4":{},"168-5":{}},"name":{},"text":{"160":{},"161":{},"164":{},"168":{},"264":{}},"component":{}}],["subnetwork",{"_index":3820,"title":{},"name":{},"text":{"165":{}},"component":{}}],["subprocess",{"_index":3842,"title":{},"name":{},"text":{"166":{}},"component":{}}],["subscrib",{"_index":2878,"title":{"193":{}},"name":{},"text":{"81":{},"86":{},"193":{},"275":{},"276":{},"430":{}},"component":{}}],["subscript",{"_index":4019,"title":{},"name":{},"text":{"193":{}},"component":{}}],["subsect",{"_index":1230,"title":{},"name":{},"text":{"11":{}},"component":{}}],["subsequ",{"_index":118,"title":{},"name":{},"text":{"1":{},"13":{},"27":{},"50":{},"57":{},"182":{},"222":{},"245":{},"270":{},"285":{},"326":{},"381":{},"404":{},"409":{},"455":{},"481":{}},"component":{}}],["subset",{"_index":1536,"title":{},"name":{},"text":{"24":{},"52":{},"82":{},"117":{},"220":{},"275":{}},"component":{}}],["substanti",{"_index":4276,"title":{},"name":{},"text":{"222":{}},"component":{}}],["substitut",{"_index":4161,"title":{"247-166":{}},"name":{},"text":{"205":{},"238":{},"247":{},"294":{},"316":{},"363":{},"365":{},"455":{},"486":{},"493":{},"501":{}},"component":{}}],["substitute(\"\";\"\";\"ab",{"_index":5296,"title":{},"name":{},"text":{"247":{}},"component":{}}],["substitute(\"121212\";\"2\";\"ab",{"_index":5289,"title":{},"name":{},"text":{"247":{}},"component":{}}],["substitute(\"121212\";\"2\";\"ab\";2",{"_index":5291,"title":{},"name":{},"text":{"247":{}},"component":{}}],["substitute(\"hello",{"_index":5297,"title":{},"name":{},"text":{"247":{}},"component":{}}],["substitute(\"hello\";\"x\";\"ab",{"_index":5293,"title":{},"name":{},"text":{"247":{}},"component":{}}],["substitute(\"xyz\";\"\";\"ab",{"_index":5294,"title":{},"name":{},"text":{"247":{}},"component":{}}],["substr",{"_index":5808,"title":{},"name":{},"text":{"316":{},"357":{}},"component":{}}],["substream",{"_index":2335,"title":{},"name":{},"text":{"52":{}},"component":{}}],["subsystem",{"_index":5723,"title":{},"name":{},"text":{"298":{}},"component":{}}],["subtleti",{"_index":5305,"title":{},"name":{},"text":{"247":{}},"component":{}}],["subtract",{"_index":4088,"title":{},"name":{},"text":{"205":{},"247":{}},"component":{}}],["subtre",{"_index":5578,"title":{},"name":{},"text":{"277":{}},"component":{}}],["subtyp",{"_index":4859,"title":{},"name":{},"text":{"247":{}},"component":{}}],["succe",{"_index":2708,"title":{},"name":{},"text":{"70":{},"200":{},"208":{},"292":{},"501":{},"533":{}},"component":{}}],["succeed",{"_index":3158,"title":{},"name":{},"text":{"105":{}},"component":{}}],["succesfulli",{"_index":2957,"title":{},"name":{},"text":{"83":{},"85":{}},"component":{}}],["success",{"_index":1541,"title":{"495":{}},"name":{"495":{}},"text":{"24":{},"27":{},"41":{},"56":{},"57":{},"83":{},"103":{},"105":{},"158":{},"169":{},"222":{},"237":{},"260":{},"261":{},"329":{},"330":{},"332":{},"333":{},"334":{},"437":{},"442":{},"448":{},"450":{},"454":{},"455":{},"456":{},"461":{},"462":{},"466":{},"467":{},"468":{},"477":{},"478":{},"482":{},"484":{},"488":{},"489":{},"490":{},"495":{},"499":{},"500":{},"501":{},"506":{},"510":{},"527":{},"533":{},"538":{}},"component":{}}],["success/abort",{"_index":6825,"title":{},"name":{},"text":{"527":{}},"component":{}}],["successfulli",{"_index":838,"title":{},"name":{},"text":{"7":{},"10":{},"15":{},"50":{},"103":{},"105":{},"130":{},"158":{},"161":{},"273":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"437":{},"453":{},"461":{},"487":{},"490":{},"500":{}},"component":{}}],["such",{"_index":956,"title":{},"name":{},"text":{"8":{},"53":{},"54":{},"81":{},"90":{},"91":{},"151":{},"154":{},"155":{},"157":{},"163":{},"165":{},"168":{},"196":{},"197":{},"205":{},"217":{},"218":{},"220":{},"227":{},"236":{},"246":{},"247":{},"259":{},"271":{},"275":{},"276":{},"285":{},"287":{},"298":{},"331":{},"354":{},"364":{},"366":{},"367":{},"372":{},"383":{},"384":{},"389":{},"466":{},"507":{},"508":{},"524":{},"528":{},"529":{},"532":{},"542":{},"544":{}},"component":{}}],["suffic",{"_index":6483,"title":{},"name":{},"text":{"461":{},"463":{}},"component":{}}],["suffici",{"_index":2282,"title":{},"name":{},"text":{"50":{},"259":{},"326":{}},"component":{}}],["suffix",{"_index":4069,"title":{},"name":{},"text":{"200":{},"241":{},"366":{}},"component":{}}],["suggest",{"_index":1705,"title":{},"name":{},"text":{"37":{},"227":{},"247":{},"525":{},"529":{}},"component":{}}],["suit",{"_index":2245,"title":{},"name":{},"text":{"50":{},"235":{},"527":{}},"component":{}}],["suitabl",{"_index":2325,"title":{},"name":{},"text":{"50":{},"165":{},"167":{},"205":{},"318":{}},"component":{}}],["sum",{"_index":4710,"title":{"247-133":{}},"name":{},"text":{"247":{},"248":{},"262":{},"291":{},"320":{}},"component":{}}],["sum(1;2;3",{"_index":5086,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sum([.b4:.b5",{"_index":5088,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sum(true();2;3",{"_index":5087,"title":{},"name":{},"text":{"247":{}},"component":{}}],["summari",{"_index":1858,"title":{"56-7":{},"57-4":{}},"name":{},"text":{"38":{},"496":{},"520":{}},"component":{}}],["sumsq",{"_index":4711,"title":{"247-134":{}},"name":{},"text":{},"component":{}}],["sumsq(3",{"_index":5092,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sumsq(number1",{"_index":5090,"title":{},"name":{},"text":{"247":{}},"component":{}}],["sun",{"_index":6096,"title":{},"name":{},"text":{"366":{}},"component":{}}],["sunday",{"_index":4122,"title":{},"name":{},"text":{"205":{},"247":{}},"component":{}}],["super.sav",{"_index":6931,"title":{},"name":{},"text":{"529":{}},"component":{}}],["superhero",{"_index":4583,"title":{},"name":{},"text":{"241":{}},"component":{}}],["supervis",{"_index":2990,"title":{},"name":{},"text":{"87":{}},"component":{}}],["suppli",{"_index":1236,"title":{},"name":{},"text":{"11":{},"326":{},"467":{}},"component":{}}],["supplier",{"_index":2857,"title":{},"name":{},"text":{"81":{}},"component":{}}],["suppoort",{"_index":5801,"title":{},"name":{},"text":{"315":{}},"component":{}}],["support",{"_index":317,"title":{"6":{},"6-2":{},"81-5":{},"163-4":{},"172-2":{},"173-2":{},"174-2":{},"175-2":{},"176-2":{},"177-2":{},"178-2":{},"178-9":{},"179-2":{},"180-2":{},"180-4":{},"181-2":{},"181-4":{},"182-2":{},"182-4":{},"183-2":{},"183-4":{},"184-2":{},"184-4":{},"185-2":{},"185-4":{},"186-2":{},"187-2":{},"188-2":{},"189-2":{},"190-2":{},"191-2":{},"192-2":{},"193-2":{},"194-2":{},"195-2":{},"196-2":{},"197-2":{},"198-2":{},"199-2":{},"200-2":{},"201-2":{},"202-2":{},"203-2":{},"204-2":{},"205-2":{},"206-2":{},"207-2":{},"208-2":{},"209-2":{},"210-2":{},"211-2":{},"212-2":{},"213-2":{},"214-2":{},"215-2":{},"216-2":{},"217-2":{},"218-2":{},"219-2":{},"220-2":{},"220-4":{},"221-2":{},"222-2":{},"223-2":{},"223-4":{},"224-2":{},"225-2":{},"226-2":{},"227-2":{},"227-13":{},"228-2":{},"229-2":{},"230-2":{},"231-2":{},"232-2":{},"233-2":{},"234-2":{},"235-2":{},"235-6":{},"236-2":{},"237-2":{},"238-2":{},"239-2":{},"240-2":{},"241-2":{},"242-2":{},"243-2":{},"244-2":{},"245-2":{},"246-2":{},"246-7":{},"247-2":{},"248-2":{},"249-2":{},"250-2":{},"250-7":{},"251-2":{},"252-2":{},"253-2":{},"253-4":{},"254-2":{},"254-4":{},"255-2":{},"256-2":{},"257-2":{},"258-2":{},"258-4":{},"259-2":{},"260-2":{},"261-2":{},"262-2":{},"263-2":{},"264-2":{},"265-2":{},"266-2":{},"266-3":{},"267-2":{},"268-2":{},"269-2":{},"270-2":{},"271-2":{},"272-2":{},"272-4":{},"273-4":{},"273-11":{},"274-2":{},"274-8":{},"275-2":{},"276-2":{},"277-2":{},"278-2":{},"279-2":{},"280-2":{},"281-2":{},"282-2":{},"283-2":{},"283-4":{},"284-2":{},"285-2":{},"285-5":{},"286-2":{},"287-2":{},"288-2":{},"289-2":{},"290-2":{},"291-2":{},"292-2":{},"293-2":{},"293-4":{},"294-2":{},"295-2":{},"296-2":{},"297-2":{},"298-2":{},"299-2":{},"300-2":{},"301-2":{},"301-3":{},"302-2":{},"303-2":{},"303-4":{},"304-2":{},"305-2":{},"306-2":{},"307-2":{},"308-2":{},"309-2":{},"310-2":{},"311-2":{},"311-4":{},"312-2":{},"313-2":{},"314-2":{},"315-2":{},"315-6":{},"316-2":{},"317-2":{},"317-5":{},"318-2":{},"319-3":{},"320-2":{},"320-4":{},"321-2":{},"322-2":{},"323-2":{},"323-4":{},"324-2":{},"325-2":{},"326-2":{},"330-2":{},"331-2":{},"332-2":{},"333-2":{},"334-2":{},"335-2":{},"336-2":{},"337-2":{},"338-2":{},"338-8":{},"339-2":{},"340-2":{},"341-2":{},"341-4":{},"342-2":{},"342-4":{},"343-2":{},"343-4":{},"344-2":{},"345-2":{},"346-2":{},"347-2":{},"347-4":{},"348-2":{},"348-4":{},"349-2":{},"349-4":{},"350-2":{},"351-2":{},"352-2":{},"353-2":{},"354-2":{},"355-2":{},"355-4":{},"356-2":{},"357-2":{},"357-4":{},"358-2":{},"358-4":{},"359-2":{},"359-4":{},"360-2":{},"360-6":{},"361-2":{},"362-2":{},"363-2":{},"364-2":{},"364-4":{},"365-2":{},"366-2":{},"366-12":{},"367-2":{},"367-7":{},"368-2":{},"369-2":{},"370-2":{},"371-2":{},"371-4":{},"372-2":{},"372-9":{},"373-2":{},"373-5":{},"374-2":{},"374-4":{},"375-2":{},"375-4":{},"376-1":{},"376-6":{},"377-2":{},"378-2":{},"379-2":{},"380-2":{},"381-2":{},"382-2":{},"382-4":{},"383-2":{},"383-7":{},"384-2":{},"385-2":{},"386-2":{},"387-2":{},"429-1":{}},"name":{"6":{}},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"20":{},"22":{},"24":{},"30":{},"43":{},"50":{},"71":{},"79":{},"81":{},"82":{},"87":{},"93":{},"96":{},"130":{},"157":{},"160":{},"161":{},"163":{},"165":{},"166":{},"167":{},"168":{},"171":{},"177":{},"178":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"196":{},"197":{},"198":{},"199":{},"205":{},"214":{},"216":{},"220":{},"223":{},"227":{},"228":{},"232":{},"234":{},"235":{},"246":{},"247":{},"250":{},"253":{},"254":{},"257":{},"258":{},"262":{},"263":{},"266":{},"270":{},"272":{},"273":{},"274":{},"275":{},"277":{},"279":{},"283":{},"284":{},"285":{},"291":{},"293":{},"294":{},"297":{},"298":{},"301":{},"303":{},"304":{},"311":{},"315":{},"317":{},"320":{},"323":{},"337":{},"338":{},"340":{},"341":{},"342":{},"343":{},"347":{},"348":{},"349":{},"355":{},"357":{},"358":{},"359":{},"360":{},"364":{},"365":{},"366":{},"367":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"382":{},"383":{},"394":{},"400":{},"427":{},"428":{},"429":{},"430":{},"432":{},"466":{},"483":{},"512":{},"514":{},"518":{},"519":{},"527":{},"528":{},"529":{},"531":{},"536":{},"542":{},"544":{},"546":{}},"component":{}}],["suppos",{"_index":3975,"title":{},"name":{},"text":{"179":{},"316":{},"354":{},"457":{},"466":{},"481":{},"489":{},"496":{},"503":{},"528":{}},"component":{}}],["sure",{"_index":26,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"9":{},"11":{},"15":{},"19":{},"40":{},"43":{},"44":{},"56":{},"82":{},"83":{},"85":{},"94":{},"104":{},"130":{},"131":{},"154":{},"156":{},"157":{},"158":{},"160":{},"161":{},"163":{},"168":{},"186":{},"220":{},"223":{},"227":{},"235":{},"243":{},"297":{},"299":{},"304":{},"305":{},"315":{},"320":{},"337":{},"344":{},"347":{},"366":{},"367":{},"377":{},"378":{},"390":{},"395":{},"412":{},"418":{},"424":{},"430":{},"431":{},"481":{},"514":{},"527":{},"528":{},"533":{},"534":{},"535":{},"540":{},"543":{},"544":{}},"component":{}}],["surefir",{"_index":6832,"title":{},"name":{},"text":{"527":{}},"component":{}}],["surgeri",{"_index":4494,"title":{},"name":{},"text":{"241":{}},"component":{}}],["surrog",{"_index":1443,"title":{},"name":{},"text":{"20":{},"52":{},"216":{},"227":{}},"component":{}}],["surround",{"_index":5946,"title":{},"name":{},"text":{"337":{}},"component":{}}],["surviv",{"_index":6329,"title":{},"name":{},"text":{"429":{}},"component":{}}],["suspend",{"_index":6591,"title":{"492-5":{}},"name":{},"text":{"492":{}},"component":{}}],["sv",{"_index":3406,"title":{},"name":{},"text":{"152":{}},"component":{}}],["sv=myvar",{"_index":3417,"title":{},"name":{},"text":{"152":{}},"component":{}}],["svg",{"_index":1465,"title":{"535":{},"535-1":{}},"name":{"535":{}},"text":{"22":{},"30":{},"42":{},"319":{},"526":{},"530":{},"535":{}},"component":{}}],["svn",{"_index":7135,"title":{},"name":{},"text":{"538":{},"540":{}},"component":{}}],["svn/hop_release/apach",{"_index":7154,"title":{},"name":{},"text":{"540":{}},"component":{}}],["swap",{"_index":2945,"title":{},"name":{},"text":{"83":{},"256":{}},"component":{}}],["swimlan",{"_index":2915,"title":{"82-5":{}},"name":{},"text":{"82":{}},"component":{}}],["swiss",{"_index":6370,"title":{},"name":{},"text":{"433":{}},"component":{}}],["switch",{"_index":512,"title":{"359":{},"93-3":{},"247-135":{}},"name":{},"text":{"5":{},"19":{},"27":{},"29":{},"30":{},"31":{},"36":{},"38":{},"47":{},"52":{},"81":{},"86":{},"91":{},"93":{},"151":{},"158":{},"163":{},"167":{},"247":{},"251":{},"285":{},"303":{},"359":{},"389":{},"443":{},"446":{},"500":{},"514":{},"537":{}},"component":{}}],["switch([date_field],1,\"sunday\",2,\"monday\",3,\"tuesday\",\"no",{"_index":5095,"title":{},"name":{},"text":{"247":{}},"component":{}}],["switch(parseint(valuenam",{"_index":5486,"title":{},"name":{},"text":{"270":{}},"component":{}}],["switch(weekday([date_field]),1,\"sunday\",2,\"monday\",3,\"tuesday\",\"no",{"_index":5093,"title":{},"name":{},"text":{"247":{}},"component":{}}],["switch/cas",{"_index":5485,"title":{},"name":{},"text":{"270":{},"359":{}},"component":{}}],["switchcas",{"_index":6030,"title":{},"name":{"359":{}},"text":{},"component":{}}],["switcher",{"_index":1309,"title":{},"name":{},"text":{"17":{}},"component":{}}],["swt",{"_index":6979,"title":{"542-4":{}},"name":{},"text":{"532":{},"534":{},"541":{},"542":{}},"component":{}}],["swt.cascad",{"_index":7178,"title":{"541-5":{}},"name":{},"text":{"541":{}},"component":{}}],["sybas",{"_index":3340,"title":{"141":{},"142":{}},"name":{"141":{}},"text":{},"component":{}}],["sybaseiq",{"_index":3343,"title":{},"name":{"142":{}},"text":{},"component":{}}],["symbol",{"_index":704,"title":{},"name":{},"text":{"7":{},"178":{},"217":{},"234":{},"250":{},"258":{},"273":{},"277":{},"279":{},"313":{},"316":{},"331":{},"338":{},"359":{},"366":{},"367":{},"374":{},"383":{},"386":{}},"component":{}}],["synchron",{"_index":1701,"title":{"360":{},"37-14":{}},"name":{},"text":{"37":{},"50":{},"71":{},"78":{},"81":{},"86":{},"103":{},"162":{},"203":{},"285":{},"360":{}},"component":{}}],["synchronizeaftermerg",{"_index":6031,"title":{},"name":{"360":{}},"text":{},"component":{}}],["synonym",{"_index":5385,"title":{},"name":{},"text":{"257":{}},"component":{}}],["syntact",{"_index":4967,"title":{},"name":{},"text":{"247":{}},"component":{}}],["syntax",{"_index":1857,"title":{},"name":{},"text":{"38":{},"41":{},"56":{},"222":{},"246":{},"247":{},"258":{},"270":{},"291":{},"315":{},"316":{},"328":{},"332":{},"333":{},"334":{},"363":{},"382":{},"431":{},"490":{}},"component":{}}],["synthet",{"_index":2645,"title":{},"name":{},"text":{"59":{},"159":{},"160":{},"162":{}},"component":{}}],["sysdat",{"_index":3724,"title":{},"name":{},"text":{"162":{}},"component":{}}],["syslog",{"_index":2729,"title":{},"name":{},"text":{"75":{},"87":{}},"component":{}}],["system",{"_index":423,"title":{"8":{},"256":{},"5-2":{},"5-5":{},"7-11":{},"8-2":{},"8-3":{},"27-7":{},"514-2":{}},"name":{},"text":{"5":{},"7":{},"8":{},"9":{},"14":{},"19":{},"22":{},"26":{},"27":{},"37":{},"38":{},"41":{},"42":{},"50":{},"53":{},"54":{},"56":{},"62":{},"75":{},"76":{},"81":{},"83":{},"86":{},"87":{},"88":{},"90":{},"91":{},"94":{},"97":{},"99":{},"100":{},"101":{},"114":{},"157":{},"158":{},"161":{},"163":{},"167":{},"168":{},"169":{},"201":{},"203":{},"216":{},"220":{},"227":{},"234":{},"247":{},"251":{},"256":{},"257":{},"258":{},"262":{},"264":{},"272":{},"273":{},"275":{},"279":{},"285":{},"287":{},"315":{},"338":{},"347":{},"353":{},"363":{},"364":{},"366":{},"367":{},"372":{},"380":{},"383":{},"389":{},"398":{},"426":{},"427":{},"428":{},"429":{},"430":{},"439":{},"441":{},"442":{},"457":{},"461":{},"468":{},"480":{},"481":{},"489":{},"494":{},"496":{},"503":{},"505":{},"510":{},"514":{},"518":{},"527":{},"530":{},"533":{},"541":{},"544":{}},"component":{}}],["system.getproperty(\"os.nam",{"_index":6218,"title":{},"name":{},"text":{"373":{}},"component":{}}],["system.out.println(\"declin",{"_index":5912,"title":{},"name":{},"text":{"325":{}},"component":{}}],["system.text.encoding]::default",{"_index":3103,"title":{},"name":{},"text":{"94":{},"426":{}},"component":{}}],["system_schema",{"_index":6397,"title":{},"name":{},"text":{"437":{}},"component":{}}],["systemproperti",{"_index":758,"title":{},"name":{},"text":{"7":{}},"component":{}}],["system’",{"_index":495,"title":{},"name":{},"text":{"5":{},"22":{},"27":{},"315":{}},"component":{}}],["sytem",{"_index":1455,"title":{},"name":{},"text":{"22":{}},"component":{}}],["t",{"_index":2201,"title":{"247-167":{}},"name":{},"text":{"46":{},"247":{},"291":{},"514":{},"529":{},"537":{},"538":{},"540":{}},"component":{}}],["t(\"hi",{"_index":5300,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t(5",{"_index":5299,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t([.b3",{"_index":5301,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist",{"_index":4712,"title":{"247-136":{}},"name":{},"text":{},"component":{}}],["t.dist(60,1,tru",{"_index":5101,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist(8,3,fals",{"_index":5103,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist(x,deg_freedom",{"_index":5100,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist.2t",{"_index":4713,"title":{"247-137":{}},"name":{},"text":{},"component":{}}],["t.dist.2t(1.959999998",{"_index":5107,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist.2t(x,deg_freedom",{"_index":5106,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist.rt",{"_index":4714,"title":{"247-138":{}},"name":{},"text":{},"component":{}}],["t.dist.rt(1.959999998,60",{"_index":5112,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t.dist.rt(x,deg_freedom",{"_index":5111,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t1",{"_index":5162,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t2",{"_index":5163,"title":{},"name":{},"text":{"247":{}},"component":{}}],["t4",{"_index":7033,"title":{},"name":{},"text":{"533":{}},"component":{}}],["tab",{"_index":651,"title":{"27-3":{},"29-6":{},"31-5":{},"171-4":{},"171-5":{},"178-4":{},"178-5":{},"217-5":{},"227-5":{},"227-6":{},"227-7":{},"227-8":{},"233-4":{},"233-6":{},"233-7":{},"234-4":{},"234-8":{},"234-9":{},"235-4":{},"235-5":{},"248-4":{},"248-5":{},"250-4":{},"250-5":{},"250-6":{},"251-4":{},"252-4":{},"252-5":{},"255-4":{},"255-5":{},"260-4":{},"260-5":{},"260-6":{},"261-4":{},"261-5":{},"264-4":{},"264-5":{},"264-6":{},"271-3":{},"271-4":{},"273-6":{},"273-7":{},"273-8":{},"273-9":{},"274-4":{},"274-7":{},"277-3":{},"277-4":{},"277-5":{},"277-6":{},"278-3":{},"278-5":{},"279-4":{},"279-5":{},"279-6":{},"279-7":{},"287-6":{},"287-8":{},"289-5":{},"289-6":{},"289-7":{},"290-5":{},"291-5":{},"291-6":{},"291-7":{},"292-5":{},"292-6":{},"292-11":{},"309-6":{},"309-7":{},"309-8":{},"309-9":{},"309-10":{},"313-4":{},"313-5":{},"314-4":{},"316-7":{},"316-9":{},"319-5":{},"319-6":{},"319-7":{},"319-8":{},"319-9":{},"319-10":{},"324-4":{},"324-5":{},"325-4":{},"325-5":{},"326-4":{},"326-5":{},"331-7":{},"331-11":{},"338-4":{},"338-6":{},"338-7":{},"346-4":{},"346-5":{},"346-6":{},"352-4":{},"352-5":{},"360-4":{},"360-5":{},"361-4":{},"361-5":{},"361-6":{},"366-5":{},"366-6":{},"366-7":{},"366-8":{},"366-9":{},"366-10":{},"367-4":{},"367-5":{},"367-6":{},"368-4":{},"368-5":{},"368-6":{},"376-4":{},"376-5":{},"378-6":{},"378-7":{},"378-8":{},"378-9":{},"378-10":{},"383-4":{},"383-5":{},"383-6":{},"386-4":{},"386-5":{},"386-6":{},"465-3":{},"465-4":{},"466-3":{},"466-4":{},"466-5":{},"466-6":{},"468-3":{},"468-4":{},"468-5":{},"470-3":{},"470-4":{},"477-3":{},"477-4":{},"477-5":{},"478-3":{},"478-4":{},"478-5":{},"481-4":{},"481-5":{},"481-6":{},"487-3":{},"487-4":{},"488-3":{},"488-4":{},"503-4":{},"503-5":{},"503-6":{},"506-3":{},"506-4":{},"509-3":{},"509-4":{}},"name":{},"text":{"7":{},"15":{},"27":{},"28":{},"29":{},"30":{},"31":{},"50":{},"55":{},"56":{},"78":{},"81":{},"85":{},"94":{},"99":{},"100":{},"101":{},"103":{},"107":{},"130":{},"158":{},"161":{},"171":{},"178":{},"180":{},"185":{},"205":{},"217":{},"220":{},"223":{},"227":{},"232":{},"233":{},"234":{},"243":{},"247":{},"248":{},"250":{},"251":{},"258":{},"264":{},"270":{},"271":{},"273":{},"274":{},"275":{},"276":{},"277":{},"280":{},"287":{},"289":{},"291":{},"292":{},"297":{},"309":{},"316":{},"319":{},"324":{},"325":{},"331":{},"337":{},"338":{},"345":{},"358":{},"364":{},"366":{},"367":{},"372":{},"376":{},"377":{},"378":{},"381":{},"383":{},"433":{},"466":{},"468":{},"481":{},"489":{},"506":{},"512":{},"529":{},"533":{}},"component":{}}],["tabl",{"_index":218,"title":{"257":{},"361":{},"362":{},"363":{},"364":{},"440":{},"455":{},"496":{},"498":{},"53-3":{},"54-3":{},"82-3":{},"270-8":{}},"name":{},"text":{"1":{},"7":{},"8":{},"9":{},"23":{},"27":{},"33":{},"34":{},"36":{},"37":{},"38":{},"52":{},"53":{},"54":{},"57":{},"71":{},"78":{},"81":{},"82":{},"84":{},"85":{},"86":{},"93":{},"94":{},"107":{},"152":{},"153":{},"154":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"173":{},"178":{},"179":{},"188":{},"189":{},"190":{},"191":{},"194":{},"205":{},"207":{},"208":{},"213":{},"215":{},"216":{},"220":{},"221":{},"222":{},"225":{},"227":{},"228":{},"239":{},"246":{},"247":{},"250":{},"251":{},"256":{},"257":{},"262":{},"268":{},"270":{},"271":{},"273":{},"275":{},"285":{},"287":{},"289":{},"290":{},"291":{},"292":{},"303":{},"304":{},"309":{},"311":{},"315":{},"316":{},"322":{},"323":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"346":{},"347":{},"348":{},"349":{},"352":{},"353":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"369":{},"370":{},"371":{},"372":{},"375":{},"376":{},"395":{},"405":{},"429":{},"433":{},"437":{},"440":{},"453":{},"455":{},"458":{},"470":{},"472":{},"481":{},"489":{},"493":{},"496":{},"498":{},"501":{},"544":{}},"component":{}}],["table(",{"_index":6040,"title":{},"name":{},"text":{"361":{}},"component":{}}],["table1",{"_index":4633,"title":{},"name":{},"text":{"246":{},"363":{}},"component":{}}],["table1(clause1);schema2.table2(clause2",{"_index":3173,"title":{},"name":{},"text":{"107":{}},"component":{}}],["table:nul",{"_index":4783,"title":{},"name":{},"text":{"247":{}},"component":{}}],["table_nam",{"_index":4337,"title":{},"name":{},"text":{"230":{},"238":{}},"component":{}}],["tablecompar",{"_index":6037,"title":{},"name":{"361":{}},"text":{},"component":{}}],["tableexist",{"_index":6043,"title":{},"name":{"362":{},"496":{}},"text":{},"component":{}}],["tableinput",{"_index":3163,"title":{},"name":{"363":{}},"text":{"106":{}},"component":{}}],["tablenam",{"_index":4213,"title":{},"name":{},"text":{"215":{},"257":{},"360":{},"364":{}},"component":{}}],["tableoutput",{"_index":6051,"title":{},"name":{"364":{}},"text":{},"component":{}}],["table’",{"_index":2386,"title":{},"name":{},"text":{"52":{},"177":{},"227":{},"315":{},"346":{}},"component":{}}],["tablock",{"_index":6523,"title":{},"name":{},"text":{"470":{}},"component":{}}],["tabular",{"_index":1513,"title":{},"name":{},"text":{"24":{}},"component":{}}],["tag",{"_index":2062,"title":{"538-5":{}},"name":{},"text":{"42":{},"52":{},"56":{},"65":{},"78":{},"231":{},"292":{},"372":{},"382":{},"514":{},"537":{},"538":{}},"component":{}}],["tail",{"_index":3980,"title":{},"name":{},"text":{"181":{},"247":{}},"component":{}}],["tailor",{"_index":1431,"title":{},"name":{},"text":{"20":{},"88":{}},"component":{}}],["take",{"_index":239,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"13":{},"18":{},"20":{},"24":{},"25":{},"41":{},"43":{},"45":{},"55":{},"56":{},"57":{},"68":{},"78":{},"81":{},"82":{},"83":{},"84":{},"85":{},"90":{},"91":{},"105":{},"158":{},"160":{},"161":{},"167":{},"205":{},"222":{},"225":{},"227":{},"234":{},"236":{},"247":{},"250":{},"279":{},"297":{},"317":{},"320":{},"337":{},"372":{},"387":{},"389":{},"390":{},"391":{},"396":{},"433":{},"461":{},"481":{},"488":{},"492":{},"499":{},"503":{},"509":{},"514":{},"527":{},"530":{},"532":{},"533":{},"537":{},"540":{},"541":{},"542":{},"543":{},"544":{}},"component":{}}],["taken",{"_index":253,"title":{},"name":{},"text":{"2":{},"9":{},"78":{},"79":{},"83":{},"97":{},"220":{},"227":{},"303":{},"309":{},"311":{},"312":{},"364":{},"366":{},"376":{},"378":{},"461":{},"509":{},"514":{},"538":{},"540":{}},"component":{}}],["tan",{"_index":4715,"title":{"247-139":{}},"name":{},"text":{},"component":{}}],["tan(0.785",{"_index":5117,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tan(45*pi()/180",{"_index":5120,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tan(numb",{"_index":5116,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tan(radians(45",{"_index":5121,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tangent",{"_index":5115,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tanh",{"_index":4716,"title":{"247-140":{}},"name":{},"text":{"247":{}},"component":{}}],["tanh(0",{"_index":5125,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tanh(0.5",{"_index":5126,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tanh(numb",{"_index":5122,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tar",{"_index":1028,"title":{},"name":{},"text":{"8":{},"537":{},"538":{}},"component":{}}],["tar.gz",{"_index":7122,"title":{},"name":{},"text":{"538":{}},"component":{}}],["tar:bz2",{"_index":1037,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tar:gz",{"_index":1036,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tar:gz:http://anyhost/dir/mytar.tar.gz!/mytar.tar!/path/in/tar/readme.txt",{"_index":1043,"title":{},"name":{},"text":{"8":{}},"component":{}}],["target",{"_index":420,"title":{},"name":{},"text":{"4":{},"7":{},"15":{},"18":{},"20":{},"46":{},"52":{},"53":{},"54":{},"78":{},"79":{},"81":{},"82":{},"84":{},"151":{},"153":{},"158":{},"163":{},"170":{},"173":{},"178":{},"205":{},"209":{},"216":{},"217":{},"220":{},"225":{},"227":{},"235":{},"268":{},"285":{},"287":{},"289":{},"292":{},"297":{},"298":{},"303":{},"311":{},"312":{},"315":{},"320":{},"321":{},"338":{},"352":{},"358":{},"359":{},"360":{},"363":{},"364":{},"365":{},"371":{},"372":{},"375":{},"376":{},"382":{},"387":{},"388":{},"389":{},"442":{},"455":{},"461":{},"464":{},"465":{},"467":{},"468":{},"470":{},"471":{},"472":{},"481":{},"487":{},"491":{},"499":{},"501":{},"508":{},"509":{},"511":{},"520":{},"530":{},"531":{}},"component":{}}],["target/templ",{"_index":5621,"title":{},"name":{},"text":{"287":{}},"component":{}}],["target1",{"_index":5857,"title":{},"name":{},"text":{"321":{}},"component":{}}],["target2",{"_index":5858,"title":{},"name":{},"text":{"321":{}},"component":{}}],["target='/project",{"_index":2530,"title":{},"name":{},"text":{"56":{}},"component":{}}],["targets=0",{"_index":3361,"title":{},"name":{},"text":{"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"389":{}},"component":{}}],["targets=2",{"_index":3365,"title":{},"name":{},"text":{"151":{},"389":{}},"component":{}}],["targets=4",{"_index":3367,"title":{},"name":{},"text":{"151":{},"158":{},"389":{}},"component":{}}],["tart",{"_index":6570,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["tarun",{"_index":1211,"title":{},"name":{},"text":{"10":{}},"component":{}}],["task",{"_index":122,"title":{},"name":{},"text":{"1":{},"2":{},"13":{},"15":{},"19":{},"20":{},"50":{},"51":{},"56":{},"78":{},"81":{},"85":{},"105":{},"159":{},"161":{},"162":{},"166":{},"167":{},"222":{},"322":{},"404":{},"410":{},"457":{}},"component":{}}],["task_id",{"_index":2548,"title":{},"name":{},"text":{"56":{}},"component":{}}],["task_id='end_dag",{"_index":2583,"title":{},"name":{},"text":{"56":{}},"component":{}}],["task_id='sampl",{"_index":2535,"title":{},"name":{},"text":{"56":{}},"component":{}}],["task_id='start_dag",{"_index":2581,"title":{},"name":{},"text":{"56":{}},"component":{}}],["task_id=sampl",{"_index":2603,"title":{},"name":{},"text":{"56":{}},"component":{}}],["taskexecutor",{"_index":3540,"title":{},"name":{},"text":{"160":{}},"component":{}}],["taskinstance.py:1373",{"_index":2601,"title":{},"name":{},"text":{"56":{}},"component":{}}],["taskmanag",{"_index":3545,"title":{},"name":{},"text":{"160":{},"162":{}},"component":{}}],["taskmanager.memory.jvm",{"_index":3681,"title":{},"name":{},"text":{"162":{}},"component":{}}],["taskmanager.numberoftaskslot",{"_index":3680,"title":{},"name":{},"text":{"162":{}},"component":{}}],["tbz2",{"_index":1031,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tcp",{"_index":3291,"title":{},"name":{},"text":{"130":{},"487":{},"488":{}},"component":{}}],["tcp/ip",{"_index":3265,"title":{"130-4":{}},"name":{},"text":{"130":{},"326":{}},"component":{}}],["tdist",{"_index":4717,"title":{"247-141":{}},"name":{},"text":{},"component":{}}],["tdist(1.959999998,60,1",{"_index":5132,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tdist(1.959999998,60,2",{"_index":5130,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tdist(x,deg_freedom,tail",{"_index":5129,"title":{},"name":{},"text":{"247":{}},"component":{}}],["te",{"_index":828,"title":{},"name":{},"text":{"7":{}},"component":{}}],["te.\\.zip",{"_index":6602,"title":{},"name":{},"text":{"499":{}},"component":{}}],["team",{"_index":242,"title":{},"name":{},"text":{"2":{},"50":{},"52":{},"88":{},"241":{},"514":{},"527":{},"534":{},"538":{}},"component":{}}],["tech",{"_index":3029,"title":{},"name":{},"text":{"88":{},"538":{}},"component":{"514":{},"515":{},"516":{},"517":{},"518":{},"519":{},"520":{},"521":{},"522":{},"523":{},"524":{}}}],["technic",{"_index":73,"title":{"227-7":{}},"name":{},"text":{"1":{},"10":{},"19":{},"41":{},"48":{},"50":{},"88":{},"163":{},"213":{},"216":{},"220":{},"227":{},"258":{},"344":{},"355":{},"418":{},"419":{},"433":{},"542":{}},"component":{}}],["techniqu",{"_index":6335,"title":{},"name":{},"text":{"429":{},"530":{}},"component":{}}],["technolog",{"_index":433,"title":{"429":{},"430":{},"5-14":{},"96-1":{}},"name":{"96":{}},"text":{"5":{},"8":{},"20":{},"96":{},"430":{},"519":{}},"component":{}}],["teen",{"_index":4449,"title":{},"name":{},"text":{"241":{}},"component":{}}],["teja",{"_index":1200,"title":{},"name":{},"text":{"10":{}},"component":{}}],["telephon",{"_index":6504,"title":{},"name":{},"text":{"466":{}},"component":{}}],["tell",{"_index":339,"title":{},"name":{},"text":{"2":{},"56":{},"57":{},"228":{},"514":{}},"component":{}}],["telnet",{"_index":3297,"title":{"497":{}},"name":{"497":{}},"text":{"130":{},"497":{}},"component":{}}],["temp",{"_index":1068,"title":{},"name":{},"text":{"8":{},"165":{},"166":{},"167":{},"168":{},"203":{},"272":{},"346":{},"347":{},"538":{}},"component":{}}],["temperatur",{"_index":4590,"title":{},"name":{},"text":{"241":{}},"component":{}}],["temperaturecelsiu",{"_index":4588,"title":{},"name":{},"text":{"241":{}},"component":{}}],["temperaturefahrenheit",{"_index":4589,"title":{},"name":{},"text":{"241":{}},"component":{}}],["templat",{"_index":257,"title":{"513":{},"513-4":{}},"name":{},"text":{"2":{},"9":{},"81":{},"162":{},"163":{},"230":{},"235":{},"287":{},"394":{},"513":{},"538":{},"540":{}},"component":{}}],["template.hpl",{"_index":5616,"title":{},"name":{},"text":{"287":{}},"component":{}}],["template/target",{"_index":5614,"title":{},"name":{},"text":{"287":{}},"component":{}}],["template:latest",{"_index":6627,"title":{},"name":{},"text":{"513":{},"540":{}},"component":{}}],["template:x.xx",{"_index":7171,"title":{},"name":{},"text":{"540":{}},"component":{}}],["temporari",{"_index":1069,"title":{},"name":{},"text":{"8":{},"9":{},"105":{},"165":{},"166":{},"167":{},"168":{},"203":{},"205":{},"262":{},"272":{},"289":{},"346":{},"347":{},"365":{},"397":{},"489":{},"500":{}},"component":{}}],["ten",{"_index":599,"title":{},"name":{},"text":{"5":{},"71":{}},"component":{}}],["tend",{"_index":1143,"title":{},"name":{},"text":{"9":{},"391":{}},"component":{}}],["tensorflow",{"_index":3002,"title":{},"name":{},"text":{"87":{}},"component":{}}],["teradata",{"_index":2715,"title":{"143":{},"365":{}},"name":{"143":{}},"text":{"71":{},"81":{},"86":{},"365":{}},"component":{}}],["terafast",{"_index":6063,"title":{},"name":{"365":{}},"text":{},"component":{}}],["term",{"_index":4564,"title":{},"name":{},"text":{"241":{},"247":{},"441":{}},"component":{}}],["termin",{"_index":1862,"title":{"162-7":{}},"name":{},"text":{"38":{},"41":{},"162":{},"303":{},"316":{},"366":{},"367":{},"470":{},"471":{},"472":{},"542":{}},"component":{}}],["terminolog",{"_index":3726,"title":{},"name":{},"text":{"163":{},"518":{}},"component":{}}],["tess",{"_index":2833,"title":{},"name":{},"text":{"78":{}},"component":{}}],["test",{"_index":41,"title":{"70":{},"83":{},"240":{},"484":{},"527":{},"2-5":{},"10-2":{},"65-4":{},"66-4":{},"83-1":{},"83-2":{},"83-3":{},"83-4":{},"83-5":{},"83-7":{},"83-8":{},"83-9":{},"83-10":{},"83-11":{},"97-6":{},"98-3":{},"99-3":{},"100-3":{},"101-3":{},"316-8":{},"527-1":{},"527-3":{},"527-5":{}},"name":{"70":{},"83":{},"527":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"19":{},"24":{},"25":{},"28":{},"37":{},"38":{},"41":{},"42":{},"43":{},"50":{},"53":{},"54":{},"60":{},"64":{},"70":{},"78":{},"80":{},"81":{},"83":{},"86":{},"88":{},"91":{},"92":{},"93":{},"97":{},"98":{},"99":{},"100":{},"101":{},"117":{},"152":{},"154":{},"157":{},"159":{},"160":{},"163":{},"166":{},"167":{},"168":{},"169":{},"171":{},"223":{},"229":{},"232":{},"233":{},"240":{},"241":{},"247":{},"259":{},"260":{},"261":{},"270":{},"274":{},"277":{},"278":{},"287":{},"299":{},"312":{},"316":{},"322":{},"325":{},"326":{},"327":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"359":{},"363":{},"372":{},"374":{},"380":{},"389":{},"390":{},"395":{},"413":{},"418":{},"428":{},"433":{},"455":{},"462":{},"463":{},"464":{},"484":{},"487":{},"488":{},"490":{},"491":{},"497":{},"514":{},"518":{},"526":{},"527":{},"528":{},"529":{},"531":{},"533":{},"534":{},"537":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["test\",\"rdbms\",\"mongodb",{"_index":1729,"title":{},"name":{},"text":{"37":{}},"component":{}}],["test.json",{"_index":1578,"title":{},"name":{},"text":{"25":{},"514":{}},"component":{}}],["testabl",{"_index":5437,"title":{},"name":{},"text":{"270":{}},"component":{}}],["testpag",{"_index":382,"title":{"3":{}},"name":{"3":{}},"text":{},"component":{}}],["tests.sh",{"_index":6838,"title":{},"name":{},"text":{"527":{}},"component":{}}],["tests/asf",{"_index":6863,"title":{},"name":{},"text":{"527":{},"531":{},"546":{}},"component":{}}],["tests/code/beam/input",{"_index":3611,"title":{},"name":{},"text":{"161":{}},"component":{}}],["tests/partitioning/0001",{"_index":2686,"title":{},"name":{},"text":{"66":{}},"component":{}}],["tests/partitioning/0002",{"_index":2692,"title":{},"name":{},"text":{"66":{}},"component":{}}],["tests/partitioning/0003",{"_index":2691,"title":{},"name":{},"text":{"66":{}},"component":{}}],["tests/partitioning/0004",{"_index":2684,"title":{},"name":{},"text":{"66":{}},"component":{}}],["tests/partitioning/0005",{"_index":2688,"title":{},"name":{},"text":{"66":{}},"component":{}}],["tests/partitioning/0006",{"_index":2682,"title":{},"name":{},"text":{"66":{}},"component":{}}],["tests/script",{"_index":6828,"title":{},"name":{},"text":{"527":{}},"component":{}}],["tests/scripts/run",{"_index":6837,"title":{},"name":{},"text":{"527":{}},"component":{}}],["tests/surefir",{"_index":6833,"title":{},"name":{},"text":{"527":{}},"component":{}}],["testtest",{"_index":2114,"title":{},"name":{},"text":{"42":{}},"component":{}}],["text",{"_index":20,"title":{"366":{},"367":{},"247-144":{},"247-168":{},"522-5":{}},"name":{},"text":{"1":{},"3":{},"7":{},"19":{},"23":{},"29":{},"30":{},"32":{},"34":{},"41":{},"44":{},"55":{},"56":{},"75":{},"76":{},"77":{},"81":{},"86":{},"100":{},"153":{},"163":{},"180":{},"200":{},"205":{},"209":{},"217":{},"220":{},"231":{},"234":{},"243":{},"244":{},"246":{},"247":{},"250":{},"251":{},"256":{},"273":{},"280":{},"289":{},"306":{},"307":{},"309":{},"310":{},"313":{},"316":{},"319":{},"326":{},"338":{},"340":{},"344":{},"352":{},"366":{},"367":{},"368":{},"379":{},"380":{},"381":{},"383":{},"388":{},"405":{},"412":{},"418":{},"453":{},"461":{},"464":{},"466":{},"472":{},"487":{},"488":{},"503":{},"504":{},"508":{},"522":{},"524":{},"527":{},"531":{},"541":{},"544":{},"546":{}},"component":{}}],["text\",\"lastloglinenr\":14,\"metrics\":[{\"componentname\":\"id\",\"componentcopy\":\"0\",\"metrics\":{\"read\":5,\"buff",{"_index":1796,"title":{},"name":{},"text":{"37":{}},"component":{}}],["text(12345.6789;\",#0.00",{"_index":5306,"title":{},"name":{},"text":{"247":{}},"component":{}}],["text(3;\"0",{"_index":5308,"title":{},"name":{},"text":{"247":{}},"component":{}}],["text([counter]+1",{"_index":4735,"title":{},"name":{},"text":{"247":{}},"component":{}}],["text([rowlimitinteger],\"0",{"_index":4728,"title":{},"name":{},"text":{"247":{}},"component":{}}],["text([startdatetim",{"_index":4730,"title":{},"name":{},"text":{"247":{}},"component":{}}],["text/xml;charset=utf",{"_index":2058,"title":{},"name":{},"text":{"42":{}},"component":{}}],["textbox",{"_index":637,"title":{},"name":{},"text":{"7":{}},"component":{}}],["textfil",{"_index":4232,"title":{},"name":{},"text":{"217":{},"367":{},"383":{}},"component":{}}],["textfileinput",{"_index":6065,"title":{},"name":{"366":{}},"text":{},"component":{}}],["textfileoutput",{"_index":6129,"title":{},"name":{"367":{}},"text":{},"component":{}}],["textvar",{"_index":709,"title":{},"name":{},"text":{"7":{}},"component":{}}],["tgz",{"_index":1030,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tgz:file://anyhost/dir/mytar.tgz!/somepath/somefil",{"_index":1044,"title":{},"name":{},"text":{"8":{}},"component":{}}],["th",{"_index":2947,"title":{},"name":{},"text":{"83":{}},"component":{}}],["thank",{"_index":7018,"title":{},"name":{},"text":{"533":{},"538":{}},"component":{}}],["that’",{"_index":750,"title":{},"name":{},"text":{"7":{},"56":{},"227":{},"247":{},"541":{}},"component":{}}],["theme",{"_index":1640,"title":{"541-7":{}},"name":{},"text":{"27":{},"541":{},"543":{}},"component":{}}],["themselv",{"_index":5815,"title":{},"name":{},"text":{"316":{},"348":{},"378":{},"483":{},"527":{},"533":{}},"component":{}}],["therefor",{"_index":2277,"title":{},"name":{},"text":{"50":{},"247":{},"251":{},"270":{},"283":{},"298":{},"536":{}},"component":{}}],["there’",{"_index":442,"title":{},"name":{},"text":{"5":{},"18":{},"26":{},"83":{},"182":{},"337":{}},"component":{}}],["these",{"_index":6571,"title":{},"name":{},"text":{"487":{},"488":{}},"component":{}}],["they’ll",{"_index":7052,"title":{},"name":{},"text":{"533":{}},"component":{}}],["they’r",{"_index":6893,"title":{},"name":{},"text":{"528":{}},"component":{}}],["they’v",{"_index":6491,"title":{},"name":{},"text":{"463":{}},"component":{}}],["the…​first",{"_index":6528,"title":{},"name":{},"text":{"471":{}},"component":{}}],["thindialog",{"_index":7228,"title":{},"name":{},"text":{"542":{}},"component":{}}],["thing",{"_index":194,"title":{},"name":{},"text":{"1":{},"7":{},"9":{},"18":{},"22":{},"40":{},"52":{},"56":{},"58":{},"90":{},"94":{},"98":{},"158":{},"160":{},"161":{},"162":{},"163":{},"167":{},"168":{},"247":{},"267":{},"389":{},"391":{},"395":{},"396":{},"398":{},"405":{},"426":{},"433":{},"519":{},"525":{},"528":{},"529":{},"531":{}},"component":{}}],["think",{"_index":654,"title":{},"name":{},"text":{"7":{},"18":{},"167":{},"168":{},"270":{},"345":{},"528":{}},"component":{}}],["third",{"_index":1429,"title":{},"name":{},"text":{"20":{},"46":{},"50":{},"428":{},"508":{},"509":{}},"component":{}}],["this.count",{"_index":5666,"title":{},"name":{},"text":{"291":{}},"component":{}}],["this[\"field",{"_index":5489,"title":{},"name":{},"text":{"270":{}},"component":{}}],["thorinsconpani",{"_index":4527,"title":{},"name":{},"text":{"241":{}},"component":{}}],["those",{"_index":362,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"55":{},"57":{},"78":{},"81":{},"117":{},"158":{},"170":{},"180":{},"206":{},"220":{},"222":{},"227":{},"245":{},"250":{},"273":{},"275":{},"281":{},"287":{},"324":{},"366":{},"433":{},"459":{},"511":{},"528":{},"529":{},"532":{},"533":{},"541":{}},"component":{}}],["though",{"_index":377,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"30":{},"49":{},"56":{},"84":{},"105":{},"157":{},"163":{},"227":{},"243":{},"247":{},"309":{},"336":{},"344":{}},"component":{}}],["thought",{"_index":6964,"title":{},"name":{},"text":{"530":{}},"component":{}}],["thousand",{"_index":2821,"title":{},"name":{},"text":{"78":{},"234":{},"264":{},"277":{},"279":{},"338":{},"400":{}},"component":{}}],["thread",{"_index":685,"title":{},"name":{},"text":{"7":{},"9":{},"56":{},"82":{},"163":{},"166":{},"168":{},"186":{},"220":{},"275":{},"298":{},"305":{},"344":{},"397":{},"433":{},"533":{},"537":{},"541":{}},"component":{}}],["threader",{"_index":2940,"title":{},"name":{},"text":{"83":{}},"component":{}}],["threads/subprocess",{"_index":3845,"title":{},"name":{},"text":{"166":{}},"component":{}}],["three",{"_index":1306,"title":{},"name":{},"text":{"17":{},"52":{},"55":{},"82":{},"247":{},"248":{},"270":{},"316":{},"321":{},"322":{},"325":{},"457":{},"481":{},"503":{}},"component":{}}],["threetenbp",{"_index":3228,"title":{},"name":{},"text":{"117":{}},"component":{}}],["threshold",{"_index":3454,"title":{},"name":{},"text":{"154":{},"172":{},"298":{},"347":{}},"component":{}}],["thrift",{"_index":4023,"title":{},"name":{},"text":{"194":{}},"component":{}}],["thrift://hivemetastore:9083",{"_index":4024,"title":{},"name":{},"text":{"194":{}},"component":{}}],["through",{"_index":106,"title":{"17-2":{},"84-2":{},"105-3":{}},"name":{},"text":{"1":{},"2":{},"4":{},"7":{},"8":{},"13":{},"14":{},"15":{},"16":{},"20":{},"21":{},"22":{},"23":{},"24":{},"27":{},"30":{},"34":{},"35":{},"38":{},"41":{},"43":{},"52":{},"53":{},"54":{},"56":{},"57":{},"61":{},"64":{},"68":{},"75":{},"78":{},"80":{},"81":{},"83":{},"84":{},"88":{},"90":{},"92":{},"94":{},"97":{},"102":{},"103":{},"105":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"169":{},"206":{},"216":{},"220":{},"222":{},"227":{},"232":{},"243":{},"244":{},"247":{},"251":{},"254":{},"287":{},"294":{},"303":{},"304":{},"311":{},"316":{},"322":{},"328":{},"332":{},"333":{},"334":{},"346":{},"363":{},"366":{},"372":{},"376":{},"388":{},"404":{},"407":{},"427":{},"428":{},"429":{},"430":{},"431":{},"432":{},"457":{},"465":{},"481":{},"483":{},"503":{},"513":{},"518":{},"533":{},"541":{},"542":{},"543":{}},"component":{}}],["throughout",{"_index":166,"title":{},"name":{},"text":{"1":{},"165":{},"226":{}},"component":{}}],["throughput",{"_index":3846,"title":{},"name":{},"text":{"167":{},"298":{},"381":{}},"component":{}}],["throughput_bas",{"_index":3805,"title":{},"name":{},"text":{"165":{}},"component":{}}],["throw",{"_index":843,"title":{},"name":{},"text":{"7":{},"172":{},"189":{},"235":{},"312":{},"338":{},"346":{},"372":{},"374":{},"529":{},"544":{}},"component":{}}],["thrown",{"_index":930,"title":{},"name":{},"text":{"7":{},"154":{},"309":{},"360":{},"378":{}},"component":{}}],["thu",{"_index":2859,"title":{},"name":{},"text":{"81":{},"179":{},"222":{},"239":{},"346":{},"357":{}},"component":{}}],["thumb",{"_index":7226,"title":{},"name":{},"text":{"542":{}},"component":{}}],["thursday",{"_index":4899,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tick",{"_index":5404,"title":{},"name":{},"text":{"261":{}},"component":{}}],["ticket",{"_index":478,"title":{},"name":{},"text":{"5":{},"6":{},"431":{},"519":{}},"component":{}}],["tidbit",{"_index":3374,"title":{},"name":{},"text":{"151":{},"389":{}},"component":{}}],["tidi",{"_index":1117,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["tight",{"_index":6146,"title":{},"name":{},"text":{"372":{}},"component":{}}],["tika",{"_index":2869,"title":{"180":{}},"name":{"180":{}},"text":{"81":{},"86":{},"180":{}},"component":{}}],["time",{"_index":417,"title":{"154-10":{},"154-11":{},"247-40":{}},"name":{},"text":{"4":{},"7":{},"9":{},"15":{},"23":{},"26":{},"28":{},"29":{},"36":{},"43":{},"49":{},"50":{},"53":{},"54":{},"55":{},"56":{},"76":{},"78":{},"83":{},"95":{},"101":{},"103":{},"154":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"176":{},"177":{},"179":{},"185":{},"186":{},"194":{},"196":{},"198":{},"201":{},"202":{},"205":{},"208":{},"211":{},"220":{},"222":{},"227":{},"228":{},"233":{},"243":{},"244":{},"247":{},"256":{},"263":{},"264":{},"267":{},"273":{},"274":{},"275":{},"276":{},"277":{},"285":{},"287":{},"292":{},"304":{},"305":{},"309":{},"310":{},"314":{},"319":{},"322":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"337":{},"338":{},"341":{},"345":{},"346":{},"352":{},"366":{},"367":{},"368":{},"378":{},"379":{},"383":{},"391":{},"394":{},"396":{},"433":{},"434":{},"435":{},"438":{},"439":{},"440":{},"442":{},"445":{},"449":{},"451":{},"453":{},"454":{},"461":{},"462":{},"463":{},"465":{},"466":{},"467":{},"468":{},"470":{},"477":{},"478":{},"479":{},"481":{},"487":{},"488":{},"489":{},"499":{},"500":{},"501":{},"503":{},"506":{},"507":{},"508":{},"509":{},"510":{},"514":{},"519":{},"530":{},"532":{},"533":{},"544":{}},"component":{}}],["time(0;0;0",{"_index":4863,"title":{},"name":{},"text":{"247":{}},"component":{}}],["time(11",{"_index":4875,"title":{},"name":{},"text":{"247":{}},"component":{}}],["time(11;0",{"_index":4871,"title":{},"name":{},"text":{"247":{}},"component":{}}],["time(11;125;144)*60*60*24",{"_index":4868,"title":{},"name":{},"text":{"247":{}},"component":{}}],["time(23;59;59)*60*60*24",{"_index":4865,"title":{},"name":{},"text":{"247":{}},"component":{}}],["timedelta",{"_index":2557,"title":{},"name":{},"text":{"56":{}},"component":{}}],["timedelta(minutes=5",{"_index":2574,"title":{},"name":{},"text":{"56":{}},"component":{}}],["timeout",{"_index":883,"title":{"154-7":{}},"name":{},"text":{"7":{},"65":{},"153":{},"154":{},"167":{},"202":{},"208":{},"211":{},"224":{},"260":{},"261":{},"263":{},"264":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"461":{},"462":{},"463":{},"480":{},"485":{},"491":{},"497":{},"500":{},"501":{},"502":{}},"component":{}}],["timeout(m",{"_index":3462,"title":{},"name":{},"text":{"154":{}},"component":{}}],["timeparam",{"_index":4811,"title":{},"name":{},"text":{"247":{}},"component":{}}],["timer",{"_index":896,"title":{},"name":{},"text":{"7":{},"19":{},"41":{}},"component":{}}],["timestamp",{"_index":806,"title":{"201":{}},"name":{},"text":{"7":{},"52":{},"71":{},"81":{},"86":{},"133":{},"186":{},"201":{},"216":{},"244":{},"253":{},"254":{},"273":{},"275":{},"285":{},"331":{},"494":{},"544":{}},"component":{}}],["timevalu",{"_index":4655,"title":{"247-41":{}},"name":{},"text":{"247":{}},"component":{}}],["timevalue(\"12:56:45",{"_index":4883,"title":{},"name":{},"text":{"247":{}},"component":{}}],["timevalue(\"2004",{"_index":4885,"title":{},"name":{},"text":{"247":{}},"component":{}}],["timezon",{"_index":2519,"title":{},"name":{},"text":{"56":{}},"component":{}}],["timezone('utc",{"_index":2520,"title":{},"name":{},"text":{"56":{}},"component":{}}],["tinctitl",{"_index":7241,"title":{},"name":{},"text":{"542":{}},"component":{}}],["tini",{"_index":2974,"title":{},"name":{},"text":{"85":{}},"component":{}}],["tip",{"_index":1096,"title":{"94":{},"273-2":{},"297-4":{},"297-5":{},"466-7":{},"490-3":{}},"name":{},"text":{"9":{},"94":{},"161":{},"162":{},"222":{},"309":{},"466":{},"513":{},"533":{}},"component":{}}],["titan",{"_index":4445,"title":{},"name":{},"text":{"241":{}},"component":{}}],["titl",{"_index":669,"title":{},"name":{},"text":{"7":{},"55":{},"235":{},"241":{},"260":{},"469":{}},"component":{}}],["tl",{"_index":3828,"title":{},"name":{},"text":{"165":{},"278":{},"280":{},"462":{}},"component":{}}],["tmp",{"_index":1074,"title":{},"name":{},"text":{"8":{},"42":{},"105":{},"168":{},"262":{},"272":{},"347":{},"537":{}},"component":{}}],["tmp/hop",{"_index":3498,"title":{},"name":{},"text":{"158":{},"161":{},"251":{}},"component":{}}],["tmp/hop/somefile.txt",{"_index":5360,"title":{},"name":{},"text":{"251":{}},"component":{}}],["tmp/hop/tempfile.txt",{"_index":5391,"title":{},"name":{},"text":{"258":{}},"component":{}}],["tmp/release_check",{"_index":7085,"title":{},"name":{},"text":{"537":{}},"component":{}}],["tmp/spark",{"_index":3646,"title":{},"name":{},"text":{"161":{}},"component":{}}],["tmp://dir/somefile.txt",{"_index":1075,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tn",{"_index":3316,"title":{},"name":{},"text":{"133":{},"247":{}},"component":{}}],["to",{"_index":5982,"title":{},"name":{},"text":{"346":{}},"component":{}}],["today",{"_index":4656,"title":{"247-42":{}},"name":{},"text":{"247":{},"256":{}},"component":{}}],["today()>date(2006;1;3",{"_index":4887,"title":{},"name":{},"text":{"247":{}},"component":{}}],["today’",{"_index":2343,"title":{},"name":{},"text":{"52":{}},"component":{}}],["todo",{"_index":2829,"title":{},"name":{},"text":{"78":{},"167":{},"168":{},"529":{}},"component":{}}],["togeth",{"_index":2366,"title":{},"name":{},"text":{"52":{},"56":{},"78":{},"84":{},"103":{},"170":{},"200":{},"227":{},"247":{},"291":{},"294":{},"299":{},"381":{},"433":{},"511":{},"513":{}},"component":{}}],["toggl",{"_index":1469,"title":{},"name":{},"text":{"22":{},"291":{}},"component":{}}],["tointeg",{"_index":6173,"title":{},"name":{},"text":{"372":{}},"component":{}}],["token",{"_index":2906,"title":{"368":{},"368-6":{}},"name":{},"text":{"81":{},"86":{},"99":{},"101":{},"149":{},"152":{},"250":{},"316":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"368":{}},"component":{}}],["token_url",{"_index":5396,"title":{},"name":{},"text":{"258":{}},"component":{}}],["tokenreplac",{"_index":6135,"title":{},"name":{"368":{}},"text":{},"component":{}}],["tokensfold",{"_index":3149,"title":{},"name":{},"text":{"101":{}},"component":{}}],["told",{"_index":5888,"title":{},"name":{},"text":{"324":{},"325":{}},"component":{}}],["toler",{"_index":3848,"title":{},"name":{},"text":{"167":{},"168":{},"298":{},"429":{}},"component":{}}],["toll",{"_index":5028,"title":{},"name":{},"text":{"247":{}},"component":{}}],["tomcat",{"_index":1580,"title":{"543-3":{},"543-6":{}},"name":{},"text":{"25":{},"37":{},"543":{}},"component":{}}],["tomorrow",{"_index":5382,"title":{},"name":{},"text":{"256":{}},"component":{}}],["tonguetwist",{"_index":4463,"title":{},"name":{},"text":{"241":{}},"component":{}}],["took",{"_index":2444,"title":{},"name":{},"text":{"55":{}},"component":{}}],["tool",{"_index":0,"title":{"19":{},"152":{},"1-1":{},"25-3":{},"48-1":{},"49-1":{},"75-5":{},"418-1":{}},"name":{"19":{},"418":{}},"text":{"1":{},"2":{},"4":{},"7":{},"14":{},"17":{},"19":{},"21":{},"22":{},"25":{},"34":{},"37":{},"38":{},"39":{},"44":{},"46":{},"47":{},"48":{},"49":{},"50":{},"54":{},"55":{},"75":{},"90":{},"97":{},"98":{},"99":{},"101":{},"152":{},"159":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"295":{},"363":{},"365":{},"411":{},"412":{},"413":{},"414":{},"415":{},"416":{},"418":{},"419":{},"428":{},"433":{},"513":{},"514":{},"519":{},"525":{},"528":{},"535":{}},"component":{}}],["toolbar",{"_index":776,"title":{"23-1":{},"80-1":{}},"name":{},"text":{"7":{},"15":{},"16":{},"17":{},"22":{},"23":{},"27":{},"29":{},"30":{},"31":{},"35":{},"80":{},"83":{},"93":{},"104":{},"389":{}},"component":{}}],["toolbox",{"_index":6373,"title":{},"name":{},"text":{"433":{}},"component":{}}],["tools/edit",{"_index":3121,"title":{},"name":{},"text":{"97":{}},"component":{}}],["tools/gener",{"_index":3780,"title":{},"name":{},"text":{"163":{}},"component":{}}],["tooltip",{"_index":1620,"title":{},"name":{},"text":{"27":{},"532":{}},"component":{}}],["top",{"_index":1174,"title":{},"name":{},"text":{"10":{},"23":{},"24":{},"31":{},"33":{},"36":{},"41":{},"56":{},"78":{},"80":{},"85":{},"168":{},"235":{},"247":{},"519":{},"528":{},"529":{},"533":{},"544":{}},"component":{}}],["top).not",{"_index":5794,"title":{},"name":{},"text":{"314":{}},"component":{}}],["top1",{"_index":5691,"title":{},"name":{},"text":{"292":{}},"component":{}}],["top1.first,ag",{"_index":5696,"title":{},"name":{},"text":{"292":{}},"component":{}}],["topic",{"_index":360,"title":{},"name":{},"text":{"2":{},"4":{},"18":{},"21":{},"26":{},"54":{},"67":{},"73":{},"84":{},"86":{},"192":{},"193":{},"196":{},"197":{},"222":{},"241":{},"275":{},"276":{}},"component":{}}],["topolog",{"_index":3914,"title":{},"name":{},"text":{"169":{}},"component":{}}],["tore",{"_index":5983,"title":{},"name":{},"text":{"346":{}},"component":{}}],["total",{"_index":1056,"title":{},"name":{},"text":{"8":{},"154":{},"217":{},"220":{},"234":{},"251":{},"253":{},"254":{},"256":{},"258":{},"267":{},"310":{},"318":{},"331":{},"341":{},"361":{},"366":{},"367":{},"379":{},"383":{},"454":{}},"component":{}}],["touch",{"_index":6339,"title":{},"name":{},"text":{"430":{}},"component":{}}],["tour",{"_index":1311,"title":{},"name":{},"text":{"17":{}},"component":{}}],["toward",{"_index":2827,"title":{},"name":{},"text":{"78":{},"85":{},"103":{},"154":{},"247":{}},"component":{}}],["town",{"_index":4438,"title":{},"name":{},"text":{"241":{}},"component":{}}],["tp",{"_index":999,"title":{},"name":{},"text":{"8":{}},"component":{}}],["tra",{"_index":5524,"title":{},"name":{},"text":{"273":{}},"component":{}}],["trace",{"_index":951,"title":{},"name":{},"text":{"7":{},"9":{},"168":{},"391":{}},"component":{}}],["track",{"_index":1882,"title":{},"name":{},"text":{"40":{},"167":{},"227":{},"275":{},"370":{},"492":{},"521":{},"525":{},"530":{}},"component":{}}],["tracker",{"_index":872,"title":{},"name":{},"text":{"7":{}},"component":{}}],["trade",{"_index":6607,"title":{},"name":{},"text":{"500":{}},"component":{}}],["tradit",{"_index":4331,"title":{},"name":{},"text":{"228":{}},"component":{}}],["traffic",{"_index":1927,"title":{},"name":{},"text":{"41":{},"465":{}},"component":{}}],["trail",{"_index":4279,"title":{},"name":{},"text":{"222":{},"247":{},"358":{}},"component":{}}],["tran",{"_index":6990,"title":{},"name":{},"text":{"532":{}},"component":{}}],["tranform",{"_index":3930,"title":{},"name":{},"text":{"172":{},"241":{}},"component":{}}],["transact",{"_index":2856,"title":{"154-11":{}},"name":{},"text":{"81":{},"154":{},"169":{},"299":{},"364":{},"382":{},"431":{},"433":{},"510":{}},"component":{}}],["transfer",{"_index":1932,"title":{},"name":{},"text":{"41":{},"50":{},"170":{},"218":{},"289":{},"303":{},"319":{},"323":{},"461":{},"463":{},"487":{},"488":{},"511":{}},"component":{}}],["transform",{"_index":92,"title":{"86":{},"203":{},"204":{},"385":{},"508":{},"9-3":{},"15-2":{},"15-3":{},"24-5":{},"42-15":{},"53-2":{},"53-3":{},"54-2":{},"54-3":{},"55-8":{},"55-13":{},"75-14":{},"76-3":{},"76-6":{},"76-9":{},"78-4":{},"78-5":{},"81-5":{},"83-8":{},"87-3":{},"87-5":{},"163-6":{},"163-7":{},"163-8":{},"263-5":{},"263-6":{},"287-7":{},"376-3":{},"395-1":{},"427-1":{},"427-2":{},"428-1":{},"429-4":{},"430-2":{},"432-5":{},"532-5":{},"536-5":{}},"name":{"86":{},"409":{}},"text":{"1":{},"4":{},"5":{},"7":{},"9":{},"10":{},"13":{},"15":{},"18":{},"19":{},"23":{},"24":{},"27":{},"29":{},"30":{},"34":{},"36":{},"39":{},"41":{},"42":{},"43":{},"46":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"59":{},"61":{},"64":{},"65":{},"67":{},"68":{},"70":{},"71":{},"73":{},"75":{},"76":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"88":{},"94":{},"95":{},"105":{},"106":{},"151":{},"152":{},"153":{},"155":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"255":{},"256":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"282":{},"283":{},"284":{},"285":{},"286":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"302":{},"303":{},"304":{},"305":{},"306":{},"307":{},"308":{},"309":{},"310":{},"311":{},"312":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"321":{},"322":{},"323":{},"324":{},"325":{},"326":{},"327":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"336":{},"337":{},"338":{},"339":{},"340":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"356":{},"357":{},"358":{},"359":{},"360":{},"361":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"384":{},"385":{},"386":{},"387":{},"388":{},"389":{},"392":{},"393":{},"395":{},"396":{},"397":{},"398":{},"400":{},"403":{},"404":{},"409":{},"414":{},"427":{},"431":{},"432":{},"433":{},"437":{},"453":{},"455":{},"466":{},"481":{},"483":{},"489":{},"503":{},"505":{},"507":{},"508":{},"511":{},"518":{},"519":{},"520":{},"525":{},"527":{},"530":{},"531":{},"532":{},"534":{},"536":{},"544":{}},"component":{}}],["transform(",{"_index":3359,"title":{},"name":{},"text":{"151":{},"152":{},"158":{},"159":{},"160":{},"161":{},"162":{},"389":{}},"component":{}}],["transform.addrowlistener(new",{"_index":7312,"title":{},"name":{},"text":{"544":{}},"component":{}}],["transform/act",{"_index":847,"title":{},"name":{},"text":{"7":{}},"component":{}}],["transformation/pipelin",{"_index":6734,"title":{},"name":{},"text":{"518":{}},"component":{}}],["transformcopynr",{"_index":2746,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformdialogfragmenttyp",{"_index":6809,"title":{},"name":{},"text":{"525":{}},"component":{}}],["transformdur",{"_index":2759,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformend",{"_index":2758,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformerror",{"_index":2756,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlinesinput",{"_index":2752,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlinesoutput",{"_index":2753,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlinesread",{"_index":2750,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlinesreject",{"_index":2755,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlinesupd",{"_index":2754,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlineswritten",{"_index":2751,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformlogchannelid",{"_index":2748,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformloggingtext",{"_index":2749,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformmeta",{"_index":6992,"title":{},"name":{},"text":{"532":{},"536":{},"544":{}},"component":{}}],["transformmeta(\"1m",{"_index":7288,"title":{},"name":{},"text":{"544":{}},"component":{}}],["transformmeta(\"output",{"_index":7292,"title":{},"name":{},"text":{"544":{}},"component":{}}],["transformnam",{"_index":2745,"title":{},"name":{},"text":{"76":{},"310":{},"337":{}},"component":{}}],["transformnr",{"_index":6004,"title":{},"name":{},"text":{"352":{},"367":{},"383":{}},"component":{}}],["transformplugintyp",{"_index":6808,"title":{},"name":{},"text":{"525":{}},"component":{}}],["transforms/fil",{"_index":6975,"title":{},"name":{},"text":{"531":{}},"component":{}}],["transforms/files/simpl",{"_index":5979,"title":{},"name":{},"text":{"345":{}},"component":{}}],["transforms/get",{"_index":5349,"title":{},"name":{},"text":{"250":{}},"component":{}}],["transforms/plugin",{"_index":1617,"title":{},"name":{},"text":{"27":{}},"component":{}}],["transformstart",{"_index":2757,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transformstatusdescript",{"_index":2747,"title":{},"name":{},"text":{"76":{},"310":{}},"component":{}}],["transform’",{"_index":1527,"title":{"55-7":{}},"name":{},"text":{"24":{},"78":{},"82":{},"83":{},"222":{},"234":{},"288":{},"309":{},"311":{},"324":{},"325":{},"368":{}},"component":{}}],["transientexcept",{"_index":3469,"title":{},"name":{},"text":{"154":{}},"component":{}}],["transit",{"_index":1141,"title":{},"name":{},"text":{"9":{},"213":{},"247":{},"398":{}},"component":{}}],["translat",{"_index":70,"title":{"19-8":{},"48-1":{},"528-2":{},"528-4":{},"528-7":{},"528-9":{},"528-10":{}},"name":{"48":{},"419":{}},"text":{"1":{},"19":{},"27":{},"48":{},"49":{},"163":{},"247":{},"418":{},"419":{},"433":{},"525":{},"528":{}},"component":{}}],["translator.bat",{"_index":1419,"title":{},"name":{},"text":{"19":{},"48":{}},"component":{}}],["translator.sh",{"_index":1420,"title":{},"name":{},"text":{"19":{},"48":{},"528":{}},"component":{}}],["translator.xml",{"_index":1418,"title":{},"name":{},"text":{"19":{},"48":{},"528":{}},"component":{}}],["transmeta",{"_index":6988,"title":{},"name":{},"text":{"532":{}},"component":{}}],["transmit",{"_index":3429,"title":{},"name":{},"text":{"153":{}},"component":{}}],["transpar",{"_index":2434,"title":{},"name":{},"text":{"55":{}},"component":{}}],["transport",{"_index":4198,"title":{},"name":{},"text":{"207":{}},"component":{}}],["transposit",{"_index":5327,"title":{},"name":{},"text":{"248":{}},"component":{}}],["trap",{"_index":6585,"title":{"491":{}},"name":{},"text":{"491":{}},"component":{}}],["travel",{"_index":2934,"title":{},"name":{},"text":{"82":{}},"component":{}}],["travers",{"_index":6350,"title":{},"name":{},"text":{"432":{}},"component":{}}],["tread",{"_index":1931,"title":{},"name":{},"text":{"41":{}},"component":{}}],["treat",{"_index":400,"title":{},"name":{},"text":{"4":{},"56":{},"233":{},"298":{},"316":{},"366":{}},"component":{}}],["tree",{"_index":1473,"title":{"23-2":{},"31-3":{}},"name":{},"text":{"23":{},"27":{},"29":{},"30":{},"31":{},"87":{},"213":{},"246":{},"270":{},"372":{},"381":{}},"component":{}}],["tri",{"_index":1059,"title":{},"name":{},"text":{"8":{},"20":{},"25":{},"29":{},"75":{},"79":{},"93":{},"101":{},"163":{},"170":{},"210":{},"211":{},"220":{},"232":{},"235":{},"243":{},"248":{},"270":{},"297":{},"366":{},"368":{},"372":{},"377":{},"436":{},"467":{},"480":{},"502":{},"511":{}},"component":{}}],["triangl",{"_index":2969,"title":{},"name":{},"text":{"85":{}},"component":{}}],["trick",{"_index":6352,"title":{},"name":{},"text":{"432":{}},"component":{}}],["trigger",{"_index":1992,"title":{},"name":{},"text":{"41":{},"43":{},"55":{},"56":{},"94":{},"167":{},"202":{},"203":{},"263":{},"275":{},"443":{},"470":{},"483":{},"513":{}},"component":{}}],["trim",{"_index":176,"title":{"247-169":{}},"name":{},"text":{"1":{},"217":{},"220":{},"222":{},"234":{},"247":{},"250":{},"258":{},"260":{},"273":{},"277":{},"279":{},"298":{},"313":{},"316":{},"331":{},"346":{},"358":{},"366":{},"367":{},"373":{},"381":{},"386":{},"405":{}},"component":{}}],["trimtyp",{"_index":5399,"title":{},"name":{},"text":{"258":{}},"component":{}}],["trip",{"_index":3771,"title":{},"name":{},"text":{"163":{},"216":{},"227":{},"364":{}},"component":{}}],["trivial",{"_index":3523,"title":{},"name":{},"text":{"159":{},"166":{},"247":{}},"component":{}}],["tro",{"_index":5352,"title":{},"name":{},"text":{"250":{}},"component":{}}],["troubelshoot",{"_index":2865,"title":{},"name":{},"text":{"81":{}},"component":{}}],["troubl",{"_index":5484,"title":{},"name":{},"text":{"270":{},"542":{}},"component":{}}],["troubleshoot",{"_index":2854,"title":{"81-3":{},"130-4":{}},"name":{},"text":{"81":{},"287":{}},"component":{}}],["true",{"_index":85,"title":{"247-79":{}},"name":{},"text":{"1":{},"7":{},"8":{},"13":{},"19":{},"37":{},"41":{},"61":{},"65":{},"67":{},"68":{},"71":{},"73":{},"78":{},"84":{},"90":{},"102":{},"107":{},"130":{},"150":{},"152":{},"157":{},"167":{},"189":{},"197":{},"205":{},"210":{},"211":{},"212":{},"216":{},"227":{},"230":{},"236":{},"246":{},"247":{},"265":{},"269":{},"276":{},"298":{},"324":{},"326":{},"346":{},"359":{},"372":{},"389":{},"399":{},"404":{},"427":{},"437":{},"450":{},"453":{},"456":{},"457":{},"458":{},"460":{},"480":{},"487":{},"490":{},"496":{},"502":{},"503":{},"522":{},"524":{},"527":{},"529":{},"532":{},"543":{},"544":{}},"component":{}}],["true/fals",{"_index":1655,"title":{},"name":{},"text":{"29":{},"76":{},"102":{},"103":{},"152":{},"246":{}},"component":{}}],["true/false/main",{"_index":4627,"title":{},"name":{},"text":{"246":{}},"component":{}}],["true/i",{"_index":4308,"title":{},"name":{},"text":{"227":{}},"component":{}}],["truli",{"_index":243,"title":{},"name":{},"text":{"2":{}},"component":{}}],["trunc",{"_index":4718,"title":{"247-142":{}},"name":{},"text":{"247":{}},"component":{}}],["trunc(0.45",{"_index":5136,"title":{},"name":{},"text":{"247":{}},"component":{}}],["trunc(8.9",{"_index":5135,"title":{},"name":{},"text":{"247":{}},"component":{}}],["trunc(numb",{"_index":5134,"title":{},"name":{},"text":{"247":{}},"component":{}}],["truncat",{"_index":2713,"title":{"498":{}},"name":{},"text":{"71":{},"189":{},"208":{},"234":{},"247":{},"289":{},"292":{},"303":{},"311":{},"315":{},"352":{},"364":{},"365":{},"376":{},"470":{},"493":{},"498":{}},"component":{}}],["truncatet",{"_index":6600,"title":{},"name":{"498":{}},"text":{},"component":{}}],["trust",{"_index":5577,"title":{},"name":{},"text":{"277":{},"278":{}},"component":{}}],["trustcacert",{"_index":1952,"title":{},"name":{},"text":{"41":{}},"component":{}}],["trustservercertif",{"_index":3287,"title":{},"name":{},"text":{"130":{}},"component":{}}],["truststor",{"_index":5832,"title":{},"name":{},"text":{"319":{}},"component":{}}],["tsl",{"_index":6505,"title":{},"name":{},"text":{"466":{}},"component":{}}],["tsv",{"_index":4605,"title":{},"name":{},"text":{"243":{}},"component":{}}],["ttl",{"_index":4202,"title":{},"name":{},"text":{"208":{}},"component":{}}],["tue",{"_index":6114,"title":{},"name":{},"text":{"366":{}},"component":{}}],["tuesday",{"_index":5096,"title":{},"name":{},"text":{"247":{},"366":{}},"component":{}}],["tumbl",{"_index":4073,"title":{},"name":{},"text":{"202":{}},"component":{}}],["tune",{"_index":579,"title":{"186-4":{}},"name":{},"text":{"5":{},"61":{},"97":{},"154":{}},"component":{}}],["turkish",{"_index":5222,"title":{},"name":{},"text":{"247":{}},"component":{}}],["turn",{"_index":656,"title":{},"name":{},"text":{"7":{},"158":{},"170":{},"178":{},"239":{},"248":{},"274":{},"316":{},"317":{},"427":{},"511":{}},"component":{}}],["tutori",{"_index":1216,"title":{},"name":{},"text":{"10":{},"50":{}},"component":{}}],["tweak",{"_index":458,"title":{},"name":{},"text":{"5":{},"83":{}},"component":{}}],["twelv",{"_index":4797,"title":{},"name":{},"text":{"247":{}},"component":{}}],["twice",{"_index":4889,"title":{},"name":{},"text":{"247":{}},"component":{}}],["twinpeak",{"_index":4586,"title":{},"name":{},"text":{"241":{}},"component":{}}],["two",{"_index":736,"title":{"157":{}},"name":{},"text":{"7":{},"15":{},"16":{},"24":{},"25":{},"30":{},"52":{},"56":{},"57":{},"77":{},"78":{},"80":{},"82":{},"83":{},"85":{},"87":{},"112":{},"157":{},"158":{},"167":{},"169":{},"170":{},"181":{},"205":{},"247":{},"248":{},"251":{},"262":{},"269":{},"270":{},"280":{},"284":{},"285":{},"287":{},"291":{},"299":{},"316":{},"321":{},"322":{},"345":{},"361":{},"363":{},"366":{},"433":{},"460":{},"490":{},"510":{},"511":{},"527":{}},"component":{}}],["twowaypasswordencod",{"_index":6910,"title":{},"name":{},"text":{"529":{}},"component":{}}],["twowaypasswordencoderplugintyp",{"_index":6800,"title":{},"name":{},"text":{"525":{}},"component":{}}],["txt",{"_index":1466,"title":{},"name":{},"text":{"22":{},"30":{},"158":{},"234":{},"366":{},"367":{},"439":{},"441":{},"459":{},"461":{},"481":{},"487":{},"488":{},"489":{},"503":{},"527":{}},"component":{}}],["txt.contains(expectedvalu",{"_index":6856,"title":{},"name":{},"text":{"527":{}},"component":{}}],["txt.contains(expectedvari",{"_index":6851,"title":{},"name":{},"text":{"527":{}},"component":{}}],["type",{"_index":2,"title":{"156":{},"1-2":{},"8-3":{},"13-2":{},"31-3":{},"37-5":{},"37-11":{},"37-12":{},"62-3":{},"64-1":{},"75-9":{},"202-4":{},"205-4":{},"241-4":{},"256-4":{},"270-7":{},"346-5":{},"404-1":{},"429-2":{},"432-3":{},"530-2":{}},"name":{"156":{},"404":{}},"text":{"1":{},"7":{},"8":{},"9":{},"11":{},"22":{},"24":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"37":{},"40":{},"41":{},"42":{},"43":{},"46":{},"50":{},"52":{},"53":{},"54":{},"55":{},"59":{},"60":{},"61":{},"62":{},"64":{},"65":{},"68":{},"69":{},"70":{},"71":{},"74":{},"76":{},"78":{},"83":{},"85":{},"88":{},"93":{},"97":{},"98":{},"99":{},"100":{},"101":{},"103":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"156":{},"160":{},"163":{},"165":{},"169":{},"171":{},"174":{},"175":{},"178":{},"179":{},"180":{},"181":{},"182":{},"185":{},"188":{},"192":{},"193":{},"194":{},"195":{},"196":{},"198":{},"199":{},"200":{},"202":{},"205":{},"206":{},"214":{},"215":{},"216":{},"217":{},"219":{},"220":{},"221":{},"222":{},"223":{},"227":{},"230":{},"233":{},"234":{},"235":{},"236":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"249":{},"250":{},"251":{},"252":{},"253":{},"254":{},"256":{},"257":{},"258":{},"260":{},"261":{},"262":{},"266":{},"267":{},"270":{},"271":{},"273":{},"274":{},"275":{},"277":{},"279":{},"280":{},"284":{},"286":{},"287":{},"288":{},"289":{},"291":{},"293":{},"294":{},"295":{},"297":{},"298":{},"299":{},"300":{},"304":{},"305":{},"308":{},"309":{},"310":{},"311":{},"313":{},"315":{},"316":{},"319":{},"320":{},"323":{},"324":{},"325":{},"328":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"344":{},"346":{},"349":{},"351":{},"354":{},"355":{},"358":{},"359":{},"361":{},"363":{},"366":{},"367":{},"368":{},"372":{},"373":{},"374":{},"378":{},"379":{},"381":{},"383":{},"386":{},"388":{},"397":{},"400":{},"405":{},"427":{},"428":{},"433":{},"451":{},"453":{},"454":{},"457":{},"462":{},"466":{},"470":{},"471":{},"474":{},"476":{},"480":{},"481":{},"488":{},"490":{},"491":{},"492":{},"503":{},"512":{},"513":{},"525":{},"528":{},"529":{},"530":{},"534":{}},"component":{}}],["type(",{"_index":6507,"title":{},"name":{},"text":{"466":{}},"component":{}}],["type/format",{"_index":6001,"title":{},"name":{},"text":{"350":{}},"component":{}}],["type/lib",{"_index":1229,"title":{},"name":{},"text":{"11":{}},"component":{}}],["type='bind",{"_index":2531,"title":{},"name":{},"text":{"56":{}},"component":{}}],["type_aggr_averag",{"_index":5839,"title":{},"name":{},"text":{"320":{}},"component":{}}],["type_aggr_concat_comma",{"_index":5843,"title":{},"name":{},"text":{"320":{}},"component":{}}],["type_aggr_count_al",{"_index":5842,"title":{},"name":{},"text":{"320":{}},"component":{}}],["type_aggr_max",{"_index":5841,"title":{},"name":{},"text":{"320":{}},"component":{}}],["type_aggr_min",{"_index":5840,"title":{},"name":{},"text":{"320":{}},"component":{}}],["type_aggr_non",{"_index":5837,"title":{},"name":{},"text":{"320":{}},"component":{}}],["type_aggr_sum",{"_index":5838,"title":{},"name":{},"text":{"320":{}},"component":{}}],["typefield",{"_index":5860,"title":{},"name":{},"text":{"323":{}},"component":{}}],["typic",{"_index":111,"title":{},"name":{},"text":{"1":{},"2":{},"13":{},"52":{},"64":{},"78":{},"79":{},"84":{},"91":{},"92":{},"102":{},"103":{},"186":{},"207":{},"216":{},"217":{},"220":{},"227":{},"247":{},"271":{},"287":{},"298":{},"364":{},"366":{},"367":{},"376":{},"380":{},"388":{},"389":{},"404":{},"405":{},"409":{},"410":{},"433":{},"505":{},"528":{},"544":{}},"component":{}}],["u",{"_index":1905,"title":{},"name":{},"text":{"41":{},"316":{},"321":{}},"component":{}}],["u+0049",{"_index":5223,"title":{},"name":{},"text":{"247":{}},"component":{}}],["u+0069",{"_index":5312,"title":{},"name":{},"text":{"247":{}},"component":{}}],["u+0130",{"_index":5313,"title":{},"name":{},"text":{"247":{}},"component":{}}],["u+0131",{"_index":5224,"title":{},"name":{},"text":{"247":{}},"component":{}}],["u.",{"_index":4800,"title":{},"name":{},"text":{"247":{}},"component":{}}],["u00a4",{"_index":6105,"title":{},"name":{},"text":{"366":{}},"component":{}}],["u2030",{"_index":6103,"title":{},"name":{},"text":{"366":{}},"component":{}}],["u=0",{"_index":1368,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{},"83":{}},"component":{}}],["uat",{"_index":146,"title":{},"name":{},"text":{"1":{},"13":{},"90":{},"402":{},"408":{}},"component":{}}],["ucanaccess",{"_index":3162,"title":{},"name":{},"text":{"106":{}},"component":{}}],["udjc",{"_index":6781,"title":{"524":{}},"name":{"524":{}},"text":{"524":{}},"component":{}}],["ui",{"_index":1591,"title":{"41-13":{},"525-3":{}},"name":{},"text":{"25":{},"27":{},"50":{},"91":{},"93":{},"161":{},"168":{},"261":{},"514":{},"518":{},"527":{},"530":{},"532":{},"533":{},"534":{},"541":{}},"component":{}}],["ui/src/main/resources/org/apache/hop/ui/hopgui/messag",{"_index":6885,"title":{},"name":{},"text":{"528":{}},"component":{}}],["ui/src/main/resources/org/apache/hop/ui/hopgui/messages/messages_en_us.properti",{"_index":6886,"title":{},"name":{},"text":{"528":{}},"component":{}}],["ui/src/resourc",{"_index":6949,"title":{},"name":{},"text":{"530":{}},"component":{}}],["uisession/display",{"_index":7185,"title":{},"name":{},"text":{"541":{}},"component":{}}],["ultim",{"_index":7096,"title":{},"name":{},"text":{"537":{}},"component":{}}],["un",{"_index":1668,"title":{},"name":{},"text":{"30":{},"367":{}},"component":{}}],["unabl",{"_index":3627,"title":{},"name":{},"text":{"161":{},"247":{}},"component":{}}],["unari",{"_index":5147,"title":{},"name":{},"text":{"247":{}},"component":{}}],["unauthor",{"_index":5831,"title":{},"name":{},"text":{"319":{}},"component":{}}],["unavail",{"_index":3466,"title":{},"name":{},"text":{"154":{}},"component":{}}],["unawar",{"_index":2825,"title":{},"name":{},"text":{"78":{}},"component":{}}],["unbias",{"_index":4098,"title":{},"name":{},"text":{"205":{}},"component":{}}],["unbound",{"_index":3661,"title":{},"name":{},"text":{"162":{}},"component":{}}],["unc",{"_index":987,"title":{},"name":{},"text":{"8":{}},"component":{}}],["unchang",{"_index":1496,"title":{},"name":{},"text":{"23":{},"235":{},"247":{},"314":{}},"component":{}}],["uncheck",{"_index":2367,"title":{},"name":{},"text":{"52":{},"53":{},"54":{},"238":{},"248":{},"310":{},"315":{},"359":{},"363":{},"379":{},"501":{},"504":{},"520":{}},"component":{}}],["uncom",{"_index":584,"title":{},"name":{},"text":{"5":{},"533":{}},"component":{}}],["uncommon",{"_index":6503,"title":{},"name":{},"text":{"466":{}},"component":{}}],["uncompress",{"_index":983,"title":{},"name":{},"text":{"8":{}},"component":{}}],["uncondit",{"_index":1540,"title":{},"name":{},"text":{"24":{},"57":{},"102":{},"103":{},"105":{}},"component":{}}],["under",{"_index":988,"title":{},"name":{},"text":{"8":{},"23":{},"29":{},"37":{},"50":{},"86":{},"103":{},"130":{},"153":{},"154":{},"165":{},"167":{},"168":{},"183":{},"222":{},"251":{},"256":{},"264":{},"309":{},"337":{},"338":{},"466":{},"513":{},"528":{},"530":{},"531":{},"533":{}},"component":{}}],["underli",{"_index":1661,"title":{},"name":{},"text":{"29":{},"37":{},"40":{},"43":{},"50":{},"87":{},"163":{},"235":{},"519":{}},"component":{}}],["underscor",{"_index":5488,"title":{},"name":{},"text":{"270":{},"528":{},"531":{}},"component":{}}],["understand",{"_index":2913,"title":{"82-2":{}},"name":{},"text":{"162":{},"233":{},"289":{}},"component":{}}],["understand[1",{"_index":2796,"title":{},"name":{},"text":{"77":{}},"component":{}}],["underway",{"_index":5419,"title":{},"name":{},"text":{"263":{}},"component":{}}],["undo",{"_index":1690,"title":{},"name":{},"text":{"36":{},"80":{}},"component":{}}],["unencrypt",{"_index":6246,"title":{},"name":{},"text":{"380":{},"505":{}},"component":{}}],["unescap",{"_index":4162,"title":{},"name":{},"text":{"205":{},"358":{}},"component":{}}],["unescapehtml",{"_index":6026,"title":{},"name":{},"text":{"358":{}},"component":{}}],["unescapexml",{"_index":6023,"title":{},"name":{},"text":{"358":{}},"component":{}}],["unexpect",{"_index":3931,"title":{},"name":{},"text":{"172":{},"233":{},"247":{},"262":{},"363":{}},"component":{}}],["unfortun",{"_index":6877,"title":{},"name":{},"text":{"528":{},"532":{}},"component":{}}],["uni",{"_index":2824,"title":{},"name":{},"text":{"78":{}},"component":{}}],["unichar",{"_index":4726,"title":{"247-170":{}},"name":{},"text":{"247":{}},"component":{}}],["unichar(100",{"_index":5310,"title":{},"name":{},"text":{"247":{}},"component":{}}],["unicod",{"_index":1104,"title":{"247-171":{}},"name":{},"text":{"9":{},"234":{},"247":{},"316":{},"317":{},"338":{},"366":{},"367":{},"395":{}},"component":{}}],["unicode(\"d",{"_index":5311,"title":{},"name":{},"text":{"247":{}},"component":{}}],["unifi",{"_index":3725,"title":{},"name":{},"text":{"163":{}},"component":{}}],["uniform",{"_index":5820,"title":{},"name":{},"text":{"318":{}},"component":{}}],["unimpl",{"_index":7204,"title":{"542-4":{}},"name":{},"text":{},"component":{}}],["union",{"_index":3979,"title":{},"name":{},"text":{"181":{},"364":{}},"component":{}}],["uniq",{"_index":7108,"title":{},"name":{},"text":{"537":{}},"component":{}}],["uniqu",{"_index":228,"title":{"2":{},"369":{},"370":{},"542-1":{},"542-2":{},"542-3":{}},"name":{},"text":{"2":{},"8":{},"40":{},"50":{},"53":{},"54":{},"56":{},"58":{},"81":{},"86":{},"99":{},"154":{},"163":{},"173":{},"174":{},"175":{},"176":{},"177":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"206":{},"209":{},"210":{},"212":{},"213":{},"214":{},"215":{},"218":{},"219":{},"220":{},"221":{},"222":{},"224":{},"225":{},"226":{},"228":{},"230":{},"233":{},"234":{},"236":{},"237":{},"238":{},"239":{},"242":{},"244":{},"249":{},"250":{},"254":{},"256":{},"263":{},"268":{},"269":{},"272":{},"274":{},"275":{},"276":{},"277":{},"278":{},"280":{},"283":{},"289":{},"290":{},"291":{},"292":{},"295":{},"297":{},"299":{},"302":{},"304":{},"305":{},"313":{},"314":{},"318":{},"320":{},"321":{},"322":{},"323":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"339":{},"342":{},"343":{},"345":{},"347":{},"348":{},"349":{},"352":{},"355":{},"359":{},"362":{},"364":{},"365":{},"366":{},"367":{},"369":{},"370":{},"371":{},"374":{},"375":{},"377":{},"380":{},"432":{},"433":{},"434":{},"435":{},"438":{},"439":{},"440":{},"449":{},"451":{},"453":{},"454":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"468":{},"471":{},"474":{},"477":{},"478":{},"479":{},"487":{},"488":{},"500":{},"506":{},"507":{},"508":{},"529":{},"530":{},"531":{},"542":{},"544":{}},"component":{}}],["uniquerow",{"_index":6138,"title":{},"name":{"369":{}},"text":{},"component":{}}],["uniquerowsbyhashset",{"_index":6140,"title":{},"name":{"370":{}},"text":{},"component":{}}],["unit",{"_index":109,"title":{"70":{},"83":{},"240":{},"2-5":{},"10-2":{},"83-1":{},"83-2":{},"83-3":{},"83-4":{},"83-5":{},"83-7":{},"83-8":{},"83-9":{},"83-10":{},"83-11":{}},"name":{"70":{},"83":{}},"text":{"1":{},"2":{},"9":{},"10":{},"13":{},"24":{},"60":{},"64":{},"70":{},"78":{},"80":{},"81":{},"83":{},"86":{},"92":{},"93":{},"152":{},"154":{},"159":{},"163":{},"166":{},"234":{},"240":{},"241":{},"277":{},"279":{},"298":{},"338":{},"390":{},"404":{},"409":{},"438":{},"445":{},"484":{},"503":{},"518":{},"527":{},"533":{}},"component":{}}],["unittestsbasepath",{"_index":3045,"title":{},"name":{},"text":{"90":{},"389":{}},"component":{}}],["univers",{"_index":3348,"title":{"144":{},"163-7":{}},"name":{"144":{}},"text":{"163":{},"241":{},"249":{}},"component":{}}],["unix",{"_index":5392,"title":{"450":{}},"name":{},"text":{"258":{},"316":{},"366":{},"367":{},"450":{},"489":{}},"component":{}}],["unknown",{"_index":4203,"title":{},"name":{},"text":{"208":{},"227":{},"258":{},"297":{},"381":{},"450":{},"485":{}},"component":{}}],["unless",{"_index":695,"title":{},"name":{},"text":{"7":{},"83":{},"154":{},"167":{},"208":{},"247":{},"286":{},"292":{},"298":{},"309":{},"329":{},"330":{},"332":{},"333":{},"334":{},"532":{},"533":{}},"component":{}}],["unlik",{"_index":3544,"title":{},"name":{},"text":{"160":{},"247":{},"381":{}},"component":{}}],["unlimit",{"_index":3463,"title":{},"name":{},"text":{"154":{},"228":{}},"component":{}}],["unlog",{"_index":4200,"title":{},"name":{},"text":{"208":{}},"component":{}}],["unnam",{"_index":1910,"title":{},"name":{},"text":{"41":{}},"component":{}}],["unnecessari",{"_index":4254,"title":{},"name":{},"text":{"220":{},"363":{}},"component":{}}],["unpack",{"_index":7102,"title":{},"name":{},"text":{"537":{}},"component":{}}],["unparallel",{"_index":331,"title":{},"name":{},"text":{"2":{},"52":{}},"component":{}}],["unread",{"_index":4350,"title":{},"name":{},"text":{"232":{},"464":{}},"component":{}}],["unselect",{"_index":1693,"title":{},"name":{},"text":{"36":{}},"component":{}}],["unset",{"_index":590,"title":{},"name":{},"text":{"5":{},"7":{},"94":{},"152":{},"424":{}},"component":{}}],["unsort",{"_index":6139,"title":{},"name":{},"text":{"369":{}},"component":{}}],["unspecifi",{"_index":5725,"title":{},"name":{},"text":{"298":{},"338":{}},"component":{}}],["unsuccess",{"_index":6576,"title":{},"name":{},"text":{"489":{}},"component":{}}],["unsupport",{"_index":610,"title":{"6":{},"6-3":{},"163-8":{}},"name":{},"text":{"163":{}},"component":{}}],["until",{"_index":2461,"title":{"204":{}},"name":{},"text":{"55":{},"81":{},"82":{},"86":{},"95":{},"202":{},"203":{},"204":{},"216":{},"270":{},"338":{},"367":{},"372":{},"400":{},"457":{},"481":{},"483":{},"496":{},"500":{},"503":{},"529":{}},"component":{}}],["unus",{"_index":4231,"title":{},"name":{},"text":{"217":{},"267":{},"366":{},"367":{},"383":{}},"component":{}}],["unwant",{"_index":3932,"title":{},"name":{},"text":{"172":{},"537":{}},"component":{}}],["unwind",{"_index":5671,"title":{"433-6":{}},"name":{},"text":{"291":{},"294":{},"297":{},"433":{}},"component":{}}],["unzip",{"_index":498,"title":{"499":{}},"name":{"499":{}},"text":{"5":{},"14":{},"37":{},"38":{},"130":{},"160":{},"161":{},"170":{},"499":{},"511":{},"528":{},"533":{},"537":{},"540":{},"543":{}},"component":{}}],["up",{"_index":198,"title":{"533":{},"50-6":{},"50-7":{},"55-15":{}},"name":{},"text":{"1":{},"2":{},"5":{},"7":{},"9":{},"24":{},"25":{},"27":{},"29":{},"35":{},"36":{},"43":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"78":{},"82":{},"83":{},"85":{},"99":{},"103":{},"104":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"179":{},"205":{},"216":{},"221":{},"222":{},"223":{},"225":{},"227":{},"228":{},"235":{},"247":{},"250":{},"259":{},"268":{},"275":{},"276":{},"283":{},"289":{},"294":{},"297":{},"303":{},"309":{},"315":{},"317":{},"320":{},"325":{},"326":{},"344":{},"347":{},"355":{},"361":{},"364":{},"371":{},"372":{},"390":{},"395":{},"397":{},"405":{},"433":{},"441":{},"453":{},"473":{},"481":{},"489":{},"496":{},"499":{},"503":{},"513":{},"514":{},"520":{},"524":{},"526":{},"528":{},"530":{},"531":{},"532":{},"533":{},"534":{},"538":{},"543":{}},"component":{}}],["up/down",{"_index":1638,"title":{},"name":{},"text":{"27":{}},"component":{}}],["updat",{"_index":1507,"title":{"268":{},"333":{},"371":{},"227-12":{},"433-3":{},"514-5":{},"533-13":{},"538-2":{},"540-3":{}},"name":{"371":{}},"text":{"24":{},"25":{},"41":{},"52":{},"53":{},"54":{},"55":{},"71":{},"76":{},"81":{},"85":{},"86":{},"93":{},"158":{},"163":{},"165":{},"186":{},"206":{},"208":{},"216":{},"225":{},"227":{},"235":{},"238":{},"239":{},"256":{},"268":{},"278":{},"285":{},"292":{},"297":{},"299":{},"310":{},"314":{},"330":{},"331":{},"332":{},"333":{},"334":{},"354":{},"360":{},"364":{},"371":{},"372":{},"388":{},"433":{},"453":{},"474":{},"476":{},"514":{},"519":{},"533":{},"536":{},"538":{},"540":{}},"component":{}}],["update/lookup",{"_index":4220,"title":{},"name":{},"text":{"216":{}},"component":{}}],["updated;onli",{"_index":5432,"title":{},"name":{},"text":{"268":{}},"component":{}}],["updates/delet",{"_index":6035,"title":{},"name":{},"text":{"360":{}},"component":{}}],["updates/inserts/delet",{"_index":5610,"title":{},"name":{},"text":{"285":{},"360":{}},"component":{}}],["upfront",{"_index":6677,"title":{},"name":{},"text":{"514":{}},"component":{}}],["upgrad",{"_index":427,"title":{"5-9":{}},"name":{"536":{}},"text":{"5":{},"10":{},"55":{},"91":{},"154":{},"536":{}},"component":{}}],["upgrademod",{"_index":3697,"title":{},"name":{},"text":{"162":{}},"component":{}}],["upload",{"_index":891,"title":{},"name":{},"text":{"7":{},"42":{},"97":{},"98":{},"99":{},"100":{},"101":{},"158":{},"264":{},"463":{},"465":{},"538":{}},"component":{}}],["upon",{"_index":2828,"title":{},"name":{},"text":{"78":{},"82":{},"172":{},"222":{},"247":{},"256":{},"271":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"375":{},"430":{},"481":{}},"component":{}}],["upper",{"_index":1291,"title":{"247-172":{}},"name":{},"text":{"15":{},"23":{},"24":{},"27":{},"56":{},"71":{},"85":{},"104":{},"158":{},"167":{},"247":{},"302":{},"358":{}},"component":{}}],["upper(\"habc7",{"_index":5314,"title":{},"name":{},"text":{"247":{}},"component":{}}],["uppercas",{"_index":3360,"title":{},"name":{},"text":{"151":{},"152":{},"205":{},"247":{},"248":{},"389":{}},"component":{}}],["upsert",{"_index":2901,"title":{"334":{}},"name":{},"text":{"81":{},"86":{},"278":{},"292":{},"330":{},"331":{},"332":{},"333":{},"334":{}},"component":{}}],["upstream",{"_index":648,"title":{},"name":{},"text":{"7":{},"271":{},"309":{},"344":{},"481":{},"483":{},"533":{},"538":{}},"component":{}}],["upstream/mast",{"_index":7111,"title":{},"name":{},"text":{"538":{}},"component":{}}],["uqel9smd0zgqjfhkepvqjtkwcktdqjfmia5thizyeth+3lu0whrmgrgq7necvrni9wky+li8crkw",{"_index":2138,"title":{},"name":{},"text":{"42":{}},"component":{}}],["uri",{"_index":970,"title":{},"name":{},"text":{"8":{},"154":{},"194":{},"234":{},"251":{},"273":{},"279":{},"366":{},"381":{}},"component":{}}],["url",{"_index":960,"title":{"37-2":{},"154-12":{}},"name":{},"text":{"8":{},"37":{},"40":{},"43":{},"50":{},"71":{},"101":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"154":{},"161":{},"165":{},"168":{},"196":{},"211":{},"247":{},"250":{},"263":{},"264":{},"273":{},"280":{},"319":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"377":{},"427":{},"465":{},"502":{},"530":{},"533":{}},"component":{}}],["url.gitpod.io",{"_index":7030,"title":{},"name":{},"text":{"533":{}},"component":{}}],["urlencod",{"_index":4727,"title":{"247-173":{}},"name":{},"text":{"247":{},"319":{}},"component":{}}],["urlencode(\"&param1=value?param2=value2",{"_index":5316,"title":{},"name":{},"text":{"247":{}},"component":{}}],["urn",{"_index":3563,"title":{},"name":{},"text":{"160":{}},"component":{}}],["us",{"_index":22,"title":{"162":{},"7-5":{},"20-4":{},"25-3":{},"41-2":{},"43-6":{},"43-7":{},"56-5":{},"82-4":{},"82-5":{},"94-1":{},"163-3":{},"178-6":{},"270-15":{},"389-5":{},"389-11":{},"528-9":{},"541-1":{},"542-2":{},"542-4":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"27":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"47":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"112":{},"113":{},"117":{},"121":{},"129":{},"130":{},"131":{},"133":{},"147":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"174":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"185":{},"186":{},"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{},"223":{},"224":{},"227":{},"228":{},"230":{},"231":{},"232":{},"233":{},"234":{},"235":{},"236":{},"237":{},"238":{},"239":{},"240":{},"241":{},"242":{},"243":{},"244":{},"245":{},"246":{},"247":{},"248":{},"249":{},"250":{},"251":{},"253":{},"254":{},"255":{},"257":{},"258":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"265":{},"266":{},"267":{},"268":{},"269":{},"270":{},"271":{},"272":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"280":{},"281":{},"283":{},"284":{},"285":{},"287":{},"288":{},"289":{},"290":{},"291":{},"292":{},"293":{},"294":{},"295":{},"296":{},"297":{},"298":{},"299":{},"300":{},"301":{},"303":{},"304":{},"305":{},"307":{},"309":{},"311":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"322":{},"323":{},"324":{},"325":{},"326":{},"328":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"336":{},"337":{},"338":{},"341":{},"342":{},"343":{},"344":{},"345":{},"346":{},"347":{},"348":{},"349":{},"350":{},"351":{},"352":{},"353":{},"354":{},"355":{},"357":{},"358":{},"359":{},"360":{},"362":{},"363":{},"364":{},"365":{},"366":{},"367":{},"368":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"376":{},"377":{},"378":{},"379":{},"380":{},"381":{},"382":{},"383":{},"386":{},"387":{},"388":{},"389":{},"390":{},"392":{},"393":{},"394":{},"395":{},"397":{},"399":{},"400":{},"404":{},"405":{},"412":{},"418":{},"420":{},"422":{},"424":{},"426":{},"427":{},"430":{},"431":{},"432":{},"433":{},"435":{},"436":{},"437":{},"439":{},"440":{},"441":{},"442":{},"443":{},"448":{},"450":{},"452":{},"453":{},"454":{},"455":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"474":{},"476":{},"477":{},"478":{},"479":{},"480":{},"481":{},"483":{},"485":{},"487":{},"488":{},"489":{},"490":{},"491":{},"492":{},"493":{},"494":{},"496":{},"498":{},"499":{},"500":{},"501":{},"503":{},"504":{},"505":{},"506":{},"508":{},"509":{},"510":{},"511":{},"512":{},"513":{},"514":{},"519":{},"520":{},"521":{},"525":{},"527":{},"528":{},"529":{},"530":{},"531":{},"532":{},"533":{},"534":{},"536":{},"537":{},"538":{},"540":{},"541":{},"543":{},"544":{}},"component":{}}],["usa",{"_index":6481,"title":{},"name":{},"text":{"461":{},"463":{}},"component":{}}],["usabl",{"_index":1148,"title":{},"name":{},"text":{"9":{},"270":{},"281":{},"314":{},"345":{},"394":{},"519":{},"525":{}},"component":{}}],["usag",{"_index":962,"title":{"27-2":{},"28-2":{},"29-4":{},"31-2":{},"38-5":{},"38-6":{},"38-7":{},"44-1":{},"45-2":{},"46-1":{},"97-6":{},"98-3":{},"99-3":{},"100-3":{},"101-3":{},"152-1":{},"152-3":{},"152-4":{},"152-5":{},"152-7":{},"221-3":{},"251-3":{},"270-3":{},"285-3":{},"287-3":{},"299-3":{},"309-3":{},"316-3":{},"330-3":{},"350-3":{},"372-4":{},"373-3":{},"378-3":{},"381-3":{},"388-1":{},"516-2":{},"520-3":{}},"name":{},"text":{"8":{},"38":{},"41":{},"44":{},"46":{},"47":{},"58":{},"152":{},"355":{},"381":{},"492":{},"500":{},"518":{}},"component":{}}],["use_all_dns_ip",{"_index":4050,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["used",{"_index":6432,"title":{},"name":{},"text":{"453":{}},"component":{}}],["user",{"_index":74,"title":{"4":{},"372":{},"373":{},"154-2":{}},"name":{},"text":{"1":{},"4":{},"5":{},"7":{},"8":{},"10":{},"19":{},"22":{},"25":{},"26":{},"27":{},"36":{},"40":{},"41":{},"48":{},"50":{},"56":{},"57":{},"65":{},"78":{},"81":{},"86":{},"88":{},"91":{},"93":{},"94":{},"97":{},"103":{},"154":{},"159":{},"164":{},"165":{},"166":{},"167":{},"168":{},"179":{},"228":{},"235":{},"247":{},"248":{},"250":{},"256":{},"261":{},"269":{},"270":{},"275":{},"277":{},"278":{},"280":{},"287":{},"291":{},"314":{},"319":{},"326":{},"346":{},"372":{},"373":{},"400":{},"418":{},"419":{},"426":{},"429":{},"436":{},"461":{},"462":{},"463":{},"464":{},"466":{},"469":{},"477":{},"478":{},"487":{},"488":{},"491":{},"492":{},"501":{},"514":{},"518":{},"524":{},"530":{},"538":{},"541":{},"542":{},"543":{}},"component":{}}],["user.dir",{"_index":6579,"title":{},"name":{},"text":{"489":{}},"component":{}}],["user_info",{"_index":4043,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["userdata",{"_index":6070,"title":{},"name":{},"text":{"366":{}},"component":{}}],["userdata.\\.txt",{"_index":6069,"title":{},"name":{},"text":{"366":{}},"component":{}}],["userdefinedjavaclass",{"_index":6141,"title":{},"name":{"372":{}},"text":{},"component":{}}],["userdefinedjavaexpress",{"_index":6209,"title":{},"name":{"373":{}},"text":{},"component":{}}],["usernam",{"_index":1000,"title":{},"name":{},"text":{"8":{},"11":{},"19":{},"25":{},"41":{},"56":{},"63":{},"65":{},"71":{},"72":{},"77":{},"92":{},"153":{},"154":{},"197":{},"232":{},"263":{},"264":{},"276":{},"277":{},"278":{},"280":{},"319":{},"326":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"377":{},"433":{},"461":{},"462":{},"463":{},"464":{},"465":{},"488":{},"514":{}},"component":{}}],["username/password",{"_index":6510,"title":{},"name":{},"text":{"468":{}},"component":{}}],["username=\"cluster_api_key",{"_index":4038,"title":{},"name":{},"text":{"196":{},"197":{},"275":{},"276":{}},"component":{}}],["username@apache.org",{"_index":7126,"title":{},"name":{},"text":{"538":{}},"component":{}}],["users.xml",{"_index":1582,"title":{},"name":{},"text":{"25":{}},"component":{}}],["user’",{"_index":1003,"title":{},"name":{},"text":{"8":{},"346":{}},"component":{}}],["usp",{"_index":231,"title":{},"name":{"2":{}},"text":{},"component":{}}],["usr/bin/gpg",{"_index":6540,"title":{},"name":{},"text":{"478":{}},"component":{}}],["usr/local/tomcat/webapps/root",{"_index":1555,"title":{},"name":{},"text":{"25":{}},"component":{}}],["usual",{"_index":120,"title":{},"name":{},"text":{"1":{},"13":{},"71":{},"105":{},"154":{},"163":{},"167":{},"168":{},"223":{},"233":{},"235":{},"291":{},"305":{},"309":{},"314":{},"375":{},"400":{},"404":{},"410":{},"461":{},"463":{},"487":{},"488":{},"490":{},"529":{},"544":{}},"component":{}}],["utc",{"_index":2594,"title":{},"name":{},"text":{"56":{},"291":{}},"component":{}}],["utf",{"_index":740,"title":{},"name":{},"text":{"7":{},"205":{},"234":{},"247":{},"279":{},"305":{},"338":{},"366":{},"367":{},"528":{}},"component":{}}],["utf8",{"_index":5986,"title":{},"name":{},"text":{"346":{}},"component":{}}],["util",{"_index":215,"title":{},"name":{},"text":{"1":{},"161":{},"273":{},"303":{},"346":{},"365":{},"405":{},"525":{}},"component":{}}],["uuid",{"_index":1766,"title":{},"name":{},"text":{"37":{},"249":{}},"component":{}}],["uuid4",{"_index":5345,"title":{},"name":{},"text":{"249":{}},"component":{}}],["v",{"_index":1579,"title":{},"name":{},"text":{"25":{},"36":{},"38":{},"39":{},"40":{},"46":{},"47":{},"50":{},"94":{},"152":{},"321":{},"514":{},"541":{}},"component":{}}],["v1",{"_index":3224,"title":{},"name":{},"text":{"117":{},"162":{}},"component":{}}],["v1_15",{"_index":3678,"title":{},"name":{},"text":{"162":{}},"component":{}}],["v1beta1",{"_index":3225,"title":{},"name":{},"text":{"117":{}},"component":{}}],["v1beta2",{"_index":3226,"title":{},"name":{},"text":{"117":{}},"component":{}}],["v2",{"_index":3221,"title":{},"name":{},"text":{"117":{}},"component":{}}],["v2.0",{"_index":7065,"title":{},"name":{},"text":{"535":{}},"component":{}}],["v2.x/3.x",{"_index":6241,"title":{},"name":{},"text":{"377":{}},"component":{}}],["v4",{"_index":3440,"title":{},"name":{},"text":{"154":{}},"component":{}}],["valid",{"_index":344,"title":{"219":{},"374":{},"384":{},"451":{},"467":{},"507":{}},"name":{"374":{}},"text":{"2":{},"4":{},"5":{},"7":{},"8":{},"9":{},"74":{},"81":{},"83":{},"86":{},"94":{},"152":{},"154":{},"159":{},"164":{},"165":{},"166":{},"167":{},"168":{},"205":{},"208":{},"211":{},"219":{},"220":{},"227":{},"232":{},"235":{},"241":{},"247":{},"250":{},"259":{},"273":{},"292":{},"297":{},"303":{},"309":{},"311":{},"316":{},"338":{},"342":{},"344":{},"354":{},"366":{},"372":{},"374":{},"384":{},"390":{},"395":{},"421":{},"441":{},"451":{},"461":{},"463":{},"467":{},"477":{},"478":{},"481":{},"483":{},"486":{},"487":{},"488":{},"490":{},"502":{},"507":{},"533":{},"537":{},"538":{}},"component":{}}],["valu",{"_index":551,"title":{"176":{},"249":{},"313":{},"338":{},"342":{},"343":{},"375":{},"7-6":{},"38-6":{},"38-7":{},"38-8":{},"152-4":{},"152-5":{},"152-6":{},"246-5":{},"247-70":{},"270-13":{}},"name":{},"text":{"5":{},"7":{},"9":{},"11":{},"19":{},"27":{},"29":{},"32":{},"37":{},"38":{},"39":{},"42":{},"43":{},"47":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"61":{},"70":{},"75":{},"76":{},"78":{},"81":{},"82":{},"83":{},"86":{},"88":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"99":{},"103":{},"130":{},"150":{},"152":{},"154":{},"158":{},"162":{},"163":{},"165":{},"167":{},"169":{},"170":{},"171":{},"175":{},"176":{},"177":{},"178":{},"179":{},"183":{},"184":{},"186":{},"187":{},"191":{},"196":{},"197":{},"205":{},"206":{},"207":{},"208":{},"211":{},"214":{},"216":{},"217":{},"220":{},"221":{},"222":{},"223":{},"224":{},"226":{},"227":{},"230":{},"231":{},"233":{},"234":{},"235":{},"236":{},"237":{},"246":{},"247":{},"248":{},"249":{},"250":{},"258":{},"262":{},"263":{},"264":{},"266":{},"268":{},"269":{},"270":{},"271":{},"273":{},"274":{},"275":{},"276":{},"277":{},"278":{},"279":{},"285":{},"287":{},"288":{},"289":{},"291":{},"292":{},"294":{},"297":{},"298":{},"299":{},"301":{},"302":{},"303":{},"304":{},"308":{},"309":{},"311":{},"313":{},"314":{},"315":{},"316":{},"317":{},"318":{},"319":{},"320":{},"322":{},"323":{},"324":{},"325":{},"331":{},"337":{},"338":{},"339":{},"342":{},"343":{},"344":{},"346":{},"349":{},"350":{},"355":{},"357":{},"358":{},"359":{},"360":{},"361":{},"363":{},"364":{},"366":{},"367":{},"368":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"378":{},"380":{},"381":{},"382":{},"383":{},"388":{},"389":{},"392":{},"400":{},"423":{},"425":{},"426":{},"427":{},"433":{},"437":{},"454":{},"457":{},"465":{},"473":{},"481":{},"483":{},"486":{},"489":{},"490":{},"496":{},"501":{},"502":{},"503":{},"505":{},"511":{},"514":{},"527":{},"529":{},"533":{},"544":{}},"component":{}}],["value(",{"_index":4293,"title":{},"name":{},"text":{"225":{}},"component":{}}],["value(d",{"_index":4780,"title":{},"name":{},"text":{"247":{}},"component":{}}],["value.converter.schema.registry.url",{"_index":4057,"title":{},"name":{},"text":{"197":{},"275":{},"276":{},"427":{}},"component":{}}],["value.deseri",{"_index":5570,"title":{},"name":{},"text":{"275":{}},"component":{}}],["value.hpl",{"_index":6554,"title":{},"name":{},"text":{"483":{}},"component":{}}],["value1",{"_index":1761,"title":{},"name":{},"text":{"37":{},"38":{},"152":{},"247":{},"316":{}},"component":{}}],["value1,value2",{"_index":1871,"title":{},"name":{},"text":{"38":{},"152":{}},"component":{}}],["value2",{"_index":1763,"title":{},"name":{},"text":{"37":{},"38":{},"152":{},"316":{}},"component":{}}],["value3",{"_index":5810,"title":{},"name":{},"text":{"316":{}},"component":{}}],["value7",{"_index":4950,"title":{},"name":{},"text":{"247":{}},"component":{}}],["valuemapp",{"_index":6229,"title":{},"name":{"375":{}},"text":{},"component":{}}],["valuemetainterface.typecod",{"_index":5893,"title":{},"name":{},"text":{"325":{}},"component":{}}],["valuemetaplugintyp",{"_index":6797,"title":{},"name":{},"text":{"525":{}},"component":{}}],["valuemetastr",{"_index":6788,"title":{},"name":{},"text":{"525":{}},"component":{}}],["van",{"_index":1220,"title":{},"name":{},"text":{"10":{}},"component":{}}],["var",{"_index":4719,"title":{"247-143":{}},"name":{},"text":{"247":{},"270":{},"337":{},"453":{},"527":{}},"component":{}}],["var(10;5;1",{"_index":5139,"title":{},"name":{},"text":{"247":{}},"component":{}}],["var/lib/neo4j",{"_index":5707,"title":{},"name":{},"text":{"295":{}},"component":{}}],["var/run/docker.sock:/var/run/docker.sock",{"_index":2483,"title":{},"name":{},"text":{"56":{}},"component":{}}],["var1",{"_index":1760,"title":{},"name":{},"text":{"37":{},"490":{}},"component":{}}],["var2",{"_index":1762,"title":{},"name":{},"text":{"37":{}},"component":{}}],["var=valu",{"_index":3414,"title":{},"name":{},"text":{"152":{}},"component":{}}],["vari",{"_index":2383,"title":{},"name":{},"text":{"52":{},"56":{},"235":{},"247":{}},"component":{}}],["variabl",{"_index":134,"title":{"7":{},"258":{},"344":{},"486":{},"5-5":{},"5-6":{},"5-7":{},"5-8":{},"5-12":{},"7-1":{},"7-4":{},"7-5":{},"7-7":{},"7-12":{},"7-16":{},"7-17":{},"9-7":{},"27-7":{},"56-5":{},"90-4":{},"90-10":{},"94-1":{},"97-4":{},"150-3":{},"152-2":{},"152-10":{},"171-5":{},"246-5":{},"337-4":{},"389-3":{},"389-14":{},"453-4":{},"514-4":{},"527-7":{},"531-6":{},"544-4":{},"546-1":{}},"name":{"7":{},"398":{}},"text":{"1":{},"5":{},"7":{},"9":{},"11":{},"13":{},"19":{},"22":{},"25":{},"27":{},"29":{},"36":{},"37":{},"40":{},"41":{},"43":{},"46":{},"50":{},"53":{},"54":{},"55":{},"56":{},"58":{},"70":{},"81":{},"83":{},"86":{},"90":{},"91":{},"92":{},"93":{},"94":{},"97":{},"100":{},"150":{},"151":{},"152":{},"154":{},"157":{},"158":{},"160":{},"161":{},"163":{},"165":{},"167":{},"168":{},"170":{},"171":{},"196":{},"197":{},"205":{},"207":{},"208":{},"227":{},"230":{},"238":{},"246":{},"247":{},"256":{},"258":{},"270":{},"273":{},"275":{},"276":{},"287":{},"294":{},"299":{},"309":{},"311":{},"315":{},"316":{},"322":{},"331":{},"337":{},"342":{},"344":{},"346":{},"363":{},"365":{},"378":{},"380":{},"381":{},"388":{},"389":{},"398":{},"402":{},"408":{},"414":{},"420":{},"421":{},"422":{},"423":{},"424":{},"426":{},"432":{},"433":{},"437":{},"453":{},"455":{},"475":{},"481":{},"483":{},"486":{},"489":{},"490":{},"493":{},"501":{},"505":{},"511":{},"514":{},"518":{},"520":{},"527":{},"528":{},"529":{},"531":{},"532":{},"533":{},"541":{},"543":{},"544":{},"546":{}},"component":{}}],["variable/dock",{"_index":2289,"title":{},"name":{},"text":{"50":{}},"component":{}}],["variable/valu",{"_index":6287,"title":{},"name":{},"text":{"389":{}},"component":{}}],["variable1=value1",{"_index":770,"title":{},"name":{},"text":{"7":{}},"component":{}}],["variable=descript",{"_index":3411,"title":{},"name":{},"text":{"152":{}},"component":{}}],["variable=valu",{"_index":3412,"title":{},"name":{},"text":{"152":{}},"component":{}}],["variable_nam",{"_index":707,"title":{},"name":{},"text":{"7":{},"475":{}},"component":{}}],["variables\",\"componentcopy\":\"0\",\"metrics\":{\"read\":5,\"buff",{"_index":1807,"title":{},"name":{},"text":{"37":{}},"component":{}}],["variables.getadefaultvariablespac",{"_index":7282,"title":{},"name":{},"text":{"544":{}},"component":{}}],["variables.json",{"_index":3065,"title":{},"name":{},"text":{"90":{},"150":{},"152":{}},"component":{}}],["variables/paramet",{"_index":693,"title":{},"name":{},"text":{"7":{}},"component":{}}],["variables=key1=\"\\\"\\\"str",{"_index":3421,"title":{},"name":{},"text":{"152":{}},"component":{}}],["variables=key1=\"thi",{"_index":3419,"title":{},"name":{},"text":{"152":{}},"component":{}}],["variables=key1=\\\"value1,value2",{"_index":3420,"title":{},"name":{},"text":{"152":{}},"component":{}}],["variables=key1=value1,key2=value2",{"_index":3418,"title":{},"name":{},"text":{"152":{}},"component":{}}],["variablespac",{"_index":6977,"title":{"532-8":{}},"name":{},"text":{"532":{}},"component":{}}],["varianc",{"_index":5137,"title":{},"name":{},"text":{"247":{}},"component":{}}],["variant",{"_index":1876,"title":{},"name":{},"text":{"40":{},"58":{},"544":{}},"component":{}}],["variat",{"_index":2855,"title":{},"name":{},"text":{"81":{},"163":{}},"component":{}}],["varieti",{"_index":55,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"19":{},"20":{},"26":{},"51":{},"69":{},"78":{},"83":{},"97":{},"103":{},"163":{},"178":{},"366":{},"413":{},"418":{}},"component":{}}],["variou",{"_index":6,"title":{"1-5":{}},"name":{},"text":{"1":{},"5":{},"8":{},"9":{},"17":{},"18":{},"19":{},"21":{},"26":{},"27":{},"30":{},"31":{},"52":{},"55":{},"56":{},"57":{},"81":{},"84":{},"87":{},"90":{},"150":{},"152":{},"153":{},"154":{},"162":{},"163":{},"180":{},"196":{},"197":{},"228":{},"246":{},"275":{},"276":{},"298":{},"331":{},"347":{},"352":{},"374":{},"381":{},"389":{},"393":{},"411":{},"418":{},"423":{},"433":{},"435":{},"475":{},"486":{},"513":{},"528":{},"529":{},"530":{},"541":{},"544":{}},"component":{}}],["vast",{"_index":2555,"title":{},"name":{},"text":{"56":{},"520":{}},"component":{}}],["vaul",{"_index":2430,"title":{},"name":{},"text":{"55":{}},"component":{}}],["vc",{"_index":6763,"title":{},"name":{},"text":{"519":{}},"component":{}}],["vcpu",{"_index":3812,"title":{},"name":{},"text":{"165":{}},"component":{}}],["vdiv",{"_index":5281,"title":{},"name":{},"text":{"247":{}},"component":{}}],["vector",{"_index":3014,"title":{},"name":{},"text":{"87":{},"535":{}},"component":{}}],["vectorwis",{"_index":3350,"title":{"145":{}},"name":{"145":{}},"text":{},"component":{}}],["vendor",{"_index":2716,"title":{},"name":{},"text":{"71":{},"161":{},"219":{}},"component":{}}],["vendor’",{"_index":600,"title":{},"name":{},"text":{"5":{}},"component":{}}],["verbos",{"_index":3597,"title":{},"name":{},"text":{"161":{},"298":{}},"component":{}}],["verg",{"_index":2477,"title":{},"name":{},"text":{"56":{}},"component":{}}],["veri",{"_index":437,"title":{},"name":{},"text":{"5":{},"16":{},"26":{},"41":{},"50":{},"53":{},"54":{},"55":{},"56":{},"78":{},"81":{},"84":{},"85":{},"103":{},"104":{},"105":{},"160":{},"167":{},"203":{},"247":{},"270":{},"275":{},"297":{},"310":{},"379":{},"433":{},"528":{},"533":{},"535":{}},"component":{}}],["verif",{"_index":6087,"title":{},"name":{},"text":{"366":{}},"component":{}}],["verifi",{"_index":1121,"title":{"479":{},"41-9":{}},"name":{},"text":{"9":{},"82":{},"83":{},"215":{},"242":{},"247":{},"260":{},"261":{},"309":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"344":{},"362":{},"374":{},"395":{},"438":{},"439":{},"440":{},"451":{},"457":{},"458":{},"459":{},"479":{},"496":{},"506":{},"527":{},"529":{},"531":{},"533":{},"537":{},"538":{},"546":{}},"component":{}}],["versa",{"_index":1531,"title":{},"name":{},"text":{"24":{},"450":{}},"component":{}}],["versatil",{"_index":1454,"title":{},"name":{},"text":{"22":{},"26":{}},"component":{}}],["version",{"_index":52,"title":{"163-4":{},"227-8":{},"538-2":{},"538-4":{},"538-5":{}},"name":{},"text":{"1":{},"2":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"14":{},"19":{},"23":{},"25":{},"26":{},"27":{},"30":{},"38":{},"39":{},"41":{},"46":{},"47":{},"48":{},"50":{},"52":{},"54":{},"56":{},"78":{},"87":{},"88":{},"90":{},"91":{},"94":{},"103":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{},"139":{},"140":{},"141":{},"142":{},"144":{},"145":{},"146":{},"152":{},"154":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"194":{},"207":{},"208":{},"227":{},"241":{},"247":{},"271":{},"287":{},"305":{},"341":{},"389":{},"390":{},"413":{},"418":{},"422":{},"429":{},"514":{},"527":{},"533":{},"538":{},"540":{},"543":{}},"component":{}}],["versions:set",{"_index":7113,"title":{},"name":{},"text":{"538":{}},"component":{}}],["vertic",{"_index":1648,"title":{},"name":{},"text":{"29":{},"80":{}},"component":{}}],["vertica",{"_index":3352,"title":{"146":{},"376":{}},"name":{"146":{}},"text":{"376":{}},"component":{}}],["verticabulkload",{"_index":6238,"title":{},"name":{"376":{}},"text":{},"component":{}}],["verticacopystream",{"_index":6239,"title":{},"name":{},"text":{"376":{}},"component":{}}],["vf",{"_index":894,"title":{"99":{},"100":{},"101":{},"8-2":{},"8-3":{},"428-2":{},"430-3":{}},"name":{"8":{},"97":{},"98":{},"99":{},"100":{},"101":{}},"text":{"7":{},"8":{},"18":{},"22":{},"27":{},"88":{},"98":{},"147":{},"152":{},"220":{},"304":{},"428":{},"430":{},"457":{},"468":{},"530":{}},"component":{}}],["vfs2",{"_index":1078,"title":{},"name":{},"text":{"8":{}},"component":{}}],["via",{"_index":2270,"title":{"130-4":{}},"name":{},"text":{"50":{},"78":{},"87":{},"103":{},"154":{},"168":{},"218":{},"264":{},"274":{},"309":{},"344":{},"350":{},"367":{},"383":{},"453":{},"468":{},"514":{},"533":{}},"component":{}}],["vice",{"_index":1530,"title":{},"name":{},"text":{"24":{},"450":{}},"component":{}}],["view",{"_index":1305,"title":{},"name":{},"text":{"17":{},"24":{},"27":{},"29":{},"32":{},"41":{},"53":{},"54":{},"55":{},"56":{},"94":{},"130":{},"161":{},"163":{},"179":{},"220":{},"247":{},"257":{},"270":{},"287":{},"319":{},"364":{},"366":{},"441":{},"493":{},"529":{},"533":{}},"component":{}}],["viewabl",{"_index":636,"title":{},"name":{},"text":{"7":{}},"component":{}}],["violat",{"_index":6052,"title":{},"name":{},"text":{"364":{},"542":{}},"component":{}}],["virtual",{"_index":451,"title":{"8":{}},"name":{},"text":{"5":{},"7":{},"8":{},"57":{},"256":{},"287":{},"344":{},"486":{},"530":{}},"component":{}}],["visa",{"_index":4239,"title":{},"name":{},"text":{"219":{}},"component":{}}],["visibl",{"_index":2283,"title":{},"name":{},"text":{"50":{}},"component":{}}],["vision",{"_index":6768,"title":{},"name":{},"text":{"521":{}},"component":{}}],["visit",{"_index":7019,"title":{},"name":{},"text":{"533":{}},"component":{}}],["visual",{"_index":36,"title":{"2-2":{},"20-1":{}},"name":{},"text":{"1":{},"2":{},"10":{},"19":{},"20":{},"23":{},"26":{},"30":{},"45":{},"84":{},"105":{},"158":{},"163":{},"413":{},"418":{}},"component":{}}],["vitter",{"_index":5824,"title":{},"name":{},"text":{"318":{}},"component":{}}],["vm",{"_index":489,"title":{},"name":{},"text":{"5":{},"7":{},"164":{},"165":{}},"component":{}}],["void",{"_index":7236,"title":{},"name":{},"text":{"542":{},"544":{}},"component":{}}],["volum",{"_index":334,"title":{},"name":{},"text":{"2":{},"20":{},"52":{},"56":{},"158":{},"162":{},"163":{},"222":{},"228":{},"232":{},"382":{},"514":{},"541":{}},"component":{}}],["volumemount",{"_index":3686,"title":{},"name":{},"text":{"162":{}},"component":{}}],["vote",{"_index":7083,"title":{},"name":{},"text":{"537":{},"538":{},"540":{}},"component":{}}],["vpn",{"_index":6501,"title":{},"name":{},"text":{"465":{}},"component":{}}],["vs",{"_index":665,"title":{"518":{},"521":{},"430-4":{}},"name":{"518":{}},"text":{"7":{},"521":{},"533":{}},"component":{}}],["w",{"_index":1688,"title":{},"name":{},"text":{"36":{},"56":{},"321":{},"366":{}},"component":{}}],["w=1",{"_index":1374,"title":{},"name":{},"text":{"19":{},"38":{},"41":{},"55":{},"56":{}},"component":{}}],["w=10",{"_index":2420,"title":{},"name":{},"text":{"55":{}},"component":{}}],["w=10000",{"_index":2953,"title":{},"name":{},"text":{"83":{}},"component":{}}],["w=1000000",{"_index":2024,"title":{},"name":{},"text":{"41":{}},"component":{}}],["w=22",{"_index":2954,"title":{},"name":{},"text":{"83":{}},"component":{}}],["w=5",{"_index":1367,"title":{},"name":{},"text":{"19":{},"38":{},"56":{}},"component":{}}],["wait",{"_index":908,"title":{"445":{},"500":{},"501":{}},"name":{},"text":{"7":{},"42":{},"56":{},"71":{},"105":{},"167":{},"169":{},"186":{},"204":{},"208":{},"224":{},"235":{},"263":{},"264":{},"292":{},"309":{},"378":{},"438":{},"445":{},"481":{},"496":{},"500":{},"501":{},"503":{},"514":{},"544":{}},"component":{}}],["waitforfil",{"_index":6605,"title":{},"name":{"500":{}},"text":{},"component":{}}],["waitforsql",{"_index":6609,"title":{},"name":{"501":{}},"text":{},"component":{}}],["walk",{"_index":1261,"title":{"17-2":{},"84-2":{},"105-3":{}},"name":{},"text":{"15":{},"16":{},"21":{},"22":{},"57":{},"80":{},"513":{}},"component":{}}],["want",{"_index":396,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"9":{},"11":{},"15":{},"16":{},"18":{},"19":{},"20":{},"22":{},"29":{},"37":{},"39":{},"40":{},"41":{},"43":{},"48":{},"50":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"62":{},"75":{},"76":{},"78":{},"79":{},"83":{},"85":{},"91":{},"93":{},"94":{},"96":{},"103":{},"105":{},"107":{},"112":{},"133":{},"153":{},"154":{},"156":{},"160":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"169":{},"170":{},"171":{},"173":{},"177":{},"178":{},"179":{},"180":{},"182":{},"185":{},"198":{},"199":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"212":{},"216":{},"219":{},"220":{},"221":{},"224":{},"225":{},"227":{},"228":{},"230":{},"232":{},"234":{},"236":{},"238":{},"239":{},"242":{},"245":{},"246":{},"247":{},"249":{},"250":{},"251":{},"256":{},"259":{},"260":{},"261":{},"262":{},"263":{},"264":{},"267":{},"268":{},"270":{},"272":{},"273":{},"275":{},"279":{},"280":{},"281":{},"283":{},"285":{},"287":{},"289":{},"291":{},"297":{},"304":{},"305":{},"313":{},"314":{},"322":{},"323":{},"326":{},"329":{},"330":{},"331":{},"332":{},"333":{},"334":{},"335":{},"338":{},"342":{},"343":{},"344":{},"345":{},"347":{},"349":{},"350":{},"352":{},"354":{},"355":{},"360":{},"361":{},"363":{},"364":{},"366":{},"367":{},"368":{},"369":{},"370":{},"371":{},"372":{},"373":{},"374":{},"375":{},"378":{},"380":{},"381":{},"383":{},"384":{},"388":{},"389":{},"391":{},"395":{},"424":{},"427":{},"432":{},"433":{},"441":{},"448":{},"449":{},"455":{},"457":{},"461":{},"464":{},"465":{},"466":{},"467":{},"472":{},"473":{},"474":{},"475":{},"476":{},"481":{},"483":{},"487":{},"488":{},"489":{},"498":{},"499":{},"503":{},"505":{},"507":{},"511":{},"512":{},"514":{},"519":{},"527":{},"528":{},"529":{},"531":{},"533":{},"535":{},"543":{},"544":{}},"component":{}}],["war",{"_index":1703,"title":{},"name":{},"text":{"37":{}},"component":{}}],["warehous",{"_index":1438,"title":{"492":{},"492-2":{},"492-3":{},"492-4":{},"492-5":{},"492-6":{}},"name":{},"text":{"20":{},"50":{},"52":{},"216":{},"285":{},"457":{},"492":{},"503":{}},"component":{}}],["warn",{"_index":2339,"title":{},"name":{},"text":{"52":{},"90":{},"150":{},"152":{},"161":{},"165":{},"220":{},"234":{},"247":{},"303":{},"364":{},"366":{},"466":{},"485":{}},"component":{}}],["warranti",{"_index":7040,"title":{},"name":{},"text":{"533":{}},"component":{}}],["wasn’t",{"_index":6273,"title":{},"name":{},"text":{"384":{},"490":{}},"component":{}}],["watch",{"_index":4082,"title":{},"name":{},"text":{"204":{}},"component":{}}],["watermark",{"_index":3858,"title":{},"name":{},"text":{"167":{},"198":{}},"component":{}}],["way",{"_index":274,"title":{"157":{}},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"15":{},"16":{},"20":{},"25":{},"38":{},"43":{},"52":{},"55":{},"56":{},"66":{},"76":{},"77":{},"78":{},"82":{},"92":{},"97":{},"100":{},"133":{},"154":{},"157":{},"158":{},"163":{},"165":{},"172":{},"175":{},"217":{},"218":{},"222":{},"227":{},"228":{},"229":{},"243":{},"245":{},"247":{},"250":{},"251":{},"254":{},"309":{},"331":{},"344":{},"355":{},"366":{},"367":{},"372":{},"381":{},"383":{},"389":{},"392":{},"398":{},"400":{},"432":{},"433":{},"439":{},"453":{},"466":{},"498":{},"513":{},"514":{},"520":{},"521":{},"527":{},"528":{},"529":{},"530":{},"532":{},"537":{},"541":{},"544":{}},"component":{}}],["weather",{"_index":4587,"title":{},"name":{},"text":{"241":{}},"component":{}}],["web",{"_index":67,"title":{"25":{},"37":{},"40":{},"42":{},"43":{},"50":{},"58":{},"377":{},"543":{},"25-1":{},"25-2":{},"25-3":{},"41-14":{},"43-2":{},"50-2":{},"50-3":{},"50-8":{},"152-15":{},"516-2":{},"541-2":{},"541-10":{},"541-11":{},"543-1":{}},"name":{"25":{},"40":{},"43":{},"50":{}},"text":{"1":{},"2":{},"5":{},"10":{},"19":{},"24":{},"25":{},"26":{},"37":{},"40":{},"41":{},"42":{},"43":{},"50":{},"51":{},"52":{},"58":{},"63":{},"64":{},"81":{},"86":{},"92":{},"97":{},"161":{},"162":{},"179":{},"198":{},"199":{},"264":{},"274":{},"319":{},"330":{},"331":{},"332":{},"333":{},"334":{},"367":{},"377":{},"383":{},"417":{},"418":{},"465":{},"514":{},"518":{},"525":{},"533":{},"540":{},"541":{},"543":{}},"component":{}}],["web.xml",{"_index":1583,"title":{},"name":{},"text":{"25":{}},"component":{}}],["web:latest",{"_index":1551,"title":{},"name":{},"text":{"25":{},"540":{}},"component":{}}],["web:x.xx",{"_index":7166,"title":{},"name":{},"text":{"540":{}},"component":{}}],["webapp",{"_index":1704,"title":{},"name":{},"text":{"37":{}},"component":{}}],["webapps/hop",{"_index":1707,"title":{},"name":{},"text":{"37":{}},"component":{}}],["webapps/hop/config/hop",{"_index":7271,"title":{},"name":{},"text":{"543":{}},"component":{}}],["webdav",{"_index":1076,"title":{},"name":{},"text":{"8":{}},"component":{}}],["webdav://somehost:8080/dist",{"_index":1083,"title":{},"name":{},"text":{"8":{}},"component":{}}],["webserv",{"_index":1405,"title":{},"name":{},"text":{"19":{},"41":{},"514":{}},"component":{}}],["webservic",{"_index":1903,"title":{"211":{},"502":{}},"name":{"377":{}},"text":{"40":{},"43":{},"50":{},"81":{},"86":{},"211":{},"263":{},"327":{},"330":{},"331":{},"332":{},"333":{},"334":{},"502":{}},"component":{}}],["webserviceavail",{"_index":6611,"title":{},"name":{"502":{}},"text":{},"component":{}}],["websit",{"_index":2466,"title":{"540-3":{}},"name":{},"text":{"56":{},"113":{},"259":{},"429":{},"540":{}},"component":{}}],["website/.htaccess",{"_index":7175,"title":{},"name":{},"text":{"540":{}},"component":{}}],["website/content/download/index.adoc",{"_index":7173,"title":{},"name":{},"text":{"540":{}},"component":{}}],["website/site.yaml",{"_index":7174,"title":{},"name":{},"text":{"540":{}},"component":{}}],["webspoon",{"_index":6736,"title":{},"name":{},"text":{"518":{},"542":{}},"component":{}}],["web’",{"_index":1581,"title":{},"name":{},"text":{"25":{}},"component":{}}],["week",{"_index":4121,"title":{},"name":{},"text":{"205":{},"247":{},"256":{},"366":{}},"component":{}}],["weekday",{"_index":4657,"title":{"247-43":{}},"name":{},"text":{"247":{}},"component":{}}],["weekday(date(2005;1;1",{"_index":4894,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weekday(date(2005;1;1);1",{"_index":4895,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weekday(date(2005;1;1);2",{"_index":4896,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weekday(date(2005;1;1);3",{"_index":4897,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weekday(date(2006;5;21",{"_index":4893,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weekdaydefinit",{"_index":4853,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weekend",{"_index":4830,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weeknum",{"_index":4658,"title":{"247-44":{}},"name":{},"text":{},"component":{}}],["weeknum(\"3/9/2012",{"_index":4903,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weeknum(\"3/9/2012\",2",{"_index":4905,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weeknum(serial_number,[return_typ",{"_index":4902,"title":{},"name":{},"text":{"247":{}},"component":{}}],["weka",{"_index":2993,"title":{},"name":{},"text":{"87":{},"291":{},"318":{}},"component":{}}],["welcom",{"_index":1592,"title":{},"name":{},"text":{"25":{},"27":{},"167":{},"168":{},"525":{},"530":{}},"component":{}}],["well",{"_index":285,"title":{"506":{}},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"9":{},"29":{},"40":{},"43":{},"50":{},"56":{},"85":{},"90":{},"106":{},"150":{},"152":{},"157":{},"162":{},"163":{},"165":{},"168":{},"170":{},"180":{},"205":{},"220":{},"228":{},"235":{},"236":{},"247":{},"260":{},"275":{},"304":{},"305":{},"324":{},"325":{},"331":{},"340":{},"345":{},"355":{},"389":{},"395":{},"433":{},"441":{},"457":{},"466":{},"485":{},"499":{},"506":{},"511":{},"514":{},"528":{},"532":{},"533":{}},"component":{}}],["went",{"_index":1658,"title":{},"name":{},"text":{"29":{},"38":{},"499":{}},"component":{}}],["west1",{"_index":3492,"title":{},"name":{},"text":{"158":{}},"component":{}}],["west3.gcp.confluent.cloud",{"_index":4056,"title":{},"name":{},"text":{"197":{},"275":{},"276":{}},"component":{}}],["western",{"_index":6480,"title":{},"name":{},"text":{"461":{},"463":{}},"component":{}}],["we’ll",{"_index":238,"title":{},"name":{},"text":{"2":{},"13":{},"21":{},"53":{},"54":{},"55":{},"56":{},"57":{},"78":{},"83":{},"158":{},"160":{},"161":{},"162":{},"164":{},"165":{},"304":{},"389":{},"433":{},"543":{}},"component":{}}],["we’r",{"_index":2481,"title":{},"name":{},"text":{"56":{},"83":{},"84":{},"158":{},"162":{},"528":{},"533":{}},"component":{}}],["we’v",{"_index":388,"title":{},"name":{},"text":{"4":{},"17":{},"56":{},"57":{},"64":{},"519":{}},"component":{}}],["whatev",{"_index":4249,"title":{},"name":{},"text":{"220":{},"234":{}},"component":{}}],["what’",{"_index":1101,"title":{},"name":{},"text":{"9":{},"76":{},"160":{},"162":{},"395":{},"533":{}},"component":{}}],["whenev",{"_index":668,"title":{},"name":{},"text":{"7":{},"9":{},"78":{},"275":{},"388":{},"394":{},"544":{}},"component":{}}],["wherea",{"_index":683,"title":{},"name":{},"text":{"7":{},"298":{}},"component":{}}],["whether",{"_index":341,"title":{},"name":{},"text":{"2":{},"11":{},"22":{},"27":{},"29":{},"34":{},"50":{},"58":{},"84":{},"105":{},"165":{},"189":{},"203":{},"210":{},"227":{},"235":{},"242":{},"247":{},"258":{},"270":{},"273":{},"278":{},"280":{},"292":{},"298":{},"306":{},"307":{},"324":{},"338":{},"347":{},"354":{},"358":{},"371":{},"380":{},"386":{},"441":{},"457":{},"462":{},"463":{},"470":{},"477":{},"478":{},"479":{},"486":{},"487":{},"488":{},"496":{},"500":{},"504":{}},"component":{}}],["whistl",{"_index":2474,"title":{},"name":{},"text":{"56":{}},"component":{}}],["white",{"_index":2847,"title":{},"name":{},"text":{"79":{},"269":{},"381":{}},"component":{}}],["whitespac",{"_index":4289,"title":{},"name":{},"text":{"222":{},"298":{},"316":{},"346":{}},"component":{}}],["whm",{"_index":6592,"title":{},"name":{"492":{}},"text":{},"component":{}}],["whole",{"_index":1596,"title":{},"name":{},"text":{"25":{},"85":{},"157":{},"163":{},"223":{},"238":{},"247":{},"261":{},"317":{},"372":{},"400":{}},"component":{}}],["whose",{"_index":2272,"title":{},"name":{},"text":{"50":{},"233":{},"247":{},"357":{},"466":{}},"component":{}}],["wide",{"_index":466,"title":{},"name":{},"text":{"5":{},"7":{},"167":{},"205":{},"261":{},"355":{},"429":{}},"component":{}}],["widechar",{"_index":6518,"title":{},"name":{},"text":{"470":{}},"component":{}}],["widen",{"_index":6519,"title":{},"name":{},"text":{"470":{}},"component":{}}],["widget",{"_index":6822,"title":{},"name":{},"text":{"525":{},"532":{},"541":{},"542":{}},"component":{}}],["width",{"_index":1512,"title":{},"name":{},"text":{"24":{},"27":{},"178":{},"217":{},"366":{},"367":{},"383":{},"542":{}},"component":{}}],["wiget",{"_index":6298,"title":{},"name":{"400":{}},"text":{},"component":{}}],["wikipedia",{"_index":5792,"title":{"433-4":{}},"name":{},"text":{"313":{},"314":{},"428":{},"429":{},"433":{}},"component":{}}],["wil",{"_index":6269,"title":{},"name":{},"text":{"382":{}},"component":{}}],["wild",{"_index":6066,"title":{},"name":{},"text":{"366":{}},"component":{}}],["wildcard",{"_index":1595,"title":{},"name":{},"text":{"25":{},"222":{},"234":{},"250":{},"251":{},"273":{},"280":{},"313":{},"317":{},"366":{},"435":{},"439":{},"441":{},"442":{},"447":{},"449":{},"450":{},"454":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"468":{},"477":{},"478":{},"487":{},"488":{},"499":{},"506":{},"509":{}},"component":{}}],["window",{"_index":267,"title":{"202":{},"5-6":{},"130-1":{},"202-4":{},"533-10":{}},"name":{"426":{}},"text":{"2":{},"5":{},"6":{},"8":{},"10":{},"15":{},"17":{},"19":{},"38":{},"41":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"81":{},"85":{},"86":{},"90":{},"94":{},"130":{},"150":{},"151":{},"152":{},"200":{},"202":{},"273":{},"291":{},"316":{},"346":{},"367":{},"426":{},"439":{},"441":{},"450":{},"453":{},"489":{},"490":{},"499":{},"503":{},"533":{},"541":{},"543":{}},"component":{}}],["windowscodepag",{"_index":3104,"title":{},"name":{},"text":{"94":{},"426":{}},"component":{}}],["winkler",{"_index":5322,"title":{},"name":{},"text":{"248":{}},"component":{}}],["wise",{"_index":4223,"title":{},"name":{},"text":{"216":{}},"component":{}}],["wish",{"_index":5962,"title":{},"name":{},"text":{"338":{},"360":{},"492":{},"513":{}},"component":{}}],["witcher",{"_index":4591,"title":{},"name":{},"text":{"241":{}},"component":{}}],["within",{"_index":753,"title":{},"name":{},"text":{"7":{},"52":{},"55":{},"87":{},"154":{},"165":{},"168":{},"177":{},"179":{},"201":{},"202":{},"205":{},"211":{},"222":{},"231":{},"241":{},"244":{},"247":{},"248":{},"261":{},"273":{},"275":{},"280":{},"283":{},"290":{},"291":{},"292":{},"298":{},"302":{},"309":{},"328":{},"331":{},"332":{},"333":{},"334":{},"342":{},"365":{},"367":{},"373":{},"378":{},"387":{},"441":{},"443":{},"453":{},"455":{},"466":{},"480":{},"481":{},"485":{},"489":{},"490":{},"502":{},"503":{},"530":{}},"component":{}}],["withkey",{"_index":3766,"title":{},"name":{},"text":{"163":{}},"component":{}}],["without",{"_index":203,"title":{"541-5":{}},"name":{},"text":{"1":{},"2":{},"20":{},"21":{},"29":{},"38":{},"41":{},"50":{},"52":{},"56":{},"79":{},"82":{},"83":{},"90":{},"150":{},"151":{},"152":{},"154":{},"170":{},"216":{},"222":{},"227":{},"229":{},"233":{},"234":{},"235":{},"237":{},"247":{},"251":{},"261":{},"262":{},"264":{},"270":{},"273":{},"275":{},"279":{},"283":{},"294":{},"314":{},"329":{},"330":{},"332":{},"333":{},"334":{},"338":{},"344":{},"352":{},"361":{},"363":{},"366":{},"373":{},"382":{},"389":{},"405":{},"429":{},"432":{},"433":{},"484":{},"485":{},"489":{},"498":{},"511":{},"527":{},"533":{},"541":{}},"component":{}}],["wizard",{"_index":6128,"title":{},"name":{},"text":{"366":{},"470":{},"471":{}},"component":{}}],["wlan0",{"_index":3604,"title":{},"name":{},"text":{"161":{}},"component":{}}],["wlog",{"_index":6190,"title":{},"name":{},"text":{"372":{}},"component":{}}],["won’t",{"_index":1539,"title":{},"name":{},"text":{"24":{},"52":{},"87":{},"160":{},"205":{},"270":{},"430":{}},"component":{}}],["word",{"_index":1106,"title":{"43-7":{}},"name":{},"text":{"9":{},"71":{},"205":{},"241":{},"247":{},"248":{},"269":{},"317":{},"395":{},"453":{},"528":{}},"component":{}}],["worflow",{"_index":6612,"title":{},"name":{},"text":{"503":{}},"component":{}}],["work",{"_index":110,"title":{"23":{},"433":{},"23-3":{},"78-1":{},"81-2":{},"163-2":{},"431-3":{},"533-12":{},"541-5":{}},"name":{"433":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"9":{},"11":{},"13":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"29":{},"31":{},"36":{},"38":{},"39":{},"52":{},"53":{},"54":{},"55":{},"56":{},"68":{},"78":{},"80":{},"82":{},"83":{},"84":{},"91":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"105":{},"106":{},"131":{},"154":{},"158":{},"159":{},"160":{},"163":{},"165":{},"171":{},"187":{},"196":{},"197":{},"203":{},"205":{},"217":{},"220":{},"227":{},"233":{},"235":{},"236":{},"239":{},"246":{},"247":{},"250":{},"256":{},"263":{},"264":{},"270":{},"275":{},"276":{},"309":{},"311":{},"319":{},"331":{},"337":{},"344":{},"346":{},"355":{},"365":{},"366":{},"367":{},"372":{},"377":{},"384":{},"388":{},"389":{},"393":{},"395":{},"404":{},"409":{},"431":{},"432":{},"433":{},"441":{},"442":{},"462":{},"465":{},"466":{},"468":{},"477":{},"478":{},"482":{},"489":{},"494":{},"507":{},"513":{},"514":{},"519":{},"520":{},"528":{},"529":{},"533":{},"534":{},"536":{},"538":{},"544":{}},"component":{}}],["workbench",{"_index":5716,"title":{},"name":{},"text":{"297":{}},"component":{}}],["workbook",{"_index":4377,"title":{},"name":{},"text":{"234":{}},"component":{}}],["workday",{"_index":4659,"title":{"247-45":{}},"name":{},"text":{"247":{}},"component":{}}],["workday([date_field],[nb_days_field",{"_index":4908,"title":{},"name":{},"text":{"247":{}},"component":{}}],["workday(start_d",{"_index":4907,"title":{},"name":{},"text":{"247":{}},"component":{}}],["worker",{"_index":98,"title":{},"name":{},"text":{"1":{},"13":{},"56":{},"161":{},"165":{},"166":{},"276":{},"404":{},"407":{}},"component":{}}],["worker.sh",{"_index":3589,"title":{},"name":{},"text":{"161":{}},"component":{}}],["workerregion",{"_index":3817,"title":{},"name":{},"text":{"165":{}},"component":{}}],["workerzon",{"_index":3818,"title":{},"name":{},"text":{"165":{}},"component":{}}],["workflow",{"_index":45,"title":{"16":{},"54":{},"56":{},"57":{},"73":{},"74":{},"103":{},"104":{},"378":{},"379":{},"503":{},"510":{},"511":{},"512":{},"7-14":{},"16-1":{},"24-2":{},"24-3":{},"29-10":{},"36-2":{},"40-2":{},"41-12":{},"42-12":{},"42-14":{},"42-18":{},"42-20":{},"54-1":{},"54-2":{},"54-4":{},"55-2":{},"55-9":{},"55-10":{},"55-11":{},"55-12":{},"55-13":{},"57-1":{},"75-11":{},"76-4":{},"83-10":{},"103-3":{},"103-4":{},"104-1":{},"105-1":{},"105-2":{},"105-3":{},"152-13":{},"389-16":{},"429-3":{},"432-4":{},"503-3":{},"510-1":{},"511-1":{},"544-12":{},"544-13":{},"544-14":{},"544-15":{},"544-16":{}},"name":{"16":{},"54":{},"57":{},"73":{},"74":{},"103":{},"104":{},"105":{},"378":{},"379":{},"410":{},"503":{},"510":{},"511":{},"512":{}},"text":{"1":{},"2":{},"4":{},"5":{},"7":{},"9":{},"10":{},"11":{},"13":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"34":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"44":{},"50":{},"51":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"62":{},"64":{},"73":{},"74":{},"75":{},"76":{},"79":{},"81":{},"83":{},"84":{},"86":{},"91":{},"92":{},"93":{},"94":{},"95":{},"102":{},"103":{},"104":{},"105":{},"151":{},"152":{},"154":{},"156":{},"169":{},"170":{},"218":{},"220":{},"237":{},"242":{},"244":{},"245":{},"246":{},"250":{},"253":{},"254":{},"256":{},"258":{},"275":{},"296":{},"309":{},"310":{},"313":{},"314":{},"341":{},"344":{},"352":{},"378":{},"379":{},"384":{},"388":{},"389":{},"391":{},"392":{},"395":{},"397":{},"399":{},"402":{},"403":{},"404":{},"407":{},"408":{},"410":{},"413":{},"414":{},"415":{},"417":{},"418":{},"420":{},"432":{},"433":{},"434":{},"435":{},"436":{},"438":{},"439":{},"440":{},"441":{},"442":{},"443":{},"444":{},"445":{},"446":{},"447":{},"448":{},"449":{},"450":{},"451":{},"452":{},"453":{},"454":{},"455":{},"456":{},"457":{},"458":{},"459":{},"460":{},"461":{},"462":{},"463":{},"464":{},"465":{},"466":{},"467":{},"468":{},"469":{},"470":{},"471":{},"472":{},"475":{},"477":{},"478":{},"479":{},"480":{},"481":{},"482":{},"483":{},"485":{},"486":{},"487":{},"488":{},"489":{},"490":{},"491":{},"492":{},"493":{},"494":{},"495":{},"496":{},"497":{},"498":{},"499":{},"500":{},"501":{},"502":{},"503":{},"504":{},"505":{},"506":{},"507":{},"508":{},"509":{},"510":{},"511":{},"512":{},"514":{},"518":{},"519":{},"520":{},"525":{},"527":{},"530":{},"531":{},"532":{},"533":{},"544":{},"546":{}},"component":{}}],["workflow/environ",{"_index":5388,"title":{},"name":{},"text":{"258":{}},"component":{}}],["workflow/pipelin",{"_index":640,"title":{},"name":{},"text":{"7":{}},"component":{}}],["workflow_configur",{"_index":2065,"title":{},"name":{},"text":{"42":{}},"component":{}}],["workflow_execution_configur",{"_index":2066,"title":{},"name":{},"text":{"42":{}},"component":{}}],["workflowend",{"_index":2763,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowengin",{"_index":7334,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowengine.startexecut",{"_index":7337,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowenginefactory.createworkflowengin",{"_index":7335,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowerrorcount",{"_index":2767,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowexecutor",{"_index":3107,"title":{},"name":{},"text":{"95":{}},"component":{}}],["workflowfilenam",{"_index":2761,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowhopmeta",{"_index":7330,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowhopmeta(startmeta",{"_index":7332,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowlog",{"_index":2766,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowlogchannelid",{"_index":2764,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowmeta",{"_index":7316,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowmeta.addaction(dummymeta",{"_index":7329,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowmeta.addaction(startmeta",{"_index":7324,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflowmeta.addworkflowhop(generatordummyhop",{"_index":7333,"title":{},"name":{},"text":{"544":{}},"component":{}}],["workflownam",{"_index":2760,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowparentlogchannelid",{"_index":2765,"title":{},"name":{},"text":{"76":{}},"component":{}}],["workflows/main.hwf",{"_index":6661,"title":{},"name":{},"text":{"514":{}},"component":{}}],["workflowstart",{"_index":2762,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflowstatusdescript",{"_index":2768,"title":{},"name":{},"text":{"76":{},"379":{}},"component":{}}],["workflow’",{"_index":90,"title":{},"name":{},"text":{"1":{},"13":{},"24":{},"55":{},"105":{},"399":{},"404":{},"503":{}},"component":{}}],["workload",{"_index":4263,"title":{},"name":{},"text":{"220":{}},"component":{}}],["worksheet",{"_index":4369,"title":{},"name":{},"text":{"234":{},"247":{},"260":{},"261":{}},"component":{}}],["workspac",{"_index":1628,"title":{},"name":{},"text":{"27":{},"177":{},"179":{},"245":{},"248":{},"255":{},"257":{},"258":{},"265":{},"319":{},"533":{}},"component":{}}],["workspace’",{"_index":7027,"title":{},"name":{},"text":{"533":{}},"component":{}}],["world",{"_index":3512,"title":{},"name":{},"text":{"158":{},"160":{},"528":{}},"component":{}}],["worri",{"_index":6753,"title":{},"name":{},"text":{"519":{}},"component":{}}],["worth",{"_index":1100,"title":{},"name":{},"text":{"9":{},"525":{},"529":{},"544":{}},"component":{}}],["wrap",{"_index":2061,"title":{"55-15":{}},"name":{},"text":{"42":{},"163":{},"233":{},"366":{},"389":{}},"component":{}}],["writabl",{"_index":1472,"title":{},"name":{},"text":{"22":{}},"component":{}}],["write",{"_index":103,"title":{"314":{},"380":{},"504":{},"505":{},"75-8":{},"75-15":{}},"name":{},"text":{"1":{},"4":{},"9":{},"10":{},"13":{},"15":{},"20":{},"24":{},"38":{},"46":{},"53":{},"54":{},"56":{},"57":{},"62":{},"65":{},"67":{},"68":{},"73":{},"75":{},"78":{},"80":{},"81":{},"83":{},"84":{},"86":{},"106":{},"153":{},"154":{},"156":{},"158":{},"163":{},"185":{},"187":{},"189":{},"191":{},"197":{},"199":{},"200":{},"208":{},"217":{},"220":{},"233":{},"235":{},"261":{},"270":{},"274":{},"278":{},"290":{},"292":{},"294":{},"295":{},"297":{},"300":{},"303":{},"305":{},"311":{},"314":{},"315":{},"337":{},"340":{},"346":{},"352":{},"353":{},"364":{},"367":{},"368":{},"372":{},"376":{},"380":{},"383":{},"393":{},"397":{},"404":{},"407":{},"428":{},"429":{},"430":{},"432":{},"433":{},"455":{},"498":{},"500":{},"503":{},"504":{},"505":{},"514":{},"529":{},"533":{}},"component":{}}],["writer",{"_index":2873,"title":{"187":{},"235":{}},"name":{"187":{}},"text":{"81":{},"86":{},"88":{},"187":{},"235":{},"428":{}},"component":{}}],["writetofil",{"_index":6615,"title":{},"name":{"504":{}},"text":{},"component":{}}],["writetolog",{"_index":6245,"title":{},"name":{"380":{},"505":{}},"text":{},"component":{}}],["written",{"_index":201,"title":{},"name":{},"text":{"1":{},"7":{},"29":{},"32":{},"41":{},"53":{},"54":{},"55":{},"75":{},"76":{},"81":{},"85":{},"151":{},"160":{},"163":{},"216":{},"225":{},"234":{},"235":{},"256":{},"268":{},"269":{},"292":{},"295":{},"303":{},"305":{},"314":{},"316":{},"339":{},"352":{},"360":{},"364":{},"366":{},"371":{},"380":{},"383":{},"389":{},"400":{},"405":{},"432":{},"453":{},"500":{},"505":{},"519":{},"544":{}},"component":{}}],["wrong",{"_index":1144,"title":{},"name":{},"text":{"9":{},"38":{},"205":{},"220":{},"227":{},"366":{},"374":{},"378":{},"391":{},"542":{}},"component":{}}],["ws",{"_index":1906,"title":{},"name":{},"text":{"41":{}},"component":{}}],["wsdl",{"_index":5420,"title":{},"name":{},"text":{"263":{},"377":{}},"component":{}}],["wunsch",{"_index":5321,"title":{},"name":{},"text":{"248":{}},"component":{}}],["www",{"_index":1111,"title":{},"name":{},"text":{"9":{},"395":{}},"component":{}}],["www.neo4j.com/download",{"_index":6349,"title":{},"name":{},"text":{"432":{}},"component":{}}],["wzcfedjojrspuc5ynlb+buiqpy88yipyeka1iypdulrhfkmyeydpbjbhdp0qxkspyjebpbuxnz",{"_index":2126,"title":{},"name":{},"text":{"42":{}},"component":{}}],["x",{"_index":1051,"title":{},"name":{},"text":{"8":{},"19":{},"36":{},"37":{},"39":{},"47":{},"168":{},"172":{},"178":{},"179":{},"202":{},"246":{},"247":{},"270":{},"275":{},"309":{},"316":{},"321":{},"378":{},"433":{},"438":{},"442":{},"448":{},"450":{},"462":{},"468":{},"477":{},"478":{},"492":{},"494":{},"499":{},"506":{},"534":{}},"component":{}}],["x.xx",{"_index":7087,"title":{},"name":{},"text":{"537":{},"538":{},"540":{}},"component":{}}],["x.xx.tgz",{"_index":7132,"title":{},"name":{},"text":{"538":{}},"component":{}}],["x.xx.tgz.asc",{"_index":7133,"title":{},"name":{},"text":{"538":{}},"component":{}}],["x.xx.tgz.sha512",{"_index":7134,"title":{},"name":{},"text":{"538":{}},"component":{}}],["x.xx.zip",{"_index":7130,"title":{},"name":{},"text":{"538":{}},"component":{}}],["x.xx.zip.asc",{"_index":7091,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["x.xx.zip.sha512",{"_index":7089,"title":{},"name":{},"text":{"537":{},"538":{}},"component":{}}],["x.xx/.git",{"_index":7123,"title":{},"name":{},"text":{"538":{}},"component":{}}],["x.xx/helm",{"_index":7131,"title":{},"name":{},"text":{"538":{}},"component":{}}],["x2",{"_index":2917,"title":{},"name":{},"text":{"82":{}},"component":{}}],["x509",{"_index":1948,"title":{},"name":{},"text":{"41":{}},"component":{}}],["x86_64",{"_index":462,"title":{},"name":{},"text":{"5":{}},"component":{}}],["xarg",{"_index":7107,"title":{},"name":{},"text":{"537":{}},"component":{}}],["xdebug",{"_index":583,"title":{},"name":{},"text":{"5":{},"533":{}},"component":{}}],["xdix",{"_index":5279,"title":{},"name":{},"text":{"247":{}},"component":{}}],["xhtml",{"_index":5829,"title":{},"name":{},"text":{"319":{}},"component":{}}],["xl",{"_index":4366,"title":{},"name":{},"text":{"234":{},"235":{}},"component":{}}],["xls(x",{"_index":4397,"title":{},"name":{},"text":{"235":{}},"component":{}}],["xlsx",{"_index":4365,"title":{},"name":{},"text":{"234":{},"235":{}},"component":{}}],["xm",{"_index":3407,"title":{},"name":{},"text":{"152":{},"162":{}},"component":{}}],["xml",{"_index":23,"title":{"178":{},"231":{},"250":{},"381":{},"382":{},"383":{},"506":{}},"name":{},"text":{"1":{},"19":{},"22":{},"30":{},"40":{},"41":{},"42":{},"43":{},"44":{},"46":{},"52":{},"64":{},"81":{},"86":{},"162":{},"163":{},"170":{},"178":{},"205":{},"231":{},"235":{},"246":{},"250":{},"256":{},"319":{},"358":{},"377":{},"381":{},"382":{},"383":{},"384":{},"385":{},"388":{},"412":{},"418":{},"451":{},"503":{},"506":{},"507":{},"508":{},"511":{},"518":{},"527":{},"530":{},"544":{}},"component":{}}],["xml.hpl",{"_index":5350,"title":{},"name":{},"text":{"250":{}},"component":{}}],["xml=i",{"_index":1899,"title":{},"name":{},"text":{"40":{},"42":{}},"component":{}}],["xmlinputstream",{"_index":6250,"title":{},"name":{"381":{}},"text":{},"component":{}}],["xmljoin",{"_index":6263,"title":{},"name":{"382":{}},"text":{},"component":{}}],["xmloutput",{"_index":6270,"title":{},"name":{"383":{}},"text":{},"component":{}}],["xmlwellform",{"_index":6616,"title":{},"name":{"506":{}},"text":{},"component":{}}],["xmx",{"_index":570,"title":{},"name":{},"text":{"5":{}},"component":{}}],["xmx2048m",{"_index":569,"title":{},"name":{},"text":{"5":{},"19":{},"38":{},"41":{},"47":{},"90":{},"150":{},"151":{},"152":{}},"component":{}}],["xmx4g",{"_index":578,"title":{},"name":{},"text":{"5":{}},"component":{}}],["xmx512m",{"_index":574,"title":{},"name":{},"text":{"5":{}},"component":{}}],["xmx64m",{"_index":1343,"title":{},"name":{},"text":{"19":{},"44":{}},"component":{}}],["xmx=2g",{"_index":550,"title":{},"name":{},"text":{"5":{},"423":{}},"component":{}}],["xnoagent",{"_index":7044,"title":{},"name":{},"text":{"533":{}},"component":{}}],["xoauth2",{"_index":4348,"title":{},"name":{},"text":{"232":{},"280":{},"464":{},"466":{}},"component":{}}],["xp",{"_index":3826,"title":{},"name":{},"text":{"165":{},"166":{},"167":{},"168":{},"532":{}},"component":{}}],["xpath",{"_index":4342,"title":{},"name":{},"text":{"231":{},"250":{},"382":{}},"component":{}}],["xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005",{"_index":7046,"title":{},"name":{},"text":{"533":{}},"component":{}}],["xsd",{"_index":2910,"title":{"384":{},"507":{}},"name":{},"text":{"81":{},"86":{},"384":{},"507":{}},"component":{}}],["xsdvalid",{"_index":6272,"title":{},"name":{"384":{},"507":{}},"text":{},"component":{}}],["xsl",{"_index":2911,"title":{"385":{},"508":{}},"name":{},"text":{"81":{},"86":{},"385":{},"508":{}},"component":{}}],["xslt",{"_index":6275,"title":{},"name":{"385":{},"508":{}},"text":{"385":{},"508":{}},"component":{}}],["xul",{"_index":6741,"title":{},"name":{},"text":{"518":{}},"component":{}}],["xvf",{"_index":7103,"title":{},"name":{},"text":{"537":{}},"component":{}}],["xx",{"_index":5259,"title":{},"name":{},"text":{"247":{}},"component":{}}],["xx:+aggressiveheap",{"_index":6641,"title":{},"name":{},"text":{"514":{}},"component":{}}],["xxx",{"_index":5255,"title":{},"name":{},"text":{"247":{}},"component":{}}],["xyxi",{"_index":5257,"title":{},"name":{},"text":{"247":{}},"component":{}}],["xyz",{"_index":5295,"title":{},"name":{},"text":{"247":{}},"component":{}}],["x{1a",{"_index":4638,"title":{},"name":{},"text":{"246":{}},"component":{}}],["y",{"_index":780,"title":{},"name":{},"text":{"7":{},"22":{},"41":{},"42":{},"81":{},"178":{},"179":{},"212":{},"233":{},"234":{},"240":{},"264":{},"270":{},"279":{},"289":{},"291":{},"292":{},"311":{},"316":{},"321":{},"338":{},"342":{},"366":{},"369":{},"433":{},"499":{}},"component":{}}],["y/n",{"_index":2445,"title":{},"name":{},"text":{"55":{},"277":{},"278":{},"317":{},"346":{},"379":{}},"component":{}}],["y:year",{"_index":6375,"title":{},"name":{},"text":{"433":{}},"component":{}}],["yaml",{"_index":2912,"title":{"386":{}},"name":{},"text":{"81":{},"86":{},"353":{},"386":{}},"component":{}}],["yamlinput",{"_index":6277,"title":{},"name":{"386":{}},"text":{},"component":{}}],["yarn",{"_index":3850,"title":{},"name":{},"text":{"167":{},"168":{}},"component":{}}],["ydzzd7mqbwcmhlhxx5jljpb39a08auyy5aqnw9aw+bvsoae6ryns9lng61qvnlq/hr3ldpb5cjl8",{"_index":2125,"title":{},"name":{},"text":{"42":{}},"component":{}}],["ye",{"_index":1610,"title":{},"name":{},"text":{"27":{},"93":{},"130":{},"235":{},"250":{},"270":{},"349":{},"358":{},"366":{},"514":{},"518":{},"520":{}},"component":{}}],["year",{"_index":2942,"title":{"247-46":{}},"name":{},"text":{"83":{},"205":{},"217":{},"247":{},"256":{},"258":{},"331":{},"366":{},"367":{},"372":{},"383":{},"433":{}},"component":{}}],["year\").getinteger(r",{"_index":6208,"title":{},"name":{},"text":{"372":{}},"component":{}}],["year\"/01/01",{"_index":4302,"title":{},"name":{},"text":{"227":{}},"component":{}}],["year(date(1904;1;1",{"_index":4917,"title":{},"name":{},"text":{"247":{}},"component":{}}],["year.0",{"_index":2951,"title":{},"name":{},"text":{"83":{}},"component":{}}],["yearfrac",{"_index":4660,"title":{"247-47":{}},"name":{},"text":{"247":{}},"component":{}}],["yearfrac(\"1/1/2012\",\"7/30/2012",{"_index":4923,"title":{},"name":{},"text":{"247":{}},"component":{}}],["yearfrac(\"1/1/2012\",\"7/30/2012\",1",{"_index":4927,"title":{},"name":{},"text":{"247":{}},"component":{}}],["yearfrac(\"1/1/2012\",\"7/30/2012\",3",{"_index":4932,"title":{},"name":{},"text":{"247":{}},"component":{}}],["yearfrac(start_d",{"_index":4921,"title":{},"name":{},"text":{"247":{}},"component":{}}],["yearindex",{"_index":6203,"title":{},"name":{},"text":{"372":{}},"component":{}}],["yearindex<0",{"_index":6205,"title":{},"name":{},"text":{"372":{}},"component":{}}],["year’",{"_index":4919,"title":{},"name":{},"text":{"247":{}},"component":{}}],["yellow",{"_index":1504,"title":{},"name":{},"text":{"23":{}},"component":{}}],["yes(simplifi",{"_index":6735,"title":{},"name":{},"text":{"518":{}},"component":{}}],["yesterday",{"_index":5380,"title":{},"name":{},"text":{"256":{},"363":{}},"component":{}}],["yesterday’",{"_index":2344,"title":{},"name":{},"text":{"52":{},"496":{}},"component":{}}],["yhe",{"_index":6632,"title":{},"name":{},"text":{"513":{}},"component":{}}],["yo",{"_index":3588,"title":{},"name":{},"text":{"161":{},"513":{}},"component":{}}],["yoda",{"_index":4593,"title":{},"name":{},"text":{"241":{}},"component":{}}],["yoursecretkey",{"_index":3118,"title":{},"name":{},"text":{"97":{}},"component":{}}],["yourself",{"_index":754,"title":{},"name":{},"text":{"7":{},"10":{},"81":{},"280":{},"297":{},"345":{},"499":{},"533":{}},"component":{}}],["you’d",{"_index":413,"title":{},"name":{},"text":{"4":{},"5":{},"30":{},"83":{},"235":{}},"component":{}}],["you’ll",{"_index":337,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"9":{},"14":{},"15":{},"16":{},"17":{},"22":{},"25":{},"26":{},"28":{},"29":{},"30":{},"38":{},"40":{},"41":{},"54":{},"55":{},"56":{},"57":{},"68":{},"71":{},"78":{},"79":{},"80":{},"81":{},"83":{},"88":{},"90":{},"95":{},"101":{},"104":{},"150":{},"151":{},"152":{},"158":{},"160":{},"163":{},"164":{},"169":{},"204":{},"337":{},"389":{},"396":{},"519":{},"520":{},"528":{},"532":{},"533":{},"543":{}},"component":{}}],["you’r",{"_index":395,"title":{},"name":{},"text":{"4":{},"5":{},"7":{},"9":{},"20":{},"29":{},"39":{},"52":{},"55":{},"56":{},"78":{},"79":{},"81":{},"84":{},"158":{},"163":{},"196":{},"234":{},"247":{},"374":{},"395":{},"519":{},"528":{},"532":{},"533":{},"535":{},"544":{}},"component":{}}],["you’v",{"_index":514,"title":{},"name":{},"text":{"5":{},"56":{},"78":{},"103":{},"158":{},"264":{},"521":{},"533":{}},"component":{}}],["yyyi",{"_index":4731,"title":{},"name":{},"text":{"247":{},"259":{},"270":{},"273":{},"331":{}},"component":{}}],["yyymmdd",{"_index":5771,"title":{},"name":{},"text":{"305":{}},"component":{}}],["yyymmdd_hhmmss",{"_index":6502,"title":{},"name":{},"text":{"465":{}},"component":{}}],["yyyy/mm/dd",{"_index":6620,"title":{},"name":{},"text":{"509":{}},"component":{}}],["yyyymmdd",{"_index":4384,"title":{},"name":{},"text":{"234":{},"314":{},"352":{},"442":{},"468":{},"481":{},"499":{},"503":{}},"component":{}}],["yyyymmdd'_'hhmmss",{"_index":6487,"title":{},"name":{},"text":{"461":{},"468":{},"499":{}},"component":{}}],["yyyymmdd_hhmmss",{"_index":6404,"title":{},"name":{},"text":{"442":{}},"component":{}}],["y’(e",{"_index":5929,"title":{},"name":{},"text":{"331":{}},"component":{}}],["z",{"_index":1525,"title":{},"name":{},"text":{"24":{},"36":{},"94":{},"151":{},"179":{},"247":{},"321":{},"366":{},"389":{},"514":{},"537":{}},"component":{}}],["z9",{"_index":6076,"title":{},"name":{},"text":{"366":{}},"component":{}}],["z][eng:0",{"_index":6074,"title":{},"name":{},"text":{"366":{}},"component":{}}],["zaphod",{"_index":5685,"title":{},"name":{},"text":{"292":{}},"component":{}}],["zelda",{"_index":4594,"title":{},"name":{},"text":{"241":{}},"component":{}}],["zero",{"_index":727,"title":{},"name":{},"text":{"7":{},"83":{},"154":{},"167":{},"205":{},"213":{},"221":{},"233":{},"234":{},"237":{},"247":{},"248":{},"250":{},"262":{},"273":{},"283":{},"313":{},"326":{},"339":{},"363":{},"364":{},"366":{},"367":{},"489":{}},"component":{}}],["zip",{"_index":959,"title":{"387":{},"509":{}},"name":{},"text":{"8":{},"42":{},"81":{},"86":{},"117":{},"170":{},"280":{},"366":{},"367":{},"383":{},"387":{},"465":{},"466":{},"499":{},"509":{},"511":{},"528":{},"530":{},"533":{},"534":{},"537":{},"540":{},"543":{}},"component":{}}],["zip:http://somehost/downloads/somefile.zip",{"_index":1040,"title":{},"name":{},"text":{"8":{}},"component":{}}],["zipbomb",{"_index":937,"title":{},"name":{},"text":{"7":{}},"component":{}}],["zipfil",{"_index":6278,"title":{},"name":{"387":{},"509":{}},"text":{"499":{}},"component":{}}],["zipfilenam",{"_index":5604,"title":{},"name":{},"text":{"280":{}},"component":{}}],["zlib",{"_index":6574,"title":{},"name":{},"text":{"488":{}},"component":{}}],["zone",{"_index":3816,"title":{},"name":{},"text":{"165":{},"338":{},"366":{}},"component":{}}],["zoo",{"_index":3001,"title":{},"name":{},"text":{"87":{}},"component":{}}],["zoom",{"_index":546,"title":{},"name":{},"text":{"5":{},"7":{},"27":{},"36":{},"91":{},"93":{},"94":{},"421":{}},"component":{}}],["zooom",{"_index":6733,"title":{},"name":{},"text":{"518":{}},"component":{}}],["zshrc",{"_index":534,"title":{},"name":{},"text":{"5":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"Hop Conf Hop Conf is a command line tool to manage various aspects of your Hop configuration: projects, environments, cloud configuration and more Hop Encrypt Hop Encrypt is a command line tool that obfuscates or encrypts a plain text password for use in XML, password or metadata files. Make sure to also copy the password encryption prefix to indicate the obfuscated nature of the password. Hop will then be able to make the distinction between regular plain text passwords and obfuscated ones. Hop Gui Hop Gui is the visual IDE where Hop data developers create, test, run and manage the life cycle for workflows and pipelines. In addition to functionality for development and life cycle management, Hop Gui contains tools and perspectives to manage projects and environments, to search and manage metadata, to manage and version control a large variety of files and to explore logging in a Neo4j graph. Hop Run Hop Run is a command line tool to run workflows and pipelines, with options to (list or) specify projects, environments, properties and run configurations. Hop Search Hop Search is a command line tool to search all metadata available in a specific project or environment. Hop Server Hop Server is a web service interface to manage and run workflows and pipelines. Hop Translate Hop Translator is a gui tool that allows non-technical users to translate Hop in their native language. Action An Action is one operation performed in a Workflow. Actions are executed sequentially by default, with parallel execution as a configuration option. An Action returns a true or false exit code, which can be used (or ignored) in the Workflow’s execution. Hop A Hop links Actions in a Workflow or Transforms in a Pipeline. In Workflows, Hops operate based on the exit status of previous Actions, Hops in Pipelines pass data between Transforms. Pipeline Pipelines are the actual data workers. Operations in a Pipeline read, modify, enrich, clean and write data. Orchestration of Pipelines is done through othere Pipelines and/or Workflows. Transform A Transform is a unit of work performed in a Pipeline. Typical Transform operations are reading data from files, databases, performing lookups or joins, enriching, cleaning data and more. All transforms in a Pipeline are executed in parallel. Transforms process data and move batches of processed data on Hops for processing by subsequent Actions. Workflow A Workflow is a sequence of operations that are performed sequentially by default (with optional parallel execution). Workflows usually do not operate on the data directly, but perform orchestration tasks. Typical tasks in a Workflow consist of retrieving and archiving data, sending emails, error handling etc. ) Project Hop Projects are a conceptual grouping of configurations, variables, metadata objects and workflows and pipelines. Projects can inherit metadata from parent projects. A project contains one or more environments where the actual configuration is defined. Example: a 'Sales' project contains a 'customers' database connection and a number of workflows and pipelines. The runtime configurations, database connection properties etc are defined in the 'dev', 'uat' and 'prd' environments. Environment Hop Environments are instances of projects that hold the actual runtime configurations and other metadata objects for a project. Example: the 'dev' environment for the 'Sales' project specifies to read from host '10.0.0.1' for the 'customers' database connection Hop Metadata is the central storage repository for shared metadata like relational database connections, run configurations, servers, git repositories and so on. Metadata is persisted as json and is stored by default in a project’s base folder. The following items are an alphabetically ordered list of concepts that are used throughout Hop and will be mentioned at various locations in the Hop tools and documentation. Lazy Loading If enabled, all data conversions (character decoding, data conversion, trimming, …​) for the data being read will be postponed as long as possible, effectively reading the data as binary fields. Enabling lazy conversion can significantly decrease the CPU cost of reading data. When to avoid: if the data conversion needs to be performed later in the stream anyway, postponing the conversion may slow things down instead of speeding up. When to use: use cases where Lazy Conversion may speed things up when 1) data is read and written to another file without conversion, 2) data needs to be sorted and doesn’t fit in memory. In this case, serialization to disk is faster with lazy conversion because encoding and type conversions are postponed, or 3) bulk-loading to database without the need for data conversion. Bulk loading utilities typically read text directly and the generation of this text is faster (this does not apply to Table Output).","title":"Concepts","component":"manual","version":"2.7.0","name":"concepts","url":"/manual/latest/concepts.html","titles":[{"text":"Tools","hash":"_tools","id":1},{"text":"Item types","hash":"_item_types","id":2},{"text":"Projects and Environments","hash":"_projects_and_environments","id":3},{"text":"Metadata","hash":"_metadata","id":4},{"text":"Various","hash":"_various","id":5}]},"2":{"id":2,"text":"Hop is not the only data integration and data orchestration platform out there. Many of the tasks that can be performed with Hop can also be achieved with other data platforms. In the next paragraphs, we’ll take a closer look at what makes Hop unique, and why the Hop team truly believes Hop is exploring the future of data integration and orchestration. Metadata is the single most important concept in Apache Hop. Metadata is what drives everything: from workflows and pipelines over connections to a large variety of platforms to run configurations, every item you work with in Hop is defined as metadata. Hops metadata driven approach is taken to the next level with metadata injection (MDI). Metadata injection pipelines use a template pipeline and inject the necessary metadata in runtime. This significantly reduces the amount of repetitive manual development, resulting in smaller and more manageable pipeline code. Hop GUI is a full-blown visual IDE that is available on the desktop (Windows, Mac OS and Linux) and in your browser (Hop Web). With Hop Gui, data developers can visually design, run and debug workflows and pipelines. This visual way of working give developers the power to be more productive than they could ever be with “real” hand-crafted code. Not only are Hop workflows and pipelines easy to create with the visual editor, maintaining visual code is a lot easier as well. Identifying and fixing a problem in a well-defined visual layout is a lot easier than it would be if you had to scroll through lines and lines of source code. Hop’s architecture has been designed from the ground up to keep the core functionality in a clean, fast, robust and lightweight kernel. All other functionality is added through plugins that can be added or removed at will. This allows Hop to work from edge devices in IoT scenarios to processing the largest amounts of data in realtime, streaming, batch or hybrid scenarios. This plugin architecture is open to external developers, enabling them to add their own plugins and taking the already extensive Hop functionality even further. Hop’s portable runtime configurations allow data developers to design a workflow or pipeline once and run it on the environment and configuration where it fits best. Hop supports its own native runtime engine that can be used both locally and on a remote server. Additionally, your pipelines can run on Apache Spark or Flink clusters, or on Google Cloud’s Dataflow over Apache Beam, with support for additional runtimes to be added in later versions. This ability gives you the unparalleled flexibility to let your Hop projects grow with your data volumes and data architecture. Through proper logging and monitoring, you’ll know if your Hop workflows and errors run without any errors. However, that doesn’t tell you anything about whether your data has been processed correctly. Hop’s unit testing offers data developers a way to validate the data processing against a golden data set, so you’ll not only know your workflows and pipelines run without any errors, but also that the data was processed as expected. Regression tests guarantee that a bug that was once fixed remains fixed. A library of integration tests that are run periodically allow Hop projects to continuously guarantee your workflows and pipelines process your data exactly the way they were designed to. All major data endeavours cover more than a single topic. Typical data teams cover multiple topics and run those in a number of environments. Hop projects and environments allow data teams to organize their work in separate Hop projects, typically with different environment configurations per project. Hop projects and environments, both in separate version control repositories, allow your projects to be taken over development, through testing into production while keeping complete control and overview. Hop offers all the tools required to keep full control over your data project’s life cycle. Hop integrates and evolves with your data architecture and your projects and environments both managed in version control, managed runtime configurations and a library of unit, regression and integration tests, your Hop implementation is in perfect shape. The workflows and pipelines in your Hop projects can be run continuously from CI/CD pipelines, validating and testing every step in the process and processing your data exactly the way you intend it to. Even though other platforms allow to be implemented this way, Hop is unique in that it was designed exactly to build robust, end-to-end data processing and orchestration solutions.","title":"Hop Unique Selling Propositions","component":"manual","version":"2.7.0","name":"hop-usps","url":"/manual/latest/hop-usps.html","titles":[{"text":"Metadata Driven","hash":"_metadata_driven","id":1},{"text":"Visual Code Editor","hash":"_visual_code_editor","id":2},{"text":"Kernel Architecture and plugins","hash":"_kernel_architecture_and_plugins","id":3},{"text":"Portable Runtime Configurations","hash":"_portable_runtime_configurations","id":4},{"text":"Unit and Integration Testing","hash":"_unit_and_integration_testing","id":5},{"text":"Projects and environments","hash":"_projects_and_environments","id":6},{"text":"Life Cycle Management","hash":"_life_cycle_management","id":7}]},"3":{"id":3,"text":"This page is used to test if images work in both the documentation and the book more text","title":"Image testpage","component":"manual","version":"2.7.0","name":"image-testpage","url":"/manual/latest/image-testpage.html","titles":[]},"4":{"id":4,"text":"The Apache Hop User Manual contains all the information you need to develop and deploy data solutions with Apache Hop. We’ve listed a number of starting points that might find useful to you. Check the full list of topics on the left hand side. If you’re a developer and want to extend Hop, want to build new functionality or want to fix a bug you found, check the developer documentation Hop treats documentation as any other part of software that can have bugs or missing features. If you find any incorrect information or are missing a crucial piece of documentation, please create an issue on GitHub. Check the documentation contribution guide if you’d like to help us improve the Hop documentation. The Getting Started Guide will help you to get started with Hop in no time Check the Hop Gui guide for information about how to develop, run, test, debug and deploy Hop pipelines Workflows are Hop’s tool to orchestrate workflows and pipelines, perform environment validations, error handling and much more with the available actions Pipelines are Hop’s work horse: read from sources, write to targets and perform just about any manipulation on your data through hundreds of transforms. Check the list of supported databases Check the Run Configurations if you want to find out more about running your Hop pipelines on Apache Spark, Apache Flink or Google Dataflow over Apache Beam.","title":"Hop User Manual","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/index.html","titles":[]},"5":{"id":5,"text":"The requirements and installation process for Apache Hop are intentionally kept as simple as possible. This page covers everything you need to know to install and run Apache Hop on your local desktop or server, from the very basics to more advanced configurations. Hop is designed to be as flexible and lightweight as possible, and is intended to blend in with your architecture, not the other way around. This makes the basic installation process extremely easy, but there’s a lot of configuration that can be applied to make Hop behave exactly the way you want it to. Take a look at the Docker page for instructions to run Hop in containers and Kubernetes environments. Hop’s limited footprint should allow it to run on any modern physical or virtual machine. For the default Hop distribution, a minimum of 1 CPU/core and 4GB RAM should do, even though you can tweak Hop to run on machines with even less memory. Hop Runs on the following operating systems: Windows 7 or higher Linux (x86_64, ARM) MacOS any modern browser (Hop Web) The only requirement Hop has on any supported operating system is the Java Runtime environment. Apache Hop is known to work well on the following widely used Java Runtimes: Oracle Java Runtime Microsoft OpenJDK (OpenJDK builds for Windows, MacOS and Linux). OpenJDK Java Runtime Apache Hop works well with these 64-bit java runtimes for version 11. Other Java Runtimes may work but haven’t been used and tested as extensively as the Oracle and OpenJDK JREs, so you may be pioneering. Feel free to open a GitHub ticket if you run into issues, but please mention your JRE and version. Run java -version if you’re not sure which Java version is currently installed on your system. Your output should be similar to the one shown below. openjdk version \"11.0.2\" 2019-01-15 OpenJDK Runtime Environment 18.9 (build 11.0.2+9) OpenJDK 64-Bit Server VM 18.9 (build 11.0.2+9, mixed mode) Make sure to point the JAVA_HOME environment variable for your operating system to your desired JRE installation. Refer to your operating system’s documentation for more information on environment variables. The basic installation for Apache Hop couldn’t be easier: download unzip change to your newly unzipped hop directory run: hop-gui.bat (Windows) or hop-gui.sh (Linux, MacOS): run Hop Gui hop-run.bat (Windows) or hop-run.sh (Linux, MacOS): run workflows or pipelines from the command line. hop-server.bat (Windows) or hop-server.sh (Linux, MacOS): start a Hop Server instance. Apache Hop’s installation and configuration are fully self-contained by default. With the system or environment variables below, you can make your Hop configuration independent of the installed Hop versions. This lets you switch between Hop versions or installations, while keeping your projects and environment lists, last opened files and other settings. if you set the environment variables below after you’ve been using Apache Hop for a while, you can move the contents of your hop/config/ folder to your new HOP_CONFIG_FOLDER location There are several ways to access the Environment Variables in Windows. One ways is to search for environment variable in the start menu and clicking the \"Edit the system environment variables\" link (or the corresponding entry for your local language). In the dialog that pops up, click the Environment Variables button, then add a new HOP_CONFIG_FOLDER user variable and point it to the folder where you’d like to store your Apache Hop configuration. Repeat the process for any of the other variables list below you want to add to your configuration. Click Ok to close the dialogs and (re)start Hop Gui to activate the environment variables. Add environment variables to your ~/.bashrc, ~/.zshrc or similar configuration file as shown below: export HOP_CONFIG_FOLDER=. run source ~/.bashrc or source ~/.zshrc to apply the new variables in your current session. HOP_CONFIG_FOLDER Hop stores your configuration in the config folder by default. Set this environment variable to point to a folder outside of your Hop installation to keep your configuration, projects and environment list etc, no matter which Hop version or installation you use. copy the contents of an existing hop/conf folder to the path set in HOP_CONFIG_FOLDER to move the configuration from one of your Hop installations to your new central location. HOP_AUDIT_FOLDER Set this variable to a valid path on your machine to store Hop’s audit information. This information includes last opened files per project, zoom size and lots more. HOP_OPTIONS Set this variable to add JVM options, e.g. -Xmx=2g. This variables' value overrules the settings in the various scripts in your Apache Hop installation. Check the Environment Variables section for more system variables that can make your life with multiple Hop versions or installations a lot easier. Multiple Hop versions can be installed side by side with the same process as described in the Basic Installation. Hop installations are self-contained by default, which means you’ll start with the default configuration and project and environment list with after new Hop install. With the environment variables described in the previous section, all you need to do to upgrade Apache Hop next to your existing hop installation and start Hop Gui from there. Your projects and environment lists, last opened files etc should all be available. Apache Hop releases are tested for smooth upgrades. You can replace your existing installation when a new version is released. If you want to keep multiple Apache Hop versions around, consider renaming your unzipped hop folder to hop-version-number, e.g. hop-2.5.0, hop-2.60 etc. By default, Hop only sets a maximum for the JVM Heap size Hop can allocate. This parameter can be changed in the hop-gui.bat or hop-gui.sh or similar scripts for hop-run and hop-server. Identify the following line: HOP_OPTIONS=\"-Xmx2048m\" The -Xmx parameter determines the maximum amount of memory the JVM can allocate and can be specified in MB or GB. For example: HOP_OPTIONS=-Xmx512m: start Hop with maximum 512MB of memory HOP_OPTIONS=-Xmx2048m: start Hop with maximum 2048MB (or 2GB) of memory HOP_OPTIONS=-Xmx4g: start Hop with maximum 4GB of memory Check the documentation for your JRE for more information about additional JVM configuration, tuning and garbage collection parameters. This guide may help you to get started. Developers: a couple of lines below the -Xmx parameter, you’ll find another HOP_OPTIONS line that contains -Xdebug. Uncomment this line to allow debuggers to attach to your running Hop instance. Check the developer documentation for more information. The following (operating system) environment variables can add a lot of flexibility to configure Hop to your exact needs. HOP_AUDIT_FOLDER Set this variable to a valid path on your machine to store Hop’s audit information. This information includes last opened files per project, zoom size and lots more. HOP_CONFIG_FOLDER Hop stores your configuration in the config folder by default. Set this environment variable to point to a folder outside of your Hop installation to keep your configuration, projects and environment list etc, no matter which Hop version or installation you use. copy the contents of an existing hop/conf folder to the path set in HOP_CONFIG_FOLDER to move the configuration from one of your Hop installations to your new central location. HOP_PLUGIN_BASE_FOLDERS Set this variable to point Hop to a comma separated list of folders where you want Hop to look for additional plugins. When using this variable it will also unset your default plugins folder, make sure to add the default plugin folder to the comma separated list. This can be a relative path to the installation eg. export HOP_PLUGIN_BASE_FOLDERS=./plugins,/additional/plugin/folder. The ./plugins will point to the plugins in the base installation folder HOP_SHARED_JDBC_FOLDERS This is a comma separated list of folder containing JDBC drivers, default value is lib/jdbc. If you still need the default jdbc drivers when changing this you need to include the default folder path. Hop comes with built-in support for tens of databases and a large number of other technologies. Depending on the Apache and technology vendor’s licenses, the required libraries may not be available in the default Apache Hop distribution. Download the necessary drivers or other required libraries and add them to your plugin’s lib directory. For example, to add a JDBC driver for the MySQL database, download the MySQL JDBC jar file and add it to /hop/plugins/databases/mysql. Add any custom jars in lib/core in your Hop installation folder to make those libraries available for your entire Hop installation. Add any custom jars to plugins/transforms/janino/lib to make them available for the User Defined Java Class transform. Hop comes with built-in support for lots of technologies that may require their own (installation and) configuration. Check the technology page for the platform you need to configure to find out more.","title":"Apache Hop requirements, installation and configuration","component":"manual","version":"2.7.0","name":"installation-configuration","url":"/manual/latest/installation-configuration.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"System Requirements","hash":"_system_requirements","id":2},{"text":"Java Runtime","hash":"_java_runtime","id":3},{"text":"Basic Installation","hash":"basic","id":4},{"text":"Set (system) environment variables","hash":"_set_system_environment_variables","id":5},{"text":"Create environment variables in Windows","hash":"_create_environment_variables_in_windows","id":6},{"text":"Create environment variables in Mac OS or Linux","hash":"_create_environment_variables_in_mac_os_or_linux","id":7},{"text":"The environment variables to set","hash":"_the_environment_variables_to_set","id":8},{"text":"Upgrade","hash":"_upgrade","id":9},{"text":"Additional configuration","hash":"_additional_configuration","id":10},{"text":"JVM memory settings","hash":"_jvm_memory_settings","id":11},{"text":"Hop environment variables","hash":"envvars","id":12},{"text":"JDBC Drivers, Jars, Libraries, and other plugin dependencies","hash":"_jdbc_drivers_jars_libraries_and_other_plugin_dependencies","id":13},{"text":"Technology configuration","hash":"_technology_configuration","id":14}]},"6":{"id":6,"text":"To run apache hop you need java JVM, with the amount of JVMs in the market and with more to come apache Hop can have issues running in certain JVMs. This page covers what JVM we are giving support and the ones we have black listed. Take a look at the Installation page for full instruction in how to install and configure apache Hop. Apache Hop works well with these 64-bit java runtimes for version 11. Oracle Java Runtime Microsoft OpenJDK (OpenJDK builds for Windows, MacOS and Linux). OpenJDK Java Runtime The list below is all JVM that has been confirmed having issue with apache Hop. Adoptium Other Java Runtimes may work, so you may be pioneering. Feel free to open a GitHub ticket if you run into issues, but please mention your JRE and version.","title":"Apache Hop supported and unsupported JVMs","component":"manual","version":"2.7.0","name":"supported-jvms","url":"/manual/latest/supported-jvms.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Supported JVMs","hash":"_supported_jvms","id":2},{"text":"Unsupported JVMs","hash":"_unsupported_jvms","id":3}]},"7":{"id":7,"text":"You don’t want to hardcode your solutions. It’s simply bad form to hardcode host names, user names, passwords, directories and so on. Variables allow your solutions to adapt to a changing environment. If for example the database server is different when developing than it is when running in production, you set it as a variable. Fields, parameters, and variables implicitly are available downstream if in scope. You can pass them again any number of levels, but the \"get parameters/variables\" button only retrieves from one level above. Fields are columns in data row(s) and are viewable in some transform field textboxes and columns and you can see the fields in scope and its value when looking at transform row results after executing a workflow/pipeline (click the little grid icon on the bottom-right of a transform to see a preview of the cached results). Field values can be passed upstream for example if you use a pipeline executor and fill in the Result rows tab and use it in conjunction with a “copy rows to result” transform in the child pipeline. Think of parameters as function arguments, which turn into variables with the same name. When adding parameters you are basically creating MyPipeline(parameter1, parameter2,..). Parameters (e.g. in pipeline or workflow properties) need to be declared at least once in every pipeline or workflow. For example, if you set parameters on a pipeline executor, the pipeline that is being called must declare the same parameter names in its pipeline properties (set to NULL if you want to inherit values). Parameters can not be “sent” upstream, but you can use a Set variables transform, but they become variables in the scope they are defined in. Explicit vs Implicit: If you set a parameter to a default value, it becomes explicit (e.g. when editing a pipeline in pipeline properties), and it will take precedence over the same named implicit variable (a passed-in variable), but not take precedence over the same named explicit parameter. So whenever you see a transform with a column title “Parameters/Variables” that means an explicit parameter is sent to a function that will then set a variable name overriding any previous set parameter with the same name (useful if wanting to override an explicitly set param/variable in the child). To change implicit parameter behaviour to explicit, you can also disable “pass all parameters” on the pipeline action. Parameters are simply variables which are explicitly defined in a workflow or pipeline to make them recognizable from outside those objects. They can also have a description and a default value. You cannot combine implicit variable inheritance with explicit parameter definitions. So, if you add parameters to the pipeline definition (or to a pipeline executor) and you want it set, you must add it to the parameters tab of the child pipeline action/transform even if the same variable already exists. Advanced: there are multiple layers in hop where you can set variables that do or do not get overwritten downstream (Java → hop environment → project → run configuration → workflow → pipeline). Variables are more global and the scope can be targeted (entire Java VM, grandparent workflow, etc.) whereas fields are the data flowing between the transforms. Local variables can be set in a pipeline but should not be used in the same pipeline as they are not thread-safe and can inherit a previous value. It is better to send or return variables to another pipeline/workflow before using them. Variables can be passed upstream if the variable was set to a larger scope. E.g.: if a variable was set in a parent with \"valid in the current workflow\". Think of variables in 2 scopes: runtime variables and environment/workflow variables: Runtime variables – Runtime variables depend on pipeline information to generate, so they cannot be set beforehand, you need to declare those differently to be able to use them. Environment/workflow variables or parameters – Environment variables/parameters are set once and used when needed in any downstream workflow/pipeline and there is no need to use Get Variables , you can refer to them directly like ${myVariable} unless you need it in a field/data stream. E.g.: Define a parameter only once, even just in the Pipeline Executor (no need to define in receiving pipeline) A pipeline needs to start to get new variables. A running or nested pipeline can’t fetch new variable values. A pipeline is considered started when a pipeline starts for every row in a pipeline executor. An alternative is to use parameters. In the Hop user interface all places where you can enter a variable have a '$' symbol to the right of the input field: You can specify a variable by referencing it between an opening ${ and a closing }. ${VARIABLE_NAME} Please note that in the case of a textvar (a text field that supports variables), you don’t have to specify a variable in these places. You can enter hard-coded values (although we advise to use variables where possible). Combinations of a variable with other free-form text are also possible, like in the example below: ${ENVIRONMENT_HOME}/input/source-file.txt You can see a list of defined variables by using CTRL-SPACE (CMD-SPACE on OSX) in the input field. This helper will insert a selected variable into the input field. Only environment variables and variables with the JVM scope are shown here. Variables that are created in pipeline or workflow with a parent, grant parent or root workflow job need to be entered manually In rare cases you might have a need to enter non-character values as separators in 'binary' text files with for example a zero byte as a separator. In those scenarios you can use a special 'variable' format: $[] A few examples: Value Meaning $[00] A single byte with decimal value 0 $[FFFF] Two bytes with decimal value 65535 $[CEA3] The 2 bytes representing UTF-8 character Σ $[e28ca8] The 3 bytes representing UTF-8 character ⌨ $[f09d849e] The 4 bytes representing UTF-8 character 𝄞 Variables can be defined and set in all the places where it makes sense: in hop-config.json when it applies to the installation in an environment configuration file when it concerns a specific lifecycle environment In a project In a pipeline run configuration As a default parameter value in a pipeline or workflow Using the Set Variables transform in a pipeline Using the Set Variables action in a workflow When executing with Hop run Variables are local to the place where they are defined. This means that setting them in a certain place means that it’s going to be inherited from that place on. This also means that’s important to know where variables can be set and used and the hierarchy behind it. Table 1. Variables Hierarchy Place Inheritance System properties Inherited by the JVM and all other places in Hop Environment Inherited by run configurations Run Configurations Pipeline run configurations are inherited by the environment Pipeline Inherited by the pipeline run configuration Workflow Inherited by the workflow run configuration Metadata objects Inherited by the place where it is loaded Pipeline and workflows can (optionally) accept parameters. Workflow and pipeline parameters are similar, and are a special type of variable that is only available within the current workflow or pipeline. Workflow and pipeline parameters can have a default value and a description, and can be passed on from workflows and pipelines to other workflows and pipelines through a variety of workflow actions and pipeline transforms. All system properties are variables that are available in all of your currently running Apache Hop instance. System properties are available as variables as well as all Java system properties. System properties get set in the Java Virtual Machine that runs your Apache Hop instance. This means that you should limit yourself to only those variables which are really system specific. You can define new system properties in the Hop GUI using the system properties editor (using the menu bar or the Hop icon menu): These variables will be written to the hop-config.json file in your hop installation’s config folder or in your ${HOP_CONFIG_FOLDER} location. { \"systemProperties\" : { \"MY_SYSTEM_PROPERTY\" : \"SomeValue\" } } even though you can manually change the hop-config.json or any of the other configuration files, you’ll rarely, if ever, need to. Only change hop-config.json manually if you know what you’re doing. You can also use the hop-config command line tool to define system properties: sh hop-config.sh -s MY_SYSTEM_PROPERTY=SomeValue You can specify variables in project lifecycle environments as well. This helps you configure folders and other things which are environment specific, and lets you keep a clean separation between code (your project) and configuration (your environment). You can set those in the environment settings dialog or using the command line: sh hop-config.sh -e MyEnvironment -em -ev VARIABLE1=value1 You can specify variables in pipeline run configurations and workflow run configurations to make a pipeline or workflow run in an engine agnostic way. For example, you can have the same pipeline run on Hadoop with Spark and specify an input directory using hdfs:// and on Google DataFlow using gs:// You can define variables in a workflow either with the Set Variables, JavaScript actions or by using parameters. You can define variables in a pipeline either with the Set Variables, JavaScript transforms or by defining parameters. IMPORTANT As mentioned in the Set Variables documentation page, you can’t set and use variables in the same pipeline, since all transforms in a pipeline run in parallel. The following variables are available in Hop through the configuration perspective. If you have the menu toolbar enabled in the configuration perspective’s General tab, these variables are also available through Tools → Edit config variables. Variable name Default Value Description HOP_AGGREGATION_ALL_NULLS_ARE_ZERO N Set this variable to Y to return 0 when all values within an aggregate are NULL. Otherwise by default a NULL is returned when all values are NULL. HOP_AGGREGATION_MIN_NULL_IS_VALUED N Set this variable to Y to set the minimum to NULL if NULL is within an aggregate. Otherwise by default NULL is ignored by the MIN aggregate and MIN is set to the minimum value that is not NULL. See also the variable HOP_AGGREGATION_ALL_NULLS_ARE_ZERO. HOP_ALLOW_EMPTY_FIELD_NAMES_AND_TYPES N Set this variable to Y to allow your pipeline to pass 'null' fields and/or empty types. HOP_BATCHING_ROWSET N Set this variable to 'Y' if you want to test a more efficient batching row set. HOP_DEFAULT_BIGNUMBER_FORMAT The name of the variable containing an alternative default bignumber format HOP_DEFAULT_BUFFER_POLLING_WAITTIME 20 This is the default polling frequency for the transforms input buffer (in ms) HOP_DEFAULT_DATE_FORMAT The name of the variable containing an alternative default date format HOP_DEFAULT_INTEGER_FORMAT The name of the variable containing an alternative default integer format HOP_DEFAULT_NUMBER_FORMAT The name of the variable containing an alternative default number format HOP_DEFAULT_SERVLET_ENCODING Defines the default encoding for servlets, leave it empty to use Java default encoding HOP_DEFAULT_TIMESTAMP_FORMAT The name of the variable containing an alternative default timestamp format HOP_DISABLE_CONSOLE_LOGGING N Set this variable to Y to disable standard Hop logging to the console. (stdout) HOP_EMPTY_STRING_DIFFERS_FROM_NULL N NULL vs Empty String. If this setting is set to Y, an empty string and null are different. Otherwise they are not. HOP_FILE_OUTPUT_MAX_STREAM_COUNT 1024 This project variable is used by the Text File Output transform. It defines the max number of simultaneously open files within the transform. The transform will close/reopen files as necessary to insure the max is not exceeded HOP_FILE_OUTPUT_MAX_STREAM_LIFE 0 This project variable is used by the Text File Output transform. It defines the max number of milliseconds between flushes of files opened by the transform. HOP_GLOBAL_LOG_VARIABLES_CLEAR_ON_EXPORT N Set this variable to N to preserve global log variables defined in pipeline / workflow Properties → Log panel. Changing it to true will clear it when export pipeline / workflow. HOP_JSON_INPUT_INCLUDE_NULLS N Name of te variable to set so that Nulls are considered while parsing JSON files. If HOP_JSON_INPUT_INCLUDE_NULLS is \"Y\" then nulls will be included otherwise they will not be included (default behavior) HOP_LENIENT_STRING_TO_NUMBER_CONVERSION N System wide flag to allow lenient string to number conversion for backward compatibility. If this setting is set to \"Y\", an string starting with digits will be converted successfully into a number. (example: 192.168.1.1 will be converted into 192 or 192.168 or 192168 depending on the decimal and grouping symbol). The default (N) will be to throw an error if non-numeric symbols are found in the string. HOP_LICENSE_HEADER_FILE - This is the name of the variable which when set should contains the path to a file which will be included in the serialization of pipelines and workflows HOP_LOG_MARK_MAPPINGS N Set this variable to 'Y' to precede transform/action name in log lines with the complete path to the transform/action. Useful to perfectly identify where a problem happened in our process. HOP_LOG_SIZE_LIMIT 0 The log size limit for all pipelines and workflows that don’t have the \"log size limit\" property set in their respective properties. HOP_LOG_TAB_REFRESH_DELAY 1000 The hop log tab refresh delay. HOP_LOG_TAB_REFRESH_PERIOD 1000 The hop log tab refresh period. HOP_MAX_ACTIONS_LOGGED 5000 The maximum number of action results kept in memory for logging purposes. HOP_MAX_LOGGING_REGISTRY_SIZE 10000 The maximum number of logging registry entries kept in memory for logging purposes. HOP_MAX_LOG_SIZE_IN_LINES 0 The maximum number of log lines that are kept internally by Hop. Set to 0 to keep all rows (default) HOP_MAX_LOG_TIMEOUT_IN_MINUTES 1440 The maximum age (in minutes) of a log line while being kept internally by Hop. Set to 0 to keep all rows indefinitely (default) HOP_MAX_TAB_LENGTH - A variable to configure Tab size HOP_MAX_WORKFLOW_TRACKER_SIZE 5000 The maximum number of workflow trackers kept in memory HOP_PASSWORD_ENCODER_PLUGIN Hop Specifies the password encoder plugin to use by ID (Hop is the default). HOP_PIPELINE_ROWSET_SIZE - Name of the environment variable that contains the size of the pipeline rowset size. This overwrites values that you set pipeline settings HOP_PLUGIN_CLASSES A comma delimited list of classes to scan for plugin annotations HOP_ROWSET_GET_TIMEOUT 50 The name of the variable that optionally contains an alternative rowset get timeout (in ms). This only makes a difference for extremely short lived pipelines. HOP_ROWSET_PUT_TIMEOUT 50 The name of the variable that optionally contains an alternative rowset put timeout (in ms). This only makes a difference for extremely short lived pipelines. HOP_S3_VFS_PART_SIZE 5MB The default part size for multi-part uploads of new files to S3 (added and used by by the AWS S3 VFS plugin) HOP_SERVER_DETECTION_TIMER - The name of the variable that defines the timer used for detecting server nodes HOP_SERVER_JETTY_ACCEPTORS A variable to configure jetty option: acceptors for Carte HOP_SERVER_JETTY_ACCEPT_QUEUE_SIZE A variable to configure jetty option: acceptQueueSize for Carte HOP_SERVER_JETTY_RES_MAX_IDLE_TIME A variable to configure jetty option: lowResourcesMaxIdleTime for Carte HOP_SERVER_OBJECT_TIMEOUT_MINUTES 1440 This project variable will set a time-out after which waiting, completed or stopped pipelines and workflows will be automatically cleaned up. The default value is 1440 (one day). HOP_SERVER_REFRESH_STATUS - A variable to configure refresh for Hop server workflow/pipeline status page HOP_SPLIT_FIELDS_REMOVE_ENCLOSURE N Set this variable to N to preserve enclosure symbol after splitting the string in the Split fields transform. Changing it to true will remove first and last enclosure symbol from the resulting string chunks. HOP_SYSTEM_HOSTNAME You can use this variable to speed up hostname lookup. Hostname lookup is performed by Hop so that it is capable of logging the server on which a workflow or pipeline is executed. HOP_TRANSFORM_PERFORMANCE_SNAPSHOT_LIMIT 0 The maximum number of transform performance snapshots to keep in memory. Set to 0 to keep all snapshots indefinitely (default) HOP_USE_NATIVE_FILE_DIALOG N Set this value to Y if you want to use the system file open/save dialog when browsing files HOP_ZIP_MAX_ENTRY_SIZE_DEFAULT_STRING HOP_ZIP_MAX_TEXT_SIZE - A variable to configure the maximum number of characters of text that are extracted before an exception is thrown during extracting text from documents HOP_ZIP_MAX_TEXT_SIZE_DEFAULT_STRING - HOP_ZIP_MIN_INFLATE_RATIO - A variable to configure the minimum allowed ratio between de- and inflated bytes to detect a zipbomb HOP_ZIP_MIN_INFLATE_RATIO_DEFAULT_STRING - NEO4J_LOGGING_CONNECTION Set this variable to the name of an existing Neo4j connection to enable execution logging to a Neo4j database. Set the environment variables listed below in your operating system to configure Hop’s startup behavior: HOP_AUDIT_FOLDER Set this variable to a valid path on your machine to store Hop’s audit information. This information includes last opened files per project, zoom size and lots more. HOP_CONFIG_FOLDER Hop stores your configuration in the config folder by default. Set this environment variable to point to a folder outside of your Hop installation to keep your configuration, projects and environment list etc, no matter which Hop version or installation you use. copy the contents of an existing hop/conf folder to the path set in HOP_CONFIG_FOLDER to move the configuration from one of your Hop installations to your new central location. HOP_PLUGIN_BASE_FOLDERS Set this variable to point Hop to a comma separated list of folders where you want Hop to look for additional plugins. When using this variable it will also unset your default plugins folder, make sure to add the default plugin folder to the comma separated list. This can be a relative path to the installation eg. export HOP_PLUGIN_BASE_FOLDERS=./plugins,/additional/plugin/folder. The ./plugins will point to the plugins in the base installation folder HOP_SHARED_JDBC_FOLDERS This is a comma separated list of folder containing JDBC drivers, default value is lib/jdbc. If you still need the default jdbc drivers when changing this you need to include the default folder path. Additionally, the following environment variables can help you to add even more fine-grained configuration for your Apache Hop installation: Variable Default Description HOP_AUTO_CREATE_CONFIG N Set this variable to 'Y' to automatically create config file when it’s missing. HOP_METADATA_FOLDER - The system environment variable pointing to the alternative location for the Hop metadata folder HOP_REDIRECT_STDERR N Set this variable to Y to redirect stderr to Hop logging. HOP_REDIRECT_STDOUT N Set this variable to Y to redirect stdout to Hop logging. HOP_SIMPLE_STACK_TRACES N System wide flag to log stack traces in a simpler, more human-readable format","title":"Variables","component":"manual","version":"2.7.0","name":"variables","url":"/manual/latest/variables.html","titles":[{"text":"What is a Hop variable?","hash":"_what_is_a_hop_variable","id":1},{"text":"Fields","hash":"_fields","id":2},{"text":"Parameters","hash":"_parameters","id":3},{"text":"Variables","hash":"_variables","id":4},{"text":"How do I use a variable?","hash":"_how_do_i_use_a_variable","id":5},{"text":"Hexadecimal values","hash":"_hexadecimal_values","id":6},{"text":"How can I define variables?","hash":"_how_can_i_define_variables","id":7},{"text":"Locality","hash":"_locality","id":8},{"text":"Hierarchy","hash":"_hierarchy","id":9},{"text":"Parameters","hash":"_parameters_2","id":10},{"text":"System properties","hash":"_system_properties","id":11},{"text":"Environment Variables","hash":"_environment_variables","id":12},{"text":"Run Configurations","hash":"_run_configurations","id":13},{"text":"Workflow","hash":"_workflow","id":14},{"text":"Pipelines","hash":"_pipelines","id":15},{"text":"Available global variables","hash":"_available_global_variables","id":16},{"text":"Environment variables","hash":"_environment_variables_2","id":17}]},"8":{"id":8,"text":"Apache Virtual File System (VFS) is part of the Apache Commons project. Through VFS, Hop users can access various files from different sources such as files on the local disk, on a HTTP(S) server, inside a ZIP archive and so through a url format. Apache Hop makes fervent usage of VFS. Beyond the standard VFS file system types, we have added a number which are present in the various technology stacks supported by Hop. Like the standard file systems each has its own unique name scheme which you can use. The table below provides a quick overview of the VFS file systems supported by Apache Hop. Click the File system name to access more detailed file system documentation. File System Description URI Format AWS S3 Provides access to Amazon S3 Buckets s3:// Azure Blob Storage Provides access to Azure Blob Storage azure:// Dropbox Provides access to Dropbox dropbox:// Google Cloud Storage Provides access to Google Cloud Storage buckets gs:// Google Drive Provides access to Google Drive folders googledrive:// The table below lists the file system types provided by the default Apache VFS implementation. Check the Apache VFS file system types for more information on the supported functionality per files system. File System Description URI Format BZIP2 Provides read-only access to the contents of gzip and bzip2 files. URI Format gz:// compressed-file-uri bz2:// compressed-file-uri Where compressed-file-uri refers to a file of any supported type. There is no need to add a ! part to the URI if you read the content of the file you always will get the uncompressed version. Examples gz:/my/gz/file.gz CIFS* File Provides access to the files on the local physical file system. URI Format [file://] absolute-path Where absolute-path is a valid absolute file name for the local platform. UNC names are supported under Windows. Examples file:///home/someuser/somedir file:///C:/Documents and Settings file://///somehost/someshare/afile.txt /home/someuser/somedir c:\\program files\\some dir c:/program files/some dir FTP Provides access to the files on an FTP server. URI Format tp://[ username[: password]@] hostname[: port][ relative-path] Examples ftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz By default, the path is relative to the user’s home directory. This can be changed with: FtpFileSystemConfigBuilder.getInstance().setUserDirIsRoot(options, false); FTPS Provides access to the files on an FTP server over SSL. URI Format ftps://[ username[: password]@] hostname[: port][ absolute-path] Examples ftps://myusername:mypassword@somehost/pub/downloads/somefile.tgz GZIP see 'bzip2' HDFS Provides access to files in an Apache Hadoop File System (HDFS). On Windows the integration test is disabled by default, as it requires binaries. URI Format hdfs:// hostname[: port][ absolute-path] Examples hdfs://somehost:8080/downloads/some_dir hdfs://somehost:8080/downloads/some_file.ext HTTP(S) Provides access to files on an HTTP server. URI Format http://[ username[: password]@] hostname[: port][ absolute-path] https://[ username[: password]@] hostname[: port][ absolute-path] File System Options proxyHost The proxy host to connect through. proxyPort The proxy port to use. proxyScheme The proxy scheme (http/https) to use. cookies An array of Cookies to add to the request. maxConnectionsPerHost The maximum number of connections allowed to a specific host and port. The default is 5. maxTotalConnections The maximum number of connections allowed to all hosts. The default is 50. keystoreFile The keystore file for SSL connections. keystorePass The keystore password. keystoreType The keystore type. Examples http://somehost:8080/downloads/somefile.jar http://myusername@somehost/index.html Jar, Zip and Tar Provides read-only access to the contents of Zip, Jar and Tar files. URI Format zip:// arch-file-uri[! absolute-path] jar:// arch-file-uri[! absolute-path] tar:// arch-file-uri[! absolute-path] tgz:// arch-file-uri[! absolute-path] tbz2:// arch-file-uri[! absolute-path] Where arch-file-uri refers to a file of any supported type, including other zip files. Note: if you would like to use the ! as normal character it must be escaped using %21. tgz and tbz2 are convenience for tar:gz and tar:bz2. Examples jar:../lib/classes.jar!/META-INF/manifest.mf zip:http://somehost/downloads/somefile.zip jar:zip:outer.zip!/nested.jar!/somedir jar:zip:outer.zip!/nested.jar!/some%21dir tar:gz:http://anyhost/dir/mytar.tar.gz!/mytar.tar!/path/in/tar/README.txt tgz:file://anyhost/dir/mytar.tgz!/somepath/somefile mime* This (sandbox) filesystem can read mails and its attachements like archives. If a part in the parsed mail has no name, a dummy name will be generated. The dummy name is: _body_part_X where X will be replaced by the part number. URI Format mime:// mime-file-uri[! absolute-path] Examples mime:file:///your/path/mail/anymail.mime!/ mime:file:///your/path/mail/anymail.mime!/filename.pdf mime:file:///your/path/mail/anymail.mime!/_body_part_0 RAM A filesystem which stores all the data in memory (one byte array for each file content). URI Format ram://[ path] File System Options maxsize Maximum filesystem size (total bytes of all file contents). Examples ram:///any/path/to/file.txt RES This is not really a filesystem, it just tries to lookup a resource using javas ClassLoader.getResource() and creates a VFS url for further processing. URI Format res://[ path] Examples +res://path/in/classpath/image.png might result in jar:file://my/path/to/images.jar!/path/in/classpath/image.png+ SFTP Provides access to the files on an SFTP server (that is, an SSH or SCP server). URI Format sftp://[ username[: password]@] hostname[: port][ relative-path] Examples sftp://myusername:mypassword@somehost/pub/downloads/somefile.tgz Tar see 'jar' Temp Provides access to a temporary file system, or scratchpad, that is deleted when Commons VFS shuts down. The temporary file system is backed by a local file system. URI Format tmp://[ absolute-path] Examples tmp://dir/somefile.txt WebDAV Provides access to files on a WebDAV server through the modules commons-vfs2-jackrabbit1 and commons-vfs2-jackrabbit2. URI Format webdav://[ username[: password]@] hostname[: port][ absolute-path] File System Options versioning true if versioning should be enabled creatorName the user name to be identified with changes to a file. If not set the user name used to authenticate will be used. Examples webdav://somehost:8080/dist Zip see 'jar' *) VFS file system type in development","title":"Virtual File Systems","component":"manual","version":"2.7.0","name":"vfs","url":"/manual/latest/vfs.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Apache Hop VFS File Systems","hash":"_apache_hop_vfs_file_systems","id":2},{"text":"Apache VFS File System Types","hash":"_apache_vfs_file_system_types","id":3}]},"9":{"id":9,"text":"Apache Hop gives you a large amount of freedom when deciding how to do the things you want to do. This freedom means you can be creative and productive in arriving at the desired outcome. So please consider the advice given on this page as tips or free advice to be taken or rejected for a particular situation. Only you can decide what the advice is worth. When looking at a pipeline or workflow it’s so much easier to see what’s going on if you give meaningful names to the transforms and workflows. For input and output files, why not use the filename you’re using? You can use any unicode character in the name of a transform or action and even newlines are allowed. When giving names to metadata objects like relational database connections, avoid environment specific words like a country, region, lifecycle environments: Here are some examples to avoid and possible alternatives: Test Database → CRM France MySQL → WWW East Coast Cluster → Fraud What you can see in larger projects is that projects can become quite cluttered after a while. Here is some advice on how to keep things tidy and clean…​ Folders can have sub-folders: organize your work with sub-folders in a project. It’s just hard to work with hundreds of pipelines and workflows in a single folder. Use a naming convention for any object that you need to give a name: pipelines, workflows, folders, names, tables, fields, …​ For larger projects you should consider setting up a naming standard. It’s just a document in which you specify how you want to name things. Make sure to adjust, verify and enforce your naming standard periodically. If you don’t plan to do this you might was well not set up a corporate standard. Consider scripts and commit hooks or a nightly run on your build server (Jenkins) to validate your naming standard. Limit the amount of transforms or actions! Larger pipelines or workflows become harder to debug and develop against. For every transform you add to a pipeline you start at least one new thread at runtime. You could be slowing down significantly simply by having hundreds of threads for hundreds of transforms. If you find that you need to split up a pipeline you can write intermediate data to a temporary file using the Serialize to file transform. The next pipeline in a workflow can then pick up the data again with the De-serialize from file transform. While obviously you can also use a database or use another file type to do the same, these transforms will perform the fastest. Variables provide an easy way to avoid hard-coding all sorts of things in your system, environment or project. Here is some best practices advice on the subject: Put environment specific settings in an environment (Duh!) configuration file. Create an environment for this. When referencing file locations, prefer ${PROJECT_HOME} over expressions like ${Internal.Entry.Current.Directory} or ${Internal.Pipeline.Filename.Directory} Configure transform copies with variables to allow for easy transition between differently sized environments. Take some time to capture the logging of your workflows and pipelines. Any time you run anything you want to have a trace of it. Things tend to go wrong when you least expect it and at that point you like being able to see what happened. See Logging Basics, Logging Reflection or consider logging to a Neo4j graph database. This last one allows you to browse the logging results in the Neo4j perspective. If you have recurring logic in various pipelines, consider writing Mapping. It is a pipeline reading from a Mapping Input and writing to a Mapping Output transform. You can re-use the work in other pipelines using the Simple Mapping transform. If you find that you need to create 'almost' the same pipeline a lot of times, consider that you can use Metadata Injection to create re-usable template pipelines. Avoid manual population of dialogs Whenever you need dynamic ETL Supports data streaming Example use cases include: * Load 50 different file formats into a database with one pipeline template * Automatically normalize and load property sets Here are a few things to consider when looking at performance in a pipeline: Pipelines are networks. The speed of the network is limited by the slowest transform in it. Slow transforms are indicated when running in Hop GUI. You’ll see a dotted line around the slow transforms. Adding more copies and increasing parallelism is not always beneficial, but it can be. The proof of that pudding is in the eating so take note of execution times and see if you should increase or decrease parallelism to help performance. Here are some self-evident pieces of advice: Version control your project folder. Please consider using git. Reference cases in commits Make sure to have backups Run continuous integration Set up lifecycle environments (development, test, acceptance, production) as needed Test your pipelines with unit tests Run all unit tests regularly Validate the results & take action if needed Avoid looping in workflows. The easiest way to loop over a set of values, rows, files, …​ is to use an Executor transform. Pipeline Executor : run a pipeline for each input row Workflow Executor : run a workflow for each input row You can nicely map field values to parameters of the pipeline or workflow making loops a breeze.","title":"Best practices","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/best-practices/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Naming","hash":"_naming","id":2},{"text":"Transforms and actions","hash":"NamingConventions","id":3},{"text":"Metadata","hash":"_metadata","id":4},{"text":"Naming standard","hash":"_naming_standard","id":5},{"text":"Size matters","hash":"_size_matters","id":6},{"text":"Variables","hash":"_variables","id":7},{"text":"Logging","hash":"_logging","id":8},{"text":"Mappings","hash":"_mappings","id":9},{"text":"Metadata Injection","hash":"_metadata_injection","id":10},{"text":"Performance basics","hash":"_performance_basics","id":11},{"text":"Governance","hash":"_governance","id":12},{"text":"Loops","hash":"_loops","id":13}]},"10":{"id":10,"text":"The Apache Hop community writes an increasing number of blog posts and articles about Apache Hop. This page provides an overview of the relevant known blog posts and articles. This page focuses on technical information that helps Apache Hop users be more productive. Press releases, release announcements etc are not included here. did you write or do you know of a blog post or article that is missing from this list? Use the Edit this page link in the top right corner of this page to add it yourself. A new Execution Information Logging Platform in Apache Hop, 2022-10-26 by Bart Maertens (know.bi, Lean With Data) Apache Hop, upgrade the client, 2022-09-01 by Samuel Longley (Neo4j) 7 key points to successfully upgrade from Pentaho to Apache Hop, 2022-06-15 by Bart Maertens (know.bi, Lean With Data) 5 minutes to configure Workflow Log in Apache Hop, 2022-05-31 by Adalennis Buchillón Soris Apache Hop, environments and configurations. A better setup., 2022-01-05 by Samuel Longley (Neo4j) Apache Hop, build and run your first pipeline, 2021-12-30 by Samuel Longley (Neo4j) Apache Hop, installation on Windows 10/11, 2021-12-30 by Samuel Longley (Neo4j) Apache Hop, a quick introduction, 2021-12-30 by Samuel Longley (Neo4j) Build Data Pipeline with Apache Hop, 2021-01-31 by Tejas Marvadi Orchestrate unit and integration tests with Apache Hop in 5 minutes (part 3/3), 2022-10-04 by Adalennis Buchillón Soris 5 minutes to configure Unit tests in Apache Hop - Bypass and Remove (part 2/3), 2022-09-27 by Adalennis Buchillón Soris 5 minutes to build unit tests in Apache Hop (part 1/3), 2022-09-27 by Adalennis Buchillón Soris Loading data from Hive to Neo4j by using Apache Hop(all inside docker containers), 2022-11-24 by Tarun Bali Neo4j Cypher Transform in Apache Hop, 2022-11-02 by Samuel Longley (Neo4j) Neo4j Output Transform in Apache Hop, 2022-11-01 by Samuel Longley (Neo4j) Import Relational Data Into Neo4j with Apache Hop - Graph Output, 2022-06-29 by Adalennis Buchillón Soris Tutorial: Import Relational Data Into Neo4j with Apache Hop - Neo4j Output, 2022-06-22 by Adalennis Buchillón Soris Apache Hop, connecting to Neo4j, using Environments, 2022-01-06 by Samuel Longley (Neo4j) Scheduling Apache Hop pipelines on Dataflow, 2022-12-20 by Hans Van Akelyen (know.bi, Lean With Data) Running Apache Hop visual pipelines with Google Cloud Dataflow (part 1/2), 2022-04-22 by Israel Herraiz (Google) Apache Hop web version with Cloud Dataflow (part 2/2), 2022-10-15 by Israel Herraiz (Google)","title":"Community Blog Posts","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/community-blogs/index.html","titles":[{"text":"Apache Hop (General)","hash":"_apache_hop_general","id":1},{"text":"Apache Hop Unit Testing","hash":"_apache_hop_unit_testing","id":2},{"text":"Apache Hop and Neo4j","hash":"_apache_hop_and_neo4j","id":3},{"text":"Apache Hop and Apache Beam","hash":"_apache_hop_and_apache_beam","id":4}]},"11":{"id":11,"text":"Creating a database connection in HOP is done using one of the many database types available, or you can create a generic connection. To create a database connection go to file → New and select Database connection. The connection is saved in a central location and can then be used by all pipelines and workflows. If you have set your project to work with Hop, the database information will be in the ${PROJECT_HOME}/metadata/rdbms folder. Each connection created will generate a .json file in this folder with the name of the connection, containing the connection information. If the license allowed it, a jdbc driver is included in the distribution, in a folder specific for each driver, in the general path: Installation directory/plugins/databases/Database type/lib. The documentation of the database type in following subsections shows you whether the driver is included and if it isn’t included will guide you to the location on where to download it. The HOP_SHARED_JDBC_FOLDERS variable can be set before starting Hop to point at a centralized location of your required jdbc drivers. This can be set as an OS environment variable or be added to the Hop start script as an exported variable. Setting this variable pointed to a folder separated from the Hop installation folder, allows you to keep your drivers versions, no matter which Hop version or installation you use. This variable accepts a comma separated list to point to multiple directories the default value when not set is lib/jdbc. To avoid conflicts, be sure that for each class of driver, there is only one in any of this folders, HOP_SHARED_JDBC_FOLDERS, hop/plugins/databases/Database type/lib or hop/lib/jdbc folder. HOP can connect to any database that has a jdbc driver available, the list of supplied databases contain some database specific configuration and a list of reserved keywords. When a specific database type is not yet available for the database you want to use, you can use the generic connection. To use a generic connection you have to copy your jdbc driver to the Installation directory/lib folder, or in the HOP_SHARED_JDBC_FOLDERS if you have set this variable. Every connection needs a connection name. In the Driver Class field you specify your driver class, for example if you use PostgreSQL the class is org.postgresql.Driver. Then there is a field to specify the username and password.","title":"Database Plugins","component":"manual","version":"2.7.0","name":"databases","url":"/manual/latest/database/databases.html","titles":[{"text":"Generic connection","hash":"_generic_connection","id":1}]},"12":{"id":12,"text":"This page contains some of the frequently asked question","title":"Frequently Asked Questions","component":"manual","version":"2.7.0","name":"faq","url":"/manual/latest/faq/faq.html","titles":[{"text":"Questions","hash":"_questions","id":1}]},"13":{"id":13,"text":"Before we dive deeper, let’s take a minute to familiarize ourselves with the Hop lingo. Metadata is by far the most important concept in all of Hop. Every item we’ll cover below is defined as metadata. All interactions between Hop and other components in your data architecture are done through metadata. Metadata is at the core of everything in Hop. Pipelines are collections of transforms, connected by hops. All transforms in a pipeline run in parallel. Workflows are collections of actions, connected by hops. All actions in a workflow run sequentially by default. Projects are logical collections of hop code and configuration. Environments contain the environment-specific (e.g. dev, uat, prd) metadata. Action An Action is one operation performed in a Workflow. Actions are executed sequentially by default, with parallel execution as a configuration option. An Action returns a true or false exit code, which can be used (or ignored) in the Workflow’s execution. Hop A Hop links Actions in a Workflow or Transforms in a Pipeline. In Workflows, Hops operate based on the exit status of previous Actions, Hops in Pipelines pass data between Transforms. Pipeline Pipelines are the actual data workers. Operations in a Pipeline read, modify, enrich, clean and write data. Orchestration of Pipelines is done through othere Pipelines and/or Workflows. Transform A Transform is a unit of work performed in a Pipeline. Typical Transform operations are reading data from files, databases, performing lookups or joins, enriching, cleaning data and more. All transforms in a Pipeline are executed in parallel. Transforms process data and move batches of processed data on Hops for processing by subsequent Actions. Workflow A Workflow is a sequence of operations that are performed sequentially by default (with optional parallel execution). Workflows usually do not operate on the data directly, but perform orchestration tasks. Typical tasks in a Workflow consist of retrieving and archiving data, sending emails, error handling etc. ) Project Hop Projects are a conceptual grouping of configurations, variables, metadata objects and workflows and pipelines. Projects can inherit metadata from parent projects. A project contains one or more environments where the actual configuration is defined. Example: a 'Sales' project contains a 'customers' database connection and a number of workflows and pipelines. The runtime configurations, database connection properties etc are defined in the 'dev', 'uat' and 'prd' environments. Environment Hop Environments are instances of projects that hold the actual runtime configurations and other metadata objects for a project. Example: the 'dev' environment for the 'Sales' project specifies to read from host '10.0.0.1' for the 'customers' database connection","title":"Hop Concepts","component":"manual","version":"2.7.0","name":"hop-concepts","url":"/manual/latest/getting-started/hop-concepts.html","titles":[{"text":"Core Concepts","hash":"_core_concepts","id":1},{"text":"Item types","hash":"_item_types","id":2},{"text":"Projects and Environments","hash":"_projects_and_environments","id":3}]},"14":{"id":14,"text":"Hop is designed to be as easy and accessible to use as possible. Getting and starting Hop couldn’t be easier: Download Hop from the downloads page. Hop is self contained, all you need is a Java runtime. Hop official java version is 11. Check the Java docs to download and install a Java runtime for your operating system. Unzip Hop to a folder of your choice. From that folder, you’ll be able to run the different Hop tools through their corresponding scripts. Now that you have Hop installed, let’s have a look at all of the Hop tools you have at your disposal.","title":"Download and Install Hop","component":"manual","version":"2.7.0","name":"hop-download-install","url":"/manual/latest/getting-started/hop-download-install.html","titles":[{"text":"Download","hash":"_download","id":1},{"text":"Prerequisites","hash":"_prerequisites","id":2},{"text":"Install","hash":"_install","id":3}]},"15":{"id":15,"text":"In Concepts, we walked through pipelines, transforms and hops. Let’s remember: A pipeline consists of a chain of transforms that read, process or write data. Transforms are connected by hops. Hops have a direction but can’t create loops, which effectively makes Pipelines DAGs (Directed Acyclic Graphs). A transform is each basic operation in your pipeline. Each transform performs an operation on the data: reads from a source, operates on data in the pipeline or writes to to a target. A hop in a pipeline passes data between transforms. There are two ways to create a pipeline. click on the New option on the Horizontal toolbar and select the Pipeline option. File → New → Pipeline ￼ Your new pipeline is created. You’ll see the dialog below. Now you are ready to add the first transform. Click anywhere in the pipeline canvas, the area where you’ll see the image below. After clicking you will see the context dialog. This is the dialog you’ll use every time you need to select transforms to add to your pipeline. Use the search box in this dialog to find the transforms you need. Click or use the arrow keys and hit enter to add a transform to your pipeline. For now, add a Generate Rows and a Add Sequence transform to your pipeline. check the full list of transforms. There are 186 transforms available in Hop 0.99, but you’ll soon get to know the most commonly used ones. There are a number of ways to create a hop: shift-drag: while holding down the shift key on your keyboard. Click on a transform, while holding down your primary mouse button, drag to the second transform. Release the primary mouse button and the shift key. scroll-drag: scroll-click on a transform , while holding down your mouse’s scroll button, drag to the second transform. Release the scroll button. click on a transform in your pipeline to open the context dialog (the dialog you opened in the 'click anywhere' step). Click the 'Create hop' button and select the transform you want to create the hop to. Running a pipeline to see how it performs can be done in one of the following tasks: Using the Run icon. Select Run and click on Start Execution from the toolbar. Press F8 You will see the Run Options dialog. a 'local' runtime configuration is created when you first start Hop Gui. Check the available runtime configurations for other engines to run your pipelines on. Make sure your configuration is selected and hit Launch. You’ll see green check marks in the upper right corner of the transforms when a pipeline ran successfully. After each run, the execution results are displayed in the panel on the bottom of your window. The Execution Results contains two tabs: transform metrics logging The Transform Metrics tab displays metrics per transform. The logging tab displays the log of the pipeline according to the log level chosen on execution. for more detailed information, check out the Run, Preview and Debug a Pipeline page.","title":"Pipelines","component":"manual","version":"2.7.0","name":"hop-gui-pipelines","url":"/manual/latest/getting-started/hop-gui-pipelines.html","titles":[{"text":"Create a Pipeline","hash":"_create_a_pipeline","id":1},{"text":"Add and connect Transforms","hash":"_add_and_connect_transforms","id":2},{"text":"Add Transforms","hash":"_add_transforms","id":3},{"text":"Create a Hop","hash":"_create_a_hop","id":4},{"text":"Run your pipeline","hash":"_run_your_pipeline","id":5}]},"16":{"id":16,"text":"In Concepts, we walked through workflows, actions and hops. Let’s remember: A workflow is by default a sequential process that has a starting point and one or more endpoints. An action is an item of workflow functionality that executes pipelines already implemented or any other element that allows orchestrating the execution of the data integration processes. A hop in a workflow can conditionally connect actions and determine which action the workflow needs to execute next. There are two ways to create a workflow. Click on the New option on the Horizontal toolbar and select the Workflow option. File → New → Workflow Your new workflow is created, and you’ll see the dialog below. Note that when you create a workflow, Apache Hop automatically adds Start action by default. Now you are ready to add the first action. Click anywhere in the workflow canvas, the area where you’ll see the image below. After clicking you will see a dialog: Just like you did with pipelines, use the search box in this dialog to find the actions you need. Click or use the arrow keys and hit enter to add an action to your workflow. For now, add a Pipeline action to your workflow. check the full list of actions. There are over 50 actions available in Hop 0.70, but you’ll soon get to know the most commonly used ones. Creating a hop is identical to creating a hop in a pipeline: shift-drag: while holding down the shift key on your keyboard. Click on an action, while holding down your primary mouse button, drag to the second action. Release the primary mouse button and the shift key. scroll-drag: scroll-click on an action , while holding down your mouse’s scroll button, drag to the second action. Release the scroll button. click on an action in your pipeline to open the 'click anywhere' dialog. Click the 'Create hop' button and select the action you want to create the hop to. Save your workflow: At first, we have the Workflow run configuration session. A Workflow Run Configuration is a metadata object in Apache Hop and defines where the workflow is executed. Select the 'local' workflow runtime configuration that is available by default in your Hop installation and click 'Launch'. You’ll now have an execution results pane very similar to the pipeline execution results.","title":"Workflows","component":"manual","version":"2.7.0","name":"hop-gui-workflows","url":"/manual/latest/getting-started/hop-gui-workflows.html","titles":[{"text":"Create a Workflow","hash":"_create_a_workflow","id":1},{"text":"Add and connect actions","hash":"_add_and_connect_actions","id":2},{"text":"Add Actions","hash":"_add_actions","id":3},{"text":"Create a hop","hash":"_create_a_hop","id":4}]},"17":{"id":17,"text":"The Apache Hop GUI is your local development environment to build, run, preview and debug workflows and pipelines. As we’ve seen in Hop Tools, starting Hop-Gui is easy: On Linux or Mac: ￼./hop-gui.sh On Windows: hop-gui.bat After starting the Apache Hop GUI, you’ll be presented with the window below. Let’s divide the view into three parts: ￼ the menu bar includes options mainly for managing pipelines and workflows and the Apache Hop GUI configuration. the main toolbar includes the New option to create files (pipelines and workflows) and metadata, and the options to manage projects and environments. the perspectives toolbar includes switcher icons between the various perspectives. Let’s see how we can use Hop Gui to do what Hop is all about: create pipelines and workflows! INFO: check the Hop Gui section of the Hop documentation for a more detailed tour of the Hop Gui.","title":"Hop Gui","component":"manual","version":"2.7.0","name":"hop-gui","url":"/manual/latest/getting-started/hop-gui.html","titles":[{"text":"Start the Apache Hop GUI","hash":"_start_the_apache_hop_gui","id":1},{"text":"Walking through the Hop GUI","hash":"_walking_through_the_hop_gui","id":2}]},"18":{"id":18,"text":"You now know what Hop is and how to create your first workflows and pipelines. There’s a lot more to discover in Hop. Here are a couple of topics you may want to look into: Pipelines takes closer look at the various aspects of creating and running pipelines, and contains the entire list of transforms that are at your disposal Workflows takes a closer look at the various aspects of create and running workflows, and contains the entire list of actions that are at your disposal Best Practices covers a number of things you might want to think about while using Apache Hop. Projects explains how to work with projects and environments VFS explains how you can access resources in the 3 main cloud platforms: AWS, Azure and GCP. Logging explains how to configure Hop for your desired log level and target platform","title":"Next Steps","component":"manual","version":"2.7.0","name":"hop-next-steps","url":"/manual/latest/getting-started/hop-next-steps.html","titles":[]},"19":{"id":19,"text":"Hop contains a number of tools that are optimized for the various tasks Hop developers and administrators need to perform. Hop Gui is the visual IDE where Hop data developers create, test, run and manage the life cycle for workflows and pipelines. In addition to functionality for development and life cycle management, Hop Gui contains tools and perspectives to manage projects and environments, to search and manage metadata, to manage and version control a large variety of files and to explore logging in a Neo4j graph. Hop Gui is designed to be platform independent. Hop Web is a version of Hop Gui that works on browsers and mobile devices. The command below starts Hop GUI for your operating system. Windows Linux, macOS hop-gui.bat ./hop-gui.sh Expected output: Hop Gui starts. Hop Conf is a command line tool to manage various aspects of your Hop configuration: projects, environments, cloud configuration and more The example hop-conf command below lists your available projects. Windows Linux, macOS hop-conf.bat -pl Expected output: C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig -pl ===[Starting HopConfig]========================================================= Projects: default : config/projects/default Configuration file: file:\\C:\\\\hop\\config\\projects\\default\\project-config.json samples : config/projects/samples Parent project: default Configuration file: file:\\C:\\\\hop\\config\\projects\\samples\\project-config.json ./hop-conf.sh -pl Expected output: Projects: default : config/projects/default Configuration file: file:/hop/config/projects/default/project-config.json samples : config/projects/samples Parent project: default Configuration file: file:/hop/config/projects/samples/project-config.json Hop Encrypt is a command line tool that obfuscates or encrypts a plain text password for use in XML, password or metadata files. Make sure to also copy the password encryption prefix to indicate the obfuscated nature of the password. Hop will then be able to make the distinction between regular plain text passwords and obfuscated ones. The example below prints the encrypted Hop password mypassword. Windows Linux, macOS hop-encrypt.bat -hop mypassword Expected output: ===[Environment Settings - hop-encrypt.bat]==================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx64m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx64m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI org.apache.hop.core.encryption.Encr -hop mypassword ===[Starting HopEncrypt]========================================================= Encrypted 2be98afc86aa79f9dbb18bd63c99dbdde ./hop-encrypt.sh -hop mypassword Expected output: Encrypted 2be98afc86aa79f9dbb18bd63c99dbdde Hop Run is a command line tool to run workflows and pipelines, with options to (list or) specify projects, environments, properties and run configurations. The example below runs the switch-case-basic.hpl pipeline in the samples project (-j) with the local native pipeline run configuration (-r). Windows Linux, macOS hop-run.bat -r local -j samples -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-run.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=\"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y Consolidated parameters to pass to HopRun are -r local -j samples -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl Command to start HopRun will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam \"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.run.HopRun -r local -j samples -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl ===[Starting HopRun]========================================================= 2022/12/16 07:07:47 - HopRun - Enabling project 'samples' 2022/12/16 07:07:47 - HopRun - Starting pipeline: config/projects/samples/transforms/switch-case-basic.hpl 2022/12/16 07:07:47 - switch-case-basic - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2022/12/16 07:07:47 - switch-case-basic - Execution started for pipeline [switch-case-basic] 2022/12/16 07:07:47 - Test Data.0 - Finished processing (I=0, O=0, R=0, W=5, U=0, E=0) 2022/12/16 07:07:47 - Switch id.0 - Finished processing (I=0, O=0, R=5, W=5, U=0, E=0) 2022/12/16 07:07:47 - Output 2.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 07:07:47 - Output 1.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 07:07:47 - Output 4.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 07:07:47 - Output default.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 07:07:47 - Output 3.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 07:07:47 - switch-case-basic - Pipeline duration : 0.435 seconds [ 0.435\" ] ./hop-run.sh -r local -j samples -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl Expected output: 2022/12/16 06:59:03 - HopRun - Enabling project 'samples' 2022/12/16 06:59:03 - HopRun - Relative path filename specified: config/projects/samples//transforms/switch-case-basic.hpl 2022/12/16 06:59:03 - HopRun - Starting pipeline: config/projects/samples//transforms/switch-case-basic.hpl 2022/12/16 06:59:03 - switch-case-basic - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2022/12/16 06:59:03 - switch-case-basic - Execution started for pipeline [switch-case-basic] 2022/12/16 06:59:04 - Test Data.0 - Finished processing (I=0, O=0, R=0, W=5, U=0, E=0) 2022/12/16 06:59:04 - Switch id.0 - Finished processing (I=0, O=0, R=5, W=5, U=0, E=0) 2022/12/16 06:59:04 - Output default.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 06:59:04 - Output 1.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 06:59:04 - Output 4.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 06:59:04 - Output 3.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 06:59:04 - Output 2.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/16 06:59:04 - switch-case-basic - Pipeline duration : 0.668 seconds [ 0.668\" ] Read more Hop Search is a command line tool to search all metadata available in a specific project or environment. The example below searches in the samples project -j for switch-case. Windows Linux, macOS hop-search.bat -j samples -x switch-case Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-search.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Search -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Search -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig -j samples -x switch-case ===[Starting HopConfig]========================================================= Enabling project 'samples' Searching in project : samples Searching for [switch-case] Case sensitive? true Regular expression? true Searching in location : Project samples ----------------------------------------------------------------------------------- file:///C://hop/config/projects/samples/beam/pipelines/switch-case.hpl : null(switch-case) : matching property value: switch-case file:///C://hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : matching property value: switch-case file:///C://hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : pipeline transform property : filePrefix ./hop-search.sh -j samples -x switch-case Expected output: Enabling project 'samples' Searching in project : samples Searching for [switch-case] Case sensitive? true Regular expression? true Searching in location : Project samples ----------------------------------------------------------------------------------- file:///hop/config/projects/samples/beam/pipelines/switch-case.hpl : null(switch-case) : matching property value: switch-case file:///hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : matching property value: switch-case file:///hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : pipeline transform property : filePrefix Hop Server is a web service interface to manage and run workflows and pipelines. The example command below starts the most basic server on your machine localhost on port 8081. Windows Linux, macOS hop-server.bat localhost 8081 Expected output: C:\\echo off ===[Environment Settings - hop-server.bat]==================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.www.HopServer localhost 8081 ===[Starting HopServer]========================================================= 2022/12/16 07:33:44 - HopServer - Enabling project 'default' 2022/12/16 07:33:44 - HopServer - Installing timer to purge stale objects after 1440 minutes. 2022/12/16 07:33:44 - HopServer - Created listener for webserver @ address : localhost:8081 Your Hop Server is available at http://localhost:8081, log on with the default username cluster, password cluster. Hit CTRL-C to stop the server. ./hop-server.sh localhost 8081 Expected output: 2022/12/16 07:20:19 - HopServer - Enabling project 'default' 2022/12/16 07:20:19 - HopServer - Installing timer to purge stale objects after 1440 minutes. 2022/12/16 07:20:19 - HopServer - Created listener for webserver @ address : localhost:8081 Your Hop Server is available at http://localhost:8081, log on with the default username cluster, password cluster. Hit CTRL-C to stop the server. Read more Hop Import is a command line tool to import PDI/Kettle jobs and transformations into Apache Hop. Hop Import does a lot more than just a code conversion from jobs to workflows and transformations to pipelines: database connections are converted to Apache Hop rdbms connections, variables are parsed and imported, and everything is bundled into a full Apache Hop project. The example command below prints the hop-import help. Check the Import Kettle (PDI) Projects in Apache Hop docs for more information. Windows Linux, macOS hop-import.bat ./hop-import.sh Read more Hop Translator is a gui tool that allows non-technical users to translate Hop in their native language. check the Translation Contribution Guide if you want to find out more about translating Hop. The example below starts the Hop Translator tool with the provided translator.xml file. The second parameter is the path to your local version of the Apache Hop source code. Windows Linux, macOS hop-translator.bat translator.xml Expected output: the Hop Translator tool starts. ./hop-translator.sh translator.xml Expected output: the Hop Translator tool starts. Read more","title":"Hop Tools","component":"manual","version":"2.7.0","name":"hop-tools","url":"/manual/latest/getting-started/hop-tools.html","titles":[{"text":"Hop GUI","hash":"_hop_gui","id":1},{"text":"Hop Conf","hash":"_hop_conf","id":2},{"text":"Hop Encrypt","hash":"_hop_encrypt","id":3},{"text":"Hop Run","hash":"_hop_run","id":4},{"text":"Hop Search","hash":"_hop_search","id":5},{"text":"Hop Server","hash":"_hop_server","id":6},{"text":"Hop Import","hash":"_hop_import","id":7},{"text":"Hop Translator","hash":"_hop_translator","id":8}]},"20":{"id":20,"text":"Apache Hop, short for Hop Orchestration Platform, is a data orchestration and data engineering platform that aims to facillitate all aspects of data and metadata orchestration. Hop lets you focus on the problem you’re trying to solve without technology getting in the way. Simple tasks should be easy, complex tasks need to be possible. Hop allows data professionals to work visually, using metadata to describe how data should be processed. Visual design enables data developers to focus on what they want to do instead of how that task needs to be done. This focus on the task at hand lets Hop developers be more productive than they would be when writing code. Hop was designed to be as flexible as possible: at the core is the small but powerful Hop engine. All functionality is added through plugins: the default Hop installation comes with about 400 plugins. You can remove or add third-party plugins according to your needs to tailor Hop to be exactly what you need. Hop is designed to work in any scenario, from IoT to huge volumes of data, on-prem, in the cloud, on a bare OS or in containers and kubernetes. Hop developers create workflows and pipelines in a visual development environment called Hop Gui. These workflows and pipelines can be executed on a variety of engines: workflows and pipelines can run on the native Hop engine, both locally and remotely. Pipelines can also run on Apache Spark, Apache Flink and Google Dataflow through the Apache Beam runtime configurations. In workflows and pipelines, hundreds of operations can be applied on the data: read from and write to a variety of source and target platforms, but also combine, enrich, clean and in many other ways manipulate data. Depending on the engine and selected functionality, your data can be processed in batch, streaming or in a batch/streaming hybrid. A number of common use cases for Hop are: Loading large data sets into databases taking advantage of the cloud, clustered, and massively parallel processing environments. Data warehouse population with built-in support for Slowly Changing Dimensions (SCD), Change Data Capture (CDC), and surrogate key creation. Integrate between diverse data architectures, combining relational databases, files, NoSQL databases like Neo4j, MongoDB, Cassandra etc Data migration between different databases and applications. Data profiling and data cleansing.","title":"What is Apache Hop?","component":"manual","version":"2.7.0","name":"hop-what-is-hop","url":"/manual/latest/getting-started/hop-what-is-hop.html","titles":[{"text":"Visual Design and Metadata","hash":"_visual_design_and_metadata","id":1},{"text":"Architecture","hash":"_architecture","id":2},{"text":"Flexible Runtimes","hash":"_flexible_runtimes","id":3},{"text":"Use Cases","hash":"_use_cases","id":4}]},"21":{"id":21,"text":"This guide walks you through the Hop basics. We’ll focus on the core knowledge you need to move around in Hop, without going in detail. At the end of this guide, there will be links to dive deeper into various Hop topics. This is what we’ll cover: What is Hop? Concepts Download & Install Tools Hop Gui overview Pipelines Workflows Next Steps","title":"","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/getting-started/index.html","titles":[{"text":"Getting Started","hash":"GettingStarted","id":1}]},"22":{"id":22,"text":"The Hop File Dialog is a versatile tool you’ll use often while working in Hop Gui. This dialog offers a lot more than basically selecting and saving files. Among other things, it enables you to work with VFS file sytems directly, provides file/folder information, lets you bookmark files and folders. The list below walks you through the options that are at your disposal in the Hop File Dialog. if you prefer your operating system’s native file dialog instead of the Hop dialog, change variable HOP_USE_NATIVE_FILE_DIALOG to Y in Tools → Edit Config Variables. Main Toolbar Navigate to the user home folder Navigate to the project home folder Navigate to the parent folder Navigate to the previous path from your history Navigate to the next path from your history Refresh File path. Displays the current file path. The file path can be used to directly enter (copy/paste) your desired path. This not only works with local files, you can also use all supported VFS file systems. File extensions. This list is populated from plugins, so there may be differences in the file types you have available. By default, this list includes: Workflows Pipelines CSV files JSON files Log files Markdown files SAS 7 BDAT files SVG files TXT files XML files Bookmarks: Bookmark your favorite files and folders for easy and fast access. Tools → Options contains an option to specify whether you want or don’t want global bookmarks in the file dialog (global by defaul). Add the selected file or folder as a bookmark Remove the selected bookmark File/folder browser: Browse your current file system, create folders and toggle hidden files and folders. Create folder Show or hide hidden files and directories File/folder information file and folder name last modified date Readable, writable, executable flags","title":"","component":"manual","version":"2.7.0","name":"file-dialog","url":"/manual/latest/hop-gui/file-dialog.html","titles":[{"text":"Hop File Dialog","hash":"_hop_file_dialog","id":1}]},"23":{"id":23,"text":"Version control is an important aspect of any serious data orchestration project. Hop wants to make it as easy as possible to manage versions for your workflows and pipelines through the integrated git options in the File Explorer perspective. If you open the file explorer for a project that is not version controlled in git, the git icons in the file explorer’s main toolbar (top left) will be shown as greyed-out and disabled. If git was found (ie the project has a .git folder in the project root), these buttons in this toolbar are enabled. The available options to work with files and the available git operations in this toolbar are briefly discussed below. icon action description shortcut Open selected file Opens the selected file in the appropriate editor (pipeline or workflow editor for workflows and pipelines, text editor for other files double-click Add folder adds a new folder at the selected location. A popup is shown for the folder name Delete Selected File Deletes the selected file DEL Rename the selected file Makes the selected file name editable to allow renaming F2 Refresh Refreshes the projects folder and file structure Git info Populates the file explorer’s git dialog with version information for the selected file. Git Add Add the selected file to version control Git Revert Revert file to last committed version (HEAD) Git commit Commit the latest changes for the selected file (providing a commit message) Git push Push the recent changes to the remote repository Git pull Pull the latest changes from the remote repository Only the available options are availabe at a given time. E.g. git add will not be available for files that already are in version control. In the folder and file structure tree below the toolbar, files use a color coding scheme to indicate the git status of a file: black: unchanged. This is the latest version of the file available in git, no changes detected. grey: this file is ignored blue: staged for commit. This file is ready to be committed ('Git Commit') red: not staged for commit. Add this file to git before changes can be committed ('Git Add'). Add a file Click on a file that is not yet staged for commit (red), click 'Git Add'. The color of the file changes to blue (staged for commit). Commit a file Click on a file that is staged for commit (blue), click 'Git Commit'. A popup dialog will ask to confirm the file to commit, and will show a popup for your commit message. Change the default 'Commit Message' to a commit message that describes the changes you made to the file. The file color changes to black (no changes). Show git info Click on a file that is under version control (black or blue). The file explorer will show the git status for this file: the file or folder, status, branch and a revisions table (list of previous commits). Select one of the available commits to show the changed files to show the changed files for that revision. Select any of the files in the revision from the 'Changed files' list to show the git diff information on the right hand side. For workflows and pipelines, click 'Visual diff' to open the file in the Data Orchestration perspective. Hop will show an additional icon in the upper right corner of the action or transform icon to indicate the git change that was made (green for added or yellow for changed)","title":"Working with git","component":"manual","version":"2.7.0","name":"hop-gui-git","url":"/manual/latest/hop-gui/hop-gui-git.html","titles":[{"text":"File Explorer Toolbar","hash":"_file_explorer_toolbar","id":1},{"text":"File Explorer Tree","hash":"_file_explorer_tree","id":2},{"text":"Working with files in git","hash":"_working_with_files_in_git","id":3}]},"24":{"id":24,"text":"The Hop Gui popup dialog is a contextual dialog that allows you to perform a lot of operations on metadata, workflows and pipelines. The popup dialog was designed to enable fast development through search and single clicks. Hover over any of the available options in the popup dialog to see a description of that option. The example below shows the description for the Copy as workflow action option from the workflow popup. The search bar at the top of the dialog enables Hop developers to search the available items in the dialog. The list of available items is updated as you type. Navigate to the item you need using the arrow keys and hit enter or single-click on an item to select an item or add an action or transform to your workflow or pipeline. collapse or expand all categories show categories: show the available items in a categorized list, or as one large list of items fixed width: display all items in a fixed with, tabular layout When you create a new item, the dialog will show you a list of metadata items that can be created with a single click of a button. Create a new item either by clicking the in the upper left corner, through File → New or by hitting CTRL-N File Pipeline Workflow Metadata Beam File Definition Cassandra Connection Data Set Hop Server MongoDB Connection Neo4j Connection Neo4j Graph Model Partition Schema Pipeline Log Pipeline Probe Pipeline Run Configuration Pipeline Unit Test Relational Database Connection Splunk Connection Web Service Workflow Log Workflow Run Configuration The 'Basic' category contains a number of operations you can perform on the current workflow. edit workflow: edit this workflow’s properties: description, parameters etc. create a note: add a note to this workflow paste from the clipboard: paste actions, notes or an entire workflow from the clipboard copy as workflow action: copy this workflow to the clipboard as a workflow action, so you can paste it in another workflow as a pre-configured workflow action All other categories contain the actions you can add to your workflow. Check the full list of actions for detailed information on the available action options. When clicking on an action icon, the popup contains a number of actions to work with actions: Basic Open: Action Type: open the selected action type. This is available for workflow, pipeline actions etc. Copy Action to clipboard: copy this action to the clipboard, so you can paste it in the current or another workflow. Edit the action: edit the current action’s properties Create hop: this option closes the dialog and adds an open hop. Click on any other action icon in your workflow to create a hop to that action. Detach action: remove all hops to and from this action. If this action connects 2 other actions through hops, a hop between these actions will be created. Edit action description: opens the description dialog for this action Delete this action: delete this action from the workflow. No new hops will be created if this action was connected to other actions. Advanced Parallel execution: enable or disable parallel execution for actions after the current action. Logging Edit Custom Logging: set a custom logging level for the current action Clear Custom Logging: reset the logging level for this action back to Basic Two shortcuts to open the workflow or pipeline specified in an action are to hover over the icon and hit the z key, or CTRL-SHIFT-click on the action icon. Click on an action icon to open the popup dialog. Click on the action name to directly open the action’s properties. This is a shortcut to clicking on the icon and selecting Edit from the popup dialog. The 'Basic' category contains a number of operations you can perform on the current pipeline. edit pipeline: edit this pipeline’s properties: description, parameters etc. create: add a note to this pipeline paste from the clipboard: paste transforms, notes or an entire pipeline from the clipboard copy as pipeline action: copy this pipeline to the clipboard as a workflow action, so you can paste it in a workflow as a pre-configured pipeline action When clicking on a transform icon, the popup contains a number of actions to work with transforms: Basic Edit: edit the current transform’s properties Copy to clipboard: copy this transform to the clipboard, so you can paste it in the current or another pipeline. Create hop: this option closes the dialog and adds an open hop. Click on any other transform icon in your pipeline to create a hop to that transform. Detach transform: remove all hops to and from this transform. If this transform connects 2 other transforms through hops, a hop between these transforms will be created. Show input fields: show all the fields entering this transform Show output fields: show all output fields resulting from this transform Edit description: opens the description dialog for this transform Delete: delete this transform from the pipeline. No new hops will be created if this transform was connected to other transforms. Data Routing Specify copies: set the number of transform copies to use during execution Copy/distribute rows: make the transform copy/distribute rows during execution. The option is contextual: if the transform is copying rows, only the distribute option will be shown and vice versa. Set partitioning: specify how rows of data need to be grouped in partitions allowing parallel execution where similar rows need to end up on the same transform copy. Error handling: configure error handling for this transform (for supported transforms) Add web service: use the output of this transform as a web service with Hop Server. Preview View output: view output of this transform in a running or finished pipeline. Preview output: execute the pipeline and see the output of this transform Debug output: execute the pipeline and debug the output of this transform. Execution will pause when the debugging conditions are met. Sniff output: take a look at 50 rows of output from the selected transform in a running pipeline Add data probe: streams the output rows of this transform to a pipeline defined in a pipeline probe. Logging Edit Custom Logging: set a custom logging level for the current transform Clear Custom Logging: reset the logging level for this transform back to Basic Unit Testing Unit testing: create an empty data set with the output fields and layout for this transform Write rows to data set: run the current pipeline and write the output of the current transform to a data set. The options shown for Unit Testing are just a subset of the available options. Check the unit testing docs for a detailed explanation of all the unit testing options. Click on a transform icon to open the popup dialog. Click on the transform name to directly open the transform properties. This is a shortcut to clicking on the icon and selecting Edit from the popup dialog. The Hop options, available from both the workflow and pipeline editors, offer a number of operations you can perform on one or more hops. For pipelines, the dialog offers the following options: Basic disable/enable hop: enable the current hop (if disabled) or disable the current hop (if enabled). This option will only show the applicable options (e.g. 'enable hop' won’t be shown for active hops and vice versa) delete hop: delete the current hop Bulk Enable downstream hops: enable the current hop, and all hops that follow later in the workflow (or pipeline). Disable downstream hops: disable the current hop and all hops that follow later in the current workflow (or pipeline). When working in a workflow, the hops popup dialog has all the options as the pipeline hop dialog, with one additional category: Routing Unconditional hop: make the current hop unconditional (ignore the result of the previous action and follow this hop anyway) Success hop: make the current hop a success hop (only follow if the result of the previous action is 'success') Failure hop: make the current hop a failure hop (only follow if the result of the previous action is 'failure')","title":"Hop Gui Popup (Context) Dialog","component":"manual","version":"2.7.0","name":"hop-gui-popup-dialog","url":"/manual/latest/hop-gui/hop-gui-popup-dialog.html","titles":[{"text":"Creating Items","hash":"_creating_items","id":1},{"text":"Workflow Options","hash":"_workflow_options","id":2},{"text":"Workflow Action Options","hash":"_workflow_action_options","id":3},{"text":"Pipeline Options","hash":"_pipeline_options","id":4},{"text":"Pipeline Transform Options","hash":"_pipeline_transform_options","id":5},{"text":"Hop Options","hash":"_hop_options","id":6}]},"25":{"id":25,"text":"Hop Web is a web based Hop Gui version. Hop Gui was designed from the ground up to be web-ready. You’ll barely notice any difference between working in the Hop Gui fat client or Hop Web. Hop Web is included in the default Hop build. With each build, an update is pushed to Docker Hub. This continously updated docker image is by far the easiest way to try out Hop Web: Pull the latest build with: docker pull apache/hop-web. Once the image has been pulled, start Hop Web with docker run -p 8080:8080 apache/hop-web:latest The Hop Web container should only take a couple of seconds to start. Your container logs should output similar to the example below: 22-Apr-2021 18:13:39.786 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/tomcat/webapps/ROOT] has finished in [8,274] ms 22-Apr-2021 18:13:39.790 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [\"http-nio-8080\"] 22-Apr-2021 18:13:39.797 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [8319] milliseconds 2021/04/22 18:14:37 - Hop - Projects enabled 2021/04/22 18:14:37 - Hop - Enabling project : 'default' Once your container has started, Hop Web is available at http://localhost:8080/ui. You’ll feel right at home! Hop Web accepts the same variables as the default Apache Hop container image to allow Hop Web users to specify their project and environment when starting a Hop Web container: Environment Variable Description HOP_PROJECT_NAME Name of the Hop project to create in the container. You also need to specify the HOP_PROJECT_FOLDER variable. If you do not set this variable, no project or environment will be created. HOP_PROJECT_FOLDER Path to the home of the Hop project. HOP_ENVIRONMENT_NAME The name of the Hop environment to create in the container. If you do not set this variable, no environment will be created. When using an environment a project has to be created too HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS This is a comma separated list of paths to environment config files (including filename and file extension). Example docker run command to start Hop Web with a project and environment: docker run -it --rm \\ --env HOP_PROJECT_FOLDER=/project \\ --env HOP_PROJECT_NAME=web-samples \\ --env HOP_ENVIRONMENT_NAME=web-samples-test \\ --env HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS=/config/web-samples-test.json \\ --name hop-web-test-container \\ -p 8080:8080 \\ -v :/project \\ -v :/config \\ hop-web Hop Web contains the default Hop tools like hop-conf, hop-run etc. The tools are available in /usr/local/tomcat/webapps/ROOT in a running Hop Web container. Hop Web runs on a Tomcat server by default. You can extend Hop Web’s tomcat configuration to add authentication. The default Hop Web docker image picks up tomcat-users.xml and web.xml files and moves them to the correct location before Hop Web starts. A minimal sample tomcat-users.xml file: The following sample web.xml extends Hop Web’s default web.xml with the and elements required for basic authentication. org.eclipse.rap.applicationConfiguration org.apache.hop.ui.hopgui.HopWeb org.apache.hop.ui.hopgui.HopWebServletContextListener HopGui org.eclipse.rap.rwt.engine.RWTServlet HopGui /ui welcome /docs/English/welcome/index.html welcome /docs/English/welcome/index.html Server org.apache.hop.www.HopServerServlet Server /hop/* Wildcard means whole app requires authentication /* GET POST apachehop NONE BASIC Check the Apache Tomcat documentation on REALM configuration for more advanced configurations. Mount your local configuration folder with these two files to a /config folder in the Apache Hop Web container to do so: docker run -it --rm \\ -p 8080:8080 \\ -v :/config/ \\ apache/hop-web` Hop Web will now ask for your username and password:","title":"Hop Web","component":"manual","version":"2.7.0","name":"hop-web","url":"/manual/latest/hop-gui/hop-web.html","titles":[{"text":"Getting Hop Web","hash":"_getting_hop_web","id":1},{"text":"Starting Hop Web with a project and environment","hash":"_starting_hop_web_with_a_project_and_environment","id":2},{"text":"Using the Hop CLI tools in Hop Web.","hash":"_using_the_hop_cli_tools_in_hop_web","id":3},{"text":"Authentication","hash":"_authentication","id":4}]},"26":{"id":26,"text":"Hop Gui is Hop’s visual development environment. You’ll spend a lot of time here in the various perspectives of Hop GUI. You’ll spend most of your time building, previewing running and debugging workflows and pipelines, but there’s also a lot of configuration that can be done from Hop Gui’s metadata perspective, you can search for any metadata with the search perspective, manage a variety of files and even version control them from the file explorer perspective and much more. This page covers a number of topics that are very specific to working with Hop Gui. Check the chapters on pipelines and workflows to learn more about creating and running pipelines and workflows in Hop Gui. Covered here are: File Dialog: the versatile Hop file browser and chooser dialog. Popup Dialog: the versatile popup dialog to work with metadata, workflows, pipelines and hops Perspectives: the various perspectives in the Hop Gui Working with git: Manage files in the git version control system Keyboard Shortcuts: a list of the keyboard shortcuts that are available in Hop Gui. Hop Web: a web version of Hop Gui that provides the exact same functionality and user experience as the desktop version","title":"","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/hop-gui/index.html","titles":[{"text":"Hop Gui","hash":"HopGui","id":1}]},"27":{"id":27,"text":"Icon: Keyboard shortcut: CTRL-Shift-C The configuration perspective offers a central location for all Apache Hop configuration options. The configuration perspective groups configuration options in the following tabs: General options control the behavior of Apache Hop and Hop Gui. Look & Feel control how Hop Gui looks like on your desktop or in your browser. Plugin options provide configuration options to control the behavior of your available Apache Hop plugins. System variables allows you to set and configure Apache Hop global variables. The General configuration tab allows you to configure the core Apache Hop options. Option Description Default Hop configuration filename the location where Apache Hop will store the configuration file. This configuration file will contain your project and environment information and global variables. set the environment variable HOP_CONFIG_FOLDER to set this location dynamically to allow easy switching between different Apache Hop versions and installations. read more /config/hop-config.json Preview data batch size number of rows that will be shown when previewing through the Pipeline run toolbar or from transform preview dialogs. INFO: this setting complements the preview option that is used in the native local pipeline run configuration, which can be accessed through the preview data icon in the bottom right corner of transforms after a successful run. 1000 Use database cache enable caching for relational databases yes Open last file at startup reopen the last used files and select the last used file when Hop GUI starts yes Autosave changed files Automatically save changed workflow and pipelines files yes Automatically split hops Automatically split hops when a new transform or action is dropped on a hop. Hops will be shown in bold when a transform or action can be dropped on it yes Show Copy or Distribute Dialog Show a pop-up dialog to ask the user to confirm whether data should be copied or distributed (round-robin) to subsequent transforms in a pipeline yes Ask user when exiting Show a pop-up dialog to let the user confirm before exiting Hop GUI yes Clear customer parameters (transforms/plugins Deletes all custom flags and parameters in the dialogs of the transforms and plugins on click Auto collapse palette tree Collapse or expand the categories in the context dialog no (expanded) Display tooltips Show tooltips where available in Hop GUI yes Show help tooltips Show help tooltips where available in Hop GUI yes Use double click on canvas? double-click instead of single click on e.g. transform and action dialogs. enabled: double-click on a transform or action icon to open its properties. A single click on the icon opens the context dialog. disabled (default): (single) click on a transform or action icon to open the context dialog. (single) click on a transform or action name to open its properties no Draw border around names on canvas? If this option is enabled, a border will be drawn around the names of transforms and actions on the canvas. no Use global bookmarks in the file dialog Bookmarks in the file dialog are global (across projects) by default. Enable to make them project-specific yes The Look & Feel configuration options allow you to configure various aspects of Hop GUI’s behavior. Option Description Default Default font the default font to use in Hop GUI Noto Sans - 10 Fixed width font the default fixed width font to use in Hop GUI Monospace - 10 Font on workspace the font to use in the workspace Noto Sans - 10 Font for notes the font to use for workflow and pipeline notes Noto Sans - 10 Icon size in workspace the default size for action and transform icons in workflows and pipelines 32 Line width on workspace line width to use for hops in workflows and actions 1 Dialog middle percentage percentage to use to determine a dialog’s position 35 UI zoom level default zoom level to use for workflows and pipelines in Hop GUI 100% Canvas Grid Size default grid size to use for workflows and pipelines in the Hop GUI editor 16 Show Canvas Grid show the grid (dotted) for workflows and pipelines in Hop GUI no Hide the menu bar Do not show the menu bar. If enabled (default), the menu options are available from the Apache Hop icon in Hop GUI’s upper left corner. yes Show a toolbar above tables Show a toolbar with options to cut/copy/paste, move lines up/down etc in table views (e.g. in preview dialogs, transform configuration options) yes Dark mode use dark mode. This options is read only (can’t be changed). Your operating system’s theme settings are used by default. N/A Preferred Language the default language to use in Hop GUI. Check the Translation Contribution Guide to translate Apache Hop to your native language. English (US) The plugins tab contains configuration options that are provided by the various plugins in Apache Hop. The following plugins are available by default: Azure Blob Storage VFS configuration options. Dropbox VFS configuration options. Explorer perspective configuration options. Google Cloud configuration options (service account JSON key file). Google Drive VFS configuration options. Project configuration options Welcome Dialog: specify whether to show or hide the welcome dialog when Hop GUI starts. The System Variables tab contains the available system variables in Hop GUI. Check the Variables documentation for more information about the available variables and their default values.","title":"Configuration Perspective","component":"manual","version":"2.7.0","name":"perspective-configuration","url":"/manual/latest/hop-gui/perspective-configuration.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Detailed configuration tabs overview","hash":"_detailed_configuration_tabs_overview","id":3},{"text":"General","hash":"_general","id":4},{"text":"Look & Feel","hash":"_look_feel","id":5},{"text":"Plugins","hash":"_plugins","id":6},{"text":"System Variables","hash":"_system_variables","id":7}]},"28":{"id":28,"text":"Icon: Keyboard shortcut: CTRL-Shift-D The Data Orchestration perspective is where you’ll spend most of your time in Hop Gui. This is where pipelines and workflows are built, tested and run. Pipelines and workflow files can be opened or created. At that point they appear in new tabs in this perspective. For more information on how to get started with pipelines, see the Pipelines getting started guide. For more information on how to get started with workflow, see the Workflows getting started guide.","title":"Data Orchestration Perspective","component":"manual","version":"2.7.0","name":"perspective-data-orchestration","url":"/manual/latest/hop-gui/perspective-data-orchestration.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Usage","hash":"_usage","id":2}]},"29":{"id":29,"text":"Icon: The Execution Information perspective provides an overview of execution information for previously executed workflows and pipelines. The perspective allows you to browse the list of executions and drill up or down to parent or child workflows and/or pipelines. Additionally, this perspective provides information about the execution status, logging information, (pipeline) metrics and the profiled data. The execution information displayed in this perspective is not collected automatically. You need to specify to which location you want to send execution information in the Pipeline run configuration or Workflow run configuration of your choice. You can navigate to it by clicking the icon from the vertical perspective toolbar in the Hop GUI. The Keyboard shortcut to do the same is: CTRL-Shift-I. If you want to view information regarding the last execution of the currently loaded pipeline (from the data orchestration perspective), you can hit the location icon in the toolbar: If you’re editing a workflow you can do the same: The left-hand side panel of the perspective contains a tree with all the defined Execution Information Location metadata elements. Below the names of these locations you’ll see the icon, name and registration date of the pipelines and workflow for which there is information. For example: Possible action: Action Result Double-click on a listed execution The information about the pipeline or workflow will be loaded into a new tab on the right-hand side of the perspective. Click on the refresh icon The last 100 executions without parent will be loaded from the location Click on the delete icon The currently selected execution will be deleted or all executions from the currently selected location (after confirmation). On the right side are the executions opened in different tabs. For example, here is a single execution information tab of a completed workflow: At the bottom you have different tabs: Tab Description Info Here you’ll find general information regarding the pipeline or workflow you’re looking at Metrics In case you’re examining a pipeline execution you can see the overall transform metrics if there are any. Log Here you can find the pipeline or workflow logging text. The logging text is loaded lazily when the tab is selected. The first part of the log is shown up to the limit specified in the configuration perspective under the option Maximum execution logging text size which is specified in number of characters. Data During the execution of a pipeline or workflow Hop can capture all sorts of data. Which data depends on the type of work that is being done and on how capturing is configured. For example the amount of data captured depends on the Execution Data Profile you set for a pipeline or whether of not there was interesting information after the execution of an action. If you click on a transform or workflow icon the perspective will automatically try to load all the data it has for it. It will switch to the \"Data\" tab at the bottom. There you will find a list of data sets that you can look at. Here are available data sets for workflow actions: Data set Description Result details of action You will find out if there were any errors, what the result (true/false) was or whether the action was stopped. Result files of action If the action result contains any file names they will be in this data set Result rows of action If the action result contains any rows they will be in this data set Variables before execution The list of interesting (different from the start of the workflow) variables before the action was executed. Variables after execution The list of interesting variables (and their values) after the action was executed. Here are some data sets you can capture in workflow transforms using an Execution Data Profile: Data set Description First rows of …​ Shows the first rows that were written by the transform. Last rows of …​ Shows the last rows that were written by the transform. Random rows of …​ Shows a random selection of rows written by the transform Data profiling data sets Depending on the data profiling options you enabled you can find per-column statistical information as well as sample rows. If you want to know what went on during the execution of a particular action or transform you can select it and hit the arrow down in the toolbar: If the transform executed a pipeline or workflow in multiple copies you can choose which execution you want to follow. The same goes for workflows or pipelines that got executed multiple times in a repeat action or a Start loop. The result will be that the underlying execution will be opened in a new tab in the perspective. If you are looking at the execution that got started by another pipeline or workflow you can navigate to this parent by clicking on the \"arrow up\" toolbar icon: If you want to quickly navigate from the execution information of a pipeline or workflow to its editor, you can click on the data orchestration icon in the toolbar:","title":"Execution Information Perspective","component":"manual","version":"2.7.0","name":"perspective-execution-information","url":"/manual/latest/hop-gui/perspective-execution-information.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Information collection","hash":"_information_collection","id":2},{"text":"Navigation","hash":"_navigation","id":3},{"text":"Usage","hash":"_usage","id":4},{"text":"Left-hand side panel","hash":"_left_hand_side_panel","id":5},{"text":"Right-hand side tab folder","hash":"_right_hand_side_tab_folder","id":6},{"text":"Selecting an icon","hash":"_selecting_an_icon","id":7},{"text":"Drill down","hash":"_drill_down","id":8},{"text":"Navigate to parent","hash":"_navigate_to_parent","id":9},{"text":"Edit the pipeline or workflow","hash":"_edit_the_pipeline_or_workflow","id":10}]},"30":{"id":30,"text":"Icon: Keyboard shortcut: CTRL-Shift-E The file explorer perspective is where you’ll perform a lot of your file operation. This perspective contains handlers for the most common file types known to Hop. These are obviously hwf (workflows) and hpl (pipelines), but also JSON, CSV, TXT, XML, Markdown, SVG, Log and SAS 7 BDAT files. The File Explorer perspective is also where you’ll manage version control for your projects through Git integration. Even though fully functional, the editor for most file types in the File Explorer is rather basic. Expect these to evolve in the next Hop releases, or check the code contribution guide if you’d like to help us improve Hop by contributing file editors. The file operations are available through a number of toolbar options: Right arrow: open selected file Create new folder Delete Rename Refresh You can also open a file simply by double-clicking it. If this is a workflow or pipeline it will be opened in the data orchestration perspective. In all other cases the file will be opened in a new tab. If the git plugin (folder plugins/misc/git) is installed, the file explorer will look for a .git/config file in the project home folder. It this exists the explorer perspective will start to color code the files listed: red: the file has not been added to git (un-staged). blue: the file has been changed (staged). gray: the file is ignored by git. The \"Git Info\" icon in the toolbar will be enabled if there is information regarding the file or folder that is selected. If you click on it, you’ll be able to all sorts of information regarding the git history in a new tab: Below the revision history you can see the revisions of a file. If you select a revision you’ll be able to not only see the text differences between two revisions but also use the \"Visual diff\" button on the right-hand side of the tab. If you select the \"visual diff\" option the GUI will switch to the data orchestration perspective where 2 new tabs will be opened with the pipeline or workflow state before and after the change. Small information icons will be added to the various transforms, actions and hops to indicate if they were changes, deleted or added. Here are the basic git operations that are supported: add: stage the file to include it in a commit commit: commit changes to origin revert changes: checkout file or folder to revert changes push: push changes pull: pull changes You can access these operations from the toolbar above the file explorer tree:","title":"File Explorer Perspective","component":"manual","version":"2.7.0","name":"perspective-file-explorer","url":"/manual/latest/hop-gui/perspective-file-explorer.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"File operations","hash":"_file_operations","id":2},{"text":"Git integration","hash":"_git_integration","id":3},{"text":"Description","hash":"_description_2","id":4},{"text":"Git","hash":"_git","id":5},{"text":"Git info","hash":"_git_info","id":6},{"text":"Git operations","hash":"_git_operations","id":7}]},"31":{"id":31,"text":"Icon: Keyboard shortcut: CTRL-Shift-M The Metadata perspective is where you manage the different metadata types available in your Hop projects. This perspective has a tree on the left-hand side where the metadata types are shown as top level with elements below it: You can right-click on any element to edit, rename, duplicate or delete an element. You can also use this menu to create new elements. To create a new element you can also double-click on the element type itself. You can also use the toolbar icons in the toolbar located right above the metadata tree. When creating or editing metadata elements you will get the information presented in a separate tab on the right-hand side. This will allow you to easily switch between various metadata elements when working in a project.","title":"Metadata Perspective","component":"manual","version":"2.7.0","name":"perspective-metadata","url":"/manual/latest/hop-gui/perspective-metadata.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"The types tree","hash":"_the_types_tree","id":3},{"text":"Managing elements","hash":"_managing_elements","id":4},{"text":"Tabs","hash":"_tabs","id":5}]},"32":{"id":32,"text":"Icon: The Neo4j perspective provides a view on and allows you to query Hop execution history from a Neo4j database. The perspective shows the value the NEO4J_LOGGING_CONNECTION (used to load execution logging to Neo4j), allows to select a workflow or pipeline to display logging for (optionally, specify the number of executions and only show root executions). For the selected workflow or pipeline, or all executions if none selected), the id, name, type, number of rows read, written, input, output and rejected, the number of error rows and the execution date and duration are shown. In the bottom half of the perspective dialog, the logging text, path to errors and a number of useful cypher queries are shown. While fully functional we recommend you use the Neo4j execution information location plugin.","title":"Neo4j Perspective","component":"manual","version":"2.7.0","name":"perspective-neo4j","url":"/manual/latest/hop-gui/perspective-neo4j.html","titles":[{"text":"Description","hash":"_description","id":1}]},"33":{"id":33,"text":"Icon: The plugin perspective gives you an overview of all the available plugins in your Hop installation. This includes a dropdown to filter by plugin type (top), and a table showing the plugin type, id, name, description and image file (icon).","title":"","component":"manual","version":"2.7.0","name":"perspective-plugin","url":"/manual/latest/hop-gui/perspective-plugin.html","titles":[{"text":"Plugin Perspective","hash":"_plugin_perspective","id":1},{"text":"Description","hash":"_description","id":2}]},"34":{"id":34,"text":"Icon: The Search perspective allows you to search through all metadata in your Hop projects. This not only includes workflows and actions, pipelines and transforms, but any other metadata type known to Hop. The search options are the location (all objects in Hop Gui or only the current project), and whether the search string is case sensitive (default: case insensitive) or the search string is a regular expression (default: false). The result table shows the type, name, filename, location, matching text and description. Use the 'Open' button at the bottom of the perspective to jump directly to the selected metadata object (e.g. open a transform in a pipeline). The hop-search tool provides the same functionality as the Search Perspective through the command line instead of in a GUI.","title":"Search Perspective","component":"manual","version":"2.7.0","name":"perspective-search","url":"/manual/latest/hop-gui/perspective-search.html","titles":[{"text":"Description","hash":"_description","id":1}]},"35":{"id":35,"text":"Hop comes with a number of perspectives built in. Change the current perspectives by clicking on the icon in the left-hand toolbar, or through the corresponding keyboard shortcut. Use the keyboard shortcuts CTRL-SHIFT-arrow-up and CTRL-SHIFT-arrow-down to cycle through perspectives. Here are the available perspectives: Data Orchestration Execution Information Configuration Metadata File explorer Search Plugins explorer Neo4j","title":"Hop Gui Perspectives","component":"manual","version":"2.7.0","name":"perspectives","url":"/manual/latest/hop-gui/perspectives.html","titles":[]},"36":{"id":36,"text":"The table below lists the main shortcuts in Hop. Using them will save you a lot of time while working with Hop. If you are a Mac user, please be aware that the Mac keys must be used. Most of the times you can replace ctrl with cmd. Shortcut Action Ctr + n Create a new work item Ctrl + o Open a work item Ctrl + s Save a work item Ctrl + Shift + F5 Open the Metadata Explorer Menu Ctrl + Space Opens the variables popup (NOTE: only environment variables and variables with the JVM scope are shown here. Variables that are created in pipeline or workflow with a parent, grant parent or root workflow job need to be entered manually)) Ctrl + w Close a work item Ctrl + q Quit Hop Ctrl + z Undo last change Ctrl + Shift + z Redo last change Ctrl + a Select all items in work item ESC Unselect all items in work item Ctrl + f Search the Hop Gui for something Ctrl + c Copy an object Ctrl + v Paste an object Ctrl + x Cut an object DEL Delete an object Alt + ← Navigate to the previous file Alt + → Navigate to the next file F8 Execute work item Shortcut Action Ctrl + HOME Align all items to the specified grid side Ctrl + ← Align all items on the canvas with the left-most selected in the selection. Ctrl + → Align all items on the canvas with the right-most selected in the selection. Ctrl + ↑ Align all items on the canvas with the top-most selected in the selection. Ctrl + ↓ Align all items on the canvas with the bottom-most selected in the selection. Alt + → Distribute the selected items evenly between the left-most and right-most item in your selection. Alt + ↑ Distribute the selected items evenly between the up-most and down-most item in your selection. Ctrl + = Zoom In on your canvas Ctrl + - Zoom out on your canvas Ctrl + 0 Reset the zoom percentage to 100% Ctrl + Click On hops to quickly enable/disable Ctrl + Shift + Click On hops to quickly delete it Ctrl + Shift + Click Use this shortcut on workflow actions and pipeline transforms that use another workflow or pipeline to open. mouse over Hover over a workflow action or pipeline transform that uses another workflow or pipeline to open (similar to option above) mouse over transform + space Opens the outgoing fields Shortcut Action Ctrl + Shift + ↑ Switch one perspective up Ctrl + Shift + ↓ Switch one perspective down Ctrl + Shift + d Open the Data Orchestration Perspective Ctrl + Shift + i Open the Execution Information Perspective Ctrl + Shift + m Open the Metadata Perspective Ctrl + Shift + e Open the File Explorer Perspective Ctrl + f Open the Search Perspective none Open the Plugin Perspective none Open the Neo4j Perspective","title":"Hop Shortcuts","component":"manual","version":"2.7.0","name":"shortcuts","url":"/manual/latest/hop-gui/shortcuts.html","titles":[{"text":"General Shortcuts","hash":"_general_shortcuts","id":1},{"text":"Pipeline and Workflow Shortcuts","hash":"_pipeline_and_workflow_shortcuts","id":2},{"text":"Perspective Shortcuts","hash":"_perspective_shortcuts","id":3}]},"37":{"id":37,"text":"Table of Contents Description The base URL Configuration Metadata services List the metadata type keys List the metadata elements for a key Get a metadata element Save a metadata element Delete a metadata element Plugins services List all the plugin type classes List all the plugins for a given type class Execution services Execute a pipeline synchronously Execution Information Location services Get execution IDs Get execution Get execution state The Hop REST web application is deployed as a WAR file hop-rest-.war. You can put this archive in the webapps folder of your favorite server (e.g. Apache Tomcat). We suggest that you rename it to hop.war or that you unzip it in a hop folder. When deployed under a webapps/hop folder you will get the services, detailed below, under the base URL of /hop/api/v1/. When the web application starts it will look for an environment variable called HOP_REST_CONFIG_FOLDER to determine where it will look for a file called hop-rest.properties. This file can contain the following properties to determine the configuration of the application: Property Description logLevel The logging level to use, one of NOTHING, ERROR, MINIMAL, BASIC, DETAILED, DEBUG, or ROWLEVEL. metadataExportFile The metadata to use for the web application in the form of a single JSON 'export' file. Use the GUI tools menu or sh hop-conf.sh --export-metadata to export metadata to a single file. environmentName In case the projects plugin is available it will enable this environment and the underlying project (to be configured on the system, point to a configuration with HOP_CONFIG_FOLDER) before starting the application. projectName In case the projects plugin is available it will enable this project (to be configured on the system, point to a configuration with HOP_CONFIG_FOLDER) before starting the application. The metadata services are deployed under sub-path metadata/. Type GET Path metadata/types Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/metadata/types Example output [\"dataset\",\"workflow-log\",\"async-web-service\",\"execution-info-location\",\"web-service\",\"cassandra-connection\",\"workflow-run-configuration\",\"unit-test\",\"rdbms\",\"mongodb-connection\",\"file-definition\",\"splunk\",\"pipeline-run-configuration\",\"pipeline-log\",\"server\",\"partition\",\"execution-data-profile\",\"neo4j-connection\",\"pipeline-probe\",\"neo4j-graph-model\"] Type GET Path metadata/list/{key} Arguments key : the key of the metadata type Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/metadata/list/pipeline-run-configuration/ Example output [\"local\"] Type GET Path metadata/{key}/{name} Arguments key : the key of the metadata type, {name} : the name of the metadata element to get. Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/metadata/pipeline-run-configuration/local/ Example output {\"engineRunConfiguration\":{\"Local\":{\"feedback_size\":\"50000\",\"sample_size\":\"1000\",\"sample_type_in_gui\":\"None\",\"wait_time\":\"2\",\"rowset_size\":\"10000\",\"safe_mode\":false,\"show_feedback\":false,\"topo_sort\":false,\"gather_metrics\":false,\"transactional\":false}},\"defaultSelection\":false,\"configurationVariables\":[],\"name\":\"local\",\"description\":\"Runs your pipelines locally with the standard local Hop pipeline engine\",\"dataProfile\":\"first-last\",\"executionInfoLocationName\":\"local\"} Type POST Path metadata/{key} Arguments key : the key of the metadata type to save Consumes application/json Produces application/json Example call curl -X POST http://localhost:8080/hop/api/v1/metadata/pipeline-run-configuration/ -d '{\"engineRunConfiguration\":{\"Local\":{\"feedback_size\":\"50000\",\"sample_size\":\"1000\",\"sample_type_in_gui\":\"None\",\"wait_time\":\"2\",\"rowset_size\":\"10000\",\"safe_mode\":false,\"show_feedback\":false,\"topo_sort\":false,\"gather_metrics\":false,\"transactional\":false}},\"defaultSelection\":false,\"configurationVariables\":[],\"name\":\"local\",\"description\":\"Runs your pipelines locally with the standard local Hop pipeline engine\",\"dataProfile\":\"first-last\",\"executionInfoLocationName\":\"local\"}' Type DELETE Path metadata/{key}/{name} Arguments key : the key of the metadata type to save. name : the name of the metadata element to delete. Produces application/json Example call curl -X DELETE http://localhost:8080/hop/api/v1/metadata/pipeline-run-configuration/Flink/ Output Flink The plugins services are deployed under sub-path plugins/. Type GET Path plugins/types Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/plugins/types Example output [\"org.apache.hop.core.compress.CompressionPluginType\",\"org.apache.hop.core.row.value.ValueMetaPluginType\",\"org.apache.hop.core.database.DatabasePluginType\",\"org.apache.hop.core.plugins.TransformPluginType\",\"org.apache.hop.core.auth.AuthenticationConsumerPluginType\",\"org.apache.hop.imp.ImportPluginType\",\"org.apache.hop.core.encryption.TwoWayPasswordEncoderPluginType\",\"org.apache.hop.core.auth.AuthenticationProviderPluginType\",\"org.apache.hop.core.plugins.PartitionerPluginType\",\"org.apache.hop.core.logging.LoggingPluginType\",\"org.apache.hop.execution.plugin.ExecutionInfoLocationPluginType\",\"org.apache.hop.core.config.plugin.ConfigPluginType\",\"org.apache.hop.core.plugins.HopServerPluginType\",\"org.apache.hop.core.plugins.ActionPluginType\",\"org.apache.hop.core.extension.ExtensionPointPluginType\",\"org.apache.hop.pipeline.engine.PipelineEnginePluginType\",\"org.apache.hop.pipeline.transform.RowDistributionPluginType\",\"org.apache.hop.workflow.engine.WorkflowEnginePluginType\",\"org.apache.hop.core.vfs.plugin.VfsPluginType\",\"org.apache.hop.execution.sampler.ExecutionDataSamplerPluginType\",\"org.apache.hop.metadata.plugin.MetadataPluginType\"] Type GET Path plugins/list/{typeClassName}/ Arguments key : the class name of the plugin type Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/plugins/list/org.apache.hop.pipeline.engine.PipelineEnginePluginType This call retrieves all the information about all the pipeline engine plugins. Example output [{\"category\":null,\"name\":\"Beam DataFlow pipeline engine\",\"description\":\"This allows you to run your pipeline on Google Cloud Platform DataFlow, provided by the Apache Beam community\",\"ids\":[\"BeamDataFlowPipelineEngine\"],\"pluginType\":\"org.apache.hop.pipeline.engine.PipelineEnginePluginType\",\"imageFile\":null,\"separateClassLoaderNeeded\":false,\"classLoaderGroup\":null,\"nativePlugin\":false, …​ } The 'Execution' services are deployed under sub-path execution/. Type POST Path execution/sync Produces application/json Example call curl -X POST http://localhost:8080/hop/api/v1/execution/sync/ -H 'Content-Type: application/json' -d '{ \"service\" : \"test\", \"runConfig\" : \"local\", \"variables\" : { \"VAR1\" : \"value1\", \"VAR2\" : \"value2\" }, \"bodyContent\" : \"This is body content\" }' ` Example output The executing pipeline can produce output like this: { \"rows\" : [ { \"id\" : 1, \"uuid\" : \"93b534f0-31ef-4992-8012-ffbfd3d7d489\", \"var1\" : \"value1\", \"var2\" : \"value2\", \"bodyContent\" : \"This is body content\" }, …​ ] } The body to post can contain the following options (see also: the example above) execute: the name of the Web Service metadata element to use runConfig: the name of the pipeline run configuration to use variables: a map with variables (or parameters) with their names and values bodyContent: this will be set as a variable using the body content variable option in the Web Service metadata. The execution information location services are deployed under sub-path location/. Type POST Path location/executions/{locationName} Arguments locationName : the name of the execution information location to query. Consumes application/json Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/location/executions/local/ -H 'Content-Type: application/json' -d '{ \"includeChildren\" : \"true\", \"limit\" : 100 }' ` Example output The list of execution IDs looks like this: [\"af84cbc2-0166-4dea-956f-72b73cf66d0d\", \"bf84cbc2-0166-4dea-956f-72b73cf66d0e\", \"cf84cbc2-0166-4dea-956f-72b73cf66d0f\"] The body to post can contain the following options (see also: the example above) includeChildren: Set this to true if you want to see child executions of workflows and pipelines limit: the maximum number of IDs to retrieve or a value ⇐0 to get all IDs Type GET Path location/executions/{locationName}/{executionId} Arguments locationName: the name of the execution information location to query. executionId: the ID of the execution to retrieve. Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/location/executions/local/df84cbc2-0166-4dea-956f-72b73cf66d0d/ ` Example output The execution details look like this: {\"name\":\"pipeline-name\",\"filename\":\"/path/filename.hpl\",\"id\":\"df84cbc2-0166-4dea-956f-72b73cf66d0d\",\"parentId\":null,\"executionType\":\"Pipeline\", …​ } Type GET Path location/state/{locationName}/{executionId} Arguments locationName: the name of the execution information location to query. executionId: the ID of the execution state to retrieve. Produces application/json Example call curl -X GET http://localhost:8080/hop/api/v1/location/state/local/df84cbc2-0166-4dea-956f-72b73cf66d0d/ ` Example output The execution state looks like this: {\"executionType\":\"Pipeline\",\"parentId\":null,\"id\":\"df84cbc2-0166-4dea-956f-72b73cf66d0d\",\"name\":\"test-service\",\"copyNr\":null,\"loggingText\":\"logging-text\",\"lastLogLineNr\":14,\"metrics\":[{\"componentName\":\"id\",\"componentCopy\":\"0\",\"metrics\":{\"Read\":5,\"Buffers Output\":0,\"Errors\":0,\"Input\":0,\"Written\":5,\"Updated\":0,\"Output\":0,\"Rejected\":0,\"Buffers Input\":0}},{\"componentName\":\"uuid\",\"componentCopy\":\"0\",\"metrics\":{\"Read\":5,\"Buffers Output\":0,\"Errors\":0,\"Input\":0,\"Written\":5,\"Updated\":0,\"Output\":0,\"Rejected\":0,\"Buffers Input\":0}},{\"componentName\":\"Enhanced JSON Output\",\"componentCopy\":\"0\",\"metrics\":{\"Read\":5,\"Buffers Output\":0,\"Errors\":0,\"Input\":0,\"Written\":1,\"Updated\":0,\"Output\":1,\"Rejected\":0,\"Buffers Input\":0}},{\"componentName\":\"OUTPUT\",\"componentCopy\":\"0\",\"metrics\":{\"Read\":1,\"Buffers Output\":0,\"Errors\":0,\"Input\":0,\"Written\":1,\"Updated\":0,\"Output\":0,\"Rejected\":0,\"Buffers Input\":0}},{\"componentName\":\"5 rows\",\"componentCopy\":\"0\",\"metrics\":{\"Read\":0,\"Buffers Output\":0,\"Errors\":0,\"Input\":0,\"Written\":5,\"Updated\":0,\"Output\":0,\"Rejected\":0,\"Buffers Input\":0}},{\"componentName\":\"Get variables\",\"componentCopy\":\"0\",\"metrics\":{\"Read\":5,\"Buffers Output\":0,\"Errors\":0,\"Input\":0,\"Written\":5,\"Updated\":0,\"Output\":0,\"Rejected\":0,\"Buffers Input\":0}}],\"statusDescription\":\"Finished\",\"updateTime\":1678191016156,\"childIds\":[\"46690405-4b06-4353-973a-06aff689afe0\",\"ec974060-e228-4438-8408-b049803eb316\",\"f7344a76-06b0-4499-95a1-1b30bd987561\",\"32837620-df15-4602-b32c-69111689767f\",\"db2e3feb-3ab1-4491-a4dc-7036cc0c3a3f\",\"4653fb73-ac94-4ac3-adef-a14e6129aa14\"],\"details\":{},\"failed\":false,\"containerId\":\"c7c90ed5-6684-408a-be11-d1fd1c65164a\"}","title":"Hop REST Web Application","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/hop-rest/index.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"The base URL","hash":"_the_base_url","id":2},{"text":"Configuration","hash":"_configuration","id":3},{"text":"Metadata services","hash":"_metadata_services","id":4},{"text":"List the metadata type keys","hash":"_list_the_metadata_type_keys","id":5},{"text":"List the metadata elements for a key","hash":"_list_the_metadata_elements_for_a_key","id":6},{"text":"Get a metadata element","hash":"_get_a_metadata_element","id":7},{"text":"Save a metadata element","hash":"_save_a_metadata_element","id":8},{"text":"Delete a metadata element","hash":"_delete_a_metadata_element","id":9},{"text":"Plugins services","hash":"_plugins_services","id":10},{"text":"List all the plugin type classes","hash":"_list_all_the_plugin_type_classes","id":11},{"text":"List all the plugins for a given type class","hash":"_list_all_the_plugins_for_a_given_type_class","id":12},{"text":"Execution services","hash":"_execution_services","id":13},{"text":"Execute a pipeline synchronously","hash":"_execute_a_pipeline_synchronously","id":14},{"text":"Execution Information Location services","hash":"_execution_information_location_services","id":15},{"text":"Get execution IDs","hash":"_get_execution_ids","id":16},{"text":"Get execution","hash":"_get_execution","id":17},{"text":"Get execution state","hash":"_get_execution_state","id":18}]},"38":{"id":38,"text":"Hop Run is a command line tool to run your workflows and pipelines. Hop Run can be launched through the script with the corresponding name in your Hop installation directory, either hop-run.sh on Mac and Linux or hop-run.bat on Windows. Except for the laucher script, all options are platform agnostic; there is no difference in the way hop-run works on any operating system. You can display Hop Run’s options by running the command without any options. On Windows, run hop-run.bat. The command on Mac and Linux is hop-run.sh. You’ll see the option listed in a similar output to the one below: Usage Output of help Usage: [-ho] [-e=] [-f=] [-j=] [-l=] [-r=] [-ps=[, ...]]... [-s=[, ...]]... -a, --startaction= The name of the action where to start a workflow -e, --environment= The name of the lifecycle environment to use -f, --file= The filename of the workflow or pipeline to run -h, --help Displays this help message and quits -j, --project= The name of the project to use -l, --level= The debug level, one of NOTHING, ERROR, MINIMAL, BASIC, DETAILED, DEBUG, ROWLEVEL -l, --level= The debug level, one of NOTHING, ERROR, MINIMAL, BASIC, DETAILED, DEBUG, ROWLEVEL -lf, --logfile= The complete filename where hop-run will write the Hop console log -m, --metadata-export= A file containing exported metadata in JSON format -o, --printoptions Print the used options -p, --parameters=[,...] A list of PARAMETER=VALUE pairs -ps, --parameters-separator= A character to be used as separator for our list of PARAMETER=VALUE pairs (default is \",\"). -r, --runconfig= The name of the Run Configuration to use -s, --system-properties=[,...] A comma separated list of KEY=VALUE pairs -v, --version Print version information and exit The available options are listed in more detail in the table below: Short Extended Description -e --environment The name of the environment to use. Check the documentation on environments for more details. -a --startaction The name of the action where to start a workflow -f --file The filename of the workflow or pipeline to run -h --help Displays this help message and quits. -j --project The name of the project to use when running a pipeline or workflow -l --level The debug level, one of NOTHING, ERROR, MINIMAL, BASIC, DETAILED, DEBUG, ROWLEVEL -lf --logfile The complete filename where hop-run will write the Hop console log -m --metadata-export A file containing exported metadata in JSON format. See also the metadata export option in Hop Conf -o --printoptions Print the used options -p --parameters A comma separated list of PARAMETER=VALUE pairs -ps --parameters-separator A character to be used as separator for our list of PARAMETER=VALUE pairs (default is \",\"). -r --runconfig The name of the Run Configuration to use. Check the documentation on run configurations for more details. -s --system-properties A comma separated list of KEY=VALUE pairs Hop Run currently finishes with one of four exit codes. In all cases except 0, check the error logs for more detailed information for your specific error. Exit code Error Message Description 0 None No error message. Everything worked flawlessly. 1 Error found during execution! There was an error executing the workflow or pipeline. 2 General error found, something went horribly wrong! There was a general error that caused Hop Run to fail completely. 9 None There was an error parsing the provided parameter information. Hop Run shows the syntax summary and exists. The example below runs the switch-case-basic.hpl pipeline from the samples project through hop-run. Windows Linux, macOS Open a command (CMD) window, change to the directory where you unzipped Apache Hop and run: hop-run.bat -j samples -r local -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl Your output will be similar to what is shown below: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam \"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.run.HopRun -j samples -r local -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl ===[Starting HopRun]========================================================= 2022/12/12 14:09:58 - HopRun - Enabling project 'samples' 2022/12/12 14:09:58 - HopRun - Starting pipeline: config/projects/samples/transforms/switch-case-basic.hpl 2022/12/12 14:09:58 - switch-case-basic - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2022/12/12 14:09:58 - switch-case-basic - Execution started for pipeline [switch-case-basic] 2022/12/12 14:09:58 - Test Data.0 - Finished processing (I=0, O=0, R=0, W=5, U=0, E=0) 2022/12/12 14:09:58 - Switch id.0 - Finished processing (I=0, O=0, R=5, W=5, U=0, E=0) 2022/12/12 14:09:58 - Output 2.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:09:58 - Output default.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:09:58 - Output 1.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:09:58 - Output 4.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:09:58 - Output 3.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:09:58 - switch-case-basic - Pipeline duration : 0.542 seconds [ 0.542\" ] Open a terminal, change to the directory where you unzipped Apache Hop and run: ./hop-run.sh -j samples -r local -f ${PROJECT_HOME}/transforms/switch-case-basic.hpl Your output will be similar to what is shown below: 2022/12/12 14:06:39 - HopRun - Enabling project 'samples' 2022/12/12 14:06:39 - HopRun - Relative path filename specified: config/projects/samples//transforms/switch-case-basic.hpl 2022/12/12 14:06:39 - HopRun - Starting pipeline: config/projects/samples//transforms/switch-case-basic.hpl 2022/12/12 14:06:39 - switch-case-basic - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2022/12/12 14:06:39 - switch-case-basic - Execution started for pipeline [switch-case-basic] 2022/12/12 14:06:39 - Test Data.0 - Finished processing (I=0, O=0, R=0, W=5, U=0, E=0) 2022/12/12 14:06:39 - Switch id.0 - Finished processing (I=0, O=0, R=5, W=5, U=0, E=0) 2022/12/12 14:06:39 - Output 2.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:06:39 - Output default.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:06:39 - Output 4.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:06:39 - Output 3.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:06:39 - Output 1.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2022/12/12 14:06:39 - switch-case-basic - Pipeline duration : 0.499 seconds [ 0.499\" ] This is a list of examples on how the parameters on this command are parsed --parameters=key1=value1,key2=value2 Result: Key value key1 value1 key2 value2 --parameters=key1=\"This value contains spaces\",key2=value2 Result: Key value key1 This value contains spaces key2 value2 --parameters=key1=\\\"value1,value2\\\" Result: Key value key1 value1,value2 --parameters=key1=\"\\\"\\\"String with spaces\\\"\\\"\" Result: Key value key1 \"String with spaces\"","title":"Hop Run","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/hop-run/index.html","titles":[{"text":"Hop Run Options","hash":"_hop_run_options","id":1},{"text":"Possible exit codes","hash":"_possible_exit_codes","id":2},{"text":"Examples","hash":"_examples","id":3},{"text":"Parameter Examples","hash":"_parameter_examples","id":4},{"text":"Normal Usage","hash":"_normal_usage","id":5},{"text":"Spaces in value Usage","hash":"_spaces_in_value_usage","id":6},{"text":"Commas in value Usage","hash":"_commas_in_value_usage","id":7},{"text":"Forcing quotes in value","hash":"_forcing_quotes_in_value","id":8}]},"39":{"id":39,"text":"Hop Search is a command line tool which allows you to search in your projects. It’s particularly useful if you’re working on a remote server over a ssh connection and you need to find a certain value, setting, transform, action and so on. The search will match names, keys, values, descriptions and so on. Option Description Default value Available for plugin -j or --project The name of the project you want to search in None or the configured default project when none is specified Projects -e or --environment The environment to search in None or the configured default environment when none is specified Projects -h or --help Print the help options None -i or --case-insensitive Perform a case insensitive search false -x or --regular-expression The specified search string is a (Java) regular expression false -l or --print-locations Print which locations are being looked at false -v or --version Print version information false","title":"Hop Search","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/hop-search/index.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"40":{"id":40,"text":"This web service variant is used to execute long-running workflows. Instead of getting immediate results from a pipeline with a Web Service call, the only thing that is given back after the call in the unique ID of the executing workflow. With that unique ID you can query the status of the workflow. You can specify additional variables to report back during the querying of the status of the asynchronously running workflow. Check the Asynchronous Web Service metadata type for more information on how to configure the async web service. Here is the lifecycle: Executing an asynchronous web service is done by calling method hop/asyncRun with the main parameter being the name of the asynchronous web service. (service=) The response will be a JSON document which includes the ID of the workflow. Any other parameters will be considered to be variables or parameters of the workflow and are set in the underlying workflow. You can choose the workflow run configuration to use for the execution with the runConfig parameter. Please note that the more advanced features, like tracking of the progress of a running pipeline, are only available on a Local workflow engine. You can also POST content to the web service which can be set as a variable in the executing workflow. See the \"Content variable\" option below. In the following example we execute service dataload with parameter MAX set to 50M. The content of JSON file document.json is posted to the service. The result of the call is stored in file async-run.json: curl -v \\ --user cluster:cluster \\ --request POST \\ -o async-run.json \\ -H \"Content-Type: application/json\" \\ --data-binary '@document.json' \\ 'http://localhost:8282/hop/asyncRun/?service=dataload&MAX=50000000' You can call method hop/asyncStatus with as arguments the service name and ID of the executing workflow: hop/asyncStatus?service=&id=. The variables that are specified in the web service will be included in the JSON output of the service. You can also include the execution status of one or more pipelines. You can mark a pipeline action using the action: Enable Async Logging. You’ll be asked the name of the web service to report to. Using the output of the previous command you can execute the following command to query the status of the workflow from a command line: ID=$(cat async-run.json | sed 's/^.*\"id\":\"//g' | sed 's/\"}$//g') && \\ curl --user cluster:cluster \\ --request GET \\ -o - \\ 'http://localhost:8282/hop/asyncStatus/?service=dataload&id='$ID The ID of the executing asynchronous web service is the same as the \"container ID\" of the executing workflow. This means you can query the workflow itself as well with the hop/getWorkflowStatus service. The output of that service can be given in HTML (default), XML (parameter &xml=Y) or JSON (parameter &json=Y). The web service will also include the log channel ID of the workflow so that you can match it with the execution ID listed in the execution information location of your choice. See also: Get Workflow Status. Option Description Name The name of the asynchronous web service. This is the name that is passed into the asyncRun webService URL. Enabled Enables or disabled this Asynchronous Web Service Filename on the server This is the filename on the server. Make sure that the workflow you want to execute is available on the server. Status variables List the variables that are being reported back when the asynchronous status service is queried Content variable The name of the variable which will contain the content body of the service call","title":"Asynchronous Web Service","component":"manual","version":"2.7.0","name":"async-web-service","url":"/manual/latest/hop-server/async-web-service.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Execute Workflow","hash":"_execute_workflow","id":2},{"text":"Query Status","hash":"_query_status","id":3},{"text":"Options","hash":"_options","id":4}]},"41":{"id":41,"text":"Hop Server is a lightweight server to run workflows and pipelines with the Remote pipeline or Remote workflow run configurations. Hop Server is available as a script in your Hop installation directory. Run Hop Server without any parameters to display its usage options. On Windows, this is hop-server.bat, on Mac and Linux, run hop-server.sh. Usage Usage: [-k] [-gs] [-e=] [-id=] [-j=] [-l=] [-n=] [-p=] [-ps=] [-u=] [-ws=] [-s=[, ...]]... [...] [...] One XML configuration file or a hostname and port -e, --environment= The name of the lifecycle environment to use -gs, --general-status List the general status of the server -id= Specify the ID of the pipeline or workflow to query -j, --project= The name of the project to use -k, --kill Stop the running hopServer server. This is only allowed when using the hostname/port form of the command. Use the -s and -u options to authenticate -l, --level= The debug level, one of NOTHING, ERROR, MINIMAL, BASIC, DETAILED, DEBUG, ROWLEVEL -n, --server-name= The name of the server to start as defined in the metadata. -p, --password= The server password. Required for administrative operations only, not for starting the server. -ps, --pipeline-status= List the status of the pipeline with this name (also specify the -id option) -s, --system-properties=[,...] A comma separated list of KEY=VALUE pairs -u, --userName= The server user name. Required for administrative operations only, not for starting the server. -ws, --workflow-status= List the status of the workflow with this name (also specify the -id option) The available Hop Server options are: Short Extended Description -h --help This help text -p --password The server password. Required for administrative operations only, not for starting the server. -k --kill Stop the running hop server. -u --userName The server password. Required for administrative operations only, not for starting the server. -s --system-properties Manually set system environment variables. Specify a comma separated list of KEY=VALUE pairs. -e --environment The name of the project lifecycle environment to enable before startup. This is provided for by the 'projects' plugin. -n --server-name Name of the server metadata object to start, has to be used in combination with -e to know which environment to load it from -j --project The name of the project to enable before startup. This is provided for by the 'projects' plugin. -gs --general-status List the general status of the server. -ps --pipeline-status List the status of the pipeline with this name (also specify the -id option) -ws --workflow-status List the status of the workflow with this name (also specify the -id option) -id Specify the ID of the pipeline or workflow to query Hop Server can be started with hostname or ip address and port number as unnamed arguments: Example: hop-server.sh 0.0.0.0 8080 Example: hop-server.bat 192.168.1.221 8081 Example: hop-server.sh -e aura-gcp gs://apachehop/hop-server-config.xml Example: hop-server.bat 127.0.0.1 8080 --kill --userName cluster --password cluster hop-server [ShutdownPort] [-h] [-p ] [-s] [-u ] Example startup commands are: Windows Linux, macOS hop-server.bat 127.0.0.1 8080 hop-server.bat 192.168.1.221 8081 hop-server.sh 127.0.0.1 8080 hop-server.sh 192.168.1.221 8081 Listen to all interfaces on the server: hop-server.sh 0.0.0.0 8080-- Specify the xml configuration file as the only argument: hop-server The syntax of this configuration file is fairly simple: server-8181 localhost 8181 8182 true 0 1440 1440 Example startup commands with a configuration file are: Windows Linux, macOS hop-server.bat C:\\\\hop-server-config.xml Or with a remote configuration file: hop-server.bat http://www.example.com/hop-server-config.xml You can also enable a project lifecyfle environment for the Hop server: hop-server.bat -e graph-aws hop-server.xml hop-server.sh /foo/bar/hop-server-config.xml Or with a remote configuration file: hop-server.sh http://www.example.com/hop-server-config.xml You can also enable a project lifecyfle environment for the Hop server: hop-server.sh -e graph-aws hop-server.xml In the sample above the environment contains configuration files with variables which are loaded. With the environment the server also knows the project home folder. The server configuration file is found in the home folder automatically with the implicit relative path. To protect traffic between a Hop Server and its clients (Hop Run, Hop GUI, a browser, Hop Server command line querying, …​) it’s possible to use encrypt data using a secure socket layer (SSL) connection on top of the regular web traffic with a hyper treading transfer protocol (HTTP). The combination of both is called HTTPS. To run a Hop server using this https:// protocol you can add an sslConfig section in the hop-server-config/hop-server path. The 3 main options are: keyStore : the path to the java keystore file, created with keytool keyStorePassword : the password to the keystore file keyPassword : the key password. If this is the same as the keystore password you can omit this option. The HTTP protocol used is version 1.1 or HTTP/1.1. The type of keystore read is a Java Keystore or type: JKS. Let’s take a look at how we can generate a sample keystore: # Generate a new key # openssl genrsa -des3 -out hop.key # Make a new certificate # openssl req -new -x509 -key hop.key -out hop.crt # Create a PKCS12 keystore and import it into a JKS keystore # The resulting file is: keystore # keytool -keystore keystore -import -alias hop -file hop.crt -trustcacerts openssl req -new -key hop.key -out hop.csr openssl pkcs12 -inkey hop.key -in hop.crt -export -out hop.pkcs12 keytool -importkeystore -srckeystore hop.pkcs12 -srcstoretype PKCS12 -destkeystore keystore Here is an example of the information to include in your server XML: ... /path/to/keystore password keyPassword Y ... Hop Server provides the -l or --level option to set a logging level for workflows and pipelines that run on the server. There are scenarios where you may want to see more detailed logging about the server itself. Since Hop Server runs on a Jetty server, you can increase the Jetty server logging by extending the HOP_OPTIONS variable near the end of hop-server.sh or hop-server.bat. Original: \"$_HOP_JAVA\" ${HOP_OPTIONS} -Djava.library.path=$LIBPATH -classpath \"${CLASSPATH}\" org.apache.hop.www.HopServer \"$@\" EXITCODE=$? With DEBUG logging: \"$_HOP_JAVA\" ${HOP_OPTIONS} -Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.StdErrLog -Dorg.eclipse.jetty.LEVEL=DEBUG -Djava.library.path=$LIBPATH -classpath \"${CLASSPATH}\" org.apache.hop.www.HopServer \"$@\" EXITCODE=$? If applied correctly, your Hop Server starts producing a lot of logging information similar to the lines below: 2022/07/15 14:18:00 - HopServer - Installing timer to purge stale objects after 1440 minutes. 2022-07-15 14:18:00.267:INFO::main: Logging initialized @3732ms to org.eclipse.jetty.util.log.StdErrLog 2022-07-15 14:18:00.276:DBUG:oejuc.ContainerLifeCycle:main: Server@3749c6ac{STOPPED}[9.4.35.v20201120] added {QueuedThreadPool[qtp1195781551]@47462daf{STOPPED,8[{o.e.j.s.ServletContextHandler@1a6df932{/,null,STOPPED},[o.e.j.s.ServletContextHandler@1a6df932{/,null,STOPPED}]}] 2022-07-15 14:18:00.303:DBUG:oejuc.ContainerLifeCycle:main: ContextHandlerCollection@74120029{STOPPED} added {o.e.j.s.ServletContextHandler@1a6df932{/,null,STOPPED},AUTO} 2022-07-15 14:18:00.304:DBUG:oeju.DecoratedObjectFactory:main: Adding Decorator: org.eclipse.jetty.util.DeprecationWarning@48cbb4c5 It’s often very convenient to run a Hop docker container since it has all the required software automatically delivered. For a complete description of the standard Hop docker container see the full reference in the technical documentation. Here is an example of how you would start a \"long-lived\" docker container: docker run \\ -p 8080:8080 \\ -p 8079:8079 \\ -e HOP_SERVER_PORT=8080 \\ -e HOP_SERVER_SHUTDOWNPORT=8079 \\ -e HOP_SERVER_USER=username \\ -e HOP_SERVER_PASS=password \\ apache/hop In a testing setup where Hop Server was started from a terminal, the process can be terminated through CTRL-C. In headless environments, the same hop-server command used to start the server can be used to stop it: A default listener on shutdown port is configured on port number 8079 when not specifying this in the command it will be used. Windows Linux, macOS hop-server.bat 127.0.0.1 8080 -k -u cluster -p cluster hop-server.sh 127.0.0.1 8080 -k -u cluster -p cluster You can also trigger the command on a specific shutdown port Windows Linux, macOS hop-server.bat 127.0.0.1 8080 8079 -k -u cluster -p cluster hop-server.sh 127.0.0.1 8080 8079 -k -u cluster -p cluster Starting a Hop Server on the local machine e.g. on port 8081 will only take 1 or 2 seconds. The console output will look similar to what is listed below: 2020/06/20 18:35:12 - HopServer - Installing timer to purge stale objects after 1440 minutes. 2020/06/20 18:35:12 - HopServer - Created listener for webserver @ address : localhost:8081 You can query the new server with another hop-server command: Windows Linux, macOS hop-server.bat -gs -u cluster -p cluster 127.0.0.1 8080 Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-server.bat]==================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.www.HopServer -gs -u cluster -p cluster localhost 8181 ===[Starting HopServer]========================================================= 2022/12/16 14:02:13 - HopServer - Enabling project 'default' Pipelines: 0 found. Workflows: 0 found. ./hop-server.sh -gs -u cluster -p cluster 127.0.0.1 8080 Expected output: Pipelines: 0 found. Workflows: 0 found. sh hop-server.sh -id 375c9113-b538-4559-8e98-ee02a435fbb9 -u cluster -p cluster -ps service-example -j my-project hop-server.xml 2021/10/01 13:27:04 - HopServer - Enabling project 'my-project' ID: 375c9113-b538-4559-8e98-ee02a435fbb9 Name: service-example Status: Finished Start: 2021/10/01 13:26:45.128 End: 2021/10/01 13:26:45.220 Log date: 2021/10/01 13:27:04.363 Errors: 0 Transforms: 4 found. 1 Name: a,b Copy: 0 Status: Finished Input: 0 Output: 0 Read: 1 Written: 1 Rejected: 0 Updated: 0 Errors: 0 2 ... 3 ... 4 ... Logging: 2021/10/01 13:26:45 - service-example - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2021/10/01 13:26:45 - service-example - Execution started for pipeline [service-example] 2021/10/01 13:26:45 - a,b.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2021/10/01 13:26:45 - c,d.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2021/10/01 13:26:45 - build JSON.0 - Finished processing (I=0, O=1, R=1, W=1, U=0, E=0) 2021/10/01 13:26:45 - OUTPUT.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2021/10/01 13:26:45 - service-example - Pipeline duration : 0.092 seconds [ 0.092\" ] 2021/10/01 13:26:45 - service-example - Execution finished on a local pipeline engine with run configuration 'local' sh hop-server.sh -ws test-workflow -id e24b4549-edf0-4d77-987e-f103b630b4cc -u cluster -p cluster localhost 8181 ID: e24b4549-edf0-4d77-987e-f103b630b4cc Name: test-workflow Status: Finished Log date: 2021/10/01 14:27:45.891 Result: true Errors: 0 Logging: 2021/10/01 14:27:45 - test-workflow - Start of workflow execution 2021/10/01 14:27:46 - test-workflow - Starting action [sample] 2021/10/01 14:27:46 - sample - Using run configuration [remote-8181] 2021/10/01 14:27:46 - sample - Executing this pipeline using the Remote Pipeline Engine with run configuration 'remote-8181' 2021/10/01 14:27:46 - sample - 2021/10/01 14:27:46 - sample - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2021/10/01 14:27:46 - sample - 2021/10/01 14:27:46 - sample - Execution started for pipeline [sample] 2021/10/01 14:27:47 - sample - 2021/10/01 14:27:47 - 1M.0 - Finished processing (I=0, O=0, R=0, W=1000000, U=0, E=0) 2021/10/01 14:27:47 - sample - 2021/10/01 14:27:47 - someString,someInt.0 - Finished processing (I=0, O=0, R=1000000, W=1000000, U=0, E=0) 2021/10/01 14:27:47 - sample - 2021/10/01 14:27:47 - id.0 - Finished processing (I=0, O=0, R=1000000, W=1000000, U=0, E=0) 2021/10/01 14:27:47 - sample - 2021/10/01 14:27:47 - sample - Pipeline duration : 0.977 seconds [ 0.977\" ] 2021/10/01 14:27:47 - sample - 2021/10/01 14:27:47 - sample - Execution finished on a local pipeline engine with run configuration 'local' 2021/10/01 14:27:47 - sample - Execution finished on a remote pipeline engine with run configuration 'remote-8181' 2021/10/01 14:27:48 - test-workflow - Starting action [true] 2021/10/01 14:27:48 - test-workflow - Starting action [false] 2021/10/01 14:27:48 - test-workflow - Starting action [log-something] 2021/10/01 14:27:48 - Subject - Message 2021/10/01 14:27:48 - test-workflow - Starting action [Success] 2021/10/01 14:27:48 - test-workflow - Finished action [Success] (result=[true]) 2021/10/01 14:27:48 - test-workflow - Finished action [log-something] (result=[true]) 2021/10/01 14:27:48 - test-workflow - Finished action [false] (result=[true]) 2021/10/01 14:27:48 - test-workflow - Finished action [true] (result=[true]) 2021/10/01 14:27:48 - test-workflow - Finished action [sample] (result=[true]) 2021/10/01 14:27:48 - test-workflow - Workflow execution finished 2021/10/01 14:27:48 - test-workflow - Workflow duration : 2.715 seconds [ 2.714\" ] To connect to the previously started server, point your browser to http://localhost:8081. You’ll be prompted for your username and password. The default is cluster for both the username and password. The defaults obviously should be changed in any environment that goes beyond a simple local developer setup. on startup, the pipeline and workflow lists shown below will be empty. Run a workflow or pipeline through the Hop Remote pipeline engine run configuration or through the REST api. When pipelines or workflows are executed on the server, you’ll be able to follow the logging output either from the terminal or a log file (e.g. piped from the startup command). For each of the options in the pipeline and workflow dialogs described below, select a pipeline and workflow from the list and select the desired option. The header bar for workflows and pipelines is almost identical (from left to right). Run Stop the running pipeline/workflow Cleanup pipeline Cleanup a pipeline: close remote sockets etc View pipeline/workflow details Remove pipeline/workflow from list A Hop Server can also be accessed directly through a number of web services and in combination with the Web Service and Asynchronous Web Service metadata types.","title":"Hop Server","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/hop-server/index.html","titles":[{"text":"Starting and Stopping Hop Server","hash":"_starting_and_stopping_hop_server","id":1},{"text":"General Use","hash":"_general_use","id":2},{"text":"Start Hop Server with command line parameters","hash":"_start_hop_server_with_command_line_parameters","id":3},{"text":"Start Hop Server with a configuration file","hash":"_start_hop_server_with_a_configuration_file","id":4},{"text":"SSL configuration","hash":"_ssl_configuration","id":5},{"text":"Enable detailed server logging","hash":"_enable_detailed_server_logging","id":6},{"text":"Start Hop Server with docker","hash":"_start_hop_server_with_docker","id":7},{"text":"Stopping Hop Server","hash":"_stopping_hop_server","id":8},{"text":"Verify startup","hash":"_verify_startup","id":9},{"text":"Query a server from the command line","hash":"_query_a_server_from_the_command_line","id":10},{"text":"Query a pipeline from the command line","hash":"_query_a_pipeline_from_the_command_line","id":11},{"text":"Query a workflow from the command line","hash":"_query_a_workflow_from_the_command_line","id":12},{"text":"Connect to the Hop Server UI","hash":"_connect_to_the_hop_server_ui","id":13},{"text":"Hop Server web Services","hash":"_hop_server_web_services","id":14}]},"42":{"id":42,"text":"Hop Server has a rich set of web services that can be used to query and manage the server’s status, or to manage pipeline and workflow execution details. when specified, the id for a workflow or pipeline represents one execution of a workflow or pipeline on the server. name addExport description Upload a resources export file. Add a zipped pipeline or workflow to the body payload as a binary file. endPoint GET hop/addExport parameters type: pipeline or workflow load: - example request http://localhost:8081/hop/addExport/?type=workflow with zipped workflow as payload result A zip file with the export is created on the server’s file system. OK file:///tmp/export_70eb8ef1-9721-4cf5-afa3-940cd0f771d9.zip name addPipeline description Add a pipeline for execution endPoint GET hop/addPipeline Content-Type: text/xml;charset=UTF-8 parameters xml Request body should contain xml containing pipeline_configuration (pipeline and pipeline_execution_configuration wrapped in pipeline_configuration tag). example request http://localhost:8081/hop/addPipeline/xml=Y with XML payload result - name addWorkflow description Add a workflow for execution endPoint GET hop/addWorkflow Content-Type: text/xml;charset=UTF-8 parameters xml Request body should contain xml containing workflow_configuration (pipeline and workflow_execution_configuration wrapped in pipeline_configuration tag). example request http://localhost:8081/hop/addWorkflow/xml=Y with XML payload result - name getPipelineImage description Generate a SVG image of a pipeline endPoint GET hop/pipelineImage parameters name: name of the pipeline to generate the image for id: id of the pipeline to generate the image for example request GET http://localhost:8081/hop/pipelineImage/?name=remote-pipeline&id=c1451bfb-b867-4c76-b123-c29d2b05da17 result an SVG image of the pipeline graph name getPipelineStatus description Get the status of a pipeline endPoint GET hop/pipelineStatus parameters name: name of the pipeline to get the status for id: id of the pipeline to get the status for xml (optional): return the information as xml (default HTML) use &xml=Y json (optional): return the information as json (default HTML) use &json=Y example request GET http://localhost:8081/hop/pipelineStatus/?name=>&id= result an HTML response with the execution status, transform details and canvas preview for this pipeline name status description Get the status of the server parameters none example request GET http://localhost:8081/hop/status/ result an HTML page with an overview of the pipelines and workflows on the server, their execution details and the server’s configuration details. name getWorkflowImage description Generate an SVG image of a workflow endPoint GET hop/workflowImage parameters name: name of the workflow to generate the image for id: id of the workflow to generate the image for example request GET http://localhost:8081/hop/workflowImage/?name=>&id= result an SVG image of the workflow graph name getWorkflowStatus description Get the status of a workflow endPoint GET hop/workflowStatus parameters name: name of the workflow to get the status for id: id of the workflow to get the status for xml (optional): return the information as xml (default HTML) use &xml=Y json (optional): return the information as json (default HTML) use &json=Y example request GET http://localhost:8081/hop/workflowStatus/?name=&id= result an HTML response with the execution status, action details and canvas preview for this workflow name pausePipeline description Pause or continue a pipeline endPoint GET /hop/pausePipeline parameters name: name of the pipeline to pause or restart id: id of the pipeline to pause or restart example request GET http://localhost:8081/hop/pausePipeline/?name=&id= result HTML page with the request status, e.g. Pause pipeline &id=\"> Pipeline [tmp] : pause requested. &id=\">Back to the pipeline status page name prepareExec description Prepare the execution of a pipeline endPoint GET /hop/prepareExec parameters xml: use xml, default Y name: the name of the pipeline to prepare execution for id: the id of the pipeline to prepare execution for example request GET http://localhost:8081/hop/prepareExec/?xml=Y&name=&id= result Example result: OK name registerPipeline description Register a pipeline for execution endPoint GET hop/registerPipeline Content-Type: text/xml;charset=UTF-8 parameters xml Request body should contain xml containing pipeline_configuration (pipeline and pipeline_execution_configuration wrapped in pipeline_configuration tag). example request http://localhost:8081/hop/registerPipeline/xml=Y with XML payload (example): generate_rows Y Normal N 1000 100 - 2022/02/03 13:47:49.645 - 2022/02/03 13:47:49.645 H4sIAAAAAAAA/wMAAAAAAAAAAAA= N Generate rows Delay row Y Delay row result Y Delay row Delay Y 1 none seconds 1 416 96 Generate rows RowGenerator Y 1 none -1 value -1 N String test 5000 FiveSecondsAgo N 10000 now 160 96 result Dummy Y 1 none 720 96 N HOP_AUDIT_FOLDER/Users/hans/config/audit HOP_AUTO_CREATE_CONFIGY HOP_CONFIG_FOLDER/Users/hans/config HOP_DATASETS_FOLDER/Users/hans/test/datasets HOP_ENVIRONMENT_NAMEtest1 HOP_METADATA_FOLDER/Users/hans/test/metadata HOP_PIPELINE_PAN_JVM_EXIT_CODE HOP_PROJECTS/Users/hans/tmp/ HOP_PROJECT_NAMEtest HOP_UNIT_TESTS_FOLDER/Users/hans/test NEO4J_CONNECTIONneo4j PROJECT_HOME/Users/hans/test TESTTEST ftp.nonProxyHostslocal|*.local|169.254/16|*.169.254/16 http.nonProxyHostslocal|*.local|169.254/16|*.169.254/16 jdk.debugrelease native.encodingUTF-8 p1a socksNonProxyHostslocal|*.local|169.254/16|*.169.254/16 Basic N N N Y Y local H4sIAAAAAAAA/+1XbVPbOBD+Kxl/upshzQsUAt/SxBzchSRNTDudpuNRZNlRkSVXkgk5hv9+K0t+ CSl3cDP37coH8Gq1evTs7rPqo6eIvCfSu/j66G3JephlU5QS78Lzjjyl2EjwmCbeBc8ZKww3IoLV GDFFjrxMiofdXEht/TdCaW539/pn77rw0wNzhpTaChmB2edY7jJNolZ/Tc4HKMaDU4TO4j45wese Qv3T9zgyJjyAjVzwuTnhCuIqe4QArJJGxH+gSlOewHpGpKZENUE50w1Smkh7H3uBzGId9AYGmMPK ydZzd7mqbwCmHLhxX5jlJpb39A08aUYY5aQNW9aw+BVsOae6rYnS9lNG61QVnLq/Hr3ldPb5cjL8 wzcfEdJojRSpuc5YnlB+bUiqPY88yiPyEKA1IypDuLrHFkmyEYDPbjbhDp0QxkSpYJeBpbuXnZeS 4lUMVYgcwiUX25ihO2LKoqgY3qAVaS3pOtfE3vR2Pp8tgmUYXN/4y2B4Mw/Hw2AYBl/mcHnvC4T4 eDsL/HA4mYSX1/5kvATzFMzVzg+z2cQfTg/2Xc4WIz+8HvvT4Bp2LuCMWTiZffYXo+HSd1HmC3/p Lz75ofs9Dj/PFuPQeZgwy4+TcDSbTv1RYO/607gA5nncS3+xgHjL0ZV/Mwynwxuz5j0deSniOWK3 kh1Ujvf0VFVaQjiRFPdhR6My5rNl8Btg/Tj5SWlkkLVEArF7JdLY8mKNvLUomMCIme83tOzZOSa9 bnR6fox6+Lwun/cnx/3nJTS3N7GY/6+ht9TQBnHVrKMsKYQIMnQXM7FtM5FY3cGQN8QjidpYcE6w poLbFU7Eyfd2IlG2aaeg4cyaQfLbJhfUVAjIlZZwVCxk6pI2ztN01/olEi0u9AYE91dAFlNGHJJV 5xa2q1XHQFx1jAKuOqbyljbou03Gih2ERS7kPWK5kRFmFXypkc5r9XZxFUozRkKAV6KDywmuCde2 dj2UZYxiZG646nxXcM8jD1BBvUPVapmTPamWOTeUwCzLJXKsPII/lCdZ5Hy0v/TofSAoHVMJDM5d CL/wNWuapNlEYOdbsHGx6pifeyRXnViwqKDkvgu0fE9P77Ik6nbPTjmO7rJ4IJPjaNuFfwkAD1Yd 0w1awnlAxpXIgjID6kMex0Qu6Z9OsnmerokMRRyaxMMR1hwj/TuSdc0MQWVMD0KsF0NfwjjbXAOd ErJht1aZnxdNO2JQSkQ1R4EKBCQrcWgesgNHU6F7JH9CkhYK5GrQ5rYYk6BPRGFJM8diIYkv52NB UqEL9smD0ZgQJFHkEpvQJtkwcktDqJFMiA5tHizYetH+3lu0WhRmgrGQ7nECVRNi9wKy+li8crKw fDS5t0MzArQW2v0jG49VK/cOqThyPQJFXvS5c5WWgzcyNylgwx8xIdEa4btQ2Yp6b2rQgLet5qy9 pk1DqwElYZJTWJqgIm9SbBXQW/u7HTEJ0+bjUG3ENiwPraxaZAKSYKaEsyRIb4C8lID+41oIinpE hYIZ/IX1lQVWZmqfJyBHtXaQ/lapCqpVeLJda0v1pgUwWkqDfCIZ2ZUWNE3l3bIc24wUarqnsY/V S3pvkq4LuqR7JJ+dnJ2491pjxhfRvMYAcNdBuRYp3BOX1yxnZa6god1gLk53nEmRG0mtn8KvHuPr qH8cRYNujAupfXZAfb5XwHwI6uQsIG+7gJbvypqTCb2H545Sow3Bd8YBwD33ecE8xD9yquiBB3S6 0kPGRuZ9Hxv1J+oA26iBICa6QubI2fevKH7O4VzAdNlZp7Vgukzg6eDsBSBVBCgCBaeflMrEn2e5 AXEuBKsVvjHyS+8yWBO2qcBU8ERE64M5nyFAVH8iteO4vT/lm3OxejlUb4m3TspKXw4V4KUWbrZp /2/6tMT0uj4tvas+fZ0s/jvY/x3qb/Z91Y5ITDltJAAzoXJZvgWa/3U9GB/Fc2tcBXByoggUB9JC ljWkYK7zO7toJAlk3Xw8/QVlC+SCFRAAAA== The metastore_json is base64 encoded GZip content result - name registerWorkflow description Register a workflow on the server endPoint GET /hop/registerWorkflow Content-Type: text/xml;charset=UTF-8 parameters xml: example request - result - name removePipeline description Remove a pipeline from the server endPoint GET /hop/removePipeline parameters name: the name of the pipeline to remove id: the id of the pipeline to remove example request GET http://localhost:8081/hop/removePipeline/?name=&id= result Example result: The pipeline was removed The pipeline with name [] and hopServer object id was removed from Hop Server. Back to the status page name removeWorkflow description Remove a workflow from the server endPoint GET /hop/removeWorkflow parameters name: the name of the workflow to remove id: the id of the workflow to remove example request GET http://localhost:8081/hop/removeWorkflow/?name=&id= result Example result: The workflow was removed The workflow with name [] and hopServer object id was removed from Hop Server. Back to the status page name sniffTransform description Sniff test a pipeline transform endPoint GET /hop/sniffTransform parameters xml: use XML (default: Y) pipeline: name of the pipeline to sniff id: id of the pipeline to sniff transform: name of the transform to sniff type: (input/output) sniff input or output lines: number of lines to wait for copynr: when using multiple copies you can specify the copynr following parameters are required xml id or pipeline transform example request GET http://localhost:8081/hop/sniffTransform/?xml=Y&pipeline=&id=&transform=&type=output&lines=100 result Example result (empty): name startExec description Start the execution of a pipeline endPoint GET /hop/startExec parameters name: the name of the pipeline to start example request GET http://localhost:8081/hop/startExec?name= result Example result: Start of pipeline \"> Pipeline [] was started. &id=8bea27db-de97-4bd0-a210-d9bba3aacac2\">Back to the status page name startPipeline description Prepare and start the execution of a pipeline endPoint GET /hop/startPipeline parameters name: the name of the pipeline to start example request GET http://localhost:8081/hop/startPipeline?name= result Example result: Start of pipeline \"> Pipeline [] was started. &id=8bea27db-de97-4bd0-a210-d9bba3aacac2\">Back to the status page name startWorkflow description Prepare and start the execution of a workflow endPoint GET /hop/startPipeline parameters name: the name of the workflow to start example request GET http://localhost:8081/hop/startWorkflow?name= result Example result: Start of workflow \"> Workflow [] was started. &id=8bea27db-de97-4bd0-a210-d9bba3aacac2\">Back to the status page name stopPipeline description Stop a pipeline endPoint GET /hop/stopPipeline parameters name: the name of the pipeline to stop id: the id of the pipeline to stop example request GET http://localhost:8081/hop/stopPipeline?name=&id= result Example Result: Stop pipeline >\"> Pipeline [] stop requested. &id=\">Back to the pipeline status page name stopWorkflow description Stop a workflow endPoint GET /hop/stopWorkflow parameters name: the name of the workflow to stop id: the id of the workflow to stop example request GET http://localhost:8081/hop/stopWorkflow?name=&id= result Example Result: Stop workflow >\"> Workflow [] stop requested. &id=\">Back to the pipeline status page","title":"Hop Server Web Services Overview","component":"manual","version":"2.7.0","name":"rest-api","url":"/manual/latest/hop-server/rest-api.html","titles":[{"text":"addExport","hash":"_addexport","id":1},{"text":"addPipeline","hash":"_addpipeline","id":2},{"text":"addWorkflow","hash":"_addworkflow","id":3},{"text":"getPipelineImage","hash":"_getpipelineimage","id":4},{"text":"getPipelineStatus","hash":"_getpipelinestatus","id":5},{"text":"Status","hash":"_status","id":6},{"text":"getWorkflowImage","hash":"_getworkflowimage","id":7},{"text":"getWorkflowStatus","hash":"_getworkflowstatus","id":8},{"text":"pausePipeline","hash":"_pausepipeline","id":9},{"text":"Prepare Execution","hash":"_prepare_execution","id":10},{"text":"Register Pipeline","hash":"_register_pipeline","id":11},{"text":"Register Workflow","hash":"_register_workflow","id":12},{"text":"Remove Pipeline","hash":"_remove_pipeline","id":13},{"text":"Remove Workflow","hash":"_remove_workflow","id":14},{"text":"Sniff Transform","hash":"_sniff_transform","id":15},{"text":"Start Pipeline Execution","hash":"_start_pipeline_execution","id":16},{"text":"Start Pipeline","hash":"_start_pipeline","id":17},{"text":"Start Workflow","hash":"_start_workflow","id":18},{"text":"Stop Pipeline","hash":"_stop_pipeline","id":19},{"text":"Stop Workflow","hash":"_stop_workflow","id":20}]},"43":{"id":43,"text":"Hop has a simple way of exposing data through a servlet. For more information on configuring the Hop server check the Hop Server docs Option Description Name The name of the web service. This is the name that is passed into the webService URL. Enabled Enables or disabled the web service Filename on the server This is the filename on the server. Make sure that the pipeline you want to execute is available on the server. Output transform The name of the transform from which this service will take the output row(s). Output field The output field from which this service will take data from, convert it to a String and output it Content type The content type which will get reported by the webService servlet List status on server Enable this option if you want the executions of the web service pipeline to be listed in the status of the server. Request body content variable This is the name of the variable which at runtime will contain the content of the request body content. This is useful when doing a POST against the webservice. Your Hop Server needs to know about the metadata you defined. As stated above you need to make sure the server has access to the pipeline(s) you want to execute as well as the server metadata. The best way to do this is to set the following option in your XML configuration file: Linux /path/to/your/metadata Windows C:\\\\path\\\\to\\\\your\\\\metadata A simple example would be: 8181 localhost 8181 /home/hop/project/services/metadata http:///hop/webService Parameter Description service The name of the service. This corresponds to the Web Service metadata object. runConfig The name of the pipeline run configuration. Please note that returning values is only supported on the \"Local\" pipeline engine. Any parameter name Any parameter can be set simply by passing the value through the request URL Any variable name Any variable can be set simply by passing the value through the request URL Beside the default GET you can also do a POST against the web service and pass in a request body. The content of this body is then picked up if you set the request body content variable. This variable will contain the body content every time the POST request triggers the execution of the underlying pipeline. The following executes Hop Web Service test as seen in the screenshot above. It passes a parameter B and a variable A and outputs JSON produced by a JSON Output transform. http://localhost:8181/hop/webService/?service=test&A=valueA&B=valueB The web service pipeline looks like this:","title":"Web Service","component":"manual","version":"2.7.0","name":"web-service","url":"/manual/latest/hop-server/web-service.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Web Service Metadata","hash":"_web_service_metadata","id":2},{"text":"Screenshot","hash":"_screenshot","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Hop Server configuration","hash":"_hop_server_configuration","id":5},{"text":"Using the service","hash":"_using_the_service","id":6},{"text":"Base request (ATTENTION: Use the S word capitalized)","hash":"_base_request_attention_use_the_s_word_capitalized","id":7},{"text":"Request parameters","hash":"_request_parameters","id":8},{"text":"POST","hash":"_post","id":9},{"text":"Request example","hash":"_request_example","id":10}]},"44":{"id":44,"text":"Hop Encrypt is a command line tool to encrypt (obfuscate) passwords for use in XML, password or Hop metadata files. hop-encrypt usage: encr Options: -hop: generate an obfuscated or encrypted password -server : generate an obfuscated password to include in the hop-server password file 'pwd/hop.pwd' This command line tool obfuscates or encrypts a plain text password for use in XML, password or metadata files. Make sure to also copy the password encryption prefix to indicate the obfuscated nature of the password. Hop will then be able to make the distinction between regular plain text passwords and obfuscated ones. Option Description The password to obfuscate -hop generate an obfuscated or encrypted password -server generate an obfuscated password to include in the hop-server password file 'pwd/hop.pwd' Encrypt (obfuscate) the password abcd for use in Hop workflows, pipelines and other metadata files. Windows Linux, macOS hop-encrypt.bat -hop abcd Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-encrypt.bat]==================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx64m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx64m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI org.apache.hop.core.encryption.Encr -hop abcd ===[Starting HopEncrypt]========================================================= Encrypted 2be98afc86aa7f2e4cb79ce10df90acde ./hop-encrypt.sh -hop abcd Expected output: Encrypted 2be98afc86aa7f2e4cb79ce10df90acde Encrypt (obfuscate) the password 'abcd' for use in Hop server. Windows Linux, macOS hop-encrypt.bat -server abcd Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-encrypt.bat]==================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx64m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx64m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=GUI org.apache.hop.core.encryption.Encr -server abcd ===[Starting HopEncrypt]========================================================= OBF:1s3g1s3i1s3k1s3m ./hop-encrypt.sh -server abcd Expected output: OBF:1s3g1s3i1s3k1s3m","title":"Hop Encrypt","component":"manual","version":"2.7.0","name":"hop-encrypt","url":"/manual/latest/hop-tools/hop-encrypt.html","titles":[{"text":"Usage","hash":"_usage","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Examples","hash":"_examples","id":3},{"text":"Hop Example","hash":"_hop_example","id":4},{"text":"Hop Server Example","hash":"_hop_server_example","id":5}]},"45":{"id":45,"text":"Hop GUI is the visual integrated development environment (IDE) for Apache Hop. Hop GUI doesn’t take any parameters or arguments. To start, just run hop-gui.bat on Window or hop-run.sh on Linux and Mac OS.","title":"","component":"manual","version":"2.7.0","name":"hop-gui","url":"/manual/latest/hop-tools/hop-gui.html","titles":[{"text":"Hop GUI","hash":"_hop_gui","id":1},{"text":"Usage","hash":"_usage","id":2}]},"46":{"id":46,"text":"Hop Import is a command line tool to import and convert third party metadata to an Apache Hop format. See also these plugins: Kettle Import Usage help can be obtained by running hop-import with the -h option, even when other options are specified: Usage Usage: [-efhlp] [-c=] [-i=] [-j=] [-k=] [-o=] [-s=] [-t=] -c, --target-config-file= The target config file to write variable to -e, --skip-existing Skip existing files in the target folders -f, --skip-folders Skip import of sub-folders -h, --help Displays this help message and quits -i, --input= The input folder to read from -j, --jdbc-properties= The jdbc.properties file to read from -k, --kettle-properties= The kettle.properties file to read from -l, --list-plugins List the available import plugins -o, --output= The output folder to write to -p, --skip-hidden Skip import of hidden files and folders -s, --shared-xml= The shared.xml file to read from -t, --type= The type of import plugin to use (e.g. kettle) -v, --version Print version information and exit Import a set of Kettle files and folders into a project stored on Amazon AWS S3: Windows Linux, macOS hop-import.bat \\ --type kettle \\ --input /projects/kettle/inventory \\ --output s3:///apache-hop/s3project \\ --target-config-file imported-env-conf.json \\ --kettle-properties /home/etl/.kettle/kettle.properties \\ --shared-xml /home/matt/.kettle/shared.xml sh hop-import.sh \\ --type kettle \\ --input /projects/kettle/inventory \\ --output s3:///apache-hop/s3project \\ --target-config-file imported-env-conf.json \\ --kettle-properties /home/etl/.kettle/kettle.properties \\ --shared-xml /home/matt/.kettle/shared.xml The logging will show what is going on and will print a report at the end: 2021/06/22 16:39:29 - HopImport - Import is skipping existing target files 2021/06/22 16:39:29 - HopImport - Import is skipping hidden files and folders 2021/06/22 16:39:29 - HopImport - Import is not skipping sub-folders 2021/06/22 16:39:29 - HopImport - Finding files to import 2021/06/22 16:39:29 - HopImport - We found 84 kettle files. 2021/06/22 16:39:29 - HopImport - Importing files 2021/06/22 16:39:29 - HopImport - - Saving file s3:///apache-hop/s3project/load-nodes/sample-model.json 2021/06/22 16:39:29 - HopImport - - Saving file s3:///apache-hop/s3project/scaleable-file-processing/input/file02.csv 2021/06/22 16:39:29 - HopImport - - Saving file s3:///apache-hop/s3project/graph-output/READ.me 2021/06/22 16:39:29 - HopImport - - Saving file s3:///apache-hop/s3project/scaleable-file-processing/PDI/Check slave server.hpl 2021/06/22 16:39:29 - HopImport - - Saving file s3:///apache-hop/s3project/remove-everything/remove all in database.hwf ... 2021/06/22 16:39:37 - HopImport - - Saving file s3:///apache-hop/s3project/scaleable-file-processing/input/file01.csv 2021/06/22 16:39:37 - HopImport - Importing connections 2021/06/22 16:39:41 - HopImport - Importing variables Creating new default Hop configuration file: s3:///apache-hop/s3project/imported-env-conf.json 2021/06/22 16:39:43 - HopImport - Imported: 2021/06/22 16:39:43 - HopImport - 10 jobs 2021/06/22 16:39:43 - HopImport - 31 transformations 2021/06/22 16:39:43 - HopImport - 43 other files 2021/06/22 16:39:43 - HopImport - 86 variables were imported into environment config file s3:///apache-hop/s3project/imported-env-conf.json 2021/06/22 16:39:43 - HopImport - You can use this as a configuration file in an environment. 2021/06/22 16:39:43 - HopImport - 3 database connections where saved in metadata folder s3:///apache-hop/s3project/metadata 2021/06/22 16:39:43 - HopImport - 2021/06/22 16:39:43 - HopImport - Connections with the same name and different configurations have only been saved once. 2021/06/22 16:39:43 - HopImport - Check the following file for a list of connections that might need extra attention: s3:///apache-hop/s3project/connections.csv","title":"Hop Import","component":"manual","version":"2.7.0","name":"hop-import","url":"/manual/latest/hop-tools/hop-import.html","titles":[{"text":"Usage","hash":"_usage","id":1},{"text":"Examples","hash":"_examples","id":2}]},"47":{"id":47,"text":"Hop Search is a command line tool to search for metadata in Hop or a Hop project. Usage == Usage Usage: [-hilx] [-e=] [-j=] The string to search for -e, --environment= The name of the lifecycle environment to use -h, --help Displays this help message and quits -i, --case-insensitive Perform a case insensitive search -j, --project= The name of the project to use -l, --print-locations Print which locations are being looked at -v, --version Print version information and exit -x, --regular-expression The specified search string is a regular expression == Options Option Description The string to search for -e The name of the lifecycle environment to use -h Displays this help message and quits -i Perform a case insensitive search -j The name of the project to use -l Print which locations are being looked at -v Print version information and exit -x The specified search string is a regular expression Example command: search for the string 'json' (case insensitive) in the 'hop-samples' project. Windows Linux, macOS hop-search.bat -j samples -i switch-case Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-search.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Search -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Search -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig -j samples -i switch-case ===[Starting HopConfig]========================================================= Enabling project 'samples' Searching in project : samples Searching for [switch-case] Case sensitive? false Regular expression? false Searching in location : Project samples ----------------------------------------------------------------------------------- file:///C://hop/config/projects/samples/beam/pipelines/switch-case.hpl : null(switch-case) : matching property value: switch-case file:///C://hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : matching property value: switch-case file:///C://hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : pipeline transform property : filePrefix file:///C://hop/config/projects/samples/transforms/switch-case-basic.hpl : null(switch-case-basic) : matching property value: switch-case-basic ./hop-search.sh -j samples -i switch-case Expected output: Enabling project 'samples' Searching in project : samples Searching for [switch-case] Case sensitive? false Regular expression? false Searching in location : Project samples ----------------------------------------------------------------------------------- file:///hop/config/projects/samples/transforms/switch-case-basic.hpl : null(switch-case-basic) : matching property value: switch-case-basic file:///hop/config/projects/samples/beam/pipelines/switch-case.hpl : null(switch-case) : matching property value: switch-case file:///hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : matching property value: switch-case file:///hop/config/projects/samples/beam/pipelines/switch-case.hpl : switch-case(switch-case) : pipeline transform property : filePrefix","title":"Hop Search","component":"manual","version":"2.7.0","name":"hop-search","url":"/manual/latest/hop-tools/hop-search.html","titles":[{"text":"Examples","hash":"_examples","id":1}]},"48":{"id":48,"text":"Hop Translator is a gui tool that allows non-technical users to translate Hop in their native language. check the Translation Contribution Guide if you want to find out more about translating Hop. The example below starts the Hop Translator tool with the provided translator.xml file as the first parameter. The second parameter is the path to your local version of the Apache Hop source code. Windows Linux, macOS hop-translator.bat translator.xml Expected output: the Hop Translator tool starts. ./hop-translator.sh translator.xml Expected output: the Hop Translator tool starts.","title":"","component":"manual","version":"2.7.0","name":"hop-translator","url":"/manual/latest/hop-tools/hop-translator.html","titles":[{"text":"Hop Translator - Translate the Apache Hop GUI and CLI tools","hash":"_hop_translator_translate_the_apache_hop_gui_and_cli_tools","id":1}]},"49":{"id":49,"text":"Even though Hop developers will spend the majority of their time in Hop Gui, Hop has a lot more tools to offer. This page provides an overview of the tools that are available in the platform. Hop Conf Hop Encrypt Hop Gui Hop Run Hop Search Hop Import Hop Server Hop Translator","title":"","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/hop-tools/index.html","titles":[{"text":"Hop Tools","hash":"_hop_tools","id":1}]},"50":{"id":50,"text":"Apache Hop is a very flexible tool for developing data flows (so-called pipelines) with the help of an easy-to-use UI, with which data can be extracted from different sources, consolidated and loaded into a new system (ETL). The tool is not only excellently suited for these classic data warehouse tasks or for database migrations. In the context of low-code software development, Apache Hop can also be used to provide fast calculations and data queries as a web service without much programming effort and to link these calculations to your own web services. Hundreds of lines of source code are eliminated, as the functionality can be conveniently implemented as a pipeline with its dozens of transforms (processing steps) in the Apache HOP UI and integrated as a web service. The following illustration shows an example of where Apache HOP can be integrated with web services in a full-stack architecture (multi-container application). In order to call the created Hop web services from a Java application, for example, the Apache Hop server on which the pipelines are executed is required. The Hop server provides a web interface (servlet) to return the results of the execution. It can be run on a dedicated server or inside a Docker container. The latter option offers the advantage of scaling quickly when needed. This guide covers the steps to create an example web service and subsequent deployment in a Docker container. The task of the fictitious example web service in this tutorial is to provide data in real time for a project dashboard (specifically: the number of active/inactive teams per team type), so that after processing in the API layer, the data can be displayed in the frontend as a stacked bar chart. The data is available in normalised form in the database and must first be prepared by the web service. After creating the project and setting up the database connection in HOP, the following pipeline is created (file name: countTeams.hpl): The pipeline expects a project ID as an input parameter in order to be able to read out the teams belonging to the project from the database. The data is grouped, then the number is calculated and finally denormalised by team type. The result of the execution should be returned in JSON format. To make the pipeline available as a web service, metadata must be created for it and later made known to the Hop server. The use of metadata has the advantage that the calling application only needs to know the web service name, the details of the underlying implementation (especially the location of the pipeline) remain hidden. The following metadata are created for the pipeline under the Web Service tab: The Name field contains the name of the web service under which the calling application will call the service. The Filename field contains the assignment to the storage location of the pipeline. The Output transform field contains the name of the transform that provides the result in the output field to be specified. Content type specifies the output format of the return stream. In addition, you can further specify in the metadata whether the web service should be disabled (Enabled?) and whether the status of the execution should be listed in the statistics of the web server UI. In the pipeline listed above, the content of the output field outputValue of the Transform JSON Output is to be returned as the result: After saving the metadata, everything is ready to run the web service in a Docker container. In Apache Hop it is possible to set up runtime environments for different environments (e.g. Development Local, Docker Single, Docker Multi-App) via so-called configurations and to pass them to the pipeline without having to adapt or duplicate the pipeline itself (e.g. one pipeline for each environment). Connection details (e.g. DB server URL) for database connections, etc. can be stored as variables in configuration files. For example, to set up a new database connection whose connection details may differ depending on the environment, enter the name of the environment variable (e.g. ${DB_HOST}) instead of a concrete server URL. As soon as you select an environment and the variable is contained in its configuration file, the variable in the DB configuration is replaced by the value from the environment configuration. This functionality is very helpful, for example, to test the pipeline against different environments before you start the deployment on the Hop Server. This functionality is also essential for multi-container applications (see above: full-stack architecture), whose service results from the interaction of different and externally isolated containers. A separate environment configuration is therefore necessary if you want to start your application with Docker Compose in addition to your development environment (in this example, the ${DB_HOST} variable would have the service name of the DB Container instead of the IP address of the DB Server). To start the Hop Server inside a Docker container, you have the following options for building the container: Using the image provided by Apache Hop Use the Apache Hop image as a starting image and add application-specific customisations in the form of a new image (e.g. include the Hop project with its workflows and pipelines as well as third-party APIs). Creation of a complete custom image (possibly based on the DOCKERFILES provided in the Apache Hop Github repository). Depending on the deployment strategy, it may be advisable to include the project and its source code in the image, e.g. if only containers may be deployed in a production environment. The first option is sufficient for this guide, as all adjustments can be transferred to the Docker container via environment variables for the example. In addition, changes to pipelines should be made visible immediately without having to rebuild the image first. For this purpose, it is necessary to mount the location of the project (incl. subdirectories for JDBC drivers and the metadata configuration) into the Docker container. First download the Docker image: docker pull apache/hop: Example: docker pull apache/hop:1.1.0-SNAPSHOT To execute the containers afterwards, the following environment variables or parameters must be set as a minimum: Variable/Docker Parameter Example value Description HOP_SERVER_USER admin Admin user to log in to the UI of the Hop Server HOP_SERVER_PASS admin Password for logging into the UI of the Hop Server HOP_SERVER_PORT 8182 Port of the server (internal) HOP_SERVER_HOSTNAME 0.0.0.0 Docker internal IP address of the host HOP_PROJECT_NAME Proj1 When the container is created, a project with all necessary configurations is initially created, therefore the project to be specified serves as a placeholder. HOP_PROJECT_FOLDER /files Root folder containing the project HOP_ENVIRONMENT_NAME Local Name of the environment with which the container is to be started (e.g. local, prod) - see step 3 HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS /files/config/localTestConfig.json Comma separated list of all environment files (see step 3) HOP_SERVER_METADATA_FOLDER /files/metadata Directory containing the metadata information (in this case, the metadata associated with the web service). HOP_SHARED_JDBC_FOLDERS /files/jdbc Directory containing all required JDBC drivers (e.g. for MySQL, Oracle) that are not included in the standard delivery. This is a comma separated list defaulting to lib/jdbc p 8182:8182 Mapping of the internal Docker port to the port of the Docker host V /my/path/to/location:/files Mount path and mapping to a Docker internal path Name Name of the Docker container In the technical documentation for Apache HOP running as Docker Container (pls see docs), further parameters are listed (e.g. when using SSL), which have been omitted here for simplification. Example call: docker run -it --rm \\ --env HOP_SERVER_USER=admin \\ --env HOP_SERVER_PASS=admin \\ --env HOP_SERVER_PORT=8182 \\ --env HOP_SERVER_HOSTNAME=0.0.0.0 \\ --env HOP_PROJECT_NAME=proj1 \\ --env HOP_PROJECT_FOLDER=/files \\ --env HOP_ENVIRONMENT_NAME=Local \\ --env HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS=/files/config/localTestConfig.json \\ --env HOP_SERVER_METADATA_FOLDER=/files/metadata \\ --env HOP_SHARED_JDBC_FOLDERS=/files/jdbc \\ -p 8182:8182 \\ -v /my/path/to/location:/files \\ --name test-hop-container \\ apache/hop:1.1.0-SNAPSHOT If the container has been started successfully, the web server GUI can be opened via http://:/hop/status/ which gives an overview of the pipelines and workflows called up after logging in (using the administrator IDs passed). To call a web service with the name , the following request is necessary: +http://:/hop/webService?service=&Param1=Value&Param2=Value2…​. The WebService countTeams from this tutorial expects the parameter PARAM_PROJECT_ID. The call is made as follows: +http://localhost:8182/hop/webService/?service=countTeams&PARAM_PROJECT_ID=63 As mentioned at the beginning of the tutorial, the API layer above can now process the JSON output and pass it to the front end, which then uses the processed data to create the chart. Apache Hop Pipelines as web services are easy to set up via meta-data configurations and can be easily deployed via Docker. They are suitable everywhere to synchronously return results quickly that do not require a long processing time. As of version 1.1, Apache Hop also supports the use of workflows as web services. Here, the call is asynchronous, i.e. when the service is called, a unique ID of the workflow to be executed is returned immediately and the execution starts in the background on the HOP server (for details check the docs).","title":"Web Services in Apache Hop","component":"manual","version":"2.7.0","name":"apache-hop-web-services-docker","url":"/manual/latest/how-to-guides/apache-hop-web-services-docker.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Running Pipelines as a Web services in a Docker container","hash":"_running_pipelines_as_a_web_services_in_a_docker_container","id":2},{"text":"Step 0: Requirements for the web service","hash":"_step_0_requirements_for_the_web_service","id":3},{"text":"Step 1: Creation of the pipeline","hash":"_step_1_creation_of_the_pipeline","id":4},{"text":"Step 2: Meta Data Configuration","hash":"_step_2_meta_data_configuration","id":5},{"text":"Step 3: Set up configurations for different runtime environments","hash":"_step_3_set_up_configurations_for_different_runtime_environments","id":6},{"text":"Step 4: Set up and start Docker Container","hash":"_step_4_set_up_and_start_docker_container","id":7},{"text":"Step 5: Call Web Service","hash":"_step_5_call_web_service","id":8},{"text":"Conclusion","hash":"_conclusion","id":9}]},"51":{"id":51,"text":"This page contains a collection of how-to guides to perform a variety of tasks, configurations etc with Apache Hop. Joins and lookups in Apache Hop Loops in Apache Hop Run Pipelines and Workflows from Apache Airflow Using Apache Hop web services in Docker","title":"","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/how-to-guides/index.html","titles":[{"text":"How-to guides","hash":"HopServer","id":1}]},"52":{"id":52,"text":"Hop offers a lot of options to enrich and combine data, among other things through joins and lookups. This guide explains the differences between the various joins and lookups, and will help you to choose the right transform for your pipelines. Joins are a way to merge data from two or more different streams in your pipeline. Joins typically require you to select a set of fields (the join keys) to join the streams on. The data in all streams that are involved in the join needs to be sorted on the join keys. Depending on the transform you use and the configuration options you specify, joins can change the amount of data you’re processing in both way. For example, an inner Merge join with a limited number of matches between the keys in both streams can significantly reduce the number of rows in your stream. A Join Rows (Cartesian Product) on the other hand can result in an explosion of the number of rows you started the pipeline with. Multiple streams in your pipeline that have the exact same layout (identical fields, identical data types, identical order) can be joined or merged without the need for a transform. Just create a hop from the last transform in two or more substreams to a target transform. Hop Gui will complain if there are differences in the layout of the streams you’re combining. The available join transforms are: Transform When to use Join Rows (Cartesian Product) produce combinations (Cartesian product) of all rows in the input streams situations where you want to create a combination of all data in one stream with all data in another example: you want to create a copy of a data set for all members in a team, a list of available months or similar. WARN: Use with care on large volumes of data. The combination of all data in both streams easily become huge. Merge Join classic merge join between data sets with data coming from two different input transforms You want to combine data from two different streams based on a matching key in both streams, and want to continue working with (a selection of) the combined data from both streams. example: a subset of your data is available in files, another subset is available in a database table. Both the file have a matching key (e.g an ID) that you can use to combine both sets. Merge Rows (diff) compares and merges data within two rows of data, adding a field indicator for each row You have two sets of data with the same layout. You want to compare both data sets and identify which lines in one set a new, identical, changed or deleted compared to the other data set. example*: you receive a daily file that needs to be processed. Compare today’s file with yesterday’s file, so you can ignore the identical data and only process the changes. Multiway merge join joins input data from multiple streams Join data from multiple (typically more than two) streams, similar to merge join. This transform provides a shortcut to what you otherwise would do by chaining multiple merge joins after each other. example: you receive data from files, a database query and a REST api. All three streams have one or more corresponding keys to join data from the various streams. XML Join adds xml tags from one stream into a leading XML structure from a second stream You need to build XML files from various data sources and with multiple nested elements. This transform is atypical in the sense that you’re performing joins to build output instead of the other join transforms that combine incoming data for further processing. example: you’re building complex XML output files. Database join allows you to run a query against a database using data obtained from previous transforms The database join executes a (parameterized) SQL query for every row you execute. While this transform gives you unparallelled flexibility, it performs a database query for every single row, so it is a potential performance bottleneck. example: You need to fetch information that can’t be retrieved from a single table and requires a query that fetches data from multiple tables. Lookups are a way to let you enrich your pipeline’s stream with additional fields from external sources. The transforms allow you to choose which additional fields will be retrieved from the lookup source. Contrary to joins, lookups work on the current pipeline stream and your never change the number of rows you’re processing. There are a number of transforms in the Lookup category that are considered self-explanatory in a lookup context and won’t be included here. These transforms are: Call DB Procedure Check if file is locked Column exists Dynamic SQL row File exists Fuzzy match Get server status HTTP client HTTP post REST client Table exists Web services lookup Transform When to use Combination lookup/update allows you to store information in a junk-dimension table. The transform can possibly also be used to maintain Kimball pure Type 1 dimensions. in a lookup context, this transform gets data from a type 1 slowly changing dimension. Dimension lookup/update allows you to implement Ralph Kimball’s slowly changing dimension for both types: Type I (update) and Type II (insert) together with some additional functions. This transform can be used to populate a dimension table or to look up values in a slowly changing dimension without making any changes. In a lookup context, this transform lets you perform lookups in a type 2 slowly changing dimension. In a lookup context, you typically use the natural keys and date or timestamp for your data to retrieve the surrogate key for the correct version of the data in a dimension. Uncheck the Update the dimension checkbox to use the transform as a lookup and to prevent it from updating the dimension table. example: you want to retrieve the correct surrogate key for a dimension record in a slowly changing customer table in your data warehouse. Database lookup allows you to look up values in a database table. Lookup values are added as new fields onto the stream. You need to retrieve additional information from a single database table, based on fields in your pipeline stream. example: you’re processing data that contains a customer’s id. You also need the customer’s name and location, which is available in a database table. Stream lookup allows you to look up data using information coming from other transforms in the pipeline. The data coming from the Source transform is first read into memory and is then used to look up data from the main stream. use the Stream lookup when you need to perform a lot of lookups on a fairly limited set of data. The performance benefit of performing lookups from memory comes with the limitation of the available memory. The stream lookup accepts data from any pipeline stream, but since the data needs to be loaded into memory before the pipeline starts, consider your available memory resources the memory footprint for your Stream lookup’s input before adding it to your pipeline. In the default Hop configuration with 2 GB of memory, a couple of megabytes is fine, a 20GB CSV file as Stream lookup input isn’t. example you need to process a large dataset that contains product prices in a number of different currencies. You received a list of historical conversion rates for the last month in a csv file. This lookup file is about 5000 lines, loading it into memory an picking up the right conversion rate with a Stream lookup transform allows you to perform lightning fast lookups. The Combination lookup/update, Dimension lookup/update and Database lookup allow you to cache data. Cached data is stored in memory to speed up the lookup process. The dialog options vary slightly, but the caching options offered by these transforms are: enable cache? (boolean): switches caching on or off cache size: the size (number of rows) to cache in memory pre-load cache: load data in the cache before the pipeline starts load all data from table (database lookup only): load all the table’s data to memory before the pipeline starts. Consider your available memory resources when configuring caching. Caching can significantly speed up the lookup process, but memory is a finite resource.","title":"","component":"manual","version":"2.7.0","name":"joins-lookups","url":"/manual/latest/how-to-guides/joins-lookups.html","titles":[{"text":"Joins and lookups","hash":"JoinsLookups","id":1},{"text":"Joins","hash":"_joins","id":2},{"text":"Lookups","hash":"_lookups","id":3},{"text":"Lookup Caching","hash":"_lookup_caching","id":4}]},"53":{"id":53,"text":"After your project has gone through the initial development and testing, knowing what is going on in runtime becomes important. The Apache Hop Pipeline Log allows the logging of the activity of a pipeline with another pipeline. A Pipeline Log streams logging information from a running pipeline to another pipeline. The Pipeline Log will be created in JSON format. Hop will pass the logging information for each pipeline you run to the pipeline(s) you specify as pipeline log metadata objects. In this post, we’ll look at an example of how to configure and use the pipeline log metadata to write pipeline logging information to a relational database. The examples here are provided we use variables to separate code and configuration according to best practices in your Apache Hop projects. To create a Pipeline Log click on the New → Pipeline Log option or click on the Metadata → Pipeline Log option. The system displays the New Pipeline Log view with the following fields to be configured. The Pipeline Log can be configured as in the following example: Name: the name of the metadata object (pipelines-logging). Enabled: (checked). Pipeline executed to capture logging: select or create the pipeline to process the logging information for this Pipeline Log (${PROJECT_HOME}/hop/logging/pipelines-logging.hpl). Next, select or create the pipeline to be used for logging the activity. We’ll create a pipeline soon, important to note is that you can use all the functionality in Apache Hop pipeline to work with the logging data. The only prerequisite is that the first transform in this pipeline needs to start with a pipeline logging transform. Execute at the start of the pipeline?: (checked). Execute at the end of the pipeline?: (checked). Execute periodically during execution?: (unchecked) Finally, save the Pipeline Log configuration. pipeline logging will apply to any pipeline you run in the current project. That may not be necessary or even not desired. If you want to only work with logging information for a selected number of pipelines, you can add a selection of pipelines to the table below the configuration options (\"Capture output of the following pipelines\"). The screenshot below shows the single \"generate-fake-books.hpl\" pipeline that logging will be captured for in the default Apache Hop samples project. To create the pipeline you can go to the perspective area or by clicking on the New button in the New Pipeline Log dialog. Then, choose a folder and a name for the pipeline. A new pipeline is automatically created with a Pipeline Logging transform connected to a Dummy transform (Save logging here). Now it’s time to configure the Pipeline Logging transform. This configuration is very simple, open the transform and set your values as in the following example: Transform name: choose a name for your transform, just remember that the name of the transform should be unique in your pipeline (log). Also log transform: selected by default. The Table Output transform allows you to load data into a database table. Table Output is equivalent to the DML operator INSERT. This transform provides configuration options for the target table and a lot of housekeeping and/or performance-related options such as Commit Size and Use batch update for inserts. In this example, we are going to use a relational database connection to log but you can also use output files. In case you decide to use a database connection, check the installation and availability as a pre-requirement. Add a Table Output transform by clicking anywhere in the pipeline canvas, then Search 'table output' → Table Output. Now it’s time to configure the Table Output transform. Open the transform and set your values as in the following example: Transform name: choose a name for your transform, just remember that the name of the transform should be unique in your pipeline (pipelines logging). Connection: The database connection to which data will be written (logging-connection). The connection was configured by using the logging-connection.json environment file that contains the variables: Target table: The name of the table to which data will be written (pipelines-logging). Click on the SQL option to generate the SQL to create the output table automatically: Execute the SQL statements: Open the created table in your favorite database explorer (e.g DBeaver) to see all the logging fields: Close and save the pipeline. Finally, run a pipeline by clicking on the Run → Launch option. In this case, we use a basic pipeline (generate-rows.hpl) that generates a constant and writes the 1000 rows to a CSV file: The data of the pipeline execution will be recorded in the pipelines-logging table. Check the data in the pipelines-logging table. You now know how to use the pipeline log metadata type to work with everything Apache Hop has to offer to process your pipeline logging information. Check the related page on workflow log to learn how to set up a similar process to work with workflow logging.","title":"Pipeline Log","component":"manual","version":"2.7.0","name":"logging-pipeline-log","url":"/manual/latest/how-to-guides/logging-pipeline-log.html","titles":[{"text":"Step 1: Create a Pipeline Log metadata object","hash":"_step_1_create_a_pipeline_log_metadata_object","id":1},{"text":"Step 2: Create a new pipeline with the Pipeline Logging transform","hash":"_step_2_create_a_new_pipeline_with_the_pipeline_logging_transform","id":2},{"text":"Step 3: Add and configure a Table output transform","hash":"_step_3_add_and_configure_a_table_output_transform","id":3},{"text":"Step 4: Run a pipeline and check the logs","hash":"_step_4_run_a_pipeline_and_check_the_logs","id":4},{"text":"Next steps","hash":"_next_steps","id":5}]},"54":{"id":54,"text":"After your project has gone through the initial development and testing, knowing what is going on in runtime becomes important. The Workflow Logs in Hop allow workflow logging information to be passed down to a pipeline for processing as JSON objects. The receiving pipeline can process this logging information with all the functionality Hop pipelines have to offer, e.g. write to a relational or NoSQL database, a Kafka topic, etc. Hop will send the logging information for each workflow you run to the Workflow Log pipeline you specify. In this post, we’ll look at an example of how to configure and use the Workflow Log metadata to write workflow logging information to a relational database. To create a Workflow Log click on the New → Workflow Log option or click on the Metadata → Workflow Log option. The system displays the New Workflow Log view with the following fields to be configured. The Workflow Log can be configured as in the following example: Name: the name of the metadata object (workflows-logging). Enabled: (checked). Pipeline executed to capture logging: select or create the pipeline to process the logging information for this Pipeline Log (${PROJECT_HOME}/hop/logging/workflows-logging.hpl). You should select or create the pipeline to be used for logging the activity. Execute at the start of the pipeline?: (checked). Execute at the end of the pipeline?: (checked). Execute periodically during execution?: (unchecked). Finally, save the workflow log configuration. workflow logging will apply to any workflow you run in the current project. That may not be necessary or even not desired. If you want to only work with logging information for a selected number of workflows, you can add a selection of workflows to the table below the configuration options (\"Capture output of the following workflows\"). The screenshot below shows the single \"generate-fake-books.hwf\" workflow that logging will be captured for in the default Apache Hop samples project. To create the pipeline you can go to the perspective area or by clicking on the New button in the New Workflow Log dialog. Then, choose a folder and a name for the pipeline. A new pipeline is automatically created with a Workflow Logging transform connected to a Dummy transform (Save logging here). Now it’s time to configure the Workflow Logging transform. This configuration is very simple, open the transform and set your values as in the following example: Transform name: choose a name for your transform, just remember that the name of the transform should be unique in your pipeline (log). Also log transform: selected by default. The Table Output transform allows you to load data into a database table. Table Output is equivalent to the DML operator INSERT. This transform provides configuration options for the target table and a lot of housekeeping and/or performance-related options such as Commit Size and Use batch update for inserts. In this example, we are going to use a relational database connection to log but you can also use output files. In case you decide to use a database connection, check the installation and availability as a pre-requirement. Add a Table Output transform by clicking anywhere in the pipeline canvas, then Search 'table output' → Table Output. Now it’s time to configure the Table Output transform. Open the transform and set your values as in the following example: Transform name: choose a name for your transform, just remember that the name of the transform should be unique in your pipeline (workflows logging). Connection: The database connection to which data will be written (logging-connection). The connection was configured by using the logging-connection.json environment file that contains the variables: Target table: The name of the table to which data will be written (workflows-logging). Click on the SQL option to generate the SQL to create the output table automatically Execute the SQL statements. In this simple scenario, we’ll execute the SQL directly. In real-life projects, consider managing your DDL in version control and through tools like Liquibase or Flyway. Open the created table to see all the logging fields: Close and save the transform. Finally, run a workflow by clicking on the Run → Launch option. The Workflow Log pipeline will be executed by any workflow you’ll run. The executed pipeline (generate-rows.hpl) generates a constant and writes the 1000 rows to a CSV file: The data of the workflow execution will be recorded in the workflows-logging table. Check the data in the table. You now know how to use the workflow log metadata type to work with everything Apache Hop has to offer to process your workflow logging information. Check the related page on pipeline log to learn how to set up a similar process to work with pipeline logging.","title":"Workflow Log","component":"manual","version":"2.7.0","name":"logging-workflow-log","url":"/manual/latest/how-to-guides/logging-workflow-log.html","titles":[{"text":"Step 1: Create a Workflow Log metadata object","hash":"_step_1_create_a_workflow_log_metadata_object","id":1},{"text":"Step 2: Create a new pipeline with the Workflow Logging transform","hash":"_step_2_create_a_new_pipeline_with_the_workflow_logging_transform","id":2},{"text":"Step 3: Add and configure a Table output transform","hash":"_step_3_add_and_configure_a_table_output_transform","id":3},{"text":"Step 4: Run a workflow and check the logs","hash":"_step_4_run_a_workflow_and_check_the_logs","id":4},{"text":"Next steps","hash":"_next_steps","id":5}]},"55":{"id":55,"text":"In any data engineering project, there are lots of use cases where you’ll want the same process to run multiple times, e.g. to loop over a number of folders, run for every available month in a data range etc. Apache Hop offers multiple ways to loop over the same workflow or pipeline. Let’s take a closer look at the different options. As stated in the section title, this option is deprecated and is only available in Apache Hop for historical reasons. DO NOT use this option in new development. It does work, but it’s a lot harder to figure out what is going on inside your pipelines or workflows. If you have this type of loops in your project e.g. as part of an imported Pentaho Data Integration (Kettle) project, have a look at the other ways to build loops in this guide to refactor those loops. In this scenario, you’ll need at least three Apache Hop files: in a first pipeline, we’ll build a list of values to loop over. These rows are placed in memory with a Copy rows to result transform. in a second pipeline, we’ll consume each of the values in the loop. Each value in the loop is accepted as a parameter in this pipeline. both pipelines are executed by a workflow. The first pipeline action puts the values to loop over in memory. In the second pipeline action, we’ll enable the Execute for every result row option and pass the fieldname(s) we copied to memory as a Stream column name as a parameter to the pipeline that processes the loop values. This is what that looks like in a very basic example: Create 10 rows with a counter to loop over. Copy these rows to memory. Process each of the values in the loop individually. This example receives the loop value as a $${PRM_COUNTER$} parameter and prints it to the logs. Both pipelines are executed from a workflow. The second pipeline action in this workflow runs the pipeline where we process the loop values. The Execute for every result row option runs this pipeline for every counter value we placed in memory in the first pipeline. The logs for this workflow will look similar to the output below: 2023/04/24 11:25:07 - Hop - Starting workflow 2023/04/24 11:25:07 - loops-process-rows-from-memory - Start of workflow execution 2023/04/24 11:25:07 - loops-process-rows-from-memory - Starting action [loops-copy-rows-to-result.hpl] 2023/04/24 11:25:07 - loops-copy-rows-to-result.hpl - Using run configuration [local] 2023/04/24 11:25:07 - loops-copy-rows-to-result - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2023/04/24 11:25:07 - loops-copy-rows-to-result - Execution started for pipeline [loops-copy-rows-to-result] 2023/04/24 11:25:07 - generate 10 rows.0 - Finished processing (I=0, O=0, R=0, W=10, U=0, E=0) 2023/04/24 11:25:07 - add counter.0 - Finished processing (I=0, O=0, R=10, W=10, U=0, E=0) 2023/04/24 11:25:07 - Copy rows to result.0 - Finished processing (I=0, O=0, R=10, W=10, U=0, E=0) 2023/04/24 11:25:07 - loops-copy-rows-to-result - Pipeline duration : 0.052 seconds [ 0.052\" ] 2023/04/24 11:25:07 - loops-process-rows-from-memory - Starting action [loops-copy-rows-to-result-log-counter.hpl] ... ... 2023/04/24 11:25:07 - loops-copy-rows-to-result-log-counter - Executing this pipeline using the Local Pipeline Engine with run configuration 'local' 2023/04/24 11:25:07 - loops-copy-rows-to-result-log-counter - Execution started for pipeline [loops-copy-rows-to-result-log-counter] 2023/04/24 11:25:08 - generate 1 row.0 - Finished processing (I=0, O=0, R=0, W=1, U=0, E=0) 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - ------------> Linenr 1------------------------------ 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - ################################# 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - the vaule for PRM_COUNTER is now 10 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - ################################# 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - ==================== 2023/04/24 11:25:08 - log ${PRM_COUNTER}.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) 2023/04/24 11:25:08 - loops-copy-rows-to-result-log-counter - Pipeline duration : 0.035 seconds [ 0.035\" ] 2023/04/24 11:25:08 - loops-process-rows-from-memory - Finished action [loops-copy-rows-to-result-log-counter.hpl] (result=[true]) 2023/04/24 11:25:08 - loops-process-rows-from-memory - Finished action [loops-copy-rows-to-result.hpl] (result=[true]) 2023/04/24 11:25:08 - loops-process-rows-from-memory - Workflow execution finished 2023/04/24 11:25:08 - Hop - Workflow execution has ended 2023/04/24 11:25:08 - loops-process-rows-from-memory - Workflow duration : 0.65 seconds [ 0.650\" ] 2023/04/24 11:25:08 - loops-copy-rows-to-result-log-counter - Execution finished on a local pipeline engine with run configuration 'local' As you may have noticed, this way of looping is not very transparent. There is no way to pick up the stream values you want to pass to the second pipeline. You’ll need to log information to the logs if you want to have a clear view on what is happening in your loop. All of this combined makes it hard to maintain and debug this type of loops. The Workflow executor^ and Pipeline executor^ offer flexible and elegant ways to run workflows and pipelines from within an existing pipeline. The pipeline executor is a relatively simple but very powerful transform. Specify a name for the pipeline you want to execute (or accept the pipeline name from a field), specify a run configuration, map the child pipeline’s parameters to fields in your current pipeline, and done. The pipeline executor transform will send rows to the child pipeline one by one by default. This default behavior can be changed in the Row grouping tab. Use a Get rows from result^ transform in the child pipeline to fetch the rows if you’re sending more than one row to the child pipeline. Looping over a list of values to send to your child pipeline is not necessarily the last action you want to perform in your main pipeline. There are 5 possibilities to create hops from the pipeline executor transform to later transforms in the pipeline. This hop type returns execution results and metrics from the various child pipeline runs. It’s a good idea to at least check if there have been any issues in one of your child pipelines with the ExecutionResult, ExecutionExitStatus or ExecutionNrErrors fields. Fieldname Type Description ExecutionTime Integer the time it took to execute the child pipeline ExecutionResult Boolean the result of the child pipeline execution (Y/N) ExecutionNrErrors Integer the number of errors encountered in the child pipeline execution ExecutionLinesRead Integer number of lines read from previous transforms (in the child pipeline) ExecutionLinesWritten Integer number of lines written to following transforms (in the child pipeline) ExecutionLinesInput Integer number of lines read from physical I/O like files or databases ExecutionLinesOutput Integer number of lines written to physical I/O like files or databases ExecutionLinesRejected Integer number of rejected lines in the child pipeline ExecutionLinesUpdated Integer number of updated lines in the child pipeline ExecutionLinesDeleted Integer number of deleted lines in the child pipeline ExecutionFilesRetrieved Integer number of retrieved files in the child pipeline ExecutionExitStatus Integer exit status of the child pipeline ExecutionLogText String the full logging text for the child pipeline’s execution ExecutionLogChannelId String log channel id for the child pipeline’s execution This rowset receives data that was copied to memory by the child pipeline, e.g. with a Copy rows to result transform. Use the \"Result rows\" tab in the pipeline executor transform to specify which fields you expect to receive from the child pipelines. This rowset will contain any filename that was copied to the results, e.g. with the Add filenames to result in the Content tab of the Text file input^ transform. This rowset passes on the data stream as it was received by the pipeline executor transform. This rowset mimics the input for the pipeline executor transform. The workflow executor transform is similar to the pipeline executor transform but, as the name implies, lets you run workflows from within a pipeline. Specify a name for the workflow you want to execute, specify a run configuration, map the child workflow’s parameters to fields in your pipeline, and done. The workflow executor transform will send rows to the workflow one by one by default. This default behavior can be changed in the Row grouping tab. Again, similar to the pipeline executor transform, Looping over a list of values to send to your child workflow is not necessarily the last action you want to perform in your main pipeline. There are 4 possibilities to create hops from the workflow executor transform to later transforms in the pipeline. This hop type returns execution results and metrics from the various child workflow runs. It’s a good idea to at least check if there have been any issues in one of your child workflow runs with the ExecutionResult, ExecutionExitStatus or ExecutionNrErrors fields. Fieldname Type Description ExecutionTime Integer the time it took to execute the child workflow ExecutionResult Boolean the result of the child workflow execution (Y/N) ExecutionNrErrors Integer the number of errors encountered in the child workflow execution ExecutionLinesRead Integer number of lines read from previous transforms (in the child workflow) ExecutionLinesWritten Integer number of lines written to following transforms (in the child workflow) ExecutionLinesInput Integer number of lines read from physical I/O like files or databases ExecutionLinesOutput Integer number of lines written to physical I/O like files or databases ExecutionLinesRejected Integer number of rejected lines in the child workflow ExecutionLinesUpdated Integer number of updated lines in the child workflow ExecutionLinesDeleted Integer number of deleted lines in the child workflow ExecutionFilesRetrieved Integer number of retrieved files in the child workflow ExecutionExitStatus Integer exit status of the child workflow ExecutionLogText String the full logging text for the child workflow’s execution ExecutionLogChannelId String log channel id for the child workflow’s execution This rowset receives data that was copied to memory by the child workflow. Use the Result rows tab in the workflow executor transform to specify which fields you expect to receive from the child workflows. This rowset will contain any filename that was copied to the results by the child workflow. This rowset mimics the input for the workflow executor transform. In addition to the workflow and pipeline executor transforms, the Repeat^ and End Repeat^ actions let you build loops from a workflow. The repeat action in itself is pretty simple: it requires a workflow or pipeline and the run configuration to use. The action will continue to execute the specified workflow or pipeline until a condition is met: either a variable is set with an (optional) value, or an End repeat action is triggered in a child workflow. The example below runs a pipeline that increments a $${COUNTER$} variable with each run. If the variable values exceeds 10, a variable $${END_LOOP$} is set. This variable is detected by the Repeat action, and the loop stops. The options discussed here give you all the tools you need to build and run loops in your Apache Hop projects. All of the samples discussed here are available in the samples project that is available in your Apache Hop installation (as of Apache Hop 2.5.0). If you upgraded your projects from Pentaho Data Integration (Kettle) or intend to upgrade, now’s the time to refactor your deprecated Copy rows to result loops to any of the options discussed here.","title":"Loops in Apache Hop","component":"manual","version":"2.7.0","name":"loops-in-apache-hop","url":"/manual/latest/how-to-guides/loops-in-apache-hop.html","titles":[{"text":"DEPRECATED: copy rows to result + execute for each row","hash":"_deprecated_copy_rows_to_result_execute_for_each_row","id":1},{"text":"Pipeline and Workflow executor","hash":"_pipeline_and_workflow_executor","id":2},{"text":"Pipeline Executor","hash":"_pipeline_executor","id":3},{"text":"Pipeline Executor - execution results","hash":"_pipeline_executor_execution_results","id":4},{"text":"Pipeline Executor - Result rows after execution","hash":"_pipeline_executor_result_rows_after_execution","id":5},{"text":"Pipeline Executor - Result file names after execution","hash":"_pipeline_executor_result_file_names_after_execution","id":6},{"text":"Pipeline Executor - Copy of the executor transform’s input data","hash":"_pipeline_executor_copy_of_the_executor_transforms_input_data","id":7},{"text":"Pipeline Executor - Main output of the transform","hash":"_pipeline_executor_main_output_of_the_transform","id":8},{"text":"Workflow Executor","hash":"_workflow_executor","id":9},{"text":"Workflow Executor - Execution Results","hash":"_workflow_executor_execution_results","id":10},{"text":"Workflow Executor - Result rows after execution","hash":"_workflow_executor_result_rows_after_execution","id":11},{"text":"Workflow Executor - Result file names after execution","hash":"_workflow_executor_result_file_names_after_execution","id":12},{"text":"Workflow Executor - Main output of the transform","hash":"_workflow_executor_main_output_of_the_transform","id":13},{"text":"Repeat and End Repeat actions","hash":"_repeat_and_end_repeat_actions","id":14},{"text":"Wrapping up","hash":"_wrapping_up","id":15}]},"56":{"id":56,"text":"From the Apache Airflow website: Airflow is a platform created by the community to programmatically author, schedule and monitor workflows. Airflow uses Directed Acyclic Graphs (or DAGs). A DAG is a collection of all the tasks you want to run, organized in a way that reflects their relationships and dependencies. A DAG is defined in a Python script, which represents the DAGs structure (tasks and their dependencies) as code. From an Apache Hop point of view, our focus is different: Apache Hop wants to enable citizen developers to be productive data engineers without the need to write code. With that in mind, we don’t need all the bells and whistles Apache Airflow provides (but don’t let that stop you from using Apache Airflow to its full potential!). The goal of this page is to get a basic Airflow setup running to demonstrate how Apache Airflow and Apache Hop can be used together. Check out the different installation options if you want to build a production-ready Apache Airflow installation. To keep things simple, we’ll use Docker Compose to get Apache Airflow up and running in a matter of minutes. Even though Docker Compose has been said to be on the verge of extinction for quite a while now, it still is a quick and convenient way to experiment with data platforms that would otherwise be time-consuming and difficult to set up. Apache Airflow provides a docker-compose.yaml file. Our goal is to run Apache Hop workflows and pipelines in Apache Airflow, so we’re not interested in the Airflow sample DAGs that come with this docker-compose file. Change the AIRFLOW__CORE__LOAD_EXAMPLES variable to \"false\" in the default file, and add an additional line /var/run/docker.sock:/var/run/docker.sock in the volumes section. All of this has already been done if you use the the file in our github repository. To run Apache Airflow from this docker-compose file, go the directory where you saved this file and run docker compose up The various Apache Airflow need a couple of moments to start. Once you see a couple of lines like the ones below in the logs, we’re good to go. apache-airflow-airflow-triggerer-1 | [2023-05-07 07:50:08 +0000] [24] [INFO] Booting worker with pid: 24 apache-airflow-airflow-triggerer-1 | [2023-05-07 07:50:08 +0000] [25] [INFO] Booting worker with pid: 25 apache-airflow-airflow-scheduler-1 | ____________ _____________ apache-airflow-airflow-scheduler-1 | ____ |__( )_________ __/__ /________ __ apache-airflow-airflow-scheduler-1 | ____ /| |_ /__ ___/_ /_ __ /_ __ \\_ | /| / / apache-airflow-airflow-scheduler-1 | ___ ___ | / _ / _ __/ _ / / /_/ /_ |/ |/ / apache-airflow-airflow-scheduler-1 | _/_/ |_/_/ /_/ /_/ /_/ \\____/____/|__/ apache-airflow-airflow-scheduler-1 | [2023-05-07T07:50:08.601+0000] {executor_loader.py:114} INFO - Loaded executor: CeleryExecutor apache-airflow-airflow-scheduler-1 | [2023-05-07T07:50:08.652+0000] {scheduler_job_runner.py:823} INFO - Starting the scheduler apache-airflow-airflow-scheduler-1 | [2023-05-07T07:50:08.653+0000] {scheduler_job_runner.py:830} INFO - Processing each file at most -1 times apache-airflow-airflow-scheduler-1 | [2023-05-07T07:50:08.657+0000] {manager.py:165} INFO - Launched DagFileProcessorManager with pid: 34 apache-airflow-airflow-scheduler-1 | [2023-05-07T07:50:08.658+0000] {scheduler_job_runner.py:1576} INFO - Resetting orphaned tasks for active dag runs apache-airflow-airflow-scheduler-1 | [2023-05-07T07:50:08.660+0000] {settings.py:60} INFO - Configured default timezone Timezone('UTC') Go to http://localhost:8080/home in your browser and log on with username \"airflow\" and password \"airflow\". Even though we’re not running in production, the username and password can be easily changed from the docker-compose file. Just change the values for the AIRFLOW_WWW_USER_USERNAME and AIRFLOW_WWW_USER_PASSWORD variables in the docker-compose file or use any of the available ways to work with variables in Docker compose. After you logged on, Apache Airflow will show you an empty list of DAGs. We’re ready for the real fun. We’ll use the Apache Airflow DockerOperator to run Apache Hop workflows and pipelines from an embedded container in Apache Airflow. Again, you don’t need to be an Apache Airflow, Docker, or Python expert to create DAGs, we’ll treat DAGs as just another text file. Since we’ll use a container to run our workflows and pipelines, the configuration in our DAG will look very similar to the environment variables you’ll pass to the short-lived Apache Hop container. Let’s take a closer look at a couple of things in the DAG we’ll use. This will look very familiar if you’ve even run Apache Hop workflows and pipelines in containers: Import the DockerOperator into your DAG: from airflow.operators.docker_operator import DockerOperator Let’s take a look at the end of the Apache Hop task first: mounts=[Mount(source='LOCAL_PATH_TO_PROJECT_FOLDER', target='/project', type='bind'), Mount(source='LOCAL_PATH_TO_ENV_FOLDER', target='/project-config', type='bind')], The mounts section is where we’ll link your project and environment folders to the container. LOCAL_PATH_TO_PROJECT_FOLDER is the path to the project folder on your local file system (the folder where you keep your hop-config.json file, metadata folder and workflows and pipelines). This folder will be mounted as /project inside the container. LOCAL_PATH_TO_ENV_FOLDER is similar but points to the folder where your environment configuration (json) files are. This folder will be mounted as /project-config inside the container. Define and configure the pipeline in your DAG task: hop = DockerOperator( task_id='sample-pipeline', # use the Apache Hop Docker image. Add your tags here in the default apache/hop: syntax image='apache/hop', api_version='auto', auto_remove=True, environment= { 'HOP_RUN_PARAMETERS': 'INPUT_DIR=', 'HOP_LOG_LEVEL': 'Basic', 'HOP_FILE_PATH': '${PROJECT_HOME}/transforms/null-if-basic.hpl', 'HOP_PROJECT_DIRECTORY': '/project', 'HOP_PROJECT_NAME': 'hop-airflow-sample', 'HOP_ENVIRONMENT_NAME': 'env-hop-airflow-sample.json', 'HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS': '/project-config/env-hop-airflow-sample.json', 'HOP_RUN_CONFIG': 'local' }, The parameters to specify here are: task_id: a unique id for this Airflow task in the DAG image: we use \"apache/hop\" in this example, which will always grab the latest release. Add a tag to use a specific Apache Hop release, e.g. \"apache/hop:2.4.0\" or \"apache/hop:Development\" for the very latest development version environment is where we’ll tell the DockerOperator which pipeline to run and provide additional configuration. The environment variables used here are exactly what you would pass to a standalone short-lived container without Airflow: HOP_RUN_PARAMETERS: parameters to pass to the workflow or pipeline HOP_LOG_LEVEL: the logging level to use with your workflow or pipeline HOP_FILE_PATH: the path to the workflow or pipeline you want to use. This is the path in the container and is relative to the project folder HOP_PROJECT_DIRECTORY: the folder where your project files live. In this example, this is the /project folder we mounted in the previous section. HOP_PROJECT_NAME: your Apache Hop project’s name. This will only be used internally (and will show in the logs). Your project name is not necessarily the same name you used to develop the project in Hop Gui, but keeping things consistent never hurts. HOP_ENVIRONMENT_NAME: similar to the project name, this is the name for the environment that will be created through hop-conf when the container starts. HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS: the paths to your environment configuration files. These file paths should be relative to the /project-config folder we mounted in the previous section. HOP_RUN_CONFIG: the workflow or pipeline run configuration to use. Your mileage may vary, but in the vast majority of cases, using a local run configuration will be what you need. That’s everything we need to specify for a first run. This DAG will look like the one below: from datetime import datetime, timedelta from airflow import DAG from airflow.operators.bash_operator import BashOperator from airflow.operators.docker_operator import DockerOperator from airflow.operators.python_operator import BranchPythonOperator from airflow.operators.dummy_operator import DummyOperator from docker.types import Mount default_args = { 'owner' : 'airflow', 'description' : 'sample-pipeline', 'depend_on_past' : False, 'start_date' : datetime(2022, 1, 1), 'email_on_failure' : False, 'email_on_retry' : False, 'retries' : 1, 'retry_delay' : timedelta(minutes=5) } with DAG('sample-pipeline', default_args=default_args, schedule_interval=None, catchup=False, is_paused_upon_creation=False) as dag: start_dag = DummyOperator( task_id='start_dag' ) end_dag = DummyOperator( task_id='end_dag' ) hop = DockerOperator( task_id='sample-pipeline', # use the Apache Hop Docker image. Add your tags here in the default apache/hop: syntax image='apache/hop', api_version='auto', auto_remove=True, environment= { 'HOP_RUN_PARAMETERS': 'INPUT_DIR=', 'HOP_LOG_LEVEL': 'Basic', 'HOP_FILE_PATH': '${PROJECT_HOME}/transforms/null-if-basic.hpl', 'HOP_PROJECT_DIRECTORY': '/project', 'HOP_PROJECT_NAME': 'hop-airflow-sample', 'HOP_ENVIRONMENT_NAME': 'env-hop-airflow-sample.json', 'HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS': '/project-config/env-hop-airflow-sample.json', 'HOP_RUN_CONFIG': 'local' }, docker_url=\"unix://var/run/docker.sock\", network_mode=\"bridge\", mounts=[Mount(source='LOCAL_PATH_TO_PROJECT_FOLDER', target='/project', type='bind'), Mount(source='LOCAL_PATH_TO_ENV_FOLDER', target='/project-config', type='bind')], force_pull=False ) start_dag >> hop >> end_dag All it takes to deploy your dag is to put it in Airflow’s dags folder. Our docker-compose setup has created a dags folder in the directory where you started the compose file. Airflow will scan this folder every two minutes by default. Save the DAG we just created in your dags folder as apache-hop-dag-simple.py. After a short wait, your DAG will show up in the list of dags. If there are any syntax errors in your DAG, Airflow will let you know. Expand the error dialog for more details about the error. Click on the sample-pipeline DAG to see more details about it. From the tab list at the top of the page, select \"Code\" to review the DAG you just deployed, or \"Graph\" to see the graph representation of the DAG. This graph is extremely simple, but we’re exploring Apache Airflow, so that’s intentional. To run this DAG, click the play icon with the Trigger DAG option. The icon is available from multiple locations in the Apache Airflow user interface. It is almost always available in the upper right corner. Your DAG will run in the background. To follow up and check the logs, click on your DAG name to go to its details page. 2023-05-07, 13:54:39 UTC] {docker.py:391} INFO - 2023/05/07 13:54:39 - Ouput.0 - Finished processing (I=0, O=0, R=5, W=5, U=0, E=0) [2023-05-07, 13:54:39 UTC] {docker.py:391} INFO - 2023/05/07 13:54:39 - null-if-basic - Pipeline duration : 0.45 seconds [ 0.450 ] [2023-05-07, 13:54:39 UTC] {docker.py:391} INFO - HopRun exit. [2023-05-07, 13:54:39 UTC] {docker.py:391} INFO - 2023/05/07 13:54:39 - null-if-basic - Execution finished on a local pipeline engine with run configuration 'local' [2023-05-07, 13:54:40 UTC] {taskinstance.py:1373} INFO - Marking task as SUCCESS. dag_id=sample-pipeline, task_id=sample-pipeline, execution_date=20230507T135409, start_date=20230507T135411, end_date=20230507T135440 [2023-05-07, 13:54:40 UTC] {local_task_job_runner.py:232} INFO - Task exited with return code 0 When you return to the Airflow home screen, your DAG will now show green circles for successful runs. Your real-life pipelines will be more complex than the extremely simple example pipeline we just ran. In the basic example we just ran, we passed an environment file but didn’t use it. In a lot of cases, you’ll want to not only use variables from your environment files, you may also want to pass parameters to your pipelines and workflows. Let’s have a closer look at that. Create the environment configuration below to a config folder next to your project folder. We’ll use the pipeline pipelines/pipeline-with-parameter.hpl from the samples project to print a pipeline parameter and a variable from the environment configuration file to the logs. Again, these examples are extremely simple, your real-life projects will be more complex, but the process remains the same. { \"variables\" : [ { \"name\" : \"ENV_VARIABLE\", \"value\" : \"variable value\", \"description\" : \"\" } ] } This pipeline is again very basic. All we’ll do is accept a parameter and print it in the logs: We’ll create a new DAG for this example. Most of it will be the same or similar to the previous example, with some minor changes: First of all, we’ll need to add one additional import at the start of the DAG: from airflow import DAG from airflow.models import Variable from airflow.operators.bash_operator import BashOperator Next, we’ll need to add the parameter in this pipeline and tell Airflow to pick up the values from the run configuration we’ll pass to the DAG later on. We’ll also use logging level Detailed to make sure we can see the parameters we’ll pass to the pipeline. environment= { 'HOP_RUN_PARAMETERS': 'PRM_EXAMPLE=', 'HOP_LOG_LEVEL': 'Detailed', 'HOP_FILE_PATH': '${PROJECT_HOME}/hop/pipeline-with-parameter.hpl', 'HOP_PROJECT_DIRECTORY': '/project', 'HOP_PROJECT_NAME': 'hop-airflow-sample', 'HOP_ENVIRONMENT_NAME': 'env-hop-airflow-sample.json', 'HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS': '/project-config/hop-airflow-config.json', 'HOP_RUN_CONFIG': 'local' }, Also, we really need the environment configuration file this time, so make sure your mounts are correct. mounts=[Mount(source='/', target='/project', type='bind'), Mount(source='/config/', target='/project-config', type='bind')], Add this new DAG to your dags folder and wait for it to appear in your Apache Airflow console. To run this DAG with parameters, we’ll use the Trigger DAG w/ config option. We’ll specify the prm_example value that Airflow will pass to the PRM_EXAMPLE parameter in the pipeline. The syntax to use is shown below. Click \"Trigger\" when you’re done. Your DAG logs will now show the environment variable and the parameter we used in this example: [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - pipeline-with-parameter - Pipeline has allocated 5 threads and 4 rowsets. [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - generate 1 row.0 - Starting to run... [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - generate 1 row.0 - Finished processing (I=0, O=0, R=0, W=1, U=0, E=0) [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - get ${PRM_EXAMPLE}.0 - field [example] has value [EXAMPLE VALUE] [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - get ${PRM_EXAMPLE}.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - write parameter to log.0 - [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - get ${ENV_VARIABLE}.0 - field [env_variable] has value [variable value] [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - write env_variable to log.0 - [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - write parameter to log.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - get ${ENV_VARIABLE}.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) [2023-05-08, 08:21:34 UTC] {docker.py:391} INFO - 2023/05/08 08:21:34 - write env_variable to log.0 - Finished processing (I=0, O=0, R=1, W=1, U=0, E=0) So far, we’ve looked at DAG that we ran manually and ad-hoc. There are lots of well-documented options to schedule DAGs in Apache Airflow. Since scheduling your DAGs is not really Apache Hop related, we’ll only cover this briefly here. One option is to provide a cron string to schedule your DAG execution. For example, to run a specific DAG at 10:00 am every morning, we’ll change the schedule_interval from None to a cron expression in the \"with DAG\" line in our DAG (line breaks added for readability): with DAG( 'sample-pipeline', default_args=default_args, schedule_interval='0 10 * * *', catchup=False, is_paused_upon_creation=False ) as dag: For a more detailed description of the scheduling options in Apache Airflow, you may find this Medium post helpful. We’ve covered the basics of running Apache Hop pipelines (or workflows) in Apache Airflow with the DockerOperator. There are other options: you could use Airflow’s BashOperator to use hop-run directly or the HTTP operator to run pipelines or workflows on a remote hop server.","title":"Run workflows and pipelines in Apache Airflow","component":"manual","version":"2.7.0","name":"run-hop-in-apache-airflow","url":"/manual/latest/how-to-guides/run-hop-in-apache-airflow.html","titles":[{"text":"What is Apache Airflow?","hash":"_what_is_apache_airflow","id":1},{"text":"Run Apache Airflow in Docker Compose","hash":"_run_apache_airflow_in_docker_compose","id":2},{"text":"Your first Apache Airflow and Apache Hop DAG","hash":"_your_first_apache_airflow_and_apache_hop_dag","id":3},{"text":"Deploy and run your first DAG","hash":"_deploy_and_run_your_first_dag","id":4},{"text":"Using variables and parameters in a DAG","hash":"_using_variables_and_parameters_in_a_dag","id":5},{"text":"Scheduling a DAG in Apache Airflow","hash":"_scheduling_a_dag_in_apache_airflow","id":6},{"text":"Summary","hash":"_summary","id":7}]},"57":{"id":57,"text":"One of the first concepts new Apache Hop users learn is that pipelines are executed in parallel and workflows are executed sequentially. However, there are cases where you want to overrule these defaults and execute pipelines sequentially and workflows in parallel. We’ll take a closer look at the latter use case in more detail and show how you can run actions in a workflow in parallel. As you already know, actions in a workflow are executed sequentially. Each action in a workflow has an exit code (success or failure) that determines the path the workflow will follow. This exit code can be ignored in the case of an unconditional hop. A workflow action can have multiple outgoing hops. However, this doesn’t mean the workflow will follow all hops in parallel. If an action has multiple outgoing hops, the default workflow behavior is to execute all actions sequentially in the order they were added to the workflow. In the example below, the workflow will execute \"sample-pipeline.hpl 1\" first. Once that action is completed, the workflow will continue to \"sample-pipeline.hpl 2\". Parallel execution in a workflow is possible, but this needs to be specified explicitly. To do so, click on an action’s icon and click the \"parallel execution\" option. Once the parallel option has been activated, the hop line will be dotted and double-crossed, as shown in the screenshot below. Keep in mind that parallel execution means that all actions that run in parallel will have to share the resources in the Java Virtual Machine (JVM). Small pipelines and workflow actions that run in parallel may be faster, but larger items that require a lot of memory or CPU power may be faster when executed sequentially. When you run this workflow, the log message will tell you both actions have started in parallel: 2023/05/01 10:14:42 - parallel-workflow - Start of workflow execution 2023/05/01 10:14:42 - parallel-workflow - Starting action [sample-pipeline.hpl 1] 2023/05/01 10:14:42 - parallel-workflow - Launched action [sample-pipeline.hpl 1] in parallel. 2023/05/01 10:14:42 - parallel-workflow - Starting action [sample-pipeline.hpl 2] 2023/05/01 10:14:42 - parallel-workflow - Launched action [sample-pipeline.hpl 2] in parallel. Once you tell a workflow to run in parallel from a given action, it will continue to run the subsequent actions in parallel. Consider the extremely simple workflow below. This workflow starts both \"sample pipeline actions in parallel. After the sample pipelines, the workflow will execute the respective \"Write to log\" actions, and both workflows will execute the \"Dummy\" action. The effective result will be what is shown in the second screenshot below: In a lot of cases, you’ll only want to execute parts of a workflow in parallel. Example use cases could be that you want to load data to a number of relatively small database tables or generate a number of relatively small files before continuing with the more heavy lifting. In those scenarios, you’ll want to isolate the parallel processing in a separate child workflow. In the screenshot below, we’ve isolated the part of the workflow we want to execute in parallel into a child workflow. When this workflow runs, the child workflow (\"parallel workflow\") will run both actions in parallel. The child workflow will run both sample pipelines in parallel. When the last of these two pipelines finishes, the parent workflow will continue its (sequential) execution. In this post, we walked through the various options to run workflow actions in parallel in Apache Hop. You also learned how to combine parallel and sequential execution through child workflows.","title":"Parallel execution in Apache Hop workflows","component":"manual","version":"2.7.0","name":"workflows-parallel-execution","url":"/manual/latest/how-to-guides/workflows-parallel-execution.html","titles":[{"text":"Multiple workflow action hops","hash":"_multiple_workflow_action_hops","id":1},{"text":"Parallel execution","hash":"_parallel_execution","id":2},{"text":"Combining sequential and parallel execution","hash":"_combining_sequential_and_parallel_execution","id":3},{"text":"Summary","hash":"_summary","id":4}]},"58":{"id":58,"text":"This web service variant is used to execute long-running workflows. Instead of getting immediate results from a pipeline with a Web Service call, the only thing that is given back after the call in the unique ID of the executing workflow. With that unique ID you can query the status of the workflow. You can specify additional variables to report back during the querying of the status of the asynchronously running workflow. Option Description Name The name to be used for this Asynchronous Web Services Enabled Boolean flag to indicated whether this web service is enabled or not Filename The workflow to use for this web service, with options to open the selected workflow ('Open'), create a new workflow ('New'), or browse to select an existing workflow ('Browse') Status variables (, separated) List the variables that are being reported back when the asynchronous status service is queried Content variable The name of the variable which will contain the content body of the service call For more details on the Asynchronous Web Service and usage examples, check the Asynchronous Web Service page in the Hop Server docs.","title":"Asynchronous Web Service","component":"manual","version":"2.7.0","name":"asyncwebservice","url":"/manual/latest/metadata-types/asyncwebservice.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"More information","hash":"_more_information","id":3}]},"59":{"id":59,"text":"A Beam File Definition describes a file layout in a Beam pipeline and specifies the file layout (name, field definitions, enclosure and separator) to be used in Beam Pipelines. Transforms: Beam Input Beam Output Option Description Name The name to be used for this Beam file definition Description The description to be used for this Beam file definition Field Separator separator used between fields in the file definition Enclosure field enclosure used for fields in the file definition Field Definitions List of field name, type, format, length and precision. Describes the file layout for this field definition. beam/pipelines/complex.hpl beam/pipelines/generate-synthetic-data.hpl beam/pipelines/input-process-output.hpl beam/pipelines/switch-case.hpl beam/pipelines/unbounded-synthetic-data.hpl","title":"Beam File Definition","component":"manual","version":"2.7.0","name":"beam-file-definition","url":"/manual/latest/metadata-types/beam-file-definition.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"60":{"id":60,"text":"A Data Set is a static pre-defined collection of rows, used in unit testing^, where a data set is used as an alternative input data set. This input set is used to be processed in a unit testing pipeline. After processing the result of the pipeline is compared to a data set that has been specified as the 'golden data set' for the test. None/All Option Description Name The name to be used for this data set Description The description to be used for this data set Set Folder (or use HOP_DATASETS_FOLDER) project folder where data sets can be found and are saved Base file name the data set default name data set fields and their column names in the file List of field name, type, format, length and precision. Describes the file layout for this data set. None","title":"Data Set","component":"manual","version":"2.7.0","name":"data-set","url":"/manual/latest/metadata-types/data-set.html","titles":[{"text":"Related Plugins","hash":"_related_plugins","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Samples","hash":"_samples","id":3}]},"61":{"id":61,"text":"An Apache Hop Execution Data Profile builds data profiles as data flow through pipelines. A number of data profilers can be selected and configure the fine tune the type and detail of the data that is profiled. Option Description Name The name to be used for this Execution Data Profile Description A description to be used for this Execution Data Profile Data Samplers to use One or more data samplers to use with this Execution Data Profile. See details below. Data Sampler Description Options Data profile output rows Allow for some basic data profiling to be performed on transform output rows Sample size: This is the maximum number of sample rows kept for any discovered profiling result (default: 25) Last transforms only: only perform data profiling on pipeline endpoints (last transforms)? (default: true) Minima: store the minimum value for this data profile (default: true) Maxima: store the maximum value for this data profile (default: true) Count nulls: count null values for this data profile (default: true) Count non-nulls: count non-null values for this data profile (default: true) Min length: store the minimum lengths for this data profile (default: true) Max length: store the maximum lengths for this data profile (default: true) First output rows Samples the first rows of a transform output Sample size (default: 100) Last output rows Samples the last rows of a transform output Sample size (default: 100) Random output rows Do reservoir sampling on the output rows of a transform Sample size (default: 100)","title":"Execution Data Profile","component":"manual","version":"2.7.0","name":"execution-data-profile","url":"/manual/latest/metadata-types/execution-data-profile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Data Samplers","hash":"_data_samplers","id":3}]},"62":{"id":62,"text":"The Execution Information Location determines where Apache Hop can send information execution information to. After execution this information can be consulted from the Execution Information Perspective Option Description Default Name The name to use for this Execution Information Location - Description The description to use for this Execution Information Location - Data logging delay (ms) 2000 Data logging interval (ms) 5000 Data logging size (rows) 1000 Location type The location plugin type to write to. Depending on the type you can enter more plugin specific options. With a file location you can write execution information to files in a path on the local file system. Options: Root folder: the folder to write the execution information to. A remote location allows you to write execution information to a Hop Server. Options: Hop Server: the remote Hop Server to write the execution information to. Execution Information Location: the Execution Information Location to be used on the remote Hop Server. With this location type you can store execution information in a Neo4j graph database. For more information on this plugin, see the Neo4j location type documentation. If you want to automate removal of execution information from your graph database you can use a pipeline or workflow to do so.","title":"Execution Information Location","component":"manual","version":"2.7.0","name":"execution-information-location","url":"/manual/latest/metadata-types/execution-information-location.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Location type specific options","hash":"_location_type_specific_options","id":3},{"text":"File location","hash":"_file_location","id":4},{"text":"Remote location","hash":"_remote_location","id":5},{"text":"Neo4j location","hash":"_neo4j_location","id":6},{"text":"Cleanup","hash":"_cleanup","id":7}]},"63":{"id":63,"text":"Hop Server is a lightweight web server that hosts a Hop runtime for remote execution, with a web interfaces and a set of servlets to check execution status etc. Check the Hop Server docs for more details. None/All Option Description Server name the name to use for this server definition Hostname or IP address Port (empty is port 80) Web app name (optional) Username Password Use https protocal default: false None","title":"Hop Server","component":"manual","version":"2.7.0","name":"hop-server","url":"/manual/latest/metadata-types/hop-server.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"64":{"id":64,"text":"Metadata is one of the cornerstones in Hop and can be defined as workflows, pipelines and any other type of metadata objects. Hop Gui has a Metadata Perspective to manage all types of metadata: run configurations, database (relational and NoSQL) connections, logging, and pipeline probes just to name a few. Metadata is typically stored as json files in a projects' metadata folder as a set of json files, in subfolders per metadata type. The only exception to the rule are workflows and pipelines, which are defined as XML (for now, because of historical reasons). Since workflows and pipelines are what Hop is all about, these are typically stored in your project folder, not in your project’s metadata folder. We’ve made it as easy as possible to add or remove plugins in Hop. Since metadata types are plugin types too, the available metadata types in your Hop installation may not match this list entirely. By default, Hop contains the following metadata types: Asynchronous Web Service: Execute and query a workflow asynchronously through a web service. Beam File Definition: Describes a file layout in a Beam Pipeline Cassandra Connection: Describes a connection to a Cassandra cluster Data Set: This defines a data set, a static pre-defined collection of rows Hop Server: Defines a Hop Server MongoDB Connection: Describes a MongoDB connection Neo4j Connection: A shared connection to a Neo4j server Neo4j Graph Model: Description of the nodes, relationships, indexes, …​ of a Neo4j graph Partition Schema: Describes a partition schema Pipeline Log: Allows to log the activity of a pipeline with another pipeline Pipeline Probe: Allows to stream output rows of a pipeline to another pipeline Pipeline Run Configuration: Describes how and with which engine a pipeline is to be executed Pipeline Unit Test: Describes a test for a pipeline with alternative data sets as input from a certain transform and testing output against golden data Relational Database Connection: Describes all the metadata needed to connect to a relational database Splunk Connection: Describes a Splunk connection Web Service: Allows to run a pipeline to generate output for a servlet on Hop Server Workflow Log: Allows to log the activity of a workflow with a pipeline Workflow Run Configuration: Describes how to run a workflow","title":"","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/metadata-types/index.html","titles":[{"text":"Metadata Types","hash":"_metadata_types","id":1}]},"65":{"id":65,"text":"Describes a MongoDB connection. The MongoDB connection, specified on a project level, can be reused across multiple (instances of) a transform or other plugin types. MongoDB Input MongoDB Output Option Default Description MongoDB Connection name The name to use for this connection Hostname localhost cluster hostname Port 27017 the port for the MongoDB Database Database name Authentication database Username Password Authentication mechanism PLAIN SCRAM_SHA1, MONGODB_CR or PLAIN User Kerberos false Connection timeout (ms) Socket timeout (ms) Read preference PRIMARY PRIMARY, PRIMARY_PREFERRED, SECONDARY, SECONDARY_PREFERRED or NEAREST Use all replica set members? false Specify the read preference tag sets Use an SSL socket factory? false Write concern Replication timeout (ms) Journaled? true","title":"MongoDB Connection","component":"manual","version":"2.7.0","name":"mongodb-connection","url":"/manual/latest/metadata-types/mongodb-connection.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples (Integration Tests)","hash":"_samples_integration_tests","id":4}]},"66":{"id":66,"text":"Describes a partition schema. A partition schema defines how many ways the row stream will be split. The names used for the partitions can be anything you like. None/All Option Default Description Partition schema name The name to be used for this partition schema Dynamically create the schema definition ? Number of partitions? 4 Partitions list of partition IDs integration-tests/partitioning/0006-partitioned-when-stream-lookup-should-fail2.hpl integration-tests/partitioning/0004-copies-repartitioning.hpl integration-tests/partitioning/0001-static-partitioning.hpl integration-tests/partitioning/0005-partitioned-stream-lookup.hpl integration-tests/partitioning/0006-partitioned-when-stream-lookup-should-fail.hpl integration-tests/partitioning/0003-repartitioning.hpl integration-tests/partitioning/0005-non-partitioned-stream-lookup.hpl integration-tests/partitioning/0002-dynamic-partitioning.hpl","title":"Partition Schema","component":"manual","version":"2.7.0","name":"partition-schema","url":"/manual/latest/metadata-types/partition-schema.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples (Integration Tests)","hash":"_samples_integration_tests","id":4}]},"67":{"id":67,"text":"Allows to log the activity of a pipeline with another pipeline. A pipeline log streams logging information from a running pipeline to another pipeline. The only requirement for the receiving pipeline is that it starts with a Pipeline Logging transform. Other than that, the logging pipeline is \"just another pipeline\". In this logging pipeline, you can process the logging information and e.g. write to a relational or NoSQL database, a Kafka topic etc The samples project comes with an example pipeline log. Check the metadata perspective for the pipeline log pipeline-log-example. This pipeline log is configured to send logging information for the pipeline ${PROJECT_HOME}/reflection/generate-fake-books.hpl to the logging pipeline ${PROJECT_HOME}/reflection/pipeline-log-example.hpl. Pipeline Logging Option Default Description Name The name to be used for this pipeline log Enabled? true Logging parent pipelines only true Pipeline executed to capture logging the pipeline to process the logging information for this pipeline log Execute at the start of the pipeline? true Should this pipeline log be executed at the start of a pipeline run Execute at the end of the pipeline? false Should this pipeline log be executed at the end of a pipeline run Execute periodically during execution? true Should this pipeline log be executed periodically during a pipeline run Interval in seconds 30 if executed periodically, indicates the interval at which the pipeline log is executed","title":"Pipeline Log","component":"manual","version":"2.7.0","name":"pipeline-log","url":"/manual/latest/metadata-types/pipeline-log.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Samples","hash":"_samples","id":2},{"text":"Related Plugins","hash":"_related_plugins","id":3},{"text":"Options","hash":"_options","id":4}]},"68":{"id":68,"text":"The Pipeline Probe metadata type allows to stream output rows of a pipeline to another pipeline. This receiving pipeline can then process this data for e.g. data quality, data profiling, data lineage etc. The Pipeline Probe metadata type works by specifying a receiving pipeline (Pipeline executed to capture logging). This receiving pipeline is \"just another pipeline\" that takes a Pipeline Data Probe as the input transform. The receiving pipeline can then continue to process the probe data with all the functionality Apache Hop pipelines have to offer. Pipeline Probe Option Default Description Name The name to be used for this pipeline probe Enabled true Pipeline executed to capture logging the pipeline to process the data for this pipeline probe Capture output of the following transforms list of pipelines and transforms to capture logging for The samples project comes with a preconfigured data probe metadata item, a probing (receiving) pipeline and a source pipeline. pipeline probe: metadata perspective -→ pipeline probes -→ pipeline-probe-example probing (receiving) pipeline: ${PROJECT_HOME}/pipeline-probe/pipeline-probe-example.hpl source pipeline: ${PROJECT_HOME}/pipeline-probe/pipeline-probe-generate-fake-books.hpl To run this sample and see the pipeline probe in action, all it takes is to run the source pipeline ${PROJECT_HOME}/pipeline-probe/pipeline-probe-generate-fake-books.hpl. This pipeline will generate 10.000 lines of fake books data. The pipeline probe will read the last transform in the pipeline (dummy) and pass the data that flows through this transform to the receiving (probing) transform. The receiving (probing) pipeline (${PROJECT_HOME}/pipeline-probe/pipeline-probe-example.hpl) has a Pipeline Data Probe as input. This pipeline will then denormalize the received data to field, count the number of books per genre, sort the results and writes the final data out to a file (${PROJECT_HOME}/books-per-genre/probe-data.csv). After pipeline-probe-generate-fake-books.hpl finished, check the pipeline-probe/output folder in your samples project for the csv file that contains these results. You’ll find the data that was generated in ${PROJECT_HOME}/pipeline-probe/pipeline-probe-generate-fake-books.hpl, aggregated by book genre.","title":"Pipeline Probe","component":"manual","version":"2.7.0","name":"pipeline-probe","url":"/manual/latest/metadata-types/pipeline-probe.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"69":{"id":69,"text":"Describes how and with which engine a pipeline is to be executed. Pipelines can be executed on a variety of runtime engines. Check Pipeline Run Configurations for more details. None/All Option Description Name the name to be used for this pipeline run configuration Description the description to be used for this pipeline run configuration Execution information location The Execution Information Location to use with this pipeline run configuration. Execution data profile The Execution Data Profile to use with this pipeline run configuration. Engine Type The available pipeline engines are listed below. Detailed configuration depends on the selected engine. Beam DataFlow pipeline engine Beam Direct pipeline engine Beam Flink pipeline engine Beam Spark pipeline engine Hop local pipeline engine Hop remote pipeline engine Your Hop installation comes with a default 'local' pipeline run configuration.","title":"Pipeline Run Configuration","component":"manual","version":"2.7.0","name":"pipeline-run-config","url":"/manual/latest/metadata-types/pipeline-run-config.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"70":{"id":70,"text":"Describes a test for a pipeline. During the test, alternative data sets are used as input from a given transform and testing output against a golden data set. When the result set produced by the pipeline execution matches the expected result (golden data set), the test succeeds. If the generated results do not match what was expected, the test fails. Specific transforms in a pipeline can be bypassed or removed for testing for addtional flexibility. Additionally, unit tests can be executed in bulk. Check Pipeline Unit Testing^ for more details. None/All Option Default Description Name the name to use for this unit test Description the description to use for this unit test Type of test Development 'Development' or 'unit test' The pipeline to test the pipeline that will be tested by this unit test Test pipeline filename (Optional) Base test path (or use HOP_UNIT_TESTS_FOLDER) Select this test automatically false Replace a database connection with another List of database connections in the pipeline to test (Original DB) to replace by database connections in this unit test (Replacement DB) Variables list of variable names and values to use for this test None","title":"Pipeline Unit Test","component":"manual","version":"2.7.0","name":"pipeline-unit-test","url":"/manual/latest/metadata-types/pipeline-unit-test.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"71":{"id":71,"text":"Describes all the information needed to connect to a relational database. Hop supports tens of relational databases out of the box. If your specific database doesn’t have built in support, you’ll probably still be able to connect with the Generic database connection. Check the list of databases for more details. Actions: Check DB Connections Columns exist in table MS SQL Bulk Loader MySQL Bulk File MySQL Bulk Loader SQL Table Exists Truncate Tables Wait for SQL Transforms: Call DB Procedure Column Exists Combination Lookup/Update Database Join Database Lookup Dynamic SQL Row Execute SQL Row Insert/Update Oracle Bulk Loader PostgreSQL Bulk Loader Synchronize After Merge Table Compare Table Exists Table Input Table Output Teradata Bulk Loader Update The options describe below are for the Generic database connection. The options for your selected database depend on the database vendor and/or engine. Option Description Connection name the name to use for this connection Connection type the description to use for this connection Username Password Driver class classname to use for this connection. This is usually only needed for generic connections. There shouldn’t be a need to specify if your select a specific database engine. Manual Connection URL This is usually only needed for generic connections. There shouldn’t be a need to specify if your select a specific database engine. Option Default Description Supports the Boolean data type true Supports the Timestamp data type true Quote all identifiers in database Force all identifiers to lower case Force all identifiers to upper case Reserve case of reserved words? true The preferred schema name The SQL statements to run after connecting (; separated Specify a list of extra JDBC connection options as a parameter/value list. None","title":"Relational Database Connection","component":"manual","version":"2.7.0","name":"rdbms-connection","url":"/manual/latest/metadata-types/rdbms-connection.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Advanced","hash":"_advanced","id":5},{"text":"Options","hash":"_options_2","id":6},{"text":"Samples","hash":"_samples","id":7}]},"72":{"id":72,"text":"Describes a Splunk connection. Splunk Input Option Description Connection name the name to use for this splunk connection Hostname or IP address Port Username Password None","title":"Splunk Connection","component":"manual","version":"2.7.0","name":"splunk-connection","url":"/manual/latest/metadata-types/splunk-connection.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"73":{"id":73,"text":"Allows to log the activity of a workflow with a pipeline. A workflow log streams logging information from a running workflow to a pipeline. The only requirement for the receiving pipeline is that it starts with a Workflow Logging transform. Other than that, the logging pipeline is \"just another pipeline\". In this logging pipeline, you can process the logging information and e.g. write to a relational or NoSQL database, a Kafka topic etc The samples project comes with an example workflow log. Check the metadata perspective for the workflow log workflow-log-example. This workflow log is configured to send logging information for the workflow ${PROJECT_HOME}/reflection/generate-fake-books.hwf to the logging pipeline ${PROJECT_HOME}/reflection/workflow-log-example.hpl. Workflow Logging Option Default Description Name The name to be used for this workflow log Enabled? true Logging parent workflow only true Pipeline executed to capture logging the pipeline to process the logging information for this workflow log Execute at the start of the workflow? true Should this workflow log be executed at the start of a workflow run Execute at the end of the workflow? false Should this workflow log be executed at the end of a workflow run Execute periodically during execution? true Should this workflow log be executed periodically during a workflow run Interval in seconds 30 if executed periodically, indicates the interval at which the workflow log is executed","title":"Workflow Log","component":"manual","version":"2.7.0","name":"workflow-log","url":"/manual/latest/metadata-types/workflow-log.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Samples","hash":"_samples","id":2},{"text":"Related Plugins","hash":"_related_plugins","id":3},{"text":"Options","hash":"_options","id":4}]},"74":{"id":74,"text":"Describes how to run a workflow Workflows can be executed either locally or remotely. Check Workflow Run Configurations for more details. None/All actions Option Description Name the name to use for this workflow run configuration Description the description to use for this workflow run configuration Execution information location The Execution Information Location to use with this workflow run configuration. Workflow engine type Hop local workflow engine or Hop remote workflow engine Safe mode (default: false) In safe mode, Hop performs a number of data type and other validation before starting the workflow execution. Your Hop installation comes with a default 'local' workflow run configuration.","title":"Workflow Run Config","component":"manual","version":"2.7.0","name":"workflow-run-config","url":"/manual/latest/metadata-types/workflow-run-config.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Related Plugins","hash":"_related_plugins","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Samples","hash":"_samples","id":4}]},"75":{"id":75,"text":"Every workflow or pipeline you execute through Hop Gui or Hop Run and a lot of the other tools generate logging as logging text in the most obvious form. Hop allows data developers to influence how, where and at which level of detail logging information is generated and where it is written to. The amount of text logging generated depends on the logging level which is used when executing a workflow or pipeline: Level Description NOTHING No logging is generated ERROR Only errors are reported MINIMAL The bare essential, nothing more BASIC The standard logging which tries to be concise and informative DETAILED More logging information about what happens behind the scenes is reported DEBUG A lot of information is produced, often with specific values being reported ROWLEVEL Values are reported on an individual row level The logging level can be specified when executing using hop-run or in the Hop GUI. It is also possible to use the debug plugin to set custom logging levels on a transform: You can set a custom logging level for this particular transform and only for certain rows of data: You can do likewise for a workflow: The logging file of the Hop GUI is saved in the audit/ folder (or in the folder set by HOP_AUDIT_FOLDER) in the hopui.log file. If you want to send logging of tools like hop-run or hop-conf to a logging file you need to do this simply by piping the text stream to a file. The Write to log acction writes a specific string to the Hop logging system. Check the Write To Log page for more details. A pipeline log allows to log the activity of a pipeline with another pipeline. Check the pipeline log and logging reflection pages for more details. Allows to log the activity of a workflow with a pipeline. Check the workflow log and logging reflection pages for more details. Hop can write execution logs for workflows and pipelines to a Neo4j database. Check Neo4j Perspective page for more details. This transform writes information to the Hop logging system. Check the Write To Log page for more details. The external hop-plugins repository contains the Send information using syslog action and Send message to syslog transforms.","title":"Logging","component":"manual","version":"2.7.0","name":"logging-basics","url":"/manual/latest/logging/logging-basics.html","titles":[{"text":"Levels","hash":"_levels","id":1},{"text":"Descriptions","hash":"_descriptions","id":2},{"text":"Runtime levels","hash":"_runtime_levels","id":3},{"text":"Hop GUI logging","hash":"_hop_gui_logging","id":4},{"text":"Tools logging","hash":"_tools_logging","id":5},{"text":"Logging plugins","hash":"_logging_plugins","id":6},{"text":"Actions","hash":"_actions","id":7},{"text":"Write to log","hash":"_write_to_log","id":8},{"text":"Metadata Types","hash":"_metadata_types","id":9},{"text":"Pipeline Log","hash":"_pipeline_log","id":10},{"text":"Workflow Log","hash":"_workflow_log","id":11},{"text":"Perspectives","hash":"_perspectives","id":12},{"text":"Neo4j","hash":"_neo4j","id":13},{"text":"Transforms","hash":"_transforms","id":14},{"text":"Write to Log","hash":"_write_to_log_2","id":15},{"text":"External plugins","hash":"_external_plugins","id":16}]},"76":{"id":76,"text":"The Hop Reflection plugin adds easy ways for you to get more information about what’s going on inside your pipelines or workflows. It offers 3 main ways of reflecting on what’s going on during execution: Log pipeline and transform execution information Log workflow and action execution information Listen to what the output is of a particular transform You can have a pipeline and its transforms log what it’s doing by creating a new Pipeline Log metadata object. For each metadata object of this type you create Hop will execute a pipeline of your choice. It will pass runtime information of all your pipelines to it. These are the options: Option Description Name The name of the metadata object Enabled Use this to enable or disable pipeline logging for this object Logging parent pipelines only? If you enable this only the parent pipelines, executed by Hop Run, GUI, Server or API will be logged. When disabled every pipeline will be logged with the exclusion of logging and data probing pipelines obviously. Pipeline executed to capture logging The filename of the pipeline which will get executed every time a pipeline is executed. You can hit the new button and it will create a sample pipeline for you containing the Pipeline Logging transform which will give you all the possible logging information about your pipelines. Execute at the start of a pipeline? Execute right before a pipeline starts. The loggingPhase field of the Pipeline Logging transform will contain start at this time. Please note that there will not be any transform execution information yet during this phase. Execute at the end of a pipeline? Execute after the pipeline finished execution. The loggingPhase field of the Pipeline Logging transform will contain end at this time. Execute periodically during execution? Enable this flag if you want to be kept apprised of long-running pipelines. The logging pipeline specified above will be called at regular intervals. The loggingPhase field of the Pipeline Logging transform will contain interval at this time. Interval in seconds The interval of the period execution of the logging pipeline The Pipeline Logging transform only has one option at this time: Also log transform details : besides information about a running pipeline it will give you a series of fields detailed below per running or finished transform copy. Field Type Level Description loggingDate Date Pipeline Logging date loggingPhase String Pipeline Logging phase (see above) pipelineName String Pipeline Name of the pipeline pipelineFilename String Pipeline Filename of the pipeline pipelineStart Date Pipeline Start date of the pipeline pipelineEnd Date Pipeline End date of the pipeline pipelineLogChannelId String Pipeline Pipeline log channel ID parentLogChannelId String Pipeline Parent log channel ID pipelineLogging String Pipeline Logging text of the pipeline pipelineErrorCount Integer Pipeline Number of errors pipelineStatusDescription String Pipeline Pipeline status description transformName String Transform Name of the transform transformCopyNr Integer Transform Copy number of the transform transformStatusDescription String Transform Transform status description transformLogChannelId String Transform Transform log channel ID transformLoggingText String Transform Transform logging text transformLinesRead Integer Transform Number of lines read transformLinesWritten Integer Transform Number of lines written transformLinesInput Integer Transform Number of lines input transformLinesOutput Integer Transform Number of lines output transformLinesUpdated Integer Transform Number of lines updated transformLinesRejected Integer Transform Number of lines rejected by error handling transformErrors Integer Transform Number of errors transformStart Date Transform Execution start transformEnd Date Transform Execution end transformDuration Integer Transform Execution duration in ms You can have a workflow and its actions log what it’s doing by creating a new Workflow Log metadata object. For each metadata object of this type you create Hop will execute a pipeline of your choice. It will pass runtime information of all your workflows to it. These are the options: Option Description Name The name of the metadata object Enabled Use this to enable or disable workflow logging for this object Logging parent workflows only? If you enable this only the parent pipelines, executed by Hop Run, GUI, Server or API will be logged. When disabled every workflow execution will be logged. Pipeline executed to capture logging The filename of the pipeline which will get executed every time a workflow is executed. You can hit the new button and it will create a sample pipeline for you containing the Workflow Logging transform which will give you all the possible logging information about your workflows. Execute at the start of a workflow? Execute right before a workflow starts. The loggingPhase field of the Workflow Logging transform will contain start at this time. Execute at the end of a workflow? Execute after the workflow finished execution. The loggingPhase field of the Workflow Logging transform will contain end at this time. Execute periodically during execution? Enable this flag if you want to be kept apprised of long-running workflows. The logging pipeline specified above will be called at regular intervals. The loggingPhase field of the Workflow Logging transform will contain interval at this time. Interval in seconds The interval of the period execution of the logging pipeline The Workflow Logging transform only has one option at this time: Also log action details : besides information about a running workflow it will give you a series of fields detailed below per running or finished action. Field Type Level Description loggingDate Date Workflow Logging date loggingPhase String Workflow Logging phase (see above) workflowName String Workflow Workflow name workflowFilename String Workflow Workflow filename workflowStart Date Workflow Execution start workflowEnd Date Workflow Execution end workflowLogChannelId String Workflow Workflow log channel ID workflowParentLogChannelId String Workflow Parent log channel ID workflowLogging String Workflow Logging text of the workflow workflowErrorCount Integer Workflow Number of errors workflowStatusDescription String Workflow Workflow status description actionName String Action Action name actionNr Integer Action Action number actionResult Boolean Action Result (true/false) actionLogChannelId String Action Log channel ID of the action actionLoggingText String Action Logging text of the action actionErrors Integer Action Number of errors actionLogDate Date Action Action logging date actionDuration Integer Action Action duration actionExitStatus Integer Action Action exit status (of shell scripts) actionNrFilesRetrieved Integer Action Number of files retrieved (from remote systems) actionFilename String Action The filename of the action (if there is any referenced) actionComment String Action Action comment actionReason String Action Action reason You can have the output of one or more pipeline transforms streamed to another pipeline in a normalized fashion. You can do this by creating a Pipeline Probe metadata object. These are its options: Option Description Name The name of the pipeline probe Enabled When enabled data from all the specified pipeline transforms will be streamed to the specified pipeline Pipeline executed to capture data The filename of the pipeline which will get executed every time a specified source pipeline is execute containing the specified source transform. Capture output of the following transforms You can specify a set of source pipeline and source transform combinations. Please note that to add capture sources you can use a transform action called Add data probe in the Preview section of the context dialog. Field name Type Description sourcePipelineName String THe name of the pipeline where this data originates sourceTransformLogChannelId String The log channel ID of the source transform sourceTransformName String The name of the source transform sourceTransformCopy Integer The copy number of the source transform rowNr Integer The source row number. You have one or more fields per source row. fieldName String The field name fieldType String The field type fieldFormat String The field format fieldLength Integer The field length fieldPrecision Integer The field precision value String The value in String format","title":"Reflection","component":"manual","version":"2.7.0","name":"logging-reflection","url":"/manual/latest/logging/logging-reflection.html","titles":[{"text":"Pipeline Log","hash":"_pipeline_log","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Transform","hash":"_transform","id":3},{"text":"Workflow Log","hash":"_workflow_log","id":4},{"text":"Options","hash":"_options_2","id":5},{"text":"Transform","hash":"_transform_2","id":6},{"text":"Pipeline Probe","hash":"_pipeline_probe","id":7},{"text":"Options","hash":"_options_3","id":8},{"text":"Transform","hash":"_transform_3","id":9}]},"77":{"id":77,"text":"Hop provides password obfuscation as a way to prevent storing passwords as clear text. Obfuscation is the deliberate act of creating source or machine code that is difficult for humans to understand[1]. With obfuscated passwords, Hop provides a way to store passwords in a way the makes them hard (but not impossible!) to read. Obfuscated passwords are read by Hop and are converted to the original password as late as possible (e.g. to pass to a database when creating a connection). Obfuscate passwords are stored in Hop metadata with the 'Encrypted' prefix. The example below shows a database connection with an obfuscated password 'abcd. { \"rdbms\": { \"POSTGRESQL\": { \"databaseName\": \"DBNAME\", \"pluginId\": \"POSTGRESQL\", \"indexTablespace\": \"\", \"dataTablespace\": \"\", \"accessType\": 0, \"hostname\": \"localhost\", \"password\": \"Encrypted 2be98afc86aa7f2e4cb79ce10df90acde\", \"port\": \"5432\", \"pluginName\": \"PostgreSQL\", \"servername\": \"\", \"attributes\": {}, \"username\": \"dbuser\" } }, \"name\": \"DBCONN\" } Obfuscated passwords for Hop Server can be stored in the server’s .pwd file. In the example below, Hop’s default server hop.pwd contains the username 'cluster' and the default obfuscated passowrd 'cluster' , with the 'OBF:' prefix. cluster: OBF:1v8w1uh21z7k1ym71z7i1ugo1v9q,default Check Hop Encrypt for more information on how to obfuscate or encrypt password for use in Hop or Hop Server. Password handling in Hop can be implemented as plugins. The following plugin implementations are available: AES Two Way Password Encoder","title":"Passwords and Password Plugins","component":"manual","version":"2.7.0","name":"passwords","url":"/manual/latest/password/passwords.html","titles":[{"text":"Password obfuscation in Hop","hash":"_password_obfuscation_in_hop","id":1},{"text":"Password obfuscation in Hop Server","hash":"_password_obfuscation_in_hop_server","id":2},{"text":"Password Encryption (Obfuscation) with Hop Encrypt","hash":"_password_encryption_obfuscation_with_hop_encrypt","id":3},{"text":"Password plugins","hash":"_password_plugins","id":4}]},"78":{"id":78,"text":"Pipelines are the fundamental building blocks of your Hop projects. Pipelines perform the heavy lifting: they read data from a variety of sources, perform a number of operations (combine, clean, enrich, transform etc) and write the data out to some target platform. A pipeline executes all of these operations in a predefined order and in parallel. In the image below, a very simple pipeline reads data from a database, adds a message to the data and sends out an email. All of these operations are executed in a predefined order (read from the database, add the message, send the mail) and in parallel. The pipelines executes these transforms, Imagine our database table or query contains thousands of rows. The pipeline will start reading results from the query, pass those on to the 'Add message' transform. Once the message has been added, we’ll send a mail from the Mail transform. All of these will operate in parallel, so the Mail transform will already be sending mails while the table input is still reading records from the table or query. Pipelines consist of transforms connected by hops. In the mail example 'Table input', 'Add message' and 'Mail' are all transforms. transforms are the basic operations in your pipeline. A pipeline typically consists of a lot of transforms that are chained together by hops. Transforms are granular, in the sense that each transform is designed and optimized to perform one and only one task. Although one transform by itself may not offer spectacular functionality, the combination of all transforms in a pipeline is makes your pipelines powerful. hops link transforms together. When a transform finishes processing the data set it received, that data set is passed to the next transform through a hop. Hops are uni-directional (data can’t flow backwards). Hops only buffer and pass data around, the hop itself is transform-agnostic, it doesn’t know anything about the transforms it passes data from or to. Some transforms can read from or write to other transforms conditionally to or from a number of other transforms, but this a transform-specific configuration. The hop is unaware of it. Hops can be disabled by clicking on them, or through right-click → disable. Create a new pipeline through the work item dialog. You’ll be presented with the dialog shown below. When you are finished with your pipeline, save it. This can be done via the File menu, the icons or using CTLR s or Command s. For new pipelines a file browser is displayed to navigate towards the location you want to store the file. Click anywhere in the pipeline canvas, the area where you’ll see the image below. Upon clicking, you’ll be presented with the dialog shown below. The search box at the top of this dialog works for transform, name, tags (TODO) etc. Once you’ve found the transform you’re looking for, click on it to add it to your pipeline. An alternative to clicking is arrow key navigation + enter. Repeat this step now or whenever you want to add more transforms to your pipeline. Once you’ve added a transform to your pipeline, you can drag to reposition it. Check the list of transforms to add to your pipeline for more details. Add a 'Generate Rows' and a 'Add Sequence' transform, and your pipeline should like the one below. The transform object can be configured through a single click on the object. The menu displayed below will be shown based on your transform object. Action Description Detach transform Detach the transform from the pipeline Edit the transform Edit the transform’s metadata Copy transform to clipboard Copies selected items to clipboard. Create hop Creates a new hop between two transforms. Set the number of transforms Starts several instances of a transform in parallel. Preview output Allows you to preview the results of the transform. Debug output Show the fields entering this transform Shows metadata, like the field name and type for fields coming into the transform. Show the fields exiting this transform Shows metadata, like the field name and type for fields coming out of the transform. Distribute rows In case of more than one hop the data is distributed between the next transforms. Copy rows In case of more than one hop the daya is copied to the next transforms. Specify transform partitioning Specify how rows of data need to be grouped into partitions allowing parallel execution where similar rows need to end up on the same transform copy Edit transform description Add a description to the transform. Transform error handling Set the error handling for the transform, not available for all transforms. Delete this transform Delete selected transform from the canvas. Edit Custom Logging Edit the custom log settings for this transform. This will change the log level used for this transform. Clear Custom Logging Clear custom log settings. This will clear the log level used for this transform. Sniff output Take a look at 50 rows coming out of this transform. This will show a real-time table with a continuous output of the selected transform. Set input data set Defines which data to use instead of the active input transform, applies to the selected unit test Clear input data set Remove a defined data set from the selected unit test Set golden data set The input to this transform is taken and compared to the golden data set you are selecting.\\nThe transform itself is not executed during testing Clear golden data set Remove a defined input data set from this transform unit test Create data set Create an empty dataset with the output fields of this transform Write rows to data set Run the current pipeline and write the data to a data set Remove from test When this unit test is run, do not include this transform Include in test Run the current pipeline and write the data to a data set Bypass in tess When this unit test is run, bypass this transform (replace with a dummy) Remove bypass in test Do not bypass this transform in the current pipeline during testing There are a number of ways to create a hop: shift-drag: while holding down the shift key on your keyboard. Click on a transform, while holding down your primary mouse button, drag to the second transform. Release the primary mouse button and the shift key. scroll-drag: scroll-click on a transform , while holding down your mouse’s scroll button, drag to the second transform. Release the scroll button. click on a transform in your pipeline to open the 'click anywhere' dialog. Click the 'Create hop' image::getting-started/icons/HOP.svg[Create hop, 25px, align=\"bottom\"] button and select the transform you want to create the hop to. Some transforms result in different types of hops. Hop Description Result is TRUE Specifies that the transform will be executed only when the result from the previous transform is true Result is FALSE pecifies that the transform will be executed only when the result from the previous transform is false Main output of transform The default hop between two transforms Pipeline properties are a collection of properties that describe the pipeline and configure its behavior. The properties dialog can be opened by double clicking on the pipeline canvas. Following properties can be configured: Pipeline Parameters Monitoring The Pipeline tab allows you to specify general properties about the pipeline including: Property Description Pipeline name The name of the pipeline Synchronize name with filename If option is enabled the filename and pipeline name are synchronized. Pipeline filename The filename of the pipeline Description Short description of the pipeline Extended description Long extended description of the pipeline Status Draft or production status Version Description of the version Created by Displays the original creator of the pipeline Created at Displays the date and time when the pipeline was created. Last modified by Displays the last user that modified the pipeline Last modified at Displays the date and time when the pipeline was last modified. The parameters tab allows you to specify parameters specific for the pipeline. Parameters are defined by a name, a default value and a description. The monitoring tab allows you to specify the monitoring of the pipeline. The options to set in this tab are: Property Description Type Enable transform performance monitoring Enable performance monitoring for the transforms in this pipeline boolean Transform performance measurement interval (ms) The interval (milliseconds) to monitor the performance for the transforms in this pipeline integer Maximum number of snapshots in memory the number of performance monitoring snapshots to keep in memory for the transforms in this pipeline integer","title":"Create a Pipeline","component":"manual","version":"2.7.0","name":"create-pipeline","url":"/manual/latest/pipeline/create-pipeline.html","titles":[{"text":"How pipelines work","hash":"_how_pipelines_work","id":1},{"text":"Concepts","hash":"_concepts","id":2},{"text":"Create a pipeline","hash":"_create_a_pipeline","id":3},{"text":"Add Transform to your pipelines","hash":"_add_transform_to_your_pipelines","id":4},{"text":"Add a Hop between transforms","hash":"_add_a_hop_between_transforms","id":5},{"text":"Pipeline properties","hash":"_pipeline_properties","id":6}]},"79":{"id":79,"text":"When a major failure occurs in one of the transforms, the pipeline is notified and halts all active operations. This is fine in most cases, pipeline failures are typically handled in the parent workflow (check the create workflow page to learn about error hops in workflows). In some cases however, there are errors you’ll want to handle gracefully without halting the entire pipeline. In these cases where you don’t want your pipeline to fail when an error occurs, Hop pipelines support error handling on transforms and hops. When you create a hop from a transform that supports error handling to another transform, the Hop pipeline editor will ask you if you want to create a hop for the main output or for the error handling of your transform. If you choose to create an error handling transform, the hop will be shown in red instead of the default black (or white, if you’re in dark mode). For each transform that supports error handling, there are a number of options you can configure. Click on the transform icon to open the context dialog and selected the 'Error handling' icon. In the error handling dialog, you can specify additional fields that will be added to your pipeline stream. The available options are: option description target transform the transform that will receive the error information enable the error handling enable error handling from this transform nr of errors fieldname the nummer of errors that occurred in the pipeline error description fieldname fieldname to contain the error description error fields fieldname the pipeline field where an error occurred error codes fieldname the error code for the error that occurred max nr errors allowed max number of errors allowed before the pipeline fails. max % errors allowed (empty = 100%) the percentage of errors that is allowed before the pipeline fails min nr of rows to read before doing % evaluation number of rows to read before doing the percentage evaluation. These rows will be taken into account in the evaluation, but the evaluation will only be performed once the specified number of rows has been processed. An example output when trying to cast an invalid date string to a date is shown below.","title":"","component":"manual","version":"2.7.0","name":"errorhandling","url":"/manual/latest/pipeline/errorhandling.html","titles":[{"text":"Pipeline Error Handling","hash":"PipelineErrorHandling","id":1}]},"80":{"id":80,"text":"You learned to create a pipeline in Create a Pipeline. You’ll perform a lot of operations on the pipeline canvas, but a lot of additional functionality is available from the pipeline editor’s main toolbar. There are two other important toolbars to work with unit tests and projects and environments. Check the respective pages to learn more about managing your projects and environments and to learn how to write unit tests for your pipelines. Let’s walk through the top toolbar: Action Icon Description run start the execution of the pipeline pause pause the execution of the pipeline stop stop the execution of the pipeline preview preview the pipeline debug debug the pipeline print print the pipeline undo undo an operation redo redo an operation align align the specified (selected) transforms to the specified grid size align left align the selected transforms with left-most selected transform in the selection align right align the selected transforms with right-most selected transform in the selection align top align the selected transforms with top-most selected transform in the selection align bottom align the selected transforms with bottom-most selected transform in the selection distribute horizontally Distribute the selected transforms evenly between the left-most and right-most transform in your selection distribute vertically Distribute the selected transforms evenly between the top-most and bottom-most transform in your selection","title":"","component":"manual","version":"2.7.0","name":"hop-pipeline-editor","url":"/manual/latest/pipeline/hop-pipeline-editor.html","titles":[{"text":"Toolbar","hash":"HopPipelineEditor","id":1}]},"81":{"id":81,"text":"Metadata is at the very core of everything in Apache Hop. When you develop a pipeline, the transforms with all of the configuration options, the hops between those transforms and the pipeline run configuration you use to run the pipeline are all metadata items. There are use cases where you’ll find yourself creating different variations of what is basically the same pipeline. Consider this simple pipeline as an example: you need to load transaction data values from a supplier, filter out some specific values, and output everything to a file. The process is always the same, the only difference is the different file layouts, maybe different values to filter out, and the output file. Metadata injection can make this process a lot easier by taking the metadata for this pipeline from various sources and inject it into a template pipeline at runtime. After injection, Apache Hop has an in-memory pipeline that is configured for the exact metadata you need for this run. Instead of one pipeline per supplier, you’ll only need one template pipeline and one injecting pipeline. This significantly reduces the number of files to maintain, the number of repetitive tasks and thus increases stability maintainability of your project. the sample below is available from the metadata-injection folder in the samples project. The template pipeline is an empty pipeline that contains all the necessary transforms and hops for the flow of the pipeline, but none of the configuration. The injecting pipeline is a standard pipeline that gathers and prepares all of the required metadata to run the template pipeline through the ETL Metadata Injection transform. The Metadata Injection transform reads the template pipeline and lets you map fields from the injecting pipeline to target fields in the transforms in the template pipelines. Here’s what happens in the example below: read customer metadata parses a sample file and reads its file layout. The various items of the detected file layout are injected in the fields for read customer data in the template pipeline. static filename, format provides the file name and file format from a data grid. rename fields provides the original names and new names for fields that will be injected into the cast dates Select Values transform in the template pipeline. zips per state provides all of the required information to configure nb zip codes per state the Memory Group By transform in the template pipeline In addition to the injection explained above, the sort state Sort Rows transform etc are configured by information (metadata) that was already provided to the metadata injection transform. Additionally, the metadata injection can be configured to provide static (hard-coded) values to the template pipeline. The ETL Metadata Injection transform overrules the default behavior for pipelines: not all incoming streams need to have the same layout. It is perfectly ok to provide input to the metadata injection transform from different streams with different layouts. The ETL Metadata Injection transform generates and executes a generated pipeline with the injected metadata by default. This may be one too many levels of abstraction when you’re debugging or troubleshooting pipelines that use metadata injection. This default behavior can be overruled from the Options tab: Optional target file (hpl after injection) Run resulting pipeline Disabling the run resulting pipeline and providing a filename for the injected pipelines to be written to lets you open and troubleshoot the generated pipelines as you would with any other pipeline. This can make troubelshooting metadata injection significantly more productive. We recommend the following basic procedure for using this transform to inject metadata: Optimize your data for injection, such as preparing folder structures and inputs. Develop pipelines for the repetitive process (the template pipeline), for metadata injection through the ETL Metadata Injection transform, and for handling multiple inputs. The metadata is injected into the template pipeline through any transform that supports metadata injection. The goal is to add Metadata Injection support to all transforms, The current status is: Details Transform Supports MDI Abort Y Add a checksum Y Add constants Y Add sequence Y Add value fields changing sequence Y Add XML Y Analytic query Y Apache Tika Y Append streams Y Avro Decode Y Avro Encode Y Avro File Input Y Avro File Output Y Azure Event Hubs Listener Y Azure Event Hubs Writer Y Beam BigQuery Input Y Beam BigQuery Output Y Beam Bigtable Input Y Beam Bigtable Output Y Beam File Input Y Beam File Output Y Beam GCP Pub/Sub : Publish Y Beam GCP Pub/Sub : Subscribe Y Beam Kafka Consume Y Beam Kafka Produce Y Beam Kinesis Consume Y Beam Kinesis Produce Y Beam Timestamp Y Beam Window Y Block until transforms finish Y Blocking transform Y Calculator Y Call DB procedure Y Cassandra input Y Cassandra output Y Change file encoding Y Check if file is locked Y Check if webservice is available Y Clone row Y Closure generator Y Coalesce Fields Y Column exists Y Combination lookup/update Y Concat Fields Y Copy rows to result N Credit card validator Y CSV file input Y Data grid Y Database join Y Database lookup Y De-serialize from file Y Delay row Y Delete Y Detect empty stream N Dimension lookup/update Y Doris bulk loader Y Dummy (do nothing) N Dynamic SQL row Y EDI to XML Y Email messages input N Enhanced JSON Output Y ETL metadata injection Y Execute a process Y Execute row SQL script Y Execute SQL script Y Execute Unit Tests N Execution Information Y Fake data Y File exists Y File Metadata Y Filter rows Y Formula Y Fuzzy match Y Generate random value Y Generate rows Y Get data from XML N Get file names Y Get files from result N Get files rows count Y Get Neo4j Logging Info Y Get records from stream N Get rows from result N Get Server Status Y Get subfolder names Y Get system info Y Get table names Y Get variables Y Group by Y HTTP client N HTTP post Y Identify last row in a stream Y If Null Y Injector Y Insert / update Y Java filter Y JavaScript Y Join rows (cartesian product) Y JSON input Y JSON output Y Kafka Consumer Y Kafka Producer Y LDAP input N LDAP output N Load file content in memory N Mail N Mapping Input Y Mapping Output N Memory group by Y Merge join Y Merge rows (diff) Y Metadata Input Y Metadata structure of stream Y Microsoft Access output Y Microsoft Excel input Y Microsoft Excel writer Y MonetDB bulk loader Y MongoDB Delete Y MongoDB input Y MongoDB output Y Multiway merge join Y Neo4j Cypher Y Neo4j Cypher Builder Y Neo4j Generate CSVs N Neo4j Graph Output Y Neo4j Import Y Neo4J Output Y Neo4j Split Graph N Null if Y Number range Y Parquet File Input Y Parquet File Output Y PGP decrypt stream N PGP encrypt stream N Pipeline executor Y Pipeline Logging Y Pipeline Probe Y PostgreSQL Bulk Loader Y Process files Y Properties input Y Properties output N Regex evaluation N Replace in string Y Reservoir sampling Y REST client N Row denormaliser Y Row flattener Y Row normaliser Y Rules accumulator Y Rules executor Y Run SSH commands Y Salesforce delete N Salesforce input Y Salesforce insert N Salesforce update N Salesforce upsert N Sample rows N SAS Input N Select values Y Serialize to file Y Set field value Y Set field value to a constant Y Set files in result Y Set variables N Simple Mapping Y Snowflake Bulk Loader Y Sort rows Y Sorted merge Y Split field to rows Y Split fields Y Splunk Input Y SQL file output N SSTable output Y Standardize phone number Y Stream lookup Y Stream Schema Merge N String operations Y Strings cut Y Switch / case Y Synchronize after merge Y Table compare Y Table exists Y Table input Y Table output Y Teradata Fastload bulk loader N Text file input Y Text file input (deprecated) N Text file output Y Token Replacement Y Unique rows Y Unique rows (HashSet) N Update Y User defined Java class Y User defined Java expression Y Value mapper Y Web services lookup N Workflow executor N Workflow Logging Y Write to log N XML input stream (StAX) N XML join Y XML output Y XSD validator N XSL Transformation N YAML input N Zip file Y","title":"Metadata Injection","component":"manual","version":"2.7.0","name":"metadata-injection","url":"/manual/latest/pipeline/metadata-injection.html","titles":[{"text":"What is metadata injection?","hash":"_what_is_metadata_injection","id":1},{"text":"How metadata injection works","hash":"_how_metadata_injection_works","id":2},{"text":"Metadata Injection Debugging and Troubleshooting","hash":"_metadata_injection_debugging_and_troubleshooting","id":3},{"text":"Metadata Injection recommendations","hash":"_metadata_injection_recommendations","id":4},{"text":"Supported Transforms","hash":"_supported_transforms","id":5}]},"82":{"id":82,"text":"Partitioning allows you to distribute all the data from a set into distinct subsets according to the rule applied on a table or row, where these subsets form a partition of the original set with no item replicated into multiple groups. Partitioning data is an important feature to scale your Hop pipelines up and out. Scaling up makes the most of a single server with multiple CPU cores, while scaling out maximizes the resources of multiple servers operating in parallel. By default, each transform in a pipeline is executed in parallel in a single separate thread. Consider, for example, the pipeline below. With a single copy of each transform, the data is read from the CSV file input transform and then aggregated in the count by state transform. The results of which can be verified by examining the preview data. To take advantage of the processing resources in your run configuration, you can scale up the pipeline using the multi-threading option Change Number of Copies to Start to produce multiple copies of the transform (click the transform’s icon to open the context dialog and select 'Specify copies' in the 'Data routing' category). As shown below, the x2 notation indicates that two copies will be started at runtime. By default, this data movement from the CSV file input transform into the count by state transform will be performed in round-robin order. This means that if there are 'N' copies, the first copy gets the first row, the second copy gets the second row, and the Nth copy receives the Nth row. Row N+1 goes to the first copy again, and so on until there are no more rows to distribute. Reading the data from the CSV file is done in parallel. Attempting to aggregate in parallel, however, produces incorrect results because the rows are split arbitrarily (without a specific rule) over the two copies of the count by state aggregation transform, as shown in the preview data. Data distribution in the transforms is shown in the following table. As you can see, the CSV file input transform divides the work between two transform copies and each copy reads 5000 rows of data. However, these 2 transform copies also need to make sure that the rows end up on the correct count by state transform copy where they arrive in a 5004/4996 split. Because of that, it is a general rule that the transform performing the repartitioning (row redistribution) of the data (a non-partitioned transform before a partitioned one) has internal buffers from every source transform copy to every target transform copy, as shown below. This is where partitioning data becomes a useful concept, as it applies specific rule-based direction for aggregation, directing rows from the same state to the same transform copy, so that the rows are not split arbitrarily. In the example below, a partition schema called State was applied to the count by state transform and the Remainder of division partitioning rule was applied to the State field. Now, the count by state aggregation transform produces consistent correct results because the rows were split up according to the partition schema and rule, as shown in the preview data. The Table output transform supports partitioning rows of data to different tables. When configured to accept the table name from a Partitioning field, the PDI client will output the rows to the appropriate table. You can also Partition data per month or Partition data per day. To ensure that all the necessary tables exist, we recommend creating them in a separate pipeline. The partitioning method you use can be based on any criteria, can include no rule (round-robin row distribution), or can be created using a partitioning method plugin. The idea is to establish a criterion by which to partition the data, so that resulting storage and processing groups are logically independent from each other. Step One: setup the partition schema: First, configure a partition schema. A partition schema defines how many ways the row stream will be split. The names used for the partitions can be anything you like. Next, apply the partition schema to the Group By transform. By applying a partition schema to a transform, a matching set of transform copies is started automatically (for example, if applying a partition schema with three partitions, three transform copies are launched). Step Two: select the partitioning method: Establish the partitioning method for the transform, which defines the rule for row distribution across the copies. The Remainder of division rule allows rows with the same state value to be sent to the same transform copy and the distribution of similar rows among the transforms. If the modulo is calculated on a non-integer value, the Apache Hop client calculates the modulo on a checksum created from the String, Date, and Number value. When you run the pipeline, there are no guarantees as to which page name goes to which transform copy, only that any page name encountered is consistently forwarded to the same transform copy. When a partitioned transform passes data to another partitioned transform with the same partition schema, the data is kept in swimlanes because no repartitioning needs to be done. As illustrated below, no extra buffers (row sets) are allocated between the copies of transforms count by state and Replace in string. The transform copies remain isolated from one another and the rows of data travel in swimlanes. No extra work needs to be done to keep the data partitioned, so you can chain as many partitioned transforms as needed. This will internally be executed as shown in the following illustration. When you use partitioning, the logic used for distribution, repartitioning, and buffer allocations will be dependent upon the following rules: A partitioned transform causes one transform copy to be executed per partition in the partition schema. When a transform needs to repartition the data, the transform creates buffers (row sets) from each source transform copy to each target transform copy (partition). When rows of data pass from a non-partitioned transform to a partitioned one, data is repartitioned and extra buffers are allocated. When rows of data, partitioned with the same partition schema, pass from a partitioned transform to another partitioned transform, data is not repartitioned. When rows of data, partitioned with a different partition schema, pass from a partitioned transform to another partitioned transform, data is repartitioned.","title":"Partitioning","component":"manual","version":"2.7.0","name":"partitioning","url":"/manual/latest/pipeline/partitioning.html","titles":[{"text":"Data Partitioning During Processing","hash":"_data_partitioning_during_processing","id":1},{"text":"Understand repartitioning logic","hash":"_understand_repartitioning_logic","id":2},{"text":"Partitioning data over tables","hash":"_partitioning_data_over_tables","id":3},{"text":"Use partitioning","hash":"_use_partitioning","id":4},{"text":"Use data swimlanes","hash":"_use_data_swimlanes","id":5},{"text":"Rules for partitioning","hash":"_rules_for_partitioning","id":6}]},"83":{"id":83,"text":"Hop pipelines manipulate data coming from a variety of data sources, reading input and producing output. Hop unit tests simulate inputs in the form of Input data sets and validates output against Golden data sets. A unit test is a combination of zero or more input sets and golden data sets along with a bunch of tweaks you can do to the pipelines prior to testing. Hop pipelines allow Hop developers to work test-driven, but also allow to perform regression testing, to make sure that old issues that were once fixed remain fixed. Hop unit tests can speed up development in a number of cases: pipelines without design time input: mappings, single threader, …​ when input data doesn’t exist yet, is in development, or where there is no direct access to the source system. When it takes a long time to get to input data, long running queries, …​ Please note that you can flag a unit test to be opened and selected automatically when a pipeline is loaded in Hop Gui. Hop uses the following concepts (metadata objects) to work with pipeline unit tests: Data set : A set of rows with a certain layout, stored in a CSV data set. When used as input we call it an input data set. When used to validate a transform’s output we call it a golden data set. Unit test tweak: the ability to remove or bypass a transform during a test Unit test: The combination of input data sets, golden data sets, tweaks and a pipeline. You can have 0, 1 or more input or golden data sets defined in a unit test. You can have multiple unit tests defined per pipeline. a default data set folder can be specified in the project dialog. Check the 'Data Sets CSV Folder (HOP_DATASETS_FOLDER)'. By default, the value for the ${HOP_DATASETS_FOLDER} variable is set to ${PROJECT_HOME}/datasets. When a pipeline is executed in Hop Gui and a unit test is selected the following happens: all transforms marked with an input data set are replaced with an Injector transform all transforms marked with a golden data set are replaced with a dummy transform (does nothing). all transforms marked with a \"Bypass\" tweak are replaced with a dummy. all transforms marked with a \"Remove\" tweak are removed These operations take place on a copy of the pipeline, in memory only unless you specify a hpl file location in the unit test dialog. After execution, transform output is validated against golden data and logged. In case of errors in the test, a dialog will pop up when running in Hop Gui. The 'Unit Testing' category in the transform context dialog (click on transform icon to open) contains the available unit testing options: Set input data set: For the active unit test, it defines which data set to use instead of the output of the transform Clear input data set: Remove a defined input data set from this transform unit test Set golden data set: The input to this transform is taken and compared to the golden data set you are selecting. Clear golden data set: Remove a defined input data set for this transform unit test Create data set: Create an empty data set with the output fields of this transform Write rows to data set: Run the current pipeline and write the data to a data set Remove from test: When this unit test is run, do not include this transform Include in test: Run the current pipeline and write the data to a data set Bypass in test: When this unit test is run, bypass this transform (replace with a dummy) Remove bypass in test: Do not bypass this transform in the current pipeline during testing creating data sets is also possible from the 'New' context menu or metadata perspective. Consider the following basic pipeline below. This pipeline reads data from a csv file, extracts the years from a date of birth, counts rows by this year, sorts and writes out to a file. We’ll use this example to create a test to verify the output of the pipeline is what we expected. Click the '+' icon (highlighted) in the unit testing toolbar to create a new unit test. Previously created unit tests will be available from the dropdown box for editing. The options in this dialog are: Name name to use for this unit test Description a description for this unit test Type of test 'Unit test' or 'Development' The pipeline to test the pipeline this test applies to. By default, you should see the active pipeline filename here. Test pipeline filename (Optional) the filename to use for this unit test. Base test path (or use HOP_UNIT_TESTS_FOLDER) the folder to store this unit test to. Select this test automatically default: false Replace a database connection with another specify a list of database connections for this pipeline that you’d like to swap out for a test-specific connection. Variables a list of variables to use in testing. You’ll get a popup dialog Do you want to use this unit test for the active pipeline '?'. Since we’re creating a unit test for the active pipeline in this example, confirming is fine. Click on the 'read customers' transform icon to open the context dialog, click 'Create data set'. The popup dialog already shows the field layout in the bottom half of the dialog. Give the data set a name and file name. Do the same for the output transform you’ll want to check the data for ('customers by year out' in the example). check the metadata perspective. You should now have two data sets available. To write data to the newly created data sets, click the 'read customers' transform icon again, click 'Write rows to data set'. You’ll get a popup dialog asking you to select the data set, followed by a dialog where you can map transform output fields to data set fields. For this example, just click 'guess'. Repeat for the 'customer by year out' transform and data set. Click the 'read customers' transform icon again, select 'set input data set'. Select the data set and accept the sort order. Repeat for 'customers by year out', but use 'Set golden data set'. Your pipeline now has two new indicators for ths input and output data set. If the pipeline runs with all tests passed, you’ll receive a notification in the logs: 2021/04/21 21:16:43 - get year.0 - Finished processing (I=0, O=0, R=10000, W=10000, U=0, E=0) 2021/04/21 21:16:43 - count by year.0 - Finished processing (I=0, O=0, R=10000, W=22, U=0, E=0) 2021/04/21 21:16:43 - sort by year.0 - Finished processing (I=0, O=0, R=22, W=22, U=0, E=0) 2021/04/21 21:16:43 - customers by year out.0 - Finished processing (I=0, O=0, R=22, W=22, U=0, E=0) 2021/04/21 21:16:43 - read-customers - Unit test 'read-customers UNIT' passed succesfully 2021/04/21 21:16:43 - read-customers - ---------------------------------------------- 2021/04/21 21:16:43 - read-customers - customers by year out - customers-by-year : Test passed succesfully against golden data set 2021/04/21 21:16:43 - read-customers - Test passed succesfully against unit test 2021/04/21 21:16:43 - read-customers - ---------------------------------------------- 2021/04/21 21:16:43 - read-customers - Pipeline duration : 0.108 seconds [ 0.108 ] 2021/04/21 21:16:43 - read-customers - Execution finished on a local pipeline engine with run configuration 'local' If changes to the pipeline cause the test to fail, a popup will be shown for the failed rows. In the example below, the number of rows for the year 1990 was changed from 486 to 487, causing the test to fail: While successful test show 'Test passed succesfully against golden data set' and 'Test passed succesfully against unit test', failed unit tests may show one of the error messages listed below: Incorrect number of rows received from transform, golden data set has rows in it and we received Validation against golden data failed for row number , field : transform value [] does not correspond to data set value [] While developing pipelines, you’ll often remove or disable transforms in a pipeline. We can do the same in unit tests. In our example, we may want to remove or bypass the transform that caused the test to fail ('486 → 487'). Click on the transform icon and select either 'Bypass in Test' or 'Remove from test'. Bypassing a transform in a test will replace the transform with a Dummy transform while executing the test. As the name implies, 'Remove from test' will remove the transform from the test pipeline, exactly like you would remove a transform from a pipeline. In the case of bypassing a transform, your pipeline will look like the one below ('Remove' will add a similar icon to the transform icon, crossing it out). There is a workflow action called \"Run Pipeline Unit Tests\" which can execute all defined unit tests of a certain type. The output of the transform can be stored in any format or location with regular Hop transforms. Execute the workflow through hop-run, in a scheduler or through a CI/CD pipeline in e.g. Jenkins. Use the 'Get test names' in this action to specify which of the available unit tests you want to include in your workflow. In the workflow logging output, you’ll find information about the exit state of your unit tests: 2021/04/22 10:05:23 - read-customers - Unit test 'read-customers UNIT' passed succesfully 2021/04/22 10:05:23 - read-customers - ---------------------------------------------- 2021/04/22 10:05:23 - read-customers - customers by year out - customers-by-year : Test passed succesfully against golden data set 2021/04/22 10:05:23 - read-customers - Test passed succesfully against unit test 2021/04/22 10:05:23 - read-customers - ---------------------------------------------- 2021/04/22 10:05:23 - read-customers - Pipeline duration : 0.227 seconds [ 0.227\" ] Similar to the workflow action, there’s a transform to run your unit tests:","title":"Pipeline Unit Testing","component":"manual","version":"2.7.0","name":"pipeline-unit-testing","url":"/manual/latest/pipeline/pipeline-unit-testing.html","titles":[{"text":"The need for unit testing","hash":"_the_need_for_unit_testing","id":1},{"text":"Main components of a unit test","hash":"_main_components_of_a_unit_test","id":2},{"text":"Unit tests in runtime","hash":"_unit_tests_in_runtime","id":3},{"text":"Create unit tests","hash":"_create_unit_tests","id":4},{"text":"Unit test and data set options","hash":"_unit_test_and_data_set_options","id":5},{"text":"Create and add data sets","hash":"_create_and_add_data_sets","id":6},{"text":"Run the unit test","hash":"_run_the_unit_test","id":7},{"text":"Remove and bypass transforms in unit tests","hash":"_remove_and_bypass_transforms_in_unit_tests","id":8},{"text":"Automate unit test execution","hash":"_automate_unit_test_execution","id":9},{"text":"Run unit tests in a workflow","hash":"_run_unit_tests_in_a_workflow","id":10},{"text":"Run unit tests in a pipeline","hash":"_run_unit_tests_in_a_pipeline","id":11}]},"84":{"id":84,"text":"Pipelines, together with workflows, are the main building blocks in Hop. Pipelines perform the heavy data lifting: in a pipeline, you read data from one or more sources, perform a number of operations (joins, lookups, filters and lots more) and finally write the processed data to one or more target platforms. Pipelines are a network of transforms, connected by hops. Just like the actions in a workflow, each transform is a small piece of functionality. The combination of a number of transforms allow Hop developers to build powerful data processing and, in combination with workflows, orchestration solutions. Even though there is some visual resemblance, workflows and pipelines operate very differently. The core principles of pipelines are: pipelines are networks. Each transform in a pipeline is part of the network. a pipeline runs all of its transforms in parallel. All transforms are started and process data simultaneously. In a simple pipeline where you read data from a large file, do some processing and finally write to a database table, you’re typically still reading from the file while you’re already loading data to the database. data flows through the various transforms in a pipeline over hops. In contrast to workflow hops, pipeline hops typically don’t have an exit status. Pipelines do have some routing capabilities through e.g. Filter Rows transform and error handling, but the core pipeline principle still applies: the pipeline is a network, and data flow through the network in parallel. The example below shows a very basic pipeline. This is what happens when we run this pipeline: the pipeline has 7 transforms. All 7 of these transforms become active when we start the pipeline. the \"read-25M-records\" transform starts reading data from a file, and pushes that data down the stream to \"perform-calculations\" and the following transforms. Since reading 25 million records takes a while, some data may already have finished processing while we’re still reading records from the file. the \"lookup-sql-data\" matches data we read from the file with data we retrieved from the \"read-sql-data\" transform. The Stream Lookup accepts input from the \"read-sql-data\", which is shown with the information icon on the hop. once the data from the file and sql query are matched, we check a condition with the Filter Rows transform in \"condition?\". The output of this data is passed to \"write-to-table\" or \"write-to-file\", depending on whether the condition outcome was true or false. Pipelines are an extensive topic. Check the pages below to learn more about working with pipelines: Pipeline Editor Create a Pipeline Run, Preview and Debug a Pipeline Pipeline Run Configurations Metadata Injection Partitioning Getting started with Apache Beam Transforms","title":"Pipelines","component":"manual","version":"2.7.0","name":"pipelines","url":"/manual/latest/pipeline/pipelines.html","titles":[{"text":"Pipelines overview","hash":"_pipelines_overview","id":1},{"text":"Example pipeline walk-through","hash":"_example_pipeline_walk_through","id":2},{"text":"Next steps","hash":"_next_steps","id":3}]},"85":{"id":85,"text":"Running a pipeline to see how it performs can be done by completing one of the following tasks: Using the Run icon Select Run and Start execution from the top menu Pressing F8 In the pipeline run dialog, hit the 'New' button in the upper right corner to create a new 'Pipeline run configuration'. In the dialog that pops up, add 'Local Pipeline' as the pipeline configuration name and choose the 'Local pipeline engine' as engine type. Click 'Ok' to return to the pipeline run dialog. Choose the logging level as described below. LogLevel Description Nothing Do not record any logging output. Error Only record errors in logging output. Minimal Only use minimal logging. Basic This is the default logging level. Detailed This logging level gives a detailed logging output. Debugging Results in a very detailed output for debugging purposes. Row Level Logging at row level. Make sure your configuration is selected and hit 'Launch'. When a pipeline has run succesfully green check marks are displayed in the right upper corner on the transforms. The transforms also show a little table icon, giving you access to a preview of the results of that transform. When a pipeline fails, a red triangle is shown in the upper right corner of the failed transform. Hover your mouse over the red error triangle to take a quick peek at the error message. The full stacktrace is available in the logs. Check pipeline error handling to learn about how you can handle errors in your pipeline gracefully (which is not necessarily what you want). After each run the execution results are displayed in the panel on the bottom of your window. The Execution Results contains two tabs: Transform Metrics Logging The Transform Metrics tab displays metrics per transform. Following metrics are displayed: Metric Description Copy Input Number of rows read from Read Number of rows coming from previous transform Written Number of rows leaving this transform toward next transform Output Number of rows written to a file or table Updated Number of rows updated by the transform Rejected Errors Number of errors in the execution. The whole row is marked red if an error occurs Buffers Input Buffers Output Duration The duration of the execution of the transform Speed Status The transform status; Running, Stopped, Finished, The loggign tab displays the log of the pipeline according to the log level choosen on execution. Preview the result off a pipeline to see how it performs can be done by completing one of the following tasks: Using the preview icon Select Run and Preview from the top menu Select Preview from the transform action Menu Click on the tiny bottom right icon after running the pipeline In the pipeline preview dialog the transform from which the result must be previewed can be selected. Furthermore the number of rows to preview can be determined as well as a pause condition. When finished press the Quick Launch button. If you want to change the Pipeline run configuration click Configure. The result is displayed in ascending order. The result is previewed as displayed below. Debugging a pipeline to eliminate errors can be done by completing one of the following tasks: Using the debug icon Select Run and Debug from the top menu Select Debug output from the transform action Menu The same dialog is displayed as when using the preview functionality, only the enabled options are different. In the pipeline debug dialog the transform from which the result must be debugged can be selected. Furthermore the number of rows can be determined as well as a pause condition. When finished press the Quick Launch button. If you want to change the Pipeline run configuration click Configure. The result is displayed in descending order.","title":"Run, Preview and Debug a Pipeline","component":"manual","version":"2.7.0","name":"run-preview-debug-pipeline","url":"/manual/latest/pipeline/run-preview-debug-pipeline.html","titles":[{"text":"Running a Pipeline","hash":"_running_a_pipeline","id":1},{"text":"Preview a pipeline","hash":"_preview_a_pipeline","id":2},{"text":"Debug a pipeline","hash":"_debug_a_pipeline","id":3}]},"86":{"id":86,"text":"Transforms are the cornerstone of HOP, they are used to process and transform your data, they are the building blocks that are used to create a pipeline. The pages nested under this topic contain information on how to use the transforms and what you have to pay attention too when using them. Abort Add a checksum Add Constants Add Sequence Add value fields changing sequence Add XML Analytic Query Apache Tika Append Streams Avro Decode Avro Encode Avro File Input Azure Event Hubs Listener Azure Event Hubs Writer Beam BigQuery Input Beam BigQuery Output Beam GCP Pub/Sub : Publish Beam GCP Pub/Sub : Subscribe Beam Input Beam Kafka Consume Beam Kafka Produce Beam Output Beam Timestamp Beam Window Blocking transform Blocking until transforms finish Calculator Cassandra Input Cassandra Output Cassandra SSTable Output Call DB procedure Change file encoding Check if file is locked Check if webservice is available Clone row Closure Coalesce Column exists Combination lookup/update Concat Fields Copy rows to result Credit card validator CSV File Input Database Join Database Lookup Data Grid Delay row Delete De-Serialize From File Detect Empty Stream Dimension lookup/update Dummy (do nothing) Dynamic SQL row Edi to XML Email Messages Input Enhanced JSON Output Excel input Excel writer Execute a process Execute row SQL script Execute SQL script Execute Unit Tests Execution Information Fake data File exists File Metadata Files from result Files to result Filter Rows Formula Fuzzy match Generate Random Value Get Data From XML Get filenames Get files rowcount Get records from stream Get Rows from Result Get SubFolder names Get System Info Get table names Get variables Google Analytics Input Google Sheets Input Google Sheets Output Group By HTTP client HTTP Post Identify last row in a stream If Null Injector Insert / Update Java Filter JavaScript Join Rows JSON Input JSON Output Kafka Consumer Kafka Producer LDAP Input LDAP Output Load file content in memory Mail Mapping Input Mapping Output Memory Group By Merge Join Merge rows (diff) Metadata Injection Metadata Input Metadata structure of stream Microsoft Access Output MonetDB Bulk Loader MongoDB Delete MongoDB Input MongoDB Output Multiway Merge Join Neo4j Cypher Neo4j Generate CSVs Neo4j Get Logging Info Neo4j Graph Output Neo4j Import Neo4j Output Neo4j Split Graph Null If Number range Oracle Bulk Loader Parquet File Input Parquet File Output Pipeline Data Probe Pipeline Logging PGP decrypt stream PGP encrypt stream Pipeline Executor PostgreSQL Bulk Loader Process files Properties file Input Properties file Output Regex Evaluation Replace in String Reservoir Sampling REST Client Row Denormaliser Row Flattener Row Generator Row Normaliser Run SSH commands Salesforce Delete Salesforce Input Salesforce Insert Salesforce Update Salesforce Upsert Sample Rows SAS Input Script Select Values Serialize To File Server Status Set field value to a constant Set field Value to a field Set Variables Simple Mapping Sort Rows Sorted Merge Split Fields Split fields to rows Splunk Input SQL File Output Standardize Phone Number Stream Lookup Stream Schema Merge String cut String operations Switch / Case Synchronize after merge Table Compare Table Exists Table Input Table Output Teradata Bulk Loader Text File Input Text File Output Token Replacement Unique Rows Unique Rows (HashSet) Update User Defined Java Class User Defined Java Expression Data Validator Value Mapper Web services lookup Workflow Executor Workflow Logging Write to log XML Input Stream (StAX) XML Join XML Output XSD Validator XSL Transformation Yaml Input Zip file","title":"Transform Plugins","component":"manual","version":"2.7.0","name":"transforms","url":"/manual/latest/pipeline/transforms.html","titles":[]},"87":{"id":87,"text":"The Hop plugins repository contains a collection of plugins that can be used with but can’t or won’t be shipped with Apache Hop. Send information using syslog Dropbox Input Dropbox Output Excel Output Google Analytics Google Sheets Input Google Sheets Output LDIF Input MQTT Input MQTT Output Send message to syslog CPython: The Hop CPython Project is a plugin for the Apache Hop platform which provides the ability to execute a python script (via the cpython environment) within the context of a pipeline. Hop Machine Intelligence: The hop-mi project is a version of PMI (Plugin Machine Intelligence) for the Apache Hop platform. It (initially) provides access to supervised machine learning algorithms from various underlying \"engines\". Out of the box, hop-mi provides six engines: Weka, Python scikit-learn, R MLR, Spark MLlib, DL4j (deep learning) and KerasApplication (Keras zoo models backed by TensorFlow). The following learning schemes are supported, and are available in most of the engines: decision tree classifier, decision tree regressor, gradient boosted trees, linear regression, logistic regression, naive Bayes, naive Bayes multinomial, naive Bayes incremental, random forest classifier, random forest regressor, support vector classifier, support vector regressor, multi-layer perceptrons and deep learning networks. hop-mi/PMI is designed to be extensible via the addition of new engines and algorithms. AtolCD has a github repository with 7 GIS plugins for Apache Hop: Coordinate system operation Geometry information Geoprocessing (between two geometries) Geospatial Group by GIS File input GIS File output Spatial relationship and proximity","title":"External Plugins","component":"manual","version":"2.7.0","name":"external-plugins","url":"/manual/latest/plugins/external-plugins.html","titles":[{"text":"Hop Plugins","hash":"_hop_plugins","id":1},{"text":"Actions","hash":"_actions","id":2},{"text":"Transforms","hash":"_transforms","id":3},{"text":"Mark Hall","hash":"_mark_hall","id":4},{"text":"Transforms","hash":"_transforms_2","id":5},{"text":"AtolCD","hash":"_atolcd","id":6}]},"88":{"id":88,"text":"Hop is built around an eco-system of plugins, this gives the end users and infrastructure team the ability to create a custom version of HOP tailored to the project or company needs. The plugins are located in the following location Instalation Directory/plugins The current plugin structure looks like this (with the amount of changes happening in Hop, new plugins may have appeared in your latest nightly build). This plugin organization is mainly technical, there is no 1 on 1 mapping between the plugins you’ll find in the plugins directory and what you’ll see in Hop Gui. For Example, the neo4j plugins category contains plugins for actions, transforms, metadata types, the Neo4j perspective etc. Action Plugins Database Plugins Engines: the Apache Spark, Apache Flink and Google Dataflow run configurations are plugins that run through Apache Beam Miscellaneous Plugins Debug Git Import Passwords Projects Reflection Testing Tech Azure: a collection of plugins for Azure, including VFS Blob Storage, Azure Hubs Listener and Azure Hubs Writer Cassandra: Cassandra Connection, Cassandra Input and Cassandra Output Google: VFS: Google Cloud Storage, Google Drive Neo4j: a collection of Neo4j plugins Transform Plugins Value Types JSON VFS AWS S3 Azure Blob Storage, Google Cloud Storage, Google Drive Each type is explained in their own section.","title":"","component":"manual","version":"2.7.0","name":"plugins","url":"/manual/latest/plugins/plugins.html","titles":[{"text":"Plugins","hash":"Plugins","id":1}]},"89":{"id":89,"text":"","title":"Project Plugin","component":"manual","version":"2.7.0","name":"projects","url":"/manual/latest/plugins/projects.html","titles":[]},"90":{"id":90,"text":"The 2 main things that define a project are its name and its home folder. Projects and environments as such are defined in the central Hop configuration file hop-config.json. By default this file lives in the config/ folder of your Hop client distribution. You can change that folder by setting the HOP_CONFIG_FOLDER environment variable on your system. projectsConfig In hop-config.json, you’ll find a \"projectsConfig\" section. By default it contains the following: { \"projectsConfig\" : { \"enabled\" : true, \"projectMandatory\" : true, \"environmentMandatory\" : false, \"defaultProject\" : \"default\", \"defaultEnvironment\" : null, \"standardParentProject\" : \"default\", \"standardProjectsFolder\" : null, \"projectConfigurations\" : [ { \"projectName\" : \"default\", \"projectHome\" : \"config/projects/default\", \"configFilename\" : \"project-config.json\" }, { \"projectName\" : \"samples\", \"projectHome\" : \"config/projects/samples\", \"configFilename\" : \"project-config.json\" } ], \"lifecycleEnvironments\" : [ ], \"projectLifecycles\" : [ ] } } As you can see the standard Hop client distribution defines 2 projects: default and samples. Every project has extra metadata and settings stored in a project configuration file called project-config.json. For the samples project this would be config/projects/samples/project-config.json. project-config.json Let’s take a look at it: { \"metadataBaseFolder\" : \"${PROJECT_HOME}/metadata\", \"unitTestsBasePath\" : \"${PROJECT_HOME}\", \"dataSetsCsvFolder\" : \"${PROJECT_HOME}/datasets\", \"enforcingExecutionInHome\" : true, \"parentProjectName\" : \"default\", \"config\" : { \"variables\" : [ ] } } You can define variables on a project level as well. This makes it handy to reference things like input and output folders which are not sensitive to being checked into version control. As you can see from the project configuration file (parentProjectName), a project can have a parent from which it will inherit all the metadata objects as well as all the variables that are defined in it. Hop enviroments and their home folders are stored in the hop configuration file 'hop-config.json'. That file lives by default in the config folder of the Hop installation. System property HOP_CONFIG_FOLDER can also be used to point to a different folder environmentConfig { \"environmentConfig\" : { \"enabled\" : true, \"openingLastEnvironmentAtStartup\" : true, \"environmentConfigFilename\" : \"environment.json\", \"environmentFolders\" : { \"Project 1 - DEV\" : \"/projects/one/dev/\", \"Project 1 - UAT\" : \"/projects/one/uat/\", \"Project 1 - PRD\" : \"/projects/one/prd/\", \"Project 2 - DEV\" : \"/projects/two/dev/\", \"Project 2 - UAT\" : \"/projects/two/uat/\", \"Project 2 - PRD\" : \"/projects/two/prd/\", } } In addition to the Hop Gui and configuration files, all aspects of and operations on projects and environments can be managed through the Hop Conf command line tool. The hop-conf script offers many options to edit environment definitions. Windows Linux, macOS hop-conf.bat --environment-create \\ --environment hop2 \\ --environment-project hop2 --environment-purpose=Development \\ --environment-config-files=\"C:\\\\env-variables.json\" Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig --environment-create --environment hop2 --environment-project hop2 --environment-purpose Development --environment-config-files \"C:\\\\hop\\config\\hop-config.json Warning: referenced project 'hop2' doesn\\'t exist Found existing environment configuration file: C:\\\\variables.json Purpose: Development Project name: hop2 Config file: C:\\\\env-variables.json $ sh hop-conf.sh \\ --environment-create \\ --environment hop2 \\ --environment-project hop2 \\ --environment-purpose=Development \\ --environment-config-files=/env-variables.json Expected output: Creating environment 'hop2' Environment 'hop2' was created in Hop configuration file /hop/config/hop-config.json Warning: referenced project 'hop2' doesn't exist Found existing environment configuration file: /env-variables.json hop2 Purpose: Development Project name: hop2 Config file: /env-variables.json As you can see from the log, an empty file was created to set variables in: { } This command adds a variable to the environment configuration file: Windows Linux, macOS hop-conf.bat --config-file \"C:\\\\env-variables.json\" --config-file-set-variables \"DB_HOSTNAME=localhost,DB_PASSWORD=abcd\" Expected output: C:\\echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig --config-file \"C:\\\\env-variables.json\" --config-file-set-variables \"DB_HOSTNAME=localhost,DB_PASSWORD=abcd\" ===[Starting HopConfig]========================================================= Configuration file 'C:\\/env-variables.json' was modified. ./hop-conf.sh --config-file /env-variables.json --config-file-set-variables DB_HOSTNAME=localhost,DB_PASSWORD=abcd Expected output: Configuration file '/env-variables.json' was modified. If you look at the file env-variables.json, you’ll see that the variables were added: { \"variables\" : [ { \"name\" : \"DB_HOSTNAME\", \"value\" : \"localhost\", \"description\" : \"\" }, { \"name\" : \"DB_PASSWORD\", \"value\" : \"abcd\", \"description\" : \"\" } ] } Please note that you can add descriptions for the variables as well with the --describe-variable option. Please run hop-conf without options to see all the possibilities. The following example deletes an environment from the Hop configuration file: Windows Linux, macOS hop-conf.bat -ed --environment hop2 Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig -ed --environment hop2 ===[Starting HopConfig]========================================================= Lifecycle environment 'hop2' was deleted from Hop configuration file C:\\\\hop\\config\\hop-config.json ./hop-conf.sh -ed --environment hop2 Expected output: Lifecycle environment 'hop2' was deleted from Hop configuration file /hop/config/hop-config.json There are various options to configure the behavior of the Projects plugin itself. In Hop configuration file hop-config.json we can find the following options: { \"projectMandatory\" : true, \"environmentMandatory\" : false, \"defaultProject\" : \"default\", \"defaultEnvironment\" : null, \"standardParentProject\" : \"default\", \"standardProjectsFolder\" : \"/home/matt/test-stuff/\" } Option Description hop-conf option projectMandatory This will prevent anyone from using hop-run without specifying a project --project-mandatory environmentMandatory This will prevent anyone from using hop-run without specifying an environment --environment-mandatory defaultProject The default project to use when none is specified --default-project defaultEnvironment The default environment to use when none is specified --default-environment standardParentProject The standard parent project to propose when creating new project --standard-parent-project standardProjectsFolder The folder to which you’ll browse by default in the GUI when creating new projects --standard-projects-folder","title":"Advanced project and environment management","component":"manual","version":"2.7.0","name":"advanced","url":"/manual/latest/projects/advanced.html","titles":[{"text":"Configuration files","hash":"_configuration_files","id":1},{"text":"Global Project Configuration","hash":"_global_project_configuration","id":2},{"text":"Project Configuration","hash":"_project_configuration","id":3},{"text":"Variables","hash":"_variables","id":4},{"text":"Parent projects","hash":"_parent_projects","id":5},{"text":"Environment configuration","hash":"_environment_configuration","id":6},{"text":"Command Line Project Configuration","hash":"_command_line_project_configuration","id":7},{"text":"Configuration on the command line","hash":"_configuration_on_the_command_line","id":8},{"text":"Creating an environment","hash":"_creating_an_environment","id":9},{"text":"Setting variables in an environment","hash":"_setting_variables_in_an_environment","id":10},{"text":"Deleting an environment","hash":"_deleting_an_environment","id":11},{"text":"Projects Plugin configuration","hash":"_projects_plugin_configuration","id":12}]},"91":{"id":91,"text":"Most developers typically work on multiple projects and modules simultaneously. For example, while one project matures and is in user acceptance testing, development work on a new project has already started. Different sets of workflows and pipelines require management for at least development, acceptance and production environments. Every project and each environment comes with its own set of variables and configurations for databases, file paths …​ Hop wants to make it easy for Hop developers to use one or more projects alongside each other. A project is the collection of all the files you need in your data orchestration solution. This typically includes metadata, pipelines, workflows, reference files, documentation and so on. To match standard development best practices you would check all these files into a version control system like git. project variables should only be used when you need variables on the project level. All variables to connect to infrastructure, e.g. database connection parameters, mail servers etc that take different values in different environments should be created at the environment level. Project configurations are stored in hop-config.json, which is read from hop/config by default. Use the HOP_CONFIG_FOLDER operating system variable to store your Hop configuration in a folder outside your Hop folder. This will let you keep your project list if you switch Hop installations or upgrade to a newer Hop version. Projects can inherit metadata and variables from a parent project. Projects in Hop Gui will remember opened files, zoom levels and other UI settings. What is typically not included in the set of project files are the metadata configurations and variable values required to make the project run correctly in a given environment. For example on a development laptop you might want to set a variable ${DB_HOSTNAME} to localhost, on a production server this value might point to the production database server. This is where Hop environments come in. Environment is short for Project Lifecycle Environment. It describes the phase of a project in its lifecycle moving from Development to Test to Acceptance to Production. It can also describe a project in a continuous integration environment and so on. As such the following attributes define an environment: Its name The name of the project The phase The configuration files you want to use to define the environment specific variables Just like projects, environments are defined in one or a number of configuration files. store your environment configuration files outside of the project folder. You may even want to check them in to a separate version control repository.","title":"Projects & Environments","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/projects/index.html","titles":[{"text":"Concepts and Architecture","hash":"_concepts_and_architecture","id":1},{"text":"Projects","hash":"_projects","id":2},{"text":"Environments","hash":"_environments","id":3}]},"92":{"id":92,"text":"A project’s metadata typically contains a number of database connections (relational or NoSQL), logging configurations and so on. This metadata is stored on a project level and is available through the metadata perspective. The way metadata typically is handled is: metadata objects (connections, logging, …​) are defined on a project level. E.g. a CRM database connection is created in the project, using a number of variables for hostname (${CRM_HOST}) and database name (${CRM_DBNAME}), with corresponding variables for the port, username, password and so on. the metadata object configuration is defined on an environment level, where a number of variable values are created the contain the ip address for ${CRM_HOST} etc. A project’s metadata is stored in ${PROJECT_HOME}/metadata, but can be overruled by setting the project’s metadata base folder ${HOP_METADATA_FOLDER} property in the project configuration dialog or directly in the project-config.json file. A basic project metadata folder will look similar to the one below: . ├── cassandra-connection ├── dataset ├── file-definition ├── git ├── mongodb-connection ├── neo4j-connection ├── neo4j-graph-model ├── partition ├── pipeline-log ├── pipeline-probe ├── pipeline-run-configuration │ ├── local.json │ └── Spark.json ├── rdbms │ └── crm.json ├── server ├── splunk ├── unit-test ├── web-service ├── workflow-log └── workflow-run-configuration └── local.json 18 directories, 4 files","title":"","component":"manual","version":"2.7.0","name":"metadata","url":"/manual/latest/projects/metadata.html","titles":[{"text":"Project Metadata","hash":"ProjectMetadata","id":1}]},"93":{"id":93,"text":"To create a new project click the Add a new project button. This button opens the following dialog: Table 1. Project Properties Property Description Variables Supported Mandatory Default Name The project name Yes No Home folder The folder where the project is located Yes No Configuration file (relative path) The folder where the project’s configuration json is located. Yes Yes Parent project to inherit from The project to inherit metadata (e.g. connections) from Yes No default Description A description for this environment No No Company The company this environment belongs to No No Department The department this environment is created for No No Metadata base folder The folder where this environment’s metadata will be stored Yes Yes ${PROJECT_HOME}/metadata Unit test base path The folder where this environment’s unit tests will be stored Yes Yes ${PROJECT_HOME} Data Sets CSV Folder The folder where this environment’s data files will be stored Yes Yes ${PROJECT_HOME}/datasets Enforce execution in project home Give an error when trying to execute a pipeline or workflow which is not located in the environment home directory or in a sub-directory Yes Yes checked Project variables to set A list of variable names, values and variable descriptions to use with this project No Yes After creating a project the user interface will switch to it and ask if you want to create an environment. To create a new environment click the Add a new environment button. This button opens the following dialogue: Table 2. Environment Properties Property Description Variables Supported Mandatory Default Name The environment name No No The last created project Purpose The purpose of this environment. A purpose is an indication of the environment type. You can add your own purposes in addition to the predefined ones: Development Testing Acceptance Production Continuous integration Common build …​ No No Project The project to which this environment belongs No No The last created project Configuration files Files to use as configuration for this environment No No Each environment will contain one or more environment files where you manage environment-specific variables. The edit button opens the environment file and lets you add variable key-value pairs. After creating an environment the user interface will switch to it. To switch between projects the projects list can be used from the main Hop Gui toolbar. After switching to a project the environments list will be updated to the environments which belong to this project. All open files will be restored, including their zoom level and other UI settings. To edit an existing project click the Edit the selected project button. Clicking this button will re-open the project dialogue where changes can be made as described in Project Properties. To delete a project click the Delete the selected project button. To edit an existing environment click the Edit the selected environment button. Clicking this button will re-open the project dialogue where changes can be made as described in Environment Properties. To delete an environment click the Delete the selected environment button.","title":"Projects and Environments","component":"manual","version":"2.7.0","name":"projects-environments","url":"/manual/latest/projects/projects-environments.html","titles":[{"text":"Create a project","hash":"_create_a_project","id":1},{"text":"Create an environment","hash":"_create_an_environment","id":2},{"text":"Switch between projects and environments","hash":"_switch_between_projects_and_environments","id":3},{"text":"Edit and delete projects","hash":"_edit_and_delete_projects","id":4},{"text":"Editing and deleting environments","hash":"_editing_and_deleting_environments","id":5}]},"94":{"id":94,"text":"A lot of Hop’s default behavior can be customized through global variables. Check full list of variables to check them all. A couple of useful and often overlooked environment variables can be set (outside of Hop): HOP_AUDIT_FOLDER Set this variable to a valid path on your machine to store Hop’s audit information. This information includes last opened files per project, zoom size and lots more. HOP_CONFIG_FOLDER Hop stores your configuration in the config folder by default. Set this environment variable to point to a folder outside of your Hop installation to keep your configuration, projects and environment list etc, no matter which Hop version or installation you use. copy the contents of an existing hop/conf folder to the path set in HOP_CONFIG_FOLDER to move the configuration from one of your Hop installations to your new central location. HOP_PLUGIN_BASE_FOLDERS Set this variable to point Hop to a comma separated list of folders where you want Hop to look for additional plugins. When using this variable it will also unset your default plugins folder, make sure to add the default plugin folder to the comma separated list. This can be a relative path to the installation eg. export HOP_PLUGIN_BASE_FOLDERS=./plugins,/additional/plugin/folder. The ./plugins will point to the plugins in the base installation folder HOP_SHARED_JDBC_FOLDERS This is a comma separated list of folder containing JDBC drivers, default value is lib/jdbc. If you still need the default jdbc drivers when changing this you need to include the default folder path. HOP_WINDOWS_SHELL_ENCODING This variable is for Windows users. It is possible that the shell encoding (the things you see in the CMD window) does not match your system encoding. This can cause confusion when using special characters in logging and Shell Action/transform. You can determine which codepage/encoding your system is using by executing following command in Powershell [System.Text.Encoding]::Default. You can then use the value shown at WindowsCodePage and set the HOP_WINDOWS_SHELL_ENCODING parameter to this value. To set Windows Variables go to System → System Properties → Environment Variables and define this on user or system scope CTRL-K In any table view in a Hop dialog, select one or more lines and use CTRL-K to remove all lines but your selection CTRL-SHIFT-Click Hover your mouse pointer over any pipeline action in a workflow, pipeline or workflow executor transform etc and use CTRL-SHIFT-Click to open that item in a new tab. The same behavior can be triggered by hovering over an item and hitting the Z key. Copy as pipeline action In any pipeline or workflow, click anywhere on the canvas and choose 'Copy as pipeline action' or 'Copy as workflow action'. The selected pipeline or workflow can now be pasted (CTRL-V) as a fully configured workflow or pipeline action in any workflow. Transform hover + SPACE In a pipeline, hover over any transform and hit SPACE to show the list of output fields for the selected transform. Action or transform hover + Z Hover your mouse pointer over any pipeline action in a workflow, pipeline or workflow executor transform etc and hit the Z key to open that item in a new tab. The same behavior can be triggered by hovering over an item and hitting the use CTRL-SHIFT-Click key combination. Projects can inherit metadata items (e.g. database connections) from parent projects. Use parent projects to reuse metadata items across multiple projects. a best practice rather than a pro tip: use project variables only for variables that are valid across all environments. Variable that have different values in different environments should be created on the environment level.","title":"Pro Tips","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/protips/index.html","titles":[{"text":"Useful Variables","hash":"_useful_variables","id":1},{"text":"Keyboard Shortcuts and Mouse actions","hash":"_keyboard_shortcuts_and_mouse_actions","id":2},{"text":"Projects and Environments","hash":"_projects_and_environments","id":3}]},"95":{"id":95,"text":"Hop comes with a set of samples for workflows, pipelines, actions, transforms and other metadata objects. This samples project is included in your Hop installation in the config/projects/samples folder. You can open individual sample workflows or pipelines, or add a Hop project, pointing the project’s home directory to the samples folder. The samples project is work in progress. More samples will gradually be added until feature completeness. The project’s folder structure may change over time, but is intended to be self-explanatory: you’ll find sample workflows and pipelines along with samples that have been organized in folder by action or transform name. For example, the 'workflowexecutor' folder contains a workflow and pipeline that show how to use the workflow executor transform (to execute workflows) in a pipeline.","title":"","component":"manual","version":"2.7.0","name":"samples","url":"/manual/latest/samples/samples.html","titles":[{"text":"Samples","hash":"Samples","id":1}]},"96":{"id":96,"text":"This section contains technology-stack specific information. The goal is to inform you about how Apache Hop offers support for the technology in question. It also provides starting points for you if you want to learn more about the technology. The technologies supported by Hop currently include: Azure Apache Cassandra Google Memgraph Neo4j Working with Neo4j data","title":"","component":"manual","version":"2.7.0","name":"technology","url":"/manual/latest/technology/technology.html","titles":[{"text":"Technology","hash":"Technology","id":1}]},"97":{"id":97,"text":"The scheme you can use to access your files in Amazon Simple Storage is s3:// The configuration of the Amazon Web Services Simple Cloud Storage can be done through a variety of ways. Most require you to have an Access Key and a Secret Key. Best practice is to create a specific IAM user for Apache Hop so that if needed you can fine-tune the permissions (set it to read-only for example) or indeed delete the user if it’s no longer needed. For a complete list see Working with credentials in the AWS documentation. Below are 2 popular ways of configuring access. You can create a file in your home folder in the .aws/credentials file which then contains content like this: [default] aws_access_key_id = yourSecretKey aws_secret_access_key = a-long/series-of-characters-for-your-access-key You can set the following system environment variables: AWS_ACCESS_KEY_ID : set it to your AWS access key AWS_SECRET_ACCESS_KEY : set it to your secret access key You can set the default part size for new files on S3 by setting the following variable: HOP_S3_VFS_PART_SIZE This needs to be set as a global Hop configuration variable (in hop-config.json). You can use the Tools/Edit config variables menu in Hop GUI or you can use the hop-conf command line tool to do so. Acceptable are 5MB as a minimum and 5GB as a maximum value. If this variable is not set, 5MB will be taken as value and a message will be printed on the console while creating files on S3: Part size null less than minimum of 5MB, set to minimum. To test if the configuration works you can simply upload a small CSV file in an S3 bucket and then use File/Open in Hop GUI. Then you type in s3:// as a file location and hit enter (or click the refresh button). Browse to the CSV file you uploaded and open it. If all is configured correctly you should be able to see the content in the Hop GUI.","title":"AWS S3","component":"manual","version":"2.7.0","name":"aws-s3-vfs","url":"/manual/latest/vfs/aws-s3-vfs.html","titles":[{"text":"Scheme","hash":"_scheme","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Credentials file","hash":"_credentials_file","id":3},{"text":"Variables","hash":"_variables","id":4},{"text":"Part size","hash":"_part_size","id":5},{"text":"Usage and testing","hash":"_usage_and_testing","id":6}]},"98":{"id":98,"text":"The scheme you can use to access your files in Azure Blob Storage is azure:// To get access to your Azure storage files you need to configure a few things: The name of your storage account in Azure The key of your storage account in Azure You can find both in the Storage Accounts section of your Azure portal. A file block size : This needs to be a multiple of 512 bytes. All 3 options can be set in either the Hop GUI options dialog (Menu: Tools / Options) or using the following Hop Conf (hop-conf.sh or hop-conf.bat) command line options: -aza, --azure-account= The account to use for the Azure VFS -azi, --azure-block-increment= The block increment size for new files on Azure, multiples of 512 only. -azk, --azure-key= The key to use for the Azure VFS Once done you will see an azure entry in the central hop-config.json file: { \"azure\" : { \"account\" : \"storage-account-name\", \"key\" : \"a/key-comprised-of-a-long-set-of-characters-and-numbers==\", \"blockIncrement\" : \"1024\" } } To test if the configuration works you can simply upload a small CSV file in an Azure Storage folder and then use File/Open in Hop GUI. Then you type in azure:// as a file location and hit enter (or click the refresh button). Browse to the CSV file you uploaded and open it. If all is configured correctly you should be able to see the content in the Hop GUI.","title":"Azure Storage","component":"manual","version":"2.7.0","name":"azure-blob-storage-vfs","url":"/manual/latest/vfs/azure-blob-storage-vfs.html","titles":[{"text":"Scheme","hash":"_scheme","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Usage and testing","hash":"_usage_and_testing","id":3}]},"99":{"id":99,"text":"The scheme you can use to access your files in Dropbox is dropbox:// You need to set up an OAuth 2.0 access for Dropbox by using stored access tokens. Create an app at your Oauth2.0 provider Dropbox: (See Dropbox documentation) Open a browser and go to https://www.dropbox.com/developers Select My Apps and click Create app Choose the API dropbox API . Choose the type of access that you need. Give a unique name for your app. Then, click Create App. Dropbox displays the App Settings panel for the app that you created In the App Settings page, select Access token expiration to 'No expiration' and then click Generated Access Token Note the value of the access token that you created Specify this access token in the Hop system configuration: This can be done in the Hop GUI: go to the \"Dropbox\" tab in the Options dialog (from the Tools menu) You can also use the hop-conf script with the following options: -dbxt, --dropbox-access-token= Configure the access token to Dropbox Once done you will see a dropbox entry in the central hop-config.json file: To test if the configuration works you can simply put a small CSV file in Dropbox and then use File/Open in Hop GUI. Then you type in dropbox:// as a file location and hit enter (or click the refresh button). Browse to the CSV file you uploaded and open it. If all is configured correctly you should be able to see the content in the Hop GUI. A the moment, this implementation can’t upload file larger than 150 MB.","title":"Dropbox VFS","component":"manual","version":"2.7.0","name":"dropbox-vfs","url":"/manual/latest/vfs/dropbox-vfs.html","titles":[{"text":"Scheme","hash":"_scheme","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Usage and testing","hash":"_usage_and_testing","id":3}]},"100":{"id":100,"text":"The scheme you can use to access your files in Google Cloud Storage is gs:// You need to generate a key file for a service account to make it work. Go to the Google Cloud console to do this. Once you have a key file for your service account, with permissions to access your GCP storage, point to it with either a system environment variable called GOOGLE_APPLICATION_CREDENTIALS (standard Google way of doing this) or in the Options dialog in the 'Google Cloud' tab. You can also use hop-conf: -gck, --google-cloud-service-account-key-file= Configure the path to a Google Cloud service account JSON key file Once done you will see a googleCloud entry in the central hop-config.json file: { \"googleCloud\" : { \"serviceAccountKeyFile\" : \"/path/to/your/google-key.json\" } } To test if the configuration works type use File/Open in the GUI and type in gs:// as a file location. Then hit enter (or click the refresh button). Browse to a CSV, JSON or text file you uploaded and open it. If all is configured correctly you should be able to see the content in the Hop GUI.","title":"Google Cloud Storage VFS","component":"manual","version":"2.7.0","name":"google-cloud-storage-vfs","url":"/manual/latest/vfs/google-cloud-storage-vfs.html","titles":[{"text":"Scheme","hash":"_scheme","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Usage and testing","hash":"_usage_and_testing","id":3}]},"101":{"id":101,"text":"The scheme you can use to access your files in Google Drive is googledrive:// You need to generate a credentials file to make it work. Follow the Google documentation to see how that is done. You also need to specify a folder in which security tokens are going to be saved. You can specify both in the Hop system configuration options. This can be done in the Hop GUI: go to the \"Google Drive\" tab in the Options dialog (from the Tools menu). You can also use the hop-conf script with the following options: -gdc, --google-drive-credentials-file= Configure the path to a Google Drive credentials JSON file -gdt, --google-drive-tokens-folder= Configure the path to a Google Drive tokens folder Once done you will see a googleDrive entry in the central hop-config.json file: { \"googleDrive\" : { \"credentialsFile\" : \"/path/to/google-drive-credentials.json\", \"tokensFolder\" : \"/path/to/tokens\" } } When you try to run the first time you’ll see a message on the console where you executed Hop GUI or Hop Run saying something like: Please open the following address in your browser: https://accounts.google.com/o/oauth2/auth?access_type=offline&client_id=yourClientId&redirect_uri=http://localhost:8888/Callback&response_type=code&scope=https://www.googleapis.com/auth/drive Open that URL in a browser and authenticate the given client ID. You’ll then get a token in the configured tokens folder with which you can work. To test if the configuration works you can simply put a small CSV file in Google Drive and then use File/Open in Hop GUI. Then you type in googledrive:// as a file location and hit enter (or click the refresh button). Browse to the CSV file you uploaded and open it. If all is configured correctly you should be able to see the content in the Hop GUI.","title":"Google Drive VFS","component":"manual","version":"2.7.0","name":"google-drive-vfs","url":"/manual/latest/vfs/google-drive-vfs.html","titles":[{"text":"Scheme","hash":"_scheme","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Usage and testing","hash":"_usage_and_testing","id":3}]},"102":{"id":102,"text":"Actions are used the objects that are executed in a workflow. They are logical operators that do not manipulate your data but create actions that have to be performed around your pipelines. Actions in a workflow typically do not process your data, nor do they pass on data to the next action. When an action finishes running, it returns a true or false error code that can be used to drive the workflows behavior through true/false or unconditional (ignore exit code) workflows hops.","title":"","component":"manual","version":"2.7.0","name":"actions","url":"/manual/latest/workflow/actions.html","titles":[{"text":"Action Plugins","hash":"actions-plugins","id":1}]},"103":{"id":103,"text":"Workflows are processes that orchestrate a variety of actions defined between a start and an end point. These actions can be, but are not limited to: Executing other workflows Executing pipelines File handling Error messaging handling Notification handling A simple workflow is displayed below. This workflow will check if a folder is empty, if not a pipeline is executed. Workflows consist of actions connected by hops. In the mail example 'Start', 'Check if a folder is empty', 'Pipeline', 'Success' and 'Abort workflow' are all actions. actions are the basic operations in your workflow. A workflow typically consists of actions that are chained together by hops. hops link actions together. Hops can be disabled by clicking on them, or through right-click → disable. The design and execution of workflows is very similar to that of pipelines. However, keep in mind that there are significant differences between how Hop handles workflows and pipelines under the hood. To create a workflow, hit the 'new' icon or 'CTRL-N'. From the pop-up dialog, select 'New workflow'. When you are finished with your workflow, save it. This can be done via the File menu, the icons or using CTLR s or Command s. For new workflows a file browser is displayed to navigate towards the location you want to store the file. Add the following actions to your workflow and create the hops to connect them: Start Pipeline Success Double-click or single-click and choose 'Edit action' to configure the action for the pipeline you just created. In the pipeline dialog, use the 'Browse' button to select your pipeline and give the action an appropriate name, for example 'First Pipeline'. Click 'OK'. The action items can be configured through a single click on the object. The menu displayed below will be shown based on your action object. Action Description Copy Action to clipboard Copy the selected action to the clipboard. Edit the action Edit the selected action. Create hop Create a hop from the selected action. Deteach action Detach the action from the workflow. Edit action description Edit the description of the action. Delete this action Delete the action from the workflow Edit Custom Logging Edit the custom log settings for this workflow. This will change the log level used for this action. Clear Custom Logging Clear custom log settings. This will clear the log level used for this action. Parallel execution Execute the next actions in parallel. Notice how the hops in your workflow are a little different from what you’ve seen in pipeline hops. Add a fourth action 'Abort' and create a hop from your pipeline action. Notice how the hop between your pipeline and Abort is different from the one between pipeline and Success. The hop types used in workflows are listed below. Hop Icon Description Unconditional hop Lock icon, black hop Unconditional hops are followed no matter what the exit code (true/false) of the previous action is Success hop Check icon, green hop Success hops are used when the previous action executed successfully. Failure hop Error icon, red hop Failure hops are followed when the previous action failed. The hop type can be changed by clicking on the hop’s icon. Workflow properties are a collection of properties that describe the workflow and configure its behavior. The properties dialog can be opened by double clicking on the workflow canvas. Following properties can be configured: Workflow Parameters Settings The Workflow tab allows you to specify general properties about the workflow including: Property Description Workflow name The name of the workflow Synchronize name with filename If option is enabled the filename and workflow name are synchronized. Workflow filename The filename of the workflow Description Short description of the workflow Extended description Long extended description of the workflow Status Draft or production status Version Description of the version Created by Displays the original creator of the workflow Created at Displays the date and time when the workflow was created. Last modified by Displays the last user that modified the workflow Last modified at Displays the date and time when the workflow was last modified. The parameters tab allows you to specify parameters specific for the workflow. Parameters are defined by a name, a default value and a description. The settings tab allows you to pass the batch ID.","title":"Create a Workflow","component":"manual","version":"2.7.0","name":"create-workflow","url":"/manual/latest/workflow/create-workflow.html","titles":[{"text":"Concepts","hash":"_concepts","id":1},{"text":"Creation","hash":"_creation","id":2},{"text":"Add Action to your workflow","hash":"_add_action_to_your_workflow","id":3},{"text":"Workflow properties","hash":"_workflow_properties","id":4}]},"104":{"id":104,"text":"As with designing workflows, the steps to run a workflow are very similar to running a pipeline. Click the 'run' button in your workflow toolbar In the workflow run dialog, hit the 'New' button in the upper right corner to create a new 'Workflow run configuration'. In the dialog that pops up, add 'Local Workflow' as the workflow configuration name and choose the 'Local workflow engine'. Click 'OK' to return to the workflow run dialog. Choose the logging level as described below. LogLevel Description Nothing Do not record any logging output. Error Only record errors in logging output. Minimal Only use minimal logging. Basic This is the default logging level. Detailed This logging level gives a detailed logging output. Debugging Results in a very detailed output for debugging purposes. Row Level Logging at row level. Make sure your configuration is selected and hit 'Launch'. This workflow with our very basic pipeline should execute in less than one second. You’ll now have the execution results pane which again looks very similar to the pipeline execution results.","title":"Run and Debug a Workflow","component":"manual","version":"2.7.0","name":"run-debug-workflow","url":"/manual/latest/workflow/run-debug-workflow.html","titles":[{"text":"Run your first Workflow","hash":"_run_your_first_workflow","id":1}]},"105":{"id":105,"text":"Workflows are one of the core building blocks in Apache Hop. Where pipelines do the heavy data lifting, workflows take care of the orchestration work: prepare the environment, fetch remote files, perform error handling and executing child workflows and pipelines. Workflows consist of a series of actions, connected by hops. Just like a transform in a pipeline, each action is a small piece of functionality. The combination of a number of actions allows Hop developers to build powerful data orchestration solutions. Even though there is some visual resemblance, workflows and pipelines operate very differently. Workflows perform orchestration tasks. Actions in a workflow usually do not operate on the data directly (even though you can change data e.g. through SQL). Workflows have one (and only one) mandatory starting point (a Start action), but can have multiple end actions. Workflows can Workflows work sequentially by default. Each action in a workflow has a position in the workflow sequence, and needs to wait before the previous actions have completed before it starts. Workflow actions do not pass data over hops. Each workflow action has a success or failure exit status. This exit status is used to choose the routing through the workflow. Hops between actions in a workflow have a status: depending on the exit status of the previous action, a workflow hop can follow the success (green), failure (orange) or unconditional (black) hop. An unconditional hop ignores the exit status of the previous action and is followed whether the previous action failed or succeeded. Like all workflows, the example workflow shown below starts with the start action. The Start action is just a placeholder that can’t really fail, so the hop out of a start action is unconditional. The workflow then continues with a pipeline action, \"first-pipeline\". As the name implies, this action executes a pipeline. If \"first-pipeline\" runs successfully, the workflow continues to \"second-pipeline\". If \"first-pipeline\" fails, the failure hop to \"handle-errors\" is followed. In this hypothetical example, we don’t care about the result of \"Second pipeline\", and want to continue to \"delete-tmp-files\", where any temporary files are removed. If the temporary files are removed successfully, we move on to the \"success\" action. Similar to the Start action, success is a visual indicator of successful completion of this part of the workflow. It’s not mandatory and doesn’t add any functionality, but it often is a good visual indicator of an end point of your workflow’s main stream. The following pages take you deeper into the process of building and running workflows: Create a Workflow Run and Debug a Workflow Workflow Run Configurations","title":"","component":"manual","version":"2.7.0","name":"workflows","url":"/manual/latest/workflow/workflows.html","titles":[{"text":"Workflows","hash":"Workflows","id":1},{"text":"Workflow overview","hash":"_workflow_overview","id":2},{"text":"Example workflow walk-through","hash":"_example_workflow_walk_through","id":3},{"text":"Next steps","hash":"_next_steps","id":4}]},"106":{"id":106,"text":"When creating new database connection, specify the database path to the .mdb or .accdb file in database name field. This database connection uses the UCanAccess driver which works well for reading with TableInput, DatabaseLookup, but it’s not great for writing. For writing it is better to use the Microsoft Access Output transformation. Option Info Type Relational Driver Included Version Included 5.0.1 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:ucanaccess://path.mdb Driver folder /plugins/databases/access/lib/","title":"Microsoft Access","component":"manual","version":"2.7.0","name":"access","url":"/manual/latest/database/databases/access.html","titles":[]},"107":{"id":107,"text":"Feature Info Type Relational Driver Included Version Included 3.1.3 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:hive2://,/databaseName Driver folder Hop Installation/plugins/databases/hive/lib Apache Hive need to have a PARTITION clause generated before the fields definition. To do this you can add table and clause definitions in the specific Hive field called 'Table-partition clauses'. This is the format to specify: TABLE1(CLAUSE1);SCHEMA2.TABLE2(CLAUSE2) For example, if you want to partition a customers table by statecode dynamically, you can add the following: customers(statecode) and for INSERT INTO statement Hop will add PARTITION(statecode). HINT: for dynamic partitioning you can add the following statements in the advanced tab of the RDBMS metadata as statements to run right after connecting: SET hive.exec.dynamic.partition = true; SET hive.exec.dynamic.partition.mode = nonstrict;","title":"Apache Hive","component":"manual","version":"2.7.0","name":"apache-hive","url":"/manual/latest/database/databases/apache-hive.html","titles":[{"text":"Features","hash":"_features","id":1},{"text":"Partitions","hash":"_partitions","id":2}]},"108":{"id":108,"text":"Option Info Type Relational Driver Included Version Included 20.0.6 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:as400://hostname/default-schema Driver folder /lib/jdbc","title":"AS400","component":"manual","version":"2.7.0","name":"as400","url":"/manual/latest/database/databases/as400.html","titles":[]},"109":{"id":109,"text":"Option Info Type Relational Driver https://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=BGJD_intro Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:Cache://hostname:1972/database Driver folder /lib/jdbc Old driver connection, prefer new InterSystems Iris connection.","title":"InterSystems Cache","component":"manual","version":"2.7.0","name":"cache","url":"/manual/latest/database/databases/cache.html","titles":[]},"110":{"id":110,"text":"Option Info Type Columnar Driver Included Version Included 0.5.0 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:clickhouse://:[/] Driver folder /lib/jdbc","title":"ClickHouse","component":"manual","version":"2.7.0","name":"clickhouse","url":"/manual/latest/database/databases/clickhouse.html","titles":[]},"111":{"id":111,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:db2://hostname:port/dbname Driver folder /lib/jdbc","title":"DB2","component":"manual","version":"2.7.0","name":"db2","url":"/manual/latest/database/databases/db2.html","titles":[]},"112":{"id":112,"text":"Option Info Type Relational Driver Included Version Included 10.16.1.1 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:derby:[:]/ JDBC Url Embedded jdbc:derby: Driver folder /lib/jdbc Derby JDBC driver has two different modes, if you want to use Derby Embbeded, replace the derbyclient.jar file with derby.jar","title":"Apache Derby","component":"manual","version":"2.7.0","name":"derby","url":"/manual/latest/database/databases/derby.html","titles":[]},"113":{"id":113,"text":"Doris is compatible with MySQL so you can use the MySQL or MariaDB JDBC drivers. Please see the Apache Doris website for more information. Option Info Type Relational Driver Drivere Link (Use Platform Independent) Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:mysql://hostname:9030/databaseName Driver folder /lib/jdbc The port of JDBC Url is same as the query port of Frontend in Doris.","title":"Apache Doris","component":"manual","version":"2.7.0","name":"doris","url":"/manual/latest/database/databases/doris.html","titles":[]},"114":{"id":114,"text":"DuckDB is an in-process SQL OLAP database management system. As an in-process database, DuckDB is easy to configure: specify the path to your DuckDB filename as the database name, e.g. /duckdb. Option Info Type Relational Driver Driver Link Version Included 0.9.1 Hop Dependencies None Documentation https://duckdb.org/docs/api/java.html JDBC Url jdbc:duckdb: (in memory) or jdbc:duckdb: Driver folder /lib/jdbc","title":"DuckDB","component":"manual","version":"2.7.0","name":"duckdb","url":"/manual/latest/database/databases/duckdb.html","titles":[]},"115":{"id":115,"text":"Option Info Type Relational Driver https://docs.exasol.com/db/latest/connect_exasol/drivers/jdbc.htm#JDBCDriver Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:exa:: Driver folder /lib/jdbc","title":"Exasol","component":"manual","version":"2.7.0","name":"exasol","url":"/manual/latest/database/databases/exasol.html","titles":[]},"116":{"id":116,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:firebirdsql://localhost:3050/c:/database/example.fdb Driver folder /lib/jdbc","title":"Firebird","component":"manual","version":"2.7.0","name":"firebird","url":"/manual/latest/database/databases/firebird.html","titles":[]},"117":{"id":117,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:bigquery://[Host]:[Port];ProjectId=[Project];OAuthType=[AuthValue] Driver folder /lib/jdbc The Simba driver is packaged as a .zip containing many jars. Only a subset of the jars included with the Driver are necessary to use Bigquery JDBC with Apache Hop. Furthermore, some of the jars may conflict with those packaged with Hop and must be excluded. grpc-alts-.jar grpc-api-.jar grpc-core-.jar grpc-netty-shaded-.jar api-common-.jar gax-.jar gax-grpc-.jar google-api-services-bigquery-v2-.jar GoogleBigQueryJDBC42.jar google-cloud-bigquerystorage-.jar grpc-google-cloud-bigquerystorage-v1-.jar grpc-google-cloud-bigquerystorage-v1beta1-.jar grpc-google-cloud-bigquerystorage-v1beta2-.jar json-.jar proto-google-cloud-bigquerystorage-v1-.jar proto-google-cloud-bigquerystorage-v1beta1-.jar proto-google-cloud-bigquerystorage-v1beta2-.jar threetenbp-.jar * Tested with Hop 2.5.0 and Simba 1.3.3.1004. Not all authentication methods tested either, so this list may not be exhaustive","title":"Google BigQuery","component":"manual","version":"2.7.0","name":"googlebigquery","url":"/manual/latest/database/databases/googlebigquery.html","titles":[{"text":"Simba Driver Jars to Exclude (These jars included in the Simba driver conflict with Hop libraries and must be excluded):","hash":"_simba_driver_jars_to_exclude_these_jars_included_in_the_simba_driver_conflict_with_hop_libraries_and_must_be_excluded","id":1},{"text":"Simba Driver Jars to Include* (Include only these jars for a minimal Bigquery driver install):","hash":"_simba_driver_jars_to_include_include_only_these_jars_for_a_minimal_bigquery_driver_install","id":2}]},"118":{"id":118,"text":"Option Info Type Relational Driver https://docs.vmware.com/en/VMware-Greenplum/7/greenplum-database/datadirect-datadirect_jdbc.html Version Included None Hop Dependencies Postgresql Plugin Documentation Documentation Link JDB Url jdbc:pivotal:greenplum://host:port;DatabaseName= Driver folder /lib/jdbc","title":"Greenplum","component":"manual","version":"2.7.0","name":"greenplum","url":"/manual/latest/database/databases/greenplum.html","titles":[]},"119":{"id":119,"text":"Option Info Type Relational Driver Included Version Included 2.2.224 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:h2:[file:][] Driver folder /lib/jdbc","title":"H2","component":"manual","version":"2.7.0","name":"h2","url":"/manual/latest/database/databases/h2.html","titles":[]},"120":{"id":120,"text":"Option Info Type Relational Driver Included Version Included 2.7.2 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:hsqldb:hsql//hostname Driver folder /lib/jdbc","title":"Hypersonic","component":"manual","version":"2.7.0","name":"hypersonic","url":"/manual/latest/database/databases/hypersonic.html","titles":[]},"121":{"id":121,"text":"Option Info Type Relational Driver Use MySQL Drivers Version Included None Hop Dependencies Mysql Database Plugin Documentation Documentation Link JDBC Url jdbc:mysql://hostname:3306/databaseName Driver folder /lib/jdbc","title":"Infobright DB","component":"manual","version":"2.7.0","name":"infobright","url":"/manual/latest/database/databases/infobright.html","titles":[]},"122":{"id":122,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:informix-sqli://hostname:1533/databaseName Driver folder /lib/jdbc","title":"Informix","component":"manual","version":"2.7.0","name":"informix","url":"/manual/latest/database/databases/informix.html","titles":[]},"123":{"id":123,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:ingres://host:port{,port}{;host:port{,port}}/db{;attr=value} Driver folder /lib/jdbc","title":"Ingres","component":"manual","version":"2.7.0","name":"ingres","url":"/manual/latest/database/databases/ingres.html","titles":[]},"124":{"id":124,"text":"Option Info Type Relational Driver Included in Database installation Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:interbase://hostname:3050/path/to/database.ib Driver folder /lib/jdbc","title":"interbase","component":"manual","version":"2.7.0","name":"interbase","url":"/manual/latest/database/databases/interbase.html","titles":[]},"125":{"id":125,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:IRIS://hostname:port/database Driver folder /lib/jdbc","title":"InterSystems Iris","component":"manual","version":"2.7.0","name":"iris","url":"/manual/latest/database/databases/iris.html","titles":[]},"126":{"id":126,"text":"Option Info Type Relational Driver Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:kingbase8://host:port/database Driver folder /lib/jdbc","title":"kingbase es","component":"manual","version":"2.7.0","name":"kingbasees","url":"/manual/latest/database/databases/kingbasees.html","titles":[]},"127":{"id":127,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies Mysql Database plugin Documentation Documentation Link JDBC Url jdbc:mariadb://hostname:port/databaseName Driver folder /lib/jdbc","title":"Mariadb","component":"manual","version":"2.7.0","name":"mariadb","url":"/manual/latest/database/databases/mariadb.html","titles":[]},"128":{"id":128,"text":"Option Info Type Column Store Driver Included Version Included 3.1 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:monetdb://hostname/databaseName Driver folder /lib/jdbc","title":"MonetDB","component":"manual","version":"2.7.0","name":"monetdb","url":"/manual/latest/database/databases/monetdb.html","titles":[]},"129":{"id":129,"text":"This database type uses, the JTDS driver. When creating new database connections it is recommended to use the native connection type. Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:jtds:sqlserver://[:][/][;=[;…​]] Driver folder /lib/jdbc","title":"MS SqlServer","component":"manual","version":"2.7.0","name":"mssql","url":"/manual/latest/database/databases/mssql.html","titles":[]},"130":{"id":130,"text":"Option Info Type Relational Driver Driver Link Version Included 12.4.1.jre11 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:sqlserver://[serverName[\\instanceName][:portNumber]][;property=value[;property=value]] Driver folder /lib/jdbc The native Microsoft SQL JDBC driver ships with extra files that enables authentication using your current MS Windows credentials. When you download the JDBC drivers from Microsoft’s site and unzip them, there will be a directory structure like the following: sqljdbc_11.2\\enu\\auth\\x64 ← 64bit authentication support files. sqljdbc_11.2\\enu\\auth\\x86 ← 32bit authentication support files. Copy the Microsoft auth dll file: From: sqljdbc_11.2\\enu\\auth\\x64\\mssql-jdbc_auth-11.2.3.x64.dll To: hop\\lib\\mssql-jdbc_auth-11.2.3.x64.dll and to your Java installation folders, in my case: C:\\Program Files\\Microsoft\\jdk-17.0.6.10-hotspot\\bin C:\\Program Files\\Microsoft\\jdk-17.0.6.10-hotspot\\lib Copy the JDBC driver: From: sqljdbc_11.2\\enu\\mssql-jdbc-11.2.3.jre11.jar To: \\hop\\plugins\\databases\\mssqlnative\\lib, replacing any version already provided. Ensure the correct JDBC drivers are installed (see the installation section) On the Metadata button, double-click the Relational Database Connection General tab: Change the Connection type to connect to a database type To connect to SQL Server first install any necessary JDBC drivers (see the Hop installation document) If you use Integrated SQL Server, ensure that trustServerCertificate = true under Options. And possibly also encrypt = true. Open metadata, and create a connection to SQL Server adding a new item under Relational Database Connection For local SQL Server Database (integrated security) Connection name: give it a name, like Local SQL Server (requires a name before it can be saved) General tab: Change the Connection type to connect to SQL Server etc. Connection type: MS SQL Server (Native) SQL Server instance name: See SQL Server Configuration Manager or view Windows Services for the instance name. In most cases it is “MSSQLSERVER” Open SQL Server Configuration Manager: C:\\Windows\\System32\\SQLServerManager15.msc Options tab: https://stackoverflow.com/questions/18841744/jdbc-connection-failed-error-tcp-ip-connection-to-host-failed Open SQL Server Configuration Manager and setup TCP/IP and port 1433 Open SQL Server Configuration Manager, and then expand SQL Server Network Configuration. Click Protocols for InstanceName, and then make sure TCP/IP is enabled in the right panel and double-click TCP/IP. On the Protocol tab, notice the value of the Listen All item. Click the IP Addresses tab (image shown below): If the value of Listen All is yes, the TCP/IP port number for this instance of SQL Server is the value of the TCP Dynamic Ports item under IPAll. If the value of Listen All is no, the TCP/IP port number for this instance of SQL Server is the value of the TCP Dynamic Ports item for a specific IP address. Make sure the TCP Port is 1433, click OK After any changes or new settings you must restart SQLSERVER service If you see that Windows SQL Server/ SQL Server Browser / SQL Server Agent service state is 'stopped', right click on SQL Server/SQL Server Browser and click start. A good check I often use is to use telnet, eg on a windows command prompt run: telnet 127.0.0.1 1433 If you get a blank screen it indicates network connection established successfully, and it’s not a network problem. If you get 'Could not open connection to the host' then this is network problem Alternatively, you can use netstat -a to find open and listening ports netstat -ab | find \"1433\" netstat -abn |Select-String -Pattern sql -Context 0,1","title":"MS SqlServer (Native)","component":"manual","version":"2.7.0","name":"mssqlnative","url":"/manual/latest/database/databases/mssqlnative.html","titles":[{"text":"Integrated Authentication / Windows Based Authentication","hash":"_integrated_authentication_windows_based_authentication","id":1},{"text":"Connect to relational database and JDBC drivers","hash":"_connect_to_relational_database_and_jdbc_drivers","id":2},{"text":"Connect to SQL Server SQL Database","hash":"_connect_to_sql_server_sql_database","id":3},{"text":"Troubleshooting connecting to SQL Server Native via TCP/IP","hash":"_troubleshooting_connecting_to_sql_server_native_via_tcpip","id":4}]},"131":{"id":131,"text":"Option Info Type Relational Driver Drivere Link (Use Platform Independent) Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:mysql://hostname:33060/databaseName Driver folder /lib/jdbc Important: When creating a connection for mysql make sure you select the correct \"database type\". The Mysql 8+ type will work for the current Drivers. If needed you can use the Mysql driver to use the old \"org.gjt.mm.mysql.Driver\" Driver path.","title":"MySql","component":"manual","version":"2.7.0","name":"mysql","url":"/manual/latest/database/databases/mysql.html","titles":[]},"132":{"id":132,"text":"Option Info Type Relational Driver Included in database installation Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:netezza://hostname:5490/databaseName Driver folder /lib/jdbc","title":"Netezza","component":"manual","version":"2.7.0","name":"netezza","url":"/manual/latest/database/databases/netezza.html","titles":[]},"133":{"id":133,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:oracle:thin:@hostname:port Number:databaseName Driver folder /lib/jdbc Starting with Oracle Database 11g Release 1 (11.1), data type \"Date\" will be mapped to \"Timestamp\" by default. Set JDBC property oracle.jdbc.mapDateToTimestamp=false to avoid data type \"Date\" being converted to data type \"Timestamp\". There are 3 ways to create a connection to an Oracle database in Apache Hop: If you have a SID, use this (old) format: jdbc:oracle:thin:@hostname:PORT:SID. Put the SID as is in the database name If you have a service name, use this (newer) format: jdbc:oracle:thin:@//HOSTNAME:PORT/SERVICENAME. Put the service name with / prefix in the database name If you want to use TNS format: jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=host) (PORT=port)) (CONNECT_DATA=(SERVICE_NAME=service_name)). Put the TNS description in the database name and leave the hostname and port empty.","title":"Oracle","component":"manual","version":"2.7.0","name":"oracle","url":"/manual/latest/database/databases/oracle.html","titles":[{"text":"Creating connections","hash":"_creating_connections","id":1}]},"134":{"id":134,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:rdbThin://:/ Driver folder /lib/jdbc","title":"Oracle RDB","component":"manual","version":"2.7.0","name":"oraclerdb","url":"/manual/latest/database/databases/oraclerdb.html","titles":[]},"135":{"id":135,"text":"Option Info Type Relational Driver Included Version Included 42.6.0 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:postgresql://host:port/database Driver folder /lib/jdbc","title":"PostgreSQL","component":"manual","version":"2.7.0","name":"postgresql","url":"/manual/latest/database/databases/postgresql.html","titles":[]},"136":{"id":136,"text":"Option Info Type Relational Driver Included Version Included 2.1.0.19 Hop Dependencies Postgresql Database plugin Documentation Documentation Link JDBC Url jdbc:redshift://endpoint:port/database Driver folder /lib/jdbc","title":"Redshift","component":"manual","version":"2.7.0","name":"redshift","url":"/manual/latest/database/databases/redshift.html","titles":[]},"137":{"id":137,"text":"Option Info Type Relational Driver Included in Database installation Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:sapdb://[:]/ Driver folder /lib/jdbc","title":"MaxDB (SAP DB)","component":"manual","version":"2.7.0","name":"sapdb","url":"/manual/latest/database/databases/sapdb.html","titles":[]},"138":{"id":138,"text":"Option Info Type Relational Driver Included Version Included 3.14.3 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:snowflake://.snowflakecomputing.com/? Driver folder /lib/jdbc","title":"Snowflake","component":"manual","version":"2.7.0","name":"snowflake","url":"/manual/latest/database/databases/snowflake.html","titles":[]},"139":{"id":139,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:sqlbase://hostname:port/databaseName Driver folder /lib/jdbc","title":"Gupta SQLBase","component":"manual","version":"2.7.0","name":"sqlbase","url":"/manual/latest/database/databases/sqlbase.html","titles":[]},"140":{"id":140,"text":"Option Info Type Relational Driver Included Version Included 3.43.0.0 Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:sqlite:sample.db Driver folder /lib/jdbc","title":"SqLite","component":"manual","version":"2.7.0","name":"sqlite","url":"/manual/latest/database/databases/sqlite.html","titles":[]},"141":{"id":141,"text":"Option Info Type Relational Driver Included in Database installation Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:jtds:sybase://[:][/][;=[;…​]] Driver folder /lib/jdbc","title":"Sybase","component":"manual","version":"2.7.0","name":"sybase","url":"/manual/latest/database/databases/sybase.html","titles":[]},"142":{"id":142,"text":"Option Info Type Column Oriented Driver Included in database installation Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:sybase:Tds:localhost:2638 Driver folder /lib/jdbc","title":"Sybase IQ","component":"manual","version":"2.7.0","name":"sybaseiq","url":"/manual/latest/database/databases/sybaseiq.html","titles":[]},"143":{"id":143,"text":"Option Info Type Relational Driver Driver Link Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:teradata://Hostname Driver folder /lib/jdbc","title":"Teradata","component":"manual","version":"2.7.0","name":"teradata","url":"/manual/latest/database/databases/teradata.html","titles":[]},"144":{"id":144,"text":"Option Info Type Relational Driver Included in database installation Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:ibmu2://localhost Driver folder /lib/jdbc","title":"IBM Universe","component":"manual","version":"2.7.0","name":"universe","url":"/manual/latest/database/databases/universe.html","titles":[]},"145":{"id":145,"text":"Option Info Type Relational Driver https://esd.actian.com/product/drivers/JDBC/java/JDBC Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:ingres://host:port{,port}{;host:port{,port}}/db{;attr=value} Driver folder /lib/jdbc","title":"Vectorwise","component":"manual","version":"2.7.0","name":"vectorwise","url":"/manual/latest/database/databases/vectorwise.html","titles":[]},"146":{"id":146,"text":"Option Info Type Relational Driver Driver Link Version Included None Hop Dependencies None Documentation Documentation Link JDBC Url jdbc:vertica://VerticaHost:portNumber/databaseName Driver folder /lib/jdbc","title":"Vertica","component":"manual","version":"2.7.0","name":"vertica","url":"/manual/latest/database/databases/vertica.html","titles":[]},"147":{"id":147,"text":"-aza, --azure-account= The account to use for the Azure VFS -azi, --azure-block-increment= The block increment size for new files on Azure, multiples of 512 only. -azk, --azure-key= The key to use for the Azure VFS","title":"","component":"manual","version":"2.7.0","name":"hop-conf-cloud-azure-blob-storage","url":"/manual/latest/hop-tools/hop-conf/hop-conf-cloud-azure-blob-storage.html","titles":[]},"148":{"id":148,"text":"-gck, --google-cloud-service-account-key-file= Configure the path to a Google Cloud service account JSON key file","title":"","component":"manual","version":"2.7.0","name":"hop-conf-cloud-google-cloud-storage","url":"/manual/latest/hop-tools/hop-conf/hop-conf-cloud-google-cloud-storage.html","titles":[]},"149":{"id":149,"text":"-gdc, --google-drive-credentials-file= Configure the path to a Google Drive credentials JSON file -gdt, --google-drive-tokens-folder= Configure the path to a Google Drive tokens folder","title":"","component":"manual","version":"2.7.0","name":"hop-conf-cloud-google-drive","url":"/manual/latest/hop-tools/hop-conf/hop-conf-cloud-google-drive.html","titles":[]},"150":{"id":150,"text":"The hop-conf script offers many options to edit environment definitions. Windows Linux, macOS hop-conf.bat --environment-create \\ --environment hop2 \\ --environment-project hop2 --environment-purpose=Development \\ --environment-config-files=\"C:\\\\env-variables.json\" Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig --environment-create --environment hop2 --environment-project hop2 --environment-purpose Development --environment-config-files \"C:\\\\hop\\config\\hop-config.json Warning: referenced project 'hop2' doesn\\'t exist Found existing environment configuration file: C:\\\\variables.json Purpose: Development Project name: hop2 Config file: C:\\\\env-variables.json $ sh hop-conf.sh \\ --environment-create \\ --environment hop2 \\ --environment-project hop2 \\ --environment-purpose=Development \\ --environment-config-files=/env-variables.json Expected output: Creating environment 'hop2' Environment 'hop2' was created in Hop configuration file /hop/config/hop-config.json Warning: referenced project 'hop2' doesn't exist Found existing environment configuration file: /env-variables.json hop2 Purpose: Development Project name: hop2 Config file: /env-variables.json As you can see from the log, an empty file was created to set variables in: { } This command adds a variable to the environment configuration file: Windows Linux, macOS hop-conf.bat --config-file \"C:\\\\env-variables.json\" --config-file-set-variables \"DB_HOSTNAME=localhost,DB_PASSWORD=abcd\" Expected output: C:\\echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig --config-file \"C:\\\\env-variables.json\" --config-file-set-variables \"DB_HOSTNAME=localhost,DB_PASSWORD=abcd\" ===[Starting HopConfig]========================================================= Configuration file 'C:\\/env-variables.json' was modified. ./hop-conf.sh --config-file /env-variables.json --config-file-set-variables DB_HOSTNAME=localhost,DB_PASSWORD=abcd Expected output: Configuration file '/env-variables.json' was modified. If you look at the file env-variables.json, you’ll see that the variables were added: { \"variables\" : [ { \"name\" : \"DB_HOSTNAME\", \"value\" : \"localhost\", \"description\" : \"\" }, { \"name\" : \"DB_PASSWORD\", \"value\" : \"abcd\", \"description\" : \"\" } ] } Please note that you can add descriptions for the variables as well with the --describe-variable option. Please run hop-conf without options to see all the possibilities. The following example deletes an environment from the Hop configuration file: Windows Linux, macOS hop-conf.bat -ed --environment hop2 Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig -ed --environment hop2 ===[Starting HopConfig]========================================================= Lifecycle environment 'hop2' was deleted from Hop configuration file C:\\\\hop\\config\\hop-config.json ./hop-conf.sh -ed --environment hop2 Expected output: Lifecycle environment 'hop2' was deleted from Hop configuration file /hop/config/hop-config.json There are various options to configure the behavior of the Projects plugin itself. In Hop configuration file hop-config.json we can find the following options: { \"projectMandatory\" : true, \"environmentMandatory\" : false, \"defaultProject\" : \"default\", \"defaultEnvironment\" : null, \"standardParentProject\" : \"default\", \"standardProjectsFolder\" : \"/home/matt/test-stuff/\" } Option Description hop-conf option projectMandatory This will prevent anyone from using hop-run without specifying a project --project-mandatory environmentMandatory This will prevent anyone from using hop-run without specifying an environment --environment-mandatory defaultProject The default project to use when none is specified --default-project defaultEnvironment The default environment to use when none is specified --default-environment standardParentProject The standard parent project to propose when creating new project --standard-parent-project standardProjectsFolder The folder to which you’ll browse by default in the GUI when creating new projects --standard-projects-folder","title":"","component":"manual","version":"2.7.0","name":"hop-conf-projects","url":"/manual/latest/hop-tools/hop-conf/hop-conf-projects.html","titles":[{"text":"Configuration on the command line","hash":"_configuration_on_the_command_line","id":1},{"text":"Creating an environment","hash":"_creating_an_environment","id":2},{"text":"Setting variables in an environment","hash":"_setting_variables_in_an_environment","id":3},{"text":"Deleting an environment","hash":"_deleting_an_environment","id":4},{"text":"Projects Plugin configuration","hash":"_projects_plugin_configuration","id":5}]},"151":{"id":151,"text":"You can specify an environment or a project when executing a pipeline or a workflow. By doing so you are automatically configuring metadata, variables without too much fuss. The easiest example is shown by executing the \"complex\" pipeline from the Apache Beam examples: Windows Linux, macOS hop-run.bat --project samples --file 'beam/pipelines/complex.hpl' --runconfig Direct Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-run.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=\"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y Consolidated parameters to pass to HopRun are --project samples --file beam/pipelines/complex.hpl --runconfig Direct Command to start HopRun will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam \"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.run.HopRun --project samples --file beam/pipelines/complex.hpl --runconfig Direct ===[Starting HopRun]========================================================= 2022/12/16 14:23:10 - HopRun - Enabling project 'samples' 2022/12/16 14:23:10 - HopRun - Relative path filename specified: config/projects/samples/beam/pipelines/complex.hpl 2022/12/16 14:23:10 - HopRun - Starting pipeline: config/projects/samples/beam/pipelines/complex.hpl 2022/12/16 14:23:21 - General - Created Apache Beam pipeline with name 'complex' 2022/12/16 14:23:21 - General - Handled transform (INPUT) : Customer data 2022/12/16 14:23:21 - General - Handled transform (INPUT) : State data 2022/12/16 14:23:21 - General - Handled Group By (TRANSFORM) : countPerState, gets data from 1 previous transform(s) 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : uppercase state, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Handled Merge Join (TRANSFORM) : Merge join 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Lookup count per state, gets data from 1 previous transform(s), targets=0, infos=1 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : name<n, gets data from 1 previous transform(s), targets=2, infos=0 2022/12/16 14:23:21 - General - Transform Label: N-Z reading from previous transform targeting this one using : name<n - TARGET - Label: N-Z 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Label: N-Z, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Transform Label: A-M reading from previous transform targeting this one using : name<n - TARGET - Label: A-M 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Label: A-M, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Switch / case, gets data from 2 previous transform(s), targets=4, infos=0 2022/12/16 14:23:21 - General - Transform CA reading from previous transform targeting this one using : Switch / case - TARGET - CA 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : CA, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Transform NY reading from previous transform targeting this one using : Switch / case - TARGET - NY 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : NY, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Transform FL reading from previous transform targeting this one using : Switch / case - TARGET - FL 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : FL, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Transform Default reading from previous transform targeting this one using : Switch / case - TARGET - Default 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Default, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Collect, gets data from 4 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Handled transform (OUTPUT) : complex, gets data from Collect 2022/12/16 14:23:21 - General - Executing this pipeline using the Beam Pipeline Engine with run configuration 'Direct' ---- ./sh hop-run.sh --project samples --file 'beam/pipelines/complex.hpl' --runconfig Direct Expected output: 2022/12/16 14:27:37 - HopRun - Enabling project 'samples' 2022/12/16 14:27:37 - HopRun - Relative path filename specified: config/projects/samples/beam/pipelines/complex.hpl 2022/12/16 14:27:37 - HopRun - Starting pipeline: config/projects/samples/beam/pipelines/complex.hpl 2022/12/16 14:27:41 - General - Created Apache Beam pipeline with name 'complex' 2022/12/16 14:27:41 - General - Handled transform (INPUT) : Customer data 2022/12/16 14:27:41 - General - Handled transform (INPUT) : State data 2022/12/16 14:27:41 - General - Handled Group By (TRANSFORM) : countPerState, gets data from 1 previous transform(s) 2022/12/16 14:27:41 - General - Handled generic transform (TRANSFORM) : uppercase state, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:41 - General - Handled Merge Join (TRANSFORM) : Merge join 2022/12/16 14:27:41 - General - Handled generic transform (TRANSFORM) : Lookup count per state, gets data from 1 previous transform(s), targets=0, infos=1 2022/12/16 14:27:41 - General - Handled generic transform (TRANSFORM) : name<n, gets data from 1 previous transform(s), targets=2, infos=0 2022/12/16 14:27:41 - General - Transform Label: N-Z reading from previous transform targeting this one using : name<n - TARGET - Label: N-Z 2022/12/16 14:27:41 - General - Handled generic transform (TRANSFORM) : Label: N-Z, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:41 - General - Transform Label: A-M reading from previous transform targeting this one using : name<n - TARGET - Label: A-M 2022/12/16 14:27:41 - General - Handled generic transform (TRANSFORM) : Label: A-M, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:41 - General - Handled generic transform (TRANSFORM) : Switch / case, gets data from 2 previous transform(s), targets=4, infos=0 2022/12/16 14:27:41 - General - Transform CA reading from previous transform targeting this one using : Switch / case - TARGET - CA 2022/12/16 14:27:42 - General - Handled generic transform (TRANSFORM) : CA, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:42 - General - Transform NY reading from previous transform targeting this one using : Switch / case - TARGET - NY 2022/12/16 14:27:42 - General - Handled generic transform (TRANSFORM) : NY, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:42 - General - Transform FL reading from previous transform targeting this one using : Switch / case - TARGET - FL 2022/12/16 14:27:42 - General - Handled generic transform (TRANSFORM) : FL, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:42 - General - Transform Default reading from previous transform targeting this one using : Switch / case - TARGET - Default 2022/12/16 14:27:42 - General - Handled generic transform (TRANSFORM) : Default, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:27:42 - General - Handled generic transform (TRANSFORM) : Collect, gets data from 4 previous transform(s), targets=0, infos=0 2022/12/16 14:27:42 - General - Handled transform (OUTPUT) : complex, gets data from Collect 2022/12/16 14:27:42 - General - Executing this pipeline using the Beam Pipeline Engine with run configuration 'Direct' To execute an Apache Beam pipeline a lot of information and metadata is needed. Let’s dive into a few fun information tidbits: By referencing the samples project Hop knows where the project is located (config/projects/samples) Since we know the location of the project, we can specify pipelines and workflows with a relative path The project knows where its metadata is stored (config/projects/samples/metadata) so it knows where to find the Direct pipeline run configuration (config/projects/samples/metadata/pipeline-run-configuration/Direct.json) This run configuration defines its own pipeline engine specific variables, in this case the output folder : DATA_OUTPUT=${PROJECT_HOME}/beam/output/ The output of the samples is as such written to config/projects/samples/beam/output To reference an environment you can execute using -e or --environment. The only difference is that you’ll have a number of extra environment variables set while executing.","title":"","component":"manual","version":"2.7.0","name":"hop-conf-run-hpl-hwf","url":"/manual/latest/hop-tools/hop-conf/hop-conf-run-hpl-hwf.html","titles":[]},"152":{"id":152,"text":"Hop Conf is a command line tool to manage environments. The hop-conf.sh script can be run with the -h flag (./hop-conf.sh -h) to display available options. Usage Usage: [-h] [-ec] [-ed] [-el] [-em] [-ey] [-pc] [-pd] [-pl] [-pm] [-pn] [-py] [-aza=] [-azi=] [-azk=] [-cfg=] [-dc=] [-de=] [-dp=] [-dv=] [-e=] [-ep=] [-eu=] [-fj=] [-gck=] [-gdc=] [-gdt=] [-p=] [-pa=] [-pb=] [-pf=] [-ph=] [-pp=] [-pr=] [-ps=] [-pt=] [-pu=] [-px=] [-sj=] [-sp=] [-sv=] [-xm=] [-cfd= [,...]]... [-cfv=[,...]]... [-eg=[, ...]]... [-pv=[, ...]]... -aza, --azure-account= The account to use for the Azure VFS -azi, --azure-block-increment= The block increment size for new files on Azure, multiples of 512 only. -azk, --azure-key= The key to use for the Azure VFS -cfd, --config-file-describe-variables=[, ...] A list of variable=description combinations separated by a comma -cfg, --config-file= Specify the configuration JSON file to manage -cfv, --config-file-set-variables=[, ...] A list of variable=value combinations separated by a comma -dc, --default-projects-folder= The standard project configuration filename proposed when creating projects -de, --default-environment= The name of the default environment to use when none is specified -dp, --default-project= The name of the default project to use when none is specified -dv, --describe-variable= Describe a variable, use format VARIABLE=Description -e, --environment= The name of the lifecycle environment to manage -ec, --environment-create Create a new project lifecycle environment. Also specify its name, purpose, the project name and the configuration files. -ed, --environment-delete Delete a lifecycle environment -eg, --environment-config-files=[, ...] A list of configuration files for this lifecycle environment, comma separated -el, --environments-list List the defined lifecycle environments -em, --environment-modify Modify a lifecycle environment -ep, --environment-project= The project for the environment -eu, --environment-purpose= The purpose of the environment: Development, Testing, Production, CI, ... -ey, --environment-mandatory Make it mandatory to reference an environment -fj, --generate-fat-jar= Specify the filename of the fat jar to generate from your current software installation -gck, --google-cloud-service-account-key-file= Configure the path to a Google Cloud service account JSON key file -gdc, --google-drive-credentials-file= Configure the path to a Google Drive credentials JSON file -gdt, --google-drive-tokens-folder= Configure the path to a Google Drive tokens folder -h, --help Displays this help message and quits. -p, --project= The name of the project to manage -pa, --project-metadata-base= The metadata base folder (relative to home) -pb, --project-datasets-base= The data sets CSV folder (relative to home) -pc, --project-create Create a new project. Also specify the name and its home -pd, --project-delete Delete a project -pf, --project-config-file= The configuration file relative to the home folder. The default value is project-config.json -ph, --project-home= The home directory of the project -pl, --projects-list List the defined projects -pm, --project-modify Modify a project -pn, --projects-enabled Enable or disable the projects plugin -pp, --project-company= The company -pr, --project-parent= The name of the parent project to inherit metadata and variables from -ps, --project-description= The description of the project -pt, --project-department= The department -pu, --project-unit-tests-base= The unit tests base folder (relative to home) -pv, --project-variables=[,...] A list of variable=value combinations separated by a comma -px, --project-enforce-execution= Validate before execution that a workflow or pipeline is located in the project home folder or a sub-folder (true/false). -py, --project-mandatory Make it mandatory to reference a project -sj, --standard-projects-folder= GUI: The standard projects folder proposed when creating projects -sp, --standard-parent-project= The name of the standard project to use as a parent when creating new projects -sv, --set-variable= Set a variable, use format VAR=Value -xm, --export-metadata= Export project metadata to a single JSON file which you can specify with this option. Also specify the -p option. -v, --version Print version information and exit The available options are listed below: Table 1. Hop-conf Options Short Option Extended Option Description -h --help Displays this help message and quits -v --version Print version information and exit -ec --environment-create Create an environment Also specify the name and its home -ed --environment-delete Delete an environment -el --environment-list List the defined environments -em --environment-modify Modify an environment -pc --project-create Create a new project. Also specify the name and its home -pd --prject-delete Delete a project -pl --project-list List the defined projects -pm --project-modify Modify a project -dv --describe-variable= Describe a variable -e -environment= The name of the environment to manage -ep --environment-project= The project for the environment -eu --environment-purpose= The purpose of the environment: Development, Testing, Production, CI, …​ -fj --generate-fat-jar= Specify the filename of the fat jar to generate from your current software installation -xm --export-metadata= Export project metadata to a single JSON file which you can specify with this option. Also specify the -p option to know which metadata to export. -p --project= The project name -pa --project-metadata-base= The metadata base folder (relative to home) -pb --project-datasets-base-base= The data sets CSV folder (relative to home) -pf --project-config-file= The configuration file relative to the home folder. The default value is project-config.json -ph --project-home= The home directory of the project -pp --project-company= The company -ps --project-description= The description of the project -pt --project-department= The department -pu --project-unit-tests-base= The unit tests base folder (relative to home) -px --project-enforce-execution= Validate before execution that a workflow or pipeline islocated in the project home folder or a sub-folder (true/false) -sv --set-variable= Set a variable, use format VAR=Value -sv can be used to unset a variable by specifying a variable without a value, e.g. -sv=myvar= -cfg --config-file= Specify the configuration JSON file to manage -cfd --config-file-describe-variables=[,…​] A list of variable=description combinations separated by a comma -cfv --config-file-set-variables= ,…​] A list of variable=value combinations separated by a comma -eg --environment-config-files=[, …​] A list of configuration files for this lifecycle environment, comma separated -pv --project-variables=[,…​] A list of variable=value combinations separated by a comma This is a list of examples on how the parameters on this command are parsed --project-variables=key1=value1,key2=value2 Result: Key value key1 value1 key2 value2 --project-variables=key1=\"This value contains spaces\",key2=value2 Result: Key value key1 This value contains spaces key2 value2 --project-variables=key1=\\\"value1,value2\\\" Result: Key value key1 value1,value2 --project-variables=key1=\"\\\"\\\"String with spaces\\\"\\\"\" Result: Key value key1 \"String with spaces\" The hop-conf script offers many options to edit environment definitions. Windows Linux, macOS hop-conf.bat --environment-create \\ --environment hop2 \\ --environment-project hop2 --environment-purpose=Development \\ --environment-config-files=\"C:\\\\env-variables.json\" Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig --environment-create --environment hop2 --environment-project hop2 --environment-purpose Development --environment-config-files \"C:\\\\hop\\config\\hop-config.json Warning: referenced project 'hop2' doesn\\'t exist Found existing environment configuration file: C:\\\\variables.json Purpose: Development Project name: hop2 Config file: C:\\\\env-variables.json $ sh hop-conf.sh \\ --environment-create \\ --environment hop2 \\ --environment-project hop2 \\ --environment-purpose=Development \\ --environment-config-files=/env-variables.json Expected output: Creating environment 'hop2' Environment 'hop2' was created in Hop configuration file /hop/config/hop-config.json Warning: referenced project 'hop2' doesn't exist Found existing environment configuration file: /env-variables.json hop2 Purpose: Development Project name: hop2 Config file: /env-variables.json As you can see from the log, an empty file was created to set variables in: { } This command adds a variable to the environment configuration file: Windows Linux, macOS hop-conf.bat --config-file \"C:\\\\env-variables.json\" --config-file-set-variables \"DB_HOSTNAME=localhost,DB_PASSWORD=abcd\" Expected output: C:\\echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig --config-file \"C:\\\\env-variables.json\" --config-file-set-variables \"DB_HOSTNAME=localhost,DB_PASSWORD=abcd\" ===[Starting HopConfig]========================================================= Configuration file 'C:\\/env-variables.json' was modified. ./hop-conf.sh --config-file /env-variables.json --config-file-set-variables DB_HOSTNAME=localhost,DB_PASSWORD=abcd Expected output: Configuration file '/env-variables.json' was modified. If you look at the file env-variables.json, you’ll see that the variables were added: { \"variables\" : [ { \"name\" : \"DB_HOSTNAME\", \"value\" : \"localhost\", \"description\" : \"\" }, { \"name\" : \"DB_PASSWORD\", \"value\" : \"abcd\", \"description\" : \"\" } ] } Please note that you can add descriptions for the variables as well with the --describe-variable option. Please run hop-conf without options to see all the possibilities. The following example deletes an environment from the Hop configuration file: Windows Linux, macOS hop-conf.bat -ed --environment hop2 Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-conf.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=-Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y Command to start Hop will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam -Xmx2048m -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Conf -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.config.HopConfig -ed --environment hop2 ===[Starting HopConfig]========================================================= Lifecycle environment 'hop2' was deleted from Hop configuration file C:\\\\hop\\config\\hop-config.json ./hop-conf.sh -ed --environment hop2 Expected output: Lifecycle environment 'hop2' was deleted from Hop configuration file /hop/config/hop-config.json There are various options to configure the behavior of the Projects plugin itself. In Hop configuration file hop-config.json we can find the following options: { \"projectMandatory\" : true, \"environmentMandatory\" : false, \"defaultProject\" : \"default\", \"defaultEnvironment\" : null, \"standardParentProject\" : \"default\", \"standardProjectsFolder\" : \"/home/matt/test-stuff/\" } Option Description hop-conf option projectMandatory This will prevent anyone from using hop-run without specifying a project --project-mandatory environmentMandatory This will prevent anyone from using hop-run without specifying an environment --environment-mandatory defaultProject The default project to use when none is specified --default-project defaultEnvironment The default environment to use when none is specified --default-environment standardParentProject The standard parent project to propose when creating new project --standard-parent-project standardProjectsFolder The folder to which you’ll browse by default in the GUI when creating new projects --standard-projects-folder You can specify an environment or a project when executing a pipeline or a workflow. By doing so you are automatically configuring metadata, variables without too much fuss. The easiest example is shown by executing the \"complex\" pipeline from the Apache Beam examples: Windows Linux, macOS hop-run.bat --project samples --file 'beam/pipelines/complex.hpl' --runconfig Direct Expected output: C:\\\\hop>echo off ===[Environment Settings - hop-run.bat]=================================== Java identified as \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" HOP_OPTIONS=\"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y Consolidated parameters to pass to HopRun are --project samples --file beam/pipelines/complex.hpl --runconfig Direct Command to start HopRun will be: \"C:\\Program Files\\Microsoft\\jdk-11.0.17.8-hotspot\\\\bin\\java\" -classpath lib\\core\\*;lib\\beam\\*;lib\\swt\\win64\\* -Djava.library.path=lib\\core;lib\\beam \"-Xmx2048m\" -DHOP_AUDIT_FOLDER=.\\audit -DHOP_PLATFORM_OS=Windows -DHOP_PLATFORM_RUNTIME=Run -DHOP_AUTO_CREATE_CONFIG=Y org.apache.hop.run.HopRun --project samples --file beam/pipelines/complex.hpl --runconfig Direct ===[Starting HopRun]========================================================= 2022/12/16 14:23:10 - HopRun - Enabling project 'samples' 2022/12/16 14:23:10 - HopRun - Relative path filename specified: config/projects/samples/beam/pipelines/complex.hpl 2022/12/16 14:23:10 - HopRun - Starting pipeline: config/projects/samples/beam/pipelines/complex.hpl 2022/12/16 14:23:21 - General - Created Apache Beam pipeline with name 'complex' 2022/12/16 14:23:21 - General - Handled transform (INPUT) : Customer data 2022/12/16 14:23:21 - General - Handled transform (INPUT) : State data 2022/12/16 14:23:21 - General - Handled Group By (TRANSFORM) : countPerState, gets data from 1 previous transform(s) 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : uppercase state, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/16 14:23:21 - General - Handled Merge Join (TRANSFORM) : Merge join 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : Lookup count per state, gets data from 1 previous transform(s), targets=0, infos=1 2022/12/16 14:23:21 - General - Handled generic transform (TRANSFORM) : name The account to use for the Azure VFS -azi, --azure-block-increment= The block increment size for new files on Azure, multiples of 512 only. -azk, --azure-key= The key to use for the Azure VFS Set the path to your Google Cloud service account JSON key file -gck, --google-cloud-service-account-key-file= Configure the path to a Google Cloud service account JSON key file Set the path to your Google Drive credentials JSON file or Google Drive tokens folder. -gdc, --google-drive-credentials-file= Configure the path to a Google Drive credentials JSON file -gdt, --google-drive-tokens-folder= Configure the path to a Google Drive tokens folder","title":"Hop Conf - The Hop command line configuration tool","component":"manual","version":"2.7.0","name":"hop-conf","url":"/manual/latest/hop-tools/hop-conf/hop-conf.html","titles":[{"text":"Usage","hash":"_usage","id":1},{"text":"project variables Examples","hash":"_project_variables_examples","id":2},{"text":"Normal Usage","hash":"_normal_usage","id":3},{"text":"Spaces in value Usage","hash":"_spaces_in_value_usage","id":4},{"text":"Commas in value Usage","hash":"_commas_in_value_usage","id":5},{"text":"Forcing quotes in value","hash":"_forcing_quotes_in_value","id":6},{"text":"Project Usage and Configuration","hash":"_project_usage_and_configuration","id":7},{"text":"Configuration on the command line","hash":"_configuration_on_the_command_line","id":8},{"text":"Creating an environment","hash":"_creating_an_environment","id":9},{"text":"Setting variables in an environment","hash":"_setting_variables_in_an_environment","id":10},{"text":"Deleting an environment","hash":"_deleting_an_environment","id":11},{"text":"Projects Plugin configuration","hash":"_projects_plugin_configuration","id":12},{"text":"Running Workflows and Pipelines","hash":"_running_workflows_and_pipelines","id":13},{"text":"Cloud Storage Configuration","hash":"_cloud_storage_configuration","id":14},{"text":"Amazon Web Services S3","hash":"_amazon_web_services_s3","id":15},{"text":"Azure","hash":"_azure","id":16},{"text":"Google","hash":"_google","id":17},{"text":"Google Cloud Storage","hash":"_google_cloud_storage","id":18},{"text":"Google Drive","hash":"_google_drive","id":19}]},"153":{"id":153,"text":"Connections can be created and edited using the logo (click on it to edit), and the drop down menu (arrow down) which you can find on the right of every connection line on the various Cassandra action or transform dialogs. They can also be managed with the metadata perspective in the Hop GUI. Finally, please note that Cassandra Connections are serialized as JSON in the Hop metadata folder under metadata/cassandra-connection/ Option Description Hostname Specify the host name(s) for the connection to the Cassandra server Port Specify the port number for the connection to the Cassandra server Username Specify the username of the target keyspace and/or table authentication details Password Specify the password of the target keyspace and/or table authentication details Socket Timeout Set an optional connection timeout period, specified in milliseconds. Keyspace Specify the keyspace (database) name. You can use the Select Keyspace button to select a keyspace. You can use the Execute CQL button to create one. For example: CREATE KEYSPACE IF NOT EXISTS hop WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3} ; Schema hostname For writes only: Specify the host name for the connection to the Cassandra schema (leave blank if not different from hostname) Schema port For writes only: Specify the port for the connection to the Cassandra schema (leave blank if not different from port) Use compression Select if you want the text of each BATCH INSERT statement compressed (with GZIP) before transmitting it to the node.","title":"Cassandra Connection","component":"manual","version":"2.7.0","name":"cassandra-connection","url":"/manual/latest/metadata-types/cassandra/cassandra-connection.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"The Options","hash":"_the_options","id":2}]},"154":{"id":154,"text":"Table of Contents Description The user interface The Basic options The Protocol options Neo4j Aura Cloud Service The Advanced options Connection Liveliness Check Timeout (ms) Maximum Connection Lifetime (ms) Maximum Pool Size Connection Acquisition Time (ms) Maximum Transaction Retry Time (ms) Manual URLs Connections can be created and edited using the logo (click on it to edit), and the drop down menu (arrow down) which you can find on the right of every connection line on the various Neo4j dialogs. They can also be managed with the metadata perspective in the Hop GUI. Neo4j Connections are serialized as JSON in the Hop metadata folder under metadata/neo4j-connection/ In most cases the Neo4j driver can figure out the protocol and security options automatically allowing you to focus on the most elementary options: server, port, username and password. As per usual we recommend that you never hardcode any settings but use environment variables which you can define in an environment configuration file. This way the same Neo4j connection can be used in multiple environments without the need to change pipelines or workflows. Option Description Connection name The name of a connection uniquely identifying it Automatic? If you enable this option you ask the driver to automatically determine protocol options like encryption and routing. Server or IP Address The IP address or hostname used to reach the Neo4j server. If you have more than one server address to specify, use a comma separated list of hosts. Database Name The database to use (defaults to neo4j). A feature available in Neo4j server 4.0 or higher. Database port The Neo4j database port to connect to. If you leave this blank it uses the default port number: 7687. Username the Neo4j database user to log in with Password the password to use Option Description Version 4 database? Enable this option to help us generate the most optimized Cypher for you. Browser port information only. The port on which the Neo4j browser runs Use routing, neo4j:// protocol? enable this option to use the bolt+routing protocol Routing policy The bolt+routing policy to use Use encryption? Unless you generated and configured the correct SSL keys, disable this. Make sure to check our v4 upgrade notes To connect to an Aura version 4 or 5 database you can use the following options: Option Value Automatic? Enabled Protocol neo4j+s Server or IP address the provided …​.neo4j.io hostname Username neo4j Password the provided password Pooled connections that have been idle in the pool for longer than this timeout will be tested before they are used again, to ensure they are still live. If this option is set too low, an additional network call will be incurred when acquiring a connection, which causes a performance hit. If this is set high, you may receive sessions that are backed by no longer live connections, which will lead to exceptions in your application. Assuming the database is running, these exceptions will go away if you retry acquiring sessions. Hence, this parameter tunes a balance between the likelihood of your application seeing connection problems, and performance. You normally should not need to tune this parameter. No connection liveliness check is done by default. Value 0 means connections will always be tested for validity and negative values mean connections will never be tested. Pooled connections older than this threshold will be closed and removed from the pool. Such discarding happens during connection acquisition so that new session is never backed by an old connection. Setting this option to a low value will cause a high connection churn and might result in a performance hit. It is recommended to set maximum lifetime to a slightly smaller value than the one configured in network equipment (load balancer, proxy, firewall, etc. can also limit maximum connection lifetime). Setting can also be used in combination with the Connection Liveness Check Timeout (ms) value. In this case, it is recommended to set liveness check to a value smaller than network equipment has and maximum lifetime to a reasonably large value to \"renew\" connections once in a while. Default maximum connection lifetime is 1 hour. Zero and negative values result in lifetime not being checked. Configure the maximum amount of connections in the connection pool towards a single database. This setting limits total amount of connections in the pool when used in direct driver, created for URI with 'bolt' scheme. It will limit amount of connections per cluster member when used with routing driver, created for URI with 'neo4j' scheme. Acquisition will be attempted for at most configured timeout Connection Acquisition Timeout(ms) when limit is reached. Default value is 100. Negative values are allowed and result in unlimited pool. Value of 0 is not allowed. Configure the maximum amount of time the connection acquisition will attempt to acquire a connection from the connection pool. This timeout only kicks in when all existing connections are being used and no new connections can be created because maximum connection pool size has been reached. An error is thrown when a connection can’t be acquired within the configured time. The default value is 60 seconds. Negative values are allowed and result in unlimited acquisition timeout. Value of 0 is allowed and results in no timeout and immediate failure when connection is unavailable. Specify the maximum time transactions are allowed to retry via session read and write transactions. These methods will retry the given unit of work on ServiceUnavailableException, SessionExpiredException and TransientException with an exponential backoff using initial delay of 1 second. Default value is 30 seconds. You can specify a list of manual connection URLs to allow you to work with any advanced, legacy, bleeding edge, …​ feature you can possibly want. See here for more information on Bolt connection URIs: https://neo4j.com/docs/driver-manual/current/client-applications/","title":"Neo4j Connection","component":"manual","version":"2.7.0","name":"neo4j-connection","url":"/manual/latest/metadata-types/neo4j/neo4j-connection.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"The user interface","hash":"_the_user_interface","id":2},{"text":"The Basic options","hash":"_the_basic_options","id":3},{"text":"The Protocol options","hash":"_the_protocol_options","id":4},{"text":"Neo4j Aura Cloud Service","hash":"_neo4j_aura_cloud_service","id":5},{"text":"The Advanced options","hash":"_the_advanced_options","id":6},{"text":"Connection Liveliness Check Timeout (ms)","hash":"_connection_liveliness_check_timeout_ms","id":7},{"text":"Maximum Connection Lifetime (ms)","hash":"_maximum_connection_lifetime_ms","id":8},{"text":"Maximum Pool Size","hash":"_maximum_pool_size","id":9},{"text":"Connection Acquisition Time (ms)","hash":"_connection_acquisition_time_ms","id":10},{"text":"Maximum Transaction Retry Time (ms)","hash":"_maximum_transaction_retry_time_ms","id":11},{"text":"Manual URLs","hash":"_manual_urls","id":12}]},"155":{"id":155,"text":"A graph model describes (part of) a graph by allowing you to define nodes with their properties, and the relationships that connect these nodes. You can then use such a Graph Model to map input fields to properties in the Neo4j Graph Output transform.","title":"Neo4j Graph Model","component":"manual","version":"2.7.0","name":"neo4j-graphmodel","url":"/manual/latest/metadata-types/neo4j/neo4j-graphmodel.html","titles":[{"text":"Description","hash":"_description","id":1}]},"156":{"id":156,"text":"With this location type you can store execution information in a Neo4j graph database. Neo4j connection: the name of the Neo4j connection to store the information in. Button 'Show indexes DDL': This displays the CREATE INDEX statements that you want to execute on the Neo4j connection to make sure performance is and remains good when writing and reading information. Button 'Copy a Neo4j Index action to clipboard': This copies the Neo4j Index action to the clipboard so that you can just copy this in a workflow. It will make sure that the right indexes are created (if needed) to have great performance when using the execution information location. This is the graph model that gets populated by this execution information location plugin:","title":"Neo4j Location Type","component":"manual","version":"2.7.0","name":"neo4j-location-type","url":"/manual/latest/metadata-types/neo4j/neo4j-location-type.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Graph model","hash":"_graph_model","id":3}]},"157":{"id":157,"text":"The AES two-way password encoder plugin allows you to encrypt and decrypt passwords using a provided key string. The configuration of this encoder is for the whole Hop environment and can as such only be done using system properties. These properties are listed below and can also be specified as system properties with hop-run: HOP_PASSWORD_ENCODER_PLUGIN: set this to the ID of this plugin: AES HOP_AES_ENCODER_KEY: Specify the key to use to encode or decode passwords Please note that passwords are encoded with prefix AES which is AES plus a space. This means that it’s different from standard, Hop encoded, passwords which have prefix Encrypted which is Encrypted plus a space. The consequence of this is that you need to encode passwords either one way or another. Mixing password encoding is not supported. Make sure to only use variables and parameters to specify passwords. Store the passwords in an environment using the projects plugin. This way you can store the passwords in a single file specific for the given environment (development, test, production, …​). Secure the passwords file. Even though passwords are encrypted it’s better to be safe than sorry. A password that can’t be read, encrypted or otherwise, can’t be seen in any way. So use appropriate file security on the file in which you eventually store the passwords. This advice is doubly true for the key. You can specify the key using a variable as well. You can test your setup by setting the variables in your environment and then by using hop-encrypt to see the output: $:~/hop$ export HOP_PASSWORD_ENCODER_PLUGIN=AES $:~/hop$ export HOP_AES_ENCODER_KEY=ddsfsdfsfsdf $:~/hop$ sh hop-encrypt.sh -hop MyPassword222 AES kb/8yIPqClL/0+/e+gsVcw== $:~/hop$ export HOP_AES_ENCODER_KEY=abcd $:~/hop$ sh hop-encrypt.sh -hop MyPassword222 AES s7JDgDBqQWMh1E/RWgGaUA==","title":"AES Two way password encoder","component":"manual","version":"2.7.0","name":"aespasswords","url":"/manual/latest/password/passwords/aespasswords.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Noteworthy","hash":"_noteworthy","id":3},{"text":"Best practices","hash":"_best_practices","id":4},{"text":"Hop Encrypt","hash":"_hop_encrypt","id":5}]},"158":{"id":158,"text":"Table of Contents Prerequisites Run the Apache Beam pipelines in the Apache Hop samples project Next steps We’ll start by preparing a Google Cloud project, enabling the required apis, a service account and a Google Cloud Storage bucket. Head over to the Google Cloud Console and create a project. Next, make sure your project is selected and, go to \"APIs & Services\" and enable Google Cloud Storage API and Google Dataflow API. In the \"Credentials\" tab of the Google Dataflow API home screen, you’ll see the service account that was created after you enabled the API. You’ll need this service account later on. Next, we’ll need to create a Google Cloud Storage bucket. Go to the Google Cloud Storage page for your project and create a bucket. we created a bucket \"apache-beam-hop\" in the \"europe-west1 (Belgium)\" region. All other settings can be left to the defaults. Create two folders \"input\" and \"output\" in this bucket and upload the two .txt files from the \"beam/input\" folder in your Apache Hop samples project to the input folder. In the Google Cloud Storage screen, select your bucket, then \"Permissions\", make sure to switch to \"Fine grained access control\" and make sure the service account has access to your bucket. Finally, go to the IAM & Admin → Service Accounts page of your Google Cloud project and click on the service account that was created when you enabled the Dataflow API. In this page, go to the Keys tab, and create and download a JSON key. Next, we’ll need to make sure your system knows how to use this key. There are multiple options, the easiest way is to set an environment variable. I used the command below on my Linux system: export GOOGLE_APPLICATION_CREDENTIALS=/beam-hop-demo-.json Apache Hop comes with a number of Apache Beam pipelines in the samples project. Let’s run those in our newly created Google Cloud project. First of all, we’ll need to create a fat jar. This fat jar is a self-contained library that contains everything Apache Beam and Google Dataflow will need to run our pipelines. This jar file will be several hundreds of MB and will be uploaded to the Google Cloud Storage bucket we created earlier. Click the Hop icon in Hop Gui’s upper left corner and select \"Generate a Hop fat jar\". After you specified a directory and file name (we used /tmp/hop-fat.jar) to store the fat jar, Hop will need a couple of minutes to generate your fat jar. With the fat jar in place, open the samples project in Apache Hop Gui and switch to the metadata perspective. The samples project comes with a pre-configured DataFlow pipeline run configuration that we’ll change to use our newly created Google Cloud project. Edit the run configuration to use the settings for the project we just created: For the sake of simplicity, check the \"Use public IPs?\" option. Check the Google Cloud docs to learn more about configuring your project to run with private IP addresses. In the Dataflow pipeline run configuration’s variables tab, change the values DATA_INPUT, STATE_INPUT and DATA_OUTPUT variables to the bucket name you just created. Als change the filename customers-noheader-1M.txt to customers-noheader-1k.txt. INFO: As mentioned in the introduction, distributed engines like Google Dataflow only make sense when you need to process large amounts of data. Working with small files like the customers file we’re about to process doesn’t make any sense in a real-world scenario. Working with small amounts of data will always be a lot faster in the native local or remote pipeline run configuration. You now have everything in place to run your first pipeline in Google Dataflow. Go back to the data orchestration perspective and open beam/pipelines/switch-case.hpl from the samples project. The Beam File Input and Beam File output transforms at the start of the pipeline are special Beam transforms. Both point to Beam File Definitions that you can find in the metadata perspective. The only thing these transforms do is specify a file layout and a path (the $${DATA_DIR$} variable you changed earlier) where Dataflow can find the input files to read from and output files to write to. The rest of this pipeline is Just Another Pipeline. Hit the run button, choose the Dataflow run configuration and click \"Launch\". Apache Hop will upload your fat jar to the staging folder in your Google Cloud Storage bucket, which will take a couple of minutes (check the \"staging\" folder in your bucket). When that is done, a dataflow job will be created and started. Creating the job, starting the pods and running the pipeline will take another couple of minutes. The Dataflow job should finish successfully after a couple of minutes. Remember: distributed engines are not designed to handle small data files, the native (local or remote) pipeline run configurations will always perform better on small volumes of data. Notice how Dataflow created a job where the visual layout and the transform names are immediately recognizable from your Apache Hop pipeline. Check the logs at the bottom of the page. Now, switch back to Hop Gui and notice how your Switch Case pipeline has been updated with green success checks and transform metrics. The logging tab looks a little different than what you’re used to from pipelines that run in the native engine. Apache Hop depends on the logging information and metrics it receives from Apache Beam, which in its turn needs to receive logging and metrics from the called distributed platform (Dataflow in this case). 2023/06/03 15:44:18 - Hop - Pipeline opened. 2023/06/03 15:44:18 - Hop - Launching pipeline [switch-case]... 2023/06/03 15:44:18 - Hop - Started the pipeline execution. 2023/06/03 15:44:19 - General - Created Apache Beam pipeline with name 'switch-case' 2023/06/03 15:44:19 - General - Handled transform (INPUT) : Customers 2023/06/03 15:44:19 - General - Handled generic transform (TRANSFORM) : Switch / case, gets data from 1 previous transform(s), targets=4, infos=0 2023/06/03 15:44:19 - General - Transform NY reading from previous transform targeting this one using : Switch / case - TARGET - NY 2023/06/03 15:44:19 - General - Handled generic transform (TRANSFORM) : NY, gets data from 1 previous transform(s), targets=0, infos=0 2023/06/03 15:44:19 - General - Transform CA reading from previous transform targeting this one using : Switch / case - TARGET - CA 2023/06/03 15:44:19 - General - Handled generic transform (TRANSFORM) : CA, gets data from 1 previous transform(s), targets=0, infos=0 2023/06/03 15:44:19 - General - Transform Default reading from previous transform targeting this one using : Switch / case - TARGET - Default 2023/06/03 15:44:19 - General - Handled generic transform (TRANSFORM) : Default, gets data from 1 previous transform(s), targets=0, infos=0 2023/06/03 15:44:19 - General - Transform FL reading from previous transform targeting this one using : Switch / case - TARGET - FL 2023/06/03 15:44:19 - General - Handled generic transform (TRANSFORM) : FL, gets data from 1 previous transform(s), targets=0, infos=0 2023/06/03 15:44:19 - General - Handled generic transform (TRANSFORM) : Collect, gets data from 4 previous transform(s), targets=0, infos=0 2023/06/03 15:44:19 - General - Handled transform (OUTPUT) : switch-case, gets data from Collect 2023/06/03 15:44:19 - switch-case - Executing this pipeline using the Beam Pipeline Engine with run configuration 'DataFlow' 2023/06/03 15:47:25 - switch-case - Beam pipeline execution has finished. You’ve now successfully configured and executed your first Apache Hop pipeline on Google Cloud Dataflow with Hop’s Dataflow pipeline run configuration.","title":"Running the Apache Beam samples on Google Cloud Dataflow","component":"manual","version":"2.7.0","name":"beam-samples-dataflow","url":"/manual/latest/pipeline/beam/beam-samples-dataflow.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Run the Apache Beam pipelines in the Apache Hop samples project","hash":"_run_the_apache_beam_pipelines_in_the_apache_hop_samples_project","id":2},{"text":"Next steps","hash":"_next_steps","id":3}]},"159":{"id":159,"text":"The Direct Runner executes pipelines on your machine and is designed to validate that pipelines adhere to the Apache Beam model as closely as possible. Instead of focusing on efficient pipeline execution, the Direct Runner performs additional checks to ensure that users do not rely on semantics that are not guaranteed by the model. Using the Direct Runner for testing and development helps ensure that pipelines are robust across different Beam runners. In addition, debugging failed runs can be a non-trivial task when a pipeline executes on a remote cluster. Instead, it is often faster and simpler to perform local unit testing on your pipeline code. Unit testing your pipeline locally also allows you to use your preferred local debugging tools. check the Apache Beam Direct Runner docs for more details. The default settings for the direct runner should work by default, all you need to do is specify your fat jar location. Contrary to the Flink and Spark runners, the direct runner can be started directly from Hop Gui. The output from beam/pipelines/generate-synthetic-data.hpl (with a reduced number of rows) is shown below. 2022/02/11 11:28:36 - Hop - Projects enabled 2022/02/11 11:28:36 - Hop - Enabling project : 'samples' 2022/02/11 11:29:24 - Hop - Pipeline opened. 2022/02/11 11:29:24 - Hop - Launching pipeline [generate-synthetic-data]... 2022/02/11 11:29:24 - Hop - Started the pipeline execution. 2022/02/11 11:29:26 - General - Created Apache Beam pipeline with name 'generate-synthetic-data' 2022/02/11 11:29:26 - General - Handled transform (ROW GENERATOR) : 100M rows 2022/02/11 11:29:26 - General - Handled generic transform (TRANSFORM) : random data, gets data from 1 previous transform(s), targets=0, infos=0 2022/02/11 11:29:26 - General - Handled transform (OUTPUT) : generate-synthetic-data, gets data from random data 2022/02/11 11:29:26 - generate-synthetic-data - Executing this pipeline using the Beam Pipeline Engine with run configuration 'Direct' 2022/02/11 11:30:44 - generate-synthetic-data - Beam pipeline execution has finished.","title":"Running the Apache Beam samples With the Beam Direct Runner","component":"manual","version":"2.7.0","name":"beam-samples-direct-runner","url":"/manual/latest/pipeline/beam/beam-samples-direct-runner.html","titles":[]},"160":{"id":160,"text":"Table of Contents Get Flink Start your local Flink single node cluster Flink Run Configuration setup From Hop GUI From Flink Run Check the Supported Versions on the Getting Started With Beam page to find the latest supported Flink version for your Hop version. For example, for Hop 1.2, the latest currently supported version is 1.13. Make sure to download Flink for a recent and JDK 8 compatible Scale version. For Flink 1.3.6, this is Scala 2.11. Download your selected Flink version and unzip to a convenient location. To keep things as simple as possible, we’ll run a local single node Flink cluster with a single command. In the folder where you unzipped Flink to, run: bin/start-cluster.sh Your output should look similar to the one below: Starting cluster. Starting standalonesession daemon on host . Starting taskexecutor daemon on host . The cluster shouldn’t take more than a couple of seconds to start. Once Flink is available, you’ll be able to access your Flink Dashboard at http://localhost:8081/ In Hop Gui’s metadata perspective for the Samples project, edit the Flink pipeline run configuration and make sure the Fat jar file location (the very last option) points to the Hop fat jar you created earlier in the prerequisites. Running Hop pipelines on embedded Flink through Hop Gui will work just fine but is intended for testing purposes and won’t show in your Flink dashboard. You can leave the default Flink master to [local] to run the embedded Flink engine from Hop Gui. Set your Flink master to your cluster’s master. For embedded Flink, [local] will do. Go back to the data orchestration perspective and run one of the Beam pipelines in the samples project. In this example, we used samples/beam/pipelines/generate-synthetic-data.hpl When you start your pipeline from Hop Gui, it will appear in your Flink Dashboard. In a real-world setup, you’ll run your Flink pipelines from the Flink master through flink run. Set your Flink master to [auto] and export your Hop metadata again (see prerequisites). Unlike Spark you can not pass java options at runtime to the TaskManager. So we also want to set the PROJECT_HOME variable in the run configuration. This variable is used during execution to know where the source files are. (Metadata perspective → Pipeline Run Configuration → Flink → Variables) Alternatively, you can provide a 4th argument after the run configuration name: the name of the environment configuration file to use. Use a command like the one below to pass all the information required by flink run. bin/flink run \\ --class org.apache.hop.beam.run.MainBeam \\ --parallelism 2 \\ /opt/flink/hop-fat-jar.jar \\ /hop/config/projects/samples/beam/pipelines/generate-synthetic-data.hpl \\ /opt/flink/hop-metadata.json \\ Flink With your Hop and Flink set up correctly, your output will look similar to what’s shown below: Argument 1 : Pipeline filename (.hpl) : /hop/config/projects/samples/beam/pipelines/generate-synthetic-data.hpl Argument 2 : Metadata filename (.json) : /opt/flink/hop-metadata.json Argument 3 : Pipeline run configuration : Flink >>>>>> Initializing Hop... Hop configuration file not found, not serializing: /flink/flink-1.13.5/config/hop-config.json >>>>>> Loading pipeline metadata >>>>>> Building Apache Beam Pipeline... >>>>>> Found Beam Input transform plugin class loader >>>>>> Pipeline executing starting... 2022/02/11 12:50:25 - General - Created Apache Beam pipeline with name 'generate-synthetic-data' 2022/02/11 12:50:26 - General - Handled transform (ROW GENERATOR) : 100M rows 2022/02/11 12:50:26 - General - Handled generic transform (TRANSFORM) : random data, gets data from 1 previous transform(s), targets=0, infos=0 2022/02/11 12:50:26 - General - Handled transform (OUTPUT) : generate-synthetic-data, gets data from random data 2022/02/11 12:50:26 - General - Executing this pipeline using the Beam Pipeline Engine with run configuration 'Flink' Job has been submitted with JobID 83f34cefa8d061994b7028df2dcebfcd Program execution finished Job with JobID 83f34cefa8d061994b7028df2dcebfcd has finished. Job Runtime: 129625 ms Accumulator Results: - __metricscontainers (org.apache.beam.runners.core.metrics.MetricsContainerStepMap): { \"metrics\": { \"attempted\": [{ \"urn\": \"beam:metric:user:sum_int64:v1\", \"type\": \"beam:metrics:sum_int64:v1\", \"payload\": \"Ag==\", \"labels\": { \"NAMESPACE\": \"startBundle\", \"NAME\": \"random data\", \"PTRANSFORM\": \"random data/ParMultiDo(Transform)\" } }, { \"urn\": \"beam:metric:user:sum_int64:v1\", \"type\": \"beam:metrics:sum_int64:v1\", \"payload\": \"oI0G\", \"labels\": { \"NAMESPACE\": \"read\", \"NAME\": \"random data\", \"PTRANSFORM\": \"random data/ParMultiDo(Transform)\" } }, { \"urn\": \"beam:metric:user:sum_int64:v1\", \"type\": \"beam:metrics:sum_int64:v1\", \"payload\": \"Ag==\", \"labels\": { \"NAMESPACE\": \"init\", \"NAME\": \"random data\", \"PTRANSFORM\": \"random data/ParMultiDo(Transform)\" } }, { \"urn\": \"beam:metric:user:sum_int64:v1\", \"type\": \"beam:metrics:sum_int64:v1\", \"payload\": \"oI0G\", \"labels\": { \"NAMESPACE\": \"written\", \"NAME\": \"random data\", \"PTRANSFORM\": \"random data/ParMultiDo(Transform)\" } }, { \"urn\": \"beam:metric:user:sum_int64:v1\", \"type\": \"beam:metrics:sum_int64:v1\", \"payload\": \"oI0G\", \"labels\": { \"NAMESPACE\": \"output\", \"NAME\": \"generate-synthetic-data\", \"PTRANSFORM\": \"BeamOutputTransform/generate-synthetic-data/ParMultiDo(HopToString)\" } }, { \"urn\": \"beam:metric:user:sum_int64:v1\", \"type\": \"beam:metrics:sum_int64:v1\", \"payload\": \"oI0G\", \"labels\": { \"NAMESPACE\": \"read\", \"NAME\": \"generate-synthetic-data\", \"PTRANSFORM\": \"BeamOutputTransform/generate-synthetic-data/ParMultiDo(HopToString)\" } }] } } 2022/02/11 12:52:45 - General - Beam pipeline execution has finished. >>>>>> Execution finished... After your pipeline finishes and the flink run command ends, your Flink dashboard will show a new entry in the 'Completed Job List'. You can follow up any running applications in the 'Running Job List' and drill down into their execution details while running.","title":"Running the Apache Beam samples With Apache Flink","component":"manual","version":"2.7.0","name":"beam-samples-flink","url":"/manual/latest/pipeline/beam/beam-samples-flink.html","titles":[{"text":"Get Flink","hash":"_get_flink","id":1},{"text":"Start your local Flink single node cluster","hash":"_start_your_local_flink_single_node_cluster","id":2},{"text":"Flink Run Configuration setup","hash":"_flink_run_configuration_setup","id":3},{"text":"From Hop GUI","hash":"_from_hop_gui","id":4},{"text":"From Flink Run","hash":"_from_flink_run","id":5}]},"161":{"id":161,"text":"Table of Contents Prerequisites Get Spark Start your local Spark single node cluster Run sample pipeline with Spark Submit Check the prerequisites to make sure you have the correct java version, have built your Apache Hop fact jar and have exported your project metadata to a JSON file. Check the Supported Versions on the Getting Started With Beam page to find the latest supported Spark version for your Hop version. For example, for Hop 2.7, the latest currently supported version is 3.4.x. Download your selected Spark version and unzip to a convenient location. To keep things as simple as possible, we’ll run a local single node Spark cluster. First we need to start our local master. This can be done with a single command from the folder where you unzipped Spark: run /sbin/start-master.sh. Your output should look similar to the one below: starting org.apache.spark.deploy.master.Master, logging to /spark-3.1.2-bin-hadoop3.2/logs/spark--org.apache.spark.deploy.master.Master-1-.out You should now be able to access the Spark Master’s web ui at http://localhost:8080. Copy the master’s url from the master’s page header, e.g. spark://.localdomain:7077. With the master in place, we can start a worker (formerly called slave). Similar to the master, this is a single command that takes the master’s url that yo sbin/start-worker.sh spark://.localdomain:7077. Your output should look similar to the one below: starting org.apache.spark.deploy.worker.Worker, logging to /spark-3.1.2-bin-hadoop3.2/logs/spark--org.apache.spark.deploy.worker.Worker-1-.out Since Spark doesn’t support remote execution, we’ll be running one of the sample pipelines through Spark Submit. INFO: the sample pipeline we’ll run in this example reads variables for file input and output from the Spark pipeline run configuration. Check the variables tab for the Spark pipeline run configuration in the metadata perspective for more details. The command below passes all the required information to run the samples input-process-output.hpl pipeline on our local Spark cluster with spark-submit. bin/spark-submit \\ --master spark://localhost.localdomain:7077 \\ --class org.apache.hop.beam.run.MainBeam \\ --driver-java-options '-DPROJECT_HOME=/hop/config/projects/samples' \\ /opt/spark/hop-fat-jar.jar \\ /hop/config/projects/samples/beam/pipelines/input-process-output.hpl \\ /opt/spark/hop-metadata.json \\ Spark Tip: Optionally you can provide a 4th argument after the run configuration name: the name of the environment configuration file to use. In this case, the fat jar and metadata export files were saved to /opt/spark. The last argument, Spark, is the name of the Spark pipeline run configuration in the samples project. Replace with the necessary arguments for your environment and run. You should see verbose logging output similar to the output below: 23/10/08 08:52:35 WARN Utils: Your hostname, knowbi resolves to a loopback address: 127.0.0.1; using 192.168.86.44 instead (on interface wlan0) 23/10/08 08:52:35 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address >>>>>> Initializing Hop Hop configuration file not found, not serializing: /opt/spark/spark-3.4.1-bin-hadoop3/config/hop-config.json Argument 1 : Pipeline filename (.hpl) : /home/bart/projects/tech/hop/projects/hop-tests/code/beam/input-process-output.hpl Argument 2 : Environment state filename: (.json) : /tmp/hop-metadata.json Argument 3 : Pipeline run configuration : spark >>>>>> Loading pipeline metadata >>>>>> Building Apache Beam Pipeline... >>>>>> Pipeline executing starting... 23/10/08 08:52:44 WARN S3FileSystem: You are using a deprecated file system for S3. Please migrate to module 'org.apache.beam:beam-sdks-java-io-amazon-web-services2'. 2023/10/08 08:52:45 - General - Created Apache Beam pipeline with name 'input-process-output' 2023/10/08 08:52:46 - General - Handled transform (INPUT) : Customers 2023/10/08 08:52:46 - General - Handled generic transform (TRANSFORM) : Only CA, gets data from 1 previous transform(s), targets=0, infos=0 2023/10/08 08:52:46 - General - Handled generic transform (TRANSFORM) : Limit fields, re-order, gets data from 1 previous transform(s), targets=0, infos=0 2023/10/08 08:52:46 - General - Handled transform (OUTPUT) : input-process-output, gets data from Limit fields, re-order 2023/10/08 08:52:46 - General - Executing this pipeline using the Beam Pipeline Engine with run configuration 'spark' 23/10/08 08:52:46 INFO SparkRunner: Executing pipeline using the SparkRunner. 23/10/08 08:52:47 INFO SparkContextFactory: Creating a brand new Spark Context. 23/10/08 08:52:47 INFO SparkContext: Running Spark version 3.4.1 23/10/08 08:52:47 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable 23/10/08 08:52:47 INFO ResourceUtils: ============================================================== 23/10/08 08:52:47 INFO ResourceUtils: No custom resources configured for spark.driver. 23/10/08 08:52:47 INFO ResourceUtils: ============================================================== 23/10/08 08:52:47 INFO SparkContext: Submitted application: BeamSparkPipelineRunConfiguration 23/10/08 08:52:47 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0) 23/10/08 08:52:47 INFO ResourceProfile: Limiting resource is cpu 23/10/08 08:52:47 INFO ResourceProfileManager: Added ResourceProfile id: 0 23/10/08 08:52:47 INFO SecurityManager: Changing view acls to: bart 23/10/08 08:52:47 INFO SecurityManager: Changing modify acls to: bart 23/10/08 08:52:47 INFO SecurityManager: Changing view acls groups to: 23/10/08 08:52:47 INFO SecurityManager: Changing modify acls groups to: ## ## Lots of output omitted. ## ## 23/10/08 09:01:07 INFO MemoryStore: MemoryStore cleared 23/10/08 09:01:07 INFO BlockManager: BlockManager stopped 23/10/08 09:01:07 INFO BlockManagerMaster: BlockManagerMaster stopped 23/10/08 09:01:07 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped! 23/10/08 09:01:07 INFO SparkContext: Successfully stopped SparkContext 2023/10/08 09:01:07 - General - Beam pipeline execution has finished. >>>>>> Execution finished... 23/10/08 09:01:07 INFO ShutdownHookManager: Shutdown hook called 23/10/08 09:01:07 INFO ShutdownHookManager: Deleting directory /tmp/spark-69bffb6a-90e2-415d-b4bc-63fcaf649999 23/10/08 09:01:07 INFO ShutdownHookManager: Deleting directory /tmp/spark-14f01b28-130c-48b4-93dc-49465cbb1392 After your pipeline finishes and the spark-submit command ends, your Spark master ui will show a new entry in the 'Finished Applications' list. You can follow up any running applications in the 'Running Applications' and drill down into their execution details while running.","title":"Running the Apache Beam samples With Apache Spark","component":"manual","version":"2.7.0","name":"beam-samples-spark","url":"/manual/latest/pipeline/beam/beam-samples-spark.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Get Spark","hash":"_get_spark","id":2},{"text":"Start your local Spark single node cluster","hash":"_start_your_local_spark_single_node_cluster","id":3},{"text":"Run sample pipeline with Spark Submit","hash":"_run_sample_pipeline_with_spark_submit","id":4}]},"162":{"id":162,"text":"Table of Contents Prerequisites Flink Kubernetes Operator Example setup The Flink Deployment Execution Monitoring and logging Termination Please have a look at the Getting started with Beam guide to get a basic understanding of the Beam integration in Hop. These are the files we need to make use of the Flink Kubernetes Operator in the example below: A Hop fat jar : generate once for the version of Hop you want to use (use the Hop GUI Tools menu or use hop-conf.sh -fj. Hop metadata export: a JSON file containing the metadata of your project (use the Hop GUI Tools menu or use hop-conf.sh -xm A Hop pipeline: A .hpl file (XML) which contains the pipeline metadata Note: Hop is capable of reading/writing files directly to s3:// buckets (or gs:// or azure://). The Flink operator wants to make it easy for you to start a new deployment of a Flink cluster on Kubernetes. To install it on your own K8s setup you can follow the Quick Start guide. We’ll be running our setup on Amazon Web Services' Elastic Kubernetes Service (EKS). Our Apache Hop fat jar as well as our pipeline and metadata JSON file are all stored in a folder on S3. The goal in our setup is to generate sample data with an unbound (never ending) pipeline and then to send that data to a Kinesis stream: In the Flink deployment file below we’ll do the following things different from a standard setup: Run with Java 11 since we’re using Apache Hop >= 2.0.0 Create an ephemeral volume called hop-resources which is mounted by all images in folder /hop Before any Flink container starts we run an initContainer to copy our Hop files (fat jar, pipeline, metadata) to the hop-resources volume. Container agiledigital/s3-artifact-fetcher is used to synchronize an S3 folder with our ephemeral volume shared by the nodes/containers. We specify the Hop main Beam class and pass in the pipeline and metadata JSON filenames (now found locally on the container) along with the name of the Flink Hop pipeline run configuration as arguments. Consider the following file called flink-deployment.yml: apiVersion: flink.apache.org/v1beta1 kind: FlinkDeployment metadata: namespace: default name: hop-flink spec: image: flink:1.15-java11 flinkVersion: v1_15 flinkConfiguration: taskmanager.numberOfTaskSlots: \"8\" taskmanager.memory.jvm-metaspace.size: \"512m\" serviceAccount: flink podTemplate: apiVersion: v1 kind: Pod metadata: name: flink-pod-template spec: serviceAccount: flink containers: # # Make an ephemeral volume available to the main flink container # - name: flink-main-container volumeMounts: - mountPath: /hop name: hop-resources initContainers: # # Copy a folder from s3:// to an ephemeral volume # Put a Hop fat jar in it as well as Hop metadata (JSON) # and the pipeline to run. # - name: fetcher image: agiledigital/s3-artifact-fetcher env: - name: SOURCE_URL value: \"s3://\" - name: ARTIFACT_DIR value: \"/hop/\" - name: RUNNER_USER value: root - name: AWS_ACCESS_KEY_ID value: - name: AWS_SECRET_ACCESS_KEY value: \"\" - name: AWS_DEFAULT_REGION value: volumeMounts: - mountPath: /hop name: hop-resources volumes: - name: hop-resources emptyDir: {} jobManager: replicas: 1 resource: memory: \"2g\" cpu: 1 taskManager: resource: memory: \"2g\" cpu: 2 job: jarURI: local:///hop/ parallelism: 4 upgradeMode: stateless entryClass: org.apache.hop.beam.run.MainBeam args: - /hop/ - /hop/hop-metadata.json - Flink Tip: you can provide a 4th argument (in the args list) after the run configuration name: the name of the environment configuration file to use. Please note that the parallelism argument is mandatory in the spec.job section. This parameter is ignored however as our pipeline is executed using Apache Beam. The Flink runner has its own parallelism setting. You can configure this in the pipeline run configuration (called Flink above). In this run configuration you can specify Flink master [auto]. Just as is shown in the Flink operator documentation we can now create this Flink deployment by running the following command. kubectl create -f flink-deployment.yml You can then see the various pods move through their stages of initialisation: kubectl get pods Obviously the first thing that will happen is that we want a Flink job manager. Before starting we’re initializing the hop-resources volume by copying data from S3 with the s3-artifact-fetcher. This leads to an init state: hop-flink-85b8fc7d5f-fkxvq 0/1 Init:0/1 0 2s After a while we’ll start the job manager itself and we’ll end up with this pod status: hop-flink-85b8fc7d5f-fkxvq 1/1 Running 0 45s Once the job manager is ready the job itself will start and (in our case) a task manager will get started as well: $ kubectl get pods NAME READY STATUS RESTARTS AGE flink-kubernetes-operator-6976569cb-68c6g 1/1 Running 0 2d16h hop-flink-85b8fc7d5f-fkxvq 1/1 Running 0 95s hop-flink-taskmanager-1-1 1/1 Running 0 21s To see what’s going on we can do a port forward from the job manager: kubectl port-forward pod/hop-flink-85b8fc7d5f-fkxvq 8081 Forwarding from 127.0.0.1:8081 -> 8081 Forwarding from [::1]:8081 -> 8081 Handling connection for 8081 ... You can now browse to localhost:8081 to have a look at the Flink job. To see the detailed logging on the job manager you can run kubectl logs. The logging from the Hop pipeline execution can be found in between the Flink job manager logs: kubectl logs -f pod/hop-flink-85b8fc7d5f-fkxvq ... Argument 1 : Pipeline filename (.hpl) : /hop/.hpl Argument 2 : Metadata filename (.json) : /hop/hop-metadata.json Argument 3 : Pipeline run configuration : Flink >>>>>> Initializing Hop... ... >>>>>> Loading pipeline metadata >>>>>> Building Apache Beam Pipeline... >>>>>> Found Beam Input transform plugin class loader >>>>>> Pipeline executing starting... 2022/06/27 13:37:27 - General - Created Apache Beam pipeline with name 'synthetic-data-to-kinesis' 2022/06/27 13:37:28 - General - Handled transform (ROW GENERATOR) : oo rows 2022/06/27 13:37:28 - General - Handled generic transform (TRANSFORM) : sysdate, gets data from 1 previous transform(s), targets=0, infos=0 2022/06/27 13:37:28 - General - Handled generic transform (TRANSFORM) : Random values, gets data from 1 previous transform(s), targets=0, infos=0 2022/06/27 13:37:28 - General - Handled generic transform (TRANSFORM) : JSON output, gets data from 1 previous transform(s), targets=0, infos=0 2022/06/27 13:37:28 - General - Handled transform (KINESIS OUTPUT) : Beam Kinesis Produce, gets data from JSON output 2022/06/27 13:37:28 - General - Executing this pipeline using the Beam Pipeline Engine with run configuration 'Flink' ... To shut down the job along with the cluster we can simply delete the Flink deployment: kubectl delete -f flink-deployment.yml","title":"Running a Hop pipeline using the Flink Kubernetes Operator","component":"manual","version":"2.7.0","name":"flink-k8s-operator-running-hop-pipeline","url":"/manual/latest/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","titles":[{"text":"Prerequisites","hash":"_prerequisites","id":1},{"text":"Flink Kubernetes Operator","hash":"_flink_kubernetes_operator","id":2},{"text":"Example setup","hash":"_example_setup","id":3},{"text":"The Flink Deployment","hash":"_the_flink_deployment","id":4},{"text":"Execution","hash":"_execution","id":5},{"text":"Monitoring and logging","hash":"_monitoring_and_logging","id":6},{"text":"Termination","hash":"_termination","id":7}]},"163":{"id":163,"text":"Table of Contents What is Apache Beam? How does it work? How is Hop using Beam? What software versions are supported How are my pipelines executed? Beam specific transforms Universal transforms Unsupported transforms All others Fat jars? Beam File definitions Current limitations Apache Beam is an advanced unified programming model that allows you to implement batch and streaming data processing jobs that run on any execution engine. Popular execution engines are for example Apache Spark, Apache Flink or Google Cloud Platform Dataflow. Apache Beam allows you to create programs in a variety of programming languages like Java, Python and Go using a standard Beam API. These programs build data pipelines which can then be executed using Beam runners on the various execution engines. Hop is using the Beam API to create Beam pipelines based off of your visually designed Hop pipelines. The terminology of Hop and Beam are aligned because they mean the same thing. Hop provides 4 standard ways to execute a pipeline that you designed on Spark, Flink, Dataflow or on the Direct runner. Here is the documentation for the relevant plugins: Beam Spark pipeline engine Beam Flink pipeline engine Beam Dataflow pipeline engine Dataflow pipeline template Beam Direct pipeline engine Hop version Beam version Spark version Flink version 2.6.0 2.50.0 3.4.X (scala 2.12) 1.16.x 2.5.0 2.48.0 3.4.X (scala 2.12) 1.16.x 2.4.0 2.46.0 3.3.X (scala 2.12) 1.15.x 2.3.0 2.43.0 3.3.X (scala 2.12) 1.15.x 2.2.0 2.43.0 3.3.X (scala 2.12) 1.15.x 2.1.0 2.41.0 3.3.0 (scala 2.12) 1.15.2 2.0.0 2.38.0 3.1.3 (scala 2.12) 1.14.4 (scala 2.11) 1.2.0 2.35.0 3.1.2 (scala 2.12) 1.13 (scala 2.11) 1.1.0 2.35.0 3.1.2 1.13 1.0.0 2.32.0 2.4.8 1.11 An Apache Hop pipeline is just metadata. The various beam pipeline engine plugins look at this metadata one transform at a time. It decides what to do with it based on a Hop transform handler which is provided. The transforms are in general split into a different types described below. Important to remember is that Beam pipelines try to solve every action in an 'embarrassingly parallel' way. This means that every transform can and usually will run in more than 1 copy. On large clusters you should expect a lot of copies of the same code to run at any given time. There are a number of Beam specific transforms available which only work on the provided Beam pipeline execution engines. For example: Beam Input which reads text file data from one or more files or Beam BigQuery Output which writes data to BigQuery. You can find these transforms in the Big Data category and their names all start with Beam to make is easy to recognize them. Here is an example of a simple pipeline which read files in a folder (on gs://), filters out data from California, removes and renames a few fields and writes the data back to another set of files: There are a few transforms which are translated into Beam variations: Memory Group By: This transform allows you to aggregate data across large data volumes. When using the Beam engines it uses org.apache.beam.sdk.transforms.GroupByKey. Merge Join: You can join 2 data sources with this transform. The main difference is that in the Beam engines the input data doesn’t need to be sorted. The Beam class used to perform this is: org.apache.beam.sdk.extensions.joinlibrary.Join. Generate Rows: This transform is used to generate (empty/static) rows of data. It can be either a fixed number, or it can generate rows indefinitely. When using the Beam engines it uses org.apache.beam.sdk.io.synthetic.SyntheticBoundedSource or org.apache.beam.sdk.io.synthetic.SyntheticUnboundedSource. A few transforms are simply not supported because we haven’t found a good way to do this on Beam yet: Unique Rows Group By : Use the Memory Group By instead Sort Rows The Denormaliser transform works technically correct on Apache Beam in release 1.1.0 and later. Even so you need to consider that the aggregation of the key-value pairs in that transform (in the general case) only happens on a sub-set of the rows. That is because in a Beam pipeline the order in which rows arrive is lost because they are continuously re-shuffled to maximize parallelism. This is different from the behavior of the \"Local\" Hop pipeline engine. To get around this issue you can apply a Memory Group By transform across the whole dataset to grab the first non-null value of every field you de-normalised. This will produce the correct result. All other transforms are simply supported. They are wrapped in a bit of code to make the exact same code that runs on the Hop local pipeline engine work in a Beam pipeline. There are a few things to mention though. Special case Solution Info transforms Some transforms like Stream Lookup read data from other transforms. This is handled by side-inputs for the data in the Beam API and is as such fully supported. Target transforms Sometimes you want to target specific transforms like in Switch Case or Filter Rows. This is fully supported as well and handled by the Beam API which handles additional outputs. Non-Beam input transforms When you’re reading data using a non-beam transform (see Beam specific transforms above) we need to make sure that this transform is executed in exactly one thread. Otherwise, you might read your XML or JSON document many times by the inherently parallel intentions of the various engines. This is handled by doing a Group By over a single value. You’ll see the following in for example your Dataflow pipeline: Create.Values → WithKeys → GroupByKey → Values → Flatten.Iterables → ParDo …​ and all this is just done to make sure we only ever execute our transform once. Non-Beam Output transforms The insistence of a Beam pipeline to run work in an embarrassingly parallel way can trip you up on the output side. In general, it is NOT possible to limit the number of copies of a particular transform. What Hop tries to do is perform a series of operations to try and force a single thread. However, this does not work on all runners. Flink for example insists on doing even this in parallel: GroupByKey(Void) → Values() → Flatten(). You can set the number of copies string of a transform to include SINGLE_BEAM (click on the transform and select Number of copies in the Hop GUI). A better way to deal with this problem is NOT to insist on creating a single file. You can include the unique ID of a transform in the filename with variable ${Internal.Transform.ID}. This will allow the various transform copies to write unique files to the same folder. Row batching with non-Beam transforms A lot of target databases like to receive rows in batches of records. So if you have a transform like for example Table Output or Neo4j Output you might see that performance is not that great. This is because by default the Beam programming model is designed to stream rows of data through a pipeline in bundles and the Hop API only knows about a single record at once. For these transforms you can include BATCH in the number of copies string of a transform click on the transform and select Number of copies in the Hop GUI). For these flagged transforms you can then specify 2 parameters in your Beam pipeline run configurations. When you set these you can determine how long rows are kept behind before being forced to the transforms in question Streaming Hop transform flush interval: how long in time are rows kept and batched up? If you care about latency make this lower (500 or lower). If you have a long-running batching pipeline, make it higher (10000 or higher perhaps). Hop streaming transforms buffer size: how many rows are being batched? Consider making it the same as the batching size you use in your transform metadata (e.g. Table Output, Neo4j Cypher, …​) Please note that these are maximum values. If the end of a bundle is reached in a pipeline rows are always forced to the transform code and as such pushed to the target system. To get an idea of how many times a batching buffer is flushed to the underlying transform code (and as such to for example a remote database) we added a Flushes metric. You will notice this in your metrics view in the Hop GUI when executing. A fat jar is often used to package up all the code you need for a particular project. The Spark, Flink and Dataflow execution engines like it since it massively simplifies the Java classpath when executing pipelines. Apache Hop allows you to create a fat jar in the Hop GUI with the Tools/Generate a Hop fat jar…​ menu or using the following command: sh hop-config.sh -fj /path/to/fat.jar The path to this fat jar can then be referenced in the various Beam runtime configurations. Note that the current version of Hop and all its plugins are used to build the fat jar. If you install or remove plugins or update Hop itself make sure to remember to generate a new fat jar or to update it. The Beam Input and Beam Output transforms expect you to define the layout of the file(s) being read or written. There are some specific advantages to using engines like Spark, Flink and Dataflow. However, with it come some limitations as well…​ Previewing data is not available (yet). Because of the distributed nature of execution we don’t have a great way to acquire preview data. Unit testing: not available for similar reasons compared to previewing or debugging. To test your Beam pipelines pick up data after a pipeline is done and compare that to a golden data set in another pipeline running with a \"Local Hop\" pipeline engine. Debugging or pausing a pipeline is not supported","title":"Getting started with Apache Beam","component":"manual","version":"2.7.0","name":"getting-started-with-beam","url":"/manual/latest/pipeline/beam/getting-started-with-beam.html","titles":[{"text":"What is Apache Beam?","hash":"_what_is_apache_beam","id":1},{"text":"How does it work?","hash":"_how_does_it_work","id":2},{"text":"How is Hop using Beam?","hash":"_how_is_hop_using_beam","id":3},{"text":"What software versions are supported","hash":"supportedversions","id":4},{"text":"How are my pipelines executed?","hash":"_how_are_my_pipelines_executed","id":5},{"text":"Beam specific transforms","hash":"_beam_specific_transforms","id":6},{"text":"Universal transforms","hash":"_universal_transforms","id":7},{"text":"Unsupported transforms","hash":"_unsupported_transforms","id":8},{"text":"All others","hash":"_all_others","id":9},{"text":"Fat jars?","hash":"_fat_jars","id":10},{"text":"Beam File definitions","hash":"_beam_file_definitions","id":11},{"text":"Current limitations","hash":"_current_limitations","id":12}]},"164":{"id":164,"text":"Table of Contents Prerequisites Java the samples project Build your Hop Fat Jar Flink and Spark: export your project metadata Running the samples for Direct runner, Flink and Spark The steps on this page and the detail pages for Spark, Flink and Google Dataflow will set up everything you need to run the pipelines in the Hop samples project. You’ll already have Java installed to run Apache Hop. Both Apache Hop and Beam require a Java 11 environment. Double-check your java version with the java -version command. Your output should look similar to the one below. openjdk version \"11.0.15\" 2022-04-19 OpenJDK Runtime Environment Homebrew (build 11.0.15+0) OpenJDK 64-Bit Server VM Homebrew (build 11.0.15+0, mixed mode) The Hop samples project comes with a number of sample pipelines for Apache Beam. Your default Hop installation comes with the samples project by default. If your Hop installation doesn’t come with this project, create a new project and point its Home folder to /config/projects/samples. The Samples project contains the following pipeline run configurations local: the native local run configuration. We’ll be ignoring this run configuration in the context of this guide. Dataflow: the Apache Beam run configuration for Google Cloud Dataflow. Direct: the direct runner Apache Beam run configuration. The Direct Runner executes pipelines on your machine and is designed to validate that pipelines adhere to the Apache Beam model as closely as possible. Instead of focusing on efficient pipeline execution, the Direct Runner performs additional checks to ensure that users do not rely on semantics that are not guaranteed by the model. Flink: the Apache Beam run configuration for Apache Flink. Spark:the Apache Beam run configuration for Apache Spark. Apache Beam requires a so-called fat jar that bundles all required Java classes and their dependencies into a single jar file. Build this jar for your Hop installation through Tools → Generate a Hop fat jar. Save this file in a convenient location and file name. Either store this outside of your project folder or add it to your .gitignore. You don’t want to accidentally add hundreds of MB to your git repository. You’ll need to pass your project’s metadata to JSON to pass it to either spark-submit or flink run. Export your project metadata through Tools → Export metadata to JSON. Save this file in a convenient location and file name. Either store this outside of your project folder or add it to your .gitignore. Your project’s metadata folder should already be in version control , you don’t want to add this full metadata point-in-time export once again. Direct Runner Apache Flink Apache Spark Google Cloud Dataflow","title":"Running the Apache Beam samples","component":"manual","version":"2.7.0","name":"running-the-beam-samples","url":"/manual/latest/pipeline/beam/running-the-beam-samples.html","titles":[{"text":"Prerequisites","hash":"prerequisites","id":1},{"text":"Java","hash":"_java","id":2},{"text":"the samples project","hash":"_the_samples_project","id":3},{"text":"Build your Hop Fat Jar","hash":"_build_your_hop_fat_jar","id":4},{"text":"Flink and Spark: export your project metadata","hash":"_flink_and_spark_export_your_project_metadata","id":5},{"text":"Running the samples for Direct runner, Flink and Spark","hash":"_running_the_samples_for_direct_runner_flink_and_spark","id":6}]},"165":{"id":165,"text":"Google Cloud Dataflow is a fully managed service for executing Apache Beam pipelines within the Google Cloud Platform ecosystem. As a managed Google Cloud service, it provisions worker nodes and out of the box optimization. The Cloud Dataflow Runner and service are suitable for large scale continuous jobs and provide: A fully managed service Autoscaling of the number of workers throughout the lifetime of the Dataflow job Dynamic work re-balancing Check the Google DataFlow docs and Apache Beam DataFlow runner docs for more information. INFO: this configuration checklist was reprinted (copied) from the Apache Beam documentation. To use the Google Cloud Dataflow runtime configuration, you must complete the setup in the Before you begin section of the Cloud Dataflow quickstart for your chosen language. Select or create a Google Cloud Platform Console project. Enable billing for your project. Enable the required Google Cloud APIs: Cloud Dataflow, Compute Engine, Stackdriver Logging, Cloud Storage, Cloud Storage JSON, and Cloud Resource Manager. You may need to enable additional APIs (such as BigQuery, Cloud Pub/Sub, or Cloud Datastore) if you use them in your pipeline code. Authenticate with Google Cloud Platform. Install the Google Cloud SDK. Create a Cloud Storage bucket. Option Description Project ID The project ID for your Google Cloud Project. This is required if you want to run your pipeline using the Dataflow managed service. Service Account With this option you can run the pipeline dataflow job with a specific service account, instead of the default GCE robot. The default is to leave this blank. Application name The name of the Dataflow job being executed as it appears in Dataflow’s jobs list and job details. Also used when updating an existing pipeline. Staging location Cloud Storage path for staging local files. Must be a valid Cloud Storage URL, beginning with gs://. Initial number of workers The initial number of Google Compute Engine instances to use when executing your pipeline. This option determines how many workers the Dataflow service starts up when your job begins. Maximum number of workers The maximum number of Compute Engine instances to be made available to your pipeline during execution. Note that this can be higher than the initial number of workers (specified by numWorkers to allow your job to scale up, automatically or otherwise. Auto-scaling algorithm The autoscaling mode for your Dataflow job. Possible values are THROUGHPUT_BASED to enable autoscaling, or NONE to disable. See Autotuning features to learn more about how autoscaling works in the Dataflow managed service. Worker machine type The Compute Engine machine type that Dataflow uses when starting worker VMs. You can use any of the available Compute Engine machine type families as well as custom machine types. For best results, use n1 machine types. Shared core machine types, such as f1 and g1 series workers, are not supported under the Dataflow Service Level Agreement. Note that Dataflow bills by the number of vCPUs and GB of memory in workers. Billing is independent of the machine type family. Check the list of machine types for reference. Worker disk type The type of persistent disk to use, specified by a full URL of the disk type resource. For example, use compute.googleapis.com/projects//zones//diskTypes/pd-ssd to specify a SSD persistent disk. more. Disk size in GB The disk size, in gigabytes, to use on each remote Compute Engine worker instance. If set, specify at least 30 GB to account for the worker boot image and local logs. Region Specifies a Compute Engine region for launching worker instances to run your pipeline. This option is used to run workers in a different location than the region used to deploy, manage, and monitor jobs. The zone for workerRegion is automatically assigned. Note: This option cannot be combined with workerZone or zone. (regions list). Zone Specifies a Compute Engine zone for launching worker instances to run your pipeline. This option is used to run workers in a different location than the region used to deploy, manage, and monitor jobs. Note: This option cannot be combined with workerRegion or zone. Network This is the GCE network for launching workers. For more information, see the reference documentation https://cloud.google.com/compute/docs/networking. The default is up to the Dataflow service. Subnetwork This is the GCE subnetwork for launching workers. For more information, see the reference documentation https://cloud.google.com/compute/docs/networking. The default is up to the Dataflow service. Use public IPs? Specifies whether worker pools should be started with public IP addresses. WARNING: This feature is experimental. You must be allowlisted to use it. Dataflow Service Options This is a comma separated list of options in the format option=value,option2=value2,…​. It serves as a catch-all option for the Dataflow service. This helps if Beam is missing some service related options and if new options are added in the future older Beam versions could still use them through these catch-all options. User agent A user agent string as per RFC2616, describing the pipeline to external services. Temp location Cloud Storage path for temporary files. Must be a valid Cloud Storage URL, beginning with gs://. Plugins to stage (, delimited) Comma separated list of plugins. Transform plugin classes List of transform plugin classes. XP plugin classes List of extensions point plugins. Streaming Hop transforms flush interval (ms) The amount of time after which the internal buffer is sent completely over the network and emptied. Hop streaming transforms buffer size The internal buffer size to use. Fat jar file location Fat jar location. Generate a fat jar using Tools → Generate a Hop fat jar. The generated fat jar file name will be copied to the clipboard. Environment Settings This environment variable need to be set locally. GOOGLE_APPLICATION_CREDENTIALS=/path/to/google-key.json To allow encrypted (TLS) network connections to, for example, Kafka and Neo4j Aura certain older security algorithms are disabled on Dataflow. This is done by setting security property jdk.tls.disabledAlgorithms to value: Lv3, RC4, DES, MD5withRSA, DH keySize < 1024, EC keySize < 224, 3DES_EDE_CBC, anon, NULL. Please let us know if you have a need to make this configurable and we’ll look for a way to not hardcode this. Just create a Github Issue to let us know.","title":"Apache Beam Google DataFlow Pipeline Engine","component":"manual","version":"2.7.0","name":"beam-dataflow-pipeline-engine","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","titles":[{"text":"Beam DataFlow","hash":"_beam_dataflow","id":1},{"text":"Google Dataflow Configuration","hash":"_google_dataflow_configuration","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Security considerations","hash":"_security_considerations","id":4}]},"166":{"id":166,"text":"The Direct runner can be used for local testing and development. The Direct Runner executes pipelines on your machine and is designed to validate that pipelines adhere to the Apache Beam model as closely as possible. Instead of focusing on efficient pipeline execution, the Direct Runner performs additional checks to ensure that users do not rely on semantics that are not guaranteed by the model. Enforcing immutability of elements Enforcing encodability of elements Elements are processed in an arbitrary order at all points Serialization of user functions (DoFn, CombineFn, etc.) Using the Direct Runner for testing and development helps ensure that pipelines are robust across different Beam runners. In addition, debugging failed runs can be a non-trivial task when a pipeline executes on a remote cluster. Instead, it is often faster and simpler to perform local unit testing on your pipeline code. Unit testing your pipeline locally also allows you to use your preferred local debugging tools. Option Description Number of workers The Number of threads or subprocesses is used to configure parallelism. From 2.22.0, direct_num_workers = 0 is supported. When direct_num_workers is set to 0, it will set the number of threads/subprocess to the number of cores of the machine where the pipeline is running. User agent A user agent string as per RFC2616, describing the pipeline to external services. Temp location Path for temporary files. Plugins to stage (, delimited) Comma separated list of plugins. Transform plugin classes List of transform plugin classes. XP plugin classes List of extensions point plugins. Streaming Hop transforms flush interval (ms) The amount of time after which the internal buffer is sent completely over the network and emptied. Hop streaming transforms buffer size The internal buffer size to use. Fat jar file location Fat jar location.","title":"Apache Beam Direct Pipeline Engine","component":"manual","version":"2.7.0","name":"beam-direct-pipeline-engine","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","titles":[{"text":"Beam Direct","hash":"_beam_direct","id":1},{"text":"Options","hash":"_options","id":2}]},"167":{"id":167,"text":"This runner allows you to run Hop pipelines on Apache Flink version 1.13. The Flink runner supports two modes: Local Direct Flink Runner and Flink Runner. The Flink Runner and Flink are suitable for large scale, continuous jobs, and provide: A streaming-first runtime that supports both batch processing and data streaming programs A runtime that supports very high throughput and low event latency at the same time Fault-tolerance with exactly-once processing guarantees Natural back-pressure in streaming programs Custom memory management for efficient and robust switching between in-memory and out-of-core data processing algorithms Integration with YARN and other components of the Apache Hadoop ecosystem Check the Apache Beam Flink runner docs for more information. Option Description Default The Flink master Address of the Flink Master where the Pipeline should be executed. Can either be of the form \"host:port\" or one of the special values [local], [collection] or [auto] auto Parallelism The pipeline wide maximum degree of parallelism to be used. The maximum parallelism specifies the upper limit for dynamic scaling and the number of key groups used for partitioned state. -1 Checkpointing interval The interval in milliseconds at which to trigger checkpoints of the running pipeline. No checkpointing, -1 Checkpointing timeout (ms) The maximum time in milliseconds that a checkpoint may take before being discarded. -1 Minimum pause between checkpoints The minimal pause in milliseconds before the next checkpoint is triggered -1 Fail on checkpointing errors Sets the expected behaviour for tasks in case that they encounter an error in their checkpointing procedure. If this is set to true, the task will fail on checkpointing error. If this is set to false, the task will only decline a the checkpoint and continue running true Number of execution retries Sets the number of times that failed tasks are re-executed. A value of zero effectively disables fault tolerance. A value of -1 indicates that the system default value (as defined in the configuration) should be used. -1 Execution retry delay (ms) Sets the delay in milliseconds between executions. A value of {@code -1} indicates that the default value should be used. -1 Object re-use Sets the behavior of reusing objects. Enabling the object reuse mode will instruct the runtime to reuse user objects for better performance. false Disable metrics Disable Beam metrics in Flink Runner -1 Retain externalized checkpoints on cancellation Sets the behavior of externalized checkpoints on cancellation. false Maximum bundle size The maximum number of elements in a bundle. 1000 Maximum bundle time (ms) The maximum time to wait before finalising a bundle (in milliseconds). 1000 Shutdown sources on final watermark Shuts down sources which have been idle for the configured time of milliseconds. Once a source has been shut down, checkpointing is not possible anymore. Shutting down the sources eventually leads to pipeline shutdown (=Flink job finishes) once all input has been processed. Unless explicitly set, this will default to Long.MAX_VALUE when checkpointing is enabled and to 0 when checkpointing is disabled. See FLINK-2491 for progress on this issue. Latency tracking interval Interval in milliseconds for sending latency tracking marks from the sources to the sinks. Interval value ⇐ 0 disables the feature. 0 Auto watermark interval The interval in milliseconds for automatic watermark emission. Batch execution mode Flink mode for data exchange of batch pipelines. Reference {@link org.apache.flink.api.common.ExecutionMode}. Set this to BATCH_FORCED if pipelines get blocked, see FLINK-10672 P User agent A user agent string as per RFC2616, describing the pipeline to external services. Temp location Path for temporary files. Plugins to stage (, delimited) Comma separated list of plugins. Transform plugin classes List of transform plugin classes. XP plugin classes List of extensions point plugins. Streaming Hop transforms flush interval (ms) The amount of time after which the internal buffer is sent completely over the network and emptied. Hop streaming transforms buffer size The internal buffer size to use. Fat jar file location Fat jar location. You can also execute using the 'bin/flink run' command. There is a main class you can use with the --class option of the run command: org.apache.hop.beam.run.MainBeam It accepts 3 or 4 arguments: Argument Description 1 The filename of the pipeline to execute. 2 The filename of the metadata to load (JSON). You can export metadata in the Hop GUI under the tools menu (part of the Beam plugin in plugins/engines/beam ) 3 The name of the pipeline run configuration to use 4 (optional) The name of the environment file (JSON) containing the variables you want to set in the pipeline. The format is identical to what is used in hop-config.json or an environment configuration file. The Flink run command also needs a fat jar as an argument. This can be generated in the Hop GUI under the tools menu or using command: sh hop-config.sh -fj /path/to/fat.jar Important : project configurations, environments and these things are not valid in the context of the Flink runtime. This is a TODO for the Hop community to think how we can do this best. Your input is welcome. In the meantime pass variables to the JVM by setting these in the conf/flink-conf.yml file by adding a line: env.java.opts: -DPROJECT_HOME=/path/to/project-home In general, it is better not to use relative paths like ${Internal.Entry.Current.Folder} when specifying filenames when executing pipelines remotely. It’s usually better to pick a few root folders as variables. PROJECT_HOME is as good as any variable to use. An example Flink run command might look like this: bin/flink run \\ --class org.apache.hop.beam.run.MainBeam \\ --parallelism 2 \\ -D PROJECT_HOME=/my/project/home \\ /path/to/apache-hop-fat.jar \\ /my/project/home/pipeline.hpl \\ metadata-export.json \\ FlinkRunConfig You can specify a master of [local] to run using an embedded Flink engine. It’s primarily used for testing locally.","title":"Apache Beam Flink Pipeline Engine","component":"manual","version":"2.7.0","name":"beam-flink-pipeline-engine","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","titles":[{"text":"Beam Flink","hash":"_beam_flink","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Running with Flink Run","hash":"_running_with_flink_run","id":3},{"text":"Flink embedded","hash":"_flink_embedded","id":4}]},"168":{"id":168,"text":"The Apache Spark Runner can be used to execute Beam pipelines using Apache Spark version 3.1. The Spark Runner executes Beam pipelines on top of Apache Spark, providing: Batch and streaming (and combined) pipelines. The same fault-tolerance guarantees as provided by RDDs and DStreams. The same security features Spark provides. Built-in metrics reporting using Spark’s metrics system, which reports Beam Aggregators as well. Native support for Beam side-inputs via spark’s Broadcast variables Check the Apache Beam Spark runner docs for more information. Option Description Default The Spark master The url of the Spark Master. This is the equivalent of setting SparkConf#setMaster(String) and can either be local[x] to run local with x cores, spark://host:port to connect to a Spark Standalone cluster, mesos://host:port to connect to a Mesos cluster, or yarn to connect to a yarn cluster. local[4] Streaming: batch interval (ms) The StreamingContext’s batchDuration - setting Spark’s batch interval. 1000 Streaming: checkpoint directory A checkpoint directory for streaming resilience, ignored in batch. For durability, a reliable filesystem such as HDFS/S3/GS is necessary. local dir in /tmp Streaming: checkpoint duration (ms) Enable Metrics sink A servlet within the existing Spark UI to serve metrics data as JSON data. Streaming: maximum records per batch The maximum records per batch interval. Streaming: minimum read time (ms) Mimimum elapsed read time. Bundle size The maximum number of elements in a bundle. User agent A user agent string as per RFC2616, describing the pipeline to external services. Temp location Path for temporary files. Plugins to stage (, delimited) Comma separated list of plugins. Transform plugin classes List of transform plugin classes. XP plugin classes List of extensions point plugins. Streaming Hop transforms flush interval (ms) The amount of time after which the internal buffer is sent completely over the network and emptied. Hop streaming transforms buffer size The internal buffer size to use. Fat jar file location Fat jar location. You can start Apache Spark pipelines when Hop is running directly on the master node. This means that you can run spark jobs directly from hop when a cluster is available on localhost. This also means you can deploy a Hop Server on your spark master node and use this as a jumphost to start Spark jobs on an Apache Spark cluster. Since execution of a pipeline on Spark is only possible from the Spark Master it is possible to start a Hop server on the master. Then you can remotely execute from anywhere on your Spark master of choice. Make sure that any referencable artifacts like the fat-jar you want to use is available to the Hop server and that you have configured your installation as described in the previous section. You can also execute using the 'spark-submit' tool. There is a main class you can use: org.apache.hop.beam.run.MainBeam It accepts 3 or 4 arguments: Argument Description 1 The filename of the pipeline to execute. 2 The filename of the metadata to load (JSON). You can export metadata in the Hop GUI under the tools menu (part of the Beam plugin in plugins/engines/beam ) 3 The name of the pipeline run configuration to use 4 (optional) The name of the environment file (JSON) containing the variables you want to set in the pipeline. The format is identical to what is used in hop-config.json or an environment configuration file. Spark-submit also needs a fat jar. This can be generated in the Hop GUI under the tools menu or using command: sh hop-config.sh -fj /path/to/fat.jar Important : project configurations, environments and these things are not valid in the context of the Spark runtime. This is a TODO for the Hop community to think how we can do this best. Your input is welcome. In the meantime pass variables to the JVM with the option: --driver-java-options '-DPROJECT_HOME=/path/to/project-home' In general, it is better not to use relative paths like ${Internal.Entry.Current.Folder} when specifying filenames when executing pipelines remotely. It’s usually better to pick a few root folders as variables. PROJECT_HOME is as good as any variable to use. An example spark-submit command might look like this: spark-submit \\ --master spark://master-host:7077 \\ --class org.apache.hop.beam.run.MainBeam \\ --driver-java-options '-DPROJECT_HOME=/my/project/home' \\ hop-fat.jar \\ /my/project/home/pipeline.hpl \\ metadata-export.json \\ SparkRunConfig You can specify a master of local[4] to run using an embedded Spark engine. It’s primarily used for testing locally. The number 4 in the example is the desired number of threads to use when executing. You can also specify * to automatically figure that out for your system. Please note that you can get an error like the following: Cannot assign requested address: Service 'sparkDriver' failed after 16 retries In this case you can set system environment variable SPARK_LOCAL_IP to 127.0.0.1. export SPARK_LOCAL_IP=\"127.0.0.1\" When you receive a stack trace looking lik this, it usually means it can not find the spark master. Caused by: java.lang.NullPointerException at org.apache.spark.SparkContext.(SparkContext.scala:640) at org.apache.spark.api.java.JavaSparkContext.(JavaSparkContext.scala:58) at org.apache.beam.runners.spark.translation.SparkContextFactory.createSparkContext(SparkContextFactory.java:101) at org.apache.beam.runners.spark.translation.SparkContextFactory.getSparkContext(SparkContextFactory.java:67) at org.apache.beam.runners.spark.SparkRunner.run(SparkRunner.java:215) at org.apache.hop.beam.engines.BeamPipelineEngine.executePipeline(BeamPipelineEngine.java:243)","title":"Apache Beam Spark Pipeline Engine","component":"manual","version":"2.7.0","name":"beam-spark-pipeline-engine","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","titles":[{"text":"Beam Spark","hash":"_beam_spark","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Running from GUI or Hop Server","hash":"_running_from_gui_or_hop_server","id":3},{"text":"Running remotely","hash":"_running_remotely","id":4},{"text":"Running with Spark Submit","hash":"_running_with_spark_submit","id":5},{"text":"Spark embedded","hash":"_spark_embedded","id":6},{"text":"Possible errors","hash":"_possible_errors","id":7}]},"169":{"id":169,"text":"The local runner runs on the local Hop engine. This is the runtime configuration you’ll use when testing pipelines on your local machine while developing. Option Description Default Row set size The row set buffer size. 10.000 Safe mode Checks every row passed through your pipeline and ensure all layouts are identical. If a row does not have the same layout as the first row, an error is generated and reported. false Collect metrics Collects metrics to monitor the performance of your pipeline. false Sort transforms Performs a topological sort of the transforms in the pipeline before execution. false Log rows feedback Enables log rows feedback, showing a log line every after processing multiple of 50.000 (default) rows. false Feedback size in rows The number of rows to return as feedback. 50.000 Wait time buffer check (ms) This indicates the polling frequency when there are no rows in the input buffer of a transform, a lower value will cause higher CPU load when the pipeline has many idle transforms. 20 Sample type while running in the GUI Here you can specify which rows you want to see when you click on the little grid icons on the transform icons during a pipeline execution. You can choose: None: do not show, First : show the first rows, Last : show the last rows or Random: a random selection of rows (reservoir sampling) Last Number of rows to sample in the GUI The number of rows which will be collected 100 Make this pipeline transactional If you enable this there will always be just one connection used per database. At the end of the pipeline there will be a commit or rollback (in case of error) on all named connections at the same time. Note that child pipelines or workflows are also automatically run as a transaction. Also be aware that while you can commit and rollback across multiple databases that this still means that you can have a successful commit on one database and a failure on another. This is not a two-phase-commit system. false","title":"Local Pipeline Engine","component":"manual","version":"2.7.0","name":"native-local-pipeline-engine","url":"/manual/latest/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","titles":[{"text":"Local","hash":"_local","id":1},{"text":"Options","hash":"_options","id":2}]},"170":{"id":170,"text":"The remote run configuration runs pipelines on a remote Hop Server. This run configuration requires little configuration, but has two prerequisites: a running Hop Server a Hop Server metadata definition in your project, pointing to your running Hop Server. Option Description Hop server The remote Hop server to run this pipeline on. Run Configuration The configuration to use on the remote Hop Server. In a lot of configurations, this will be a local (locally on the server) runtime configuration, but could be any other runtime configuration, e.g. a Spark runtime configuration that is started from a Spark cluster edge node Server poll delay (ms) The delay in milliseconds between periodic polls to the remote server. If you don’t specify a value this defaults to 1000ms (1 second) Server poll interval (ms) The interval in milliseconds between periodic polls to the remote server. If you don’t specify a value this defaults to 2000ms (2 seconds) Export linked resources to server? Enable this option if you want to not only send the current pipeline to the server but also the referenced workflows and pipelines. See below for detailed information Named resources reference source folder This is the reference source folder for the named resources that are being used (e.g. ${PROJECT_HOME}). See below for detailed information. Named resources reference target folder This is where you expect the source folder to map to on the server (e.g. /path/on/server). See below for detailed information. This option sends not just the parent pipeline to the server but also all other referenced pipelines and workflows. For example if you have mapping pipelines or workflows referenced they will be sent to the server as well. All the used pipelines and workflows together with the XML presentation of the pipeline execution configuration will be sent over to the server in the form of a ZIP archive. The server receives this archive and without unzipping runs the pipeline. To make this function correctly, Hop changes the references as well as references to filenames. For example ${PROJECT_HOME}/mapping.hpl will be changed to ${Internal.Entry.Current.Folder}/mapping.hpl. This means that it will try to use a relative path to the parent file. If you have are using data files then those file names will be renamed as well. For example, you might be reading a file called ${PROJECT_HOME}/files/bigfile.csv in a CSV File Input transform. During the export the referenced filename will be changed to ${DATA_PATH_1}/bigfile.csv. For every folder that is referenced a new variable will be defined and set in the execution configuration. By default, the path set for this variable will be the same as on the executing (local) machine. On the server this might not make a lot of sense. For this reason you can specify a reference source folder like ${PROJECT_HOME} in combination with a target folder like /server/. In that example variable DATA_PATH_1 will get value /server/files/. This in turn allows you to transfer required files in advance or map a folder into a docker container and so on. It gives you flexibility when executing remotely while having ease of development on your client.","title":"Remote Pipeline Engine","component":"manual","version":"2.7.0","name":"native-remote-pipeline-engine","url":"/manual/latest/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","titles":[{"text":"Hop Remote pipeline engine","hash":"_hop_remote_pipeline_engine","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Export linked resources to server","hash":"_export_linked_resources_to_server","id":3}]},"171":{"id":171,"text":"Run configurations decouple the design and execution phases of Hop pipeline development. A pipeline is a definition of how data is processed, a run configurations defines where the pipeline is executed. Hop comes supports a number of different runtime engines, each of which will be described in more detail in this section. Each run configuration comes with its own set of parameters and configuration options, all of which are stored as Hop Metadata. When starting a new pipeline click New next to 'Pipeline run configuration'. All run configurations have a name, description and an engine type, each engine type has its own set of configuration options. Once created, run configurations are available from the 'Pipeline run configuration' list and are ready to use. The main tab contains the name, description and the dropdown list for the available engine types. Option Description Name The name you want to use for this pipeline run configuration. Description A description you want to use for this pipeline run configuration (optional). Execution information location The Execution Information Location to use with this pipeline run configuration. Execution data profile The Execution Data Profile to use with this pipeline run configuration. Engine type The available engine types are: Beam DataFlow pipeline engine: this configuration runs pipelines on Google DataFlow over Apache Beam Beam Direct pipeline engine: this configuration runs pipelines on the direct Beam runner (mainly for testing purposes) Beam Flink pipeline engine: this configuration runs pipelines on Apache Flink over Apache Beam Beam Spark pipeline engine: this configuration runs pipelines on Apache Spark over Apache Beam Hop local pipeline engine: this configuration runs pipelines locally in the native Hop engine Hop remote pipeline engine: this configuration runs pipelines in the native Hop engine on a remote machine Check the Beam Capability Matrix to help you decide which Beam engine works best for your pipeline. This tab allows Hop developers to specify a set of variables to be used in the run configurations. Option Description Variable name A variable name. Value The variable value. Description A description for the variable. The description is optional but recommended.","title":"Pipeline Run Configurations","component":"manual","version":"2.7.0","name":"pipeline-run-configurations","url":"/manual/latest/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Choosing a Run Configuration","hash":"_choosing_a_run_configuration","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Main Tab","hash":"_main_tab","id":4},{"text":"Variables Tab","hash":"_variables_tab","id":5}]},"172":{"id":172,"text":"The Abort tranform aborts a running pipeline as soon as it receives input data. The main use case for this transform is to throw an error when an unexpected or unwanted situation occurs. For example, you can use this transform so that a pipeline can be aborted after x number of rows flow to over an error hop. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Abort threshold The threshold of number of rows after which to abort the pipeline. E.g. If threshold is 0, the abort transform will abort after seeing the first row. If threshold is 5, the abort transform will abort after seeing the sixth row. Abort message The message to put in the log upon aborting. If not filled in a default message will be used. Always log Always log the rows processed by the Abort transform. This allows the rows to be logged although the log level of the pipeline would normally not do it. This way you can always see in the log which rows caused the pipeline to abort.","title":" Abort","component":"manual","version":"2.7.0","name":"abort","url":"/manual/latest/pipeline/transforms/abort.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"173":{"id":173,"text":"The Microsoft Access Output allows you to create a new Access database file as an output in a pipeline. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. The database filename The file name of the database file to which you are connecting Create database Enable to generate a new Access database file Target table Specifies the table to which you want to output data Create table Enable to create a new table in the Access database Commit size Defines the commit size when outputting data","title":" Microsoft Access Output","component":"manual","version":"2.7.0","name":"accessoutput","url":"/manual/latest/pipeline/transforms/accessoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"174":{"id":174,"text":"The Add a Checksum transform calculates checksums for one or more fields in the input stream and adds this to the output as a new field. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Type The type of checksum that needs to be calculated. These are the types that are available: CRC32 : 32-bit Cyclic Redundancy Check : http://en.wikipedia.org/wiki/Cyclic_redundancy_check ADLER 32 : Checksum algorithm by Mark Adler: http://en.wikipedia.org/wiki/Adler-32 MD5 : Message Digest algorithm 5 : http://en.wikipedia.org/wiki/MD5 SHA-1 : Secure Hash Algorithm 1 : http://en.wikipedia.org/wiki/SHA-1 SHA-256 : Secure Hash Algorithm 2 : http://en.wikipedia.org/wiki/SHA-256 Result Type Some checksum types allow to set different result types: String, Hexadecimal and Binary Result field The name of the result field containing the checksum Fields used in the checksum The names of the fields to include in the checksum calculation. Note: You can use the \"Get Fields\" button to insert all input fields from previous transforms.","title":" Add a checksum","component":"manual","version":"2.7.0","name":"addchecksum","url":"/manual/latest/pipeline/transforms/addchecksum.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"175":{"id":175,"text":"The Add Constant Values transform is a simple and high performance way to add constant values to a pipeline stream. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Fields specify the name, type, and value in the form of a string. Then, specify the formats to convert the value into the chosen data type.","title":" Add Constants","component":"manual","version":"2.7.0","name":"addconstant","url":"/manual/latest/pipeline/transforms/addconstant.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"176":{"id":176,"text":"The Add Fields Changing Sequence transform simply adds a sequence value which resets each time a value changes in the list of specified fields. Hop Engine Spark Flink Dataflow Here are the options for the transform: transform name : the name of the transform, needs to be unique in a pipeline Result field: the name of the output field, the sequence Start at value: the number to start at each time Increment by: the value to increase at each row in the same group Init sequence if value of following fields change: you can specify a list of fields here. If a value in one or more of these fields changes compared to the previous rows, the sequence will be reset to the start value.","title":" Add value fields changing sequence","component":"manual","version":"2.7.0","name":"addfieldschangesequence","url":"/manual/latest/pipeline/transforms/addfieldschangesequence.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"177":{"id":177,"text":"The Add Sequence transform adds a sequence to the Hop stream. A sequence is an ever-changing integer value with a specific start and increment value. You can either use a database sequence (if supported, e.g. Oracle, PostgreSQL) to determine the value of the sequence, or have it generated by Hop. Hop-generated sequence values are unique when used in the same pipeline, and return to the same starting value each time you run the pipeline. Hop sequences are unique only when used in the same pipeline. Also, they are not stored, so the values start back at the same value every time the pipeline is launched. Hop Engine Spark Flink Dataflow Option Description Transform name The name of this transform as it appears in the pipeline workspace. This name must be unique within a single pipeline. Name of value Name of the new sequence value that is added to the stream. Use DB to generate the sequence Enable if you want the sequence to be driven by a database sequence, then set these parameters: Connection name, Schema name (optional), Sequence name. Connection name The name of the connection on which the database sequence resides. Schema name (optional) The table’s schema name. Sequence name The name of the database sequence. Use a pipeline counter to generate the sequence Enable if you want the sequence to be generated by Hop, then set these parameters: Counter name (optional), Start at, Increment by, Maximum value. Counter name (optional) If multiple transforms in a pipeline generate the same value name, this option enables you to specify the name of the counter to associate with. Avoids forcing unique sequencing across multiple transforms. Start at The value to begin the sequence with. Increment by The amount by which the sequence increases or decreases. Maximum value The value after which the sequence returns to the Start At value.","title":" Add Sequence","component":"manual","version":"2.7.0","name":"addsequence","url":"/manual/latest/pipeline/transforms/addsequence.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"178":{"id":178,"text":"The Add XML transform allows you to encode the content of a number of fields in a row in XML. This XML is added to the row in the form of a String field. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Encoding The encoding to use; this encoding is specified in the header of the XML file Output Value The name of the new field that contains the XML Root XML element The name of the root element in the generated element Omit XML header Enable to not include the XML header in the output. Omit null values from the XML result Do not add elements or attributes with null values. This is often used to limit the size of the target XML. The Fields tab is where you configure the output fields and their formats. The table below describes each of the available properties for a field. Option Description Fieldname Name of the field Element name The name of the element in the XML file to use Type Type of the field can be either String, Date, or Number Format Format mask with which to convert data; see Number Formats for a complete description of format specifiers Length Output string is padded to this length if it is specified Precision The precision to use Currency Symbol used to represent currencies like $10,000.00 or E5.000,00 Decimal A decimal point can be a \".\" (10,000.00) or \",\" (5.000,00) Grouping A grouping can be a \",\" (10,000.00) or \".\" (5.000,00) Null The string to use in case the field value is null. Attribute Make this an attribute (N means : element) Attribute parent name You can specify the name of the parent element to add the attribute to if previous parameter attribute is set to Y. If no parent name is specified, the attribute is set in the parent element. Below is data that comes in a variety of classes and which needs to be stored as XML in a database. You want to turn the raw data into the database layout below. Shape Colour Id X Y Radius circle blue 1 3 5 5 circle red 2 1 3 5 circle blue 5 5 9 5 circle blue 6 8 2 5 circle red 7 9 7 5 Shape Colour Id X Y Length Width rectangle blue 3 3 1 6 4 rectangle red 6 2 4 6 4 rectangle blue 10 8 2 6 4 rectangle red 12 7 8 6 4 rectangle blue 14 5 2 6 4 Id X Y Class data 3 4 7 blue 5 1 6 3 blue 4 6 2 8 8 blue 46 5 5 2 blue 5 All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Add XML","component":"manual","version":"2.7.0","name":"addxml","url":"/manual/latest/pipeline/transforms/addxml.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Content Tab","hash":"_content_tab","id":4},{"text":"Fields Tab","hash":"_fields_tab","id":5},{"text":"Use case","hash":"_use_case","id":6},{"text":"Raw data","hash":"_raw_data","id":7},{"text":"Output Sample","hash":"_output_sample","id":8},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":9}]},"179":{"id":179,"text":"The Analytic Query transform allows you to peek forward and backwards across rows in a pipeline. Examples of common use cases are: Calculate the \"time between orders\" by ordering rows by order date, and LAGing 1 row back to get previous order time. Calculate the \"duration\" of a web page view by LEADing 1 row ahead and determining how many seconds the user was on this page. Hop Engine Spark Flink Dataflow Option Description Transform name The name of this transform as it appears in the pipeline workspace. Group fields table Specify the fields you want to group. Click Get Fields to add all fields from the input stream(s). The transform will do no additional sorting, so in addition to the grouping identified (for example CUSTOMER_ID) here you must also have the data sorted (for example ORDER_DATE). Analytic Functions table Specify the analytic functions to be solved. New Field Name the name you want this new field to be named on the stream (for example PREV_ORDER_DATE) Subject The existing field to grab (for example ORDER_DATE) Type Set the type of analytic function: Lead - Go forward N rows and get the value of Subject Lag - Go backward N rows and get the value of Subject N The number of rows to offset (backwards or forwards) While it is not mandatory to specify a group, it can be useful for certain cases. If you create a group (made up of one or more fields), then the \"lead forward / lag backward\" operations are made only within each group. For example, suppose you have this: X , Y -------- aaa , 1 aaa , 2 aaa , 3 bbb , 4 bbb , 5 bbb , 6 And you want to create a field named Z, with the Y value in the previous row. If you only care about the Y field, you don’t need to group. And you will have the following result: X , Y , Z ------------ aaa , 1 , aaa , 2 , 1 aaa , 3 , 2 bbb , 4 , 3 bbb , 5 , 4 bbb , 6 , 5 But if you don’t want to mix the values for aaa and bbb, you can group by the X field, and you will have this: X , Y , Z ------------ aaa , 1 , aaa , 2 , 1 aaa , 3 , 2 bbb , 4 , bbb , 5 , 4 bbb , 6 , 5 Thus, by grouping (provided the input is sorted according to your grouping), you can be assured that lead or lag operations will not return row values outside of the defined group.","title":" Analytic Query","component":"manual","version":"2.7.0","name":"analyticquery","url":"/manual/latest/pipeline/transforms/analyticquery.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Group field examples","hash":"_group_field_examples","id":4}]},"180":{"id":180,"text":"The Apache Tika transform parses files in all sorts of formats and extracts the text content as well as available metadata it can extract. This transform uses the Apache Tika libraries to do the parsing. The extracted metadata is given in JSON format. If you need specific pieces of information from this metadata, you can extract those with a JSON Input transform. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. File tab Here you can specify which files will be read and examined. Content tab This tab has various content settings. For example, you can specify the file encoding, output format and so on. Output fields tab On this tab you can simply type in the names of the fields you want in the output. All fields of this transform support metadata injection.","title":" Apache Tika","component":"manual","version":"2.7.0","name":"apache-tika","url":"/manual/latest/pipeline/transforms/apache-tika.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"181":{"id":181,"text":"The Append Streams transform reads the data from two transforms, only processing the second stream after the first one is finished. As always, the row layout for the input data coming from both transforms has to be identical: the same row lengths, the same data types, the same fields at the same field indexes in the row. Important: If you don’t care about the order in which the output rows occur, you can use any transform to create a union of 2 or more data streams. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Head hop The name of the transform from which will be read the first stream. Tail hop The name of the transform from which will be read the second stream. All fields of this transform support metadata injection.","title":" Append Streams","component":"manual","version":"2.7.0","name":"append","url":"/manual/latest/pipeline/transforms/append.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"182":{"id":182,"text":"The Avro Decode transform allows you to decode an Avro field and convert it to Hop fields. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Source field Select the name of the field (of type: Avro) to convert Source fields You can specify the names of the Avro fields to select from the Avro records. You can also specify to which Hop data type you want to convert to. Please note that complex data types like Map and Record are converted into JSON which you can then parse further in subsequent transforms. Note: The \"Avro type\" column is informational only. It’s not used at runtime. Get fields button You can use the \"Get fields\" button to retrieve the fields from the schema present in the metadata of the specified Avro Record source field. If there’s no metadata in this field, in case of sourcing from a Kafka consumer for example, you can opt to read from an Avro file. All fields of this transform support metadata injection.","title":" Avro Decode","component":"manual","version":"2.7.0","name":"avro-decode","url":"/manual/latest/pipeline/transforms/avro-decode.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"183":{"id":183,"text":"The Avro Encode transform allows you to encode a new Avro Record field using a selection of Hop fields. The Avro schema will be part of the value metadata for this Avro Record field. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Output field name Choose a name for the Avro Record output field. Schema name The name of the schema included in the output Avro record Namespace An optional schema namespace Documentation An optional schema documentation (doc) element The fields to encode in a generic Avro record: You can specify the names of the Hop input fields to be included in the output Avro record field. Optionally you can store the values under a different name (key) in the Avro record. Get fields button You can use the \"Get fields\" button to retrieve the fields to be included in the Avro record. All fields of this transform support metadata injection.","title":" Avro Encode","component":"manual","version":"2.7.0","name":"avro-encode","url":"/manual/latest/pipeline/transforms/avro-encode.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"184":{"id":184,"text":"The Avro File Input transform simply reads Avro records from one or more files. Each record is encapsulated in an Avro field, each value has its own Schema and record. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Filename field Select the field which contains the filename(s) of the Avro files to read Avro output field name The name of the field which will contain the Avro records Maximum number of rows to read Specify a positive number to limit the amount of rows read from all files. All fields of this transform support metadata injection.","title":" Avro File Input","component":"manual","version":"2.7.0","name":"avro-file-input","url":"/manual/latest/pipeline/transforms/avro-file-input.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"185":{"id":185,"text":"The Avro File Output transform can write Apache Avro messages to a file or field Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Output Type The type of output you want, this can be binary file, binary message or a JSON message. When selecting message it will be sent to the Output Field. Filename The filepath where to save the avro data file. Output Field When not writing to a file this is the fieldname used to output the message to. Automatically create schema You can either select an existing schema or create a schema based on the fields in the fields tab. Write schema to file Select this to write the schema to a separate file. Avro namespace Namespace used in the Avro file. Avro record name Name used for the Avro record. Avro documentation Schema filename Filepath to write or read the schema from. Create parent folder When creating a file, select this if you want to create the parent folder. Compression codec Compression used for the avro messages when writing to a file. Include transform nr in filename Add the Transform instance number to the filename. Include partition nr in filename Add the Partition number to the filename. Include date in filename Include the date when the file was created in the filename Include time in filename Include the time when the file was created in the filename Specify date format Specify a custom date and format to attach to the filename Date time format Date time specification used for the formatting Add filenames to result Add the resulting filenames that are created to the filename results Fields tab: Option Description Name The source field in the stream. Avro Schema Path The destination field, when an existing schema is specified this is populated with the fields from the schema to map the input fields to. Avro Type The Avro type of the field in the Avro destination file. Nullable Is the field nullable? All fields of this transform support metadata injection. To inject the Avro field type use following codes AVRO_TYPE_NONE = 0 AVRO_TYPE_BOOLEAN = 1 AVRO_TYPE_DOUBLE = 2 AVRO_TYPE_FLOAT = 3 AVRO_TYPE_INT = 4 AVRO_TYPE_LONG = 5 AVRO_TYPE_STRING = 6 AVRO_TYPE_ENUM = 7","title":" Avro File Output","component":"manual","version":"2.7.0","name":"avro-file-output","url":"/manual/latest/pipeline/transforms/avro-file-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"186":{"id":186,"text":"The Azure Event Hubs Listener transform listens indefinitely to an Event Hub on the Microsoft Azure cloud platform. Hop Engine Spark Flink Dataflow Event Hubs namespace: the name of your Event Hubs namespace Event Hubs instance name: the name of the Event Hub, the instance itself. Event Hub connection string: Typically the same as the SAS Key Connection String SAS Policy key name: the name of the policy in the \"Shared Access Policies\" section of the Event Hubs Namespace in the Azure dashboard. This needs to be a policy with the \"Send\" claim enabled. SAS Key connection string: You can use the value in the policy labeled \"Connection string–primary key\" Batch size: the number of messages (events) to send in one batch with each call to Azure. Message field: the field containing the message to use as the events. Please note you can use a transform like JSON Output or \"Java Script\" to assemble the message. Consumer Group name: If you didn’t create a specific group, just use $Default Storage Container name: the name of your storage container Storage Connection String: the key1 or key2 Connection string from the Access keys section of your storage account. Batch size: The number of events to get at once from the event hub and to (optionally) pass to a batching pipeline (see below) Prefetch size: (optional) the number of events to pre-fetch Message output field : the name of the output field containing the message (event) Partition ID field : the name of the output field for the partition ID Offset field name : the name of the output field for the event offset Sequence number field name : the name of the output field for the event sequence number Host (owner) field name : the name of the output field for the event host Enqueued time field name : the name of the output field for the time the event was queued. In order to make sure that all records are processed safely before we checkpoint the events stream, we need to run all logic we need to run, update everything we need to update, before we do so. To do this we pass all the rows we read in one batch to the specified batch pipeline (which will run single threaded) Batch pipeline: the batch pipeline file name pipeline input transform: the name of the \"Injector\" or \"Get records from Stream\" transform to send the events to in the batch pipeline. pipeline output transform: (optional) the name of the transform to read from in the batch pipeline and to use as output of this Listener transform. Maximum wait time (ms): (optional but highly recommended!) The maximum time to wait before the batch pipeline is executed despite the fact that you might not have the specified number of records in the batch. This is useful to prevent stale records from getting stuck in the batch pipeline input for longer periods of time when you might not have new events arriving from a hub. The batch pipeline starts with an Injector transform. It receives the following fields: message (String) partitionId (String) offset (String) sequenceNumber (Integer) host (String) enqueuedTime (Timestamp)","title":" Azure Event Hubs Listener","component":"manual","version":"2.7.0","name":"azure-event-hubs-listener","url":"/manual/latest/pipeline/transforms/azure-event-hubs-listener.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Connection options","hash":"_connection_options","id":3},{"text":"Tuning options","hash":"_tuning_options","id":4},{"text":"Output fields","hash":"_output_fields","id":5},{"text":"Batch processing options","hash":"_batch_processing_options","id":6},{"text":"Important notes","hash":"_important_notes","id":7}]},"187":{"id":187,"text":"The Azure Event Hubs Writer transform allows you to write messages (events) to a streaming service bus called Event Hubs on the Microsoft Azure cloud platform. Hop Engine Spark Flink Dataflow Here are the important options to fill in to get the transform to work: Event Hubs namespace: the name of your Event Hubs namespace Event Hubs instance name: the name of the Event Hub, the instance itself. SAS Policy key name: the name of the policy in the \"Shared Access Policies\" section of the Event Hubs Namespace in the Azure dashboard. This needs to be a policy with the \"Send\" claim enabled. SAS Key connection string: You can use the value in the policy labeled \"Connection string–primary key\" Batch size: the number of messages (events) to send in one batch with each call to Azure. Message field: the field containing the message to use as the events. Please note you can use a transform like JSON Output or \"Java Script\" to assemble the message.","title":" Azure Event Hubs Writer","component":"manual","version":"2.7.0","name":"azure-event-hubs-writer","url":"/manual/latest/pipeline/transforms/azure-event-hubs-writer.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"188":{"id":188,"text":"The Beam BigQuery Input transform can be used to input data from Google Cloud BigQuery using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Project ID The Google Cloud project. Data set ID The BigQuery dataset ID. Table ID The BigQuery table ID. Query The input query, blank means everything from the table. Return fields selection A list of result fields. BQ Field name The field name in the BigQuery table. Rename to…​ (optional) The name to be given to a column. Hop data type The field data type.","title":" Beam BigQuery Input","component":"manual","version":"2.7.0","name":"beambigqueryinput","url":"/manual/latest/pipeline/transforms/beambigqueryinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"189":{"id":189,"text":"The Beam BigQuery Output transform can be used to write data to a BigQuery table using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Project ID The Google Cloud Platform project. Data set ID The BigQuery dataset ID. Table ID The BigQuery table ID. Create table if needed Whether or not to create the table if it does not exist. (default: true) Truncate table Whether or not to truncate the table before inserting. Fail if the table is not empty Throws an error if the table is not empty.","title":" Beam BigQuery Output","component":"manual","version":"2.7.0","name":"beambigqueryoutput","url":"/manual/latest/pipeline/transforms/beambigqueryoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"190":{"id":190,"text":"The Beam Bigtable Input transform can be used to input data from Google Cloud Bigtable using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Project ID The Google Cloud project. Instance ID The Bigtable instance ID. Table ID The Bigtable ID.","title":" Beam Bigtable Input","component":"manual","version":"2.7.0","name":"beambigtableinput","url":"/manual/latest/pipeline/transforms/beambigtableinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"191":{"id":191,"text":"The Beam Bigtable Output transform can be used to write data to a Google Cloud Bigtable table using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Project ID The Google Cloud project. Instance ID The Bigtable instance ID. Table ID The Bigtable ID. Key field the field to use as the Bigtable table row key Columns to set: a list of the columns to write to the Bigtable table: name: the name (qualifier) for this column family: the family name for this column source field: the pipeline field to use for the column’s values","title":" Beam Bigtable Output","component":"manual","version":"2.7.0","name":"beambigtableoutput","url":"/manual/latest/pipeline/transforms/beambigtableoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"192":{"id":192,"text":"The Beam GCP Pub/Sub : Publish transform publishes messages to a Google Cloud Pub/Sub topic using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Topic to publish to The Google Cloud Pub/Sub topic. The type of message to publish String PubsubMessage The field to use as message The field which contains the message.","title":" Beam GCP Pub/Sub : Publish","component":"manual","version":"2.7.0","name":"beamgcppublisher","url":"/manual/latest/pipeline/transforms/beamgcppublisher.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"193":{"id":193,"text":"The Beam GCP Pub/Sub : Subscribe transform gets messages from a Google Cloud Pub/Sub topic using a subscription with the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Subscription name Name of the Google Cloud Pub/Sub subscription. Topic to subscribe to The Google Cloud Pub/Sub topic. The type of message to read String PubsubMessage The output field name The field containing the result message.","title":" Beam GCP Pub/Sub : Subscribe","component":"manual","version":"2.7.0","name":"beamgcpsubscriber","url":"/manual/latest/pipeline/transforms/beamgcpsubscriber.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"194":{"id":194,"text":"The Beam Hive Catalog input transform reads data from an Apache Hive metastore. This transform is in an experimental state, backwards compatibility between versions is not guaranteed Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Hive Metastore URI The Thrift metastore URI needs to be in format thrift://hivemetastore:9083 Database name Database name used in the metastore. Table name Table name used in the metastore At this point in time this transform is still in an experimental phase. It can not yet detect and cast field types, all data is returned in a single string which is separated by the ; character. Use a split fields transform to split the data into fields.","title":" (EXPERIMENTAL) Beam Hive Catalog Input","component":"manual","version":"2.7.0","name":"beamhivecataloginput","url":"/manual/latest/pipeline/transforms/beamhivecataloginput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Limitations","hash":"_limitations","id":4}]},"195":{"id":195,"text":"The Beam Input transform reads files using a file definition with the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Input location The location from which to read a file. File definition to use The file definition to use stored in a metastore. Edit Edits an existing file definition. New Creates a new file definition. Manage Opens the MetaStore Explorer. A file definition can be used to define a file structure definition. Option Description Name The file definition name. Description The file definition description. Field separator The character separating the fields. Field enclosure The character enclosing fields. Field definitions A list of fields. Field name The field name. Type The field data type. Format The field format. Length The field length. Precision The field precisiom.","title":" Beam Input","component":"manual","version":"2.7.0","name":"beaminput","url":"/manual/latest/pipeline/transforms/beaminput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File Definition","hash":"_file_definition","id":4}]},"196":{"id":196,"text":"The Beam Kafka Consume transform consumes records from a Kafka cluster using the Beam execution engine. Hop Engine Spark Flink Dataflow The main limitation of the Kafka Consumer is that it currently only supports reading Strings as keys and String and Avro Record as values. Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Bootstrap servers A comma separated list of hosts which are Kafka brokers in a \"bootstrap\" Kafka cluster. Topics to consume A comma separated list of topics to consume. Group ID Specifies the ID of a consumer group a Kafka consumer belongs to. The name of the key output field The result key field. The name of the message output field The result message field. The message type (default is Sting) The type of message to get from Kafka. Schema registry URL (Avro) The schema registry URL in case you’re consuming Avro Record messages Schema registry subject (Avro) The name of the subject (schema name) in the schema registry. This will allow us to know what kind of Avro values are being consumed. Use processing time The time when the record is processed by Beam. Use log append time The time when the record is appended by the broker. Use create time The time when the producer record is created. Restrict read to committed messages Restricts reading to committed records only. Allow offsets to be committed back Allows committing offsets as to mark an offset as consumed. Configuration options A list of configuration parameters. Parameter A configuration parameter. Value The parameter value. Type The value data type. Here are some options you need to consume Avro Record values from a Kafka server. The schema of Avro values are not sent to Kafka but to a schema registry. As such you need to have one available. Here are some options you need to set to make this work on a Confluent Cloud Kafka instance. There are various parts of the software stack that need authentication, hence the bit of redundancy. We recommend that you put these options in variables in your environment configuration file. Option Example auto.offset.reset earliest (or latest) sasl.jaas.config org.apache.kafka.common.security.plain.PlainLoginModule required username=\"CLUSTER_API_KEY\" password=\"CLUSTER_API_SECRET\"; security.protocol SASL_SSL basic.auth.credentials.source USER_INFO basic.auth.user.info CLUSTER_API_KEY:CLUSTER_API_SECRET schema.registry.basic.auth.user.info SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_API_SECRET sasl.mechanism PLAIN client.dns.lookup use_all_dns_ips acks ALL","title":" Beam Kafka Consume","component":"manual","version":"2.7.0","name":"beamkafkaconsume","url":"/manual/latest/pipeline/transforms/beamkafkaconsume.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Limitations","hash":"_limitations","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Avro and Schema registry","hash":"_avro_and_schema_registry","id":5}]},"197":{"id":197,"text":"The Beam Kafka Produce transform publishes records to a Kafka cluster using the Beam execution engine. Hop Engine Spark Flink Dataflow The main limitation of the Kafka Producer is that it currently only supports writing or producing Strings as keys and String and Avro Record as values. Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Bootstrap servers A comma separated list of hosts which are Kafka brokers in a \"bootstrap\" Kafka cluster. The topics The topics to publish to. The field to use as key The record key. The field to use as message The record message. Here are some options you need to send Avro Record values to a Kafka server. The schema of Avro values are not sent to Kafka but to a schema registry. As such you need to have one available. Here are some options you need to set to make this work on a Confluent Cloud Kafka instance. There are various parts of the software stack that need authentication, hence the bit of redundancy. We recommend that you put these options in variables in your environment configuration file. Option Example schema.registry.url https://abcd-12345x.europe-west3.gcp.confluent.cloud value.converter.schema.registry.url https://abcd-12345x.europe-west3.gcp.confluent.cloud auto.register.schemas true security.protocol SASL_SSL sasl.jaas.config org.apache.kafka.common.security.plain.PlainLoginModule required username=\"CLUSTER_API_KEY\" password=\"CLUSTER_API_SECRET\"; username CLUSTER_API_KEY password CLUSTER_API_SECRET sasl.mechanism PLAIN client.dns.lookup use_all_dns_ips acks ALL basic.auth.credentials.source USER_INFO basic.auth.user.info CLUSTER_API_KEY:CLUSTER_API_SECRET schema.registry.basic.auth.user.info SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_API_SECRET","title":" Beam Kafka Produce","component":"manual","version":"2.7.0","name":"beamkafkaproduce","url":"/manual/latest/pipeline/transforms/beamkafkaproduce.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Limitations","hash":"_limitations","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Avro and Schema registry","hash":"_avro_and_schema_registry","id":5}]},"198":{"id":198,"text":"The Beam Kinesis Consume transform consumes (reads) messages from an Amazon Kinesis stream using the Beam pipeline execution engine. Hop Engine Spark Flink Dataflow The main limitation of the Kinesis consumer is that it currently only supports reading String messages. Please create a request in GitHub if you want to see support for Avro messages and other formats. Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. AWS access key The Amazon Web Services access key to authenticate with. AWS secret key The Amazon Web Services secret key to authenticate with. Stream name The name of the Kinesis stream to consume from. The name of the unique ID output field This is the name of the field in the output of the transform which will contain a unique ID for the data (message) received. The name of the data output field This is the name of the field that will contain the actual data (message) The type of data retrieved Only String data (messages) are supported for now. Partition key field name Optional: the name of the field in the output which will contain the partition key Sequence number field name Optional: the name of the field in the output which will contain the sequence number of the message Sub-sequence number field name Optional: the name of the field in the output which will contain the sub-sequence number of the message Shard ID field name Optional: the name of the field in the output which will contain the Shard ID of the message Stream name field name Optional: the name of the field in the output which will contain the name of the stream being read Maximum number of records Optional: the maximum number of records this transform will read before stopping Maximum read time (ms) Optional: the maximum time in ms this transform will read before stopping Request record limit Optional: the number of records which will be read at once in every request (micro-batch) Arrival time watermark policy? Watermark messages at the time of arrival in the Beam pipeline. Arrival watermark idle time (ms) Denotes the duration for which the watermark can be idle Processing time watermark? Watermark message at the time of processing in the Beam pipeline. Fixed delay rate limit policy? Specifies a fixed delay rate limit policy with the default delay of 1s Fixed delay rate limit policy delay (ms) Specifies a fixed delay rate limit policy with the given delay. Maximum capacity per shard Specifies the maximum number of messages per one shard.","title":" Beam Kinesis Consume","component":"manual","version":"2.7.0","name":"beamkinesisconsume","url":"/manual/latest/pipeline/transforms/beamkinesisconsume.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Limitations","hash":"_limitations","id":3},{"text":"Options","hash":"_options","id":4}]},"199":{"id":199,"text":"The Beam Kinesis Produce transform sends data (messages) to an Amazon Kinesis stream using a Beam pipeline execution engine. Hop Engine Spark Flink Dataflow The main limitation of the Kinesis produce transform is that it currently only supports sending String data. Please create a request in GitHub if you want to see support for Avro messages and other formats. Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. AWS access key The Amazon Web Services access key to authenticate with. AWS secret key The Amazon Web Services secret key to authenticate with. Stream name The name of the Kinesis stream to write to. The name of the data field to send This is the name of the field that contains the actual data (message) The type of data to send Only String data (messages) are supported for now. Partition key The partition key to use Configuration options A list of configuration options. See here for a list of examples.","title":" Beam Kinesis Produce","component":"manual","version":"2.7.0","name":"beamkinesisproduce","url":"/manual/latest/pipeline/transforms/beamkinesisproduce.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Limitations","hash":"_limitations","id":3},{"text":"Options","hash":"_options","id":4}]},"200":{"id":200,"text":"The Beam Output transform writes files using a file definition with the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Output location The output location. File prefix Text which has to precede the file name. File suffix Text which has to succeed the file name. Windowed writes? Writes a file per window. Use together with the Beam Window transform. File definition to use The file definition to use stored in a metastore. Edit Edits an existing file definition. New Creates a new file definition. Manage Opens the MetaStore Explorer. A file definition can be used to define a file structure definition. Option Description Name The file definition name. Description The file definition description. Field separator The character separating the fields. Field enclosure The character enclosing fields. Field definitions A list of fields. Field name The field name. Type The field data type. Format The field format. Length The field length. Precision The field precisiom.","title":" Beam Output","component":"manual","version":"2.7.0","name":"beamoutput","url":"/manual/latest/pipeline/transforms/beamoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File Definition","hash":"_file_definition","id":4}]},"201":{"id":201,"text":"The Beam Timestamp transform adds a custom timestamp using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. The time field to use. Uses system time if blank The field containing the timestamp, will use system time is empty. Get timestamp from stream? Returns the event time field if it is defined within the stream.","title":" Beam Timestamp","component":"manual","version":"2.7.0","name":"beamtimestamp","url":"/manual/latest/pipeline/transforms/beamtimestamp.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"202":{"id":202,"text":"The Beam Window transform adds event-time-based window functions using the Beam execution engine. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Window type Fixed Sliding Session Global Window size (duration in seconds) Sets the window duration size in seconds, default 60. Every x seconds (Sliding windows) Sets the slide window duration in seconds. Window start field The field containing the window start time. Window end field The field containing the window end time. Window max field The field containing the max duration between events. Fixed or tumbling windows are used to repeatedly segment data into distinct time segments and do not overlap. Events cannot belong to more than one window. Sliding windows produce an output only when an event occurs and continuously move forward. Every window will have at least one event and can overlap. Events can belong to more than one window. Session windows group events which arrive at similar times and filter out periods of time when there is no data. The window begins when the first event occurs and extends to include new events within a specified timeout. If events keep occurring the window will keep extending until maximum duration is reached. Global windowing is the default in Beam and ignores event time (spanning all of event time) and uses triggers to provide snapshots of that window.","title":" Beam Window","component":"manual","version":"2.7.0","name":"beamwindow","url":"/manual/latest/pipeline/transforms/beamwindow.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Window Types","hash":"_window_types","id":4},{"text":"Fixed","hash":"_fixed","id":5},{"text":"Sliding","hash":"_sliding","id":6},{"text":"Session","hash":"_session","id":7},{"text":"Global","hash":"_global","id":8}]},"203":{"id":203,"text":"The Blocking transform blocks all output until the very last row is received from the previous transform. the transform blocks until it gets the last row. It does not block until the previous transform is finished 100% which is functionality found in the other transform Blocking until transforms finish. At that point, the last row is sent to the next transform or the complete input is sent off to the next transform. Use the Blocking transform for triggering plugins, stored procedures, Java scripts, …​ or for synchronization purposes. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline. Pass all rows? Determines whether to pass one row or all rows Spool directory The directory in which the temporary files are stored if needed; the default is the standard temporary directory for the system Spool-file prefix Choose a recognizable prefix to identify the files when they appear in the temp directory Cache size The more rows you can store in memory, the faster the transform works Compress spool files? Compresses temporary files when they are needed","title":" Blocking transform","component":"manual","version":"2.7.0","name":"blockingtransform","url":"/manual/latest/pipeline/transforms/blockingtransform.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"204":{"id":204,"text":"This transform simply waits until all the transform copies that are specified in the dialog have finished. You can use it to avoid the natural concurrency (parallelism) that exists between pipeline transform copies. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Watch the following transforms Use this grid to specify the transforms to wait for. Get transforms Push this button to auto-fill the \"Watch the following transforms\" grid with all transforms available in the pipeline. Option Description Transform name The name of the transform to wait for. CopyNr The (0-based) copy number of the transform. If the named transform has an explicit setting for \"Change number of copies to start\", and you want to wait for all copies to finish, you’ll need to enter one row in the grid for each copy, and use this column to specify which copy of the transform to wait for. For the default number of copies (1), the CopyNr is always 0.","title":" Blocking until transforms finish","component":"manual","version":"2.7.0","name":"blockuntiltransformsfinish","url":"/manual/latest/pipeline/transforms/blockuntiltransformsfinish.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"205":{"id":205,"text":"The Calculator transform provides you with predefined functions that can be executed on input field values. Note: The execution speed of the Calculator is far better than the speed provided by custom scripts (JavaScript). In addition to the arguments (Field A, Field B and Field C) you must also specify the return type of the function. You can also choose to remove the field from the result (output) after all values are calculated; this is useful in cases where you use temporary values that don’t need to end up in your pipeline fields. Hop Engine Spark Flink Dataflow Function Description Set field to constant A Create a copy of field A A + B A plus B. A - B A minus B. A * B A multiplied by B. A / B A divided by B. A * A The square of A. SQRT( A ) The square root of A. 100 * A / B Percentage of A in B. A - ( A * B / 100 ) Subtract B% of A. A + ( A * B / 100 ) Add B% to A. A + B *C Add A and B times C. SQRT( A*A + B*B ) Calculate ?(A2+B2). ROUND( A ) Returns the closest Integer to the argument. The result is rounded to an Integer by adding 1/2, taking the floor of the result, and casting the result to type int. In other words, the result is equal to the value of the expression: floor (a + 0.5). In case you need the rounding method \"Round half to even\", use the following method ROUND( A, B ) with no decimals (B=0). ROUND( A, B ) Round A to the nearest even number with B decimals. The used rounding method is \"Round half to even\", it is also called unbiased rounding, convergent rounding, statistician’s rounding, Dutch rounding, Gaussian rounding, odd-even rounding, bankers' rounding or broken rounding, and is widely used in bookkeeping. This is the default rounding mode used in IEEE 754 computing functions and operators. In Germany it is often called \"Mathematisches Runden\". STDROUND( A ) Round A to the nearest integer. The used rounding method is \"Round half away from zero\", it is also called standard or common rounding. In Germany it is known as \"kaufmännische Rundung\" (and defined in DIN 1333). STDROUND( A, B ) Same rounding method used as in STDROUND (A) but with B decimals. CEIL( A ) The ceiling function map a number to the smallest following integer. FLOOR( A ) The floor function map a number to the largest previous integer. NVL( A, B ) If A is not NULL, return A, else B. Note that sometimes your variable won’t be null but an empty string. Date A + B days Add B days to Date field A. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with hours. Year of date A Calculate the year of date A. Month of date A Calculate number the month of date A. Day of year of date A Calculate the day of year (1-365). Day of month of date A Calculate the day of month (1-31). Day of week of date A Calculate the day of week (1-7). 1 is Sunday, 2 is Monday, etc. Week of year of date A Calculate the week of year (1-54). ISO8601 Week of year of date A Calculate the week of the year ISO8601 style (1-53). ISO8601 Year of date A Calculate the year ISO8601 style. Byte to hex encode of string A Encode bytes in a string to a hexadecimal representation. Hex encode of string A Encode a string in its own hexadecimal representation. Char to hex encode of string A Encode characters in a string to a hexadecimal representation. Hex decode of string A Decode a string from its hexadecimal representation (add a leading 0 when A is of odd length). Checksum of a file A using CRC-32 Calculate the checksum of a file using CRC-32. Checksum of a file A using Adler-32 Calculate the checksum of a file using Adler-32. Checksum of a file A using MD5 Calculate the checksum of a file using MD5. Checksum of a file A using SHA-1 Calculate the checksum of a file using SHA-1. Levenshtein Distance (Source A and Target B) Calculates the Levenshtein Distance: http://en.wikipedia.org/wiki/Levenshtein_distance Metaphone of A (Phonetics) Calculates the metaphone of A: http://en.wikipedia.org/wiki/Metaphone Double metaphone of A Calculates the double metaphone of A: http://en.wikipedia.org/wiki/Double_Metaphone Absolute value ABS(A) Calculates the Absolute value of A. Remove time from a date A Removes time value of A. Note: Daylight Savings Time (DST) changes in Sao Paulo and some other parts of Brazil at midnight 0:00. This makes it impossible to set the time to 0:00 at the specific date, when the DST changes from 0:00 to 1:00 am. So, there is one date in one year in these regions where this function will fail with an \"IllegalArgumentException: HOUR_OF_DAY: 0 → 1\". It is not an issue for Europe, the US and other regions where the time changes at 1:00 or 2:00 or 3:00 am. Date A - Date B (in days) Calculates difference, in days, between A date field and B date field. A + B + C A plus B plus C. First letter of each word of a string A in capital Transforms the first letter of each word within a string. UpperCase of a string A Transforms a string to uppercase. LowerCase of a string A Transforms a string to lowercase. Mask XML content from string A Escape XML content; replace characters with &values. Protect (CDATA) XML content from string A Indicates an XML string is general character data, rather than non-character data or character data with a more specific, limited structure. The given string will be enclosed into . Remove CR from a string A Removes carriage returns from a string. Remove LF from a string A Removes linefeeds from a string. Remove CRLF from a string A Removes carriage returns/linefeeds from a string. Remove TAB from a string A Removes tab characters from a string. Return only digits from string A Outputs only digits (0-9) from a string. Remove digits from string A Removes all digits (0-9) from a string. Return the length of a string A Returns the length of the string. Load file content in binary Loads the content of the given file (in field A) to a binary data type (e.g. pictures). Add time B to date A Add the time to a date, returns date and time as one value. Quarter of date A Returns the quarter (1 to 4) of the date. variable substitution in string A Substitute variables within a string. Unescape XML content Unescape XML content from the string. Escape HTML content Escape HTML within the string. Unescape HTML content Unescape HTML within the string. Escape SQL content Escapes the characters in a String to be suitable to pass to an SQL query. Date A - Date B (working days) Calculates the difference between Date field A and Date field B (only working days Mon-Fri). Date A + B Months Add B months to Date field A. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with days. Check if an XML file A is well formed Validates XML file input. Check if an XML string A is well formed Validates XML string input. Get encoding of file A Guess the best encoding (UTF-8) for the given file. Dameraulevenshtein distance between String A and String B Calculates Dameraulevenshtein distance between strings: http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance NeedlemanWunsch distance between String A and String B Calculates NeedlemanWunsch distance between strings: http://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm Jaro similitude between String A and String B Returns the Jaro similarity coefficient between two strings. JaroWinkler similitude between String A and String B Returns the Jaro similarity coefficient between two string: http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance SoundEx of String A Encodes a string into a Soundex value. RefinedSoundEx of String A Retrieves the Refined Soundex code for a given string object Date A + B Hours Add B hours to Date field. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with minutes. Date A + B Minutes Add B minutes to Date field. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with seconds. Date A - Date B (milliseconds) Subtract B milliseconds from Date field A Date A - Date B (seconds) Subtract B seconds from Date field A. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with milliseconds. Date A - Date B (minutes) Subtract B minutes from Date field A. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with seconds. Date A - Date B (hours) Subtract B hours from Date field A. Note: Only integer values for B are supported. If you need non-integer calculations, please add a second calculation with minutes. Hour of Day of Date A Extract the hour part of the given date Minute of Hour of Date A Extract the minute part of the given date Second of Hour of Date A Extract the second part of a given date Q: I made a pipeline using A/B in a calculator transform and it rounded wrong: the 2 input fields are integer but my result type was Number(6, 4) so I would expect the integers to be cast to Number before executing the division. If I wanted to execute e.g. 28/222, I got 0.0 instead of 0.1261 which I expected. So it seems the result type is ignored. If I change the input types both to Number(6, 4) I get as result 0.12612612612612611 which still ignores the result type (4 places after the comma). Why is this? A: Length & Precision are just metadata pieces. If you want to round to the specified precision, you should do this in another transform. However: please keep in mind that rounding double point precision values is futile anyway. A floating point number is stored as an approximation (it floats) so 0.1261 (your desired output) could (would probably) end up being stored as 0.126099999999 or 0.1261000000001 (Note: this is not the case for BigNumbers) So in the end we round using BigDecimals once we store the numbers in the output table, but NOT during the pipeline. The same is true for the Text File Output transform. If you would have specified Integer as result type, the internal number format would have been retained, you would press \"Get Fields\" and it the required Integer type would be filled in. The required conversion would take place there and then. In short: we convert to the required metadata type when we land the data somewhere, NOT BEFORE. Q: How do the data types work internally? A: You might notice that if you multiply an Integer and Number, the result is always rounded. That is because Calculator takes data type of the left hand size of the multiplication (A) as the driver for the calculation. As such, if you want more precision, you should put field B on the left hand side or change the data type to Number and all will be well.","title":" Calculator","component":"manual","version":"2.7.0","name":"calculator","url":"/manual/latest/pipeline/transforms/calculator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"FAQ on length and precision and data types affecting the results","hash":"_faq_on_length_and_precision_and_data_types_affecting_the_results","id":4}]},"206":{"id":206,"text":"The Call DB Procedure transform allows you to execute a database procedure (or function) and get the result(s) back. With MySQL and JDBC, it is not possible to retrieve the result set of a stored procedure. Stored procedures and functions can only return values through their function arguments and those arguments must be defined in the Parameters section of the DB Procedure Call configuration. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline Connection Name of the database connection on which the procedure resides Proc-name Name of the procedure or function to call Find it Click to search on the specified database connection for available procedures and functions (Oracle and SQL Server only) Enable auto In some instances you want to perform updates commit in the database using the specified procedure. In that case you can either have the changes performed using auto-commit or not. If auto-commit is disabled, a single commit is being performed after the last row is received by this transform. Result name Name of the result of the function call; leave blank if this is a procedure Result type Type of the result of the function call; not used in case of a procedure. Parameters List of parameters that the procedure or function needs Field name: Name of the field. Direction: Can be either IN (input only), OUT (output only), INOUT (value is changed on the database). Type: Used for output parameters so that Hop knows what returns Get Fields Fills in all the fields in the input streams to make your life easier; delete the lines you don’t need and re-order the remaining lines","title":" Call DB procedure","component":"manual","version":"2.7.0","name":"calldbproc","url":"/manual/latest/pipeline/transforms/calldbproc.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"207":{"id":207,"text":"The Cassandra Input transform reads data from a Cassandra table of an Apache Cassandra cluster using CQL (Cassandra Query Language) version 3.x. Hop Engine Spark Flink Dataflow Option Description Cassandra connection Here you specify the name of the connection to use either as a fixed value or as a variable expression. There are buttons to the right of the input field to hel you manage the metadata. Transport max length Set an optional maximum object size that can be sent. Leaving it blank means that the default cluster value is used. (typically 16384000) Execute query for each incoming row? This will cause the query to be executed repeatedly: once per input row. CQL The Cassandra Query Language statement you want to use. For more information on CQL, see Introduction to Cassandra Query Language","title":" Cassandra Input","component":"manual","version":"2.7.0","name":"cassandra-input","url":"/manual/latest/pipeline/transforms/cassandra-input.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"208":{"id":208,"text":"The Cassandra Output transform writes data to a Cassandra table of an Apache Cassandra cluster using CQL (Cassandra Query Language) version 3.x. Hop Engine Spark Flink Dataflow Option Description Cassandra connection Here you specify the name of the connection to use either as a fixed value or as a variable expression. There are buttons to the right of the input field to hel you manage the metadata. Table to write to Specify the name of the table to write to. Consistency level Please see Cassandra Write consistency levels for a list of possible values. Commit batch size The number of rows to update at once in each commit Batch insert timeout Specify the number of milliseconds to wait for a batch to completely insert before splitting into smaller sub-batches. You must specify a value lower than Socket timeout or leave empty for no timeout. Sub batch size Specify the sub-batch size (in number of rows) if the batch must be split because Batch insert timeout is reached. Insert unlogged batches Select if you want to use non-atomic batch writing. By default, batches are atomic (if any of the batch succeeds, all of it will succeed). Select this option to remove the atomic restriction. Time to live (TTL) Specify the amount of time in which to write a column. If the time expires, that column is deleted. Incoming field to use as the key Specify which incoming field to use as the key. You can use to specify the key from the names of incoming transform fields. Create table Select to create a named table (column family) if one does not already exist. Table creation WITH clause Specify additions to the table creation WITH clause. Truncate table Select if you want any existing data to be deleted from the named table before inserting incoming rows. Update table metadata Select if you want to update the table metadata with information on incoming fields not already present. If this option is not selected, any unknown incoming fields are ignored unless the Insert fields not in column meta data option is selected. Insert fields not in column meta data Select if want to insert the table metadata in any incoming fields not present, with respect to the default table validator. This option has no effect if Update table meta data is selected.","title":" Cassandra Output","component":"manual","version":"2.7.0","name":"cassandra-output","url":"/manual/latest/pipeline/transforms/cassandra-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"209":{"id":209,"text":"The Change File Encoding transform changes a text file from one encoding to another. Hop Engine Spark Flink Dataflow Transform name : the name of the transform, unique in a pipeline Source file Filename field : the name of the input field which will carry the file names at runtime Source encoding: the encoding of the text files Add source filename to the result filenames? : Check this if you want to add the source file(s) automatically to the files list of the result of the pipeline. Target file Target filename field: the name of the input field which will contain the target (output) file name at runtime Create parent folder: checking this field automatically creates the output folder specified in the target filename field. Target encoding: you can select the target encoding here Add target filename to the result filenames? : Check this if you want to add the target file(s) automatically to the files list of the result of the pipeline.","title":" Change file encoding","component":"manual","version":"2.7.0","name":"changefileencoding","url":"/manual/latest/pipeline/transforms/changefileencoding.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"210":{"id":210,"text":"The Check If A File Is Locked transform tries to determine if a file is locked by another process by trying to move the file to itself. Hop Engine Spark Flink Dataflow transform name: the transform name, unique in a pipeline Filename field: the name of the input field that will contain the names of the files during execution. Result fieldname: the name of the Boolean output field that will contain true or false depending on whether or not the file is locked or not. Add filename to result: check this if you want to add the checked file-names to the list of files in the pipelines result.","title":" Check if file is locked","component":"manual","version":"2.7.0","name":"checkfilelocked","url":"/manual/latest/pipeline/transforms/checkfilelocked.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"211":{"id":211,"text":"The Check If Webservice Is Available transform checks if a webservice URL in the data stream is valid, can be connected to and can be read. If it connects within the given time and data can be read, it returns 'true' as a boolean result value, otherwise 'false'. Further information of the failing reason can be found in the log when debug logging is enabled. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. URL field Specifies the URL fieldname in the data stream. The URL is checked for every row that is coming into this transform. Connect timeout (ms) The connect timeout in ms. The value is depending on the quality of service of this URL and experiences. Read timeout (ms) After connection, the transform tries to read data. This value gives the read timeout in ms. The value is depending on the quality of service of this URL and experiences. Result fieldname If it connects within the given timeout and data can be read, it returns 'true' as a boolean result value, otherwise 'false'","title":" Check if webservice is available","component":"manual","version":"2.7.0","name":"checkwebserviceavailable","url":"/manual/latest/pipeline/transforms/checkwebserviceavailable.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"212":{"id":212,"text":"The Clone Row transform creates copies (clones) of a row and outputs them directly after the original row to the next transforms. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Nr clones The number of clones you want to add after the original row. Add clone flag Check this option if you want to add a boolean field in the output indicating if the row is a clone or not. N / false : this is not a cloned row, it’s the original row Y / true : this is a cloned row, a copy of the original row Clone flag field The name of the clone flag field","title":" Clone row","component":"manual","version":"2.7.0","name":"clonerow","url":"/manual/latest/pipeline/transforms/clonerow.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"213":{"id":213,"text":"The Closure transform allows you to generate a Reflexive Transitive Closure Table for the Mondrian OLAP engine. For more information on how a closure table can help Mondrian gain performance, go here Technically, this transform reads all input rows in memory and calculates all possible parent-child relationships. It attaches the distance (in levels) from parent to child. Hop Engine Spark Flink Dataflow Option Description Transform name The name that uniquely identifies the transform. Parent ID field The field name that contains the parent ID of the parent-child relationship. Child ID field The field name that contains the child ID of the parent-child relationship. Distance field name The name of the distance field that will be added to the output Root is zero Check this box if the root of the parent-child tree is not empty (null) but zero (0)","title":" Closure","component":"manual","version":"2.7.0","name":"closure","url":"/manual/latest/pipeline/transforms/closure.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"214":{"id":214,"text":"The Coalesce transform lets you list multiple fields and returns the first non-null value. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Considered empty string as null The transform can consider empty string as null. Pick a list of fields to evaluate and specify a field name and type for the field output. Option Description Name The result field name, can overwrite an existing one. Type The formats to convert the value into the chosen data type. Remove Remove input fields from the stream. Input fields The order of the input fields listed in the columns determines the order in which they are evaluated. Support MetaData Injection (MDI)","title":" Coalesce","component":"manual","version":"2.7.0","name":"coalesce","url":"/manual/latest/pipeline/transforms/coalesce.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Fields","hash":"_fields","id":4}]},"215":{"id":215,"text":"The Column Exists transforms allows you to verify the existence of a specific column in a database table. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; This name has to be unique in a single pipeline Connection The database connection to use Schema name (optional) The schema name of the table of the column to check Table name The name of the table of the column to check Tablename in field? Enable to read the name of the table in an input field Tablename field Specify the fieldns containing parameters and the parameter type Columnname field The name of the column field in the input stream Result fieldname The name of the resulting boolean flag field","title":" Column exists","component":"manual","version":"2.7.0","name":"columnexists","url":"/manual/latest/pipeline/transforms/columnexists.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"216":{"id":216,"text":"The Combination Lookup-Update transform allows you to store information in a junk-dimension table. The transform can possibly also be used to maintain Kimball pure Type 1 dimensions. This transform will…​ Look up combination of business key field1…​ fieldn from the input stream in a dimension table If this combination of business key fields exists, return its technical key (surrogate id); If this combination of business key doesn’t exist yet, insert a row with the new key fields and return its (new) technical key Put all input fields on the output stream including the returned technical key, but remove all business key fields if \"remove lookup fields\" is true. This transform creates/maintains a technical key out of data with business keys. After passing through this transform all of the remaining data changes for the dimension table can be made as updates, as either a row for the business key already existed or was created. This transform will maintain the key information only. You must update the non-key information in the dimension table, e.g. by putting an update transform (based on technical key) after the combination update/lookup transform. Apache Hop will store the information in a table where the primary key is the combination of the business key fields in the table. Because this process can be slow if you have a large number of fields, a \"hash code\" field is supported that is representing all fields in the dimension. This can speed up lookup performance dramatically while limiting the fields to index to one field only. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Connection Name of the database connection on which the dimension table resides. Target schema This allows you to specify a schema name. Target table Name of the dimension table. Commit size Define the commit size, e.g. setting this to 10 will generate a commit every 10 inserts or updates. Cache size in rows This is the cache size in number of rows that will be held in memory to speed up lookups by reducing the number of round trips to the database. A cache size of 0 caches as many rows as possible and until your JVM runs out of memory. Use this option wisely with dimensions that can’t grown too large. A cache size of -1 means that caching is disabled. Key fields Specify the names of the keys in the stream and in the dimension table. This will enable the transform to do the lookup. Technical key field This indicates the primary key of the dimension. It is also referred to as Surrogate Key. Creation of technical key Specify howthe technical key is generated, options which are not available for your connection will be grayed out: Use table maximum + 1: A new technical key will be created from the maximum key in the table. Note that the new maximum is always cached, so that the maximum does not need to be calculated for each new row. Use sequence: Specify the sequence name if you want to use a database sequence on the table connection to generate the technical key (typical for Oracle e.g.). Use auto increment field: Use an auto increment field in the database table to generate the technical key (supported e.g. by DB2). Remove lookup fields? Enable this option if you want to remove all the lookup fields from the input stream in the output. The only extra field added is then the technical key. Use hashcode This option allows you to generate a hash code, representing all values in the key fields in a numerical form (a signed 64 bit integer). This hash code has to be stored in the table. Date of last update field When required, specify the date of last update field (timestamp) from the source system to be copied to the data warehouse. For example, when you have an address without a primary key. The field will not be part of the lookup fields (nor be part in the hash code calculation). The value is written once only because any change results in a new record being written. Get Fields button Fills in all the available fields on the input stream, except for the keys you specified. SQL button Generates the SQL to build the dimension and allows you to execute this SQL.","title":" Combination lookup/update","component":"manual","version":"2.7.0","name":"combinationlookup","url":"/manual/latest/pipeline/transforms/combinationlookup.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"217":{"id":217,"text":"The Concat Fields transform concatenates multiple fields into one target field. Type in a target field name which always creates a new field. You can optionally use a Separator field or Enclosure between fields and add the fields or free text you would like to concatenate in order. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Target Field Name The name of the target field (String type) Length of Target Field The length of the string type (setting the meta-data of the String type, this is also used by the Fast Data Dump option for performance optimization) Separator Specify the character that separates the fields in a single line of text. Typically this is ; or a tab. Enclosure A pair of strings can enclose some fields. This allows separator characters in fields. The enclosure string is optional. This is identical to the fields tab option of the Text File Output transform and has the same functionality. Option Description Name The name of the field. Type Type of the field can be either String, Date or Number. Format The format mask to convert with. See Number Formats for a complete description of format symbols. Length The length option depends on the field type follows: Number - Total number of significant figures in a number String - total length of string Date - length of printed output of the string (e.g. 4 only gives back year) Precision The precision option depends on the field type as follows: Number - Number of floating point digits String - unused Date - unused Currency Symbol used to represent currencies like $10,000.00 or E5.000,00 Decimal A decimal point can be a \".\" (10,000.00) or \",\" (5.000,00) Group A grouping can be a \",\" (10,000.00) or \".\" (5.000,00) Trim type The trimming method to apply on the string. Trimming only works when there is no field length given. Null If the value of the field is null, insert this string into the textfile Get Click to retrieve the list of fields from the input fields stream(s) Minimal width Alter the options in the fields tab in such a way that the resulting width of lines in the text file is minimal. So instead of save 0000001, we write 1, etc. String fields will no longer be padded to their specified length.","title":" Concat Fields","component":"manual","version":"2.7.0","name":"concatfields","url":"/manual/latest/pipeline/transforms/concatfields.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Fields Tab","hash":"_fields_tab","id":5}]},"218":{"id":218,"text":"The Copy Rows To Result transform can be paired with the Get Rows from Result transform to retrieve the result row set in a pipeline. In some cases, the Get rows from Result transform is not required to retrieve the result set such as a pipeline transform in a workflow. Data rows can be passed from and to pipelines on a workflow, but data rows cannot be accessed directly in a workflow. The Copy Rows To Result transform allows you to transfer rows of data (in memory) to the next pipeline (or workflow action) in a workflow via an internal result row set. Hop Engine Spark Flink Dataflow This transform can be used by the Get Rows from Result transform and some workflow actions that allow to process the internal result row set. this transform is mainly available for historical reasons. There are newer and better ways to create loops in Hop, check the Best Practices for more information. Option Description Transform name Name of the transform this name has to be unique in a single pipeline.","title":" Copy rows to result","component":"manual","version":"2.7.0","name":"copyrowstoresult","url":"/manual/latest/pipeline/transforms/copyrowstoresult.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"219":{"id":219,"text":"The Credit Card Validator transform will help you check the following: The validity of a credit card number. This uses a LUHN10 (MOD-10) algorithm. The credit card vendor that handles the number: VISA, MasterCard, Diners Club, EnRoute, American Express (AMEX),…​ Hop Engine Spark Flink Dataflow transform name: the transform name, unique in a pipeline Credit card field: the name of the input field that will contain the credit card number during execution Get only digits? : Enable this option if you want to strip all non-numeric characters from the (String) input field Output Fields Result fieldname: the name of the (Boolean) output field indicating the validity of the number Credit card type field: the name of the output field that will hold the credit card type (vendor) Not valid message: the name of the output field that will hold the error message.","title":" Credit card validator","component":"manual","version":"2.7.0","name":"creditcardvalidator","url":"/manual/latest/pipeline/transforms/creditcardvalidator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"220":{"id":220,"text":"The CSV File Input transform reads data from a delimited file. The CSV label for this transform is a misnomer because you can define whatever separator you want to use, such as pipes, tabs, and semicolons; you are not constrained to using commas. Internal processing allows this transform to process data quickly. Options for this transform are a subset of the Text File Input transform. This transform has fewer overall options than the general Text File Input transform, but it has a few advantages over it: NIO — Native system calls for reading the file means faster performance, but it is limited to only local files currently. No VFS support. Parallel running — If you configure this transform to run in multiple copies or in clustered mode, and you enable parallel running, each copy will read a separate block of a single file allowing you to distribute the file reading to several threads or even several slave nodes in a clustered pipeline. Lazy conversion — If you will be reading many fields from the file and many of those fields will not be manipulate, but merely passed through the pipeline to land in some other text file or a database, lazy conversion can prevent Hop from performing unnecessary work on those fields such as converting them into objects such as strings, dates, or numbers. For information on valid date and numeric formats used in this transform, view the Date Formatting Table and Number Formatting Table. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Filename or the filename field (data from previous transforms) Specify the name of the CSV file to read from. or Select the fieldname that will contain the filename(s) to read from. If this transform receives data from a previous transform, this option is enabled as well as the option to include the filename in the output. Delimiter Specify the file delimiter character used in the target file. Special characters (e.g. CHAR HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. Enclosure Specify the enclosure character used in the target file. Special characters (e.g. CHAR HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. NIO buffer size This is the size of the read buffer. It represents the amount of bytes that is read in one time from disk. Lazy conversion The lazy conversion algorithm will try to avoid unnecessary data type conversions and can result in a significant performance improvements if this is possible. The typical example that comes to mind is reading from a text file and writing back to a text file. Header row present? Enable this option if the target file’s first line contains a header row with column names. If we mistakenly leave this flag set on files that do not have any columns' names in its first row, Hop will set the column’s name the value found on a specific column for its specific position. In case, for that specific position, the column’s value is empty, Hop will set column’s name to EmptyField_ where n is the position of the column in the columns' set. NOTE: remember also to perform a check on the guessed data types and column’s specifier that was set after the file’s analysis because they could be wrong due to wrong assumptions made by Hop while looking at the sample dataset. Add filename to result Adds the CSV filename(s) read to the result of this pipeline. A unique list is being kept in memory that can be used in the next workflow action in a workflow, for example in another pipeline. The row number field name (optional) The name of the Integer field that will contain the row number in the output of this transform. Running in parallel? Check this box if you will have multiple instances of this transform running (transform copies) and if you want each instance to read a separate part of the CSV file(s). When reading multiple files, the total size of all files is taken into consideration to split the workload. In that specific case, make sure that ALL transform copies receive all files that need to be read, otherwise, the parallel algorithm will not work correctly (for obvious reasons). WARNING: For technical reasons, parallel reading of CSV files is only supported on files that don’t have fields with line breaks or carriage returns in them. File Encoding Specify the encoding of the file being read. Fields Table This table contains an ordered list of fields to be read from the target file. Preview button Click to preview the data coming from the target file. Get Fields button Click to return a list of fields from the target file based on the current settings (i.e. Delimiter, Enclosure, etc.). All fields identified will be added to the Fields Table. You can use the Metadata Injection supported fields with ETL Metadata Injection transform to pass metadata to your pipeline at runtime. The following Option and Value fields of the CSV File Input transform support metadata injection: Options: Filename, Delimiter, Enclosure, NIO Buffer Size, Lazy Conversion, Header Row Present?, Add Filename to Result, The Row Number Field Name, Running in Parallel?, and File Encoding Values: Name, Length, Decimal, Type, Precision, Group, Format, Currency, and Trim Type","title":" CSV File Input","component":"manual","version":"2.7.0","name":"csvinput","url":"/manual/latest/pipeline/transforms/csvinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"221":{"id":221,"text":"The Database Join transform allows you to run a query against a database using data obtained from previous transforms. Hop Engine Spark Flink Dataflow The parameters for this query are specified as follows: The data grid in the transform properties dialog. This allows you to select the data coming in from the source hop. As question marks (?) in the SQL query. When the transform runs, these will be replaced with data coming in from the fields defined from the data grid. The question marks will be replaced in the same order as defined in the data grid. For example, Database Join allows you to run queries looking up the oldest person who bought a specific product as shown below: the Database Join transform gives you more flexibility than the standard Database Lookup transform. Keep in mind that your query determines the performance of this transform. SELECT customernr FROM product_orders, customer WHERE orders.customernr = customer.customernr AND orders.productnr = ? ORDER BY customer.date_of_birth The grid is then defined as follows: When the transform runs, the (?) placeholder defined in the SQL query will be replaced with the incoming productnr field value from the source hop. To define and use multiple parameters, list the fields in order you want them to be replaced in the SQL statement. Option Description Transform name Name of the transform; This name has to be unique in a single pipeline Connection The database connection to use for the query. SQL SQL query to form the join; use question marks as parameter placeholders Number of rows to return Zero (0) returns all rows; any other number limits the number of rows returned. Outer join? Enable to always return a result, even if the query did not return a result Parameters table Specify the fields containing parameters. The parameter type is required.","title":" Database Join","component":"manual","version":"2.7.0","name":"databasejoin","url":"/manual/latest/pipeline/transforms/databasejoin.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4}]},"222":{"id":222,"text":"The Database lookup transform allows you to look up values in a database table. Lookup values are added as new fields onto the stream. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. This name has to be unique in a single pipeline. Connection Database connection to the lookup table. Lookup schema Database schema containing the lookup table. Lookup Table Name of the database table used for the lookup. Enable cache? Enables caching of database lookups. This means that once a key (or group of key) has been looked up, the looked up values are stored, and returned again the next time this key (or group of key) is being looked up (without incurring the cost of a database call). Important: If other processes are changing values in the table where you perform a lookup, do not cache values. In all other instances, caching values increases the performance substantially because database lookups are relatively slow. If you can’t use the cache, consider launching several copies of the simultaneously. A simultaneous launch keeps the database busy through different connections. See Launching several copies of a transform. Cache size in rows The size of the cache (number of rows), 0 means cache everything. Load all data from table Pre-loads the cache with all the data present in the lookup table. This may improve performance by avoiding database calls. However, if you have a large table, you risk running out of memory. IMPORTANT: In memory look-ups can lead to different results because of the differences in the way your database compares data. For example, if your database table allows case-insensitive comparisons, you may get different results with this option. The same goes for data with trailing spaces. Those are ignored in certain databases when using certain character data types. See more details on the below note about this option. Keys to look up table The keys and conditions to perform the database lookup. Tip: When using the LIKE operator on the key lookup it’s not automatically adding wildcards to the stream value. So by default the LIKE operator is behaving as an \"=\" (see your database for SQL specific topics on the LIKE operator). It is possible to add the wildcards to add a 'Replace in String' transform before the database lookup. In the replace transform select the lookup field then use Regex to look for (^.*) and replace with %$1%. This will add the wildcards to the field for the subsequent lookup task. Values to return table The fields from the lookup table to add to the output stream. \"New name\" allows you to use a different name if the database column name is inappropriate. \"Default\" is the value returned (instead of null) if the lookup fails. Notes: Enabling error handling on the Database Lookup transform will redirect all failed lookup rows to the error handling transform, instead of adding them to the main output steam with null/default values. Type is the type of the output field. When we use Trim type option, the current transform behavior is to trim all the spaces but leave any newline character eventually contained in the string extracted by the transform upon a successful lookup. Do not pass the row if the lookup fails Enable to avoid passing a row when lookup fails. Within the SQL syntax, enabling this would be an INNER JOIN, otherwise it would be an OUTER JOIN. Fail on multiple results? Enable to force the transform to fail if the lookup returns multiple results. Order by If the lookup query returns multiple results, the ORDER BY clause helps you to select the record to take. For example, ORDER BY would allow you to pick the customer with the highest sales volume in a specified state. Get Fields Click to return a list of available fields from the input stream(s) of the transform. Get lookup fields Click to return a list of available fields from the lookup table that can be added to the transform’s output stream. Note on the Load all data from table option: As an example: when storing a value of type \"CHAR(3)\", many databases will store \"ab\" using 3 characters: \"ab \" (notice the blank space). When you do a \"SELECT * FROM my_lookup_table WHERE key_column = 'ab'\", the database is smart and adds a blank space before applying the where clause (it looks for 'ab ' instead of 'ab'). The problem occurs when you use \"load all data from table\" to pre-load the cache: at startup, the cache is built using all the values present in the database, so we store 'ab ' in the cache. Later, looking up 'ab' fails, because the trailing space matters in java equality. Note that this problem does not occur when using the cache, if \"load all data from table\" is disabled. Indeed, the first lookup for 'ab' would find no entry in the cache, call the database (which is smart enough to handle the trailing whitespace problem), get the correct result, and store it in the java cache under the 'ab' key. Thus, the next lookup for 'ab' will find the appropriate result in the cache :)","title":" Database Lookup","component":"manual","version":"2.7.0","name":"databaselookup","url":"/manual/latest/pipeline/transforms/databaselookup.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"223":{"id":223,"text":"The Data Grid transform allows you to enter a static list of rows in a grid, similar to an in-pipeline spreadsheet. This is usually done for testing, reference or demo purposes. Place a Data grid onto the data orchestration grid. On the Meta tab, add the field names and type and format. Then on the Data tab, add the field values for each data row. Hop Engine Spark Flink Dataflow Meta tab specify the field metadata (output specification) of the data Data Tab contains the data. Everything is entered in String format so make sure you use the correct format masks in the metadata tab. This transform supports metadata injection. It is made up out of 2 parts the meta (field definitions) and the data. The meta requires multiple rows to define the fields. The data part contains 2 injection fields, the first is a concatenated string that contains all values the second is the delimiter used to split that specific row. Mixing delimiters is possible, when empty \",\" is used as string to split with. It is not yet possible to insert columns in between 2 existing one or in general re-order the fields in the metadata tab. If you plan to do this, make sure to copy the data section first to a spreadsheet (Select all rows and copy/paste the whole grid), change the data and copy it back into the data section.","title":" Data Grid","component":"manual","version":"2.7.0","name":"datagrid","url":"/manual/latest/pipeline/transforms/datagrid.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4},{"text":"Limitations","hash":"_limitations","id":5}]},"224":{"id":224,"text":"The Delay Row transform will wait the indicated timeout period before passing an input row to the next transform. Use this transform if you deliberately want to slow down your pipeline. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Note: This name has to be unique in a single pipeline. Timeout The timeout value in seconds, minutes or hours","title":" Delay row","component":"manual","version":"2.7.0","name":"delay","url":"/manual/latest/pipeline/transforms/delay.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"225":{"id":225,"text":"The Delete transform deletes rows of data from a database. This transform is similar to the update family of transforms in that it takes one or more key fields to determine the rows to delete. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. This name has to be unique in a single pipeline. Connection The database connection to which data is written Target schema The name of the Schema for the table to which data is written. This is important for data sources that allow for table names with periods in them. Target table Name of the table in which you want to do the insert or update. Commit size The number of rows to change (insert / update) before running a commit. The keys(s) to look up the value(s) Specify fields to delete the corresponding rows for","title":" Delete","component":"manual","version":"2.7.0","name":"delete","url":"/manual/latest/pipeline/transforms/delete.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"226":{"id":226,"text":"The Detect Empty Stream transform outputs one single empty row of data if the input stream is empty (ie when input stream does not contain any row). The output row will have the same field layout as the input row, but all field values will be empty (null). If the input stream is not empty it will not output anything. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. This name must be unique throughout the pipeline.","title":" Detect Empty Stream","component":"manual","version":"2.7.0","name":"detectemptystream","url":"/manual/latest/pipeline/transforms/detectemptystream.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"227":{"id":227,"text":"The Dimension Lookup/Update transform allows you to implement Ralph Kimball’s slowly changing dimension for both types: Type I (update) and Type II (insert) together with some additional functions. This transform can be used to populate a dimension table or to look up values in a slowly changing dimension without making any changes. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Update the dimension? Enable to update the dimension based on the information in the input stream; if not enabled, the dimension only performs lookups and adds the technical key field to the streams. Connection Name of the database connection on which the dimension table resides. Target schema This allows you to specify a schema name. Target table Name of the dimension table. Commit size Define the commit size, e.g. setting commit size to 10 generates a commit every 10 inserts or updates. Caching Enable the cache? Enable this option if you want to enable data caching in this transform; set a cache size of >=0 in previous versions or -1 to disable caching. Pre-load cache? You can enhance performance by reading the complete contents of a dimension table prior to performing lookups. Performance is increased by the elimination of the round trips to the database and by the sorted list lookup algorithm. Cache size in rows: The cache size in number of rows that will be held in memory to speed up lookups by reducing the number of round trips to the database. Get Fields button Fills in all the available fields on the input stream, except for the keys you specified. SQL button Generates the SQL to build the dimension and allows you to execute this SQL. Specify the names of the keys in the stream and in the dimension table. This will enable the transform to perform the lookup. Option Description Dimension field Key field used in the source system. For example: customer numbers, product id, etc. Stream field Stream field containing the value get from the source system key field. For each of the fields you must have in the dimension, you can specify whether you want the values to be updated (for all versions, this is a Type I operation) or you want to have the values inserted into the dimension as a new version. In the example we used in the screenshot the birth date is something that’s not variable in time, so if the birth date changes, it means that it was wrong in previous versions. It’s only logical then, that the previous values are corrected in all versions of the dimension entry. Option Description Dimension field Fields containing the actual information of a dimension.. Stream field to compare with Stream field containing the incoming value to assign to that table’s field. Type of dimension update Type of update applied (see details below in the section Update of this document). These tab contains the details related to the creation of the surrogate key of the dimension’s record. Option Description Technical key field The primary key of the dimension; also referred to as Surrogate Key. Use the new name option to rename the technical key after a lookup. For example, if you need to lookup different types of products like ORIGINAL_PRODUCT_TK, REPLACEMENT_PRODUCT_TK, …​ Creation of technical key Indicates how the technical key is generated, options that are not available for your connection type will be grayed out: Use table maximum + 1: A new technical key will be created from the maximum key in the table. Note that the new maximum is always cached, so that the maximum does not need to be calculated for each new row. Use sequence: Specify the sequence name if you want to use a database sequence on the table connection to generate the technical key (typical for Oracle e.g.). Use auto increment field: Use an auto increment field in the database table to generate the technical key (supported e.g. by DB2). These tabs defines the way the record’s version is generated Option Description Version field The name of the field in which to store the version (revision number). Stream Datefield If you have the date at which the dimension entry was last changed, you can specify the name of that field here. It allows the dimension entry to be accurately described for what the date range concerns. If you don’t have such a date, the system date will be taken. When the dimension entries are looked up (Update the dimension is not selected) the date field entered into the stream datefield is used to select the appropriate dimension version based on the date from and date to dates in the dimension record. Date range start field Specify the names of the dimension entries start range. Use an alternative start date? When enabled, you can choose an alternative to the \"Min. Year\"/01/01 00:00:00 date that is used. You can use any of the following: System date: Use the system date as a variable date/time Start date of pipeline: Use the system date, taken at start of the pipeline for the start date Empty (null) value Column value: Select a column from which to take the value. Table date range end The names of the dimension entries end range As a result of the lookup or update operation of this transform type, a field is added to the stream containing the technical key of the dimension. In case the field is not found, the value of the dimension entry for not found (0 or 1, based on the type of database) is returned. A number of optional fields (in the \"Fields\" tab) are automatically managed by the transform. You can specify the table field name in the \"Dimension Field\" column. These are the optional fields: Date of last insert or update (without stream field as source) : adds and manges a Date field Date of last insert (without stream field as source) : adds and manges a Date field Date of last update (without stream field as source) : adds and manges a Date field Last version (without stream field as source) : adds and manges a Boolean field. (converted into Char(1) or boolean database data type depending on your database connection settings and availability of such data type) This acts as a current valid dimension entry entry indicator for the last version: So when a type II attribute changes and a new version is created (to keep track of the history) the 'Last version' attribute in the previous version is set to 'False/N' and the new record with the latest version is set to 'True/Y'. As the name of the transform suggests, the functionality of the transform falls into 2 categories, Lookup and Update…​ In read-only mode (update option is disabled), the transform only performs lookups in a slowly changing dimension. The transform will perform a lookup in the dimension table on the specified database connection and in the specified schema. To do the lookup it uses not only the specified natural keys (with an \"equals\" condition) but also the specified \"Stream datefield\" (see below). The condition that is applied is: \"Start of table date range\" ⇐ \"Stream datefield\" AND \"End of table date range\" > \"Stream datefield\" When no \"Stream datefield\" is specified we use the current system date to find the correct dimension version record. When no row is found, the \"unknown\" key is returned. (The \"unknown\" key will be 0 or 1 depending on whether or not you selected an auto-increment field for the technical key field). Please note that we don’t make a difference between \"Unknown\", \"Not found\", \"Empty\", \"Illegal format\", etc. These nuances can be added manually however. Nothing prevents you from flushing out these types before the data hits this transform with a Filter, regular expression, etc. We suggest you manually add values -1, -2, -3, etc for these special dimension entry cases, just like you would add the specific details of the \"Unknown\" row prior to population of the dimension table. Do not use NULL values for your natural key(s). Null values can’t be compared and are not indexed by most databases. Even if we would support null values in keys (something that doesn’t make a lot of sense anyway), it would most likely cause severe lookup performance problems. Be aware of data conversion issues that occur if you have data types in your input streams that are different from the data types in your natural key(s). If you are have Strings in the transforms input and in the database you use an Integer for example, make sure you are capable of converting the String to number. See it as a best practice to do this before this transform to make sure it works as planned. Another typical example of problems is with floating point number comparisons. Stay away from those. We recommend you use sane data types like Integer or long integers. Stay away from Double, Decimal or catch-all data types like Oracle’s Number (without length or precision; it implicitly uses precision 38 causing us to use the slower BigNumber data type). In update mode (update option is enabled) the transform first performs a lookup of the dimension entry as described in the \"Lookup\" section above. The result of the lookup is different though. Not only the technical key is retrieved from the query, but also the dimension attribute fields. A field-by-field comparison then follows. The result can be one of the following situations: The record was not found, we insert a new record in the table. The record was found and any of the following is true: One or more attributes were different and had an \"Insert\" (Kimball Type II) setting: A new dimension record version is inserted. One or more attributes were different and had a \"Punch through\" (Kimbal Type I) setting: These attributes in all the dimension record versions are updated. One or more attributes were different and had an \"Update\" setting: These attributes in the last dimension record version are updated. All the attributes (fields) were identical: No updates or insertions are performed. Insertion of new rows are performed in the following transforms: The current row is updated with \"date_to\" updated with the \"Stream date field\" The new row is inserted where the changes in attributes are recorded according to rule in previous paragraph. \"date_from\" field is updated with the \"Stream date field\" and the \"date_to\" is updated with the Max date of the table range end date. The version number of the new row in incremented by 1. Stream date field\" cannot be before the earliest start date of the currently valid rows. select min(date_from) from dim_table where date_to = \"2199-12-31 23:59:59.999\" It is important to ensure that the incoming rows are sorted by the \"Stream date field\" All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Dimension lookup/update","component":"manual","version":"2.7.0","name":"dimensionlookup","url":"/manual/latest/pipeline/transforms/dimensionlookup.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Common fields","hash":"_common_fields","id":4},{"text":"Keys tab","hash":"_keys_tab","id":5},{"text":"Fields tab","hash":"_fields_tab","id":6},{"text":"Technical key tab","hash":"_technical_key_tab","id":7},{"text":"Versioning tab","hash":"_versioning_tab","id":8},{"text":"General considerations","hash":"_general_considerations","id":9},{"text":"Functionality","hash":"_functionality","id":10},{"text":"Lookup","hash":"_lookup","id":11},{"text":"Update","hash":"_update","id":12},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":13}]},"228":{"id":228,"text":"Apache Doris is a modern MPP analytical database product. It can provide sub-second queries and efficient real-time data analysis. With it’s distributed architecture, up to 10PB level datasets will be well supported and easy to operate. Apache Doris can meet various data analysis demands, including history data reports, real-time data analysis, interactive data analysis, and exploratory data analysis. Make your data analysis easier! The Doris Bulk Loader allows you to insert data into Apache Doris at high speed and volume, making it a faster way to load data than using the traditional database insert statements. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; This name has to be unique in a single pipeline FE Host Hostname of the FE Host FE HTTP Port Port used to connect to the FE Host Database Name The database you want to connect to Table Name Table name to bulk load records to Login User User used to connect to the database Login Password Password to connect to the database Data Field The Data has to be combined to a single field, this can be a csv style field or json data Format Indicator to tell the transform it is expecting CSV style or JSON style data Line Delimiter The Delimiter used to indicate line endings Column separator When using CSV style data this will indicate what character to split fields on Buffer Size Size of the buffer in bytes (0 = unlimited) Buffer Count Buffer Size * Buffer Count is the max capacity to buffer data before doing real stream load (0 = unlimited) Option Description Header/value Use this to add extra option to the bulk load command","title":" Doris Bulk Loader","component":"manual","version":"2.7.0","name":"dorisbulkloader","url":"/manual/latest/pipeline/transforms/dorisbulkloader.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Headers","hash":"_headers","id":5}]},"229":{"id":229,"text":"The Dummy transform passes data without making any modifications. It functions as a placeholder for testing purposes or a way to combine multiple streams with the same field layout. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform.","title":" Dummy (do nothing)","component":"manual","version":"2.7.0","name":"dummy","url":"/manual/latest/pipeline/transforms/dummy.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"230":{"id":230,"text":"The Dynamic SQL Row transform allows you to execute a SQL statement that is defined in a database field. The lookup values returned by the transform are added as new fields onto the stream. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; This name has to be unique in a single pipeline Connection Select a database connection for the lookup SQL field name Specify the field that contains the SQL to execute Number of rows to return Specify the number of records to return. 0 means, return all rows Outer Join - false: don’t return rows where nothing is found - true: at least return one source row, the rest is NULL Replace variables In case you want to use variables in the SQL, e.g. ${table_name}, this option needs to be checked. Query only on parameters change If your SQL statements do not change a lot, check this option to reduce the number of physical database queries. Template SQL In Hop meta and data are separate so you have to specify the meta part in template SQL (field name and type). I mean any statement that returns the same row structure.","title":" Dynamic SQL row","component":"manual","version":"2.7.0","name":"dynamicsqlrow","url":"/manual/latest/pipeline/transforms/dynamicsqlrow.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"231":{"id":231,"text":"The Edi To XML transform converts EDI message text (conforming to the ISO 9735 standard, read more) to generic XML. The XML text is more accessible and allows for selective data extraction using XPath and the Get Data From XML transform. Hop Engine Spark Flink Dataflow The transform configuration requires the field name containing the EDI text, and an output field name for the XML text. If the output field name is left empty, the EDI text is going to be replaced by the XML text. The structure of the XML output follows the following pattern: ... ... ... The conversion rules are: the root of the document is the \"edifact\" tag each segment in the edifact message is converted to a tag, using the segment name as the tag name. each field within a segment is represented by an \"element\" tag each value within a field is represented by an \"value\" tag","title":" Edi to XML","component":"manual","version":"2.7.0","name":"edi2xml","url":"/manual/latest/pipeline/transforms/edi2xml.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"232":{"id":232,"text":"The Email Messages Input transform allows you to retrieve messages and their attachments from a mail server using the POP3, IMAP or MBOX standard protocols. Hop Engine Spark Flink Dataflow On this tab you will find the general mail server connection settings: Option Description Transform name Name of the transform. Source host The mail server host Use SSL? Check this option if your server needs an SSL connection Use XOAUTH2 If checked XOAuth2 will be used to authenticate with the server. Username The username of the mailbox to connect to Password The password to use Use proxy? Check this option if you want to connect through a proxy. Proxy username The username to connect to the proxy with Fetch in batches? Enable this option if you want to retrieve larger volumes of mails in batches Ignore errors reading fields Sometimes a server doesn’t support the retrieval of a particular piece of information. Enable this option to ignore these errors. Protocol Specify either standard protocol POP3, IMAP or MBOX to retrieve the mails Test Connection button This will simply try to connect to the mail server with the specified settings. This button does not retrieve mails. POP3 settings Option Description Retrieve Specify either \"All emails\" or \"Retrieve first…​ emails\" Retrieve the …​ first emails Allows you to specify how many mails you want to retrieve at most in one go IMAP settings Option Description Get folder from field Enable this option to allow the IMAP folder name to be present in an input field of this transform. Folder field The folder field in case the option above is enabled. IMAP folder The IMAP folder to retrieve mails from Test folder…​ button Use this to test if the folder is valid Open button use this to select the IMAP folder Include subfolders Check this option to also retrieve mails from sub-folders Retrieve Specify which mails to retrieve: Get all, new, old, read, unread, flagged, not flagged, draft, not draft, answered or not answered messages. Retrieve the first …​ emails Specify how many emails to retrieve at most Batch settings Option Description Batch size Number of emails to retrieve at once in one batch Start at message number The first message number to start retrieving at End at message number The last message number to end retrieving with These are the filters you can set on the header of the mail message. Mail for which the header matches your filter will be retrieved, the rest is ignored. Option Description Sender (FROM) Only retrieve","title":" Email Messages Input","component":"manual","version":"2.7.0","name":"emailinput","url":"/manual/latest/pipeline/transforms/emailinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Settings","hash":"_settings","id":5},{"text":"Filters","hash":"_filters","id":6}]},"233":{"id":233,"text":"The Enhanced JSON Output transform allows you to generate JSON blocks based on input transform values. Output JSON will be available as a Javascript array or Javascript object depending on transform settings. Because this transform loops over the fields defined as Group Key and serializes JSON output accordingly, it is extremely important to sort the input data by the group key. Failing to do so may return incorrect or unexpected data. Hop Engine Spark Flink Dataflow General tab allows to specify type of transform operation, output json structure, transform output file. This file will be used to dump all generated json. Option Description Transform name Name of the transform; this name has to be unique in a single pipeline. Operation Specify transform operation type. Currently available 3 types of operation: Output value - only pass output json as a transform output field, do not dump to output file Write to file - only write to fie, do not pass to output field Output value and write to file - dump to file and pass generated json as a transform output file Json block name This value will be used as a name for json block. Can be empty string that will affect output json structure, see detailed description below. Output value This value will be used as a transform output field. Will contain generated json output block depending on transform settings. Force Arrays In JSON If checked, JSON output will be forced as a single item whose content is an array. Force single grouped Item Grouped values are stored in an array inside the JSON instead of creating an array of JSONs Pritty Print JSON If checked, JSON output will be pritty printed. Option Description Filename full path to output file Append If not checked - new file will be created every time transform is running. If file with specified name exists already, it will be replaced by a new one. If checked - new json output will be appended to the end of existing file. Or if file does not exist, it will be created as in previous case. Split JSON after n rows If this number N is larger than zero, split the resulting JSON file into multiple parts of N rows. Create Parent folder Usually file name contains some path folder as a parent folder. If parent folder does not exist and this option is checked, parent folder will be created as a new folder. Otherwise - file not be found and transform will fail. Do not open create at start If not checked - file (and in some cases parent folder) will be created/opened to write during pipeline initialization. If checked - file and parent folder will be created only after transform gets any first input data. Extension Output file extension. Default value is 'js' Encoding Output file encoding Include date in filename? If checked - output file name will contain File name value + current date. This may help to generate unique output files. Include time in filename If checked - output file name will contain file creation time. Same as for 'Include date in filename' option Show filename(s) button Can be useful to test full output file path Add file to result filenames? If checked - created output file path will be accessible form transform result This tab is used to map input transform fields key used to properly generate output json values Option Description Fieldname Input transform field name that will ccontribute to define the input transform fields key. Use 'Get Fields' button to discover available input fields Element name Json element name. For example \"A\":\"B\" - A is a element name, B is actual input value mapped for this Element name. This tab is used to map input transform fields to output json values Option Description Fieldname Input transform field name. Use 'Get Fields' button to discover available input fields Element name Json element name as a key. For example \"A\":\"B\" - A is a element name, B is actual input value mapped for this Element name. JSON Fragment If the value is set to Y the value contained in the filed is a JSON chunk and will be treated accordingly Remove Element name If the value is set to Y it will ignore the Element name and insert the JSON Fragment without wrapping it. Only works with JSON Fragment = Y Remove if Blank If the value is set to Y and value in incoming field is null, the related attribute will be omitted from JSON output Look at the sample provided json-output-generate-nested-structure.hpl for a better understanding about how the transform works","title":" Enhanced JSON Output","component":"manual","version":"2.7.0","name":"enhancedjsonoutput","url":"/manual/latest/pipeline/transforms/enhancedjsonoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Output File","hash":"_output_file","id":5},{"text":"Group Key Tab","hash":"_group_key_tab","id":6},{"text":"Fields Tab","hash":"_fields_tab","id":7},{"text":"Notes","hash":"_notes","id":8}]},"234":{"id":234,"text":"The Microsoft Excel Input transform reads data from Microsoft Excel spreadsheet. The default spreadsheet type (engine) is set to Excel XLSX, XLS. When you read other file types like OpenOffice ODS and using special functions like protected worksheets, you need to change the Spread sheet type (engine) in the Content tab accordingly. Hop Engine Spark Flink Dataflow Option Description transform Name Name of the transform; the name has to be unique in a single transform. Spread sheet type (engine) This field allows you to specify the spreadsheet type. Currently the following are supported: Excel XLSX, XLS: This is the default, if you select this spread sheet type you can read all known Excel file types. Functionality provided by the Apache POI project. Excel XLSX (Streaming): This spread sheet type allows to read in large Excel files. Open Office ODS: By selecting this type you can read OpenOffice spreadsheet using the ODFDOM engine. File or directory Specifies the location and/or name of the input text file. Note: Click Add to add the file/directory/wildcard combination to the list of selected files (grid) below. Regular expression Specify the regular expression you want to use to select the files in the directory specified in the previous option. For example, you want to process all files that have a .txt extension. (For further details see the Text File Input transform and the section \"Selecting file using Regular Expressions\") Exclude Regular Expression Excludes all files (in a given location) that meet the criteria specified by this regular expression. Selected Files Contains a list of selected files (or wildcard selections) and a property specifying if file is required or not. If a file is required and it is not found, an error is generated;otherwise, the file name is skipped. Accept filenames from previous transforms Allows you to read in file names from a previous transform in the transform. You must also specify which transform you are importing from, and the input field in that transform from which you will retrieve the filename data Show filenames(s)…​ Displays a list of all files that will be loaded based on the current selected file definitions Preview rows Click Preview to examine the contents of the specified Excel file In this tab you can specify the names of the sheets in the Excel workbook to read. For each of the sheet names you can specify the row and column to start at. Option Description Header Enable if the sheets specified contain a header row to skip No empty rows Enable if you don’t want empty rows in the output of this transform Stop on empty row Makes the transform stop reading the current sheet of a file when a empty line is encountered Limit Limits the number of rows to this number (zero (0) means all rows). Encoding Specifies the text file encoding to use. Leave blank to use the default encoding on your system. To use Unicode, specify UTF-8 or UTF-16. On first use, Spoon searches your system for available encodings.) Option Description Strict types? If checked, Hop will report data type errors in the input. Ignore errors? Enable if you want to ignore errors during parsing Skip error lines? If checked, Hop will skip lines that contain errors. These lines can be dumped to a separate file by specifying a path in the Failing line numbers files directory field below. If this is not checked, lines with errors will appear as NULL values in the output. Warnings file directory When warnings are generated, they are placed in this directory. The name of that file is /filename.. Error files directory When errors occur, they are placed in this directory. The name of that file is /filename.. Failing line numbers files directory When a parsing error occurs on a line, the line number is placed in this directory. The name of that file is /filename.. The fields tab is for specifying the fields that must be read from the Excel files. Use Get fields from header row to fill in the available fields if the sheets have a header row automatically. The Type column performs type conversions for a given field. For example, if you want to read a date and you have a String value in the Excel file, specify the conversion mask. Note: In the case of Number to Date conversion (for example, 20051028-→ October 28th, 2005) specify the conversion mask yyyyMMdd because there will be an implicit Number to String conversion taking place before doing the String to Date conversion. Option Description Name The name of the field. Type The field’s data type; String, Date or Number. Length The length option depends on the field type. Number: total number of significant figures in a number; String: total length of a string; Date: determines how much of the date string is printed or recorded. Precision The precision option depends on the field type, but only Number is supported; it returns the number of floating point digits. Trim type Truncates the field (left, right, both) before processing. Useful for fields that have no static length. Repeat If set to Y, will repeat this value if the field in the next row is empty. Format The format mask (number type). See Text File Input transform and the section \"Number Formats\" for a complete description of format symbols. Currency Symbol used to represent currencies. Decimal A decimal point; this is either a dot or a comma. Grouping A method of separating units of thousands in numbers of four digits or larger. This is either a dot or a comma. This tab retrieves custom metadata fields to add to the transform’s output. The purpose of each field is defined in its name, but you can use these fields for whatever you want. Each item defines an output field that will contain the following information. Some of these are missing. Option Description Full filename field The full file name plus the extension. Sheetname field The worksheet name you’re using. Sheet row nr field The current sheet row number. Row nr written field Number of rows written Short filename field The field name that contains the filename without path information but with an extension. Extension field The field name that contains the extension of the filename. Path field The field name that contains the path in operating system format. Size field The field name that contains the size of the file, in bytes. Is hidden field The field name that contains if the file is hidden or not (boolean). Uri field The field name that contains the URI. Root uri field The field name that contains only the root part of the URI.","title":" Microsoft Excel input","component":"manual","version":"2.7.0","name":"excelinput","url":"/manual/latest/pipeline/transforms/excelinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Files Tab","hash":"_files_tab","id":4},{"text":"Sheets","hash":"_sheets","id":5},{"text":"Content","hash":"_content","id":6},{"text":"Error handling","hash":"_error_handling","id":7},{"text":"Fields tab","hash":"_fields_tab","id":8},{"text":"Additional output fields tab","hash":"_additional_output_fields_tab","id":9}]},"235":{"id":235,"text":"The Microsoft Excel Writer transform writes incoming rows from Hop out to an MS Excel file. It supports both the .xls and .xlsx file formats. The .xls files use a binary format which is better suited for simple content, while the .xlsx files use the Open XML format which works well with templates since it can better preserve charts and miscellaneous objects. Hop Engine Spark Flink Dataflow File section Option Description Stream XLSX data Check this option when writing large XLSX files. It uses internally a streaming API and is able to write large files without any memory restrictions (of course not exceeding Excel’s limit of 1,048,575 rows and 16,384 columns). Create parent folder Enable to create the parent folder If output file exists Check this option when writing large XLSX files. It uses internally a streaming API and is able to write large files without any memory restrictions (of course not exceeding Excel’s limit of 1,048,575 rows and 16,384 columns). Add filename(s) to result Check to have the filename added to the result filenames Wait for first row before creating file Checking this option makes the transform create the file only after it has seen a row. If this is disabled the output file is always created, regardless of whether rows are actually written to the file. Sheet section Option Description Sheet Name The sheet name the transform will write rows to. Make this the active sheet If checked the Excel file will by default open on the above sheet when opened in MS Excel. If sheet exists in output file The output file already has this sheet (for example when using a template, or writing to existing files), you can choose to write to the existing sheet, or replace it. Protect Sheet The XLS file format allows to protect an entire sheet from changes. If checked you need to provide a password. Excel will indicate that the sheet was protected by the user you provide here. Template section When creating new files (when existing files are replaced, or completely fresh files are created) you may choose to create a copy of an existing template file instead. Please make sure that the template file is of the same type as the output file (both must be xls or xlsx respectively). When creating new sheets, the transform may copy a sheet from the current document (the template or an otherwise existing file the transform is writing to). A new sheet is created if the target sheet is not present, or the existing one shall be replaced as per configuration above. Content options section Option Description Start writing at cell This is the cell to start writing to in Excel notation (letter column, number row) When writing rows The transform may overwrite existing cells (fast), or shift existing cells down (append new rows at the top of sheet) Write Header If checked the first line written will contain the field names Write Footer If checked the last line written will contains the field names Auto Size Columns If checked the transform tries to automatically size the columns to fit their content. Since this is not a feature the xls(x) file formats support directly, results may vary. Force formula recalculation If checked, the transform tries to make sure all formula fields in the output file are updated. The xls file format supports a \"dirty\" flag that the transform sets. The formulas are recalculated as soon as the file is opened in MS Excel. For the xlsx file format, the transform must try to recalculate the formula fields itself. Since the underlying POI library does not support the full set of Excel formulas yet, this may give errors. The transform will throw errors if it cannot recalculate the formulas. Leave styles of existing cells unchanged If checked, the transform will not try to set the style of existing cells it is writing to. This is useful when writing to pre-styled template sheets. When writing to existing sheet section Option Description Start writing at end of sheet The transform will try to find the last line of the sheet, and start writing from there. Offset by …​ rows Any non-0 number will cause the transform to move this amount of rows down (positive numbers) or up (negative numbers) before writing rows. Negative numbers may be useful if you need to append to a sheet, but still preserve a pre-styled footer. Begin by writing …​ empty lines The transform will try to find the last line of the sheet, and start writing from there. Omit Header Any non-0 number will cause the transform to move this amount of rows down (positive numbers) or up (negative numbers) before writing rows. Negative numbers may be useful if you need to append to a sheet, but still preserve a pre-styled footer. Fields section Option Description Name The field to write Type The type of data Format The Excel format to use in the sheet. Please consult the Excel manual for valid formats. There are some online references as well. Style from cell A cell (i.e. A1, B3 etc.) to copy the styling from for this column (usually some pre-styled cell in a template) Field Title If set, this is used for the Header/Footer instead of the Hop field name Header/Footer style from cell A cell to copy the styling from for headers/footers (usually some pre-styled cell in a template) Field Contains Formula Set to Yes, if the field contains an Excel formula (no leading '=') Hyperlink A field, that contains the target to link to. The supported targets are Link to other cells, http, ftp, email, and local documents Cell Comment / Cell Author The xlsx format allows to put comments on cells. If you’d like to generate comments, you may specify fields holding the comment and author for a given column. You can use the Metadata Injection supported fields with ETL Metadata Injection transform to pass metadata to your pipeline at runtime. The following Value fields of the Microsoft Excel Writer transform support metadata injection: Name, Type, Format, Style from Cell, Field Title, Header/Footer Style from Cell, Field Contains Formula, Hyperlink, Cell Comment (XLSX), and Cell Comment Author (XLSX).","title":" Excel writer","component":"manual","version":"2.7.0","name":"excelwriter","url":"/manual/latest/pipeline/transforms/excelwriter.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File & sheet tab","hash":"_file_sheet_tab","id":4},{"text":"Content tab","hash":"_content_tab","id":5},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":6}]},"236":{"id":236,"text":"The Execution Information transform allows you to read (or delete) information from an Execution Information Location. Depending on which operation you select, different input options will be enabled. The output of the transform will be different as well. This means that this transform always needs input-rows in order to produce output. Example to delete 200 Execution Id’s: First use Generate rows to create your fields and values to use (children: Boolean = true) and (limit: Integer = 200). Then use a first transform to get the ids (Operation: Get execution IDs), and a second connected transform to delete them (Operation: Delete execution). Optionally you can also delete by other fields such as date and ID. It can take a while to query the Execution Information, so keep an eye on the Duration column. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline Execution Information Location Select the location that you want to work with. Operation type Select the operation you want to perform. Execution ID field The input field that will contain the execution ID Execution parent ID field The input field that will contain the execution parent ID Execution name field The input field that will contain the execution name to look for Execution type field The input field that will contain the execution type to look for Include children field The input field that will contain the boolean which indicates to include children in the search Limit field The input field that will contain the limit with which to search","title":" Execution Information","component":"manual","version":"2.7.0","name":"execinfo","url":"/manual/latest/pipeline/transforms/execinfo.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"237":{"id":237,"text":"The Execute A Process transform executes a shell script (on the host that runs the pipeline). The transform is similar to the Shell workflow action, but can be used in a pipeline to execute for every row. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline Process field The field name in the data stream that defines the process to start (shell script / batch file to start). Arguments can also be used. Fail if not success Checking this option means if the exit status is different than zero the transform fails. You can use error handling to get these rows. Output line delimiter Without defining a line delimiter, all returned lines are collapsed into a single string with no line delimiters. You can set to any line delimiter and special characters can be set with the format $[value], e.g. $[0D] for CR or $[0D,0A] for CR/LF. Result fieldname Specify here the name of the result fieldname (STRING) added to the output stream of the pipeline. This field is populated by the output stream (stdout) of the process. Error fieldname Specify here the name of the error fieldname (STRING) added to the output stream of the pipeline. This field is filled by the error stream (stderr) of the process. Exit value Specify here the name of the exit fieldname (INTEGER) added to the output stream of the pipeline. This field is filled by the exit output of the process.","title":" Execute a process","component":"manual","version":"2.7.0","name":"execprocess","url":"/manual/latest/pipeline/transforms/execprocess.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"238":{"id":238,"text":"The Execute SQL Script transform runs a SQL script either once, during the initialization phase of the pipeline, or once for every input-row that the transform receives. When used for every input row, parameters can be passed to the SQL scripts specified in the transform. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; This name has to be unique in a single pipeline Connection Select a database connection to use SQL script to execute Specify the SQL to execute. Separate statements by ; and use question marks as place holders for parameter. Execute for each row? Select this option to execute the SQL for each incoming row. In this case paramters can be used. When this option is unchecked, the SQL statement is executed at the transform initialization phase. Execute as a single statement This option does not split the statements by ; and will send the whole SQL to the database. Variable substitution In case you want to use variables in the SQL, e.g. ${table_name}, this option needs to be checked. Bind parameters? Check this option to bind parameters using prepared statements, otherwise this transform will perform a literal string replacement of the parameters. Quote Strings? This option adds quotes around the string according to the database dialect and also escapes special characters like CR, LF and the quote character itself. Parameters The list of used parameters that will replace the question marks in the query in the given order. So the first question mark will be replaced by the first parameter, the second question mark by the second parameter etc. Field to contain insert stats Optional: If you want to get an additional field in our stream with the number or records that where inserted, please define the field name here. Field to contain update stats Same as insert stats, but for updated rows. Field to contain delete stats Same as insert stats, but for deleted rows. Field to contain read stats Same as insert stats, but for read rows.","title":" Execute SQL script","component":"manual","version":"2.7.0","name":"execsql","url":"/manual/latest/pipeline/transforms/execsql.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"239":{"id":239,"text":"The Execute Row SQL Script transform executes an SQL script for every input row the transform receives. The SQL to execute can be passed as pipeline fields or read from a file. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; This name has to be unique in a single pipeline Connection Select a database connection to use Commit Number of rows to send before doing a database commit SQL field name The field that either contains the SQL to execute or optionally specifies the path to a file that contains SQL to execute Read SQL from file If checked, then the SQL field name option specifies a file that contains SQL to execute, otherwise the SQL field name option specifies the actual SQL to execute. (Available since 5.0) Field to contain insert stats Optional: If you want to get an additional field in our stream with the number or records that where inserted, please define the field name here. Field to contain update stats Same as insert stats, but for updated rows. Field to contain delete stats Same as insert stats, but for deleted rows. Field to contain read stats Same as insert stats, but for read rows. Because of the scripting/dynamic nature of the transform, it does not use prepared statements and thus is not intended to work fast or optimal. For good performance turn to dedicated transforms like Table Output (insert into), Table Input (Select), Update, Delete, etc.","title":" Execute row SQL script","component":"manual","version":"2.7.0","name":"execsqlrow","url":"/manual/latest/pipeline/transforms/execsqlrow.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Notes","hash":"_notes","id":4}]},"240":{"id":240,"text":"The Execute Unit Tests transform fetches and executes the available unit tests for the current project. Hop Engine Spark Flink Dataflow Option Description Transform name name for this transform Test name input field name of a field to get the unit test name from to determine which transforms to execute. This option is only available when the transform receives input. Type of tests to run Development or Unit Test Pipeline output field name the pipeline that is tested Unit test output field name the unit test that is executed Data set output field name the (golden) data set used for this test transform output field name the transform that is used in this test Error output field name error status (Y or N) Comment output field name the comment or error message returned by the test","title":" Execute Unit Tests","component":"manual","version":"2.7.0","name":"exectests","url":"/manual/latest/pipeline/transforms/exectests.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"241":{"id":241,"text":"The Fake Data tranform allows you to generate fake data using the Java Faker library (documentation). It can be used to generate pretty data for development, testing or showcasing a project. For instance, we could generate some random Pokémon data. Hop Engine Spark Flink Dataflow name location Krabby Snowpoint City Mankey Sootopolis City Grimer Five Island Drowzee Five Island Onix Dendemille Town Option Description Transform name Name of the transform. Locale A locale can be used to make the generated data more specific to a single location. Output field name The name of the generated field. Type of fake data The data category. Topic to generate The topic within the data category to generate. Type Topics Address streetName streetAddressNumber streetAddress …​ Ancient god primordial titan hero Animal name App name version author Aqua Teen Hunger Force character Artist name Avatar image Back To The Future character date quote Aviation aircraft airport METAR Basketball teams coaches positions players Beer name style hop …​ Bojack Horseman characters quotes tongueTwisters Book author title publisher genre Bool bool Business creditCardNumber creditCardType creditCardExpiry ChuckNorris fact Cat name breed registry Code isbnGs1 isbnGroup isbnRegistrant …​ Coin flip Color name hex Commerce color department productName …​ Company name suffix industry …​ Crypto md5 sha1 sha256 sha512 DateAndTime future between past birthday Demographic race educationalAttainment denonym sex maritalStatus Disease internalDisease neurology surgery …​ Dog name breed sound …​ DragonBall character Dune character title planet …​ Educator university course secondarySchool campus Esports player team event …​ File extension mimeType fileName Finance creditCard bic iban calculateIbanChecksum …​ Food ingredient spice dish …​ Friends character location quote FunnyName name GameOfThrones character house city …​ Hacker abbreviation adjective noun …​ HarryPotter character location quote …​ Hipster word HitchhikersGuideToTheGalaxy character location marvinQuote …​ Hobbit character thorinsConpany quote location HowIMetYourMother character catchPhrase highFive quote IdNumber valid invalid ssnValid …​ Internet emailAddress safeEmailAddress domainName …​ Job field seniority position keySkills title Kaamelott character quote LeagueOfLegends champion location quote …​ Lebowski actor character quote LordOfTheRings character location Lorem character characters word words …​ Matz quote Music instrument key chord genre Name name nameWithMiddle fullName …​ Nation nationality language capitalCity flag Number randomDigit randomDigitNotZero numberBetween …​ Options option nextElement Overwatch hero location quote PhoneNumber cellPhone phoneNumber …​ Pokemon name location Princess Bride character quote Relationship Terms direct extended inLaw …​ RickAndMorty character location quote Robin quote RockBand name Shakespeare hamletQuote asYouLikeItQuote kingRichardIIIQuote …​ SlackEmoji people nature foodAndDrink …​ Space planet moon galaxy …​ StarCraft unit building character planet StarTrek character location specie …​ Stock nsdqSymbol nyseSymbol Superhero name prefix suffix …​ Team name creature state sport TwinPeaks character location quote University name prefix suffix Weather description temperatureCelsius temperatureFahrenheit temperature Witcher character witcher school …​ Yoda quote Zelda game character bg ca ca-CAT da-DK de de-AT de-CH en en-US nl …​","title":" Fake data","component":"manual","version":"2.7.0","name":"fake","url":"/manual/latest/pipeline/transforms/fake.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Types of categories","hash":"_types_of_categories","id":4},{"text":"Locales","hash":"_locales","id":5}]},"242":{"id":242,"text":"The File Exists transforms verifies the existence of a file. The filenames to check are read from pipeline fields. The transform outputs a boolean flag field, indicating whether a file exists or doesn’t. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; This name has to be unique in a single pipeline Filename field The input field that will contain the filename at runtime Result fieldname The name of the field that will contain the boolean flag. Add filename to result Enable this option if you want to add the filename to the list of filenames that can be used in the next workflow action. Include file type Include the file type in a field. File type field The name of the field that will contain the file type as a String: \"file\", \"folder\", \"imaginary\"","title":" File exists","component":"manual","version":"2.7.0","name":"fileexists","url":"/manual/latest/pipeline/transforms/fileexists.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"243":{"id":243,"text":"The File Metadata transform scans a file to determine its metadata structure or layout. Use this transforms in situations where you need to read a structured text file (e.g. CSV, TSV) when you don’t know the exact layout in advance. The information provided in this file can be used to actually read the file later, e.g. through metadata injection. The layout detected depends on the number of rows scanned. For example, if the first 100 rows of a file are scanned and the first field is detected as an integer, there is a possibility this field contains alphanumerical characters in later rows. Using 0 rows for 'limit scanned rows' is a way to make sure the entire file is scanned and the layout is detected correctly, even though this may be time consuming or even impossible for large files. Hop Engine Spark Flink Dataflow Option Description Transform name The name for this transform Filename The filename to scan for metadata Filename in a field? Enable to specify the file name(s) in a field in the input stream Filename field When the previous option is enabled, you can specify the field that will contain the filename(s) at runtime. Limit scanned rows The number of rows to limit the scan to (default 10,000). Use 0 rows to scan the entire file. Fallback charset Charset to use while scanning the file Delimiter candidates List of delimiters to try while detecting the file layout. Tab, semicolon, comma are provided by default. Enclosure candidates List of delimiters to try while detecting the file layout. Double and single quote are provided by default. The fields returned by this transform are charset delimiter field_count skip_header_lines skip_footer_lines header_line_present name type length precision mask decimal_symbol grouping_symbol","title":" File Metadata","component":"manual","version":"2.7.0","name":"filemetadata","url":"/manual/latest/pipeline/transforms/filemetadata.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Output Fields","hash":"_output_fields","id":4}]},"244":{"id":244,"text":"The Files From Result transform reads filenames and additional metadata that were added through the 'add filename to result' in other transforms. Every time a file gets processed, used or created in a pipeline or a workflow, the details of the file, the workflow action, the transform, etc. is captured and added to an internal result set when the option 'Add file names to result' is set, e.g. in a Text File Output transform. Hop Engine Spark Flink Dataflow Option Description Transform name The unique transform name within the pipeline Field name Type Example type String Normal, Log, Error, Error-line, etc. filename String somefile.txt path String C:\\Foo\\Bar\\somefile.txt parentorigin String Process files pipeline origin String Text File Input comment String Read by text file input timestamp Date 2006-06-23 12:34:56","title":" Files from result","component":"manual","version":"2.7.0","name":"filesfromresult","url":"/manual/latest/pipeline/transforms/filesfromresult.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Output fields","hash":"_output_fields","id":4}]},"245":{"id":245,"text":"The Files To Result transform allows you to set filenames in the internal result files of a pipeline. Subsequent workflow actions can then use this information as it routes the list of files to the result files stream e.g. by using the Get files from result transform or some workflow actions that can process on the list of result files. For example, the Mail workflow action can use this list of files to attach to a mail, so perhaps you don’t want all files sent, but only a certain selection. For this, you can create a pipeline that sets exactly those files you want to attach. the Files To Result is available for historical reasons. Check the Best Practices for better ways to build loops in your Hop pipelines. Hop Engine Spark Flink Dataflow Option Description Transform name The name of this transform as it appears in the pipeline workspace. Filename field Field that contains the filenames of the files to copy. Type of file to Select the type of file to set in results.","title":" Files to result","component":"manual","version":"2.7.0","name":"filestoresult","url":"/manual/latest/pipeline/transforms/filestoresult.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"246":{"id":246,"text":"The Filter Rows transform allows you to filter rows based on conditions and comparisons. It affects workflow if connecting the True or False outcome/hop to another transform. There are 3 path available as outputs (True/False/Main output). The main output follows the True path only. Hop Engine Spark Flink Dataflow Once this transform is connected to a previous transform (one or more and receiving input), you can click on the \"\", \"=\" and \"\" areas to construct a condition. Downstream transforms can be connected to the True or False hop. To enter an IN LIST operator, use a string value separated by semicolons. Lists also works on numeric values like integers. In this case, the list of values must be entered with a string data type, e.g.: 2;3;7;8. Option Description Transform name Optionally, you can change the name of this transform to fit your needs. Send 'true' data to transform The rows for which the condition specified is true are sent to this transform Send 'false' data to transform The rows for which the condition specified are false are sent to this transform The Condition Add Condition Click to add conditions. Add condition converts the original condition into a sub-level condition. * Click a sub-condition to edit it by going down one level in the condition tree. * Right-click a condition to edit, delete, move, or add a sub-condition. The filter rows transform detects only fields in the input stream. If you want to filter rows based on a variable value, you can modify the previous transform. For example, a table input transform can include the variable in the SQL as another field such as SELECT field1, field2, ${myvar} AS field3 FROM table1 , then in the filter row condition you can say field1 = field3. Alternatively, you can use a ‘Get Variables’ transform to set parameters in fields. You can use a REGEX expression in the \"filter row\" transform. A query: SELECT field1, field2, ${myvar} AS field3 FROM table WHERE field1=xxxx Then in the filter row condition, you can have: field1 = field3 FYI - instead of adding a field to the Table Input shown above, you can also use a \"Get Variables\" transform to set fields. You can use a REGEX expression in the \"filter row\" transform. Remember that all transforms are executed in parallel, so both true and false paths will run in some cases. In some cases it will be better to use a where filter in a SQL query than use a Filter rows transform. If you need to return input rows for either case (true/false), you can use various SQL query methods that will always return results using IF EXISTS or IS NULL for example. To filter special characters like explicit EOF (e.g. from old cobol files) Use a REGEX expression in the \"filter row\" transform with the syntax: \"\\x{1A}\" where \\x mean HEX representation and 1A into parenthesis is the EOF char to match in HEX. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime. If you cannot select the field you would like because it does not exist yet because of metadata injection, see this doc: https://hop.apache.org//manual/latest/pipeline/transforms/filterrows.html#_mdi_example and this example in the samples project: metadata-injection/filter-rows-mdi-parent.hpl The Filter Rows transform is a special MDI scenario, since it has a nested structure of filter conditions. The condition is given in XML format. The condition XML has the same format as we store the pipeline metadata in a .HPL file in XML format. We do not have a DTD (Document Type Definition) for the .HPL XML format, nor the condition. It is easy to get to an XML condition: Create a sample Filter transform with the different conditions you need. This sample transform gives you all the information, such as the values for the functions you use. Select the transform, copy it to the clipboard, and then paste it into a text editor. Alternatively, you can store the .HPL, and then open the .HPL in a text editor. Find the element and its nested elements and modify it accordingly to use it in your MDI scenario. The samples project demonstrates some concepts in file \"filter-rows-basic.hpl\". The example filter condition below injects the following filter conditions into a Filter Rows transform. The full example pipelines are available in the samples project as metadata-injection/filter-rows-mdi-parent.hpl and metadata-injection/filter-rows-mdi-child.hpl stateCode = FL AND housenr > 100 N N stateCode = constant String FL -1 -1 N N AND housenr > constant Integer 100 -1 0 N ####0;-####0","title":" Filter Rows","component":"manual","version":"2.7.0","name":"filterrows","url":"/manual/latest/pipeline/transforms/filterrows.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Filtering","hash":"_filtering","id":4},{"text":"Filtering rows based on values from variables","hash":"_filtering_rows_based_on_values_from_variables","id":5},{"text":"Filtering special characters","hash":"_filtering_special_characters","id":6},{"text":"Metadata injection support","hash":"_metadata_injection_support","id":7},{"text":"Special considerations for the condition field","hash":"_special_considerations_for_the_condition_field","id":8},{"text":"Sample","hash":"_sample","id":9},{"text":"MDI Example","hash":"_mdi_example","id":10}]},"247":{"id":247,"text":"The Formula transform allows you to apply Excel-like formulas and functions on fields in a pipeline. With a formula you are not limited to comparing to three fields like in the Calculator. This is where you can set and compare Date and Times as well. You have the option of creating a new field (use New field column) or setting a field value (use Replace value column). The formula will not evaluate a field unless the field pre-exists. Either start the execution of that pipeline to create missing fields or check if the field exists by viewing fields in the Replace value dropdown. Formula Examples using the TEXT function: Int to Text: \"size=\" & TEXT([RowLimitInteger],\"0\"). DateTime to Text: [StartDateField] & \"=\" & TEXT([StartDateTime], \"yyyy-mm-dd\") String to Text: \"new_counter=\" & TEXT([counter]+1, \"0\") Hop Engine Spark Flink Dataflow Option Description transform name Change the name of this transform to explain the purpose of the formula fields you’re adding. New Field the name of the new field that will be created from the formula. The Formula transform requires a data row to create a new field. If needed, you can add a row generator with a single row as the first transform in your pipeline. Formula the formula that will be used to create the new field. Click on the field to open the Formula Editor (see the Formula Editor section for more details). To use a value from a data row field, use square brackets like [field1]. To use a parameter or variable, use the normal syntax ${param1}. If you use a parameter in place of text like with CONCATENATE (see samples) you must put double quotes around it. Example: CONCATENATE([field1], “${Param1}”) * Note: You may have to add quotes around variables in formulas as variables have no type. Value type the data type for the new formula field Length field length Precision field precision Replace value select a pipeline field from the dropdown to replace that field’s value with the formula result. It is not recommended to pre-create a field with a NULL value in a \"Get variables\" transform as that is considered a hack and is not supported behavior. The Formula Editor is opened when you click on the Formula field in the options table (or go there through tab navigation). The Formula Editor consists of three main areas: the formula list (left hand side) shows a categorized list of functions that are available for use. Click on a formula to open it’s description, syntax and example formulas in the documentation panel. documentation panel (lower right) shows the documentation for the selected formula. The information shown in this panel consists of a formula’s name description syntax return type constraints (optional) semantics (optional) examples (optional) Check the Apache POI docs page for a list of support formulas. Table of Contents Options Formula Editor Notes Functions Basic Computation Comparisons DateTime Financial Information Logical Mathematical Text The kettle import process is able to migrate the existing Formula steps contained in kettle processes in the new Hop Formula transform. Even if the migration will go without any problem, the migration process is unable to enter in the inner details of the Formula’s transform macros and perform all the necessary checks to guarantee the correct behavior and the expected correct results. Therefore, even if the majority of the macros are the same as the existing macros you can find in Kettle Formula step, we strongly suggest to perfom a review of all of your fomulas transforms to verify that they behave as expected after the migration to the new Hop format. description Percentage calculation, for example 12% resolves to 0.12 syntax returns semantics constraints description Opening bracket to influence calculation order in an expression syntax returns semantics constraints description Closing bracket to influence calculation order in an expression syntax returns semantics constraints description Multiply 2 numeric values syntax returns semantics constraints description Sum of 2 numeric values syntax returns semantics constraints description Subtract 2 numeric values syntax returns semantics constraints description Divide 2 numeric values syntax returns semantics constraints description Calculates a number to the nth power, for example 2^6 resolves to 64 syntax returns semantics constraints description See if one value is less than the other syntax returns semantics constraints description See if one value is less than or equal to the other syntax returns semantics constraints description See if 2 values are different syntax returns semantics constraints description Verify that 2 values are equal syntax returns semantics constraints description See if one value is larger than the other syntax returns semantics constraints description See if one value is larger than or equal to the other syntax returns semantics constraints description Construct date from year, month, and day of month. syntax DATE( Integer Year ; Integer Month ; Integer Day ) returns Date semantics This computes the date’s serial number given Year, Month, and Day. Fractional values are truncated. The value of the serial number depends on the current epoch. Note that some applications may not handle correctly dates before 1904; in particular, many spreadsheets incorrectly claim that 1900 is a leap year (it was not; there was no 1900-02-29). constraints 1 ⇐ Month ⇐ 12; 1 ⇐ Day ⇐ 31 Examples expression result comment DATE(2005;1;31)=[.C7] True Simple date value. DATE(2005;12;31)-DATE(1904;1;1) 37255 Date differences are computed correctly. DATE(2004;2;29)=DATE(2004;2;28)+1 True 2004 was a leap year. DATE(2000;2;29)=DATE(2000;2;28)+1 True 2000 was a leap year. DATE(2005;3;1)=DATE(2005;2;28)+1 True 2005 was not a leap year. DATE(2017.5; 1; 2)=DATE(2017; 1; 2) True Fractional values for year are truncated DATE(2006; 2.5; 3)=DATE(2006; 2; 3) True Fractional values for month are truncated DATE(2006; 1; 3.5)=DATE(2006; 1; 3) True Fractional values for day are truncated DATE(2006; 13; 3)=DATE(2007; 1; 3) True Months > 12 roll over to year DATE(2006; 1; 32)=DATE(2006; 2; 1) True Days greater than month limit roll over to month DATE(2006; 25; 34)=DATE(2008;2;3) True Days and months roll over transitively DATE(2006;-1; 1)=DATE(2005;11;1) True Negative months roll year backward DATE(2006;4;-1)=DATE(2006;3;30) True Negative days roll month backward DATE(2006;-4;-1)=DATE(2005;7;30) True Negative days and months roll backward transitively DATE(2003;2;29)=DATE(2003;3;1) True Non-leap year rolls forward description Return date serial number from given text syntax DATEVALUE( Text D ) returns Date semantics This computes the serial number of the text string D, using the current locale. This function must accept ISO date format (YYYY-MM-DD), which is locale-independent. It is semantically equal VALUE(Date) if Date has a date format, since text matching a date format is automatically converted to a serial number when used as a Number. If the text of D has a combined date and time format, e.g. YYYY-MM-DD HH:MM:SS, the integer part of the date serial number is returned. If the text of Date does not have a date or time format, an implementation may return an error. See VALUE for more information on date formats. In an OpenDocument file, the calculation settings table:null-year and table:null-date affect this function. constraints None Examples expression result comment DATEVALUE(\"2004-12-25\")=DATE(2004;12;25) True DATEVALUE DATEVALUE(\"2004-12-25 12:34:56\")=DATE(2004;12;25) True Only the integer part is returned DATEVALUE(\"2004-12-25 12:34:56\") 2004-12-25 Only the date part of the date time is returned description Returns the day of a date, represented by a serial number. The day is given as an integer ranging from 1 to 31. syntax DAY( DateParam Date ) returns Number semantics Returns the day portion of the date. constraints None Examples expression result comment DAY(DATE(2006;5;21)) 21 Basic extraction. DAY(\"2006-12-15\") 12 Text allowed too, since it’s a DateParam description Calculates the number of days between two dates. syntax DAYS( Date endDate; Date startDate ) returns Integer semantics Computers the number of days between 2 dates constraints None Examples expression result comment DAYS(DATEVALUE(\"2004-12-23\");DATEVALUE(\"2004-12-25\")) 2 DAYS DAYS(DATEVALUE(\"2004-12-25\");DATEVALUE(\"2004-12-23\")) -2 DAYS description The DAYS360 function returns the number of days between two dates based on a 360-day year (twelve 30-day months), which is used in some accounting calculations. Use this function to help compute payments if your accounting system is based on twelve 30-day months. syntax DAYS360(start_date,end_date,[method]) returns Number semantics Returns the day portion of the date. Method (optional): A logical value that specifies whether to use the U.S. or European method in the calculation. check the Microsoft docs for details. constraints None Examples expression result comment DAY(DATE(2006;5;21)) 21 Basic extraction. DAY(\"2006-12-15\") 12 Text allowed too, since it’s a DateParam description Returns the serial number that represents the date that is the indicated number of months before or after a specified date (the start_date). Use EDATE to calculate maturity dates or due dates that fall on the same day of the month as the date of issue. syntax EDATE(start_date, months) returns Date semantics constraints Examples expression result comment EDATE([DATE_FIELD],1) 15-Feb-22 The date, one month after the date above EDATE([DATE_FIELD],-1) 15-Dec-22 The date, one month before the date above description Returns the serial number for the last day of the month that is the indicated number of months before or after start_date. Use EOMONTH to calculate maturity dates or due dates that fall on the last day of the month. syntax EOMONTH(start_date, months) returns semantics constraints Examples expression result comment EOMONTH([DATE_FIELD]],1) 2/28/2022 Date of the last day of the month, one month after the date in [DATE_FIELD]. description Extract the hour (0 through 23) from a time. syntax HOUR( TimeParam T ) returns Number semantics Semantics: Extract from T the hour value, 0 through 23, as per a 24-hour clock. This is equal to: DayFraction=(T-INT(T)) Hour=INT(DayFraction*24) constraints None Examples expression result comment HOUR(5/24) 5 5/24ths of a day is 5 hours, aka 5AM. HOUR(5/24-1/(24*60*60)) 4 A second before 5AM, it’s 4AM. HOUR(\"14:00\") 14 TimeParam accepts text description Determines the sequential number for the minute of the hour (0-59) for the time value. syntax MINUTE( DateTime ) returns Integer semantics Returns the sequential number for the minute of the hour constraints None Examples expression result comment MINUTE(DATETIMEVALUE(\"2004-12-23 12:25:45\")) 25 MINUTE description Extract the month from a date syntax MONTH( DateParam Date ) returns Number semantics Takes a date and returns the month portion. constraints None Examples expression result comment MONTH([.C7]) 1 Month extraction from date in cell. MONTH(DATE(2006;5;21)) 5 Month extraction from DATE() value. description Return the last day of the month. syntax MONTHEND( Date ) returns Date semantics Returns the date for the last day of the month constraints None Examples expression result comment MONTHEND(DATEVALUE(\"2004-12-23\")) 2004-12-31 MINUTE description Returns the number of whole working days between start_date and end_date. Working days exclude weekends and any dates identified in holidays. Use NETWORKDAYS to calculate employee benefits that accrue based on the number of days worked during a specific term. syntax NETWORKDAYS(start_date, end_date, [holidays]) returns Number semantics constraints Examples expression result comment NETWORKDAYS([FIELD1],[FIELD2]) 110 Number of workdays between the start (10/1/2021) and end date (3/1/2022). NETWORKDAYS([FIELD1],[FIELD2],[FIELD3]) 109 Number of workdays between the start (10/1/2012) and end date (3/1/2013), with the 11/22/2012 holiday as a non-working day. description Return the serial number of the current date and time. syntax NOW() returns DateTime semantics This returns the current day and time serial number, using the current locale. If you want only the serial number of the current day, use TODAY. constraints None Examples expression result comment NOW()>DATE(2006;1;3) True NOW constantly changes, but we know it’s beyond this date. INT(NOW())=TODAY() True NOW() is part of TODAY(). WARNING: this test is allowed to fail if the locale transitions through midnight while computing this test; this failure is incredibly unlikely to occur in practice. description Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate. syntax NPER(rate,pmt,pv,[fv],[type]) returns Number semantics constraints Examples expression result comment NPER([FIELD1]/12, [FIELD2], [FIELD3], [FIELD4], 1) 59.673865 Periods for the investment with the above terms description Return the date of the previous weekday from the current date. syntax PREVWEEKDAY( Integer weekdayDefinition ) returns Date semantics weekdayDefinition fixes the start of the weekend and the type of calculation to be used. (1 = weekend = saturday + sunday, 2 = weekend = friday + saturday) constraints weekdayDefinition in values 1 or 2 Examples expression result comment PREVWEEKDAY(1) 2019-05-07 If this were run on 2019-05-08. description Determines the sequential number for the second of the minute (0-59) for the time value. syntax SECOND( DateTime ) returns Integer semantics Returns the sequential number for the second of the minute constraints None Examples expression result comment SECOND(DATETIMEVALUE(\"2004-12-23 12:25:45\")) 45 MINUTE description Construct time from hours, minutes, and seconds. syntax TIME( Number hours ; Number minutes ; Number seconds ) returns Time semantics Returns the fraction of the day consumed by the given time, i.e.: ((hours*60*60)+(minutes*60)+seconds)/(24*60*60) Time is a subtype of number, where a time value of 1 = 1 day = 24 hours. Note that the time inside one day is a fraction between 0 and 1, so typical implementations will only be able to compute approximations of the correct time value. Implementations may first perform INT() on the hour, minute, and second before doing the calculation. Therefore, only integer values are portable between implementations. Hours, minutes, and seconds may be arbitrary numbers (they must not be limited to the ranges 0..24, 0..59, or 0..60 respectively). Note that in typical implementations, a value displayed as time has its integer portion discarded and then time is computed; for computational purposes, though, the entire value is retained. constraints None Examples expression result comment TIME(0;0;0) 0 All zero arguments becomes midnight, 12:00:00 AM. TIME(23;59;59)*60*60*24 86399±ε This is 11:59:59 PM. TIME(11;125;144)*60*60*24 47244±ε Seconds and minutes roll over transitively; this is 1:07:24 PM. TIME(11;0; -117)*60*60*24 39483±ε Negative seconds roll minutes backwards, 10:58:03 AM TIME(11;-117;0)*60*60*24 32580±ε Negative minutes roll hours backwards, 9:03:00 AM TIME(11;-125;-144)*60*60*24 -31956±ε Negative seconds and minutes roll backwards transitively, 8:52:36 AM description Returns an internal number for a text having a time format. syntax TIMEVALUE( Text D ) returns Integer semantics This computes the serial number of the text string D, using the current locale. This function acceptS ISO time format (HH:mm:ss), which is locale-independent. constraints None Examples expression result comment TIMEVALUE(\"12:56:45\") 12:56:45 TIMEVALUE TIMEVALUE(\"2004-12-25 12:56:45\") 12:56:45 TIMEVALUE description Return the serial number of today syntax TODAY() returns Date semantics This returns the current day’s serial number, using current locale. This only returns the date, not the datetime value; if you need the specific time of day as well, use NOW(). constraints None Examples expression result comment TODAY()>DATE(2006;1;3) True Every date TODAY() changes, but we know it’s beyond this date. INT(TODAY())=TODAY() True TODAY() returns an integer. WARNING: this test is allowed to fail if the locale transitions through midnight while computing this test; because TODAY() is referenced twice, in some implementations this would result in a race condition) This is incredibly unlikely to occur in practice. description Extract the day of the week from a date; if text, uses current locale to convert to a date. syntax WEEKDAY( DateParam Date [ ; Integer Type = 1 ] ) returns Number semantics Returns the day of the week from a date, as a number from 0 through 7. The exact meaning depends on the value of Type: 1.When Type is 1, Sunday is the first day of the week, with value 1; Saturday has value 7. 2.When Type is 2, Monday is the first day of the week, with value 1; Sunday has value 7. 3.When Type is 3, Monday is the first day of the week, with value 0; Sunday has value 6. constraints None Examples expression result comment WEEKDAY(DATE(2006;5;21)) 1 Year-month-date format WEEKDAY(DATE(2005;1;1)) 7 Saturday. WEEKDAY(DATE(2005;1;1);1) 7 Saturday. WEEKDAY(DATE(2005;1;1);2) 6 Saturday. WEEKDAY(DATE(2005;1;1);3) 5 Saturday. description Returns the week number of a specific date. For example, the week containing January 1 is the first week of the year, and is numbered week 1. There are two systems used for this function: System 1 The week containing January 1 is the first week of the year, and is numbered week 1. System 2 The week containing the first Thursday of the year is the first week of the year, and is numbered as week 1. This system is the methodology specified in ISO 8601, which is commonly known as the European week numbering system. syntax WEEKNUM(serial_number,[return_type]) returns Integer semantics constraints Examples expression result comment WEEKNUM(\"3/9/2012\") 10 Number of the week in the year that 3/9/2012 occurs, based on weeks beginning on Sunday (default). WEEKNUM(\"3/9/2012\",2) 11 Number of the week in the year that 3/9/2012 occurs, based on a week beginning on Monday (the second argument, 2). description Returns a number that represents a date that is the indicated number of working days before or after a date (the starting date). Working days exclude weekends and any dates identified as holidays. Use WORKDAY to exclude weekends or holidays when you calculate invoice due dates, expected delivery times, or the number of days of work performed. syntax WORKDAY(start_date, days, [holidays]) returns semantics constraints Examples expression result comment WORKDAY([DATE_FIELD],[NB_DAYS_FIELD]) description Extract the year from a date given in the current locale of the application. syntax YEAR( DateParam D ) returns Number semantics Parses a date-formatted string in the current locale’s format and returns the year portion. If a year is given as a two-digit number, as in \"05-21-15\", then the year returned is either 1915 or 2015, depending upon the a break point in the calculation context. In an OpenDocument document, this break point is determined by table:null-year. Applications shall support extracting the year from a date beginning in 1900. Three-digit year numbers precede adoption of the Gregorian calendar, and may return either an error or the year number. Four-digit year numbers preceding 1582 (inception of the Gregorian Calendar) may return either an error or the year number. Four-digit year numbers following 1582 should return the year number. constraints None Examples expression result comment YEAR(DATE(1904;1;1)) 1904 Extracts year from a given date. description YEARFRAC calculates the fraction of the year represented by the number of whole days between two dates (the start_date and the end_date). For instance, you can use YEARFRAC to identify the proportion of a whole year’s benefits, or obligations to assign to a specific term. syntax YEARFRAC(start_date, end_date, [basis]) returns semantics constraints Examples expression result comment YEARFRAC(\"1/1/2012\",\"7/30/2012\") 0.58055556 Fraction of the year between 1/1/2012 and 7/30/12, omitting the Basis argument. YEARFRAC(\"1/1/2012\",\"7/30/2012\",1) 0.57650273 Fraction between same dates, using the Actual/Actual basis argument. Because 2012 is a Leap year, it has a 366 day basis. YEARFRAC(\"1/1/2012\",\"7/30/2012\",3) 0.57808219 Fraction between same dates, using the Actual/365 basis argument. Uses a 365 day basis. description PMT, one of the financial functions, calculates the payment for a loan based on constant payments and a constant interest rate. syntax PMT(rate, nper, pv, [fv], [type]) returns Number semantics constraints Examples expression result comment PMT([FIELD1]/12,[FIELD2],[FIELD3]) ($1,037.03) Monthly payment for a loan with terms specified as arguments in [FIELD1]:[FIELD3]. description PV, one of the financial functions, calculates the present value of a loan or an investment, based on a constant interest rate. You can use PV with either periodic, constant payments (such as a mortgage or other loan), or a future value that’s your investment goal. syntax PV(rate, nper, pmt, [fv], [type]) returns Number semantics constraints Examples expression result comment PV([FIELD2]/12, 12*[FIELD3], [FIELD1], , 0) ($59,777.15) Present value of an annuity with the terms in [FIELD1]:[FIELD3]. description Uses an index to return a value from a list of values. Uses index_num to return a value from the list of value arguments. Use CHOOSE to select one of up to 254 values based on the index number. For example, if value1 through value7 are the days of the week, CHOOSE returns one of the days when a number between 1 and 7 is used as index_num. syntax CHOOSE( Integer Index ; { Any Value }+ ) returns Any semantics Uses Index to determine which value, from a list of values, to return. If Index is 1, CHOOSE returns the first Value; if Index is 2, CHOOSE returns the second value, and so on. Note that the Values may be formula expressions. Expression paths of parameters other than the one chosen are not calculated or evaluated for side effects. constraints Returns an error if Index 89,\"A\",[FIELD]>79,\"B\",[FIELD]>69,\"C\",[FIELD]>59,\"D\",TRUE,\"F\") one character IF([FIELD] is Greater Than 89, then return a \"A\", IF [FIELD] is Greater Than 79, then return a \"B\", and so on and for all other values less than 59, return an \"F\"). description Compute logical NOT syntax NOT( Logical L ) returns Logical semantics Computes the logical NOT. If given TRUE, returns FALSE; if given FALSE, returns TRUE. constraints Must have 1 parameter Examples expression result comment NOT(FALSE()) True Simple NOT, given FALSE. NOT(TRUE()) False Simple NOT, given TRUE. NOT(1/0) Error NOT returns an error if given an error value description Compute logical OR of all parameters. syntax OR( { Logical NumberSequenceList L }+ ) returns Logical semantics Computes the logical OR of the parameters. If all parameters are False, it shall return False; if any are True, it shall returns True. When given one parameter, this has the effect of converting that one parameter into a logical value. When given zero parameters, applications may return a Logical value or an error. Also in array context a logical OR of all arguments is computed, range or array parameters are not evaluated as a matrix and no array is returned. This behavior is consistent with functions like SUM. To compute a logical OR of arrays per element use the + operator in array context. constraints Examples expression result comment OR(FALSE(),FALSE()) False Simple OR. OR(FALSE(),TRUE()) True Simple OR. OR(TRUE(),FALSE()) True Simple OR. OR(TRUE(),TRUE()) True Simple OR. OR(FALSE(),NA()) NA Returns an error if given one. OR(FALSE(),FALSE(),TRUE()) True More than two parameters okay. OR(TRUE()) True One parameter okay - simply returns it description Returns constant TRUE syntax TRUE() returns Logical semantics Returns logical constant TRUE. Although this is syntactically a function call, semantically it is a constant, and typical applications optimize this because it is a constant. Note that this may or may not be equal to 1 when compared using “=”. It always has the value of 1 if used in a context requiring Number (because of the automatic conversions), so if ISNUMBER(TRUE()), then it must have the value 1. constraints Must have 0 parameters Examples expression result comment TRUE() True Constant. IF(ISNUMBER(TRUE()),TRUE()=1,TRUE()) True Applications that implement logical values as 0/1 must map TRUE() to 1 2+TRUE() 3 TRUE converts to 1 in Number context description Returns the absolute value of a number. The absolute value of a number is the number without its sign. syntax ABS( NUMBER N ) returns Number semantics If N 0.5 INT(-1.2) -2 Negative floating values round towards negative infinity INT((1/3)*3) 1 Naive users expect INT to \"correctly\" make integers even if there are limits on precision. description Rounds a number down to the nearest integer. syntax INT( Number N ) returns Number semantics Returns the nearest integer whose value is less than or equal to N. Rounding is towards negative infinity. constraints None Examples expression result comment INT(8.9) 8 Rounds 8.9 down INT(-8.9) -9 Rounds -8.9 down. Rounding a negative number down rounds it away from 0. INT(2) 2 Positive integers remain unchanged INT(-3) -3 Negative integers remain unchanged INT(1.2) 1 Positive floating values are truncated INT(1.7) 1 It doesn’t matter if the fractional part is > 0.5 INT(-1.2) -2 Negative floating values round towards negative infinity INT((1/3)*3) 1 Naive users expect INT to \"correctly\" make integers even if there are limits on precision. description Calculates the natural logarithm of a number. syntax LN( Number ) returns Number semantics Returns the natural logarithm of number. constraints Number must be greater than 0 Examples expression result comment LN(10) 2.30258509 description Returns the logarithm of a number to the base you specify. syntax LOG(number, [base]) returns Number semantics constraints Examples expression result comment LOG(10) 1 Logarithm of 10. Because the second argument (base) is omitted, it is assumed to be 10. The result, 1, is the power to which the base must be raised to equal 10. LOG(8, 2) 3 Logarithm of 8 with base 2. The result, 3, is the power to which the base must be raised to equal 8. LOG(86, 2.7182818) 4.4543473 Logarithm of 86 with base e (approximately 2.718). The result, 4.454, is the power to which the base must be raised to equal 86. description Calculates the base-10 logarithm of a number. syntax LOG10( Number ) returns Number semantics Returns the base-10 logarithm of number. constraints Number must be greater than 0 Examples expression result comment LOG10(10) 1 description Return the maximum from a set of numbers. syntax MAX( { NumberSequenceList N } ) returns Number semantics Returns the value of the maximum number in the list passed in. Non-numbers are ignored. Note that if logical types are a distinct type, they are not included. What happens when MAX is provided 0 parameters is implementation-defined, but MAX with no parameters should return 0. constraints None Examples expression result comment MAX(2;4;1;-8) 4 Negative numbers are smaller than positive numbers. MAX([.B4:.B5]) 3 The maximum of (2,3) is 3. description Return the minimum from a set of numbers. syntax MIN( { NumberSequenceList N } ) returns Number semantics Returns the value of the minimum number in the list passed in. Returns zero if no numbers are provided in the list. What happens when MIN is provided 0 parameters is implementation-defined, but MIN() with no parameters should return 0. constraints None. Examples expression result comment MIN(2;4;1;-8) -8 Negative numbers are smaller than positive numbers. MIN([.B4:.B5]) 2 The minimum of (2,3) is 2. MIN([.B3]) 0 If no numbers are provided in all ranges, MIN returns 0 MIN(\"a\") Error Non-numbers inline are NOT ignored. MIN([.B3:.B5]) 2 Cell text is not converted to numbers and is ignored. description Calculates the remainder of a division. syntax MOD( Number divisor, Number dividend ) returns Integer semantics Returns the remainder of divisor/dividend constraints Dividend must not be 0 Examples expression result comment MOD(10,3) 1 3 goes into 10 three times with a remainder of 1 description Returns the number of a value. syntax N( String ) returns Integer semantics Parses the value as a number. If the value cannot be parsed as a number, returns 0. constraints None Examples expression result comment N(\"10\") 10 Simple N N(TRUE()) 1 True evaluates to 1 N(\"ABC\") 0 Non-numeric strings return 0 description Calculates the net present value of an investment by using a discount rate and a series of future payments (negative values) and income (positive values). syntax NPV(rate,value1,[value2],…​) returns Number semantics constraints Examples expression result comment NPV([FIELD1], [FIELD2], [FIELD3], [FIELD4], [FIELD5]) $1,188.44 Net present value of this investment description Converts an octal number to decimal. syntax OCT2DEC(number) returns Number semantics constraints Examples expression result comment OCT2DEC(7777777533) -165 Converts octal 7777777533 to decimal form. description Rounds a number up to the nearest odd integer, where \"up\" means \"away from 0\". syntax ODD( Number N ) returns Number semantics Returns the odd integer whose sign is the same as N’s and whose absolute value is greater than or equal to the absolute value of N. In other words, any \"rounding\" is away from zero. By definition, ODD(0) is 1. constraints None Examples expression result comment ODD(5) 5 Positive odd integers remain unchanged. ODD(-5) -5 Negative odd integers remain unchanged. ODD(2) 3 Non-odd positive integers round up. ODD(0.3) 1 Positive floating values round up. ODD(-2) -3 Non-odd negative integers round down. ODD(-0.3) -1 Negative floating values round down. ODD(0) 1 By definition, ODD(0) is 1. description Returns the value of PI. syntax PI() returns Number semantics Returns the constant value of PI 3.14159…​ constraints None Examples expression result comment FIXED(PI();5) 3.14159 Constant description Returns the Poisson distribution. A common application of the Poisson distribution is predicting the number of events over a specific time, such as the number of cars arriving at a toll plaza in 1 minute. syntax POISSON(x,mean,cumulative) returns Number semantics constraints Examples expression result comment POISSON([FIELD1],[FIELD2],TRUE) 0.124652 Cumulative Poisson probability with the terms above (0.124652) POISSON([FIELD1],[FIELD2],FALSE) 0.084224 Poisson probability mass function with the terms above (0.084224) description Computes a number raised to the power by another number. syntax POWER( Number number, Number power ) returns Number semantics Returns number ^ power constraints None Examples expression result comment POWER(2;3) 8 Simple POWER description Returns the integer portion of a division. Use this function when you want to discard the remainder of a division. syntax QUOTIENT(numerator, denominator) returns Integer semantics constraints Examples expression result comment QUOTIENT(5, 2) 2 Integer portion of 5/2 QUOTIENT(4.5, 3.1) 1 Integer portion of 4.5/3.1 QUOTIENT(-10, 3) -3 Integer portion of -10/3 description Converts degrees to radians. syntax RADIANS(angle) returns Number semantics constraints Examples expression result comment RADIANS(270) 4.712389 270 degrees as radians (4.712389 or 3π/2 radians) description RAND returns an evenly distributed random real number greater than or equal to 0 and less than 1. A new random real number is returned every time the worksheet is calculated. syntax RAND() returns Number semantics constraints Examples expression result comment RAND() varies A random number greater than or equal to 0 and less than 1 description Returns a random integer number between the numbers you specify. A new random integer number is returned every time the worksheet is calculated. syntax RANDBETWEEN(bottom, top) returns Number semantics constraints Examples expression result comment RANDBETWEEN(1,100) varies Random number between 1 and 100 (varies) RANDBETWEEN(-1,1) varies Random number between -1 and 1 (varies) description The ROUND function rounds a number to a specified number of digits. For example, if field [FIELD1] contains 23.7825, and you want to round that value to two decimal places, you can use the following formula: syntax ROUND(number, num_digits) returns semantics constraints Examples expression result comment ROUND(-1.475, 2) -1.48 Rounds -1.475 to two decimal places ROUND(626.3,-3) 1000 Rounds 626.3 to the nearest multiple of 1000 ROUND(-50.55,-2) -100 Rounds -50.55 to the nearest multiple of 100 description Rounds a number down, toward zero. syntax ROUNDDOWN(number, num_digits) returns semantics constraints Examples expression result comment ROUNDDOWN(3.14159, 3) 3.141 Rounds 3.14159 down to three decimal places. ROUNDDOWN(31415.92654, -2) 31400 Rounds 31415.92654 down to 2 decimal places to the left of the decimal point. description Rounds a number up, away from 0 (zero). syntax ROUNDUP(number, num_digits) returns semantics constraints Examples expression result comment ROUNDUP(3.2,0) 4 Rounds 3.2 up to zero decimal places. ROUNDUP(31415.92654, -2) 31500 Rounds 31415.92654 up to 2 decimal places to the left of the decimal point. description Determines the sign of a number. Returns 1 if the number is positive, zero (0) if the number is 0, and -1 if the number is negative. syntax SIGN(number) returns Integer semantics constraints Examples expression result comment SIGN(10) 1 Sign of a positive number. SIGN(4-4) 0 Sign of the result of 4 minus 4 (zero). SIGN(-0.00001) -1 Sign of a negative number. description Returns the sine of a number. syntax SIN( Number ) returns Number semantics Number is the angle in radians for which the sine is to be calculated. constraints None Examples expression result comment SIN(10) -0.54402111 Simple SIN description Returns the hyperbolic sine of a number. syntax SINH(number) returns Number semantics constraints Examples expression result comment 2.868*SINH(0.0342*1.03) 0.1010491 Probability of obtaining a result of less than 1.03 seconds. description Returns the square root of a number. syntax SQRT( Number ) returns Number semantics Returns the square root of number. constraints Number must be positive. Examples expression result comment SQRT(4) 2 Simple SQRT description Sum (add) the set of numbers, including all numbers in ranges syntax SUM( { NumberSequenceList N }+ ) returns Number semantics Adds numbers (and only numbers) together (see the text on conversions). Applications may allow SUM to receive 0 parameters (and return 0), but portable documents must not depend on SUM() with zero parameters returning 0. constraints None Examples expression result comment SUM(1;2;3) 6 Simple sum. SUM(TRUE();2;3) 6 TRUE() is 1. SUM([.B4:.B5]) 5 2+3 is 5. description Returns the sum of the squares of the arguments. syntax SUMSQ(number1, [number2], …​) returns Number semantics constraints Examples expression result comment SUMSQ(3, 4) 25 Sum of the squares of 3 and 4 (25) description The SWITCH function evaluates one value (called the expression) against a list of values, and returns the result corresponding to the first matching value. If there is no match, an optional default value may be returned. syntax returns semantics constraints Examples expression result comment SWITCH(WEEKDAY([DATE_FIELD]),1,\"Sunday\",2,\"Monday\",3,\"Tuesday\",\"No match\") Because [DATE_FIELD]=2, and Monday is the result argument corresponding to the value 2, SWITCH returns Monday SWITCH([DATE_FIELD],1,\"Sunday\",2,\"Monday\",3,\"Tuesday\",\"No match\") Tuesday description Returns the Student’s left-tailed t-distribution. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution. syntax T.DIST(x,deg_freedom, cumulative) returns Number semantics constraints Examples expression result comment T.DIST(60,1,TRUE) 0.99469533 Student’s left-tailed t-distribution for 60, returned as the cumulative distribution function, using 1 degree of freedom. T.DIST(8,3,FALSE) 0.00073691 Student’s left-tailed t-distribution for 8, returned as the probability density function, using 3 degrees of freedom. description Returns the two-tailed Student’s t-distribution. The Student’s t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution. syntax T.DIST.2T(x,deg_freedom) returns Number semantics constraints Examples expression result comment T.DIST.2T(1.959999998, 60) 5.46% Two-tailed distribution (0.054645, or 5.46 percent) description Returns the right-tailed Student’s t-distribution. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution. syntax T.DIST.RT(x,deg_freedom) returns Number semantics constraints Examples expression result comment T.DIST.RT(1.959999998,60) 0.027322 Two-tailed distribution (0.027322, or 2.73 percent) description Returns the tangent of the given angle. syntax TAN(number) returns Number semantics constraints Examples expression result comment TAN(0.785) 0.99920 Tangent of 0.785 radians (0.99920) TAN(45*PI()/180) 1 Tangent of 45 degrees (1) TAN(RADIANS(45)) 1 Tangent of 45 degrees (1) description Returns the hyperbolic tangent of a number. syntax TANH(number) returns semantics constraints Examples expression result comment TANH(-2) -0.964028 Hyperbolic tangent of -2 (-0.96403) TANH(0) 0 Hyperbolic tangent of 0 (0) TANH(0.5) 0.462117 Hyperbolic tangent of 0.5 (0.462117) description Returns the Percentage Points (probability) for the Student t-distribution where a numeric value (x) is a calculated value of t for which the Percentage Points are to be computed. The t-distribution is used in the hypothesis testing of small sample data sets. Use this function in place of a table of critical values for the t-distribution. syntax TDIST(x,deg_freedom,tails) returns Number semantics constraints Examples expression result comment TDIST(1.959999998,60,2) 5.46% Two-tailed distribution (0.054644930, or 5.46 percent) TDIST(1.959999998,60,1) 2.73% One-tailed distribution (0.027322465 or 2.73 percent) description Truncates a number to an integer by removing the fractional part of the number. syntax TRUNC(number, [num_digits]) returns Integer semantics constraints Examples expression result comment TRUNC(8.9) 8 Truncates 8.9 to return the integer part (8). TRUNC(-8.9) -8 Truncates a negative number to return the integer part (-8). TRUNC(0.45) 0 Truncates a number between 0 and 1, returning the integer part (0). description Calculates the variance based on a sample. syntax VAR( { NumberSequence N }+ ) returns Number semantics Returns the variance. constraints None. Examples expression result comment VAR(10;5;1) 20.333333 Simple VAR description Concatenate two strings. syntax Text Left & Text Right returns Text semantics Concatenates two text (string) values. Due to the way conversion works, numbers are converted to strings. Note that this is equivalent to CONCATENATE(Left,Right). (Note: CONCATENATE is not yet available in libformula version 0.1.18.2) constraints None Examples expression result comment \"Hi \" & \"there\" \"Hi there\" Simple concatenation. \"H\" & \"\" \"H\" Concatenating an empty string produces no change. -5&\"b\" “-5b” Unary “-” has higher precedence than “&” 3&2-1 “31” Binary “-” has higher precedence than “&” description Converts a code number into a ASCII character or letter. Returns the character specified by a number. Use CHAR to translate code page numbers you might get from files on other types of computers into characters. syntax CHAR( Integer ) returns Text semantics Returns the text representation of an ASCII decimal code constraints Integer between 0 and 255 inclusive Examples expression result comment CHAR(100) d Ascii character decimal 100 is a lower case d. CHAR(65) A Displays the character represented by 65 in the computer’s character set. CHAR(33) ! Displays the character represented by 33 in the computer’s character set. description Removes all nonprintable characters from text. Use CLEAN on text imported from other applications that contains characters that may not print with your operating system. For example, you can use CLEAN to remove some low-level computer code that is frequently at the beginning and end of data files and cannot be printed. syntax CLEAN( Text ) returns Text semantics Removes non-printable characters such as ASCII 0 through 31 from a string constraints None description Returns the numeric code for the first character character in a text string. The returned code corresponds to the character set used by your computer. syntax CODE( Text ) returns Text semantics Returns the Unicode decimal code constraints None Examples expression result comment CODE(\"d\") 100 Unicode character d is decimal 100. description The CONCAT function combines the text from multiple ranges and/or strings, but it doesn’t provide delimiter or IgnoreEmpty arguments. syntax CONCAT( Text t1 ; Text t2; Text tN ) returns Text semantics Returns the text strings concatenated together constraints Requires one or more parameters Examples expression result comment CONCATENATE(\"A\";\"B\") AB 2 parameter concatenation. CONCATENATE(\"AB\";\"CD\";\"EF\") ABCDEF 3 parameter concatenation description Convert the parameters to Text formatted as currency. syntax DOLLAR( Text text, Integer decimalPlaces ) returns Text semantics Text is the incoming string or number to format, decimalPlaces is the number of decimal places to use. If i2 is not provided defaults to 2. constraints None Examples expression result comment DOLLAR(\"190\") $190.00 Decimal places not specified DOLLAR(\"190.89\";1) $190.9 Rounds to 1 decimal place description Report if two text values are exactly equal using a case-sensitive comparison syntax EXACT( Text t1 ; Text t2 ) returns Logical semantics Converts both sides to text, and then returns TRUE if the two text values are \"exactly\" equal, including case, otherwise it returns FALSE. constraints None Examples expression result comment EXACT(\"A\";\"A\") True Trivial comparison. EXACT(\"A\";\"a\") False EXACT, unlike \"=\", considers different cases different. EXACT(1;1) True EXACT does work with numbers. EXACT((1/3)*3;1) True Numerical comparisons ignore \"trivial\" differences that depend only on numeric precision of finite numbers. EXACT(TRUE();TRUE()) True Works with Logical values. EXACT(\"1\";2) False Different types with different values are different. EXACT(\"h\";1) False If text and number, and text can’t be converted to a number, they are different and NOT an error. EXACT(\"1\";1) True If text and number, see if number converted to text is equal. EXACT(“ 1”;1) False This converts 1 into the Text value “1”, the compares and finds that it’s not the same as “ 1” (note the leading space). description Return the starting position of a given text. syntax FIND( Text Search ; Text T [ ; Integer Start = 1 ] ) returns Number semantics constraints Start >= 1 Examples expression result comment FIND(\"b\";\"abcabc\") 2 Simple FIND() FIND(\"b\";\"abcabcabc\"; 3) 5 Start changes the start of the search FIND(\"b\";\"ABC\";1) Error Matching is case-sensitive. FIND(\"b\";\"bbbb\") 1 Simple FIND(), default is 1 FIND(\"b\";\"bbbb\";2) 2 FIND(\"b\";\"bbbb\";2.9) 2 INT(Start) used as starting position FIND(\"b\";\"bbbb\";0) Error Start >= 0 FIND(\"b\";\"bbbb\";0.9) Error description Round the number to a specified number of decimals and format the result as a text. syntax FIXED( Text text, Integer decimalPlaces, Boolean omitGroupChar ) returns Text semantics Text is the incoming string or number to format, decimalPlaces is the number of decimal places to use. If decimalPlaces is not provided defaults to 3. omitGroupChar indicates if the grouping character (for example \",\") should be omitted from the result. Defaults to false. constraints None Examples expression result comment FIXED([NUMBER_FIELD]], 1) 1,234.6 Rounds the number in [NUMBER_FIELD] one digit to the right of the decimal point. FIXED([NUMBER_FIELD]], -1, TRUE) -1230 Rounds the number in [NUMBER_FIELD] one digit to the left of the decimal point, without commas (the TRUE argument). FIXED(\"190\") 190.000 Decimal places not specified FIXED(\"190.89\";1) 190.9 Rounds to 1 decimal place FIXED(\"1190.89\";1;TRUE()) 1190.9 No grouping character FIXED(\"1190.89\";1;FALSE()) 1,190.9 With grouping character description Return a selected number of text characters from the left. syntax LEFT( Text T [ ; Integer Length ] ) returns Text semantics Returns the INT(Length) number of characters of text T, starting from the left. If Length is omitted, it defaults to 1; otherwise, it computes Length=INT(Length). If T has fewer than Length characters, it returns T. This means that if T is an empty string (which has length 0) or the parameter Length is 0, LEFT() will always return an empty string. Note that if Length= 0 Examples expression result comment LEFT(\"Hello\";2) \"He\" Simple LEFT(). LEFT(\"Hello\";2.9) \"He\" INT(), not round to nearest or round towards positive infinity, must be used to convert length into an integer. LEFT(\"Hello\") \"H\" Length defaults to 1. LEFT(\"Hello\";20) \"Hello\" If Length is longer than T, returns T. LEFT(\"Hello\";0) \"\" If Length 0, returns empty string. LEFT(\"\";4) \"\" Given an empty string, always returns empty string. LEFT(\"xxx\";-0.1) Error It makes no sense to request a negative number of characters. Also, this tests to ensure that INT() is used to convert non-integers to integers; if -0.1 were incorrectly rounded to 0 (as it would be by round-to-nearest or round-toward-zero), this would incorrectly return a null string. LEFT(\"Hello\";2^15-1) \"Hello\" If Length > LEN(T) entire string is returned. description Return the length, in characters, of given text syntax LEN( Text T ) returns Integer semantics Computes number of characters (not the number of bytes) in T. Implementations that support ISO 10646 / Unicode shall consider any character in the Basic Multilingual Plane (BMP) basic plane as one character, even if they occupy multiple bytes. (The BMP are the characters numbered 0 through 65535 inclusive). Implementations should consider any character not in the BMP as one character as well. constraints None. Examples expression result comment LEN(\"Hi There\") 8 Space is a character. LEN(\"\") 0 Empty string has zero characters. LEN(55) 2 Numbers are automatically converted. description Return input string, but with all uppercase letters converted to lowercase letters. syntax LOWER( Text T ) returns Text semantics Return input string, but with all uppercase letters converted to lowercase letters. As with most functions, it is side-effect free (it does not modify the source values). All implementations shall convert A-Z to a-z. However, as this function can be locale aware, results may be unexpected in certain cases. For example in a Turkish locale an upper case \"I without dot\" U+0049 is converted to a lower case \"i without dot\" U+0131. constraints None Examples expression result comment LOWER(\"HELLObc7\") \"hellobc7\" Uppercase converted to lowercase; other characters just copied to result. description MID returns a specific number of characters from a text string, starting at the position you specify, based on the number of characters you specify. syntax MID(text, start_num, num_chars) returns String semantics constraints Examples expression result comment MID([FIELD],1,5) Returns 5 characters from the string in [FIELD], starting at the 1st character. MID([FIELD],7,20) Returns 20 characters from the string in [FIELD], starting at the 7th character. Because the number of characters to return (20) is greater than the length of the string (10), all characters, beginning with the 7th, are returned. No empty characters (spaces) are added to the end. MID(\"123456789\";5;3) \"567\" Simple use of MID. MID(\"123456789\";20;3) \"\" If Start is beyond string, return empty string. MID(\"123456789\";-1;0) Error Start cannot be less than one; even if the length is 0 MID(\"123456789\";1;0) \"\" But otherwise, length=0 produces the empty string MID(\"123456789\";2.9;1) \"2\" INT(Start) is used MID(\"123456789\";2;2.9) \"23\" INT(Length) is used description Returns extracted text, given an original text, starting position, and length. syntax MID( Text T ; Integer Start ; Integer Length ) returns Text semantics Returns the characters from T, starting at character position Start, for up to Length characters. For the integer conversions, Start=INT(Start), and Length=INT(Length). If there are less than Length characters starting at start, it returns as many characters as it can beginning with Start. In particular, if Start > LEN(T), it returns the empty string (\"\"). If Start =0, and Length=0, it returns the empty string. Note that MID(T;1;Length) produces the same results as LEFT(T;Length). constraints Start >= 1, Length >= 0. Examples expression result comment MID([FIELD],1,5) Returns 5 characters from the string in [FIELD], starting at the 1st character. MID([FIELD],7,20) Returns 20 characters from the string in [FIELD], starting at the 7th character. Because the number of characters to return (20) is greater than the length of the string (10), all characters, beginning with the 7th, are returned. No empty characters (spaces) are added to the end. MID(\"123456789\";5;3) \"567\" Simple use of MID. MID(\"123456789\";20;3) \"\" If Start is beyond string, return empty string. MID(\"123456789\";-1;0) Error Start cannot be less than one; even if the length is 0 MID(\"123456789\";1;0) \"\" But otherwise, length=0 produces the empty string MID(\"123456789\";2.9;1) \"2\" INT(Start) is used MID(\"123456789\";2;2.9) \"23\" INT(Length) is used description Return the input string with the first letter of each word converted to an uppercase letter. syntax PROPER(Text T) returns Text semantics Return input string with the first letter of each word as an uppercase letter. As with most functions, it is side-effect free (it does not modify the source values). constraints None Examples expression result comment PROPER(\"hello there\") Hello There The first letter is uppercase and the following letter are lowercase. description Returns text where an old text is substituted with a new text. syntax REPLACE( Text T ; Number Start ; Number Len ; Text New ) returns Text semantics Returns text T, but remove the characters starting at character position Start for Len characters, and instead replace them with New. Character positions defined by Start begin at 1 (for the leftmost character). If Len=0, the text New is inserted before character position Start, and all the text before and after Start is retained. constraints Start >= 1. Examples expression result comment REPLACE(\"123456789\";5;3;\"Q\") \"1234Q89\" Replacement text may have different length. REPLACE(\"123456789\";5;0;\"Q\") \"1234Q56789\" If Len=0, 0 characters removed. description Return text repeated Count times. syntax REPT( Text T ; Integer Count ) returns Text semantics Returns text T repeated Count number of times; if Count is zero, an empty string is returned. If Count = 0 Examples expression result comment REPT(\"X\";3) \"XXX\" REPT(\"XY\";2) \"XYXY\" Repeated text can have length > 1. REPT(\"X\";2.9) \"XX\" INT(Count) used if count is a fraction REPT(\"X\";0) \"\" If Count is zero, empty string REPT(\"X\";-1) Error If Count is negative, Error. description Return a selected number of text characters from the right. syntax RIGHT( Text T [ ; Integer Length ] ) returns Text semantics Returns the Length number of characters of text T, starting from the right. If Length is omitted, it defaults to 1; otherwise, it computes Length=INT(Length). If T has fewer than Length characters, it returns T (unchanged). This means that if T is an empty string (which has length 0) or the parameter Length is 0, RIGHT() will always return an empty string. Note that if Length= 0 Examples expression result comment RIGHT(\"Hello\";2) \"lo\" Simple RIGHT(). RIGHT(\"Hello\") \"o\" Length defaults to 1. RIGHT(\"Hello\";20) \"Hello\" If Length is longer than T, returns T. RIGHT(\"Hello\";0) \"\" If Length 0, returns empty string. RIGHT(\"Hello\";2^15-1) “Hello” If Length is larger than T and is very large, it still returns the original short string. RIGHT(\"\";4) \"\" Given an empty string, always returns empty string. RIGHT(\"Hello\";-1) Error It makes no sense to request a negative number of characters. RIGHT(\"Hello\";-0.1) Error Must use INT, not round-to-nearest or round-towards zero, to convert Length to Integer description Converts an arabic numeral to roman, as text. syntax ROMAN(number, [form]) returns Text semantics constraints Examples expression result comment ROMAN(499,0) CDXCIX Classic roman numeral style for 499 (CDXCIX) ROMAN(499,1) LDVLIV More concise version for 499 (LDVLI ROMAN(499,2) XDIX More concise version for 499 (XDIX) ROMAN(499,3) VDIV More concise version for 499 (VDIV) ROMAN(499,4) ID Simplified version for 499 (ID) description Looks for a string of text within another (NOT case sensitive) syntax SEARCH( Text findText, Text text, Integer startPosition ) returns Text semantics findText is the text to search for, text is the String to search in, startPosition is the integer position within the string to start searching constraints startPosition > 0 Examples expression result comment SEARCH(\"p\";\"Apple\") 2 SEARCH(\"p\";\"Apple\";3) 3 Starts searching at index 3 description Counts the occurrences of text in a string. syntax SEARCH( Text text, Text findText ) returns Text semantics text is the String to search in, findText is the text to search for. constraints None Examples expression result comment STRINGCOUNT(\"Apple\";\"p\") 2 STRINGCOUNT(\"APPLE\";\"p\") 0 Function is case sensitive description Returns text where an old text is substituted with a new text. syntax SUBSTITUTE( Text T ; Text Old ; Text New [ ; Number Which ] ) returns Text semantics Returns text T, but with text Old replaced by text New (when searching from the left). If Which is omitted, every occurrence of Old is replaced with New; if Which is provided, only that occurrence of Old is replaced by New (starting the count from 1). If there is no match, or if Old has length 0, the value of T is returned. Note that Old and New may have different lengths. If Which is present and Which = 1 (when provided) Examples expression result comment SUBSTITUTE(\"121212\";\"2\";\"ab\") \"1ab1ab1ab\" Without Which, all replaced. SUBSTITUTE(\"121212\";\"2\";\"ab\";2) \"121ab12\" Which starts counting from 1. SUBSTITUTE(\"Hello\";\"x\";\"ab\") \"Hello\" If not found, returns unchanged. SUBSTITUTE(\"xyz\";\"\";\"ab\") \"xyz\" Returns T if Old is Length 0. SUBSTITUTE(\"\";\"\";\"ab\") \"\" Returns T if Old is Length 0, even if T is empty (it does not consider an empty T to “match” an empty Old). SUBSTITUTE(\"Hello\"; \"H\"; \"J\"; 0) Error Which cannot be less than 1. description Return the text (if text), else return 0-length Text value syntax T( Any X ) returns Text semantics The type of (a dereferenced) X is examined; if it is of type Text, it is returned, else an empty string (Text value of zero length) is returned. This is not a type-conversion function; T(5) produces an empty string, not \"5\". constraints None Examples expression result comment T(\"HI\") \"HI\" T does not change text. T([.B3]) \"7\" References transformed into what they reference. T(5) \"\" Non-text converted into null string. description Return the value converted to a text. syntax TEXT( Scalar X ; Text FormatCode ) returns Text semantics Converts the value X to a text according to the rules of a number format code passed as FormatCode and returns it. constraints The FormatCode is a sequence of characters with an application-defined meaning. Portable Contraints: The result of this function may change across locales. If separators such as decimal or group separator are involved, conversion may give unexpected results if the separators don’t match that of the current locale. Across applications the result may change to the extend to which number format codes and their subtleties are supported. Portable documents should not use this function. Examples expression result comment TEXT(12345.6789;\",#0.00\") \"12,345.68\" Non-text converted to text. This is locale-specific. TEXT(3;\"0\"\" good things\"\"\") \"3 good things\" description Remove leading and trailing spaces, and replace all internal multiple spaces with a single space. syntax TRIM( Text T ) returns Text semantics Takes T and removes all leading and trailing space. Any other sequence of 2 or more spaces is replaced with a single space. constraints None Examples expression result comment TRIM(\" ABC \") \"ABC\" description Converts a code number into a Unicode character or letter. syntax UNICHAR( Integer ) returns Text semantics Returns the text representation of an Unicode decimal code constraints Integer must be a valid Unicode character code Examples expression result comment UNICHAR(100) d Unicode character decimal 100 is a lower case d. description Returns the numeric Unicode code for the first character character in a text string. syntax UNICODE( Text ) returns Text semantics Returns the Unicode decimal code constraints None Examples expression result comment UNICODE(\"d\") 100 Unicode character d is decimal 100. description Return input string, but with all lowercase letters converted to uppercase letters. syntax UPPER( Text T ) returns Text semantics Return input string, but with all lowercase letters converted to uppercase letters. As with most functions, it is side-effect free (it does not modify the source values). All implementations shall convert a-z to A-Z. However, as this function can be locale aware, results may be unexpected in certain cases, for example in a Turkish locale a lower case \"i with dot\" U+0069 is converted to an upper case \"I with dot\" U+0130. constraints None Examples expression result comment UPPER(\"Habc7\") \"HABC7\" Lowercase converted to upper case; other characters just copied to result. description Applies URL-Encoding to a text given in the first parameter using the encoding specified in the second parameter. If no encoding is given, UTF-8 is assumed. syntax URLENCODE( Text text, Text encoding ) returns Text semantics text is the string to encode, encoding is the character set to use when encoding. constraints Encoding must be a valid character set. Examples expression result comment URLENCODE(\"&PARAM1=value?param2=value2\") %26PARAM1%3Dvalue%3Fparam2%3Dvalue2","title":" Formula","component":"manual","version":"2.7.0","name":"formula","url":"/manual/latest/pipeline/transforms/formula.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Formula Editor","hash":"_formula_editor","id":4},{"text":"Notes","hash":"_notes","id":5},{"text":"Functions","hash":"_functions","id":6},{"text":"Basic Computation","hash":"_basic_computation","id":7},{"text":"%","hash":"","id":8},{"text":"(","hash":"_2","id":9},{"text":")","hash":"_3","id":10},{"text":"*","hash":"_4","id":11},{"text":"+","hash":"_5","id":12},{"text":"-","hash":"_6","id":13},{"text":"/","hash":"_7","id":14},{"text":"^","hash":"_8","id":15},{"text":"Comparisons","hash":"_comparisons","id":16},{"text":"<","hash":"_9","id":17},{"text":"⇐","hash":"_10","id":18},{"text":"<>","hash":"_11","id":19},{"text":"=","hash":"_12","id":20},{"text":">","hash":"_13","id":21},{"text":">=","hash":"_14","id":22},{"text":"DateTime","hash":"_datetime","id":23},{"text":"DATE","hash":"_date","id":24},{"text":"DATEVALUE","hash":"_datevalue","id":25},{"text":"DAY","hash":"_day","id":26},{"text":"DAYS","hash":"_days","id":27},{"text":"DAYS360","hash":"_days360","id":28},{"text":"EDATE","hash":"_edate","id":29},{"text":"EOMONTH","hash":"_eomonth","id":30},{"text":"HOUR","hash":"_hour","id":31},{"text":"MINUTE","hash":"_minute","id":32},{"text":"MONTH","hash":"_month","id":33},{"text":"MONTHEND","hash":"_monthend","id":34},{"text":"NETWORKDAYS","hash":"_networkdays","id":35},{"text":"NOW","hash":"_now","id":36},{"text":"NPER","hash":"_nper","id":37},{"text":"PREVWEEKDAY","hash":"_prevweekday","id":38},{"text":"SECOND","hash":"_second","id":39},{"text":"TIME","hash":"_time","id":40},{"text":"TIMEVALUE","hash":"_timevalue","id":41},{"text":"TODAY","hash":"_today","id":42},{"text":"WEEKDAY","hash":"_weekday","id":43},{"text":"WEEKNUM","hash":"_weeknum","id":44},{"text":"WORKDAY","hash":"_workday","id":45},{"text":"YEAR","hash":"_year","id":46},{"text":"YEARFRAC","hash":"_yearfrac","id":47},{"text":"Financial","hash":"_financial","id":48},{"text":"PMT","hash":"_pmt","id":49},{"text":"PV","hash":"_pv","id":50},{"text":"Information","hash":"_information","id":51},{"text":"CHOOSE","hash":"_choose","id":52},{"text":"COUNT","hash":"_count","id":53},{"text":"COUNTA","hash":"_counta","id":54},{"text":"COUNTBLANK","hash":"_countblank","id":55},{"text":"DELTA","hash":"_delta","id":56},{"text":"ERROR","hash":"_error","id":57},{"text":"ISBLANK","hash":"_isblank","id":58},{"text":"ISERR","hash":"_iserr","id":59},{"text":"ISERROR","hash":"_iserror","id":60},{"text":"ISEVEN","hash":"_iseven","id":61},{"text":"ISLOGICAL","hash":"_islogical","id":62},{"text":"ISNA","hash":"_isna","id":63},{"text":"ISNONTEXT","hash":"_isnontext","id":64},{"text":"ISNUMBER","hash":"_isnumber","id":65},{"text":"ISODD","hash":"_isodd","id":66},{"text":"ISREF","hash":"_isref","id":67},{"text":"ISTEXT","hash":"_istext","id":68},{"text":"NA","hash":"_na","id":69},{"text":"VALUE","hash":"_value","id":70},{"text":"Logical","hash":"_logical","id":71},{"text":"AND","hash":"_and","id":72},{"text":"FALSE","hash":"_false","id":73},{"text":"IF","hash":"_if","id":74},{"text":"IFNA","hash":"_ifna","id":75},{"text":"IFS","hash":"_ifs","id":76},{"text":"NOT","hash":"_not","id":77},{"text":"OR","hash":"_or","id":78},{"text":"TRUE","hash":"_true","id":79},{"text":"Mathematical","hash":"_mathematical","id":80},{"text":"ABS","hash":"_abs","id":81},{"text":"ACOS","hash":"_acos","id":82},{"text":"ACOSH","hash":"_acosh","id":83},{"text":"ASIN","hash":"_asin","id":84},{"text":"ASINH","hash":"_asinh","id":85},{"text":"ATAN","hash":"_atan","id":86},{"text":"ATAN2","hash":"_atan2","id":87},{"text":"ATANH","hash":"_atanh","id":88},{"text":"AVEDEV","hash":"_avedev","id":89},{"text":"AVERAGE","hash":"_average","id":90},{"text":"CEILING","hash":"_ceiling","id":91},{"text":"COMBIN","hash":"_combin","id":92},{"text":"COMPLEX","hash":"_complex","id":93},{"text":"COS","hash":"_cos","id":94},{"text":"COSH","hash":"_cosh","id":95},{"text":"DEGREES","hash":"_degrees","id":96},{"text":"EVEN","hash":"_even","id":97},{"text":"EXP","hash":"_exp","id":98},{"text":"FACT","hash":"_fact","id":99},{"text":"FACTDOUBLE","hash":"_factdouble","id":100},{"text":"FIXED","hash":"_fixed","id":101},{"text":"FLOOR","hash":"_floor","id":102},{"text":"HEX2DEC","hash":"_hex2dec","id":103},{"text":"HYPERLINK","hash":"_hyperlink","id":104},{"text":"IMAGINARY","hash":"_imaginary","id":105},{"text":"IMREAL","hash":"_imreal","id":106},{"text":"INT","hash":"_int","id":107},{"text":"INT","hash":"_int_2","id":108},{"text":"LN","hash":"_ln","id":109},{"text":"LOG","hash":"_log","id":110},{"text":"LOG10","hash":"_log10","id":111},{"text":"MAX","hash":"_max","id":112},{"text":"MIN","hash":"_min","id":113},{"text":"MOD","hash":"_mod","id":114},{"text":"N","hash":"_n","id":115},{"text":"NPV","hash":"_npv","id":116},{"text":"OCT2DEC","hash":"_oct2dec","id":117},{"text":"ODD","hash":"_odd","id":118},{"text":"PI","hash":"_pi","id":119},{"text":"POISSON","hash":"_poisson","id":120},{"text":"POWER","hash":"_power","id":121},{"text":"QUOTIENT","hash":"_quotient","id":122},{"text":"RADIANS","hash":"_radians","id":123},{"text":"RAND","hash":"_rand","id":124},{"text":"RANDBETWEEN","hash":"_randbetween","id":125},{"text":"ROUND","hash":"_round","id":126},{"text":"ROUNDDOWN","hash":"_rounddown","id":127},{"text":"ROUNDUP","hash":"_roundup","id":128},{"text":"SIGN","hash":"_sign","id":129},{"text":"SIN","hash":"_sin","id":130},{"text":"SINH","hash":"_sinh","id":131},{"text":"SQRT","hash":"_sqrt","id":132},{"text":"SUM","hash":"_sum","id":133},{"text":"SUMSQ","hash":"_sumsq","id":134},{"text":"SWITCH","hash":"_switch","id":135},{"text":"T.DIST","hash":"_t_dist","id":136},{"text":"T.DIST.2T","hash":"_t_dist_2t","id":137},{"text":"T.DIST.RT","hash":"_t_dist_rt","id":138},{"text":"TAN","hash":"_tan","id":139},{"text":"TANH","hash":"_tanh","id":140},{"text":"TDIST","hash":"_tdist","id":141},{"text":"TRUNC","hash":"_trunc","id":142},{"text":"VAR","hash":"_var","id":143},{"text":"Text","hash":"_text","id":144},{"text":"&","hash":"_15","id":145},{"text":"CHAR","hash":"_char","id":146},{"text":"CLEAN","hash":"_clean","id":147},{"text":"CODE","hash":"_code","id":148},{"text":"CONCATENATE","hash":"_concatenate","id":149},{"text":"DOLLAR","hash":"_dollar","id":150},{"text":"EXACT","hash":"_exact","id":151},{"text":"FIND","hash":"_find","id":152},{"text":"FIXED","hash":"_fixed_2","id":153},{"text":"LEFT","hash":"_left","id":154},{"text":"LEN","hash":"_len","id":155},{"text":"LOWER","hash":"_lower","id":156},{"text":"MID","hash":"_mid","id":157},{"text":"MID","hash":"_mid_2","id":158},{"text":"PROPER","hash":"_proper","id":159},{"text":"REPLACE","hash":"_replace","id":160},{"text":"REPT","hash":"_rept","id":161},{"text":"RIGHT","hash":"_right","id":162},{"text":"ROMAN","hash":"_roman","id":163},{"text":"SEARCH","hash":"_search","id":164},{"text":"STRINGCOUNT","hash":"_stringcount","id":165},{"text":"SUBSTITUTE","hash":"_substitute","id":166},{"text":"T","hash":"_t","id":167},{"text":"TEXT","hash":"_text_2","id":168},{"text":"TRIM","hash":"_trim","id":169},{"text":"UNICHAR","hash":"_unichar","id":170},{"text":"UNICODE","hash":"_unicode","id":171},{"text":"UPPER","hash":"_upper","id":172},{"text":"URLENCODE","hash":"_urlencode","id":173}]},"248":{"id":248,"text":"The Fuzzy Match transform finds strings that potentially match using duplicate-detecting algorithms that calculate the similarity of two streams of data. This transform returns matching values as a separated list as specified by user-defined minimal or maximal values. Hop Engine Spark Flink Dataflow Option Description Transform name Name of this transform as it appears in the pipeline workspace Lookup transform Identifies the transform that contains the fields to match Lookup field Identifies the field to match Main stream field Identifies the primary stream to match the Lookup field with Algorithm Identifies which string-matching algorithm to use---options include Levenshtein, Damerau-Levenshtein, Needleman Wunsch, Jaro, Jaro Winkler, Pair letters similarity, Metaphone, Double Metaphone, SoundEx, or Refined SoundEx Case sensitive Identifies if streams can or cannot differ based on the use of uppercase and lowercase letters---only for use with the Levenshtein algorithms Get closer value When checked, returns a single result with the highest similarity score---when unchecked, returns all matches that satisfy the minimal and maximal value setting as a separated list, separated by the values separator Minimum value Identifies the lowest possible similarity score Maximal value Identifies the highest possible similarity score Values separator Identifies the string that separate the matches. Only available for specific algorithms and when the Get closer value option is unchecked. Algorithm Definitions Within the Algorithm field, there are several options available to compare and match strings. Levenshtein and Damerau-Levenshtein: calculate the distance between two strings by looking at how many edit transforms are needed to get from one string to another. The former only looks at inserts, deletes, and replacements. The latter adds transposition. The score indicates the minimum number of changes needed. For instance, the difference between John and Jan would be two; to turn the name John into Jan you need one transform to replace the O with an A, and another transform to delete the H. Needleman Wunsch: calculates the similarity of two sequences and is mainly used in bioinformatics. The algorithm calculates a gap penalty. The aforementioned example would have a score of negative two. Jaro and Jaro Winkler: calculate a similarity index between two strings. The result is a fraction between zero, indicating no similarity, and one, indicating an identical match. Pair letters similarity: dissects the two strings in pairs and calculates the similarity of the two strings by dividing the number of common pairs by the sum of the pairs from both strings. Metaphone, Double Metaphone, SoundEx, and Refined SoundEx: are https://en.wikipedia.org/wiki/Phonetic_algorithm#:~:text=A%20phonetic%20algorithm%20is%20an,indexing%20words%20in%20other%20languages.[phonetic algorithms], which try to match strings based on how they would sound. Each is based on the English language and would not be useful to compare other languages. The Metaphone algorithm returns an encoded value based on the English pronunciation of a given word. The encoded value of the names John and Jan would return the value JN for both names. The Double Metaphone algorithm has fundamental design improvements over its predecessor and uses a more complex ruleset for coding. It can return a primary and a secondary encoded value for a string. The names John and Jan each return metaphone key values of JN and AN. The Soundex algorithm returns a single encoded value for a name that consists of a letter followed by three numerical digits. The letter is the first letter of the name, and the digits encode the remaining consonants. The Refined SoundEx algorithm is an improvement over its predecessor. Encoded values for this algorithm are six digits long, the initial character is encoded, and multiple possible encodings can be returned for a single name. Using this algorithm, the name John returns the values 160000 and 460000, as does the name Jan. The Fields tab enables you to define how to return the results of a comparison. Option Description Match field Defines the name of the column that contains the comparison value Value field Defines the similarity score for which to return a value You can also specify the list of additional fields to retrieve from the lookup stream.","title":" Fuzzy match","component":"manual","version":"2.7.0","name":"fuzzymatch","url":"/manual/latest/pipeline/transforms/fuzzymatch.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General tab","hash":"_general_tab","id":4},{"text":"Fields tab","hash":"_fields_tab","id":5}]},"249":{"id":249,"text":"The \"Generate Random Value\" transform generates random numbers, integers, strings, UUIDs and more. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Seed The seed to use for the random number, integer and string type. Type The type of data you want to get back: - Random number : generates a random number between 0 and 1 - Random integer : generates a random 32-bit integer - Random string : generates a random string based on a 64-bit long random value - Universally Unique Identifier (UUID) - Universally Unique Identifier type 4 (UUID4) - Random Message Authentication Code (HmacMD5) - Random Message Authentication Code (HmacSHA1)","title":" Generate Random Value","component":"manual","version":"2.7.0","name":"generaterandomvalue","url":"/manual/latest/pipeline/transforms/generaterandomvalue.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"250":{"id":250,"text":"The Get Data From XML transform provides the ability to read data from any type of XML file using XPath specifications. Get Data From XML can read data from 3 kind of sources (files, stream and url) in 2 modes (user can define files and urls at static mode or in a dynamic way). See also: XML Input Stream (StAX) transform. Samples (Samples project): transforms/get-data-from-xml.hpl Hop Engine Spark Flink Dataflow The files tab is where you define the location of the XML files from which you want to read. The table below contains options associated with the Files tab. Option Description Transform name Name of the transform. XML Source from field XML source is defined in a field : the previous transform is giving XML data in a certain field in the input stream. XML source is a filename : the previous transform is giving filenames in a certain field in the input stream. These are read. Read source as URL : the previous transform is giving URLs in a certain field in the input stream. These are read. Get XML source from a field : specify the field to read XML, filename or URL from. File or directory Specifies the location and/or name of the input text file. Click Add to add the file/directory/wildcard combination to the list of selected files (grid) below. Regular expression Specifies the regular expression you want to use to select the files in the directory specified in the previous option. Selected Files Contains a list of selected files (or wildcard selections) and a property specifying if file is required or not. If a file is required and it is not found, an error is generated;otherwise, the file name is skipped. Show filename(s)…​ Displays a list of all files that will be loaded based on the current selected file definitions Option Description Settings Loop XPath : For every \"Loop XPath\" location we find in the XML file(s), we will output one row of data. This is the main specification we use to flatten the XML file(s). You can use the \"Get XPath nodes\" button to search for the possible repeating nodes in the XML document. Please note that if the XML document is large that this can take a while. Encoding : the XML filename encoding in case none is specified in the XML documents. (yes, those still exist) Namespace aware : check this to make the XML document namespace aware. Ignore comments : Ignore all comments in the XML document while parsing. Validate XML : Validate the XML prior to parsing. Use a token when you want to replace dynamically in a Xpath field value. A token is between @_ and - (@_fieldname-). Please see the Example 1 to see how it works. Use token : a token is not related tro XML parsing but to Hop. Igore empty file : an empty file is not a valid XML document. Check this if you want to ignore those altogether. Do not raise an error if no file: Don’t raise a stink if no files are found. Limit : Limits the number of rows to this number (zero (0) means all rows). Prune path to handle large files: almost the same value as the \"Loop XPath\" property with some exceptions. Use the prune path to speed up processing of large files, or consider using the XML Input Stream (StAX) transform. Note that you can use this parameter to avoid multiple HTTP URL requests. Additional fields Include filename in output? : Allows you to specify a field name to include the file name (String) in the output of this transform. Rownum in output? : Allows you to specify a field name to include the row number (Integer) in the output of this transform. Add to result filename Add files to result filename : Adds the XML filenames read to the result of this pipeline. A unique list is being kept in memory that can be used in the next workflow action in a workflow, for example in another pipeline. Option Description Name The name of the output field XPath The path to the element node or attribute to read Element The element type to read: Node or Attribute Result Type \"Value of\" or \"Single node\" Value of: retrieve the value of your XPath expression, e.g. the contents of an element or the value of an attribute. Single node: retrieve the XML contents returned by an XPath expression. Contrary to \"Value of\", the result of \"Single node\" is an XML snippet. Type The data type to convert to Format The format or conversion mask to use in the data type conversion Length The length of the output data type Precision The precision of the output data type Currency The currency symbol to use during data type conversion Decimal The numeric decimal symbol to use during data type conversion Group The numeric grouping symbol to use during data type conversion Trim type The type of trimming to use during data type conversion Repeat Repeat the column value of the previous row if the column value is empty (null) All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Get Data From XML","component":"manual","version":"2.7.0","name":"getdatafromxml","url":"/manual/latest/pipeline/transforms/getdatafromxml.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Files Tab","hash":"_files_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5},{"text":"Fields Tab","hash":"_fields_tab","id":6},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":7}]},"251":{"id":251,"text":"The Get File Names transform allows you to get information associated with file names on the file system. The information about the retrieved files is added as rows onto the stream. Hop Engine Spark Flink Dataflow The output fields for this transform are: filename - the complete filename, including the path (/tmp/hop/somefile.txt) short_filename - only the filename, without the path (somefile.txt) path - only the path (/tmp/hop/) type exists ishidden isreadable iswriteable lastmodifiedtime size extension uri rooturi This tab defines the location of the files you want to retrieve filenames for. For more information about specifying file locations, see section \"Selecting file using Regular Expressions\" on the Text File Input transform. Example: You have a static directory of c:\\temp where you expect files with an extension of .dat to be placed. Under file/directory you would specify c:\\temp and under Wildcard you would have a RegEx with something like .*\\.dat$ The filters tab allows you to filter the retrieved file names based on: All files and folders Files only Folders only It also gives you: The ability to include a row number in the output The ability to limit the number of rows returned. The limit parameter will act on the total number of rows returned and not only on the number of files returned. The ability to add the filename(s) to the result list The ability to print an error message in case no files/folders are found without stop processing The ability to raise an exception and stop processing in case no files/folders are found. As described above, if you enable the switch in the Filter tab, Hop will raise an exception in case no files are found and will stop the process. In this case, we need to be aware about two different ways the exceptions are raised depending on the way you choose to identify the set of files you are looking for. If you specified the files (or the inclusion/exclusion expressions) as a set in the Selected files table, the files retrieval is performed by considering the entire set specified (all at once) and the exception is raised in no files are found. If you specified the files by going through the Filenames from field option, the details about the files that we are going to retrieve comes in the incoming rows. That means that the retrieval is done row by row and as soon as one of the details used to specify the searched files fails the exception is raised. Therefore, in this case, the evaluation to fire the exception is done after the evaluation of each single incoming row and not evaluating the overall dataset returned and generated by the details found in the incoming rows.","title":" Get filenames","component":"manual","version":"2.7.0","name":"getfilenames","url":"/manual/latest/pipeline/transforms/getfilenames.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"File tab","hash":"_file_tab","id":4},{"text":"Filters","hash":"_filters","id":5},{"text":"Details on how exceptions are raised when no files are found","hash":"_details_on_how_exceptions_are_raised_when_no_files_are_found","id":6}]},"252":{"id":252,"text":"The Get Files Row Count transform counts the number of rows in a file or set of files. Hop Engine Spark Flink Dataflow Option Description directory Expression File or Filename(s) Files Preview Regular Rows Selected Show Transform name Option Description Rows Count fieldname Rows Separator type Row separator Include files count in output? Files Count fieldname","title":" Get files Row Count","component":"manual","version":"2.7.0","name":"getfilesrowcount","url":"/manual/latest/pipeline/transforms/getfilesrowcount.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File tab","hash":"_file_tab","id":4},{"text":"Content tab","hash":"_content_tab","id":5}]},"253":{"id":253,"text":"The Get Records From Stream transform returns records that were previously generated by another pipeline in a workflow. The records were passed to this transform using either the Copy rows to result transform or the Workflow Executor transform. You can enter the metadata of the fields you are expecting from the previous pipeline in a workflow. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Fieldname Name of the field that contains the records from the previous result. Type Type of data. Options include: Number String Date Boolean Integer BigNumber Serializable Binary Timestamp Internet Address Length For a field with the type of 'Number', enter the total number of significant figures in a number. For a field with the type of 'String', enter the length of the string. Precision For a field with the type of 'Number', enter the number of floating point digits. Otherwise, leave blank. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Get records from stream","component":"manual","version":"2.7.0","name":"getrecordsfromstream","url":"/manual/latest/pipeline/transforms/getrecordsfromstream.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"254":{"id":254,"text":"The Get Rows from Result transform returns rows that were previously generated by another pipeline in a workflow. You do not need to define any fields in the Get rows from result transform to retrieve all data row fields. Hop Engine Spark Flink Dataflow The rows were passed on to this transform using either the Copy rows to result transform or the Pipeline Executor transform. You can enter the metadata of the fields you are expecting from the previous pipeline in a workflow. The Get Rows From Result is mainly available for historical reasons to build loops through workflows. Check the Best Practices for better ways of looping in Hop. Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Fieldname Name of the field that contains the rows from the previous result. Type Type of data. Options include: Number String Date Boolean Integer BigNumber Serializable Binary Timestamp Internet Address Length For a field with the type of 'Number', enter the total number of significant figures in a number. For a field with the type of 'String', enter the total length of the string. For a field with type of 'String', enter the length of output of the string. Precision For a field with the type of 'Number', enter the number of floating point digits. Otherwise, leave blank. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Get Rows from Result","component":"manual","version":"2.7.0","name":"getrowsfromresult","url":"/manual/latest/pipeline/transforms/getrowsfromresult.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"255":{"id":255,"text":"The Get Subfolder Names transform gets subfolder names from a directory. Hop Engine Spark Flink Dataflow Option Description Transform name Name of this transform as it appears in the pipeline workspace Accept foldername from field? Allows a foldername to be passed as a field. Foldername field The field which contains the folder name. Selected directories The directories from which to get the subfolders. Browse Uses the local file browser to get a path. Add Adds the path defined in the Directory field. Delete Deletes the path Edit Change the path Option Description Include rownum in output? Allows the row number to be added to the output. Rownum fieldname The field which contains the row number. Limit Limits the output rows.","title":" Get SubFolder names","component":"manual","version":"2.7.0","name":"getsubfolders","url":"/manual/latest/pipeline/transforms/getsubfolders.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Folder tab","hash":"_folder_tab","id":4},{"text":"Settings tab","hash":"_settings_tab","id":5}]},"256":{"id":256,"text":"The Get System Info transform retrieves system information from the Hop project, or the environment or system Hop is running on. The transform includes a table where you can designate a name and assign it to any available system info type you want to retrieve. This transform generates a single row with the fields containing the requested information. It can also accept any number of input streams, aggregate any fields defined by this transform, and send the combined results to the output stream. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Name The name you want to give a specific data type Type A list of the available system data types Item Description system date (variable) System time, changes every time you ask a date. system date (fixed) System time, determined at the start of the pipeline. start date range (Pipeline) Start of date range, based upon information in ETL log table. See, also .08 Pipeline Settings. end date range (Pipeline) End of date range, based upon information in ETL log table. See, also .08 Pipeline Settings. start data range (Workflow) Start of date range based upon information in the ETL log table. See also .08 Pipeline Settings. End date range (Workflow) End of date range based upon information in the ETL log table. See also .08 Pipeline Settings. Yesterday 00:00:00 Start of yesterday. Yesterday 23:59:59 End of yesterday. Today 00:00:00 Start of today. Today 23:59:59 End of today. Tomorrow 00:00:00 Start of tomorrow. Tomorrow 23:59:59 End of tomorrow First day of last month 00:00:00 Start of last month. Last day of last month 23:59:59 End of last month. First day of this month 00:00:00 Start of this month. Last day of this month 23:59:59 End of this month. First day of next month 00:00:00 Start of next month. Last day of next month 23:59:59 End of next month. copy of transform Copy nr of the transform. See also Launching several copies of a transform. Pipeline name Name of the pipeline. Pipeline file name File name of the pipeline (XML only). User that modified the pipeline last Date when the pipeline was modified last Hostname Returns the hostname of the server. IP address Returns the IP address of the server. Current process identifier (PID) The PID under which the Java process is currently running JVM max memory JVM total memory JVM free memory JVM available memory Available processors JVM CPU time (milliseconds) Total physical memory size (bytes) Total swap space size (bytes) Committed virtual size (bytes) Free physical memory size (bytes) Free swap space size (bytes) First day of last week 00:00:00 Last day of last week 23:59:59 Last working day of last week 23:59:59 First day of last week 00:00:00 (US) Last day of last week 23:59:59 (US) First day of this week 00:00:00 Last day of this week 23:59:59 Last working day of this week 23:59:59 First day of this week 00:00:00 (US) Last day of this week 23:59:59 (US) First day of next week 00:00:00 Last day of next week 23:59:59 Last working day of next week 23:59:59 First day of next week 00:00:00 (US) Last day of next week 23:59:59 (US) First day of last quarter 00:00:00 Last day of last quarter 23:59:59 First day of this quarter 00:00:00 Last day of this quarter 23:59:59 First day of next quarter 00:00:00 Last day of next quarter 23:59:59 First day of last year 00:00:00 Last day of last year 23:59:59 First day of this year 00:00:00 Last day of this year 23:59:59 First day of next year 00:00:00 Last day of next year 23:59:59 Previous workflow action result Previous workflow action exit status Previous workflow action nr Previous workflow action nr errors Previous workflow action nr lines input Previous workflow action nr lines output Previous workflow action nr lines read Previous workflow action nr lines updated Previous workflow action nr lines written Previous workflow action nr lines deleted Previous workflow action nr lines rejected Previous workflow action nr rows Previous workflow action stopped Previous workflow action nr files Previous workflow action nr files retrieved Previous workflow action log text","title":" Get System Info","component":"manual","version":"2.7.0","name":"getsystemdata","url":"/manual/latest/pipeline/transforms/getsystemdata.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Information Types","hash":"_information_types","id":4}]},"257":{"id":257,"text":"The Get Table Names transform gets table names from a database connection. Hop Engine Spark Flink Dataflow Option Description Transform name Name of this transform as it appears in the pipeline workspace Connection The connection to use Schema name The schema to use Get schema from field Allows passing a field containing the schema name Schema name field The field containing the schema name Include catalogs Includes catalogs in the output Include schemas Includes schemas in the output Include views Includes views in the output Include procedures Includes procedures in the output Include synonyms Include synonyms in the output Add schema in object name Adds the schema to the object name Tablename fieldname Output field containing the table name Object type fieldname Output field containing the object type (catalog, schema, table, …​) Is system object fieldname Output field containing boolean: is object a system object Creation SQL fieldname Output field containing create statement for object All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" Get table names","component":"manual","version":"2.7.0","name":"gettablenames","url":"/manual/latest/pipeline/transforms/gettablenames.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata injection","hash":"_metadata_injection","id":4}]},"258":{"id":258,"text":"The Get Variables transform allows you to get the value of a variable and create field(s) from it. You only need to use this transform if you need the variable value in a field. Hop Engine Spark Flink Dataflow Note that workflow/environment variables are set only once. A pipeline needs to start to get any new variables. A running or sequential or nested (nested pipelines are technically the same pipeline) pipeline can’t fetch new variable values. A pipeline is considered started when a pipeline starts for every row in a pipeline executor. Refer to parameter/svariables using the syntax: ${myVariable}, for example from a previous pipeline. If you need to refer to a previous pipeline’s data row(s) fields, then use a Get rows transform. For example, you can specify: $${java.io.tmpdir}/hop/tempfile.txt and it will be expanded to /tmp/hop/tempfile.txt on Unix-like systems. You must always specify the data type or you will have errors like the following: 2023/07/21 09:30:23 - REST client.0 - ERROR: Because of an error, this transform can’t continue: 2023/07/21 09:30:23 - REST client.0 - TOKEN_URL None : Unknown type 0 specified. 2023/07/21 09:30:23 - REST client.0 - ERROR: org.apache.hop.core.exception.HopValueException: See also the Set Variables transform. To convert the Variable into a data type other than String use Select Values - Meta Data tab. To get system values, including command line arguments, use the Get System Info transform. Option Description transform Name The name of this transform as it appears in the pipeline workspace. Name Name of the field. Variable Allows you to enter variables as complete strings to return rows or add values to input rows. For example, you can specify: $${java.io.tmpdir}/hop/tempfile.txt and it will be expanded to /tmp/hop/tempfile.txt on Unix-like systems. You can see a list of defined variables by using CTRL-SPACE (CMD-SPACE on OSX) in the input field. This helper will insert a selected variable into the input field. Only environment variables and variables with the JVM scope are shown here. Variables that are created in pipeline or workflow with a parent, grant parent or root workflow job need to be entered manually Type Specifies the field type: String, Date, Number, Boolean, Integer, BigNumber, Serializable, or Binary. Format Allows you to specify the format of the field after the type has been determined. Length For Number: Total number of significant figures in a number; For String: total length of string; For Date: length of printed output of the string (for example, entering 4 would only return the year). Precision For Number: Number of floating point digits. Not used for String, Date, or Boolean. Currency Used to interpret numbers with currency symbols. For example, $10,000.00 or E5.000,00. Decimal Used to indicate whether to use a period (\".\") or comma (\",\") for number values. Group Used to indicate whether to use a period (\".\") or comma (\",\") for number values. TrimType Type trim this field before processing: select either none, left, right, or both (left and right). All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Get variables","component":"manual","version":"2.7.0","name":"getvariable","url":"/manual/latest/pipeline/transforms/getvariable.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"259":{"id":259,"text":"The Google Analytics Input transform reads data from a Google Analytics 4 account, using the Google Analytics Data API. The GA4 Query Explorer provides a dedicated website to developing and testing queries with the Google Analytics API (outside of Apache Hop). Hop Engine Spark Flink Dataflow You need a Google Analytics account with access and sufficient permissions to a GA4 property. You need a Google Cloud project with a service account. The Google Analytics api needs to be enabled for this project. Check the Google Cloud docs for more information on how the create a service account and to set up a project for use with the Google Analytics Data API. Option Description Application name Enter an application name such as \"Apache Hop\" or leave the default. OAuth service email Your Google Developer Service Account’s Email Address (e.g. \"\"). Key file The path to the P12 private key associated with your OAuth Service account. Property Id the GA4 property to read from Option Description Start date (YYYY-MM-DD Specifies the start date associated with the query. The date must be entered in the following format: YYYY-MM-DD. End date (YYYY-MM-DD Specifies the end date associated with the query. The date must be entered in the following format: YYYY-MM-DD. Dimension Specifies the dimension fields for which you want to query. The Google Analytics Data API documentation provides you with a list of valid inputs and metrics that can be combined. Metrics Specifies the metrics fields you want returned. At least one metric must be provided. Sort Specifies a dimension field on which to sort. Click Get Fields to retrieve a list of possible fields based on the query you defined. Click Preview to preview data based on the defined query. Limit the number of rows to retrieve for the specified GA4 property to a number of rows. Set the limit size to 0 to fetch all available rows.","title":" Google Analytics Input","component":"manual","version":"2.7.0","name":"google-analytics","url":"/manual/latest/pipeline/transforms/google-analytics.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Configuration","hash":"_configuration","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Google Analytics Connection Settings","hash":"_google_analytics_connection_settings","id":5},{"text":"Query Definition","hash":"_query_definition","id":6},{"text":"Fields","hash":"_fields","id":7},{"text":"Limit Size","hash":"_limit_size","id":8}]},"260":{"id":260,"text":"The Google Sheets Input transform reads data from a Google Sheets worksheets. This transform requires a Google service account (JSON file) and a Google Cloud project with the Google Drive and Google Sheets API enabled. Hop Engine Spark Flink Dataflow option description JSON credential key file Lets you specify or browse for spreadsheets existing in the service account drive or for the ones that are shared with the service account email. Application Name Your application name for the service account in the Google Developer Console. Timeout lets you specify an https timeout (in minutes, defaults to 5). Impersonation lets you impersonate your service account. Check the Google docs for more information. Click the Test Connection button to verify your specified JSON credential key file for your service account can use the Google Drive and Spreadsheets APIs and has access to your Google Spreadsheets. On success, you will see a Google Drive API: Success! message. option description Spreadsheet Key specify the key for the Google Spreadsheet you want to read from. Click the \"Browse\" button to get a list of available spreadsheets. Worksheet Id specify the worksheet id (title) for the sheet in your Google Spreadsheet you want to read from. Click the \"Browse\" button to get the list of available worksheets in the selected Google Spreadsheet. Lets you select from the fields of the sheet. Fields name are always defined in the first line of the google spreadsheet. Get Fields lets you get fields and guess their types, format, precision, decimal and group delimiter as well as trim type.","title":" Google Sheets Input","component":"manual","version":"2.7.0","name":"google-sheets-input","url":"/manual/latest/pipeline/transforms/google-sheets-input.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Service account tab","hash":"_service_account_tab","id":4},{"text":"Spreadsheet tab","hash":"_spreadsheet_tab","id":5},{"text":"Fields tab","hash":"_fields_tab","id":6}]},"261":{"id":261,"text":"The Google Sheets Output transform writes data to a Google Sheets worksheets. This transform requires a Google service account (JSON file) and a Google Cloud project with the Google Drive and Google Sheets API enabled. Hop Engine Spark Flink Dataflow option description JSON credential key file Lets you specify or browse for spreadsheets existing in the service account drive or for the ones that are shared with the service account email. Application Name Your application name for the service account in the Google Developer Console. Timeout lets you specify an https timeout (in minutes, defaults to 5). Impersonation lets you impersonate your service account. Check the Google docs for more information. Click the Test Connection button to verify your specified JSON credential key file for your service account can use the Google Drive and Spreadsheets APIs and has access to your Google Spreadsheets. On success, you will see a Google Drive API: Success! message. option description Spreadsheet key Lets you specify or browse for spreadsheets existing in the service account drive or for the ones that are shared with the service account email. If you type in a sheet name (that does not exist in the drive) it will attempt to create a sheet it the \"create\" checkbox is ticked. Worksheet Id Should be browsed form the selected spreadsheet key. If you want to create a new file, type in any key that will become the name of the worksheet in the created spreadsheet Append to sheet Appends the lines without the header to an existing spreadsheet. This is incompatible with the create option below. Create new sheet if it does not exist If the checkbox is checked then if the Spreadsheet Key specified in the field Spreadsheet key does not exist it will create a new spreadsheet within the service account drive (note that this account has no UI) Share Full Rights (RW) with the Share with user email field lets you specify the email of a user who will get full rights on the freshly created file. Domain Wide Permission Enables to share with your whole domain (if configured in Google Drive).","title":" Google Sheets Output","component":"manual","version":"2.7.0","name":"google-sheets-output","url":"/manual/latest/pipeline/transforms/google-sheets-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Service account tab","hash":"_service_account_tab","id":4},{"text":"Spreadsheet tab","hash":"_spreadsheet_tab","id":5}]},"262":{"id":262,"text":"The Group By transform groups rows from a source, based on a specified field or collection of fields. A new row is generated for each group. It can also generate one or more aggregate values for the groups. Common uses are calculating the average sales per product and counting the number of an item you have in stock. The Group By transform is designed for sorted inputs. If your input is not sorted, only double consecutive rows are grouped correctly. If you sort the data outside of Hop, the case sensitivity of the data in the fields may produce unexpected grouping results. You can use the Memory Group By transform to handle non-sorted input. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Include all rows? Enable if you want all rows in the output, not just the aggregation; to differentiate between the two types of rows in the output, a flag is required in the output. You must specify the name of the flag field in that case (the type is boolean). Temporary files directory The directory in which the temporary files are stored (needed when the Include all rows option is enabled and the number or grouped rows exceed 5000 rows); the default is the standard temporary directory for the system TMP-file prefix Specify the file prefix used when naming temporary files Add line number, restart in each group Enable to add a line number that restarts at 1 in each group Line number field name Enable to add a line number that restarts at 1 in each group Always give back a row If you enable this option, the Group By transform will always give back a result row, even if there is no input row. This can be useful if you want to count the number of rows. Without this option you would never get a count of zero (0). Group fields table Specify the fields over which you want to group. Click Get Fields to add all fields from the input stream(s). Aggregates table Specify the fields that must be aggregated, the method and the name of the resulting new field. Here are the available aggregation methods : Sum Average (Mean) Median Percentile Minimum Maximum Number of values (N) Concatenate strings separated by , (comma) First non-null value Last non-null value First value (including null) Last value (including null) Cumulative sum (all rows option only!) Cumulative average (all rows option only!) Standard deviation (population) Concatenate strings separated by : specify the separator in the Value column (This supports hexadecimals) Number of distinct values Number of rows (without field argument) Standard deviation (sample) Percentile (nearest-rank method) Concatenate string separated by new line (CRLF) Concatenate distinct values separated by : specify the separator in the Value column (This supports hexadecimals)","title":" Group By","component":"manual","version":"2.7.0","name":"groupby","url":"/manual/latest/pipeline/transforms/groupby.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"263":{"id":263,"text":"The HTTP Client transform performs a simple call to a base URL with additional options. http://?param1=value1¶m2=value2¶m3.. The result is stored in a String field with the specified name. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline URL The base URL string Accept URL from field? Enable this option if you want to get the URL from a previous transform. Enabling this will also allow you to specify the name of the input field. URL field name The name of the incoming field that contains the URL Connection timeout Socket timeout The number of seconds to wait if no data is returned from the server. Connection close wait time Result fieldname The name of the field to store results HTTP status code field name The name of the field to store the HTTP response code (e.g. 200, 404) Response time (milliseconds) field name The name of the field to store the response time Http Login The username to be passed during HTTP (Basic) authentication HTTP Password The password to be passed during HTTP (Basic) authentication Proxy Host The hostname of the Proxy Server to be used Proxy Port The port number of the Proxy Server to be used Parameters Area where you define the parameter name-value pairs to pass on the URL Custom HTTP Headers Area where you define optional HTTP headers Q: The HTTP client transform doesn’t do anything, how do I make it work? A: The HTTP client transform needs to be triggered. Use a Row generator transform generating e.g. 1 empty row and link that with a hop to the HTTP client transform. Q: Does the HTTP client support SOAP? A: No, it just calls an URL with arguments. Future transforms may provide SOAP functionality, Work is underway on a WebService transform supporting WSDL.","title":" HTTP client","component":"manual","version":"2.7.0","name":"http","url":"/manual/latest/pipeline/transforms/http.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"FAQ","hash":"_faq","id":4},{"text":"The HTTP client transform doesn’t do anything","hash":"_the_http_client_transform_doesnt_do_anything","id":5},{"text":"The HTTP client transform and SOAP","hash":"_the_http_client_transform_and_soap","id":6}]},"264":{"id":264,"text":"The HTTP Post transform uses an HTTP POST command to submit form data via a URL. Hop Engine Spark Flink Dataflow The General tab defines which RSS/Atom URLs you want to use, and optionally which fields contain the URLs. Option Description URL The Web service URL to submit to. Accept URL from field? If checked, you must specify which field to retrieve the URL from. URL field name If the previous option is checked, this is where you specify the URL field. Encoding The encoding standard for the files being accessed. Request entity field The name of the field that will contain the POST request. When enabled, the Post a file option will retrieve the file named in this field, and post the contents of that file. Post a file If a file is defined in the Request entity field, its contents will be posted if this option is checked. Currently \"Request entity field\" must be filled in order for \"Post a file\" to work. Selecting \"Post a file\" and specifying a field under \"Body parameters\" without selecting a value for \"Request entity field\" (the place for the file name) will fail silently. Use MultiPart Upload This will send the data to the server in the form of a multipart request, this is useful when posting files Connection timeout Defines the timeout (defaults to 10000) in Milliseconds when a connection attempt will error out. Socket timeout Defines the timeout (defaults to 10000) in Milliseconds when a socket will error out. Connection close wait time Define the wait time after the connection is closed in Milliseconds, the default -1 means the default wait time from the operating system (often 2 minutes). Background information: Each row opens a connection and keeps it in a so called TIME-WAIT state for a specific time. A lot (may be thousands) of connections in a TIME-WAIT state introduce significant memory overhead. This option can reduce this memory overhead by reducing the time to keep a closed connection in a TIME-WAIT state. Result fieldname The field that you want to post the result output to. HTTP status code fieldname The field that you want to post the status code output to. Response time (milliseconds) fieldname The field that you want to post the response time, in milliseconds, to. HTTP login If this form requires authentication, this field should contain the username. HTTP password If this form requires authentication, this field should contain the password that corresponds with the username. Proxy host Hostname or IP address of the proxy server, if you use one. Proxy port Port number of the proxy server, if you use one. The Fields tab defines parameters for the HTTP request header and body. If you’ve filled in the URL and other necessary details in the General tab, you can use the Get values buttons to pre-populate the fields here. Body parameters are used in POST and PUT operations. Option Description # The order that this parameter will be passed to the Web application. Name The name of the field that contains the value to map to the parameter. Parameter The parameter to map the value of Name to. Put in Header? If set to Y, the parameter will be put into the request header. The Fields tab defines parameters for the HTTP request header and body. If you’ve filled in the URL and other necessary details in the General tab, you can use the Get values buttons to pre-populate the fields here. Query parameters are specified in the URL and can be used in any HTTP method. Option Description # The order that this parameter will be passed to the Web application. Name The name of the field that contains the value to map to the parameter. Value The value to map to the parameter.","title":" HTTP Post","component":"manual","version":"2.7.0","name":"httppost","url":"/manual/latest/pipeline/transforms/httppost.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Fields tab: Body (Header) Parameters","hash":"_fields_tab_body_header_parameters","id":5},{"text":"Fields tab: Query Parameters","hash":"_fields_tab_query_parameters","id":6}]},"265":{"id":265,"text":"The Identify Last Row In A Stream pipeline transform generates a Boolean field filled with true for the last row, and false otherwise. Hop Engine Spark Flink Dataflow Option Description Transform name Name of this transform as it appears in the pipeline workspace Result fieldname Defines the field to use to mark the last row of a stream. It generates a Boolean field filled with true for the last row, and falseotherwise.","title":" Identify last row in a stream","component":"manual","version":"2.7.0","name":"identifylastrow","url":"/manual/latest/pipeline/transforms/identifylastrow.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"266":{"id":266,"text":"The If Null transform replaces nulls by a given value either by: Processing the complete row with all fields Processing the complete row but only for specific field types (Number, String, Date etc.) Processing the complete row but only for specific fields by name Hop Engine Spark Flink Dataflow All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" If Null","component":"manual","version":"2.7.0","name":"ifnull","url":"/manual/latest/pipeline/transforms/ifnull.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":3}]},"267":{"id":267,"text":"The Injector transform is used for special purpose pipelines where you want to 'inject' rows into the pipeline using the Hop API and Java, or from streaming input transforms like the Kafka Consumer transform. Among other things you can build 'headless' pipelines with it: pipelines that have no input at design time: do not read from file or database. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Fieldname Specify the field name of the rows to inject. Type Specify the type of data. Length For Number: Total number of significant figures in a number; For String: total length of string; For Date: length of printed output of the string. Precision For Number: Number of floating point digits; For String, Date, Boolean: unused.","title":" Injector","component":"manual","version":"2.7.0","name":"injector","url":"/manual/latest/pipeline/transforms/injector.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"268":{"id":268,"text":"The Insert/Update transform first looks up a row in a table using one or more lookup keys. If a table row for the specified keys can’t be found, a new row is inserted. If it can be found and the fields to update are the same, nothing is done. If they are not all the same, the row in the table is updated. Hop Engine Spark Flink Dataflow Option Description Commit size The number of rows to change (insert / update) before running a commit. Connection The database connection to which data is written Don’t perform any updates If enabled, the values in the database are never updated;only inserts are performed. Key Lookup table Allows you to specify a list of field values and comparators. You can use the following comparators: =, = ~NULL, <>, , >=, LIKE, BETWEEN, IS NULL, IS NOT NULL SQL button Click SQL to generate the SQL to create the table and indexes for correct operation. Transform name Name of the transform; this name has to be unique in a single pipeline. Target schema The name of the Schema for the table to which data is written. This is important for data sources that allow for table names with periods in them. Target table Name of the table in which you want to do the insert or update. Update Fields Allows you to specify all fields in the table you want to insert/update including the keys. Avoid updates on certain fields by specifying N in the update column.","title":" Insert / Update","component":"manual","version":"2.7.0","name":"insertupdate","url":"/manual/latest/pipeline/transforms/insertupdate.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"269":{"id":269,"text":"The Java Filter transform allows the stream to be filtered using a user defined Java expressions. The input stream, coming from one or more transforms, can be redirected to two different transforms based on the evaluation of the written expression. In other words, the user is able to perform an if-statement to filter the data stream with pure java expressions: if( Condition ) {matching-transform} else {non-matching transform} Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Destination transform for matching rows (optional) The rows for which the written condition is evaluated to true are sent to this transform. Destination transform for non-matching rows (optional) The rows for which the written condition is evaluated to false are sent to this transform. Condition (Java Expression) Defines the Java condition on which to filter the data. See examples below. These code samples applies to the Condition (Java Expression) field. Filters a string that contains white space field.contains(\" \"); Filters a string that is identical to a constant string field.equals(\"Positive\"); Filters a boolean value field == Boolean.TRUE","title":" Java Filter","component":"manual","version":"2.7.0","name":"javafilter","url":"/manual/latest/pipeline/transforms/javafilter.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Examples","hash":"_examples","id":4}]},"270":{"id":270,"text":"The JavaScript transform provides a user interface for building JavaScript expressions that you can use to modify your data. The code you type in the script area is executed once for each input row. Variables won’t be usable or testable until you click the “Get variables” button to convert script variables into fields. Ensure you select the correct Type for the outgoing JavaScript fields. Hop uses the Rhino engine which is ECMA 5 and a bit of ECMA 6. See Rhino ES2015/ES6, ES2016 and ES2017 support (mozilla.github.io) Hop Engine Spark Flink Dataflow The JavaScript transform provides a user interface for building JavaScript expressions that you can use to modify your data. The code you type in the script area is executed once for each input row. The transform allows multiple scripts in a single transform instance. The Javascript transform is not an input transform and therefore requires an input stream from the pipeline. Minimizing scripting is very important to keep your data integration solutions maintainable. Try to avoid it as much as possible. You can manually add variables as the ‘Get variables’ button may not always work. E.g. JavasScript to create 4 new fields: var myVar = incomingFieldFromHop; var myTestString = \"my test\"; var myDate = str2date(\"2020-12-31\", \"yyyy-MM-dd\"); var myDateTime = new Date(\"2023-10-01T01:40:26.210\"); E.g. JavaScript to flatten JSON keys: //var input_json = { // \"c-102\": \"AIDS Healthcare\", // \"c-105\": \"AIDS Healthcare Direct\", // \"c-75\": \"Allied Physicians (ALIP)\", // \"c-59\": \"Asheville Endocrinology\"}; var input_json = JSON.parse(incomingJSONFromHop); var output_json = []; for (var key in input_json) { var value = input_json[key]; output_json.push({ field1: key, field2: value }); } var flattened_json = JSON.stringify(output_json); The Javascript functions panel contains a tree view of scripts, constants, functions, input fields, and output fields as described below. Double click on any of the scripts, constants, functions or fields to add them to the script. Transform Scripts Scripts you have created in this transform. Transform Constants A number of pre-defined, static constants that control what happens to the data rows. To use these constants, you must first set a pipeline_Status variable to CONTINUE_PIPELINE at the beginning of the script, so that the variable assignment is made to the first row being processed. Otherwise, any subsequent assignments to the pipeline_Status variable are ignored. The available constants are: SKIP_PIPELINE: Excludes the current row from the output row set and continues processing on the next row. ERROR_PIPELINE: Excludes the current row from the output row set, generates an error, and any remaining rows are not processed. CONTINUE_PIPELINE: Includes the current row in the output row set. ABORT_PIPELINE: Excludes the current row from the output row set, and any remaining rows are not processed, but does not generate an error. (This constant does not display in the transform dialog, but can be used in your script) Transform Functions String, numeric, date, logic, special, and file functions you can use in scripts. These included functions are implemented in Java and execute faster than JavaScript functions. Each function has a sample script demonstrating its use. Double-click the function to add it to the Javascript pane. Right-click and choose Sample to add the sample to the Javascript pane. Input Fields Input fields for the transform. Output Fields Output fields for the transform. The Javascript pane is the editing area for writing your code. You can insert constants, functions, input fields, and output fields from the Javascript functions panel on the left by double-clicking the node you want to insert or by using drag-and-drop to place the object onto the Javascript panel. The position at the bottom of the Javascript panel displays the line number and position of the cursor. The Optimization level selects the level of JavaScript optimization. The values are: 1: JavaScript runs in interpreted mode. 0: No optimizations are performed. 1-9: All optimizations are performed. 9 performs the most optimization with faster script execution, but compiles slower. The default is 9. You can right-click a tab in the Javascript panel to open a context menu with the following commands: Add new – Add a new script tab. Add copy – Add a copy of the existing script in a new tab. Set Transform Script - Specify the script to execute for each incoming row. Only one tab can be set as a transform script. The first tab is a transform script by default. Set Start Script - Specify the script to execute before processing the first row. Set End Script – Specify the script to execute after the last row has been processed. Remove Script Type - Specify to not execute the script. The script tab is not removed. To remove a script tab, click the Close button (the red “X”) and choose Yes to delete the script tab. The icon for the script type displays on the tab to denote the type of script on the tab. To rename a script tab, right-click the tab name in the Transform Scripts section of the Javascript functions panel, choose Rename, and enter the new name. The Fields table contains a list of variables from your script, and enables you to add metadata to the fields, like descriptive names. Field Description Fieldname Specify the name of the incoming field. Rename to Specify a new name for the incoming field. Type Specify a data type for the output field. Length Specify the length of the output field. Precision Specify the precision value of the output field. Replace value ‘Fieldname’ or ‘Rename to’ Specify whether to replace the value of the selected field with another value or to rename a field. The values are Y (Yes) and N (No). Get variables Retrieve a list of Javascript variables from your script. You can manually add variables as the ‘Get variables’ button may not always work. Test Script Test the syntax of your script, and displays the Generate Rows dialog box with a set of rows for testing. You can use the following internal API objects (for reference see the classes in the source): PipelineName: A String holding the pipeline name transform: the actual transforms instance for this transform (org.apache.hop.pipeline.transforms.javascript.ScriptValues) rowMeta: The actual instance of org.apache.hop.core.row.IRowMeta row: The actual instance of the data Object[] var idx = getInputRowMeta().indexOfValue(\"lookup\"); if ( idx < 0 ) { var lookupValue = 0; } else { var lookupValue = row[idx]; } Fields must be added to the rows in the same order to keep the structure of the row coherent. To add a field, define it as var in the Javascript pane, and add it as a field in the Fields table. Most values that are assigned in JavaScript are floating point values by default, even if you think you have assigned an integer value. If you are having trouble using == or switch/case on values that you know are integers, use the following constructs: switch(parseInt(valuename)) { case 1: case 2: case 3: strvalueswitch = \"one, two, three\"; break; case 4: strvalueswitch = \"four\"; break; default: strvalueswitch = \"five\"; } To filter rows (remove the rows from the output for example) set the pipeline_Status variable as follows: pipeline_Status = CONTINUE_PIPELINE if (/* your condition here */) pipeline_Status = SKIP_PIPELINE All rows matching the specified condition are removed from the output. Javascript does not allow you to create variables with spaces in the variable name. However, you can work with field names that contain spaces. For example, to replace all spaces with underscores in a field field name with spaces, use the syntax this[\"field name with spaces\"]. The this keyword is required. Without it, Javascript will use field name with spaces as a character array. var new_field = replace(this[\"field name with spaces\"], \" \", \"_\");","title":" JavaScript","component":"manual","version":"2.7.0","name":"javascript","url":"/manual/latest/pipeline/transforms/javascript.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Examples","hash":"_examples","id":4},{"text":"Javascript functions Panel","hash":"_javascript_functions_panel","id":5},{"text":"Javascript Panel","hash":"_javascript_panel","id":6},{"text":"Script types","hash":"_script_types","id":7},{"text":"Fields table","hash":"_fields_table","id":8},{"text":"Javascript Internal API Objects","hash":"_javascript_internal_api_objects","id":9},{"text":"Examples","hash":"_examples_2","id":10},{"text":"Check for the Existence of Fields in a row:","hash":"_check_for_the_existence_of_fields_in_a_row","id":11},{"text":"Add a New Field in a Row","hash":"_add_a_new_field_in_a_row","id":12},{"text":"Numeric values","hash":"_numeric_values","id":13},{"text":"Filter Rows","hash":"_filter_rows","id":14},{"text":"Use field names with spaces","hash":"_use_field_names_with_spaces","id":15}]},"271":{"id":271,"text":"The JDBC Metadata transform allows you to fetch metadata from a database connection, this includes schemas, tables and other objects. Hop Engine Spark Flink Dataflow In this tab, you can specify the java method of the DatabaseMetaData object which is to be called to obtain metadata. It also controls some other aspects of the steps behavior. Always pass the input row: Controls how this step behaves in case there is no metadata. If this option is not checked, the step will not produce any output rows. If this option is checked, the incoming row will still be passed. Any output fields that originate from the metadata resultset will be NULL in this case. Metadata Method: This dropdown list can be used to specify which metadata method to call upon the DatabaseMetaData object to obtain metadata: Catalogs: see DatabaseMetaData.getCatalogs() Best row identifier: see DatabaseMetaData.getBestRowIdentifier() Column privileges: see DatabaseMetaData.getColumnPrivileges() Columns: see DatabaseMetaData.getColumns() Cross references: see DatabaseMetaData.getCrossReferences() Exported key columns: see DatabaseMetaData.getExportedKeys() Foreign key columns: see DatabaseMetaData.getImportedKeys() Primary key columns: see DatabaseMetaData.getPrimaryKeys() Schemas: see DatabaseMetaData.getSchemas() Table privileges: see DatabaseMetaData.getTablePrivileges() Table types: see DatabaseMetaData.getTableTypes() Tables: see DatabaseMetaData.getTables() Data types: see DatabaseMetaData.getTypeInfo() Version columns: see DatabaseMetaData.getVersionColumns() After selecting a method, fields will be added to the tab so you can specify any arguments required by the method. For a description of the method-specific arguments and their meaning, please refer to the javadoc for each method (linked above). Get arguments from fields: If this option is checked, arguments to the method can be specified by selecting a field from the incoming stream, and the value of that field is used as actual argument value. If this option is not checked, argument values can be entered directly as a literal into the argument fields. Remove argument fields: This option is applicable when the Get arguments from fields is checked. When checked, the fields that are selected as argument fields are removed from the output stream. This is typically a convenient option when you chain several JdbcMetaData steps in sequence, using the fields coming out of upstream steps as argument fields for downstream steps. In such a case using this option will remove a lot of duplicate fields. This tab allows you to control how the output metadata is added to the outputstream. Output Fields: This grid is automatically filled with the appropriate fields as you select a particular metadata method on the Method and Aruments tab. Use this gridview to remove or rename output fields. Get fields: use this button to refill the grid. This will re-add any removed fields, but preserve any renamed fields.","title":" JDBC Metadata","component":"manual","version":"2.7.0","name":"jdbcmetadata","url":"/manual/latest/pipeline/transforms/jdbcmetadata.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Method and Arguments tab","hash":"_method_and_arguments_tab","id":3},{"text":"Output Fields tab","hash":"_output_fields_tab","id":4}]},"272":{"id":272,"text":"The Join Rows transform allows you to produce combinations (Cartesian product) of all rows in the input streams. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Temp directory Specify the name of the directory where the system stores temporary files in case you want to combine more then the cached number of rows. TMP-file prefix This is the prefix of the temporary files that will be generated. Max. cache size The number of rows to cache before the system reads data from temporary files; required when you want to combine large row sets that do not fit into memory. Main transform to read from Specifies the transform from which to read most of the data; while the data from other transforms are cached or spooled to disk, the data from this transform is not. The Condition(s) You can enter a complex condition to limit the number of output row. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Join Rows","component":"manual","version":"2.7.0","name":"joinrows","url":"/manual/latest/pipeline/transforms/joinrows.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"273":{"id":273,"text":"The JSON input transform reads data from JSON structures, files, or incoming fields using a JSONPath expression to extract data and output rows. JSONPath expressions can use either dot notation or square bracket notation. You can pass a REST request result field onwards without selecting any fields on the Fields tab if needed. For example, connect a REST client to a JSON input transform to read JSON into data rows. To read nested JSON elements, use a sequence of JSON Input transforms, where the first JSON Input transform reads the nested element as a String field. In the second JSON Input transform, use the Source is from a previous transform option to select the String field you used in the first JSON Input transform to read the information from the nested element. Check the json-input-nested-elements.hpl sample in the Samples project for an example. Samples (Samples project): json-input-basic.hpl json-input-nested-elements.hpl Hop Engine Spark Flink Dataflow Option Description Source is from a previous transform Select to retrieve the source from a previously defined field. When selected, the following fields are available: Select field Use field as file names Read source as URL Do not pass field downstream When this option is cleared, the following fields are available: File or directory Regular Expression Exclude Regular Expression Selected files Select field Specify the field name to use as a source from a previous transform. Use field as file names Select to indicate the source is a filename. Read source as URL Select to indicate if the source should be accessed as a URL. Do not pass field downstream Select to remove the source field from the output stream. This action improves performance and memory utilization with large JSON fields. File or directory Specify the source location if the source is not defined in a field. Click Browse to navigate to your source file or directory. Click Add to include the source in the Selected files table. Regular expression Specify a regular expression to match filenames within a specified directory. Exclude regular expression Specify a regular expression to exclude filenames within a specified directory. File/Directory The source location indicated by clicking Add after specifying it in File or directory. Wildcard (RegExp) Wildcards as specified in Regular expression. Exclude wildcard Excluded wildcards as specified in Exclude regular expression. Required Required source location for input. Include subfolders Whether subfolders are included within the source location. Delete Remove a source from the table Edit Remove a source from the table and return it back to the File or directory option. Show filename(s) Display the file names of the sources successfully connected to the JSON Input transform. The Content tab contains the following options for configuring which data to retrieve: Option Description Ignore empty file Select to skip empty files. When cleared, empty files will cause the process to fail and stop. Do not raise an error if no files Select to continue when no files are available to process. Ignore missing path Select to continue processing files when an error occurs that (1) no fields match the JSON path or (2) that all the values are null. When cleared, no further rows are processed when an error occurs. Default path leaf to null Select to return a null value for missing paths. Limit Specify a limit on the number of records generated from the tra. Results are not limited when set to zero. Include filename in output Select to add a string field with the filename in the result. Rownum in output Select to add an integer field with the row number in the result. Add filenames to result Select to add processed files to the result file list. The Fields tab displays field definitions to extract values from the JSON structure. The table in this tab contain the following columns: Option Description Name Name of field that maps to the corresponding field in the JSON input stream. Path Complete path of the field name in the JSON input stream. Hop uses the library JayWay for JSON Path expressions and documentation is at https://github.com/json-path/JsonPath. All records can be retrieved by adding the asterisk * in the path. For example, $.mydata.* Type Data type of the input field. Format An optional mask for converting the format of the original field. See Common Formats for information on common valid date and numeric formats you can use in this transform. Length Length of the field. Precision Number of floating point digits for number-type fields. Currency Currency symbol ($ or €, for example). Decimal A decimal point can be a . (5,000.00 for example) or , (5.000,00 for example). Group A grouping can be a , (10,000.00 for example) or . (5.000,00 for example). Trim type The trim method to apply to a string. Repeat The corresponding value from the last row repeated if a row is empty. Select fields Click Select Fields button in the Fields tab to open the Select Fields window. Select the checkbox next to each field in your source file that you want include in your output. All the fields selected in this transform are added to the table. You can search for a field name by entering the field name in the Search box. Select fields from snippet Click Select fields from snippet button and paste the entire JSON text and it will populate the Name, Path, Type columns in the Fields tab. Example: This is useful when copying JSON from a previous REST client’s output result. Dates and Timestamps For Hop types of Date and Timestamp, use the Format column to specify the incoming format. E.g. for Date: yyyy-MM-dd. You can either select a format from the dropdown or enter format text directly. Hop uses SimpleDateFormat (Java Platform SE 8) at https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html Examples of Timestamp formats: Format: yyyy-MM-dd’T’HH:mm:ss.SSSZ and Result: 2021-10-26T20:51:43.795+0000 Format: 2024-04-22T00:00:00.000Z and Result: 2024-04-22T00:00:00.000Z Regex You can use Regex in the Path expression. Example Path to filter on those that start with the letter 'a': $.data[?(@=~/a.*/i)] The Additional output fields tab contains the following options to specify additional information about the file to process: Option Description Short filename field Specify the field that contains the filename without path information but with an extension. Extension field Specify the field that contains the extension of the filename. Path field Specify the field that contains the path in operating system format. Size field Specify the field that contains the size of the data. Is hidden field Specify the field indicating if the file is hidden or not (Boolean). Last modification field Specify the field indicating the date of the last time the file was modified. Uri field Specify the field that contains the URI. Root uri field Specify the field that contains only the root part of the URI. While processing input JSON files, if a JSON record has one or more field containing null values, by default the null values will be present in the transform output. For example if we have a JSON file like this { \"persons\" : [ { \"id\": \"1\", \"name\": \"name 1\" }, { \"id\": \"2\", \"name\": \"name 2\" }, { \"id\": \"3\", \"name\": null }, { \"id\": \"4\", \"name\": \"name 4\" } ] } When extracting the fields id and Name using the following field definition: Field name Json Path id $.persons.*.id Name $.persons.*.name given the default behavior, the output will be id;Name 1;Name 1 2;Name 2 3;null 4;Name 4 Now let’s only select the name field and see what happens Name Name 1 Name 2 Name 4 You will notice that you only have 3 rowsets returned in this case ( the null line is omited from the result) To change Hop’s behavior regarding null values in JSON files, so that null values will not be considered in JSON output, you change the HOP_JSON_INCLUDE_NULLS configuration variable and set it’s value to N HOP_JSON_INPUT_INCLUDE_NULLS = N After restaring Hop, when we run the pipeline once again you will have 3 rows resulting because the the null values will be omitted. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" JSON Input","component":"manual","version":"2.7.0","name":"jsoninput","url":"/manual/latest/pipeline/transforms/jsoninput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"TIPS","hash":"_tips","id":2},{"text":"Examples","hash":"_examples","id":3},{"text":"Supported Engines","hash":"_supported_engines","id":4},{"text":"Options","hash":"_options","id":5},{"text":"File Tab","hash":"_file_tab","id":6},{"text":"Content Tab","hash":"_content_tab","id":7},{"text":"Fields Tab","hash":"_fields_tab","id":8},{"text":"Additional output fields tab","hash":"_additional_output_fields_tab","id":9},{"text":"Considerations","hash":"_considerations","id":10},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":11}]},"274":{"id":274,"text":"The JSON Output transform allows you to generate JSON blocks based on input transform values. Output JSON will be available as a javascript array or a javascript object depending on the transform settings. Hop Engine Spark Flink Dataflow General tab allows to specify type of transform operation, output json structure, transform output file. This file will be used to dump all generated json. Option Description Transform name Name of the transform; this name has to be unique in a single pipeline. Operation Specify transform operation type. Currently available 3 types of operation: Output value - only pass output json as a transform output field, do not dump to output file Write to file - only write to fie, do not pass to output field Output value and write to file - dump to file and pass generated json as a transform output file Json block name This value will be used as a name for json block. Nr. rows in a block Number of rows that are combined as one JSON Array A new file will be generated for each block Output value Output field name Compatibility mode Mode to be backwards compatible, more information here Option Description Filename full path to output file Append When checked new rows will be appended to the existing files Create Parent folder When checked the parent folders will be created when they do not exist, else the transform will fail if the folder does not exist Do not open create at start If not checked: file (and in some cases parent folder) will be created/opened to write during pipeline initialization. If checked: file and parent folder will be created only after transform will get any first input data. Extension Output file extension. Default value is 'json' Encoding Output file encoding Pass output to servlet Enable this option to return the data via a web service instead writing into a file. Include date in filename? If checked - output file name will contains File name value + current date. This may help to generate unique output files. Include time in filename If checked - output file name will contains file creation time. Same as for 'Include date in filename' option Show filename(s) button Can be useful to test full output file path Add file to result filenames? If checked - created output file path will be accessible form transform result This tab is used to map input transform fields to output json values Option Description Element name Json element name as a key. For example \"A\":\"B\" - A is a element name, B is actual input value mapped for this Element name. Fieldname Input transform field name. Use 'Get Fields' button to discover available input fields All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime. This part of the documentation will explain the differences when turning on compatibility mode. For all new development this mode is not recommended. Imagine we are generating a simple list with keynames \"name\" and \"value\" and there corresponding values. We will be using following settings: Json block name = \"data\" Nr rows in block = 3 Compatibility mode = NOT checked (and this is the default option) This will output: First file: { \"data\" : [ { \"name\" : \"item 1\", \"value\" : \"value 1\" }, { \"name\" : \"item 2\", \"value\" : \"value 2\" }, { \"name\" : \"item 3\", \"value\" : \"value 3\" } ] } Second file: { \"data\" : [ { \"name\" : \"item 4\", \"value\" : \"value 4\" } ] } If compatibility mode is enabled and the transform has the following settings: Json block name = \"data\" Nr rows in block = 3 'Compatibility mode' is checked This will output: First file: { \"data\": [ { \"name\": \"item 1\" }, { \"value\": \"value 1\" }, { \"name\": \"item 2\" }, { \"value\": \"value 2\" }, { \"name\": \"item 3\" }, { \"value\": \"value 3\" } ] } Second file: { \"data\": [ { \"name\": \"item 4\" }, { \"value\": \"value 4\" } ] } As you can see when turning compatibility mode on, each field will be handles as a separate object.","title":" JSON Output","component":"manual","version":"2.7.0","name":"jsonoutput","url":"/manual/latest/pipeline/transforms/jsonoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Settings Section","hash":"_settings_section","id":5},{"text":"Output File Section","hash":"_output_file_section","id":6},{"text":"Fields Tab","hash":"_fields_tab","id":7},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":8},{"text":"Compatibility mode","hash":"compat-mode","id":9}]},"275":{"id":275,"text":"The Kafka Consumer transform pulls streaming data from Kafka. It runs a sub-pipeline that executes according to message batch size or duration, letting you process a continuous stream of records in near-real-time. This sub-pipeline must start with an Injector transform. You can define the number of messages to accept for processing, as well as the specific data formats to stream activity data and system metrics. You can set up this transform to collect monitored events, track user consumption of data streams, and monitor alerts. Kafka records are stored within topics, and consist of a category to which the records are published. Topics are divided into a set of logs known as partitions. Kafka scales topic consumption by distributing partitions among a consumer group. A consumer group is a set of consumers sharing a common group identifier. Since the Kafka Consumer transform continuously ingests streaming data, you may want to use the Abort transform in your parent or sub-pipeline to stop consuming records from Kafka for specific workflows. For example, you can run the parent pipeline on a timed schedule, or abort the sub-pipeline if sensor data exceeds a preset range. Hop Engine Spark Flink Dataflow Option Description Transform name The name for this transform Kafka pipeline Specify the pipeline to execute by entering its path or clicking Browse and selecting the path. Note: this pipeline must start with an Injector transform. Option Description Bootstrap servers Comma separated list of bootstrap servers in a Kafka cluster Topics Enter the name of each Kafka topic from which you want to consume streaming data (messages). Consumer group Enter the name of the group of which you want this consumer to be a member. Each Kafka Consumer transform will start a single thread for consuming. If left empty, it will be defaulted to Apache Hop. When part of a consumer group, each consumer is assigned a subset of the partitions from topics it has subscribed to, which locks those partitions. Each instance of a Kafka Consumer transform will only run a single consumer thread. Use this tab to determine how many messages to consume before processing. You can specify message count and/or a specific amount of time. While either option will trigger consumption, the first satisfied option will start the pipeline for the batch. Option Description Duration (ms) Specify a time in milliseconds. This value is the amount of time the transform will spend collecting records prior to the execution of the pipeline. If set to a value of ‘0’, then Number of records triggers consumption. Number of records Specify a number. After every ‘X’ number of records, the specified pipeline will be executed and these ‘X’ records will be passed to the pipeline. If set to a value of ‘0’ then Duration triggers consumption. Offset management Choose when to commit when record read when batch completed Option Description Input name The input name is received from the Kafka streams. The following are received by default: key: Determines message distribution to partitions. If no key is present, messages are randomly distributed from partitions. message: The individual message contained in a record. Each record consists of a key, a value, and a timestamp. topic: The category to which records are published. partition: An ordered sequence of records that is continuously appended. You cannot have more consumers than the number of partitions. offset: A sequential ID number assigned by Kafka to each record. It uniquely identifies each record within the partition. timestamp: The time the message is received on the server. Output name The Output name can be mapped to subscriber and member requirements. Type The Type field defines the data format for streaming the record. You must choose the same data type that produced the records. This field applies to the ‘key’ and ‘message’ input names. Options include: String Boolean Number Integer Binary Return fields from a transform in the sub pipeline for further processing in this pipeline. Use this tab to configure the property formats of the Kafka consumer broker sources. A few of the most common property formats have been included for your convenience. You can enter any desired Kafka property. For further information on these input names, see the Apache Kafka documentation site: https://kafka.apache.org/documentation/. The options that are included by default are: NName Value auto.offset.reset latest ssl.key.password ssl.keystore.location ssl.keystore.password ssl.truststore.location ssl.truststore.password The Kafka consumer supports error handling but this is limited to the case of Batch Size equal to 1 (records from the Kafka queue are processed one by one). In this case, whenever a record coming from the Kafka queue generates an error in the called sub pipeline, that record will be sent along to the error path for further processing. The record that enter the error path is committed in Kafka and next records in the queue can be processed without any problem. Apart the errors fields inserted by error handling, the layout of the record flowing into the error path will be the layout specified in Field tab. This feature is very useful in any case where we have a record in the Kafka queue that is stopping processing of further records (because it generates an error during processing) and we want to \"remove it\" from the queue so that we can process the remaining records in the queue. The failing record can be saved somewhere (for example saved to a file or to a DB table) for further investigation. Here are some options you need to consume Avro Record values from a Kafka server. The schema of Avro values are not sent to Kafka but to a schema registry. As such you need to have one available. Here are some options you need to set to make this work on a Confluent Cloud Kafka instance. There are various parts of the software stack that need authentication, hence the bit of redundancy. We recommend that you put these options in variables in your environment configuration file. Option Example schema.registry.url https://abcd-12345x.europe-west3.gcp.confluent.cloud key.deserializer org.apache.kafka.common.serialization.StringDeserializer value.deserializer io.confluent.kafka.serializers.KafkaAvroDeserializer value.converter.schema.registry.url https://abcd-12345x.europe-west3.gcp.confluent.cloud sasl.jaas.config org.apache.kafka.common.security.plain.PlainLoginModule required username=\"CLUSTER_API_KEY\" password=\"CLUSTER_API_SECRET\"; security.protocol SASL_SSL basic.auth.credentials.source USER_INFO basic.auth.user.info CLUSTER_API_KEY:CLUSTER_API_SECRET schema.registry.basic.auth.user.info SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_API_SECRET sasl.mechanism PLAIN client.dns.lookup use_all_dns_ips acks ALL","title":" Kafka Consumer","component":"manual","version":"2.7.0","name":"kafkaconsumer","url":"/manual/latest/pipeline/transforms/kafkaconsumer.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Setup","hash":"_setup","id":5},{"text":"Batch","hash":"_batch","id":6},{"text":"Fields","hash":"_fields","id":7},{"text":"Result fields","hash":"_result_fields","id":8},{"text":"Options","hash":"_options_2","id":9},{"text":"Error handling","hash":"_error_handling","id":10},{"text":"Avro and Schema registry","hash":"_avro_and_schema_registry","id":11}]},"276":{"id":276,"text":"The Kafka Producer transform allows you to publish messages in near-real-time across worker nodes where multiple, subscribed members have access. A Kafka Producer transform publishes a stream of records to one Kafka topic. Hop Engine Spark Flink Dataflow Option Description Transform name the name for this transform Bootstrap servers comma separated list of bootstrap servers in a Kafka cluster Client ID The unique Client identifier, used to identify and set up a durable connection path to the server to make requests and to distinguish between different clients. Topic The category to which records are published. Key Field In Kafka, all messages can be keyed, allowing for messages to be distributed to partitions based on their keys in a default routing scheme. If no key is present, messages are randomly distributed to partitions. Message Field The individual record contained in a topic. Use this tab to configure the property formats of the Kafka consumer broker sources. A few of the most common property formats have been included for your convenience. You can enter any desired Kafka property. For further information on these input names, see the Apache Kafka documentation site: https://kafka.apache.org/documentation/. The options that are included by default are: Option Value auto.offset.reset latest ssl.key.password ssl.keystore.location ssl.keystore.password ssl.truststore.location ssl.truststore.password Here are some options you need to send Avro Record values to a Kafka server. The schema of Avro values are not sent to Kafka but to a schema registry. As such you need to have one available. Here are some options you need to set to make this work on a Confluent Cloud Kafka instance. There are various parts of the software stack that need authentication, hence the bit of redundancy. We recommend that you put these options in variables in your environment configuration file. Option Example schema.registry.url https://abcd-12345x.europe-west3.gcp.confluent.cloud value.converter.schema.registry.url https://abcd-12345x.europe-west3.gcp.confluent.cloud auto.register.schemas true security.protocol SASL_SSL sasl.jaas.config org.apache.kafka.common.security.plain.PlainLoginModule required username=\"CLUSTER_API_KEY\" password=\"CLUSTER_API_SECRET\"; username CLUSTER_API_KEY password CLUSTER_API_SECRET sasl.mechanism PLAIN client.dns.lookup use_all_dns_ips acks ALL basic.auth.credentials.source USER_INFO basic.auth.user.info CLUSTER_API_KEY:CLUSTER_API_SECRET schema.registry.basic.auth.user.info SCHEMA_REGISTRY_API_KEY:SCHEMA_REGISTRY_API_SECRET","title":" Kafka Producer","component":"manual","version":"2.7.0","name":"kafkaproducer","url":"/manual/latest/pipeline/transforms/kafkaproducer.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Options","hash":"_options_2","id":4},{"text":"Avro and Schema registry","hash":"_avro_and_schema_registry","id":5}]},"277":{"id":277,"text":"The LDAP Input transform allows you to read information like users, roles and other data from an LDAP server. The following sections describe the available options for the LDAP input transform. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline. Host Host can be the IP address of the LDAP directory server or its DNS name. Port Port number of LDAP directory server. Use authentication To enable LDAP authentication Username The username to be passed during authentication. Password The password to be passed during authentication. Use certificate To enable the use of a certificate. Trust store path Trust store password Trust all certificates Test connection Tests the configured connection to the LDAP server. Option Description Dynamic search base Enables the search base field. Search base fieldname The field containing the base LDAP node. Search base Base LDAP node to search the LDAP contents. Dynamic filter string Enables the filter string field. Filter string fieldname The field containing the filter string. Filter String LDAP filter to search the customized contents, in the current stage only \"single filter format\" is supported like. Example: mail=* Option Description Include rownum in output? Adds a row number to the output. Rownum fieldname The field containing the row number. Limit Limit the number of results returned. Time limit Limit the amount of time given to return results. Multi valued field separator. Set paging Page size Search scope Object scope, One level scope, Subtree scope Option Description Name The name of the imported field. Note: If you renamed a field in the Select & Alter tab, the name here must match the renamed value. Attribute Fetch as String, Binary Is sorted Key? Y/N Type The data type for this field. Format The format mask (number type or date format) Length The field length. Precision The precision option depends on the field type, but only Number is supported; it returns the number of floating point digits. Currency Symbol used to represent currencies Decimal A decimal point; this is either a dot or a comma Group A method of separating units of thousands in numbers of four digits or larger. This is either a dot or a comma. Trim type Where to trim the field, left, right, both, none Repeat If LDAP returns no value for an attribute, use the value from the previous row Get fields Gets the result fields","title":" LDAP Input","component":"manual","version":"2.7.0","name":"ldapinput","url":"/manual/latest/pipeline/transforms/ldapinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Search Tab","hash":"_search_tab","id":4},{"text":"Advanced Tab","hash":"_advanced_tab","id":5},{"text":"Fields Tab","hash":"_fields_tab","id":6}]},"278":{"id":278,"text":"The LDAP Output transform allows you to write information like users, roles and other data to an LDAP server. The following sections describe the available options for the LDAP Output transform. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline. Host Host can be the IP address of the LDAP directory server or its DNS name. Port Port number of LDAP directory server. Referral Determines how to handle referrals. Ignore: Ignore referrals. Follow: Automatically follow any referrals. Derefalias Determines how aliases are dereferenced. Always: Always dereference aliases. Never: Never dereference aliases. Finding: Dereference aliases only during name resolution. Searching: Dereference aliases only after name resolution. Protocol Determines which protocol is used. LDAP LDAP SSL LDAP TLS Use authentication To enable LDAP authentication. Username The username to be passed during authentication. Password The password to be passed during authentication. Use certificate To enable the use of a certificate. Trust store path Trust store password Trust all certificates Test connection Tests the configured connection to the LDAP server. Option Description Operation Insert, Update, Upsert, Add atribute, Delete, Rename DN (distinguished name). Multi valued field seperator Fail if not exist Dn fieldname Field which contains the distinguished name. Old DN fieldname Field which contains the old distinguished name (rename). New DN fieldname Field which contains the new distinguished name (rename). Delete RDN Whether or not to delete the RDN (relative distinguished name) Option Description Search base for fields Where to start looking for fields Attributes Stream field Update Whether or not to update the fields (Y/N) Get fields Edit mapping","title":" LDAP Output","component":"manual","version":"2.7.0","name":"ldapoutput","url":"/manual/latest/pipeline/transforms/ldapoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Settings","hash":"_settings","id":4},{"text":"Fields Tab","hash":"_fields_tab","id":5}]},"279":{"id":279,"text":"The Load File Content In Memory transform loads the content of a file in memory. Hop Engine Spark Flink Dataflow Option Description Filename is defined in a field Takes a filename from a field get filename from a field A field containing the filename File or directory The file or directory path to be added Add Adds the file or directory to the selected files Browse Uses the local file browser to select a path Regular Expression Allows files to be included based on a regular expression Exclude Regular Expression Allows files to be excluded based on a regular expression Selected files The selected files to load into memory Show filename(s) Previews the selected files Option Description Encoding The file encoding (UTF, ISO, …​) Ignore empty file Ignores empty files Ignore missing path Ignores missing paths Limit Limit the rows loaded from the file Include filename in output? Allows the filename to be included in the output Filename fieldname Field containing the filename Rownum in output? Allows the row number to be included in the output Rownum filename Field containing the row number Add files to result filesname Add files to resulting files name The fields to load from the file. Option Description Name The name of the imported field. Element File content or size Type The data type for this field Format The format mask Length The field length Precision The precision option depends on the field type, but only Number is supported; it returns the number of floating point digits Currency Symbol used to represent currencies Decimal A decimal point; this is either a dot or a comma Group A method of separating units of thousands in numbers of four digits or larger. This is either a dot or a comma. Trim type Type of trim: none, left, right, both Repeat Enter ‘Y’ if you want to reuse the value from the last non-empty row when the corresponding value in this row is empty. Enter ‘N’ to leave the row empty. Get fields Retrieve available fields based on the file contents Option Description Short filename field The field name that contains the filename without path information but with an extension. Extension field The field name that contains the extension of the filename. Path field The field name that contains the path in operating system format. Is hidden field The field name that contains if the file is hidden or not (boolean). Last modification field The field name that contains the last modification. Uri field The field name that contains the URI. Root uri field The field name that contains only the root part of the URI. Option Description Preview rows Preview the rows generated by this transform.","title":" Load file content in memory","component":"manual","version":"2.7.0","name":"loadfileinput","url":"/manual/latest/pipeline/transforms/loadfileinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File Tab","hash":"_file_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5},{"text":"Fields Tab","hash":"_fields_tab","id":6},{"text":"Additional output Tab","hash":"_additional_output_tab","id":7},{"text":"Buttons","hash":"_buttons","id":8}]},"280":{"id":280,"text":"The Mail transform uses an SMTP server to send an email using data from the pipeline fields. Hop Engine Spark Flink Dataflow This tab defines the sender, contact person, and recipients of a Hop-generated email. Option Description Transform name Name of the transform. Destination address The destination for the email. This can be a single address, a space-separated list of addresses , or an email alias for a distribution list Cc An email address, space-separated list of email addresses, or a distribution list to send a carbon copy of the email to. Bcc An email address, space-separated list of email addresses, or a distribution list to send a blind carbon copy of the email to. Sender name The name of the person you want the email to be from. Sender Address The email address of the person or account you want the email to be from. Reply to The email address that recipients will use if they reply to the email. Contact The name of the person to contact regarding the email’s contents. Contact phone The phone number of the contact person defined in the previous field. This tab contains details for your SMTP server, including authentication and encryption. Option Description SMTP server URL, hostname, or IP address of your SMTP server. Port Port number for your SMTP service. Use authentication If checked, you will be able to enter an SMTP username and password in the next few fields. Use XOAUTH2 If checked XOAuth2 will be used to authenticate with the server. Authentication user The SMTP username to use for server authentication. Authentication password The password for the previously defined SMTP username. Use secure authentication If checked you will be able to specify SSL or TLS encryption in the next field. Secure connection type Determines whether the server will use SSL or TLS encryption protocols. This tab determines the text content of the email. Option Description Include date in message? If checked, the date will be printed in the email body. Only send comment in mail body If checked, information about the pipeline will not be included. Use HTML format in mail body? If checked, this email will be in HTML format instead of plain text. Encoding Character encoding for the text of an HTML email. Manage priority If checked, enables the following two fields to set email priority and importance levels. Priority The priority level to assign in the email metadata. Importance The importance level to assign in the email metadata. Sensitivity This allows to set the \"Sensitivity\" header information to Normal, Personal, Private, Confidential. Subject The email subject line. Comment The email body. See also the option \"Attach content file\". This tab contains options for file attachments. Option Description Attach content file? If checked, you will use the next two fields to define which stream fields you want to use to create dynamic content of the mail message. Content fieldname The given field contains the field that points to a file that is loaded for the content. Internally this file content is put into is MimeBodyPart (using application/x-any). Filename fieldname This field sets the filename within the MimeBodyPart. Dynamic filenames? If checked, you will use the next two fields to define which stream fields you want to use to create dynamic filenames for your attachments. Filename field The stream field you want to use for dynamic filenames of attachments. This can also be a folder name, in which case you would use the Wildcard field to determine filenames. Wildcard field A regular expression that creates dynamic filenames for attachments. Filename/foldername A static name and location of a file to attach. Include subfolders If checked, will attach files in subfolders of the specified folder. Wildcard A regular expression that identifies a file to attach. Zip files If checked, multiple file attachments will be zipped into a single archive before attaching to the email. Is zip filename dynamic? If checked, the name of the zip archive will be determined by a data stream. Zipfilename field The data field to use for the name of the zip archive. Zip filename A static name for the zip archive. Zip files if size greater than Only archives file attachments if their combined size is above this number (in bytes). This tab contains options for embedded images in HTML emails. Option Description Filename The name and location of the file you want to embed in the email. Content ID A unique identifier for this file. Hop will generate one if you don’t specify one yourself. # The order that the attachment will be processed. Image The name of as added image. Content ID (field) The content ID of an added image.","title":" Mail","component":"manual","version":"2.7.0","name":"mail","url":"/manual/latest/pipeline/transforms/mail.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Addresses","hash":"_addresses","id":4},{"text":"Server","hash":"_server","id":5},{"text":"Email Message","hash":"_email_message","id":6},{"text":"Attached Files","hash":"_attached_files","id":7},{"text":"Embedded Images","hash":"_embedded_images","id":8}]},"281":{"id":281,"text":"The Mapping Input transform represents and describes the input for a Mapping pipeline (referred to as a Mapping). The data of this input will be provided by the parent pipeline (the pipeline that calls the mapping). Hop Engine Spark Flink Dataflow The fields described in this transform are those that you want to refer to in this pipeline. When you use the mapping you can map input to these field names to arrive at a re-usable part of a pipeline.","title":" Mapping Input","component":"manual","version":"2.7.0","name":"mapping-input","url":"/manual/latest/pipeline/transforms/mapping-input.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"282":{"id":282,"text":"The Mapping Output transform describes the output of the mapping pipeline to the parent pipeline (the pipeline calling the mapping). The data entering this transform will be streamed to the parent pipeline. Hop Engine Spark Flink Dataflow","title":" Mapping Output","component":"manual","version":"2.7.0","name":"mapping-output","url":"/manual/latest/pipeline/transforms/mapping-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2}]},"283":{"id":283,"text":"The Memory Group By transform builds aggregates in a group by fashion. This transform processes all rows within memory and therefore does not require a sorted input. However, it does require all data to fit into memory. When the number of rows is too large to fit into memory, use a combination of Sort Rows and Group By transforms. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline, Always give back a result row If you enable this option, the Group By transform will always give back a result row, even if there is no input row. This can be useful if you want to count the number of rows. Without this option you would never get a count of zero (0). The field that make up the group After retrieving fields using the Get Fields button, designate the fields to include in the group. See the Group be transform for more details. Aggregates All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Memory Group By","component":"manual","version":"2.7.0","name":"memgroupby","url":"/manual/latest/pipeline/transforms/memgroupby.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"284":{"id":284,"text":"The Merge Join transform performs a classic merge join between data sets with data coming from two different input transforms. This transform assumes your data is sorted on the join keys. Use Sort Rows transforms on the incoming streams to enforce sorting if necessary. Join options include INNER, LEFT OUTER, RIGHT OUTER, and FULL OUTER. Hop Engine Spark Flink Dataflow Option Description First Transform The first transform to read data from (left hand side of the join) Second Transform The second transform to read data from (right hand side of the join) Join type The join type that should be used; INNER, LEFT OUTER, RIGHT OUTER, and FULL OUTER Key Field The fields used for the join key, this only supports equal joins (key first transform = key second transform)","title":" Merge Join","component":"manual","version":"2.7.0","name":"mergejoin","url":"/manual/latest/pipeline/transforms/mergejoin.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"285":{"id":285,"text":"The Merge Rows (Diff) transform compares and merges rows between two data streams called Reference (previous data) and Compare (new data), adding a flag to each row. Hop Engine Spark Flink Dataflow This transform is useful for comparing data collected at two different times. For example, the source system of your data warehouse might not contain a timestamp of the last data update. You could use this transform to compare the two data streams and merge the dates and timestamps in the rows. Based on key fields and comparison fields, this transform merges reference rows with compare rows and creates merged output rows. A flag in each row indicates how the values were compared and merged. The possible flag values are: identical: The key was found in both rows, and the compared values are identical. changed: The key was found in both rows, but one or more compared values are different. new: The key was not found in the reference rows. deleted: The key was not found in the compare rows. If the row’s flag is identical or deleted, the merged output row is based on the reference row. If the flag is new or changed, the merged output row is based on the compare row. You can also send the merged and flagged rows to a subsequent transform in your pipeline, such as Switch-Case or Synchronize after merge. In the subsequent transform, you can use the flag field generated by Merge rows (diff) to control updates/inserts/deletes on a target table. Option Description Transform name Name of the transform. Reference rows origin Specify the transform that produces the reference rows. It’s a Stream with original rows (rows that you want to compare the new rows to). Compare rows origin Specify the transform that produces the compare rows. It’s a Stream with new rows Flag fieldname Specify the name of the flag field on the output stream. Keys to match Specify fields containing the keys on which to match. Click \"Get key fields\" to insert all of the fields from the reference rows Values to compare Specify fields contaning the values to compare. Click \"Get value fields\" to insert all of the fields from the compare rows. Key fields do not need to be repeated here. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Merge rows (diff)","component":"manual","version":"2.7.0","name":"mergerows","url":"/manual/latest/pipeline/transforms/mergerows.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":5}]},"286":{"id":286,"text":"The Metadata Input transform gives you access to the Hop Metadata items in the current project. It outputs all the metadata objects of all types unless one or more types are filtered. Hop Engine Spark Flink Dataflow You can specify the field names of the information you need, or not. You can also specify one or more type filters to limit the output of the transform. For example, you can select filter 'rdbms' to only see the relational database connection metadata in the output.","title":" Metadata Input","component":"manual","version":"2.7.0","name":"metadata-input","url":"/manual/latest/pipeline/transforms/metadata-input.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"287":{"id":287,"text":"Metadata injection allows Apache Hop users to provide the required metadata for a pipeline at runtime. This can significantly reduce the need to develop slightly different versions of what is basically the same pipeline. Hop Engine Spark Flink Dataflow The Metadata Injection transform (MDI transform) inserts data and transform properties into a pipeline that is dynamically configured at runtime. This is typically used to enhance reusability of a pipeline. E.g. Use Case: If you have 10 different CSV file definitions and don’t want to create 10 pipelines for each separate file, you can use ETL metadata injection. After the MDI transform is configured (mapping data and properties to the template/target pipeline), at run-time it will dynamically populate any non configured transform properties in the target pipeline. For example, in the template file, if you leave the Table input Database fields empty, and if configured in the MDI transform, it will populate the Table field and Stream fields dynamically. Basically, the ETL Metadata Injection transform overrules the default behavior for the named pipeline. Not all incoming streams need to have the same layout. It is perfectly OK to provide input to the metadata injection transform from different streams with different layouts. Sample files: Configure MDI: read-and-inject-metadata.hpl Read and fill in Template: read-file-template.hpl Read more on metadata injection Option Description Transform name Name of the transform. Pipeline Specify your template pipeline by entering in its path. Click Browse to display and enter the path details using the Virtual File System Browser. If you select a pipeline that has the same root path as the current pipeline, the variable ${Internal.Transform.Current.Directory} will automatically be inserted in place of the common root path. For example, if the current pipeline’s path is /home/admin/pipeline.hpl and you select a pipeline in the folder /home/admin/path/sub.hpl then the path will automatically be converted to ${Internal.Transform.Current.Directory}/path/sub.hpl. The ETL Metadata Injection transform features the two tabs with fields. Each tab is described below. This tab shows transforms and properties on the target/template file that will be modified at run-time. Map each property to a source that you would like to be populated dynamically. Option Description Target injection transform key Lists the available fields in each transform of the template pipeline that can be injected with metadata. Target description Describes how the target fields relate to their target transforms. Source transform Lists the transform associated with the fields to be injected into the target fields as metadata. Source field Lists the fields to be injected into the target fields as metadata. To specify the source field as metadata to be injected, perform the following transforms: In the Target injection transform key column, double-click the field for which you want to specify a source field. The Source field dialog box opens. Select a source field and click OK. Optionally, select Use constant value to specify a constant value for the injected metadata through one of the following actions: Manually entering a value. Using an internal variable to set the value (${Internal.transform.Unique.Count} for example). Using a combination of manually specified values and parameter values (${FILE_PREFIX}_${FILE_DATE}.txt for example). When specifying constant values for grouped lists of values like fields or filenames please note that there isn’t a good solution for that. Best practice is to use a Data Grid transform to inject a complete set of constant values. You can map those in this metadata injection transform. It will do its best to accommodate you by allowing you to inject a single row in the group with the specified constant value. For injecting metadata into the ETL Metadata Injection transform itself, the following exceptions apply: To inject a method for how to specify a field (such as by FILENAME), set a PIPELINE_SPECIFICATION_METHOD constant to the field of an input transform. You can then map the field as a source to the PIPELINE_SPECIFICATION_METHOD constant in the ETL Metadata Injection transform. The target field for the ETL Metadata Injection transform inserting the metadata into the original injection is defined by [GROUP NAME].[FIELD NAME]. For example, if the GROUP NAME is 'OUTPUT_FIELDS' and the FIELD NAME is 'OUTPUT_FIELDNAME', you would set the target field to 'OUTPUT_FIELDS.OUTPUT_FIELDNAME'. Option Description transform to read from (optional) Optionally, select a transform in your template pipeline to pass data directly to a transform following the ETL Metadata Injection transform in your current pipeline. Field name If transform to read from is selected, enter the name of the field passed directly from the transform in the template pipeline. Type If transform to read from is selected, select the type of the field passed directly from the transform in the template pipeline. Length If transform to read from is selected, enter the length of the field passed directly from the transform in the template pipeline. Precision If transform to read from is selected, enter the precision of the field passed directly from the transform in the template pipeline. Optional target file (hpl after injection) For initial pipeline development or debugging, specify an optional file for creating and saving a pipeline of your template after metadata injection occurs. The resulting pipeline will be your template pipeline with the metadata already injected as constant values. Streaming source transform Select a source transform in your current pipeline to directly pass data to the Streaming target transform in the template pipeline. Streaming target transform Select the target transform in your template pipeline to receive data directly from the Streaming source transform. Run resulting pipeline Select to inject metadata and run the template pipeline. If this option is not selected, metadata injection occurs, but the template pipeline does not run. Troubleshooting Enter a pipeline filename in \"Optional target file (hpl after injection)\" so that a file will be generated after injection. This pipeline will contain all the properties after injection and can be viewed and executed for testing.","title":" Metadata Injection","component":"manual","version":"2.7.0","name":"metainject","url":"/manual/latest/pipeline/transforms/metainject.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4},{"text":"General","hash":"_general","id":5},{"text":"Inject Metadata Tab","hash":"_inject_metadata_tab","id":6},{"text":"Injecting Metadata into the ETL Metadata Injection transform","hash":"_injecting_metadata_into_the_etl_metadata_injection_transform","id":7},{"text":"Options Tab","hash":"_options_tab","id":8}]},"288":{"id":288,"text":"The Metadata Structure Of Stream transform produces the metadata structure of the input fields of this transform as output. Before producing this output the transform reads and discards (or eats) all input rows. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Output row count Include the number of rows eaten by this transform in the output Field for row count The name of the field containing the number of rows eaten Include position field? Include the field position in the transform’s output Field for position The name of the field containing position Include field name field? Include the field name in the transform’s output Field for field name The name of the field containing field’s name Include comment field? Include the field comment in the transform’s output Field for comments The name of the field containing the comment Include type field? Include the field data type in the transform’s output Field for type The name of the field containing the data type Include format mask field? Include the format mask field containing the format mask used on the data Field for format mask The name of the field containing the format mask Include length field? Include the field length in the transform’s output Field for length The name of the field containing the data length Include precision field? Include the field precision in the transform’s output Field for precision The name of the field containing precision (if value is numeric) Include origin field? Include the field origin in the transform’s output Field for origin The name of the field containing field’s origin","title":" Metadata structure of stream","component":"manual","version":"2.7.0","name":"metastructure","url":"/manual/latest/pipeline/transforms/metastructure.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"289":{"id":289,"text":"The MonetDB Bulk Loader transform bulk loads data to MonetDB. This significantly speeds up data loading to MonetDB. Hop Engine Spark Flink Dataflow Field Description Transform name Specify the unique name of the MongoDB Output transform in the pipeline. Connection Select your MonetDB database connection This tab contains the destination settings, buffer size and location for the logfile. Field Description Target Schema Specify the database schema that has to be used. Target Table Specify the database table, use the Browse button next to this field to use a menu to select the table and schema Buffer size (rows) Specify how many rows will be kept in memory before transferring to MonetDB Log file Specify the location for the Bulk command logs returned from MonetDB Truncate table Remove all data from the destination table before loading the data. Fully quote all SQL statements Forces quotes around all objects when executing This tab contains information about the temporary files that are generated to load the data. Field Description Field separator This is the separator that will be used in the Bulk copy command, it is not allowed to have this field in the input data. Field enclosure The enclosure character used around values. Null values represented Null values will be converted to this string, this allows to differentiate empty strings and null values. Encoding File encoding used when generating the files for the copy statement. This tab contains the source to target mapping. Field Description Target table field Field containing the name of the field in the target table Incoming stream field Field containing the value we want to insert in target table Format is ok Set to Y if the incoming stream’s field is the correct format according to the target datatatype. NOTE: This setting is evaluated only when Lazy Conversion is applied. For example: imagine you are getting values from a text file, your incoming data contains numbers or dates and Lazy Conversion is enabled in the input transform. In this case, the data is not transformed internally to the target data type and is managed as a String by Hop. By setting this flag to Y, we are saying Hop that the incoming data’s value is already in a format clearly understandable by the target database according to the target datatype.","title":" MonetDB Bulk Loader","component":"manual","version":"2.7.0","name":"monetdbbulkloader","url":"/manual/latest/pipeline/transforms/monetdbbulkloader.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"General Settings tab","hash":"_general_settings_tab","id":5},{"text":"MonetDB Settings tab","hash":"_monetdb_settings_tab","id":6},{"text":"Output Fields tab","hash":"_output_fields_tab","id":7}]},"290":{"id":290,"text":"The MongoDB Delete transform enables you to delete documents or records from a collection within MongoDB. For additional information about MongoDB, see the MongoDB documentation. Hop Engine Spark Flink Dataflow Transform name : Specify the unique name of the MongoDB Input transform in the pipeline. Field Description MongoDB connection the MongoDB connection to use for the MongoDB Delete transform. Collection Name of the collection to delete data from. Click Get collections to populate the drop-down menu with a list of collections within the database. Number of retries for write operations The number of retries for write operations Delay (in seconds) between retry attempts Delay (in seconds) between retry attempts use JSON query: when disabled (default), the transform deletes documents based on key/value pair comparisons. The table requires the following fields: Mongo document path: the document path to delete Comparator: =,<>,,,,>=,BETWEEN,IS NULL,IS NOT NULL Incoming field 1: a first comparison stream field Incoming fields 2: a second comparison stream field (for use with BETWEEN) when enabled: a delete query is passed to MongoDB for deletion. execute for each row: pass the delete query to the database for each incoming row Delete based on document paths and stream fields (use JSON query disabled): Mongo document path Comparator Incoming field 1 Incoming field 2 name = lastname firstname = firstname Delete based on JSON query (use JSON query enabled): `{$or: [{\"name\": \"${NAME1}\"},{\"name\": \"${NAME2}\"}, {\"name\": \"${NAME3}\"} ]}`","title":" MongoDB Delete","component":"manual","version":"2.7.0","name":"mongodbdelete","url":"/manual/latest/pipeline/transforms/mongodbdelete.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Delete options tab","hash":"_delete_options_tab","id":5},{"text":"Delete query","hash":"_delete_query","id":6},{"text":"Delete query examples:","hash":"_delete_query_examples","id":7}]},"291":{"id":291,"text":"The MongoDB Input transform enables you to retrieve documents or records from a collection within MongoDB. For additional information about MongoDB, see the MongoDB documentation. Hop Engine Spark Flink Dataflow Transform name : Specify the unique name of the MongoDB Input transform in the pipeline. Preview button: Display the rows generated by this transform. Enter the maximum number of records that you want to preview, then click OK. The preview data appears in the Examine preview data window. The Input options tab enables you to specify which connection and collection you want to retrieve information from. Enter the following information in the Input options fields: Option Definition MongoDB Connection the MongoDB connection to use for this MongoDB Input transform. Collection Name of the collection to retrieve data from. Click Get collections to populate the drop-down menu with a list of collections within the database. The Query tab enables you to refine read requests. This tab operates in two different query modes: Query expression mode (default) Aggregation pipeline specification mode. The Query is aggregation pipeline option toggles between these two modes. The Query expression uses MongoDB’s JSON-like query language with query operators to perform query operations. The Aggregation pipeline specification field uses MongoDB’s aggregation framework to transform and combine documents in a collection. An aggregation pipeline connects several pipeline expressions together, with the output of the previous expression becoming the input for the next. Enter the following information in the Query fields: Fields/Option Definition Query expression (JSON) Enter a query expression in this field to limit the output. Aggregation pipeline specification (JSON) Select the Query is aggregation pipeline option to display the Aggregation pipeline specification (JSON) field. Then enter a pipeline expression to perform aggregations or selections. The method name, including the collection name of the database you selected in the Input Options tab, appears after the label for this field. Query is aggregation pipeline Select this option to use the aggregation pipeline framework. Execute for each row Select this option to perform the query on each row of data. Fields expression (JSON) Enter an argument to control the projection (fields to return) from a query. If empty, all fields are returned. This field is only available for query expressions. Use the Fields tab to define properties for exported fields. The Fields tab operates in two different modes: including all fields in a single JSON field including selected fields in the output. If you store the output in a single JSON field, you can parse this JSON using the JSON Input transform, or by using a User Defined Java Class transform. Note: All fields in the Fields tab except the Name of JSON output field are inactive when the Output single JSON field is selected. When the Output single JSON field is not selected, the Name of JSON output field is inactive. General options: The Get fields button: Click it to generate a sample set of documents. You can edit the list of field names, paths, and data type for each field in the sample. Output single JSON field: Specify that the query results in a single JSON field with the String data type (default). Name of JSON output field: Specify the field name of containing the JSON output from the server. Enter the following information in the table if you want to output distinct fields: Option Definition # The order of this entry in the list. Name The name of the field based on the value in the Path field. The name that appears here maps the name of the field as it appears in the pipeline with the field that appears in the MongoDB database. You can edit the name. Path Indicates the JSON path of the field in MongoDB. If the path shown is an array, you can specify a specific element of the array by passing it the key value in the bracketed part of the array. For example: $.emails[0] indicates that you want the result to display the first value in the array. To display all array values, use the asterisk as the key, like this $.email[*]. If the array contains records, and not just strings, you can specify that you want to display the record like this: $.emails[].sender. Type Indicates the data type. Indexed values Specify a comma-separated list of legal values for String fields. When you specify values in this field, the Hop indexed data type is applied to the data. If no values are specified, the String data type is applied. Usually, you will only need to modify this field if you are using Weka metadata for nominal fields. Sample: array min: max index Indicates minimum and maximum values for the index in the sampled documents. Sample: #occur/#docs Indicates how often the field occurs and the number of documents processed. Sample: disparate types Indicates if different data types populate the same field in the sampled documents. When several documents are sampled and the same field contain different data types, the Sample: disparate types field is populated with a Y and the Type field displays the String data type. The Hop type for the field is set to the String data type, for different output value types. The following sections contain examples of query expressions and aggregate pipelines. MongoDB allows you to select and filter documents in a collection using specific fields and values. The MongoDB Extended JSON documentation details how to use queries. Apache Hop supports only the features discussed on this page. The following table displays some examples of the syntax and structure of the queries you can use to request data from MongoDB: Query expression Description { name : \"MongoDB\" } Queries all values where the name field has a value equal to MongoDB. { name : { '$regex' : \"m.*\", '$options' : \"i\" } } Uses a regular expression to find name fields starting with m, case insensitive. { name : { '$gt' : \"M\" } } Searches all strings greater than M. { name : { '$lte' : \"T\" } } Searches all strings less than or equal to T. { name : { '$in' : [ \"MongoDB\", \"MySQL\" ] } } Finds all names that are either MongoDB or MySQL (Reference). { name : { '$nin' : [ \"MongoDB\", \"MySQL\" ] } } Finds all names that are not either MongoDB or MySQL, or where the field is not set . { created_at : { $gte : { $date : \"2014-12-31T00:00:00.000Z\" } } } Finds all created_at documents that are greater than or equal to the specified UTC date. { $where : \"this.count == 1\" } Uses JavaScript to evaluate a condition. { $query: {}, $orderby: { age : -1 } } Returns all documents in the collection named collection sorted by the age field in descending order. MongoDB allows you to select and filter documents using the aggregation pipeline framework. The Aggregation page in the MongoDB documentation provides additional examples of function calls. The following table displays some examples of the query syntax and structure you can use to request data from MongoDB: Query expression Description { $match : {state : \"FL\", city : \"ORLANDO\" } }, {$sort : {pop : -1 } } Returns all fields from all documents where the state field has a value of FL and the city field has a value of ORLANDO. The returned documents will be sorted by the pop field in descending order. { $group : { _id: \"$state\"} }, { $sort : { _id : 1 } } Returns one field named _id containing the distinct values for state in ascending order. This is similar to the SQL statement SELECT DISTINCT state AS _id FROM collection ORDER BY state ASC. { $match : {state : \"FL\" } }, { $group: {_id: \"$city\" , pop: { $sum: \"$pop\" } } }, { $sort: { pop: -1 } }, { $project: {_id : 0, city : \"$_id\" } } Returns all documents where the state field has a value of FL, aggregates all values of pop for each city, sorts by population descending, and returns one field named city. { $unwind : \"$result\" } Peels off the elements of an array individually, and returns one document for each element of the array.","title":" MongoDB Input","component":"manual","version":"2.7.0","name":"mongodbinput","url":"/manual/latest/pipeline/transforms/mongodbinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Input options tab","hash":"_input_options_tab","id":5},{"text":"Query tab","hash":"_query_tab","id":6},{"text":"Fields tab","hash":"_fields_tab","id":7},{"text":"Examples","hash":"_examples","id":8},{"text":"Query expression","hash":"_query_expression","id":9},{"text":"Aggregate pipeline","hash":"_aggregate_pipeline","id":10}]},"292":{"id":292,"text":"The MongoDB Output transform can output data to a MongoDB database collection. For additional information about MongoDB, see the MongoDB documentation. Hop Engine Spark Flink Dataflow Transform name : Specify the unique name of the MongoDB Output transform in the pipeline. The Output options tab provides controls for inserting data into a MongoDB collection. If the specified collection does not exist, it is created before a document is inserted. Enter the following information in the fields on this tab: Option Description MongoDB Connection the MongoDB connection to use for this MongoDB Output transform. Collection Specify the target collection for the output. When a valid hostname and port has been set, you can click Get Collections to retrieve the names of existing collections within a selected database. If the specified collection does not exist, it will be created before data is inserted. Batch insert size Specify the batch size for bulk insert operations. The default value is 100 rows. Truncate collection Select to delete existing data in the target collection before inserting new data. Update Sets the update write method for the specified database and collection. The Upsert and Modifier update options are not available unless the Update field is selected. Upsert Select to change the write method from insert to upsert. The upsert method replaces a matched record with an entire new record based on all the incoming fields specified in the Mongo document fields tab. A new record is created if match conditions fail for an update. Multi-update Select to update all matching documents for each update or upsert operation. Modifier update Select to enable modifiers ($ operators) to be used to modify individual fields within matching documents. All matching documents are updated when the Multi-update option is selected. To update more than one matching document, select Modifier update and Upsert. Selecting Modifier update, Upsert, and Multi-update applies updates to all matching documents, instead of just the first. Number of retries for write operations Specify the number of times that a write operation is attempted. Delay, in seconds, between retry attempts Specify the number of seconds to wait before the next retry. Use the Mongo document fields tab to define how field values coming into the transform are written to a Mongo document. The Modifier policy column controls when the execution of a modifier operation affects a particular field. You can use modifier policies when the data for one Mongo document is split over several incoming Hop rows or when it is not possible to execute different modifier operations that affect the same field simultaneously. There are 2 helper buttons you can use: * Get fields :Populates the Name column of the table with the names of the incoming fields. * Preview document structure : Opens a dialog showing the structure that will be written to MongoDB in JSON format. Enter the following information in the fields on this tab: Column Field Description Name Names of the incoming fields. Mongo document path The hierarchical path to fields in a document in dot notation format. Use field name Whether to use the incoming field name as the final entry in the path. The values are Y (use incoming field names) and N (do not use incoming field names). When set to Y, a preceding period (.) is assumed. NULL values Specifies whether to insert null values in the database. The values are: - Insert NULL - Ignore JSON Indicates the incoming value is a JSON document. Match field for update Indicates whether to match a field when performing an upsert operation. The first document in the collection that matches all fields tagged as Y in this column is replaced with the new document constructed with incoming values for all the defined field paths. If a matching document does not exist, then a new document is inserted into the collection. Modifier operation Specify in-place modifications of existing document fields. The modifiers are: - N/A - $set : Sets the value of a field. - $inc : Sets the value of a field if the field does not exist. If the field exists, increases (or decreases, with a negative value) the value of a field. - $push : Sets the value of a field if the field does not exist. If the field exists, appends the value of a field. - $ : (the positional operator for matching inside of arrays). Modifier policy Controls when execution of a modifier operation affects a field. The values are: - Insert&Update : The operation is executed whether or not a match exists in the collection (default). The Insert&Update modifier policy (upsert) allows you to specify fields to match when performing an upsert operation. Upsert only replaces the first matching document. Modifier upserts can be used to replace certain field values in multiple documents. - Insert : The operation is executed on an insert only (when the match conditions fail) - Update : The operation is executed when match conditions succeed. Here is an example of how you can define a document structure with an arbitrary hierarchy. Use the following input data and document field definitions to create the example document structure in MongoDB: first, last, address, age Bob, Jones ,\"13 Bob Street\", 34 Fred, Flintstone, \"10 Rock Street\",50 Zaphod, Beeblebrox, \"Beetlejuice 1\", 356 Noddy,Puppet,\"Noddy Land\",5 Name Mongo document path Use field name NULL values JSON Match field for update Modifier operation Modifier policy first top1 Y N N N/A Insert&Update last array[O] Y N N N/A Insert&Update address array[O] Y N N N/A Insert&Update age array[O] Y N N N/A Insert&Update { \"top1\" : { \"first\" : \"\" }, \"array\" : [ { \"last\" : \"\" , \"address\" : \"\"}], \"age\" : \"\" } Use the Create/drop indexes tab to create and drop indexes on one or more fields. Unless unique indexes are being used, MongoDB allows duplicate records to be inserted. Indexing is performed after all rows have been processed by the transform. You can use the Show indexes button to display a list of existing indexes. Enter the following information in the fields in this tab: Field Description Index fields Specify a single index (using one field) or a compound index (using multiple fields). Compound indexes are specified by a comma-separated list of paths. Use dot notation to specify the path to a field to use in the index. An optional direction indicator can be specified: 1 for ascending or -1 for descending. Index opp Specify whether to create or drop an index. Unique Specify whether to index only fields with unique values. Sparse Specify whether to index only documents that have the indexed field. The following options defines the creation of a compound index of the \"first\" and \"age\" fields in ascending order: Index fields Index opp Unique Sparse top1.first,age Create N N","title":" MongoDB Output","component":"manual","version":"2.7.0","name":"mongodboutput","url":"/manual/latest/pipeline/transforms/mongodboutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"Output options tab","hash":"_output_options_tab","id":5},{"text":"Mongo document fields tab","hash":"_mongo_document_fields_tab","id":6},{"text":"Example","hash":"_example","id":7},{"text":"Input data","hash":"_input_data","id":8},{"text":"Document field definitions","hash":"_document_field_definitions","id":9},{"text":"Document structure","hash":"_document_structure","id":10},{"text":"Create/drop indexes tab","hash":"_createdrop_indexes_tab","id":11},{"text":"Create/drop indexes example","hash":"_createdrop_indexes_example","id":12}]},"293":{"id":293,"text":"The Multiway Merge Join transform joins input data from multiple streams. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Join Type Type of join (INNER or FULL OUTER). All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Multiway Merge Join","component":"manual","version":"2.7.0","name":"multimerge","url":"/manual/latest/pipeline/transforms/multimerge.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"294":{"id":294,"text":"The Neo4j Cypher transform allows you to execute any Cypher through the Neo4j Bolt protocol using the Java driver. Both reading, writing or both are supported. You can also call procedures and get the output. Hop Engine Spark Flink Dataflow Option Description Get Cypher from input field instead of hard coding statements you can actually have them created in for example a bit of JavaScript. Then each row can contain a different statement to be executed by this transform. Cypher the cypher statement to execute. You can use variables substitution (for example ${MY_VARIABLE}) or parameter substitution (for example {MY_PARAMETER}). Note the missing $. Parameters can be specified in the next section of the options. Use UNWIND to collect parameter values? This option collects all the parameters in a map, adds all the row maps together in a list and passes this to the UNWIND statement. Consider this example: UNWIND $customers AS customer CREATE (c:Customer { id : customer.id, name : customer.name }) we pick up customer.id and customer.name as parameters. The customers parameter comes from the name of the unwind map. Name of UNWIND values map the name of the map containing all the rows and values for the UNWIND statement. Parameters You can pick any Neo4j approved parameter name (without spaces and so on), the field to use and the Neo4j data type to convert to. Returns this transform can return one or more rows of data. You can specify the return values here. For every input row you can then have 0, 1 or more output rows. If you do not specify any return values the output will simply be the same as the input.","title":" Neo4j Cypher","component":"manual","version":"2.7.0","name":"neo4j-cypher","url":"/manual/latest/pipeline/transforms/neo4j-cypher.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Notable options","hash":"_notable_options","id":3}]},"295":{"id":295,"text":"The Neo4j Generate CSV transform writes files for nodes and relationships to the import folder for use with Neo4j’s neo4j-import tool. Hop Engine Spark Flink Dataflow Option Default Description Transform name Neo4j Generate CSVs Graph field - The field in this pipeline that contains the graph data (Graph data type) Base folder (below import/ folder) /var/lib/neo4j the folder to write the nodes and relationships types to CSV files prefix prefix prefix to apply to the generated CSV files Node/Relationships Uniqueness strategy None * None: don’t handle uniqueness while generating CSVs * First: if duplicates are found, keep the first occurrence * Last: if duplicates are found, keep the last occurrence Please note that primary key of all nodes written to a CSV file needs to be unique. The uniqueness strategy used in this transform is simple in nature and loads everything in memory. Because of this you can consider using a Sort transform to force uniqueness beforehand. Filename field filename field that contains the filename for the CSV files to be generated File type field fileType field that contains the file type for the CSV files to be generated","title":" Neo4j Generate CSVs","component":"manual","version":"2.7.0","name":"neo4j-gencsv","url":"/manual/latest/pipeline/transforms/neo4j-gencsv.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"296":{"id":296,"text":"The Neo4j Get Logging Info transform queries the Neo4j logging graph and retrieves logging information. This transform uses the NEO4J_LOGGING_CONNECTION. Check the Neo4j perspective for more details. Hop Engine Spark Flink Dataflow Option Description Transform name the name for this transform in your pipeline startOfPipelineDelta Start of the date range for the given pipeline endOfPipelineDelta End of the data range for the given pipeline startOfWorkflowDelta Start of the date range for the given workflow endOfWorkflowDelta End of the date range for the given workflow","title":" Neo4j Get Logging Info","component":"manual","version":"2.7.0","name":"neo4j-getloginfo","url":"/manual/latest/pipeline/transforms/neo4j-getloginfo.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"297":{"id":297,"text":"The Graph Output transform lets you map input fields automatically to a graph model. The algorithm used to update your graph takes null values for fields mapped to primary properties of nodes into account. These will not merge on these nodes, nor will it create or update relationships to these nodes. Hop Engine Spark Flink Dataflow Updates across unknown nodes ()--() are not supported Try a modeler like Cypher Workbench or Arrows and import the result into a Graph Model. Keep your models as simple as possible. Make sure that every defined node has a primary key field Limit yourself to one primary key field per node Make sure that every node primary key has an index. Use the provided button in the graph model editor to generate the Neo4j Index and Constraint actions which will handle this for you. Option Description Transform name the name for this transform in the pipeline Neo4j connection the Neo4j connection to write the graph to Graph model the Neo4j graph model to use Batch size (rows) batch size to use for writing data to Neo4j Create indexes? create Neo4j indexes before running this transform Return graph data? return graph data returned by Neo4j Graph output field name the name of the field to write the graph data to (if Return graph data? is enabled) Validate against model? validate the data against the model. This will check if indexes are created for a field that is flagged as primary/indexed, see if a property flagged as mandatory is available when a node is updated and so on. Uniqueness is best validated by a constraint on the property. Use the provided button to generate the \"Neo4j Constraint\" action. Allow out of order updates? If out of order updates are allowed, this transform generates unwind statements. Otherwise, standard batch updates are used. The updates are grouped per distinct generated cypher statement. Field to property mappings tab On this tab you can specify where you want the input fields to end up in the graph. Based on your selections for this mapping the appropriate Cypher Merge statements will be executed. You can map fields to node and relationship properties. For the very specific cases when you want to create relationships between 2 nodes with the same label (self relationships) you can specify to which node your mapping goes: the source or target node. Field to relationship mappings tab Sometimes you want to select a relationship in your graph model based on input data. Here are the 4 different types of relationship mappings you can apply to steer this behavior: * No mapping : the line is ignored * Do not update relationships between specified nodes: you can specify the source and target node labels between you don’t want to update any relationships * Update specific relationship using field value: You can specify the field to look at and the value to consider for the relationship you want to select. * Update all relationships between the specified nodes (Default): all the relationships between the specified source and target node, as defined in the graph model are updated (merged and properties updated). Node label mappings tab In case you want to select specific labels from the ones specified in the graph model you can create mapping entries in this tab. Here are the node mapping types: * Select all defined labels (default): when matching/merging nodes all the labels from the graph model are selected. * Use a field value to select a specific label: for the specified node we look at the input field you like and if it matches the value the label is selected to match/merge on. * Add the specified label if a field contains a specific value: for the node that is selected, set the selected label if a field contains a specific value. * Select the first label: for the specified node we only use the first label from the graph model to match/merge on.","title":" Neo4j Graph Output","component":"manual","version":"2.7.0","name":"neo4j-graphoutput","url":"/manual/latest/pipeline/transforms/neo4j-graphoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Limitations","hash":"_limitations","id":3},{"text":"Modeling tips","hash":"_modeling_tips","id":4},{"text":"Execution tips","hash":"_execution_tips","id":5},{"text":"Notable options","hash":"_notable_options","id":6}]},"298":{"id":298,"text":"The Neo4j Import transform runs an import command using the provided CSV files. Check the neo4j-admin-import docs for full details. Hop Engine Spark Flink Dataflow Option Default Header Transform name the name to use for this transform in the pipeline Filename field the field to get the file name to import from Fiel type field the field to get the file type to import from Database filename neo4j the Neo4j database to import to neo4j-admin command path neo4j-admin the (full) path to the neo4j-admin command Base folder (below import/ folder) the folder to read the import files from Verbose output Enable verbose output. High IO true Ignore environment-based heuristics, and specify whether the target storage subsystem can support parallel IO with high throughput. Typically this is true for SSDs, large raid arrays and network-attached storage. Cache on heap? false Determines whether or not to allow allocating memory for the cache on heap. If false, then caches will still be allocated off-heap, but the additional free memory inside the JVM will not be allocated for the caches. Use this to have better control over the heap memory. Ignore Empty Strings false Determines whether or not empty string fields, such as \"\", from input source are ignored (treated as null). Ignore extra columns? false If unspecified columns should be ignored during the import. Legacy style quoting? false Determines whether or not backslash-escaped quote e.g. \\\" is interpreted as inner quote. Fields can have multi-line data? false Determines whether or not fields from input source can span multiple lines, i.e. contain newline characters. Setting --multiline-fields=true can severely degrade performance of the importer. Therefore, use it with care, especially with large imports. Normalize types? false Determines whether or not to normalize property types to Cypher types, e.g. int becomes long and float becomes double. Skip logging bad entries during import? Determines whether or not to skip logging bad entries detected during import. Skip bad relationships? false Determines whether or not to skip importing relationships that refer to missing node IDs, i.e. either start or end node ID/group referring to node that was not specified by the node input data. Skipped relationships will be logged, containing at most the number of entities specified by --bad-tolerance, unless otherwise specified by the --skip-bad-entries-logging option. Skip duplicate nodes? false Determines whether or not to skip importing nodes that have the same ID/group. In the event of multiple nodes within the same group having the same ID, the first encountered will be imported, whereas consecutive such nodes will be skipped. Skipped nodes will be logged, containing at most the number of entities specified by --bad-tolerance, unless otherwise specified by the --skip-bad-entries-logging option. Trim strings? false Determines whether or not strings should be trimmed for whitespaces. Bad tolerance 1000 Number of bad entries before the import is considered failed. This tolerance threshold is about relationships referring to missing nodes. Format errors in input data are still treated as errors. Max memory false Maximum memory that neo4j-admin can use for various data structures and caching to improve performance. Values can be plain numbers such as 10000000, or 20G for 20 gigabyte. It can also be specified as a percentage of the available memory, for example 70%. Read buffer size 4M Size of each buffer for reading input data. It has to at least be large enough to hold the biggest single value in the input data. Value can be a plain number or byte units string, e.g. 128k, 1m. Processors 90% Max number of processors used by the importer. Defaults to the number of available processors reported by the JVM. There is a certain amount of minimum threads needed, so for that reason there is no lower bound for this value. For optimal performance, this value shouldn’t be greater than the number of available processors.","title":" Neo4j Import","component":"manual","version":"2.7.0","name":"neo4j-import","url":"/manual/latest/pipeline/transforms/neo4j-import.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2}]},"299":{"id":299,"text":"The Neo4j Output transform allows you to do high performance updates in one node, two nodes or two nodes and a relationship. The transform generates the required Cypher statements with accompanying parameters. Hop Engine Spark Flink Dataflow You can update one node or two nodes and a relationship. Nodes and relationships can have properties and the appropriate MERGE statements will be generated based on the information you provided. Make use of the \"Get fields\" buttons on the right hand side of the dialog to prevent you from having to type too much. You can get one node labels from a list of fields or you can use static values (with optionally variables). If you specify both the static value will be used if the field value is null. A label will not be used for the node if the label is null or empty. Option Description Batch size for better performance the transform will group records together in a single transaction Use CREATE instead of MERGE this bypasses any lookup and is faster. Create indexes creates unique field constraints for all Primary properties in the nodes to make sure performance stays good when dealing with merges and lookup of nodes for relationships. NOTE: Please consider only using this when doing prototyping and testing. It’s better to put the index creation statements explicitly in a Cypher Script action to make sure you never forget it even when moving to a new database.","title":" Neo4j Output","component":"manual","version":"2.7.0","name":"neo4j-output","url":"/manual/latest/pipeline/transforms/neo4j-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Labels","hash":"_labels","id":4},{"text":"Notable options","hash":"_notable_options","id":5}]},"300":{"id":300,"text":"The Neo4j Split Graph transforms splits the nodes and relationships of a graph data type. Hop Engine Spark Flink Dataflow Option Default Description Transform name Neo4j Split Graph the name to use for this transform in the pipeline Graph field graph the graph field in the pipeline Type output field (Node/Relationship) type the field that will contain the type of field (Node or Relationship) ID outputfield id the output field to write the ID to Property set output field propertySet the field name to write the property set for a node or relationship to","title":" Neo4j Split Graph","component":"manual","version":"2.7.0","name":"neo4j-split-graph","url":"/manual/latest/pipeline/transforms/neo4j-split-graph.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"301":{"id":301,"text":"The Null If transform sets the value of a certain field to null (empty) if the provided value equals a value specified in this transform. You can add all fields from the input stream(s) using Get Fields. Hop Engine Spark Flink Dataflow All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Null If","component":"manual","version":"2.7.0","name":"nullif","url":"/manual/latest/pipeline/transforms/nullif.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":3}]},"302":{"id":302,"text":"The Number Range transform creates groups numerical values into a number of predefined ranges. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Input field Designate the field that gets checked for the lower and upper boundaries. Output field Designate the output field name that gets filled with the value depending of the input field. Default value Value to return if there are no matches within the ranges specified. Ranges Designated the upper and lower bound of a range. Lower Bound Designated the minimum value of a range. Upper Bound Designate the upper value of a range. Value Designated a name for the value.","title":" Number range","component":"manual","version":"2.7.0","name":"numberrange","url":"/manual/latest/pipeline/transforms/numberrange.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"303":{"id":303,"text":"This transform allows you to bulk load data to an Oracle database. It will write the data it receives to a proper load format and will then invoke Oracle SQL*Loader to transfer it to the specified table. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Connection Name of the database connection on which the target table resides. Target schema The name of the Schema for the table to write data to. Target table Name of the target table. Sqldr path Full path to the sqlldr utility (including sqlldr). Load method The SQL*Loader method to use when loading data: * Automatic load (at the end) will start up sqlldr after receiving all input with the specified arguments in this transform. * Manual load will only create a control and data file, this can be used as a back-door: you can have Hop generate the data and create e.g. your own control file to load the data (outside of this transform). * Automatic load (on the fly) will start up sqlldr and pipe data to sqlldr as input is received by this transform. Load action Append, Insert, Replace, Truncate. These map to the sqlldr action to be performed. Maximum errors The number of rows in error after which sqlldr will abort. This corresponds to the \"ERROR\" attribute of sqlldr. Commit The number of rows after which to commit, this corresponds to the \"ROWS\" attribute of sqlldr which differs between using a conventional and a direct path load. Bind Size Corresponds to the \"BINDSIZE\" attribute of sqlldr. Read Size Corresponds to the \"READSIZE\" attribute of sqlldr. Control file The name of the file used as control file for sqlldr. Data file The name of the data file in which the data will be written. Log file The name of the log file (optional). Bad file The name of the bad file that will contain the rejected records (optional). Discard file The name of the discard file that will contain filtered records that did not match any record-selection criteria specified in the control file (optional). Encoding Encodes data in a specific encoding, any valid encoding can be chosen besides the one in the drop down list. Oracle Character Set The Oracle character set to use. Alternate Record Terminator Specify this value to override SQL*Loader''s default record terminator. Direct path Switch on direct path loading (corresponds to DIRECT=TRUE in sqlldr). Erase cfg/dat files after use This option causes the control and data files to be erased after use. Fail on warning This option causes the transform to fail on load warnings. Fail on error This option causes the transform to fail on load errors. Load data in parallel This option causes data to be loaded in parallel. Parallel loading is only possible with a direct path option. Fields to load This table contains a list of fields to load data from, properties include: * Table field: Table field to be loaded in the PostgreSQL table; * Stream field: Field to be taken from the incoming rows; * Date mask: Either \"Pass through, \"Date\" or \"DateTime\", determines how date/timestamps will be loaded in Oracle. All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" Oracle Bulk Loader","component":"manual","version":"2.7.0","name":"orabulkloader","url":"/manual/latest/pipeline/transforms/orabulkloader.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"304":{"id":304,"text":"The Parquet File Input transform reads (primitive) values from an Apache Parquet file. For more information on this see: Apache Parquet. Hop Engine Spark Flink Dataflow Notes: To support reading from any location through Apache VFS each file is loaded into memory (one at a time). Make sure to allocate enough memory to allow this. Long values can be de-serialized to Dates if they are EPOC: milliseconds since 1970-01-01 00:00:00.000 Parquet Binary fields are considered to be Hop Strings but you can read them as Hop Binary. All input values are passed to the output INT96 is converted to the Hop Binary data type. Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Filename field Specify the input field. Use a transform like Get File Names to obtain file names. Any supported file location is fine. Fields In this table you can specify all the fields you want to obtain from the parquet files as well as their desired Hop output type. Get fields button With this button you can select a parquet file from which we’ll read the schema to populate the Fields grid.","title":" Parquet File Input","component":"manual","version":"2.7.0","name":"parquet-file-input","url":"/manual/latest/pipeline/transforms/parquet-file-input.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"305":{"id":305,"text":"The Parquet File Output transform writes data into the Apache Parquet file format. For more information on this see: Apache Parquet. Hop Engine Spark Flink Dataflow Notes: The date optionally referenced in the output file name(s) will be the start of the pipeline execution. Hop Date types are serialized as EPOC: milliseconds since 1970-01-01 00:00:00.000 Strings are written as binary in UTF-8 Compression of data into columnar format is being done in memory. This happens when all rows are written. To not run out of memory make sure to specify a split size. Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Base file name Specify the base filename. This is composed of where you want to write the Parquet file to as well as the start of the filename. Examples: Write to Amazon AWS S3 : s3://my-bucket-name/transactions Write to a local folder : /my/folder/customer-data Extension This is the extension of the file. Usually this is simply snappy Include date? Check this box if you want to include the date in the filename with mask yyyMMdd Include time? Check this box if you want to include the time in the filename with mask HHmmss Include date-time-format? Check this box if you want to include a specific custom date-time format in the filename Include transform copy number? Enable this option if you run this transform in multiple copies to not have multiple threads write to the same file. The copy number is formatted with mask 00 Split into parts and include number? Enable this option if you want to split the output into multiple parts. Specify a split size larger than 0 and this is then the number of rows per file. The file part (split) number will be included in the filename to make sure that the same file is not being overwritten. The split number is formatted with mask 0000 Compression codec Here you can indicate which compression codec you want to use. The default is SNAPPY for Apache Snappy compression. Version Choose the protocol version of Parquet (1.0 or 2.0) Row group size The amount of rows in a group Data page size The data page size on a 1kB boundary (default is 1048576) Dictionary page size The data dictionary page size on a 1kB boundary (default is 1048576) Fields You can specify which fields to write and in which order. You can use the \"Get Fields\" button to populate the dialog.","title":" Parquet File Output","component":"manual","version":"2.7.0","name":"parquet-file-output","url":"/manual/latest/pipeline/transforms/parquet-file-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"306":{"id":306,"text":"The PGP Decrypt Stream transform decrypts PGP encrypted text. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. GPG location GPG key location. Browse…​ Browse the filesystem for a GPG key location. Passphrase Passphrase of the key. Read passphrase from field Whether or not to read the passphrase from a field. Passphrase fieldname The passphrase field. Data fieldname The field to decrypt. Result fieldname The decrypted result field.","title":" PGP decrypt stream","component":"manual","version":"2.7.0","name":"pgpdecryptstream","url":"/manual/latest/pipeline/transforms/pgpdecryptstream.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"307":{"id":307,"text":"The PGP Encrypt Stream transform encrypts text using PGP. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. GPG location GPG key location. Browse…​ Browse the filesystem for a GPG key location. Key name Read keyname from field Whether or not to read the keyname from a field. Keyname fieldname The key name field. Data fieldname The field to encrypt. Result fieldname The encrypted result field.","title":" PGP encrypt stream","component":"manual","version":"2.7.0","name":"pgpencryptstream","url":"/manual/latest/pipeline/transforms/pgpencryptstream.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"308":{"id":308,"text":"The Pipeline Data Probe transform receives data probe data configured by a Pipeline Probe metadata type. Check the Pipeline Probe metadata type for more information. Hop Engine Spark Flink Dataflow The pipeline data probe transform doesn’t require any configuration except for the transform name. This transform receives data from the Pipeline Probe metadata type and produces the following output: sourcePipelineName the name of the pipeline passing data to this pipeline data probe transform. sourceTransformLogChannelId the id for the log channel passing data to this pipeline data probe transform. sourceTransformName the name of the transform in the source pipeline passing data to this pipeline data probe transform. sourceTransformCopy the copy number of the transform in the source pipeline passing data to this pipeline data probe transform. rowNr the row number in the source pipeline passing data to this pipeline data probe transform. fieldName the field name of the field in the source pipeline passing data to this pipeline data probe transform. fieldType the field type of the field in the source pipeline passing data to this pipeline data probe transform. fieldFormat the field format of the field in the source pipeline passing data to this pipeline data probe transform. fieldLength the field length of the field in the source pipeline passing data to this pipeline data probe transform. fieldPrecision the field precision of the field in the source pipeline passing data to this pipeline data probe transform. value the value of the transform in the source pipeline passing data to this pipeline data probe transform.","title":" Pipeline Data Probe","component":"manual","version":"2.7.0","name":"pipeline-data-probe","url":"/manual/latest/pipeline/transforms/pipeline-data-probe.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"309":{"id":309,"text":"The Pipeline Executor transform allows you to execute a Hop pipeline from within a pipeline. It is similar to the Workflow Executor transform, but works with pipelines. Hop Engine Spark Flink Dataflow The pipeline executor transform by default sends rows to the child pipeline one by one. This default behavior can be changed in the \"Row grouping\" tab. Optionally, you can use a \"Get rows from result\" transform in a pipeline to fetch the previous rows from a sub pipeline. You do not need to define any fields in the Get rows transform to retrieve all data row fields. You can either run the same pipeline for each row by specifying a pipeline name to execute, or accept a pipeline name from an incoming field (from a table for example). You can launch multiple copies of the transform to run in parallel. Parameters: Can map sub pipeline parameters to fields in your current pipeline. If you enable the \"Inherit all variables from pipeline\" option, all the parameters/variables defined in the parent pipeline are passed to the pipeline. However, only the parameters defined on the Parameters tab are set per data input row to the pipeline. Output hop connector options: If you select the incorrect output option for the pipeline executor, it may not return the data expected. This output will contain the execution results: Returns stats on the execution and does not limit fields, variables, or parameters in the output. It’s a good idea to at least check if there have been any issues in one of your child pipelines with the ExecutionResult, ExecutionExitStatus or ExecutionNrErrors fields. This output will contain the result rows after execution: Outputs a rowset that was copied to memory by the child pipeline, e.g. with a Copy rows to result transform. Use the \"Result rows\" tab in the pipeline executor transform to specify which fields you expect to receive from the child pipelines. This option is also required for setting variables downstream and working with the variables upstream if valid in the your scope. The output will contain result file names after execution: Outputs a rowset that will contain any filenames that were copied to the results, e.g. with the Add filenames to result in the Content tab of the Text file input^ transform. The output will contain a copy of the executor transform’s input data: Outputs the rowset as it was received by the pipeline executor transform. Main output of transform: Outputs a rowset that mimics the input for the pipeline executor transform. Depending on your requirements, the Pipeline Executor transform can be configured to function in any of the following ways: By default, the specified pipeline will be executed once for each input row. You can use the input row to set parameters and variables. The executor transform then passes this row to the pipeline in the form of a result row. You can also pass a group of records based on the value in a field, so that when the field value changes dynamically, the specified pipeline is executed. In these cases, the first row in the group of rows is used to set parameters or variables in the pipeline. You can launch multiple copies of this transform to assist in parallel pipeline processing. See also: The Workflow action that executes a sub-workflow from a workflow. The Pipeline action that executes a pipeline from a workflow. The Workflow Executor transform that executes a workflow from a pipeline. The Loops in Apache Hop how-to guide. Samples (samples project): loops/pipeline-executor.hpl Option Description Transform name Name of the transform. Pipeline Use this section to specify the pipeline to execute. You have the following options to specify the pipeline: Use a file for the pipeline: when this option is enabled, you can enter the the .hpl file that is to be used as pipeline. The filename may contain variables (for example, you can use the built-in Internal.Pipeline.Filename.Directory variable to construct a filename relative to the current pipeline), or you can use the \"Browse\" button to select a file using a file browser. Pipeline from field? Enable to specify the pipeline file name(s) in a field in the input stream Pipeline field When the previous option is enabled, you can specify the field that will contain the pipeline filename(s) at runtime. The filename may contain variables. NOTE: It must be considered that, by specifying the pipeline file name using this option, we can experience a little performance penalty because the pipeline that will be executed will be initialized at runtime and not during the initialization phase as usual. On the other side this option gives greater flexibility in specifying the pipeline filename dynamically and this could be useful for many use-cases. In this tab you can specify which field to use to set a certain parameter or variable value. If multiple rows are passed to the workflow, the first row is taken to set the parameters or variables. TIP: If you leave the \"Inherit all variables from pipeline\" option checked (it is by default), all the variables defined in the current pipeline are passed to the child pipeline. You can pass parameters and variables downstream only. You can’t pass params/variables between pipelines unless they are started new. For example, you can pass params/variables between pipelines, when each named pipeline is started in a pipeline executor – once per row. Though you cannot pass parameters and variables upstream (in nested or sequential pipelines) you can pass data rows back up a pipeline via the following pattern. See project: samples/loops/pipeline-executor.hpl The parent pipeline executor specifies the row field name defined in the child pipeline row under the tab “Result rows”. The output of the parent pipeline executor is option “result rows after execution”. Child pipeline: A data row is generated with the same field name and type that is defined in the parent pipeline executor tab “Results rows” in the child pipeline. The last transform of the child pipeline is “copy rows to result”. Remember that all parameters must be defined (in edit pipeline/workflow properties) at least once in each pipeline or workflow. Option Description Variable / Parameter name The Parameters tab allows you to define or pass Hop variables down to the pipeline. Field to use Specify which field to use to set a certain parameter or variable value. If you specify an input field to use, the static input value is not used. Static input value Instead of a field to use you can specify a static value here. The Get Parameters button in the lower right corner of the tab that will insert all the defined parameters with their description for the specified pipeline. The Map Parameters button in the lower right corner of the tab lets you map fields in the current pipeline to parameters in the child pipeline. On this tab you can specify the amount of input rows that are passed to the pipeline in the form of result rows. You can use the result rows in a Get rows from result transform in a pipeline. Option Description The number of rows to send to the pipeline after every X rows the pipeline will be executed and these X rows will be passed to the pipeline Field to group rows on Rows will be accumulated in a group as long as the field value stays the same. If the value changes the pipeline will be executed and the accumulated rows will be passed to the pipeline. The time to wait collecting rows before execution This is time in Milliseconds the transform will spend accumulating rows prior to the execution of the pipeline. You can specify result fields and to which transform to send them. If you don’t need a certain result simply leave a blank input field. In the \"Result rows\" tab you can specify the layout of the expected result rows of this pipeline and to which transform to send them after execution. Please note that this transform will verify that the data type of the result row fields are identical to what is specified. If there is a difference an error will be thrown. Here you can specify where to send the result files from the pipeline execution.","title":" Pipeline Executor","component":"manual","version":"2.7.0","name":"pipeline-executor","url":"/manual/latest/pipeline/transforms/pipeline-executor.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4},{"text":"General","hash":"_general","id":5},{"text":"Parameters Tab","hash":"_parameters_tab","id":6},{"text":"Row Grouping Tab","hash":"_row_grouping_tab","id":7},{"text":"Execution Results Tab","hash":"_execution_results_tab","id":8},{"text":"Result Rows Tab","hash":"_result_rows_tab","id":9},{"text":"Result Files Tab","hash":"_result_files_tab","id":10}]},"310":{"id":310,"text":"the Pipeline Logging transform receives its input from a Pipeline Log metadata item. The transform requires very little configuration, but provides a lot of information. Hop Engine Spark Flink Dataflow Pipeline Log Option Description Transform name Name of this transform Also log transform details checked: the transform outputs both pipeline and transform logging and metrics. In this case, the logging will contain one line per transform. For each transform, the pipeline logging and metrics information is repeated. unchecked: the transform only outputs pipeline logging and metrics. Fieldname Type Description Pipeline Logging Fields loggingDate Date the date and time this pipeline was executed loggingPhase String the phase this pipeline is in at the time of logging (e.g. 'end') pipelineName String the logged pipeline name pipelineFilename String the logged pipeline file name pipelineStart Date execution start date for the logged pipeline pipelineEnd Date execution end date for the logged pipeline pipelineLogChannelId String logging channel id for the logged pipeline parentLogChannelId String parent logging channel id for the logged pipeline (e.g. the channel id of the parent workflow) pipelineLogging String full logging text for the logged pipeline pipelineErrorCount Integer number of errors that occurred in the logged pipeline execution pipelineStatusDescription String status description for the logged pipeline (e.g. 'Finished') Transform Logging Fields transformName String the name of the transform in the logged pipeline transformCopyNr Integer the copy number of the current transform transformStatusDescription String status of the current transform (e.g. 'Finished') transformLogChannelId String log channel id for the current transform transformLoggingText String logging text for the current transform transformLinesRead Integer lines read for the current transform transformLinesWritten Integer lines read for the current transform transformLinesInput Integer input lines for the current transform transformLinesOutput Integer output lines for the current transform transformLinesUpdated Integer updated lines for the current transform transformLinesRejected Integer rejected lines for the current transform transformErrors Integer number of errors for the current transform transformStart Date start date and time for the current transform transformEnd Date end date and time for the current transform transformDuration Integer total duration for the current transform","title":" Pipeline Logging","component":"manual","version":"2.7.0","name":"pipeline-logging","url":"/manual/latest/pipeline/transforms/pipeline-logging.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Related Plugins","hash":"_related_plugins","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Output Fields","hash":"_output_fields","id":5}]},"311":{"id":311,"text":"The PostgreSQL Bulk Loader transform streams data from Hop to Postgresql using \"COPY DATA FROM STDIN\" into the database. replace boolean fields in your pipeline stream by string fields with \"Y\" or \"N\" values to avoid errors. Hop Engine Spark Flink Dataflow The PostgreSQL Bulk Loader is linked to the database type. It will fetch the JDBC driver from the hop/lib/jdbc folder. Valid locations for the JDBC driver for this transform are the database plugin lib and the main hop/lib folder. It will not work in combination with the SHARED_JDBC_FOLDER variable. Option Description Transform name Name of the transform. Connection Name of the database connection on which the target table resides. Target schema The name of the Schema for the table to write data to. This is important for data sources that allow for table names with dots '.' in it. Target table Name of the target table. Load action Insert, Truncate. Insert inserts, truncate first truncates the table. DB Name Override (optional) database name to override the database name used in this transform’s connection. Enclosure the enclosure character to use in the QUOTE AS part of the copy command Delimiter the delimiter character to use in the DELIMITER AS part of the copy command Stop on error Stop the execution of this transform when an error occurs Fields to load This table contains a list of fields to load data from, properties include: Table field: Table field to be loaded in the PostgreSQL table; Stream field: Field to be taken from the incoming rows; Date mask: Either \"Pass through, \"Date\" or \"DateTime\", determines how date/timestamps will be loaded in PostgreSQL. All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" PostgreSQL Bulk Loader","component":"manual","version":"2.7.0","name":"postgresbulkloader","url":"/manual/latest/pipeline/transforms/postgresbulkloader.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"312":{"id":312,"text":"The Process Files transform copies, moves or deletes files by giving the source and target file names in the data stream. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Operation This defines the operation: Copy, Move or Delete Create target parent folder When this option is checked, the target parent folder is created. Otherwise it throws an exception when the target parent folder is not existing. Overwrite target file When this option is checked and the target file exists, it will be overwritten. Otherwise it will not be overwritten and silently ignored. Add target filename to result When this option is checked, add the copied, moved or deleted files to the list of result files. Set simulation mode For testing purposes: No action will be taken at the end and no file will be copied, moved or deleted. Source filename field This defined the field that contains the complete path to the source file for copy or move or the file to be deleted. Target filename field This defined the field that contains the complete path to the target file. This field must not be given in the Delete mode.","title":" Process files","component":"manual","version":"2.7.0","name":"processfiles","url":"/manual/latest/pipeline/transforms/processfiles.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"313":{"id":313,"text":"The Property Input transform reads key/values pairs from a Java properties files. More information on this file format is available on Wikipedia Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Filenames from field Filename is defined in a field? : the previous transform is giving filenames in a certain field in the input stream. These are read. Get filename from field : specify the field to the filenames from. File or directory Specifies the location and/or name of the input text file. Important: Click Add to add the file/directory/wildcard combination to the list of selected files (grid) below. Regular expression Specifies the regular expression you want to use to select the files in the directory specified in the previous option. Selected Files Contains a list of selected files (or wildcard selections) and a property specifying if file is required or not. If a file is required and it is not found, an error is generated;otherwise, the file name is skipped. Show filenames(s)…​ Displays a list of all files that will be loaded based on the current selected file definitions Option Description Include filename in output? Allows you to specify a field name to include the file name (String) in the output of this transform. Rownum in output Allows you to specify a field name to include the row number (Integer) in the output of this transform. Reset rownum per file? Enable this option if you want the generated row number (optional) to be reset (to 1) at the start of every individual file. Limit Limits the number of rows to this number (zero (0) means all rows). Result filenames Add files to result filename : Adds the names of the files read to the result of this pipeline. A unique list is being kept in memory that can be used in the next workflow action in a workflow, for example in another pipeline. Option Description Name The name of the output field Column The attribute to read Type The data type to convert to Format The format or conversion mask to use in the data type conversion Length The length of the output data type Precision The precision of the output data type Currency The currency symbol to use during data type conversion Decimal The numeric decimal symbol to use during data type conversion Group The numeric grouping symbol to use during data type conversion Trim type The type of trimming to use during data type conversion Repeat Repeat the column value of the previous row if the column value is empty (null)","title":" Read data (key, value) from properties files","component":"manual","version":"2.7.0","name":"propertyinput","url":"/manual/latest/pipeline/transforms/propertyinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Files Tab","hash":"_files_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5},{"text":"Fields","hash":"_fields","id":6}]},"314":{"id":314,"text":"The Properties Output transform outputs a set of rows of data to a Java properties files. The data needs to be structured in a key/value format to be usable for a properties file. More information on this file format is available on Wikipedia Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Key field The input field name that will contain the key part to be written to the properties file. Value field The input field name that will contain the value part to be written to the properties file. Comment Short comment that is going to be copied into the properties file (at the top).NOTE: Only the first line is commented out. The next ones need to be commented by the user. Option Description Filename The filename without the file extension. Append Check this option to update an existing property file. Properties in the file that are not processed by the transform will remain unchanged. Create parent folder Check this option if you want to automatically create the parent folder. Accept file name from field? Check this option if the file name is specified in an input stream field. File name field Specifies the field that contains the name of the file to write to. Extension Specify the file extension. Usually this is \"properties\". Include transform number in filename Includes the transform number (when running in multiple copies) in the output filename. Include date in filename Includes the date in the output filename with format yyyyMMdd (20081231). Include time in filename Includes the date in the output filename with format HHmmss (235959). Show filenames(s)…​ Displays the path of the file to be written to. Result filename Add files to result filename : Adds the generated filenames read to the result of this pipeline. A unique list is being kept in memory that can be used in the next workflow action in a workflow, for example in another pipeline.","title":" Write data to properties file","component":"manual","version":"2.7.0","name":"propertyoutput","url":"/manual/latest/pipeline/transforms/propertyoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Content","hash":"_content","id":5}]},"315":{"id":315,"text":"The Redshift Bulk Loader transform loads data from Apache Hop to AWS Redshift using the COPY command. make sure your target Redshift table has a layout that is compatible with Parquet data types, e.g. use int8 instead of int4 data types. Hop Engine Spark Flink Dataflow The Redshift Bulk Loader is linked to the database type. It will fetch the JDBC driver from the hop/lib/jdbc folder. + Option Description Transform name Name of the transform. Connection Name of the database connection on which the target table resides. Target schema The name of the target schema to write data to. Target table The name of the target table to write data to. AWS Authentication choose which authentication method to use with the COPY command. Supported options are AWS Credentials and IAM Role. check the Key-based access control for more information on the Credentials option. check the IAM Role docs for more information on the IAM Role option. Use AWS system variables (Credentials only!) pick up the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY values from your operating system’s environment variables. AWS_ACCESS_KEY_ID (if Credentials is selected and Use AWS system variables is unchecked) specify a value or variable for your AWS_ACCESS_KEY_ID. AWS_SECRET_ACCESS_KEY (if Credentials is selected and Use AWS system variables is unchecked) specify a value or variable for your AWS_SECRET_ACCESS_KEY. IAM Role (if IAM Role is selected) specify the IAM Role to use, in the syntax arn:aws:iam:::role/ Truncate table Truncate the target table before loading data. Truncate on first row Truncate the target table before loading data, but only when a first data row is received (will not truncate when a pipeline runs an empty stream (0 rows)). Specify database fields Specify the database and stream fields mapping Option Description Stream to S3 CSV write the current pipeline stream to a CSV file in an S3 bucket before performing the COPY load. Load from existing file do not stream the contents of the current pipeline, but perform the COPY load from a pre-existing file in S3. Suppoorted formats are CSV (comma delimited) and Parquet. Copy into Redshift from existing file path to the file in S3 to COPY load the data from. Map the current stream fields to the Redshift table’s columns. All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" Redshift Bulk Loader","component":"manual","version":"2.7.0","name":"redshift-bulkloader","url":"/manual/latest/pipeline/transforms/redshift-bulkloader.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General Options","hash":"_general_options","id":3},{"text":"Main Options","hash":"_main_options","id":4},{"text":"Database fields","hash":"_database_fields","id":5},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":6}]},"316":{"id":316,"text":"The Regex Evaluation transform matches the strings of an input field against a text pattern you define with a regular expression (regex). This transform uses the java.util.regex package. The syntax for creating the regular expressions used by this transform is defined in the java.util.regex.Pattern javadoc. You can use this transform to parse a complex string of text and create new fields out of the input field with capture groups (defined by parentheses). Hop Engine Spark Flink Dataflow For example, if you have an input field containing an author’s name in quotes and the number of posts made by them, you can create two new fields in your pipeline - one for the name, and one for the number of posts as shown below: Text to parse: \"Author, Ann\" - 53 posts Regex to create two capture groups: ^\"([^\"]*)\" - (\\d*) posts$ The resulting field values are: Ann and 53. Option Description Transform name Name of the transform. Option Description New field Name of the new field generated from the regular expression. Type Type of data. Length Length of the field. Precision Number of floating point digits for number-type fields. Format An optional mask for converting the format of the original field. See Common Formats for information on common valid date and numeric formats you can use in this transform. Group A grouping can be a \",\" (10,000.00 for example) or \".\" (5.000,00 for example) Decimal The character used as a decimal point. Currency Currency symbol ($ or € for example) Null If Treat this value as null. Default Default value when the field in the incoming file is not specified (empty). Trim The trim method to apply to a string. The Settings tab contains the following options: Option Description Field to evaluate Specify the name of the field from the incoming Hop stream to be matched against the regular expression. Result field name Specify the name of the output field. This field is added to the outgoing Hop stream and has a value of Y to indicate the value of the input field matched the regular expression or N to indicate it did not match. Create fields for capture groups Select to create new fields based on capture groups, in the regular expression. When this option is selected, substrings in the captured groups are extracted and stored in new output fields, that you specify in the Capture Group Fields table. Each capture group must have a field defined in the Capture Group Fields table. The order of the fields in the table must be the same as the order of the capturing groups in the regular expression. You can change the data type using the columns in the table. Replace previous fields Select to replace fields from the incoming Hop stream with fields created for the capture group field names, if the fields have the same name. If this option is clear, new fields are added to the outgoing Hop stream for each capturing group field. This option is available when you select the Create fields for capture groups option. Regular expression Specify your regular expression. Click Test regEx to open the Regular expression evaluation window. Use variable substitution Select to expand variable references to their values before evaluating the regular expression pattern. You can test your regular expression against three different input strings using the following Regular expression evaluation window. If your expression contains a group field, type a string in the Compare section and the option below the string will be split according to your group(s). Option Description Please enter a new regular expression or modify Specify your regular expression. Values to test Specify the values (Value1, Value2, or Value3) to test your string. The background will turn green if that value is a match against your expression or red if it does not. Capture from value Displays the value of the captured string. Captured fields Displays the value of the captured groups. The Content tab contains the following options: Option Description Ignore differences in Unicode encodings Select to ignore different Unicode character encodings. This action may improve performance, but your data can only contain US ASCII characters. Enables case-insensitive matching Select to use case-insensitive matching. Only characters in the US-ASCII charset are matched. Unicode-aware case-insensitive matching can be enabled by specifying the 'Unicode-aware case…​' flag in conjunction with this flag. The execution flag is (?i). Permit whitespace and comments in pattern Select to ignore whitespace and embedded comments starting with # through the end of the line. In this mode, you must use the \\s token to match whitespace. If this option is not enabled, whitespace characters appearing in the regular expression are matched as-is. The execution flag is (?x). Enable dotall mode Select to include line terminators with the dot character expression match. The execution flag is (?s). Enable multiline mode Select to match the start of a line '^' or the end of a line '$' of the input sequence. By default, these expressions only match at the beginning and the end of the entire input sequence. The execution flag is(?m) Enable Unicode-aware case folding Select this option in conjunction with the Enables case-insensitive matching option to perform case-insensitive matching consistent with the Unicode standard. The execution flag is (?u). Enables Unix lines mode Select to only recognize the line terminator in the behavior of '.', '^', and '$'.\\ The execution flag is (?d). Suppose your input field contains a text value like \"Author, Ann\" - 53 posts. The following regular expression creates four capturing groups and can be used to parse out the different parts: ^\"(([\"]), ([\"]))\" - (\\d+) posts\\.$ This expression creates the following four capturing groups, which become output fields: Fullname: [\"]), ([\"] Lastname: ([^\"]+) Firstname: ([^\"]+) Number of posts: (\\d+) In this example, a field definition must be present for each of these capturing groups. If the number of capture groups in the regular expression does not match the number of fields specified, the transform will fail and an error is written to the log. Capturing groups can be nested. In the example above the fields Lastname and Firstname correspond to the capturing groups that are themselves contained inside the Fullname capturing group.","title":" Regex Evaluation","component":"manual","version":"2.7.0","name":"regexeval","url":"/manual/latest/pipeline/transforms/regexeval.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4},{"text":"General","hash":"_general","id":5},{"text":"Capture Group Fields","hash":"_capture_group_fields","id":6},{"text":"Settings Tab","hash":"_settings_tab","id":7},{"text":"Test regEx","hash":"_test_regex","id":8},{"text":"Content Tab","hash":"_content_tab","id":9},{"text":"Examples","hash":"_examples","id":10}]},"317":{"id":317,"text":"The Replace In String transform performs simple search and replace operations on String fields. It also supports regular expressions and group references. group references are picked up in the replace by string as $n where n is the number of the group. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. In stream field The field in which a replacement has to take place. Out stream field The result field. If you leave the Out stream field empty, it will replace the value in the In stream field or it will create a new field. use RegEx Use regular expressions (Y/N). Search Search for a certain pattern. Can use a wildcard (*) for searching in the Search column. Replace with Replace with certain characters. Set empty string? Turn string into an empty string. Replace with field Replace the pattern with a field value. Whole word Whole word (Y/N). Case sensitive Is the search case sensitive (Y/N). Is Unicode Is the search unicode (Y/N) You could parse out sections of a string as follows regex = ^([0-9]{4})([0-9]{7})$ replace with = $2 This will replace any 11 digit numbers with the last 7 digits. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Replace in String","component":"manual","version":"2.7.0","name":"replacestring","url":"/manual/latest/pipeline/transforms/replacestring.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Example","hash":"_example","id":4},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":5}]},"318":{"id":318,"text":"The Reservoir Sampling transform allows you to sample a fixed number of rows from an incoming data stream when the total number of incoming rows is not known in advance. The transform uses uniform sampling; all incoming rows have an equal chance of being selected. This transform is particularly useful when used in conjunction with the ARFF output transform in order to generate a suitable sized data set to be used by WEKA. The reservoir sampling transform uses Algorithm R by Jeffery Vitter. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Sample size Select how many rows to sample from an incoming stream. Setting a value of 0 will cause all rows to be sampled; setting a negative value will block all rows. Random seed Choose a seed for the random number generator. Repeating a pipeline with a different value for the seed will result in a different random sample being chosen.","title":" Reservoir Sampling","component":"manual","version":"2.7.0","name":"reservoirsampling","url":"/manual/latest/pipeline/transforms/reservoirsampling.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"319":{"id":319,"text":"The REST Client transform enables you to consume RESTfull services. Representational State Transfer (REST) is a key design idiom that embraces a stateless client-server architecture in which the web services are viewed as resources and can be identified by their URLs. The REST client Transform returns a \"result\" field (can change the name), and the field is often used in the next transform. For example, it can be read in by a JSON input transform that extracts the fields specified on the Fields tab. Hop Engine Spark Flink Dataflow The General tab is where you enter basic connection information for accessing a resource. Option Description Transform name Name of this transform as it appears in the pipeline workspace URL Indicates the path to a resource Accept URL from field Designates the path to a resource is defined from a field URL field name Indicates the field from which the path to a resource is defined HTTP method Indicates how the transform interacts with a resource---options are either GET, PUT, DELETE, POST, HEAD, or OPTIONS Get Method from field Designates the GET method is defined from a field Method fieldname Indicates the field from which the GET method is defined Body field Contains the request body for POST, PUT, and DELETE methods. Body field only accepts a previous field, not a hard coded value. Application type Designates what type of application a resource is---options are either TEXT PLAIN, XML, JSON, OCTET STREAM, XHTML, FORM URLENCODED, ATOM XML, SVG XML, or TEXT XML Result fieldname Designates the name of the result output field HTTP status code fieldname Designates the name of the HTTP status code field Response time (milliseconds) fieldname Designates the name of the response time field If necessary, enter authentication details for a resource in the Authentication tab. Hop allows using NULL parameters/variables for both the HTTP Login and HTTP Password. Option Description HTTP Login Indicates the username required to access a resource HTTP Password Indicates the password associated with the provided HTTP Login user name Preemptive Option to send the authentication credentials before a server gives an unauthorized response Proxy Host Indicates the name of a proxy host, if proxy authentication is required Proxy Port Indicates the port number of a proxy host, if proxy authentication is required The SSL tab is where you provide authentication details for accessing a resource that requires SSL certificate authentication. Option Description Truststore file Indicates the location of a truststore file Truststore password Indicates the password associated with the provided truststore file The Headers tab enables you to define the content of any HTTP headers using an existing field. Populate the list of fields by clicking the Get fields button. To figure out what Headers are required, you can use Postman and remove as many headers as possible for the Request to still work. You should not need to use the Headers with value “” in Postman. You do not need to manually add an Authorization header if you used the Authentication tab. Option Description Field The field from incoming Hop stream that contains the header information. Add the header value field name to the Field column. Name The name of the outgoing Hop field from this transform. Add the header key field name to the Name column. The Parameters tab enables you to define parameter values for POST, PUT, and DELETE requests. GET parameters should be part of the URL directly. Option Description Parameter The field from incoming Hop stream that contains the parameter information Parameter The name of the outgoing Hop field from this transform Use the Matrix Parameters tab to define matrix parameter values for POST, PUT, DELETE, and PATCH requests. Option Description Parameter The field from the incoming Hop stream that contains the matrix parameter information Parameter The name of the outgoing Hop field from this transform","title":" REST Client","component":"manual","version":"2.7.0","name":"rest","url":"/manual/latest/pipeline/transforms/rest.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Supported Engines","hash":"_supported_engines","id":3},{"text":"Options","hash":"_options","id":4},{"text":"General Tab","hash":"_general_tab","id":5},{"text":"Authentication Tab","hash":"_authentication_tab","id":6},{"text":"SSL Tab","hash":"_ssl_tab","id":7},{"text":"Headers Tab","hash":"_headers_tab","id":8},{"text":"Parameters Tab","hash":"_parameters_tab","id":9},{"text":"Matrix Parameters tab","hash":"_matrix_parameters_tab","id":10}]},"320":{"id":320,"text":"The De-normalizer transform allows you de-normalize data by looking up key-value pairs, with the option to convert data types in the process. Note: make sure to check the notes on this transform in the Getting started with Beam documentation. Hop Engine Spark Flink Dataflow Transform name Name of the transform. This name has to be unique in a single pipeline. Key field The field that defined the key of the output row. Group fields Specify the fields that make up the grouping here. Target fields Select the fields to de-normalize by specifying the String value for the key field (see above). Options are provided to convert data types. Strings are most common as key-value pairs so you must often convert to Integer, Number or Date. If you get key-value pair collisions (key is not unique for the group specified) specify the aggregation method to use. You can use the Metadata Injection supported fields with ETL Metadata Injection transform to pass metadata to your pipeline at runtime. All fields can be injected, the values used for the aggregation field are the following key value TYPE_AGGR_NONE No Aggregation is done TYPE_AGGR_SUM Sum all values TYPE_AGGR_AVERAGE Calculate the average TYPE_AGGR_MIN Take the minimal value of the group TYPE_AGGR_MAX Take the maximum value of the group TYPE_AGGR_COUNT_ALL Count rows TYPE_AGGR_CONCAT_COMMA Aggragate values separated by comma CustomerId Key Value 101 COUSINS_FIRST_NAME Mary 101 COUSINS_SECOND_NAME J. 101 COUSINS_LAST_NAME Blige 101 COUSINS_BIRTH_DATE 1969/02/14 101 COUSINS_INCOME 1723.86 101 …​45 more keys…​ …​","title":" Row Denormaliser","component":"manual","version":"2.7.0","name":"rowdenormaliser","url":"/manual/latest/pipeline/transforms/rowdenormaliser.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4},{"text":"Example","hash":"_example","id":5}]},"321":{"id":321,"text":"The Row Flattener transform allows you to flatten data sequentially. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline The field to flatten The field that must be flattened into different target fields Target fields The name of the target field to which the field is flattened In the sample below, if you begin with the following data set…​ Field1 Field2 Field3 Flatten A B C One Z Y X Two D E F Three W V U Four The data set can be flattened to the example shown below: Field1 Field2 Field3 Target1 Target2 A B C One Two D E F Three Four","title":" Row Flattener","component":"manual","version":"2.7.0","name":"rowflattener","url":"/manual/latest/pipeline/transforms/rowflattener.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Example","hash":"_example","id":4}]},"322":{"id":322,"text":"To use fields, you must have a data row. A data row will automatically be generated by some transforms like a table input (if you ran the preview). If no data row exists add a “Generate rows” transform to create a row(s) in order to use fields or print variables or parameters etc. The Generate rows transform outputs a specified number of rows that are empty or have a set of hard-coded fields. By default, the rows are empty; however they can contain a number of static fields. This transform is used primarily for testing purposes. It may be useful for generating a fixed number of rows, for example, you want exactly 12 rows for 12 months. Sometimes you may use Generate Rows to generate one row that is an initiating point for your pipeline. For example, you might generate one row that contains two or three field values that you might use to parameterize your SQL and then generate the real rows. Examples: * To generate a row of sample data, add two action items to a pipeline. Add a Generate rows transform connected to Add constants. In Add constants, you can add fields to generate. In Generate rows, you can limit the number of rows. * To loop through 100 rows you could use a Generate rows and an “Add sequence” Action to the pipeline and connect them on a pipeline. Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform this name has to be unique in a single pipeline Limit Sets the maximum number of rows you want to generate Fields This table is where you configure the structure and values of the rows you are generating (optional). Never stop generating rows This option is intended for real-time use cases where you never want to stop the running pipeline. The output of this transform is then used to drive recurring tasks like polling from a file, queue, database, …​ Interval in ms The interval between generated rows in milliseconds. Current row time field name The *optional *field name for the Date field containing the time when the current row was generated Previous row time field name The *optional *field name for the Date field containing the time when the previous row was generated","title":" Row Generator","component":"manual","version":"2.7.0","name":"rowgenerator","url":"/manual/latest/pipeline/transforms/rowgenerator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"323":{"id":323,"text":"The Row Normaliser transform converts the columns of an input stream into rows. You can use this transform to normalize repeating groups of columns. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Typefield The name of the type field (product in the example above). Fields table A list of the fields you want to normalize; you must set the following properties for each selected field: Fieldname: Name of the fields to normalize (Product A ? C in the example). Type: Give a string to classify the field (A, B or C in our example). New field: You can give one or more fields where the new value should transferred to (sales in our example). Get Fields Click to retrieve a list of all fields coming in on the stream(s). All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Row Normaliser","component":"manual","version":"2.7.0","name":"rownormaliser","url":"/manual/latest/pipeline/transforms/rownormaliser.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"324":{"id":324,"text":"The Rules Accumulator collects incoming rows and executes them against a rule set. This may be useful to determine the answer to a question or otherwise analyze a dataset. Drools is the present rule engine implementation and its rule language can be referenced for use by this transform. Drools documentation Hop Engine Spark Flink Dataflow Once all incoming rows have been collected by the Rules Accumulator transform (e.g. - the previous transform shuts down) the rows are transformed into Rules.Row objects and passed into the rules engine to be executed against the given rule set. Rules.Row is defined as a key / value Map of fields where key is the name of the field and value is the value of the field; as well as the externalSource boolean property to indicate whether the Rules.Row object was created in the rule set or injected from an external source. Fields of a row are accessed as \"Row (column[\"\"])\". The Rules tab is where you enter your rule definition or a reference to the rule file.. Option Description Rules filename Rules script to execute Rules result tab defines the layout of the Rules output fields. Option Description Result column name Result column type All Rule Definitions should contain \"import org.apache.hop.pipeline.transforms.drools.Rules.Row;\" to give access to the Rules.Row class. For the input with a row meta: name (String), position (Integer), color (String); a Rules.Row object will be created for each row with a Map containing those fields. Rules.Row→row (Map) Name Position Color Fred 1 Blue Fred 2 Red Bob 1 Blue Bob 1 Red Rules can be defined and applied: rule \"Golfers problem\" dialect \"mvel\" when # Define Fred $fred : Row ( externalSource == true, column[\"name\"] == \"Fred\" ) # Define Bob $bob : Row ( externalSource == true, column[\"name\"] == \"Bob\", column[\"position\"] != $fred.column[\"position\"], column[\"color\"] == \"blue\", column[\"color\"] != $fred.column[\"color\"], ) then Row fredRow = new Row(); Row bobRow = new Row(); fredRow.addColumn(\"name\", \"Fred\"); fredRow.addColumn(\"position\", $fred.column[\"position\"]); fredRow.addColumn(\"color\", $fred.column[\"color\"]); bobRow.addColumn(\"name\", \"Bob\"); bobRow.addColumn(\"position\", $bob.column[\"position\"]); bobRow.addColumn(\"color\", $bob.column[\"color\"]); insert(fredRow); insert(bobRow); end Rules.Row objects can be checked as in the above’s left hand side. Rules.Row objects can be created for the data stream as in the above’s right hand side. The transform can be told what fields to pickup from the generated row objects by defining the field Map’s name in the transform’s Results tab. Type conversions can be applied by setting the Result column type as well.","title":" Rules accumulator","component":"manual","version":"2.7.0","name":"rulesaccumulator","url":"/manual/latest/pipeline/transforms/rulesaccumulator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Details","hash":"_details","id":3},{"text":"Rules Tab","hash":"_rules_tab","id":4},{"text":"Rules result Tab","hash":"_rules_result_tab","id":5},{"text":"Example","hash":"_example","id":6}]},"325":{"id":325,"text":"The Rules Executor allows fields of incoming rows to be executed against a rule set. This may be useful to determine additional information or route rows onto another transform. Drools is the present rule engine implementation and its rule language can be referenced for use by this transform. Drools documentation Hop Engine Spark Flink Dataflow For each row processed by the Rules Executor transform each column is converted to a Rules.Column then injected into the rule engine and executed against the rules set. Rules.Column contains four properties: externalSource: boolean property indicating if this Rules.Column was injected from an external source (a field from a processed row) name: name of this field type: type of data stored in payload (one of ValueMetaInterface.typeCodes - Number, String, Integer, Date, Boolean, etc…​) payload: value of this field Results are generated by creating Rules.Column objects. The transform is configured to pick up these generated objects by name. The Rules tab is where you enter your rule definition or a reference to the rule file.. Option Description Rules filename Rules script to execute Rules result tab defines the layout of the Rules output fields. Option Description Result column name Result column type All Rule Definitions should contain \"import org.apache.hop.pipeline.transforms.drools.Rules.Column;\" to give access to the Rules.Column class. For the input row: fica_seed (Integer), hi (String), fica (Integer); three Rules.Column objects will be created in the Rules Engine: Rules.Row→row (Map) Type Payload fica_seed Integer -3561151667 hi String test fica Integer bad Rules can be defined and applied: rule \"Decline\" dialect \"mvel\" when $fica : Column(name == \"fica\", payload < 550) then Column approvalStatus = new Column(); approvalStatus.name = \"approvalStatus\" approvalStatus.type = String.class approvalStatus.payload = \"declined\" Column approvalClassification = new Column(); approvalClassification.name = \"approvalClass\" approvalClassification.type = String.class approvalClassification.payload = \"Declined: fica too low\" insert(approvalStatus); insert(approvalClassification); System.out.println(\"Declined\"); end Rules.Column properties can be checked as in the above’s left hand side. Rules.Column objects can be created for pickup as in the above’s right hand side. The transform can be told to pickup a generated Rules.Column object by defining the Rules.Column name in the transform’s Results tab. Type conversions can be applied by setting the Result column type as well.","title":" Rules executor","component":"manual","version":"2.7.0","name":"rulesexecutor","url":"/manual/latest/pipeline/transforms/rulesexecutor.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Details","hash":"_details","id":3},{"text":"Rules Tab","hash":"_rules_tab","id":4},{"text":"Rules result Tab","hash":"_rules_result_tab","id":5},{"text":"Example","hash":"_example","id":6}]},"326":{"id":326,"text":"The Run SSH Commands transform allows you to execute commands over the secure shell (ssh) TCP/IP protocol. You can pass text to stdout or stderr in the commands. This information can then be picked up by the transform and passed in a field to subsequent transforms. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Server name / IP address You can specify the server or IP address of the machine on which you want to execute a command. Server port The TCP/IP port on which the ssh protocol lives on the server. The default is 22. Timeout The timeout in seconds. If set to a number larger than zero you can specify a non-default connection timeout. Username The username to log in with. Password The password to use. Use key Enable this option if you want to log in using a private key Private key The private key file. The private part of a private/public RSA key-pair (see: ssh-keygen) Passphrase The optional pass-phrase used when the key-pair was generated. Proxy host The proxy server host to use (name or IP address). Proxy port The proxy server port to use. Proxy username The proxy user name. Proxy password The proxy password . Test connection Use this button to see if the supplied credentials are sufficient for logging into the SSH server. Output Option Description Response field name The name of the String output field that will contain the output of the executed command. This is the concatenation of both the stdout and stderr command output. Error response field name The name of a Boolean output field that will contain true if there was an error and false if the ssh command was executed successfully. Commands Option Description Get commands from field Enable this option if you want to execute commands specified in an input field Commands field name Select the input field that will contain the commands to execute Commands Field allows you to specify the commands to execute.","title":" Run SSH commands","component":"manual","version":"2.7.0","name":"runssh","url":"/manual/latest/pipeline/transforms/runssh.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Settings Tab","hash":"_settings_tab","id":5}]},"327":{"id":327,"text":"Enter the connection information in the following transform options: Option Description Salesforce Webservice URL Specify the URL to the Salesforce Webservice. Default: https://login.salesforce.com/services/Soap/u/50.0 Username Specify the username for authenticating to Salesforce Password Specify the password for authenticating to Salesforce. Enter your password followed by your security token. For example, if your password is PASSWORD and your security token is TOKEN, you would enter PASSWORDTOKEN in this field. Test Connection Click to verify the connection can be made to the Salesforce Webservice URL you specified.","title":"","component":"manual","version":"2.7.0","name":"salesforce-connection","url":"/manual/latest/pipeline/transforms/salesforce-connection.html","titles":[{"text":"Connection","hash":"_connection","id":1}]},"328":{"id":328,"text":"You can specify what fields to insert into your Salesforce database through the Fields table. Click Get fields to populate the table with input from the Hop data stream. The table contains the following columns: Option Description Module field The name of the field within the Module Stream field The name of the field in the Hop data stream Use External id? The flag indicating if the field links to an external ID. To resolve the ID, Salesforce needs the object type, column name, and relationship name in the following syntax: Object name:column name/relationship Optionally, click Edit mapping to specify custom mapping. For example, you can map a single Hop field to multiple Salesforce fields.","title":"","component":"manual","version":"2.7.0","name":"salesforce-fields","url":"/manual/latest/pipeline/transforms/salesforce-fields.html","titles":[{"text":"Fields","hash":"_fields","id":1}]},"329":{"id":329,"text":"Enter the insert process settings in the following transform options: Option Description Time out Specify the timeout interval in milliseconds before the transform times out. Use compression Select to compress (.gzip) data when connecting between Hop and Salesforce. Rollback all changes on Revert changes unless all records are processed successfully. When you select this option, records without errors are inserted, while records with errors are marked as failed in the insertion results. The default behavior is to allow partial success of insertion. Batch Size Indicate the maximum number of records to collect before the insert is committed. Module Select the module (table) in which you want to insert records. This list will be populated upon successfully authenticating to Salesforce using the Test Connection button.","title":"","component":"manual","version":"2.7.0","name":"salesforce-settings","url":"/manual/latest/pipeline/transforms/salesforce-settings.html","titles":[{"text":"Settings","hash":"_settings","id":1}]},"330":{"id":330,"text":"The Salesforce Delete transform deletes records directly from your Salesforce database using the Salesforce Web Service. Hop Engine Spark Flink Dataflow You can delete a batch of records by indicating a starting point (Fieldname id) and the amount of records (Batch Size) to delete. You can also use the following other transforms to modify your Salesforce database: Salesforce Input: Reads records directly from your Salesforce database. Salesforce Insert: Inserts records directly into your Salesforce database. Salesforce Update: Updates records directly into your Salesforce database. Salesforce Upsert: Updates existing records and inserts new records into your Salesforce database. Enter the following information in the transform name field: Transform name: Specifies the unique name of the Salesforce Delete transform on the canvas. You can customize the name or leave it as the default. Enter the connection information in the following transform options: Option Description Salesforce Webservice URL Specify the URL to the Salesforce Webservice. Default: https://login.salesforce.com/services/Soap/u/50.0 Username Specify the username for authenticating to Salesforce Password Specify the password for authenticating to Salesforce. Enter your password followed by your security token. For example, if your password is PASSWORD and your security token is TOKEN, you would enter PASSWORDTOKEN in this field. Test Connection Click to verify the connection can be made to the Salesforce Webservice URL you specified. Enter the insert process settings in the following transform options: Option Description Time out Specify the timeout interval in milliseconds before the transform times out. Use compression Select to compress (.gzip) data when connecting between Hop and Salesforce. Rollback all changes on Revert changes unless all records are processed successfully. When you select this option, records without errors are inserted, while records with errors are marked as failed in the insertion results. The default behavior is to allow partial success of insertion. Batch Size Indicate the maximum number of records to collect before the insert is committed. Module Select the module (table) in which you want to insert records. This list will be populated upon successfully authenticating to Salesforce using the Test Connection button. Fieldname id Select the name of the field containing the Salesforce ID of the first record in the set of records (batch) you want to delete. This list is populated with field names received from the previous transform in a pipeline. For example, you can use the Salesforce Input transform to get field names.","title":" Salesforce Delete","component":"manual","version":"2.7.0","name":"salesforcedelete","url":"/manual/latest/pipeline/transforms/salesforcedelete.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"General","hash":"_general","id":4},{"text":"Connection","hash":"_connection","id":5},{"text":"Settings","hash":"_settings","id":6}]},"331":{"id":331,"text":"The Salesforce Input transform reads data directly from Salesforce using the Salesforce Web Service. You can also use the following transforms for various ways to modify your Salesforce database: Salesforce Insert: Inserts records directly into your Salesforce database Salesforce Update: Updates records directly into your Salesforce database. Salesforce Upsert: Updates existing records and inserts new records into your Salesforce database. Salesforce Delete: Deletes records directly from your Salesforce database. Hop Engine Spark Flink Dataflow Enter the following information in the transform name field: Transform name: Specifies the unique name of the Salesforce Input transform on the canvas. You can customize the name or leave it as the default. Enter the connection information in the following transform options: Option Description Salesforce Webservice URL Specify the URL to the Salesforce Webservice. Default: https://login.salesforce.com/services/Soap/u/50.0 Username Specify the username for authenticating to Salesforce Password Specify the password for authenticating to Salesforce. Enter your password followed by your security token. For example, if your password is PASSWORD and your security token is TOKEN, you would enter PASSWORDTOKEN in this field. Test Connection Click to verify the connection can be made to the Salesforce Webservice URL you specified. In this panel, you can set the module to query from as well as the query conditions. Option Description Specify query Select this check box to manually execute a query based on your own SOQL statements. Module Select the module (table) from which you want to retrieve data. This list will be populated upon successfully authenticating to Salesforce using the Test Connection button. Query Condition Enter any query filters you want to apply. Variables are allowed. For example, 'fieldname=myvalue AND fieldname2=myvalue2'. You do not need to include WHERE in your condition statement. The content tab allows you to optionally include additional descriptive fields in the result set. Use these options to further refine the data returned from the queries specified in the Settings tab. For example, you may want to only query deleted records within a specified date range. The Advanced panel includes the following fields: Option Description Retrieve Select which records you want to retrieve to further define your pool of data. You can select All, Updated, or Deleted. Query all records Select the check box to query all the records you are retrieving. Clear the check box to use the date fields (below) to define a range of records to query. Start date Specify the starting date for retrieving the records in the date range. The format is 'yyyy-MM-dd HH:mm:ss'. End date Specify the end date for retrieving the records in the date range. The format is 'yyyy-MM-dd HH:mm:ss'. This panel includes the following fields: Option Description Include URL in output? & URL fieldname Select this check box, then enter the URL used to retrieve the data. Include Module in output? & Module fieldname Select this check box, then enter the name of the module from which the data was retrieved. Include SQL in output? & SQL fieldname Select this check box, then enter the SQL used to generate the result set. Include timestamp in output? & Timestamp fieldname Select this check box, then enter the timestamp for when the record was retrieved. Include Rownum in output? & Rownum fieldname Select this check box, then enter the row number for each record retrieved. Include deletion date in output? & Deletion date fieldname Select this check box, then enter the deletion date for when the record was removed. This set of fields is only enabled when the Advanced> Retrieve option is set to ‘Deleted’. Enter information for the remaining fields on the Content tab. Option Description Time out Specify the timeout interval in milliseconds before the transform times out. Use compression Select to compress (.gzip) the data when connecting between Hop and Salesforce. Limit Specify the maximum number of records to retrieve. When you set the limit to '0', there is no limit on the number of records that can be retrieved. The fields tab displays the fields that are read from the Salesforce module selected on the Settings tab. You will need to go to the Fields tab and press the Get Fields button to populate the fields returned before you can preview the rows returned. The following are the properties display in the Fields tab: Option Description Name The name of the input field. Field The name of the field that contains the record. IsIdLookup? Specify if the field will be used as a fieldname ID (links to an External ID) when accessing the database to perform other calls, such as delete, insert, update, and upsert. Select ‘Y’(es) or ‘N’(o). Type The data type of the field. Format An optional mask for converting the format of the original field. Length The length of the field depends on the following field types: Number: Total number of significant figures in a number String: Total length of string Date: Length of printed output of the string (for example, four is a length for a year) Precision Number of floating point digits for number-type fields. Currency Symbol used to represent currencies ($5,000.00 or €5.000,00 for example). Decimal A decimal point can be a \".\" or \",\" (5,000.00 or 5.000,00 for example). Group A grouping can be a \",\" or \".\" (5,000.00 or 5.000,00 for example). Trim type The trimming method to apply to a string. Trimming only works when no field length is specified. Repeat If the corresponding value in this row is empty, repeat the one from the last time it was not empty. Select ‘Y’(es) or ‘N’(o).","title":" Salesforce Input","component":"manual","version":"2.7.0","name":"salesforceinput","url":"/manual/latest/pipeline/transforms/salesforceinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General","hash":"_general","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Connection","hash":"_connection","id":5},{"text":"Settings","hash":"_settings","id":6},{"text":"Content Tab","hash":"_content_tab","id":7},{"text":"Advanced","hash":"_advanced","id":8},{"text":"Additional Fields","hash":"_additional_fields","id":9},{"text":"Other fields","hash":"_other_fields","id":10},{"text":"Fields tab","hash":"_fields_tab","id":11}]},"332":{"id":332,"text":"The Salesforce Insert transform inserts records directly into your Salesforce database using the Salesforce Web Service. You can also use the following other transforms to modify your Salesforce database: Salesforce Input: Reads records directly from your Salesforce database. Salesforce Update: Updates records directly into your Salesforce database. Salesforce Upsert: Updates existing records and inserts new records into your Salesforce database. Salesforce Delete: Deletes records directly from your Salesforce database. Hop Engine Spark Flink Dataflow Enter the following information in the transform name field: Transform name: Specifies the unique name of the Salesforce Insert transform on the canvas. You can customize the name or leave it as the default. Enter the connection information in the following transform options: Option Description Salesforce Webservice URL Specify the URL to the Salesforce Webservice. Default: https://login.salesforce.com/services/Soap/u/50.0 Username Specify the username for authenticating to Salesforce Password Specify the password for authenticating to Salesforce. Enter your password followed by your security token. For example, if your password is PASSWORD and your security token is TOKEN, you would enter PASSWORDTOKEN in this field. Test Connection Click to verify the connection can be made to the Salesforce Webservice URL you specified. Enter the insert process settings in the following transform options: Option Description Time out Specify the timeout interval in milliseconds before the transform times out. Use compression Select to compress (.gzip) data when connecting between Hop and Salesforce. Rollback all changes on Revert changes unless all records are processed successfully. When you select this option, records without errors are inserted, while records with errors are marked as failed in the insertion results. The default behavior is to allow partial success of insertion. Batch Size Indicate the maximum number of records to collect before the insert is committed. Module Select the module (table) in which you want to insert records. This list will be populated upon successfully authenticating to Salesforce using the Test Connection button. Enter the output information in the following transform option: Salesforce ID fieldname: Specifies the field to contain the Salesforce ID of the first record in the set of records (batch) you inserted. You can specify what fields to insert into your Salesforce database through the Fields table. Click Get fields to populate the table with input from the Hop data stream. The table contains the following columns: Option Description Module field The name of the field within the Module Stream field The name of the field in the Hop data stream Use External id? The flag indicating if the field links to an external ID. To resolve the ID, Salesforce needs the object type, column name, and relationship name in the following syntax: Object name:column name/relationship Optionally, click Edit mapping to specify custom mapping. For example, you can map a single Hop field to multiple Salesforce fields.","title":" Salesforce Insert","component":"manual","version":"2.7.0","name":"salesforceinsert","url":"/manual/latest/pipeline/transforms/salesforceinsert.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General","hash":"_general","id":3},{"text":"Connection","hash":"_connection","id":4},{"text":"Settings","hash":"_settings","id":5},{"text":"Output Fields","hash":"_output_fields","id":6},{"text":"Fields","hash":"_fields","id":7}]},"333":{"id":333,"text":"The Salesforce Update transform updates records directly in your Salesforce database using the Salesforce Web Service. You can also use the following other transforms to modify your Salesforce database: Salesforce Input: Reads records directly from your Salesforce database. Salesforce Insert: Inserts records directly into your Salesforce database. Salesforce Upsert: Updates existing records and inserts new records into your Salesforce database. Salesforce Delete: Deletes records directly from your Salesforce database. Hop Engine Spark Flink Dataflow Enter the following information in the transform name field: Transform name: Specifies the unique name of the Salesforce Update transform on the canvas. You can customize the name or leave it as the default. Enter the connection information in the following transform options: Option Description Salesforce Webservice URL Specify the URL to the Salesforce Webservice. Default: https://login.salesforce.com/services/Soap/u/50.0 Username Specify the username for authenticating to Salesforce Password Specify the password for authenticating to Salesforce. Enter your password followed by your security token. For example, if your password is PASSWORD and your security token is TOKEN, you would enter PASSWORDTOKEN in this field. Test Connection Click to verify the connection can be made to the Salesforce Webservice URL you specified. Enter the insert process settings in the following transform options: Option Description Time out Specify the timeout interval in milliseconds before the transform times out. Use compression Select to compress (.gzip) data when connecting between Hop and Salesforce. Rollback all changes on Revert changes unless all records are processed successfully. When you select this option, records without errors are inserted, while records with errors are marked as failed in the insertion results. The default behavior is to allow partial success of insertion. Batch Size Indicate the maximum number of records to collect before the insert is committed. Module Select the module (table) in which you want to insert records. This list will be populated upon successfully authenticating to Salesforce using the Test Connection button. You can specify what fields to insert into your Salesforce database through the Fields table. Click Get fields to populate the table with input from the Hop data stream. The table contains the following columns: Option Description Module field The name of the field within the Module Stream field The name of the field in the Hop data stream Use External id? The flag indicating if the field links to an external ID. To resolve the ID, Salesforce needs the object type, column name, and relationship name in the following syntax: Object name:column name/relationship Optionally, click Edit mapping to specify custom mapping. For example, you can map a single Hop field to multiple Salesforce fields.","title":" Salesforce Update","component":"manual","version":"2.7.0","name":"salesforceupdate","url":"/manual/latest/pipeline/transforms/salesforceupdate.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General","hash":"_general","id":3},{"text":"Connection","hash":"_connection","id":4},{"text":"Settings","hash":"_settings","id":5},{"text":"Settings","hash":"_settings_2","id":6},{"text":"Fields","hash":"_fields","id":7}]},"334":{"id":334,"text":"The Salesforce Upsert transform updates existing records and inserts new records into your Salesforce database using the Salesforce Web Service. You can also use the following other transforms to modify your Salesforce database: Salesforce Input: Reads records directly from your Salesforce database. Salesforce Insert: Inserts records directly into your Salesforce database. Salesforce Update: Updates records directly into your Salesforce database. Salesforce Delete: Deletes records directly from your Salesforce database. Hop Engine Spark Flink Dataflow Enter the following information in the transform name field: Transform name: Specifies the unique name of the Salesforce Upsert transform on the canvas. You can customize the name or leave it as the default. Enter the connection information in the following transform options: Option Description Salesforce Webservice URL Specify the URL to the Salesforce Webservice. Default: https://login.salesforce.com/services/Soap/u/50.0 Username Specify the username for authenticating to Salesforce Password Specify the password for authenticating to Salesforce. Enter your password followed by your security token. For example, if your password is PASSWORD and your security token is TOKEN, you would enter PASSWORDTOKEN in this field. Test Connection Click to verify the connection can be made to the Salesforce Webservice URL you specified. Enter the insert process settings in the following transform options: Option Description Time out Specify the timeout interval in milliseconds before the transform times out. Use compression Select to compress (.gzip) data when connecting between Hop and Salesforce. Rollback all changes on Revert changes unless all records are processed successfully. When you select this option, records without errors are inserted, while records with errors are marked as failed in the insertion results. The default behavior is to allow partial success of insertion. Batch Size Indicate the maximum number of records to collect before the insert is committed. Module Select the module (table) in which you want to insert records. This list will be populated upon successfully authenticating to Salesforce using the Test Connection button. Upsert Comparison Field Specify the Salesforce ID of the field to use as a basis of comparison to determine if you are updating an existing record or inserting a new record. Enter the output information in the following transform option: Salesforce ID fieldname: Specifies the field to contain the Salesforce ID of the first record in the set of records (batch) you updated and inserted. You can specify what fields to insert into your Salesforce database through the Fields table. Click Get fields to populate the table with input from the Hop data stream. The table contains the following columns: Option Description Module field The name of the field within the Module Stream field The name of the field in the Hop data stream Use External id? The flag indicating if the field links to an external ID. To resolve the ID, Salesforce needs the object type, column name, and relationship name in the following syntax: Object name:column name/relationship Optionally, click Edit mapping to specify custom mapping. For example, you can map a single Hop field to multiple Salesforce fields.","title":" Salesforce Upsert","component":"manual","version":"2.7.0","name":"salesforceupsert","url":"/manual/latest/pipeline/transforms/salesforceupsert.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"General","hash":"_general","id":3},{"text":"Connection","hash":"_connection","id":4},{"text":"Settings","hash":"_settings","id":5},{"text":"Output Fields","hash":"_output_fields","id":6},{"text":"Fields","hash":"_fields","id":7}]},"335":{"id":335,"text":"The Sample Rows transform retains a sample set of rows. Hop Engine Spark Flink Dataflow Option Description Transform name the name for this transform Lines range Specify a comma separated list of rows you want to sample. This list can contain single line numbers or line number ranges, e.g 10,20,30,40,50..60 to sample rows 10, 20, 30, and 40, and all lines from 50 to 60. Line nr fieldname fieldname to store the line number","title":" Sample Rows","component":"manual","version":"2.7.0","name":"samplerows","url":"/manual/latest/pipeline/transforms/samplerows.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"336":{"id":336,"text":"The SAS Input transform reads files in sas7bdat format created by SAS software (SAS Institute, Inc.). The functionality is backed by the Parso java library. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Field in the input to use as filename Select the input field that will contain the filename at runtime. For example, you can use a \"Get file names\" transform to drive the content of this field. The selected fields from the files If you use the \"Get Fields\" button you can populate this data grid. Please note that even though the sas7bdat file format only contains certain formats, that you can specify any desired data type and that Apache Hop will convert for you. Also note that not all fields need to be specified and that you can re-order fields and give them new names. The selection of the fields will be based on the name column.","title":" SAS Input","component":"manual","version":"2.7.0","name":"sasinput","url":"/manual/latest/pipeline/transforms/sasinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"337":{"id":337,"text":"The Script transform allows you to write code in any language supported by the JSR-223 standard. By default, the Hop project ships with the following language support: ECMAScript (JavaScript as part of the JVM) Groovy Python (Jython) Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Script engine You can choose any of the discovered JSR-223 scripting engines from the drop-down list. Script You can add one or more scripts. There are different types of scripts which you can change by right-clicking on the script tab. Transform : The script will be executed after every row that is read. Start: The script will be executed once at the start of the transform. End: The script will be executed after the last row was read Fields Here you can specify the fields to retrieve from the context of the transform script after every row. To allow you to work with the input field values or the surrounding Java ecosystem Hop exposes a bunch of variable bindings. Variable Description input All the input fields under their own name. Please note that certain scripting languages have restrictions on the allowed names of variables. Make sure to rename inappropriate field names with a \"Select Values\" transform. transform This is a reference to the parent transform class Script. You can use this to log certain important events or write extra output rows pipeline_status This special variable can be set to any of the following values: CONTINUE_PIPELINE: Process the current row and generate output (the default value) SKIP_PIPELINE : Do not write an output row STOP_PIPELINE : Cause the pipeline to stop processing rows ERROR_PIPELINE: Cause the pipeline to abort with an error rowNumber This is the current row number, starting from 1. rowMeta The input row metadata. It’s a list of value metadata. row An object array containing the current set of field values. Make sure to address these values using rowMeta to make sure the appropriate data conversions take place. For example, use rowMeta.getString(row, 0) to get the first String value from the input row. previousRow The previous row or null if row is the first input row. transformName The name of the transform pipelineName The name of the pipeline Below are scripts that generate 10 output rows using a simple loop in 3 different scripting engines. This happens 3 times with identical output. For the 3 examples you need to define 2 output fields: id : an Integer name : a String var Long = Packages.java.lang.Long; var RowDataUtil = Packages.org.apache.hop.core.row.RowDataUtil; var START=100000; var COUNT=10; var END=START+COUNT; var id=START; for (var id=START;id.jar jruby-core-.jar After restarting the Apache Hop GUI you’ll notice that there’s a ruby entry in the Scripting Engine dropdown box.","title":" Script","component":"manual","version":"2.7.0","name":"script","url":"/manual/latest/pipeline/transforms/script.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Variable bindings","hash":"_variable_bindings","id":4},{"text":"Generating rows","hash":"_generating_rows","id":5},{"text":"ECMAScript","hash":"_ecmascript","id":6},{"text":"Groovy","hash":"_groovy","id":7},{"text":"Python","hash":"_python","id":8},{"text":"Aggregating rows","hash":"_aggregating_rows","id":9},{"text":"ECMAScript","hash":"_ecmascript_2","id":10},{"text":"Groovy","hash":"_groovy_2","id":11},{"text":"Python","hash":"_python_2","id":12},{"text":"Adding scripting languages","hash":"_adding_scripting_languages","id":13}]},"338":{"id":338,"text":"The Select Values transform is useful for selecting, removing, renaming, changing data types and configuring the length and precision of the fields on the stream. These operations are organized into different categories: Select and Alter — Specify the exact order and name in which the fields have to be placed in the output rows Remove — Specify the fields that have to be removed from the output rows Meta-data - Change the name, type, length and precision (the metadata) of one or more fields Hop Engine Spark Flink Dataflow This tab contains options for selecting and changing data types and fields. The Get Fields to Select button will retrieve available fields based on the existing input transforms and populate the entries in this tab. Option Description Transform Name Name of the transform this name has to be unique in a single pipeline Fieldname The name of the field from the input stream Rename to The new name of the field. Leave blank if you do not wish to rename the field Length Specify this value if you want to implicitly select all other fields from the input stream(s) that are not explicitly selected in the Fields section. Precision The precision option depends on the field type, but only Number is supported; it returns the number of floating point digits Include unspecified fields, ordered by name Enable if you want to implicitly select all other fields from the input stream(s) that are not explicitly selected in the Fields section The Edit Mapping dialog allows you to easily define multiple mappings between source and target fields. Option Description Source fields A list of input fields available to map. Select a field to begin mapping Target fields A list of fields that source fields can be mapped to. Once you have selected a source field, select a target field to create a mapping Add Adds a source and target field mapping pair to the Mappings section Delete Removes a selected Mappings entry This tab allows you to remove fields from the input stream. Click Get fields to remove to import fields from previous transforms. Options under this tab allow you to rename input fields, convert them to different data types, and alter their length, and precision. Click Get fields to change to import fields from previous transforms. Option Description Fieldname The name of the imported field. Note: If you renamed a field in the Select & Alter tab, the name here must match the renamed value. Rename to If you want to rename this field, this is where you put the new name Type The data type for this field Length The field length Precision The precision option depends on the field type, but only Number is supported; it returns the number of floating point digits Binary to Normal? Converts a string to a numeric data type, when appropriate Format The format mask (number type or date format) Date Format Lenient? Determines whether the date parser is strict or lenient. Leniency means that invalid date values are processed. If set to N, only strictly valid date values will be accepted; if set to Y, the parser will attempt to determine the intention of an incorrect date, if possible, and correct it. Date Locale Specifies the date locale to use for date conversions and calculations. Leave blank to use the default encoding on your system or chose from the populated this list accordingly. Date Time Zone Specifies the date time zone to use for date conversions and calculations. Leave blank to use the default encoding on your system or chose from the populated list accordingly. Lenient number conversion When this option is set to Y, numbers get parsed until it finds a non-numeric value (e.g. a dash or slash) and stops parsing without reporting an error. When set to N, numbers get parsed strictly throwing an error in case invalid numbers are in the input. Encoding Specifies the text file encoding to use. Leave blank to use the default encoding on your system. To use Unicode, specify UTF-8 or UTF-16. On first use, Spoon searches your system for available encodings and populates this list accordingly. Decimal A decimal point; this is either a dot or a comma Grouping A method of separating units of thousands in numbers of four digits or larger. This is either a dot or a comma. Currency Symbol used to represent currencies All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Select Values","component":"manual","version":"2.7.0","name":"selectvalues","url":"/manual/latest/pipeline/transforms/selectvalues.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Select & Alter tab","hash":"_select_alter_tab","id":4},{"text":"Edit Mapping","hash":"_edit_mapping","id":5},{"text":"Remove tab","hash":"_remove_tab","id":6},{"text":"Meta-data tab","hash":"_meta_data_tab","id":7},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":8}]},"339":{"id":339,"text":"The De-serialize From File transform reads rows of data from a binary Hop file containing rows and metadata. Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform; this name has to be unique in a single pipeline. Filename The name of the Hop cube file to be generated. Limit Allows you to limit the number of rows written to Size the cube file. A value of zero (0) indicates no size limit (optional).","title":" De-Serialized From File","component":"manual","version":"2.7.0","name":"serialize-de-from-file","url":"/manual/latest/pipeline/transforms/serialize-de-from-file.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"340":{"id":340,"text":"The Serialize To File transform stores rows of data in a binary format in a file. The binary format has an advantage over a text (flat) file because the content does not have to be parsed when read back. The metadata is stored in the file as well. The Serialize to file transform supports a write-once access pattern, and does not support appending to existing files. Hop Engine Spark Flink Dataflow","title":" Serialize To File","component":"manual","version":"2.7.0","name":"serialize-to-file","url":"/manual/latest/pipeline/transforms/serialize-to-file.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2}]},"341":{"id":341,"text":"The Get Server Status transform contacts the Hop servers for which the names are read from an input field. It returns high level information about the server. Every output field for which you specify a name will be added to the list of output fields. Hop Engine Spark Flink Dataflow Here is the list of possible output fields: Error message Status description Server load Free memory Total memory CPU cores CPU process time OS name OS version OS architecture # Active pipelines # Active workflows Available Response (ns) All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Get Server Status","component":"manual","version":"2.7.0","name":"serverstatus","url":"/manual/latest/pipeline/transforms/serverstatus.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"342":{"id":342,"text":"The Set Field Value To A Constant transform replaces the value of a field with a hard coded constant value that you define. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Use variable in constant Select to use a variable replacement within a constant. Field Specify the field that contains the value you want to replace. Replace by value Specify the value that will replace the original field value specified. Conversion mask (Date) Specify a date format for the replaced field. See Common Formats for information on common valid date formats you can use in this transform. Set empty string? Specify Y to allow an empty string when the value is empty; otherwise, a null value is used. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Set field value to a constant","component":"manual","version":"2.7.0","name":"setvalueconstant","url":"/manual/latest/pipeline/transforms/setvalueconstant.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"343":{"id":343,"text":"The Set Field Value transform replaces the value of a field with the value of another field. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Field name Select the field you want to set (value to be replaced) Replace by value from field Select the field to copy from All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Set field Value","component":"manual","version":"2.7.0","name":"setvaluefield","url":"/manual/latest/pipeline/transforms/setvaluefield.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"344":{"id":344,"text":"Set Variables allows you to set variables from fields. By clicking the Get Fields button it will automatically fill in all the fields from the data row and fill in variable names in all-caps. Verify the scope is correct. Hop Engine Spark Flink Dataflow This transform accepts one (and only one) row of data to set the value of a variable. It is important to isolate a single row for this transform, a simple way to do this is using the Blocking transform Variables have no type in Hop (casted as strings). If working with formulas for example, it may not have a type so be sure to convert to string if necessary (can use the TEXT function). Variables set with Set Variable are not available to use in the current pipeline. If set values are needed in the current pipeline the values will have to come from fields. Note that variables cannot be passed upstream between pipelines. Parameters are best passed downstream to avoid threading issues. A nested pipeline is technically the same pipeline, so variables are inherited in the initialization phase. Though you cannot pass parameters and variables upstream (in nested or sequential pipelines) you can pass data rows back up a pipeline via the following pattern in the samples project: samples/loops/pipeline-executor.hpl A variable can be set in one pipeline and be available in the next pipeline (named pipeline) that is in the loop of a pipeline executor. If you are using a pipeline executor child, the parent pipeline does not restart and does not get any set variables. The new variable name to set in a child pipeline is shown below in the second column. This transform accepts one (and only one) row of data to set the value of a variable. If you want to set a variable from a pipeline that processes multiple lines of data, make sure you isolate a single row before setting a variable. You can’t set and use a variable in the same pipeline. Since all transforms in a pipeline run in parallel, there is no way a transform in a pipeline can use a variable that is set in another transform in that same pipeline. Option Description Transform name Name of the transform. Apply formatting When this option is set, it formats the value (date, numbers etc.) according to the format options. Otherwise no formatting is done. Field Name Name of the field that is used Variable Name Name of the variable to set (without ${…​} or %%…​%% sigils) Variable scope type Define the scope of the variable, possible options are: Valid in the Java Virtual Machine: the complete virtual machine will know about this variable. Valid in the parent workflow: the variable is only valid in the parent workflow. Valid in the grand-parent workflow: the variable is valid in the grand-parent workflow and all the child workflows and pipelines. Valid in the root workflow: the variable is valid in the root workflow and all the child workflows and pipelines. Default value Value that will be set for empty rows","title":" Set Variables","component":"manual","version":"2.7.0","name":"setvariable","url":"/manual/latest/pipeline/transforms/setvariable.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"345":{"id":345,"text":"The Simple Mapping transform allows you to re-use a series of transforms in the form of a \"re-usable pipeline\" also known as a \"Mapping\". Hop Engine Spark Flink Dataflow Think of it as a re-usable function in programming – you pass some data into the function and it returns data back. In the Simple Mapping transform you can specify one Mapping Input transform to pass data to and one Mapping Output transform to retrieve rows of data from, as well as parameters to pass to the mapping. Use this transform if you find yourself repeating the same logic multiple times over several different pipelines. The options are fairly self-explanatory: Transform name: a unique name in your pipeline Pipeline: The name of the mapping (sub-) pipeline to embed. This pipeline is executed separately and is considered a separate entity. It is always executed with a standard local Hop pipeline run configuration since that is currently the only one capable of streaming data into and out of transforms. Parameters tab: specify the parameters you want to pass to the mapping pipeline Input tab: specify which fields to pass to the Mapping Input transform in the mapping. You can map (hence the name) field names. Output tab: specify how to rename output fields retrieved from the Mapping Output transform. In the samples project you can find two examples of the Simple Mapping transform, the transforms/files/simple-mapping-child.hpl and simple-mapping-parent.hpl pipelines. In the sample files discussed above, the parent pipeline sends first and last name fields to the child, a calculation is performed and then a field is populated with the calculation and sent back.","title":" Simple Mapping","component":"manual","version":"2.7.0","name":"simple-mapping","url":"/manual/latest/pipeline/transforms/simple-mapping.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Sample","hash":"_sample","id":4}]},"346":{"id":346,"text":"The Snowflake Bulk Loader transform utilizes the Snowflake Copy command to load data as opposed to sending individual insert statements through the Table Output transform. It performs this bulk load as a 3 step process: Write the data to local temp files. Run a put statement to copy the local files to a Snowflake stage. Run a copy command to bulk load the data from the Snowflake stage to a table. Hop Engine Spark Flink Dataflow Connection: The database connection to use when bulk loading Schema: (Optional) The schema containing the table being loaded. Table name: The name of the table being loaded. Staging location type: The type of Snowflake stage to use to store the files. User Location: Uses the user’s home directory to store the files being loaded. Table Location: Uses the table’s internal stage to store the files being loaded. Internal Stage: Use an already created internal stage tos tore the files being loaded. Internal Stage Name: (When Staging location type = Internal stage) The name of the internal stage to use. Work directory: The local work directory to store temporary files before they are loaded to snowflake. On Error: (Abort, Skip File, Skip File Percent, Continue) The behavior when errors are encountered on a load. Error limit: (When On Error = Skip File or Skip File Percent) The error limit before the file should be skipped. If empty or 0 the file will be skipped on the first error. Split load every …​ rows: Breaking the temp files into multiple smaller files will allow Snowflake to perform the bulk load in parallel, thus improving performance. This is the number of rows each file should contain. Remove files after load: (Y/N) Should the files be removed from the Snowflake stage after the load? You also need to set variable SNOWFLAKE_DEBUG_MODE to true to keep the files. Data type: The type of the data being bulk loaded. CSV: Trim whitespace: (Y/N) Should any whitespace around field values be trimmed when loading Snowflake. Null if: A comma delimited list of strings that should be converted to null when loading Snowflake. The strings do not need to be quoted. Error on column count mismatch: If the number of columns in the table, do not match the number of columns output do not load the line and throw an error. JSON: The data being loaded is received on the input stream in a single field containing JSON. Remove nulls: Should nulls in the JSON be removed thus lowering the amount of storage required. Ignore UTF8 errors?: Ignore any UTF8 character encoding errors when parsing the JSON. Allow duplicate elements: Allow the JSON to contain the same element multiple times. If the same element occurs multiple times, the last value for the element will be stored in Snowflake. Parse octal numbers: Parse any numbers stored in the JSON as Octal instead of decimal. Data type CSV Specifying fields: (Y/N) Is the mapping of fields from Hop to Snowflake being explicitly specified. If the mapping of the fields is not being specified, the order of the input fields to this transform must match the order of the fields in the table. Field mapping table: (When specifying fields is checked.) Fields do not have to be in any order. Stream field: The field on the input stream Table field: The field in the table to map the input field to. Get fields button: Gets the fields from the input stream, and maps them to a field of the same name in the table. Enter field mapping button: Opens a window to help users specify the mapping of input fields to table fields. Data type JSON JSON field: The field on the input stream containing the JSON data to be loaded.","title":" Snowflake Bulk Loader","component":"manual","version":"2.7.0","name":"snowflakebulkloader","url":"/manual/latest/pipeline/transforms/snowflakebulkloader.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Bulk loader tab","hash":"_bulk_loader_tab","id":4},{"text":"Data type tab","hash":"_data_type_tab","id":5},{"text":"Fields tab","hash":"_fields_tab","id":6}]},"347":{"id":347,"text":"The Sort Rows transform sorts rows based on the fields you specify and on whether they should be sorted in ascending or descending order. The transform optionally only pass unique records, based on the sort keys. You use can use multiple copies of the Sort Rows transform to speed up large sort operations. Make sure to add a Sorted Merge transform after the sort to correctly merge the streams of sorted that are generated by the various sort copies. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Sort directory The directory in which the temporary files are stored in case when needed; the default is the standard temporary directory for the system TMP-file prefix Choose an easily recognized prefix so you can identify the files when they show up in the temp directory. Sort size The more rows you store in memory, the faster the sorting process because fewer temporary files must be used and less I/O is generated. Free memory threshold (in %) If the sort algorithm finds that it has less available free memory than the indicated number, it will start to page data to disk. Compress TMP Files Compresses temporary files when they are needed to complete the sort. Only pass unique rows? Enable if you want to pass unique rows only to the output stream(s). Fields table Specify the fields and direction (ascending/descending) to sort. You can specify whether to perform a case sensitive sort (optional) Get Fields Click to retrieve a list of all fields coming in on the stream(s). All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Sort Rows","component":"manual","version":"2.7.0","name":"sort","url":"/manual/latest/pipeline/transforms/sort.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"348":{"id":348,"text":"The Sorted Merge transform merges rows coming from multiple input transforms providing these rows are sorted themselves on the given key fields. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Fields table Specify the field name and sort direction (ascending/descending); click Get Fields to retrieve a list of fields from the input stream(s). All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Sorted Merge","component":"manual","version":"2.7.0","name":"sortedmerge","url":"/manual/latest/pipeline/transforms/sortedmerge.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"349":{"id":349,"text":"The Split Fields transform splits a field into multiple fields based on a specified delimiter. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform; this name has to be unique in a single pipeline Field to split The name of the field you want to split Delimiter Delimiter that determines the field. Special characters (e.g. CHAR ASCII HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. Enclosure You can specify an enclosure string which when placed around a value allows delimiters to be present in it. For example with a comma (,) delimiter: aaaa,\"123,456\",ccc can be resolved to 3 fields using enclosure \". Escape string To include delimiter characters in values sometimes an escape string is used like backslash, double backslash and so on. For example with a comma (,) delimiter: aaaa,123\\\\,456,ccc can be resolved to 3 fields using escape character \\\\. Fields table This table is where you define the properties for each new field created by the split. For each new field, you must define the field name, data type, and other properties. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime. Below are examples of split fields: SALES_VALUES field containing: \"500,300,200,100\" Use these settings to split the field into four new fields: Delimiter: , Field: SALES1, SALES2, SALES3, SALES4 Id: remove ID no, no, no, no type: Number, Number, Number, Number format: ., ., ., . group: decimal: . currency: length: 3, 3, 3, 3 precision: 0, 0, 0, 0 SALES_VALUES field containing \"Sales2=310.50, Sales4=150.23\" Use these settings to split the field into four new fields: Delimiter: , Field: SALES1, SALES2, SALES3, SALES4 Id: Sales1=, Sales2=, Sales3=, Sales4= remove ID yes, yes, yes, yes type: Number, Number, Number, Number format: ., ., ., . group: decimal: . currency: length: 7, 7, 7, 7 precision: 2, 2, 2, 2","title":" Split Fields","component":"manual","version":"2.7.0","name":"splitfields","url":"/manual/latest/pipeline/transforms/splitfields.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4},{"text":"Examples","hash":"_examples","id":5},{"text":"Example 1","hash":"_example_1","id":6},{"text":"Example 2","hash":"_example_2","id":7}]},"350":{"id":350,"text":"The Split Fields To Rows transform splits a row containing a delimited field into multiple new rows, one per split value. Hop Engine Spark Flink Dataflow The original row is not delivered to following transforms. The original field is left in each new row to assist in debugging or error handling. It can be removed via a Select Values transform if needed. The original field must be a string field. A new field name must be specified. If the value type/format of the new row is not specified, the new field will use the same type/format as the original field. Option Description Transform name Name of the transform. Field to split The field you want to split Delimiter The delimiter or separator used. Special characters (e.g. CHAR ASCII HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. New name field The name of the new field","title":" Split fields to rows","component":"manual","version":"2.7.0","name":"splitfieldtorows","url":"/manual/latest/pipeline/transforms/splitfieldtorows.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4}]},"351":{"id":351,"text":"The Splunk Input transform runs a Splunk search query and returns the result as a set of Hop fields Check the Splunk Connection docs for more information about creating a Splunk connection. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Splunk Connection The Splunk connection to use Query The Splunk search query to run Returns The list of fields returned by the Splunk query: Field name: the field name to store as an output field for this transform Splunk name: the field name (key) returned by the Splunk search Return type: search result field data type Length: length of the result field Format: format for the result field","title":" Splunk input","component":"manual","version":"2.7.0","name":"splunkinput","url":"/manual/latest/pipeline/transforms/splunkinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"352":{"id":352,"text":"The SQL File Output transform writes input data to a text file in the form of a set of SQL statements. The SQL is generated in the dialect of the selected database. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Connection Connection : select the database for which you want to generate the SQL. The information in the connection is used to select the appropriate dialect. Target schema : the schema of the table to generate the SQL for Target table : the name of the table to generate the SQL for Output file Add create table statement : check this if you want the \"CREATE TABLE\" statement to be included in the generated SQL Add truncate table statement: check this if the table is expected to exist and you want the \"TRUNCATE TABLE\" statement to be included in the generated SQL. Note that this could also be a \"DELETE FROM\" statement, depending on the database dialect. Start new line for each statement : Enable this to increase the readability of the file Filename : the filename (without file extension) Create parent folder : if you want the parent folder of the specified file to be created if it doesn’t exist already. Do not open create at start : if you don’t want an empty file in case there are no input rows Extension : the required file extension (\"sql\" by default) Include transformnr in filename : includes the transform number (when running in multiple copies) in the output filename Include date in filename : includes the date in the output filename with format yyyyMMdd (20081231) Include time in filename : includes the date in the output filename with format HHmmss (235959) Append : append the generated SQL to the existing file Split every …​ rows : limits the size of a single file by starting a new one every …​ rows. Show filenames : hit this button to see the complete filename after assembly of the various parts (filename, extension, transformnr, date and time) Add File to result: Adds the filenames written to the result of this pipeline. A unique list is being kept in memory that can be used in the next workflow action in a workflow, for example in another pipeline. Option Description Date format Allows you to specify the date format. Encoding Allows you to specify the text file encoding","title":" SQL File Output","component":"manual","version":"2.7.0","name":"sqlfileoutput","url":"/manual/latest/pipeline/transforms/sqlfileoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5}]},"353":{"id":353,"text":"The Cassandra SSTable Output transform writes to a file system directory as a Cassandra SSTable. Hop Engine Spark Flink Dataflow Option Description Transform name the name to use for this transform Cassandra yaml file The cassandra.yaml configuration file to use Directory the directory to output to Keyspace the keyspace (database) to use Table the table to write to Incoming fields to use as the key The field in the incoming data to use as the key for inserts Buffer (MB) Size (MB) of write buffer","title":" Cassandra SSTable Output","component":"manual","version":"2.7.0","name":"sstable-output","url":"/manual/latest/pipeline/transforms/sstable-output.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2}]},"354":{"id":354,"text":"The Standardize Phone Number transform normalizes phone numbers in a standardized and consistent manner. The transform uses Google libphonenumber library. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Input field The field holding the phone numbers from the input data. Output field Leave this field empty if you want to update the input field in stream. Otherwise a new field (string) will be added to the output data. Country field The field holding the country code from the input data. The country code is required to be in the ISO alpha-2. DefaultCountry The default country code to use if input data from country field is empty or invalid Format The format to be used to standardize the phone numbers. The available options are: * E164 (default) * INTERNATIONAL * NATIONAL * RFC3966 Number type The result field indicates the type of a processed phone number, such as fixed line, mobile…​ Is valid The result field indicates whether a phone number is supposed to be valid If the original phone number already has an international area code, this transform will not normalize it to another country even if the international area code is different from the country input’s international area code.","title":" Standardize Phone Number","component":"manual","version":"2.7.0","name":"standardizephonenumber","url":"/manual/latest/pipeline/transforms/standardizephonenumber.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"355":{"id":355,"text":"The Stream Lookup transform type allows you to look up data using information coming from other transforms in the pipeline. The data coming from the Source transform is first read into memory and is then used to look up data from the main stream. Since this transform loads the lookup data into memory, it can be an extremely fast way to look up data. However, the entire lookup data set needs to fit in your available memory. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline Lookup Transform The Transform name where the lookup data is coming from The keys to lookup…​ Allows you to specify the names of the fields that are used to look up values. Values are always searched using the \"equal\" comparison Fields to retrieve You can specify the names of the fields to retrieve here, as well as the default value in case the value was not found or a new field name in case you didn’t like the old one. Preserve memory Encodes rows of data to preserve memory while sorting. (Technical background: Hop will store the lookup data as raw bytes in a custom storage object that uses a hashcode of the bytes as the key. More CPU cost related to calculating the hashcode, less memory needed.) Key and value are exactly one integer field Preserves memory while executing a sort by . Note: Works only when \"Preserve memory\" is checked. Cannot be combined with the \"Use sorted list\" option. Use sorted list Enable to store values using a sorted list; this provides better memory usage when working with data sets containing wide row. Note: Works only when \"Preserve memory\" is checked. Cannot be combined with the \"Key and value are exactly one integer field\" option. Get fields Automatically fills in the names of all the available fields on the source side (A); you can then delete all the fields you don’t want to use for lookup. Get lookup fields Automatically inserts the names of all the available fields on the lookup side (B). You can then delete the fields you don’t want to retrieve All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Stream Lookup","component":"manual","version":"2.7.0","name":"streamlookup","url":"/manual/latest/pipeline/transforms/streamlookup.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"356":{"id":356,"text":"The Stream Schema Merge transform merges multiple inputs with different structures and creates a combination of fields. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Transform The transforms to merge. OK Confirms the current settings Get Populates the Transform column with all transforms connected to this transform Cancel Cancels the current settings","title":" Stream Schema Merge","component":"manual","version":"2.7.0","name":"streamschemamerge","url":"/manual/latest/pipeline/transforms/streamschemamerge.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"357":{"id":357,"text":"The Strings Cut transform cuts a portion of a (sub)string. If the designated field is out of range, it returns blank. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. In stream field Name of the field whose substring to cut. Out stream field When a field name is given here, the transform creates a new field with the substring. Otherwise the original field gets replaced by the substring. Cut from Designate where to begin cutting the substring. This value is 0-based, thus the first character in a string is 0. Cut to Designate where to end cutting the substring. This value is exclusive (1-based), so using a 1 includes the first character. The maximum length of the new string is Cut to minus Cut from. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Strings cut","component":"manual","version":"2.7.0","name":"stringcut","url":"/manual/latest/pipeline/transforms/stringcut.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"358":{"id":358,"text":"The String Operations transform can perform the following string operations on an incoming Hop field: Trim (remove leading and/or trailing spaces). Convert to upper or lowercase. Pad (add leading or trailing extra characters). Convert to initial capitalization. Ignore escape characters. Remove or return only numeric digits. Remove special characters.. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. In stream field Designate the field to transform. Out stream field Designate the name of the field to be created. Trim type Designate the trim type: none, left, right, or both. Lower/Upper Designate upper or lowercase. Padding Designate left or right padding. Pad char Designate the padding character. Pad Length Designate how long the padding will be. InitCap Transform to initial capitalization. Escape Define to Escape or Unescape XML, HTML, use CDATA or Escape SQL. Digits Designate whether to return remove, or do nothing to digits. Remove Special character Designate a special character to remove. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime. Values for Metadata Injection Field Values In stream fields list of source fields Out stream fields list of target fields Trim Type 0 = none 1 = left 2 = right 3 = both Lower/Upper 0 = none 1 = lower 2 = upper Padding 0 = none 1 = left 2= right Pad Char Character used for padding Pad Length Lenght to pad InitCap 0 = no 1 = yes Escape 0 = none 1 = escapexml 2 = cdata 3 = unescapexml 4 = escapesql 5 = escapehtml 6 = unescapehtml Digits 0 = none 1 = digits_only 2 = remove_digits Remove Special character 0 = none 1 = cr 2 = lf 3 = crlf 4 = tab 5 = espace","title":" String operations","component":"manual","version":"2.7.0","name":"stringoperations","url":"/manual/latest/pipeline/transforms/stringoperations.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"359":{"id":359,"text":"The Switch Case transform implements the Switch/Case statement found in popular programming languages like Java. In our case we route rows of data to one or more target transforms based on the value encountered in a certain field. Hop Engine Spark Flink Dataflow Option Description Transform name The name that uniquely identifies the transform. Field name to switch The field name that contains the value to use as a bases for the row routing. Use string contains comparison If checked, the comparison will be true if the value is found anywhere in the field being tested. Unchecked and the value has to exactly match the field. Case value data type The data type of the values specified in this dialog Case value conversion mask The conversion mask of the values specified in this dialog (numeric / date values) Case value decimal symbol The decimal symbol of the values specified in this dialog (numeric values) Case value grouping symbol The grouping symbol of the values specified in this dialog (numeric values) Case values Here you can specify a value-target transform pair, one per row. To specify a null value, simply leave the value column blank while entering a target transform. Please note that it is possible to specify the same target transform more than once. Default target transform All the rows that don’t match any of the case values above are sent to this target transform. All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" Switch / Case","component":"manual","version":"2.7.0","name":"switchcase","url":"/manual/latest/pipeline/transforms/switchcase.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"360":{"id":360,"text":"The Synchronize After Merge transform can be used in conjunction with the Merge Rows (Diff) pipeline transform to insert/update/delete database fields based on the Merge Rows (Diff) output. The Merge Rows (diff) pipeline transform appends a Flag column to each row, with a value of \"identical\", \"changed\", \"new\" or \"deleted\". This flag column is then used by the Synchronize After Merge pipeline transform to carry out updates/inserts/deletes on a connection table. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Connection The database connection to which data is written Target schema The name of the Schema for the table to which data is written. This is important for data sources that allow for table names with periods in them. Target table Name of the table in which you want to do the insert/update/delete. Commit size The number of rows to change before running a commit. Use batch update Tablename is defined in a field Key Lookup table Allows you to specify a list of field values and comparators. You can use the following comparators: =, <>, , >=, LIKE, BETWEEN, IS NULL, IS NOT NULL Update Fields Allows you to specify all fields in the table you want to insert/update including the keys. Avoid updates on certain fields (e.g. primary keys or non-null constrained fields) by specifying N in the update column. SQL button Click SQL to generate the SQL to create the table and indexes for correct operation. Option Description Default value from the Merge Rows (diff) transform Operation fieldname This is a required field. This field is used by the transform to obtain an operation flag for the current row. \"flagfield\" Insert when value equal Specify the value of the Operation fieldname which signifies that an Insert should be carried out. \"new\" Update when value equal Specify the value of the Operation fieldname which signifies that an Update should be carried out. \"changed\" Delete when value equal Specify the value of the Operation fieldname which signifies that a Delete should be carried out. \"deleted\" Perform lookup Performs a lookup when deleting or updating. If the lookup field is not found, then an exception is thrown. This option can be used as an extra check if you wish to check updates/deletes prior to their execution. Not applicable All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Synchronize after merge","component":"manual","version":"2.7.0","name":"synchronizeaftermerge","url":"/manual/latest/pipeline/transforms/synchronizeaftermerge.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General Tab","hash":"_general_tab","id":4},{"text":"Advanced Tab","hash":"_advanced_tab","id":5},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":6}]},"361":{"id":361,"text":"The Table Compare transform compares the data from two tables (provided they have the same lay-out), finds differences between the data in the two tables and logs it. Hop Engine Spark Flink Dataflow Option Description Reference connection / Compare connection Database connections from which the reference/compare table data will come. Reference schema field / Compare schema field contain the schema names for the reference/compare table. Reference table field / Compare table field contain the actual table names. This means that you could compare two tables with a different name, as long as they have the same column names. Option Description Key fields field should contain a comma separated list of they fields that make up the 'primary' key of the table(s) you are comparing. The primary key is needed because without this information the two tables cannot be correctly joined. Exclude fields field contains a comma separated list of columns that you want to exclude from the comparison. E.g. because they exist in the first table, but not in the second. Option Description Number of errors field allows you to specify the name of the output column that will contain the total number of errors found for the comparison of your tables. Number of reference/compare table records field allows you to specify the name of the field that will contain the actual number of records found in each table. Number of left/inner/right join errors field allows you to specify the name of the field(s) that will contain the number of errors found for each join type. Error handling key description input field allows you specify the name of the output field for the 'where clause\" of the record that gave an error. Error handling reference/compare value input field allows you to specify the output field names for the actual values that differ.","title":" Table Compare","component":"manual","version":"2.7.0","name":"tablecompare","url":"/manual/latest/pipeline/transforms/tablecompare.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Reference/Comparison data tab","hash":"_referencecomparison_data_tab","id":4},{"text":"Other fields tab","hash":"_other_fields_tab","id":5},{"text":"Additional fields tab","hash":"_additional_fields_tab","id":6}]},"362":{"id":362,"text":"The Table Exists transform verifies if a certain table exists in a database. The result of this transform is a boolean flag field. Hop Engine Spark Flink Dataflow Option Description Transform name The name of the transform. This name has to be unique in a single pipeline. Connection The database connection to use Schema name The schema of the table to look for Table name field The name of the field that will contain the database table name to look for. Result fieldname The name of the field that will contain the boolean result flag in the output of this transform.","title":" Table Exists","component":"manual","version":"2.7.0","name":"tableexists","url":"/manual/latest/pipeline/transforms/tableexists.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"363":{"id":363,"text":"The Table Input transform is used to read information from a database, using a connection and SQL. Basic SQL statements can be generated automatically by clicking Get SQL select statement. SQL queries can be parameterized through variables and can accept input from previous transform fields. Hop Engine Spark Flink Dataflow Table input does not pass input data to the output, only fields inside the query are returned to the pipeline so all other variables and data will be lost. You can solve this by adding the variable as a field in the query or put a Get variables transform behind the table input. To use data fields from a transform, you will have to select it in the dropdown \"Insert data from transform\". Note that if you are using a parametrized query using question marks, you must limit the stream to exactly the fields you need as input to the table input. This can also be done with a Select values transform. If you are getting unexpected query results, (and on some other action/transforms) there is a clear database cache icon (broom). Or you can use the Hop menu icon: Tools / Clear DB Cache. A cartesian join transform will combine a different number of fields from multiple table inputs without requiring key join fields. Example to use data row field(s) parameterized query: Select * from table1 where NameId = ? and AddressId = ? Replace variables in script: unchecked Insert data from transform: Example to use a variable value parameterized query: This examples uses an integer. If you were using a string you most likely will have to use syntax ‘${PRM_NAME}’ Select * from table1 where id = ${myId} Replace variables in script: checked Insert data from transform: Example using a date range: SELECT * FROM customers WHERE changed_date BETWEEN ? AND ? This SQL statement requests two calendar dates, to create a range, that are read from the Insert data from transform option. The target date range can be provided using the Get System Info transform. For example, if you want to read all customers that have had their data changed yesterday, you can get a target range for yesterday and read the customer data. == Options Option Description Transform name Name of the transform. Connection The database connection from which to read data SQL The SQL statement used to read information from the database connection. You can also click Get SQL select statement…​ to browse tables and automatically generate a basic select statement. Enable lazy conversion When enabled, lazy conversion avoids unnecessary data type conversions and can result in a significant performance improvements. Replace variables in script? Enable to replace variables in the script; this feature was provided to allow you to test with or without performing variable substitutions. Insert data from transform Specify the input transform name where Hop can expect information to come from. This information can then be inserted into the SQL statement. The locator where Hop inserts information is indicated with a question mark: ?. Execute for each row? Enable to perform the data insert for each individual row. Limit size Sets the number of lines that is read from the database; zero (0) means read all lines.","title":" Table Input","component":"manual","version":"2.7.0","name":"tableinput","url":"/manual/latest/pipeline/transforms/tableinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Examples","hash":"_examples","id":3}]},"364":{"id":364,"text":"The Table Output transform inserts data into a relational database table. Hop Engine Spark Flink Dataflow Table Output is equivalent to the DML operator INSERT. This transform provides configuration options for target table and a lot of housekeeping and/or performance-related options such as Commit Size and Use batch update for inserts. If you have a database table that has identity columns and you are inserting a record, as part of the insert, the JDBC driver will typically return the auto-generated key it used when performing the insert. Option Description Transform name Name of the transform, this name has to be unique in a single pipeline. Connection The database connection to which data is written Target Schema The name of the Schema for the table to write data to. This is important for data sources that allow for table names with periods in them. Target table The name of the table to which data is written. Commit size Use transactions to insert rows in the database table. Commit the connection every N rows if N is larger than zero (0); otherwise, don’t use transactions. (Slower) Truncate table Select if you want the table to be truncated before the first row is inserted into the table Truncate on first row Select if you want the table to be truncated when the transform receives it’s first row Ignore insert errors Makes Hop ignore all insert errors such as violated primary keys. A maximum of 20 warnings will be logged however. This option is not available for batch inserts. Specify database fields Enable this option to specify the fields in the Database fields tab. Otherwise all fields are taken into account by default. Partition data over tables Use to split the data over multiple tables. For example instead of inserting all data into table SALES, put the data into tables SALES_200510, SALES_200511, SALES_200512, …​ Use this on systems that don’t have partitioned tables and/or don’t allow inserts into UNION ALL views or the master of inherited tables. The view SALES allows you to report on the complete sales: CREATE OR REPLACE VIEW SALES AS SELECT * FROM SALES_200501 UNION ALL SELECT * FROM SALES_200502 UNION ALL SELECT * FROM SALES_200503 UNION ALL SELECT * FROM SALES_200504 ... Use batch update for inserts Enable if you want to use batch inserts. This feature groups inserts statements to limit round trips to the database. This is the fastest option and is enabled by default. Is the name of the table defined in a field? Use these options to split the data over one or more tables; the name of the target table is defined in the field you specify. For example if you store customer data in the field gender, the data might end up in tables M and F (Male and Female). There is an option to exclude the field containing the tablename from being inserted into the tables. Field that contains name of table When the option \"Is the name of the table defined in a field?\" is enabled, enter the field name to use here. Store the table name field When the option \"Is the name of the table defined in a field?\" is enabled, you can chose is this field should we written to the table or not. Return auto-generated key Enable if you want to get back the key that was generated by inserting a row into the table Name of auto-generated key field Specifies the name of the new field in the output rows that contains the auto-generated key SQL Generates the SQL to create the output table automatically All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime. Options: Target Schema, Target Table, Commit Size, Truncate Table, Specify Database Fields, Partition Data over Table, Use Batch Update for Inserts, Is the Name of Table Defined in a Field?, Store the Tablename Field, and Return Auto-Generated Key Values: Table and Stream","title":" Table Output","component":"manual","version":"2.7.0","name":"tableoutput","url":"/manual/latest/pipeline/transforms/tableoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"365":{"id":365,"text":"The Teradata Bulkloader transform supports fastloading data into a Teradata database using the fastload command line tool. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform this name has to be unique in a single pipeline. Use control file Work in control file mode. Control file The path to the control file to be used. Variable Substitution in control file Make use of POI Variables (eg: ${RUN_ID}) in the control file. Path to fastload The path to the fastload command line utility. Error log An optional Error log to be created by Fastload. Connection A connection to the Teradata DB. Target table The table to be loaded. Truncate table Truncate the target table before loading. Data file The name of the temporary data file. Sessions Number of sessions to be used by Fastload. Error limit The error limit for Fastload. Field mapping Definition of POI <→ DB Field mapping. Runs as a transform within a pipeline completely independent from other transforms.","title":" Teradata Bulk Loader","component":"manual","version":"2.7.0","name":"terafast","url":"/manual/latest/pipeline/transforms/terafast.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Fastload Control File","hash":"_fastload_control_file","id":4}]},"366":{"id":366,"text":"The Text File Input transform reads data from a variety of text-file types, including formats generated by spreadsheets and fixed width flat files. The features of the transform allow you to read from a list of files or directories, use wild cards in the form of regular expressions, and accept generalized filenames from previous transforms. Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. The table below provides a detailed descriptions of the features available on the File tab: Option Description File or directory This field specifies the location and/or name of the input text file. Regular expression Specify the regular expression you want to use to select the files in the directory specified in the previous option. For example, you want to process all files that have a .txt extension. (See below \"Selecting file using Regular Expressions\") Selected Files This table contains a list of selected files (or wildcard selections) along with a property specifying if file is required or not. If a file is required and it isn’t found, an error is generated. Otherwise, the filename is skipped. Show filenames(s)…​ Displays a list of all files that will be loaded based on the current selected file definitions. Show file content Displays the content of the selected file. Show content from first data line Displays the content from the first data line only for the selected file. Selecting files using Regular Expressions The Text File Input transform can search for files by wildcard in the form of a regular expression. Regular expressions are more sophisticated than using '*' and '?' wildcards. Below are a few examples of regular expressions: Filename Regular Expression Files selected /dirA/ .userdata.\\.txt Find all files in /dirA/ with names containing userdata and ending with .txt /dirB/ AAA.* Find all files in /dirB/ with names that start with AAA /dirC/ [ENG:A-Z][ENG:0-9].* Find all files in /dirC/ with names that start with a capital and followed by a digit (A0-Z9) Accepting filenames from a previous transform This option allows even more flexibility in combination with other transforms such as \"Get Filenames\". You can construct your filename and pass it to this transform. This way the filename can come from any source: text file, database table, etc. Option Description Accept filenames from previous transforms Enables the option to get filenames from previous transforms. Pass through fields from previous transform Enable this option to add all previous fields coming into the transform to the transform output. This behaves like a join option. Transform to read filenames from Transform from which to read the filenames Field in the input to use as filename Text File Input looks in this transform to determine which filenames to use The content tab allows you to specify the format of the text files that are being read. Below is a list of the options associated with this tab: Option Description File type Can be either CSV or Fixed length. Based on this selection, Hop will launch a different helper GUI when you press the \"get fields\" button in the last \"fields\" tab. Separator One or more characters that separate the fields in a single line of text. Typically this is ; or a tab. Special characters (e.g. CHAR ASCII HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. Enclosure Some fields can be enclosed by a pair of strings to allow separator characters in fields. The enclosure string is optional. If you use repeat an enclosures allow text line 'Not the nine o''clock news.'. With ' the enclosure string, this gets parsed as Not the nine o’clock news. Special characters (e.g. CHAR ASCII HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. Escape Specify an escape character (or characters) if you have these types of characters in your data. If you have \\ as an escape character, the text 'Not the nine o'clock news' (with ' the enclosure) gets parsed as Not the nine o’clock news. Special characters (e.g. CHAR HEX01) can be set with the format $[value], e.g. $[01] or $[6F,FF,00,1F]. Header & number of header lines Enable if your text file has a header row (first lines in the file); you can specify the number of times the header lines appears. If we mistakenly leave the Header flag set on files that do not have any columns' names in its first row, Hop will set the column’s name the value found on a specific column for its specific position. In case, for that specific position, the column’s value is empty, Hop will set column’s name to EmptyField_ where n is the position of the column in the columns' set. NOTE: remember also to perform a check on the guessed data types and column’s specifier that was set after the file’s analysis because they could be wrong due to wrong assumptions made by Hop while looking at the sample dataset. Wrapped lines and number of wraps Use if you deal with data lines that have wrapped beyond a specific page limit; note that headers and footers are never considered wrapped Paged layout and page size and doc header Use these options as a last resort when dealing with texts meant for printing on a line printer; use the number of document header lines to skip introductory texts and the number of lines per page to position the data lines Compression Enable if your text file is placed in a Zip or GZip archive.Note: At the moment, only the first file in the archive is read. No empty rows Do not send empty rows to the next transforms. Include filename in output Enable if you want the filename to be part of the output Filename field name Name of the field that contains the filename Rownum in output? Enable if you want the row number to be part of the output Row number field name Name of the field that contains the row number Rownum by file? Allows the row number to be reset per file Format Can be either DOS, UNIX or mixed. UNIX files have lines that are terminated by line feeds. DOS files have lines separated by carriage returns and line feeds. If you specify mixed, no verification is done. Encoding Specify the text file encoding to use; leave blank to use the default encoding on your system. To use Unicode, specify UTF-8 or UTF-16. On first use, Hop searches your system for available encodings. Limit Sets the number of lines that is read from the file; 0 means read all lines. Be lenient when parsing dates? Disable if you want strict parsing of data fields; if case-lenient parsing is enabled, dates like Jan 32nd will become Feb 1st. The date format Locale This locale is used to parse dates that have been written in full such as \"February 2nd, 2006;\" parsing this date on a system running in the French (fr_FR) locale would not work because February is called Février in that locale. Add filenames to result Adds the filenames to the internal filename result set. This internal result set can be used later on, e.g. to process all read files. The error handling tab allows you to specify how the transform reacts when errors occur. The table below describes the options available for Error handling: Option Description Ignore errors? Enable if you want to ignore errors during parsing Skip error lines Enable if you want to skip those lines that contain errors. You can generate an extra file that contains the line numbers on which the errors occurred. Lines with errors are not skipped, the fields that have parsing errors, will be empty (null) Error count field name Add a field to the output stream rows; this field contains the number of errors on the line Error fields field name Add a field to the output stream rows; this field contains the field names on which an error occurred Error text field name Add a field to the output stream rows; this field contains the descriptions of the parsing errors that have occurred Warnings file directory When warnings are generated, they are placed in this directory. The name of that file is /filename.. Error files directory When errors occur related to non-existing or non-accessible files, they are placed in this directory. The name of the file is /filename.. Failing line numbers files directory When a parsing error occurs on a line, the line number is placed in this directory. The name of that file is /filename.. The filters tab provides you with the ability to specify the lines you want to skip in the text file. The table below describes the available options for defining filters: Option Description Filter string The string for which to search Filter position The position where the filter string has to be at in the line. Zero (0) is the first position in the line. If you specify a value below zero (0) here, the filter string is searched for in the entire string. Stop on filter Specify Y here if you want to stop processing the current text file when the filter string is encountered. Positive match Specify Y here if you want to process lines that match the filter, or N if you want to ignore such lines. The fields tab allows you to specify the information about the name and format of the fields being read from the text file. Available options include: Option Description Name Name of the field Type Type of the field can be either String, Date or Number Format See Number Formats for a complete description of format symbols. Position This is needed when processing the 'Fixed' filetype. It is zero based, so the first character is starting with position 0. Length For Number: Total number of significant figures in a number; For String: total length of string; For Date: length of printed output of the string (e.g. 4 only gives back the year). Precision For Number: Number of floating point digits; For String, Date, Boolean: unused; Currency Used to interpret numbers like $10,000.00 or E5.000,00 Decimal A decimal point can be a \".\" (10;000.00) or \",\" (5.000,00) Grouping A grouping can be a dot \",\" (10;000.00) or \".\" (5.000,00) Null if Treat this value as NULL Default Default value in case the field in the text file was not specified (empty) Trim type trim this field (left, right, both) before processing Repeat If the corresponding value in this row is empty, repeat the one from the last row when it was not empty. Number Formats The information below on Number formats was taken from the Sun Java API documentation, located at http://java.sun.com/j2se/1.4.2/docs/api/java/text/DecimalFormat.html. For further information on valid numeric formats used in this transform, view the Number Formatting Table. Symbol Location Localized Meaning 0 Number Yes Digit # Number Yes Digit, zero shows as absent . Number Yes Decimal separator or monetary decimal separator - Number Yes Minus sign , Number Yes Grouping separator E Number Yes Separates mantissa and exponent in scientific notation; need not be quoted in prefix or suffix ; Sub pattern boundary Yes Separates positive and negative sub patterns % Prefix or suffix Yes Multiply by 100 and show as percentage \\u2030 Prefix or suffix Yes Multiply by 1000 and show as per mille € (\\u00A4) Prefix or suffix No Currency sign, replaced by currency symbol. If doubled, replaced by international currency symbol. If present in a pattern, the monetary decimal separator is used instead of the decimal separator. ' Prefix or suffix No Used to quote special characters in a prefix or suffix, for example, \"''\" formats 123 to \"123\". To create a single quote itself, use two in a row: \" o''clock\". Scientific Notation In a pattern, the exponent character immediately followed by one or more digit characters indicates scientific notation (for example, \"0.###E0\" formats the number 1234 as \"1.234E3\". Date formats The information on Date formats was taken from the Sun Java API documentation, located at: http://java.sun.com/j2se/1.4.2/docs/api/java/text/SimpleDateFormat.html. For further information on valid date formats used in this transform, view the Date Formatting Table. Letter Date or Time Component Presentation Examples M Month in year Month July; Jul; 07 w Week in year Number 27 W Week in month Number 2 D Day in year Number 189 d Day in month Number 10 F Day of week in month Number 2 E Day in week Text Tuesday; Tue a Am/pm marker Text PM H Hour in day (0-23) Number 0 k Hour in day (1-24) Number 24 K Hour in am/pm (0-11) Number 0 h Hour in am/pm (1-12) Number 12 m Minute in hour Number 30 s Second in minute Number 55 S Millisecond Number 978 z Time zone General time zone Pacific Standard Time; PST; GMT-08:00 Z Time zone RFC 822 time zone -0800 Option Description Short filename field The field name that contains the filename without path information but with an extension. Extension field The field name that contains the extension of the filename. Path field The field name that contains the path in operating system format. Size field The field name that contains the size of the field. Is hidden field The field name that contains if the file is hidden or not (boolean). Uri field The field name that contains the URI. Root uri field The field name that contains only the root part of the URI. Function/Button Description Show filenames Displays a list of all the files selected. Note that if the pipeline is to be run on a separate server, the result might be incorrect. Show file content Displays the first lines of the text-file. Make sure that the file-format is correct. When in doubt, try both DOS and UNIX formats. Show content from first data line Helps you position the data lines in complex text files with multiple header lines and more. Get fields Allows you to guess the layout of the file. In case of a CSV file, this is performed almost automatically. When you select a file with fixed length fields, you must specify the field boundaries using a wizard. Preview rows Preview the rows generated by this transform. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Text File Input","component":"manual","version":"2.7.0","name":"textfileinput","url":"/manual/latest/pipeline/transforms/textfileinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"General","hash":"_general","id":4},{"text":"File Tab","hash":"_file_tab","id":5},{"text":"Content Tab","hash":"_content_tab","id":6},{"text":"Error Handling Tab","hash":"_error_handling_tab","id":7},{"text":"Filters Tab","hash":"_filters_tab","id":8},{"text":"Fields Tab","hash":"_fields_tab","id":9},{"text":"Additional Output Fields Tab","hash":"_additional_output_fields_tab","id":10},{"text":"Buttons","hash":"_buttons","id":11},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":12}]},"367":{"id":367,"text":"The Text File Output transform is used to export data to text file format. This is commonly used to generate Comma Separated Values (CSV files) that can be read by spreadsheet applications. It is also possible to generate fixed width files by setting lengths on the fields in the fields tab. Hop Engine Spark Flink Dataflow The File tab is where you define basic properties about the file being created, such as: Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. Filename This field specifies the filename and location of the output text file. Run this as a command instead? Enable to \"pipe\" the results into the command or script you specify. It can also be used for some database bulk loaders that can process the input from stdin. In this case set the filename to the script or binary to execute. Pass output to servlet Enable this option to return the data via a web service instead writing into a file Create parent folder Enable to create the parent folder Do not create file at start Enable to avoid empty files when no rows are getting processed. Accept file name from field? Enable to specify the file name(s) in a field in the input stream File name field When the previous option is enabled, you can specify the field that will contain the filename(s) at runtime. Extension Adds a point and the extension to the end of the filename. (.txt) Include transformnr in filename If you run the transform in multiple copies (Launching several copies of a transform), the copy number is included in the filename, before the extension. (_0). Include partition nr in filename? Includes the data partition number in the filename. Include date in filename Includes the system date in the filename. (default _20041231). Include time in filename Includes the system time in the filename. (default _235959). Specify Date time format Enable to specify the date time format Date time format Chose the date time format to append to the filename Add file name to rest This adds all processed filenames to the internal result filename set to allow for further processing. Show filename(s) This option shows a list of the files that will be generated. The content tab contains the following options for describing the content being read: Option Description Append Check this to append lines to the end of the specified file. Separator Specify the character that separates the fields in a single line of text. Typically this is ; or a tab. Enclosure A pair of strings can enclose some fields. This allows separator or enclosure characters in fields. The enclosure string is optional. Force the enclosure around fields? This option forces all fields of an incoming string type (independent of the eventually changed field type within the Text File Output field definition) to be enclosed with the character specified in the Enclosure property above. Disable the enclosure fix? When a string field contains an enclosure it gets enclosed and the enclose itself gets escaped. When a string field contains a separator, it gets enclosed. Check this option, if this logic is not wanted. It has also an extra performance burden since the strings are scanned for enclosures and separators. So when you are sure there is no such logic needed since your strings don’t have these characters in there and you want to improve performance, un-check this option. Header Enable this option if you want the text file to have a header row. (First line in the file). Footer Enable this option if you want the text file to have a footer row. (Last line in the file). Note: Be careful to enable this option when in Append mode since it is not possible to strip footers from the file contents before appending new rows. There are use cases where this option is wanted, e.g. to have a footer after each run of a pipeline to separate sections within the file. Format This can be either DOS or UNIX. UNIX files have lines are separated by linefeeds. DOS files have lines separated by carriage returns and line feeds. The options are: CR+LF terminated (Windows, DOS) / LF terminated (Unix) / CR terminated / No new-line terminator Encoding Specify the text file encoding to use. Leave blank to use the default encoding on your system. To use Unicode specify UTF-8 or UTF-16. On first use, Spoon will search your system for available encodings. Compression Allows you to specify the type of compression, .zip or .gzip to use when compressing the output. Note: Only one file is placed in a single archive. Right pad fields Add spaces to the end of the fields (or remove characters at the end) until they have the specified length. Fast data dump (no formatting) Improves the performance when dumping large amounts of data to a text file by not including any formatting information. Split every …​ rows If this number N is larger than zero, split the resulting text-file into multiple parts of N rows. Add Ending line of file Allows you to specify an alternate ending row to the output file. The fields tab is where you define properties for the fields being exported. The table below describes each of the options for configuring the field properties: Option Description Name The name of the field. Type Type of the field can be either String, Date or Number. Format The format mask to convert with. See Number Formats for a complete description of format symbols. Length The length option depends on the field type follows: Number - Total number of significant figures in a number String - total length of string Date - length of printed output of the string (e.g. . only gives back year) Precision The precision option depends on the field type as follows: Number - Number of floating point digits String - unused Date - unused Currency Symbol used to represent currencies like $10,000.00 or E5.000,00 Decimal A decimal point can be a \".\" (10,000.00) or \",\" (5.000,00) Group A grouping can be a \",\" (10,000.00) or \".\" (5.000,00) Trim type The trimming method to apply on the string. Note: Trimming only works when there is no field length given. Null If the value of the field is null, insert this string into the textfile Get Click to retrieve the list of fields from the input fields stream(s) Minimal width Alter the options in the fields tab in such a way that the resulting width of lines in the text file is minimal. So instead of save 0000001, we write 1, etc. String fields will no longer be padded to their specified length. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Text File Output","component":"manual","version":"2.7.0","name":"textfileoutput","url":"/manual/latest/pipeline/transforms/textfileoutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File Tab","hash":"_file_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5},{"text":"Fields Tab","hash":"_fields_tab","id":6},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":7}]},"368":{"id":368,"text":"The Token Replacement transform replaces tokens in an input string or file. The transform can then output this data either to a file or a field on the stream. A token contains a start string, a name, and an end string. For example ${my_token} could be a token. The start string, and end string are configurable and can be any series of characters. When replacing tokens in a file, this transform reads the entire file. It does not operate on a single line at a time. When replacing tokens in a file it is a best practice to output to a file also to prevent Hop from having to read the entire file into memory. Hop Engine Spark Flink Dataflow Input Type - Where to read the field to do the token replacement from. Either text, field, or file. Input Type Text Input Text - The text to token replace Input Type Field Input Field - The input field to token replace Input Type File Input filename - The name of the file to token replace Filename is in field? Is the name of the file to token replace in a field? Input filename field - The field the name of the file is in. Add Input filename to result? Add the input filename(s) to the result files list. Output Type - Where to put the token replaced string. Either field or file. Output Type Field Output field name - The name of the field to put the token replaced string in. Output Type File Output filename - The name of the file to write to. Filename is in field? Is the name of the output file in a field? Output filename field - The name of the field the output filename is in. Append output file? If the output file already exists should it be appended to. If not checked, Apache Hop will overwrite the file if it exists. Create parent folder? Should Apache Hop create the parent folder? Output format - The format of the new line delimiter for the output file. Output encoding - The character encoding to use when writing the file. Split every - Split the output file into a new file every n rows. Include copynr in filename? Should the transform’s copy number be included in the output filename? Include partition nr in filename? Should the partition number be included in the output filename? Include date in filename? Should the curren date be included in the output filename? Include time in filename? Should the current time be included in the output filename? Specify date format? Do you want to specify the date format to include in the output filename? Date time format - The date/time format to include in the output filename. Add output filenames to result? Add the output filename(s) to the result files list. Token start string - The string that indicates the start of a token. Token end string - The string that indicates the end of a token. Everything between the token start string and the token end string is the token name. Stream name - The name of the field on the stream containing the value to replace the token with. Token name - The name of the token to replace. Get Fields button - Gets the list of input fields, and tries to map them to an Avro field by an exact name match.","title":" Token Replacement","component":"manual","version":"2.7.0","name":"tokenreplacement","url":"/manual/latest/pipeline/transforms/tokenreplacement.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Input Tab","hash":"_input_tab","id":4},{"text":"Output Tab","hash":"_output_tab","id":5},{"text":"Tokens Tab","hash":"_tokens_tab","id":6}]},"369":{"id":369,"text":"The Unique Rows transform removes duplicate rows from the (sorted) input stream(s). For unsorted input streams, check the Unique Rows By Hashset transform. Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. Add counter to output? Check this option to add a counter field to the stream. Counter field Define the counter field name. Redirect duplicate row Processes duplicate rows as an error and redirect rows to the error stream of the transform. Requires you to set error handling for this transform. Error Description Sets the error handling description to display when duplicate rows are detected. Only available when Redirect duplicate row is checked. Fields to compare table Specify the field names on which you want to force uniqueness or click Get to insert all fields from the input stream(s) You can choose to ignore case by setting the Ignore case flag to Y.","title":" Unique Rows","component":"manual","version":"2.7.0","name":"uniquerows","url":"/manual/latest/pipeline/transforms/uniquerows.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"370":{"id":370,"text":"The Unique Rows (HashSet) transform removes duplicate rows and filters only the unique rows as input data for the transform. This transform differs from the Unique Rows pipeline transform by keeping track of the duplicate rows in memory and does not require a sorted input to process duplicate rows. Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. Compare using stored row values Select this option to store values for the selected fields in memory for every record. Storing row values requires more memory, but it prevents possible false positives if there are hash collisions. Redirect duplicate row Select this option to process duplicate rows as an error and redirect them to the error stream of the transform. If you do not select this option, the duplicate rows are deleted. Error description Specify the error handling description that displays when the transform detects duplicate rows. This description is only available when Redirect duplicate row is selected. Fields to compare table Specify the field names for which you want to find unique values. -OR- Select Get to insert all the fields from the input stream.","title":" Unique Rows (HashSet)","component":"manual","version":"2.7.0","name":"uniquerowsbyhashset","url":"/manual/latest/pipeline/transforms/uniquerowsbyhashset.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"371":{"id":371,"text":"The Update transform looks up a row in a table using one or more lookup keys and updates it if needed. If the row can’t be found, nothing is done. If the row is found the row in the table is updated. Hop Engine Spark Flink Dataflow Option Description Commit size The number of rows to update before running a commit. Use batch updates? Allows the use of batch updates. Skip lookup Skips the row lookup. Ignore lookup failure? Allows the transform to skip lookup failures. Flag field (key found) Field which contains whether the key was found or not. Connection The database connection to which data is written. Key Lookup table Allows you to specify a list of field values and comparators. You can use the following comparators: =, = ~NULL, <>, , >=, LIKE, BETWEEN, IS NULL, IS NOT NULL SQL button Click SQL to generate the SQL to create the table and indexes for correct operation. Transform name Name of the transform; this name has to be unique in a single pipeline. Target schema The name of the Schema for the table to which data is written. This is important for data sources that allow for table names with periods in them. Target table Name of the table in which you want to do the update. Update Fields Allows you to specify all fields in the table you want to update. All fields of this transform support metadata injection. You can use this transform with Metadata Injection to pass metadata to your pipeline at runtime.","title":" Update","component":"manual","version":"2.7.0","name":"update","url":"/manual/latest/pipeline/transforms/update.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"372":{"id":372,"text":"The User Defined Java Class transform allows you to enter User Defined Java Class to drive the functionality of a complete transform. In essence, this transform allows you to program your own plugin in a transform. The goal of this transform is not to allow a user to do full-scale Java development inside a transform. Obviously we have a whole plugin system available to help with that part. The goal is to allow users to define methods and logic with as little as code as possible, executed as fast as possible. For this we use the Janino project libraries that compile Java code in the form of classes at runtime. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Class code The Java code. Fields List of output fields. Fieldname: Output field name. Type: Type of field. Length: Length of the field. Precision: Precision of the field. Parameters You can use the Parameters table to avoid using hard-coded string values, such as field names (customer for example). Tag: The parameter tag. Value: The parameter value. Description: Description of the parameter. Info transforms Additional transforms to read data from Tag Transform: Which transform to read from. Description Target transforms Destination Transform Tag Transform: Which transform to output to. Description Test class Tests the class. The Processor code defines the processRow() method, which is the heart of the transform. This method is called by the pipeline in a tight loop and will continue until false is returned. String firstnameField; String lastnameField; String nameField; public boolean processRow() throws HopException { // Let's look up parameters only once for performance reason. // if (first) { firstnameField = getParameter(\"FIRSTNAME_FIELD\"); lastnameField = getParameter(\"LASTNAME_FIELD\"); nameField = getParameter(\"NAME_FIELD\"); first=false; } // First, get a row from the default input hop // Object[] r = getRow(); // If the row object is null, we are done processing. // if (r == null) { setOutputDone(); return false; } // It is always safest to call createOutputRow() to ensure that your output row's Object[] is large // enough to handle any new fields you are creating in this transform. // Object[] outputRow = createOutputRow(r, data.outputRowMeta.size()); String firstname = get(Fields.In, firstnameField).getString(r); String lastname = get(Fields.In, lastnameField).getString(r); // Set the value in the output field // String name = firstname+\" \"+lastname; get(Fields.Out, nameField).setValue(outputRow, name); // putRow will send the row on to the default output hop. // putRow(data.outputRowMeta, outputRow); return true; If you want Hop to handle errors that may occur while running your class in a pipeline, you must implement for your own error handling code. Before adding any error handling code, right-click on the User Defined Java Class transform in the Hop client canvas and select Error Handling in the menu that appears. The resulting transform error handling settings dialog box contains options for specifying an error target transform and associated field names that you will use to implement error handling in your defined code. try { Object numList = strsList.stream() .map( new ToInteger() ) .sorted( new ReverseCase() ) .collect( Collectors.toList() ); get( Fields.Out, \"reverseOrder\" ).setValue( row, numList.toString() ); } catch (NumberFormatException ex) { // Number List contains a value that cannot be converteds to an Integer. rowInError = true; errMsg = ex.getMessage(); errCnt = errCnt + 1; } if ( !rowInError ) { putRow( data.outputRowMeta, row ); } else { // Output errors to the error hop. Right click on transform and choose \"Error Handling...\" putError(data.outputRowMeta, row, errCnt, errMsg, \"Not allowed\", \"DEC_0\"); } The try in the code sample above tests to see if numList contains valid numbers. If the list contains a number that is not valid, putError is used to handle the error and direct it to the wlog: ErrorPath transform in the sample pipeline. The ErrorPath transform is also specified in the Target transforms tab of the User Define Java Class transform. You need to implement logging in your defined transform if you want Hop to log data actions from your class, such as read, write, output, or update data. The following code is an example of how to implement logging: putRow( data.outputMeta, r ); if ( checkFeedback( getLinesOutput() ) ) { if ( log.isBasic() ) { logBasic( \"Have I got rows for you! \" + getLinesOutput() ); } } You can navigate through your defined classes along with related code snippets and fields through the Classes and Code Fragments panel. You can right-click on any item in this tree to either Delete, Rename, or Show Sample. Classes The Classes folder indicates what classes have corresponding code block tabs in the Class Code panel. Code Snippits The Code Snippits folder shows the internal Hop code related to the User Defined Java Class transform. These snippits are shown as reference for the code of your class. Input Fields The Input fields folder contains any input fields you define in your code. While working with your defined code, you will be handling input and output fields. Many ways exist for handling input fields. For example, to start, examine the following description of an input row. IRowMeta inputRowMeta = getInputRowMeta(); The inputRowMeta object contains the metadata of the input row. It includes all the fields, their data types, lengths, names, format masks, and more. You can use this object to look up input fields. For example, if you want to look for a field called customer, you would use the following code. IValueMeta customer = inputRowMeta.searchValueMeta(\"year\"); Because looking up field names can be slow if you need to do it for every row that passes through a pipeline, you could look up field names in advance in a first block of code, as shown in the following example: if (first) { yearIndex = getInputRowMeta().indexOfValue(getParameter(\"YEAR\")); if (yearIndex<0) { throw new HopException(\"Year field not found in the input row, check parameter 'YEAR'\\!\"); } } To get the Integer value contained in the year field, you can then use the following construct. Object[] r = getRow(); ... Long year = inputRowMeta().getInteger(r, yearIndex); To make this process easier, you can use a shortcut in the following form. Long year = get(Fields.In, \"year\").getInteger(r); This method also takes into account the index-based optimization mentioned above. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" User Defined Java Class","component":"manual","version":"2.7.0","name":"userdefinedjavaclass","url":"/manual/latest/pipeline/transforms/userdefinedjavaclass.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Usage","hash":"_usage","id":4},{"text":"Process rows","hash":"_process_rows","id":5},{"text":"Error handling","hash":"_error_handling","id":6},{"text":"Logging","hash":"_logging","id":7},{"text":"Class and code fragments","hash":"_class_and_code_fragments","id":8},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":9}]},"373":{"id":373,"text":"This transform allows you to enter User Defined Java Expressions as a basis for the calculation of new values. Any custom jar libraries that your expressions depend on need to be placed in the folder plugins/transforms/janino/lib Hop Engine Spark Flink Dataflow If you have a Java expression like : C=A+B Then you can simply enter the right side of the expression in the dialog: A+B The values are exposed to the expressions as the Java objects they are : Data type Java Class BigNumber BigDecimal Binary byte[] Date java.util.Date Integer java.lang.Long Number java.lang.Double String java.lang.String Option Description New Field The new field in the data stream. If you want to overwrite an existing field, you need to define the field here and in the \"Replace value\" option. Java Expression The Java Expression, see examples below. Value Type Type Length Length Precision Precision Replace value Select this identical to the \"New field\" name when you want to replace All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime. Add 2 integers, A and B A+B Concatenate 2 Strings : firstname and name and put a space in between firstname+\" \"+name or if you really care about performance, this might be faster: new StringBuffer(firstname).append(\" \").append(name).toString() Use native Java and API functions System.getProperty(\"os.name\") Business rules (If / Then / Else) a2 ? location.substring(location.length()-2, location.length()) : null For city (get the beginning without the last 2 characters and trim): location != null && location.length()>2 ? location.substring(0, location.length()-2).trim() : location Functionality of a LIKE operator (contains string) The following example returns 1 when abc is within the source string, otherwise 2. It returns also 2 when the source string is null. If you prefer the return values to be of value type Integer, use \"new Long(1)\" and \"new Long(2)\". samplestr != null && samplestr.indexOf(\"abc\")>-1 ? 1 : 2","title":" User Defined Java Expression","component":"manual","version":"2.7.0","name":"userdefinedjavaexpression","url":"/manual/latest/pipeline/transforms/userdefinedjavaexpression.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":5},{"text":"Examples","hash":"_examples","id":6}]},"374":{"id":374,"text":"The Data Validator transform allows you to add data validations which can each validate the input data for the various fields in the input rows. The validator will throw an error (exception) if an input row is detected which fails one or more of the defined validations in this transform. To get a list of all the validation errors you can define an error handling hop from this transform. Hop Engine Spark Flink Dataflow You can use the \"New Validation\" button to add a new validation and \"Remove validation\" to remove the selected validation. Once you select a validation on the left hand side of the dialog you can specify the following properties for each data validation: Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. Report all errors, not only the first Enabling this option will report back 0, 1 or more errors for every input row. Output one row, concatenate errors with a separator If this is enabled error codes and descriptions are concatenated with the specified separator string. Validation description Optionally you can describe what you’re testing for here. Name of the field to validate Select the name of the input field to validate Error code Define a unique error code to recognize what is wrong in the error handling output. Error description Specify an error description to recognize what is wrong in the error handling output. Verify data type Enable this if you want to do data type validation Data type The data type that the input field needs to have Conversion mask The expected conversion mask Decimal symbol The expected decimal symbol Grouping symbol The expected decimal symbol Null allows? Disable this if null values are not allows Only null values allows? Enable this if you only expect null values Only numeric data expected Enable this if you need the input field to be numeric (Integer, Number, BigNumber) or a String containing digits only (0-9) Max string length The maximum length of the input field after conversion to a String Min string length The minimum length of the input field after conversion to a String Maximum value The maximum value allowed for the input Minimum value The minimum value allowed for the input Expected start string The input field is expected to start with this value after conversion to a String Expected end string The input field is expected to end with this value after conversion to a String Not allowed start string The input field is not expected to start with this value after conversion to a String Not allowed end string The input field is not expected to end with this value after conversion to a String Regular expression expected to match You can specify a regular expression that the input field value is expected to match with Regular expression not allowed to match You can specify a regular expression that the input field value is not allowed to match with Allowed values You can specify the list of possible values that this input field is allowed to have. Use the Add and Remove buttons on the right to edit this list. Read allowed values from another transform Enable this option if you want to read input data from another transform. The transform to read from The name of the transform to read the allowed values for this field from. The field to read from The name of the field to read the allowed values for this field from. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Data Validator","component":"manual","version":"2.7.0","name":"validator","url":"/manual/latest/pipeline/transforms/validator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"375":{"id":375,"text":"The Value Mapper transform maps string values from one value to another. Mapping is usually solved by storing the conversion table in a database. The Value Mapper provides you with a simple alternative. For example, if you want to replace language codes: Fieldname to use: LanguageCode Target fieldname: LanguageDesc Source/Target: EN/English, FR/French, NL/Dutch, ES/Spanish, DE/German, ... Hop Engine Spark Flink Dataflow The following properties are used to define the mappings: Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. Fieldname to use Field to use as the mapping source Target field name Field to use as the mapping Target Default upon non-matching Defines a default value for situations where the source value is not empty, but there is no match Field values table Contains the mapping of source value to converted target value. If there is an empty source value defined, we map null or empty string to the target value. Only one empty mapping is allowed. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Value Mapper","component":"manual","version":"2.7.0","name":"valuemapper","url":"/manual/latest/pipeline/transforms/valuemapper.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"376":{"id":376,"text":"The Vertica Bulk Loader uses VerticaCopyStream to stream to a Vertica database. This is typically significantly faster than loading data through e.g. a Table Output transform. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Connection Name of the database connection on which the target table resides. Target schema The name of the Schema for the table to write data to. This is important for data sources that allow for table names with dots '.' in it. Target table Name of the target table. Truncate table Truncate this table before loading data Truncate on first row Only truncate this table if there is data (when the first row is received) Specify database fields Enable this option to specify the fields in the Database fields tab. Otherwise all fields are taken into account by default. Option Description Insert directly to ROS Insert directly to ROS (Read Optimized Store). A ROS (Read Optimized Store) container is a set of rows stored in a particular group of files Abort on error Stop or continue loading data as soon as an error occurs Exceptions log file Path to the exceptions log file Reject data log file Path to the rejected data log file Stream name Name for the Vertica COPY stream Map table columns to stream fields using 'Get Fields' and/or 'Enter Field Mapping'. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" Vertica Bulk Loader","component":"manual","version":"2.7.0","name":"verticabulkloader","url":"/manual/latest/pipeline/transforms/verticabulkloader.html","titles":[{"text":"Supported Engines","hash":"_supported_engines","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Global transform options","hash":"_global_transform_options","id":3},{"text":"Main options tab","hash":"_main_options_tab","id":4},{"text":"Database fields tab","hash":"_database_fields_tab","id":5},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":6}]},"377":{"id":377,"text":"The Web Services Lookup transform performs a Web Services lookup using the Web Services Description Language (WSDL). Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. URL The base URL pointing to the WSDL document that will be retrieved Load (button) The load button loads the WSDL at the specified URL and tries to automatically populate the input and output tabs and fields. NOTE: If this doesn’t work, you can still try to manually specify the input and output fields using the \"Add Input\" and \"Add Output\" buttons. The number of rows per call The number of rows to send with each WSDL call Pass input data to output If you disable this, the input will be eaten and only the WSDL output will be passed along to the next transforms. v2.x/3.x compatibility mode We improved the parsing engine of the 3.x engine dramatically. For compatibility reasons, we kept the old engine around to make sure older transforms would still work OK. Repeating element name Specify the name of the repeating element in the output XML (if any). HTTP authentication Here you can put the username and password if these are required for the web service. Proxy to use Here you can optionally put the proxy host and port information. Add Input / Add Output These buttons will allow you to manually specify the input and output specifications of the WSDL service. Note: The data of the input fields can be escaped by the Calculator transform and the function \"Mask XML content from string A\"","title":" Web services lookup","component":"manual","version":"2.7.0","name":"webservices","url":"/manual/latest/pipeline/transforms/webservices.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"378":{"id":378,"text":"The Workflow Executor transform execute a Hop workflow from within a pipeline. Hop Engine Spark Flink Dataflow By default, the specified workflow will be executed once for each input row (this can be changed in the Row Grouping tab). Fields from the data row(s) can be used to set parameters and variables and it is passed to the workflow in the form of a result row. Remember that all parameters must be defined at least once in each pipeline or workflow (Edit pipeline/workflow properties). You are passing a parameter when you send a field/parameter/variable to a workflow executor from the Parameters tab. You can also allow a group of records to be passed based on the value in a field (when the value changes the workflow is executed) or on time. In these cases, the first row of the group or rows is used to set parameters or variables in the workflow. It is possible to launch multiple copies of this transform to facilitate parallel workflow processing. See also: The Workflow action that executes a sub-workflow from a workflow. The Pipeline action that executes a pipeline from a workflow. The Pipeline Executor transform that executes a sub-pipeline from a pipeline. The Loops in Apache Hop how-to guide. Samples (samples project) loops/workflow-executor.hpl Option Description Transform name Name of the transform. Workflow Use this option to specify a workflow stored in a file (.hwf file) In this tab you can specify which field to use to set a certain parameter or variable value. If you specify an input field to use, the static input value is not used. If multiple rows are passed to the workflow, the first row is taken to set the parameters or variables. There is a button in the lower right corner of the tab that will insert all the defined parameters of the specified workflow. For information the description of the parameter is inserted into the static input value field. If you leave the \"Inherit all variables from pipeline\" option checked (it is by default), all the variables defined in the current pipeline are passed to child workflow. The Get Parameters button in the lower right corner of the tab that will insert all the defined parameters with their description for the specified workflow The Map Parameters button in the lower right corner of the tab lets you map fields in the current pipeline to parameters in the child workflow. On this tab you can specify the amount of input rows that are passed to the workflow in the form of result rows. You can use the result rows in a workflow or Pipeline workflow action to loop over or you can get the records themselves in a Get rows from result transform in a pipeline. The number of rows to send to the workflow: after every X rows the workflow will be executed and these X rows will be passed to the workflow. Field to group rows on: Rows will be accumulated in a group as long as the field value stays the same. If the value changes the workflow will be executed and the accumulated rows will be passed to the workflow. The time to wait collecting rows before execution: This is time the transform will spend accumulating rows prior to the execution of the workflow. Please note that you can only specify one method of grouping. You can specify result fields and to which transform to send them. If you don’t need a certain result simply leave a blank input field. In the \"Result rows\" tab you can specify the layout of the expected result rows of this workflow and to which transform to send them after execution. The workflow executor performs a consistency check over the fields we declared in this tab as the fields that want to receive in output. The check will be performed by making sure the fields we require are really present in the results stream and that type of each fields is really the type we expected to be. If there are any differences an error will be thrown. The error will give you the complete picture about which fields are missing and/or which fields were declared by considering a wrong datatype. Note: remember that currently this transform always give you a result row back even if the pipelines started in the sub-workflow don’t return any result. In this case, the result row that you will get back will contain only the fields provided by the flow as input of this transform. Here you can specify where to send the result files from the workflow execution.","title":" Workflow Executor","component":"manual","version":"2.7.0","name":"workflow-executor","url":"/manual/latest/pipeline/transforms/workflow-executor.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4},{"text":"General","hash":"_general","id":5},{"text":"Parameters Tab","hash":"_parameters_tab","id":6},{"text":"Row Grouping Tab","hash":"_row_grouping_tab","id":7},{"text":"Execution Results Tab","hash":"_execution_results_tab","id":8},{"text":"Result Rows Tab","hash":"_result_rows_tab","id":9},{"text":"Result Files Tab","hash":"_result_files_tab","id":10}]},"379":{"id":379,"text":"the Workflow Logging transform receives its input from a Workflow Log metadata item. The transform requires very little configuration, but provides a lot of information. Hop Engine Spark Flink Dataflow Workflow Log Option Description Transform name Name of this transform Also log action details checked: the transform outputs both workflow and action logging and metrics. In this case, the logging will contain one line per action. For each action, the workflow logging and metrics information is repeated. unchecked: the transform only outputs workflow logging and metrics. Fieldname Type Description Workflow Logging Fields loggingDate Date the date and time this workflow was executed loggingPhase String the phase this workflow is in at the time of logging (e.g. 'end') workflowName String the logged workflow name workflowFilename String the logged workflow file name workflowStart Date execution start date for the logged workflow workflowEnd Date execution end date for the logged workflow workflowLogChannelId String logging channel id for the logged workflow parentLogChannelId String parent logging channel id for the logged workflow (e.g. the channel id of the parent workflow) workflowLogging String full logging text for the logged workflow workflowErrorCount Integer number of errors that occurred in the logged workflow execution workflowStatusDescription String status description for the logged workflow (e.g. 'Finished') Action Logging Fields actionName String the name of the action in the logged pipeline actionNr Integer the number of the current action actionResult the result (exit code, Y/N) of the current action actionLogChannelId String log channel id for the current action actionLoggingText String logging text for the current action actionErrors Integer number of errors for the current action actionLogDate String status of the current action (e.g. 'Finished') actionDuration Integer total duration for the current action actionExitStatus exit status of the current action actionNrFilesRetrieved the number of files retrieved by the current transform (if applicable) actionFilename the filename to use for the current action, e.g. the workflow or pipeline the current action runs. actionComment an optional comment added to the logs, e.g. Workflow execution finished actionReason an optional reason provided by the current action","title":" Workflow logging","component":"manual","version":"2.7.0","name":"workflow-logging","url":"/manual/latest/pipeline/transforms/workflow-logging.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Related Plugins","hash":"_related_plugins","id":3},{"text":"Options","hash":"_options","id":4},{"text":"Output Fields","hash":"_output_fields","id":5}]},"380":{"id":380,"text":"The Write To Log transform writes information to the Hop logging system. Typical use cases are logging specific values or custom logging messages to the Hop logs. be careful when writing variables or fields for (unencrypted) passwords or other sensitive information to the Hop logging system! If no fields are specified it will write out all fields to the log. If at least one field is specified it will only print out that field. Parameters and variables must be specified in the Log message section. A Logging level must be set. Set the Log detail level to Basic if you want variables to be printed out. Example to print a parameter or variable in the Log Message section: COUNTER: ${COUNTER} If no fields exist, you will have to use a \"Generate rows\" transform to create a dummy row in order to print variables or parameters. If an error stops anything from being written to the log, then disable the Hops that fail, and add logging just before the failure, and re-run Hop Engine Spark Flink Dataflow Option Description Transform Name Name of the transform this name has to be unique in a single pipeline. Log level The logging level to use. Print header Whether or not the column names for data values is printed. In the example below, this value has been set to false, so only the actual values (3, 4) are printed. Limit rows Limit the number of rows given by the parameter \"Nr. of rows to print\". Nr. of rows to print The number of rows to print when option \"limit rows\" is checked. Write to log The text to use in the logging line(s). Fields The data from fields that should we written to the log. 2020/05/14 12:30:52 - Write to log.0 - 2020/05/14 12:30:52 - Write to log.0 - ----------> Linenr 1---------------------------- 2020/05/14 12:30:52 - Write to log.0 - test log 2020/05/14 12:30:52 - Write to log.0 - 2020/05/14 12:30:52 - Write to log.0 - 3 2020/05/14 12:30:52 - Write to log.0 - 4 2020/05/14 12:30:52 - Write to log.0 - 2020/05/14 12:30:52 - Write to log.0 - ==================== 2020/05/14 12:30:52 - Write to log.0 - 2020/05/14 12:30:52 - Write to log.0 - ----------> Linenr 2---------------------------- 2020/05/14 12:30:52 - Write to log.0 - test log 2020/05/14 12:30:52 - Write to log.0 - 2020/05/14 12:30:52 - Write to log.0 - 3 2020/05/14 12:30:52 - Write to log.0 - 4 2020/05/14 12:30:52 - Write to log.0 - 2020/05/14 12:30:52 - Write to log.0 - ====================","title":" Write to log","component":"manual","version":"2.7.0","name":"writetolog","url":"/manual/latest/pipeline/transforms/writetolog.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Example log output","hash":"_example_log_output","id":4}]},"381":{"id":381,"text":"The XML Input Stream (StAX) transform reads data from XML files using the Streaming API for the XML (StAX) parser. Hop Engine Spark Flink Dataflow This transform is optimal for quickly processing large and complex data structures. Unlike the Get Data from XML transform, which uses in-memory processing and can require the purging of parts of files, the XML Input Stream (StAX) transform moves the processing logic into the pipeline. The transform itself provides the raw XML data stream together with additional processing information. This streaming transform is recommended when you have limitations with other transforms or need to parse XML when: You need fast data loads which are independent of the memory regardless of the file size. You need flexibility in reading various parts of the XML file in different ways, and do not want to repeatedly parse the file. Because the processing logic of some XML files can be complex, you should have a good knowledge of the existing Hop transforms when using this transform. Option Description Transform name Name of the transform. Filename File name of the input XML file. Specify your file name by entering its path or clicking Browse. If you connect to a transform that precedes the XML Input Stream transform, the Browse button is hidden, and the text box becomes a drop-down menu that is populated with the fields from the preceding transform. Select a value from the drop-down menu to use as the path to an XML file. You can use internal variables to specify the path. Source is from a previous transform Accept data from a field in a previous transform. Source field name Selects a field from the previous transform to use as XML data. Add filename to result? Adds the processed XML filename to the result of this pipeline by passing the filename of the XML input file as a value on each result row. You can then use it in subsequent transforms where you want to use the filename as a value. Skip (Elements/Attributes) Number of elements or attributes that should be skipped. Use this field for starting the processing at a specific location in a file. The file will still be loaded by the parser, but the rows will not be produced. Limit (Elements/Attributes) Limits the number of elements or attributes to process. With the Skip and Limit properties, you can enable chunk loading that is defined in an outer loop. Default String Length The default string length for the XML data name and value fields. Encoding Encodes the XML file data in the specified encoding. Add Namespace information? Adds the XML data type NAMESPACE to the stream. You can add an optional prefix (defined in the XML data name) and URI information (defined in the XML data value). This option adds a defined prefix in the ELEMENT data type to the XML data name, for example, prefix:product. Due to the extra namespace handling, this option slows down the processing throughput. Trim strings? Trims all name/value elements and attributes. It eliminates white spaces, tabs, carriage returns, and line feed characters at the beginning and end of the string. Include filename in output? / Fieldname Adds the processed file name to the specified field name. Row number in output? / Fieldname Adds the processed row number (starting with 1) to the specified field name. XML data type (numeric) in output? / Fieldname Adds the processed data type in numeric format to the specified field name. The following data types are defined: 0 - \"UNKNOWN\" (Reserved) 1 - \"START_ELEMENT\" 2 - \"END_ELEMENT\" 3 - \"PROCESSING_INSTRUCTION\" (Reserved) 4 - \"CHARACTERS\" 5 - \"COMMENT\" (Reserved) 6 - \"SPACE\" (Reserved) 7 - \"START_DOCUMENT\" 8 - \"END_DOCUMENT\" 9 - \"ENTITY_REFERENCE\" (Reserved) 10-\"ATTRIBUTE\" 11-\"DTD\" (Reserved) 12-\"CDATA\" (Reserved) 13-\"NAMESPACE\" (When namespace information is selected) 14-\"NOTATION_DECLARATION\" (Reserved) 15-\"ENTITY_DECLARATION\" (Reserved). XML data type (description) in output? / Fieldname Adds the processed data type in text format to the specified field name. This option should be used instead of the numeric data type for better readability of the pipeline. See the XML data type (numeric) description above for a list of values. Because this option can cause slower processing of strings and extra memory consumption, it is recommended to use the numeric data type format for big data loads XML location line in output? / Fieldname Adds the processed source XML location line to the specified field name. XML location column in output? / Fieldname Adds the processed source XML location column to the specified field name. XML element ID in output? / Fieldname Adds the processed element number (starting with '0') to the specified field name. In contrast to adding the Row number, this field number is incremented by the count of each new element and not the row number. This numbering ensures that the nesting between levels is correct. XML parent element ID in output? / Fieldname Adds the parent element number to the specified field name. When you use the XML element ID with the XML parent element ID, a complete XML element tree is available for later usage. XML element level in output? / Fieldname Adds the processed element level to the specified field name, starting with '0' for the root START_ and END_DOCUMENT. XML path in output? / Fieldname Adds the processed XML path to the specified field name. XML parent path in output? / Fieldname Adds the processed XML parent path to the specified field name. XML data name in output? / Fieldname Adds the processed data name of elements, attributes, and optional namespace prefixes to the specified field name. XML data value in output? / Fieldname Adds the processed data value of elements, attributes and optional namespace URIs to the specified field name.","title":" XML Input Stream (StAX)","component":"manual","version":"2.7.0","name":"xmlinputstream","url":"/manual/latest/pipeline/transforms/xmlinputstream.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Usage","hash":"_usage","id":3},{"text":"Options","hash":"_options","id":4}]},"382":{"id":382,"text":"The XML Join transform adds xml tags from one stream into a leading XML structure from a second stream. The target stream must have only one row, since it represents a XML document. The other stream can consist of many rows and the tags from all rows will be added to the target document. Only one row will be produced after the join. This single row contains the fields of the target transform plus the result field of the join. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Target XML Transform Transform that sends the target document to the join. Target XML Field Field that contains the XML structure. Source XML Transform Transform that send the XML structure(s) to the join that need to be added to the target. Source XML Field Field that contains the XML structures that get added to the target. XPath Statemen XPath statement to find the node in the target document where the tags will be added. When the complex join is eneabled a single ? is used as a placeholder. Complex Join Flag to enable the complex join syntax, using the placeholder in the XPath Statment Join Comparision Field Field that contains the values that get replaced in the XPath Statement Result XML field The field that wil contain the result. Encoding Encoding to be used in the XML Header and to transform the XML. Omit XML header Should the XML header be omitted? The encoding of the target XML will be preserved Omit null values from XML result Without checking this option, null values are added to the XML output as an empty element, for instance: . When this option is checked, these tags are completely omitted in the output. This is useful to save space in the output file (for high volume transactions) and to create special needed output. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" XML Join","component":"manual","version":"2.7.0","name":"xmljoin","url":"/manual/latest/pipeline/transforms/xmljoin.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":4}]},"383":{"id":383,"text":"The XML Output transform allows you to write rows from any source to one or more XML files. Hop Engine Spark Flink Dataflow The file tab is where you set general properties for the XML output file format. Option Description Transform name Name of the transform. Filename Specifies the file name and location of the output text file. Do not create file at start Enable to avoid empty files when no rows are getting processed. Pass output to servlet Enable this option to return the data via a web service instead writing into a file (see Hop data over web service). Extension Adds a period and the extension to the end of the file name (.xml). Include transformnr in filename If you run the transform in multiple copies (see also Launching Several Copies of a transform), the copy number is included in the file name, before the extension (_0). Include date in filename Includes the system date in the file name (_20041231). Include time in filename Includes the system date in the file name (_235959). Option Description Zipped Check this if you want the XML file to be stored in a ZIP archive. Encoding The encoding to use. This encoding is specified in the header of the XML file. Parent XML element The name of the root element in the XML document. Row XML element The name of the row element to use in the XML document. Split every …​ rows. The maximum number of rows of data to put in a single XML file before another is created. Option Description Fieldname The name of the field. Elementname The name of the element in the XML file to use. Content Type Is the field an attribute or Element Type Type of the field can be either String, Date, or Number. Format The format mask used to convert the values Length The length option depends on the field type follows: Number - Total number of significant figures in a number String - total length of string Date - length of printed output of the string (e.g. 4 only gives back year) Precision The precision option depends on the field type as follows: Number - Number of floating point digits String - unused Date - unused Currency Symbol used to represent currencies such as $10,000.00 or E5.000,00 Decimal A decimal point can be a \".\" (10,000.00) or \",\" (5.000,00) Group A grouping can be a \",\" (10,000.00) or \".\" (5.000,00) Null If the value of the field is null, insert this string into the textfile Get fields Click to retrieve the list of fields from the input stream(s). Minimal width Alter the options in the fields tab in such a way that the resulting width of lines in the text file is minimal; for example instead of save 0000001, \"1\" is written, and so on. String fields are not padded to their specified length. All fields of this transform support metadata injection. You can use this transform with ETL Metadata Injection to pass metadata to your pipeline at runtime.","title":" XML Output","component":"manual","version":"2.7.0","name":"xmloutput","url":"/manual/latest/pipeline/transforms/xmloutput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File Tab","hash":"_file_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5},{"text":"Fields Tab","hash":"_fields_tab","id":6},{"text":"Metadata Injection Support","hash":"_metadata_injection_support","id":7}]},"384":{"id":384,"text":"The XSD Validator transform performs an XSD validation against data in a file or in an input field. XSD is short for XML Schema Definition. As such, there are 2 entities at work here: The XML you want to validate the layout for The XSD (Schema) file that describes what the XML file should look like. To make matters more complex, it’s possible to store the XSD inside the XML itself. See also the XSD Validator workflow action. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. XML Source XML source is a file : check this if the XML file is defined as a filename in the XML field XML field : the field to read that contains the XML filename or the XML content itself Output fields Result fieldname : the name of the result field Output String field : check this option if you want to specify specific messages after validation: Display if XML is valid : the message if the XML was valid. Display if XML is not valid : the message if the XML wasn’t valid. Add validation msg in output : check this if you want to add a validation message in the output. Validation msg field: the name of the validation message field. XML schema definition XSD source : select one of these options: The XSD source is a file, let me specify the filename (specify below in the XSD filename field). The XSD source is a file, defined in a field (specify below in the XSD filename field). The XSD source is defined inside the source XML.","title":" XSD Validator","component":"manual","version":"2.7.0","name":"xsdvalidator","url":"/manual/latest/pipeline/transforms/xsdvalidator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"385":{"id":385,"text":"The XSL Transformation transform performs XSL Transformations on XML. XSLT is short for Extensible Stylesheet Language Transformations. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. XML fieldname The name of the field that will contain the XML Result fields : fieldname The name of the output fieldname that will contain the XML after the transformations","title":" XSL Transformation","component":"manual","version":"2.7.0","name":"xslt","url":"/manual/latest/pipeline/transforms/xslt.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"386":{"id":386,"text":"The YAML Input transform reads data from YAML structures, files or incoming fields. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Source is defined in a field? Whether or not the source is in a field from a previous transform. Source is a filename Whether or not the source is a filename, else a directory. get source from a field The field containing the filename or directory. File or directory The file or directory path. Add Adds the file or directory to the Selected files list. Browse Browses the local filesystem for a file or directory. Regular Expression Selected files The selected files or directories. Delete Deletes selected lines from the list. Edit Moved the selected line for editting. Show filename(s) Previews the filename. Option Description Ignore empty file Whether or not to ignore empty files. Do not raise an error if no files Whether or not the raise an error if no files are available. Limit Sets a limit to be read. Include filename in output? Adds the filename to the output rows. Filename fieldname The field containing the filename. Rownum in output? Adds the row number to the output rows. Rownum fieldname The field containing the row number. Add files to result filesname Option Description Name The name of the output field. Key The key to the element. Type The data type to convert to. Format The format or conversion mask to use in the data type conversion. Length The length of the output data type. Precision The precision of the output data type. Currency The currency symbol to use during data type conversion. Decimal The numeric decimal symbol to use during data type conversion. Group The numeric grouping symbol to use during data type conversion. Trim type The type of trimming to use during data type conversion. Get fields Approximates fields from the input.","title":" YAML Input","component":"manual","version":"2.7.0","name":"yamlinput","url":"/manual/latest/pipeline/transforms/yamlinput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3},{"text":"File Tab","hash":"_file_tab","id":4},{"text":"Content Tab","hash":"_content_tab","id":5},{"text":"Fields Tab","hash":"_fields_tab","id":6}]},"387":{"id":387,"text":"The Zip File transform creates a standard ZIP archive using the options you specify in the dialog. Hop Engine Spark Flink Dataflow Option Description Transform name Name of the transform. Create target parent folder Check this option to create the target parent folder Overwrite target file Check this option to overwrite the target file if it exists Add zip filename to result Check this option to add the zip filename to the internal result set Source filename field Define the field that contains the source Target filename field Define the field that contains the target zip filename Keep source folders Check this option to keep the source folder within the target zip filename Base folder fieldname Define the field that contains the base folder that is removed from the filename within the zip (used by the option keep source folders) After zip The action to take after zipping Move to folder field Define the field that contains the target directory to move the source files to after zipping","title":" Zip file","component":"manual","version":"2.7.0","name":"zipfile","url":"/manual/latest/pipeline/transforms/zipfile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Supported Engines","hash":"_supported_engines","id":2},{"text":"Options","hash":"_options","id":3}]},"388":{"id":388,"text":"Whenever you want to import metadata from Kettle (Pentaho Data Integration) you can use this plugin. You can use it through the File / Import from Kettle/PDI menu in the Hop GUI or using the hop-import script with the --type kettle option. In general the plugin copies Kettle files and non-Kettle files. File Conversion Transformations Kettle transformation files (.ktr extension) are converted to Hop pipelines. During this process the XML metadata is converted to the appropriate Hop format. Jobs Kettle job files (.kjb extension) are converted to Hop workflows. During this process the XML metadata is converted to the appropriate Hop format. kettle.properties The Kettle properties file in your .kettle folder (typically found in the home directory or ${KETTLE_HOME}) often contains variables and values regarding your environment. These variables and values are converted into an environment configuration file if you specified the -c or --target-config-file option. When you create an environment in Hop you can simply add this file to it to make everything work. If the configuration file already exists it will be updated, not overwritten. The description of the newly imported variables is set to Imported from Kettle to indicate that it’s new. Values of existing variables are overwritten and the existing description is kept. shared.xml The shared.xml file in your .kettle folder (typically found in the home directory or ${KETTLE_HOME}) often contains connections which are shared across many transformations and jobs. These connections are imported as Relational Database Connection metadata stored in the target folder metadata/rdbms folder. jdbc.properties A jdbc.properties file sometimes contains relational database metadata which is converted into generic RDBMS connections metadata. Non-Kettle files like text files, JSON, XML, …​ they are all copied over by default, including the sub-folders. You can change this behavior with the options: --skip-folders : don’t copy sub-folders from the input folder --skip-hidden : Don’t copy hidden files and folders like .git, .gitignore and so on --skip-existing : Only copy files which haven’t been copied yet","title":"Kettle Import","component":"manual","version":"2.7.0","name":"kettle-import","url":"/manual/latest/plugins/import/kettle-import.html","titles":[{"text":"Usage","hash":"_usage","id":1},{"text":"Functionality","hash":"_functionality","id":2},{"text":"Kettle files","hash":"_kettle_files","id":3},{"text":"Non-Kettle files","hash":"_non_kettle_files","id":4}]},"389":{"id":389,"text":"This document explains the basic structure and working of the 'projects' plugin We want to make it easy for a developer to use one or more projects alongside each other. A project is the collection of all the files you need in your data orchestration solution. This typically includes metadata, pipelines, workflows, reference files, documentation and so on. To match standard development best practices you would check all these files into a version control system like git. What are typically not included in this set of files are the variable values that you want to make the project run correctly in a certain environment. For example on a development laptop you might want to set a variable DB_HOSTNAME to localhost and on a production server this value might point to the production database server. Because of this you can define (Project Lifecycle) Environments in Hop which wrap around a project by name and include one or more configuration files. You want these configuration files to be stored outside of the project folder and perhaps into a separate version control repository. The 2 main things that define a project are its name and its home folder. Projects and environments as such are defined in the central Hop configuration file hop-config.json. By default this file lives in the config/ folder of your Hop client distribution. You can change that folder by setting the HOP_CONFIG_FOLDER environment variable on your system. In hop-config.json you’ll find a \"projectsConfig\" section. By default it contains the following: { \"projectsConfig\" : { \"enabled\" : true, \"projectMandatory\" : true, \"environmentMandatory\" : false, \"defaultProject\" : \"default\", \"defaultEnvironment\" : null, \"standardParentProject\" : \"default\", \"standardProjectsFolder\" : null, \"projectConfigurations\" : [ { \"projectName\" : \"default\", \"projectHome\" : \"config/projects/default\", \"configFilename\" : \"project-config.json\" }, { \"projectName\" : \"samples\", \"projectHome\" : \"config/projects/samples\", \"configFilename\" : \"project-config.json\" } ], \"lifecycleEnvironments\" : [ ], \"projectLifecycles\" : [ ] } } As you can see the standard Hop client distribution defines 2 projects: default and samples. Every project has extra metadata and settings stored in a project configuration file called project-config.json. For the samples project this would be config/projects/samples/project-config.json. Let’s take a look at it: { \"metadataBaseFolder\" : \"${PROJECT_HOME}/metadata\", \"unitTestsBasePath\" : \"${PROJECT_HOME}\", \"dataSetsCsvFolder\" : \"${PROJECT_HOME}/datasets\", \"enforcingExecutionInHome\" : true, \"parentProjectName\" : \"default\", \"config\" : { \"variables\" : [ ] } } You can define variables on a project level as well. This makes it handy to reference things like input and output folders which are not sensitive to being checked into version control. As you can see from the project configuration file, a project can have a parent from which it will inherit all the metadata objects as well as all the variables that are defined in it. The main toolbar in the Hop GUI offers buttons to add, edit and delete a project. The hop-conf script offers many options to edit everything projects related. Please note that these commands never change the content of a project itself. They only change the way it is configured on your system. $ sh hop-conf.sh --project-create --project hop2 --project-home /home/user/projects/hop2 --project-parent default Creating project 'hop2' Project 'hop2' was created for home folder : /home/user/projects/hop2 Configuration file for project 'hop2' was saved to : /home/user/projects/hop2/project-config.json This command adds a variable to the project configuration: $ sh hop-conf.sh --project-modify --project hop2 --project-variables INPUT_FOLDER=input/ Project configuration for 'hop2' was modified in /config/hop-config.json Project settings for 'hop2' were modified in file /home/user/projects/hop2/project-config.json If we look at the project-config.json file we’ll see that the variable/value pair was added: { \"config\" : { \"variables\" : [ { \"name\" : \"INPUT_FOLDER\", \"value\" : \"input/\" } ] } } The following deletes a project from the Hop configuration file: $ sh hop-conf.sh -pd -p hop2 Project 'hop2 was removed from the configuration Environment is short for Project Lifecycle Environment. It describes the phase of a project in its lifecycle moving from Development to Test to Acceptance to Production. It can also describe a project in a continuous integration environment and so on. As such the following attributes define an environment: Its name The name of the project The phase The configuration files you want to use to define the environment specific variables The main toolbar in the Hop GUI offers buttons to add, edit and delete an environment. Please note that you can add non-existing configuration files in the environment dialog. When editing the Hop GUI will ask you if you want to create the file. The hop-conf script offers many options to edit environment definitions. $ sh hop-conf.sh \\ --environment-create \\ --environment hop2 \\ --environment-project hop2 \\ --environment-purpose=Development \\ --environment-config-files=/home/user/projects/hop2-conf.json Creating environment 'hop2' Environment 'hop2' was created in Hop configuration file /config/hop-config.json 2021/02/01 16:37:02 - General - ERROR: Configuration file '/home/user/projects/hop2-conf.json' does not exist to read variables from. Created empty environment configuration file : /home/user/projects/hop2-conf.json hop2 Purpose: Development Configuration files: Project name: hop2 Config file: /home/user/projects/hop2-conf.json As you can see from the log, an empty file was created to set variables in: { } This command adds a variable to the environment configuration file: $ h hop-conf.sh --config-file /home/user/projects/hop2-conf.json --config-file-set-variables DB_HOSTNAME=localhost,DB_PASSWORD=abcd Configuration file '/home/user/projects/hop2-conf.json' was modified. If we look at the file hop2-conf.json we’ll see that the variables were added: { \"variables\" : [ { \"name\" : \"DB_HOSTNAME\", \"value\" : \"localhost\", \"description\" : \"\" }, { \"name\" : \"DB_PASSWORD\", \"value\" : \"abcd\", \"description\" : \"\" } ] } Please note that you can add descriptions for the variables as well with the --describe-variable option. Please run hop-conf without options to see all the possibilities. The following deletes an environment from the Hop configuration file: $ $ sh hop-conf.sh --environment-delete --environment hop2 Lifecycle environment 'hop2' was deleted from Hop configuration file /config/hop-config.json You can specify an environment or a project when executing a pipeline or a workflow. By doing so you are automatically configuring metadata, variables without too much fuss. The easiest example is shown by executing the \"complex\" pipeline from the Apache Beam examples: $ sh hop-run.sh --project samples --file 'beam/pipelines/complex.hpl' --runconfig Direct 2022/12/15 14:40:51 - HopRun - Enabling project 'hop-samples' 2022/12/15 14:40:51 - HopRun - Relative path filename specified: /hop/config/projects/samples/beam/pipelines/complex.hpl 2022/12/15 14:40:51 - HopRun - Starting pipeline: /hop/config/projects/samples/beam/pipelines/complex.hpl 2022/12/15 14:40:54 - General - Created Apache Beam pipeline with name 'complex' 2022/12/15 14:40:54 - General - Handled transform (INPUT) : Customer data 2022/12/15 14:40:54 - General - Handled transform (INPUT) : State data 2022/12/15 14:40:54 - General - Handled Group By (TRANSFORM) : countPerState, gets data from 1 previous transform(s) 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : uppercase state, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:54 - General - Handled Merge Join (TRANSFORM) : Merge join 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : Lookup count per state, gets data from 1 previous transform(s), targets=0, infos=1 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : name<n, gets data from 1 previous transform(s), targets=2, infos=0 2022/12/15 14:40:54 - General - Transform Label: N-Z reading from previous transform targeting this one using : name<n - TARGET - Label: N-Z 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : Label: N-Z, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:54 - General - Transform Label: A-M reading from previous transform targeting this one using : name<n - TARGET - Label: A-M 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : Label: A-M, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : Switch / case, gets data from 2 previous transform(s), targets=4, infos=0 2022/12/15 14:40:54 - General - Transform CA reading from previous transform targeting this one using : Switch / case - TARGET - CA 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : CA, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:54 - General - Transform NY reading from previous transform targeting this one using : Switch / case - TARGET - NY 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : NY, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:54 - General - Transform FL reading from previous transform targeting this one using : Switch / case - TARGET - FL 2022/12/15 14:40:54 - General - Handled generic transform (TRANSFORM) : FL, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:54 - General - Transform Default reading from previous transform targeting this one using : Switch / case - TARGET - Default 2022/12/15 14:40:55 - General - Handled generic transform (TRANSFORM) : Default, gets data from 1 previous transform(s), targets=0, infos=0 2022/12/15 14:40:55 - General - Handled generic transform (TRANSFORM) : Collect, gets data from 4 previous transform(s), targets=0, infos=0 2022/12/15 14:40:55 - General - Handled transform (OUTPUT) : complex, gets data from Collect 2022/12/15 14:40:55 - General - Executing this pipeline using the Beam Pipeline Engine with run configuration 'Direct' To execute an Apache Beam pipeline a lot of information and metadata is needed. Let’s dive into a few fun information tidbits: By referencing the samples project Hop knows where the project is located (config/projects/samples) Since we know the location of the project, we can specify pipelines and workflows with a relative path The project knows where its metadata is stored (config/projects/samples/metadata) so it knows where to find the Direct pipeline run configuration (config/projects/samples/metadata/pipeline-run-configuration/Direct.json) This run configuration defines its own pipeline engine specific variables, in this case the output folder : DATA_OUTPUT=${PROJECT_HOME}/beam/output/ The output of the samples is as such written to config/projects/samples/beam/output To reference an environment you can execute using -e or --environment. The only difference is that you’ll have a number of extra environment variables set while executing. There are various options to configure the behavior of the Projects plugin itself. In Hop configuration file hop-config.json we can find the following options: { \"projectMandatory\" : true, \"environmentMandatory\" : false, \"defaultProject\" : \"default\", \"defaultEnvironment\" : null, \"standardParentProject\" : \"default\", \"standardProjectsFolder\" : \"/home/matt/test-stuff/\" } Option Description hop-conf option projectMandatory This will prevent anyone from using hop-run without specifying a project --project-mandatory environmentMandatory This will prevent anyone from using hop-run without specifying an environment --environment-mandatory defaultProject The default project to use when none is specified --default-project defaultEnvironment The default environment to use when none is specified --default-environment standardParentProject The standard parent project to propose when creating new project --standard-parent-project standardProjectsFolder The folder to which you’ll browse by default in the GUI when creating new projects --standard-projects-folder","title":"Projects & Environments","component":"manual","version":"2.7.0","name":"projects","url":"/manual/latest/plugins/projects/projects.html","titles":[{"text":"Architecture","hash":"_architecture","id":1},{"text":"Projects","hash":"_projects","id":2},{"text":"Variables","hash":"_variables","id":3},{"text":"Parent projects","hash":"_parent_projects","id":4},{"text":"Configuration using Hop GUI","hash":"_configuration_using_hop_gui","id":5},{"text":"Configuration on the command line","hash":"_configuration_on_the_command_line","id":6},{"text":"Creating a project","hash":"_creating_a_project","id":7},{"text":"Modifying a project","hash":"_modifying_a_project","id":8},{"text":"Deleting a project","hash":"_deleting_a_project","id":9},{"text":"Environments","hash":"_environments","id":10},{"text":"Configuration using Hop GUI","hash":"_configuration_using_hop_gui_2","id":11},{"text":"Configuration on the command line","hash":"_configuration_on_the_command_line_2","id":12},{"text":"Creating an environment","hash":"_creating_an_environment","id":13},{"text":"Setting variables in an environment","hash":"_setting_variables_in_an_environment","id":14},{"text":"Deleting an environment","hash":"_deleting_an_environment","id":15},{"text":"Running pipelines and workflows","hash":"_running_pipelines_and_workflows","id":16},{"text":"Plugin configuration","hash":"_plugin_configuration","id":17}]},"390":{"id":390,"text":"Here are some self-evident pieces of advice: Version control your project folder. Please consider using git. Reference cases in commits Make sure to have backups Run continuous integration Set up lifecycle environments (development, test, acceptance, production) as needed Test your pipelines with unit tests Run all unit tests regularly Validate the results & take action if needed","title":"","component":"manual","version":"2.7.0","name":"governance","url":"/manual/latest/snippets/best-practices/governance.html","titles":[]},"391":{"id":391,"text":"Take some time to capture the logging of your workflows and pipelines. Any time you run anything you want to have a trace of it. Things tend to go wrong when you least expect it and at that point you like being able to see what happened. See Logging Basics, Logging Reflection or consider logging to a Neo4j graph database. This last one allows you to browse the logging results in the Neo4j perspective.","title":"","component":"manual","version":"2.7.0","name":"logging","url":"/manual/latest/snippets/best-practices/logging.html","titles":[]},"392":{"id":392,"text":"Avoid looping in workflows. The easiest way to loop over a set of values, rows, files, …​ is to use an Executor transform. Pipeline Executor : run a pipeline for each input row Workflow Executor : run a workflow for each input row You can nicely map field values to parameters of the pipeline or workflow making loops a breeze.","title":"","component":"manual","version":"2.7.0","name":"loops","url":"/manual/latest/snippets/best-practices/loops.html","titles":[]},"393":{"id":393,"text":"If you have recurring logic in various pipelines, consider writing Mapping. It is a pipeline reading from a Mapping Input and writing to a Mapping Output transform. You can re-use the work in other pipelines using the Simple Mapping transform.","title":"","component":"manual","version":"2.7.0","name":"mappings","url":"/manual/latest/snippets/best-practices/mappings.html","titles":[]},"394":{"id":394,"text":"If you find that you need to create 'almost' the same pipeline a lot of times, consider that you can use Metadata Injection to create re-usable template pipelines. Avoid manual population of dialogs Whenever you need dynamic ETL Supports data streaming Example use cases include: * Load 50 different file formats into a database with one pipeline template * Automatically normalize and load property sets","title":"","component":"manual","version":"2.7.0","name":"metadata-injection","url":"/manual/latest/snippets/best-practices/metadata-injection.html","titles":[]},"395":{"id":395,"text":"When looking at a pipeline or workflow it’s so much easier to see what’s going on if you give meaningful names to the transforms and workflows. For input and output files, why not use the filename you’re using? You can use any unicode character in the name of a transform or action and even newlines are allowed. When giving names to metadata objects like relational database connections, avoid environment specific words like a country, region, lifecycle environments: Here are some examples to avoid and possible alternatives: Test Database → CRM France MySQL → WWW East Coast Cluster → Fraud What you can see in larger projects is that projects can become quite cluttered after a while. Here is some advice on how to keep things tidy and clean…​ Folders can have sub-folders: organize your work with sub-folders in a project. It’s just hard to work with hundreds of pipelines and workflows in a single folder. Use a naming convention for any object that you need to give a name: pipelines, workflows, folders, names, tables, fields, …​ For larger projects you should consider setting up a naming standard. It’s just a document in which you specify how you want to name things. Make sure to adjust, verify and enforce your naming standard periodically. If you don’t plan to do this you might was well not set up a corporate standard. Consider scripts and commit hooks or a nightly run on your build server (Jenkins) to validate your naming standard.","title":"","component":"manual","version":"2.7.0","name":"naming-conventions","url":"/manual/latest/snippets/best-practices/naming-conventions.html","titles":[{"text":"Transforms and actions","hash":"NamingConventions","id":1},{"text":"Metadata","hash":"_metadata","id":2},{"text":"Naming standard","hash":"_naming_standard","id":3}]},"396":{"id":396,"text":"Here are a few things to consider when looking at performance in a pipeline: Pipelines are networks. The speed of the network is limited by the slowest transform in it. Slow transforms are indicated when running in Hop GUI. You’ll see a dotted line around the slow transforms. Adding more copies and increasing parallelism is not always beneficial, but it can be. The proof of that pudding is in the eating so take note of execution times and see if you should increase or decrease parallelism to help performance.","title":"","component":"manual","version":"2.7.0","name":"performance-basics","url":"/manual/latest/snippets/best-practices/performance-basics.html","titles":[]},"397":{"id":397,"text":"Limit the amount of transforms or actions! Larger pipelines or workflows become harder to debug and develop against. For every transform you add to a pipeline you start at least one new thread at runtime. You could be slowing down significantly simply by having hundreds of threads for hundreds of transforms. If you find that you need to split up a pipeline you can write intermediate data to a temporary file using the Serialize to file transform. The next pipeline in a workflow can then pick up the data again with the De-serialize from file transform. While obviously you can also use a database or use another file type to do the same, these transforms will perform the fastest.","title":"","component":"manual","version":"2.7.0","name":"size-matters","url":"/manual/latest/snippets/best-practices/size-matters.html","titles":[]},"398":{"id":398,"text":"Variables provide an easy way to avoid hard-coding all sorts of things in your system, environment or project. Here is some best practices advice on the subject: Put environment specific settings in an environment (Duh!) configuration file. Create an environment for this. When referencing file locations, prefer ${PROJECT_HOME} over expressions like ${Internal.Entry.Current.Directory} or ${Internal.Pipeline.Filename.Directory} Configure transform copies with variables to allow for easy transition between differently sized environments.","title":"","component":"manual","version":"2.7.0","name":"variables","url":"/manual/latest/snippets/best-practices/variables.html","titles":[]},"399":{"id":399,"text":"An Action is one operation performed in a Workflow. Actions are executed sequentially by default, with parallel execution as a configuration option. An Action returns a true or false exit code, which can be used (or ignored) in the Workflow’s execution.","title":"","component":"manual","version":"2.7.0","name":"action","url":"/manual/latest/snippets/hop-concepts/action.html","titles":[]},"400":{"id":400,"text":"Some transforms share a common field information panel. That panel allows a user to modify metadata about the way information is stored or handled by the particular transform on canvas, but it will also set the expectation for how it is presented or output by other transforms. New Field - What an output name should be for a field sent out from the step. Type - What type (String, Integer, Numeric, etc.) for the field being sent out from the step. Length - Usually for Strings, but if you specify a length for an integer it will have a padding effect of prepending 0s until the int is long enough. Precision - Usually for Numerics in steps that care about significant digits after a decimal point. Format - Used frequently to give dates, or numerics, even currency a format. It obeys, https://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html and supports common number formats. (find link for that standard). Group - is used to specify which character is used for separating thousands in the output - i.e commas in the US (1,000) and periods in Germany (1.000) Decimal - is the character that should be used as a dividing marker between whole numbers on the left and fractioal parts on the right i.e. 1,000.10 in the US and 1.000,10 in Germany. Currency - Hanging around, but not used by many transforms. Need to know which one as an example. Nullif - What value should be written in for a field if it came back as Default - What value should be given the field in case it was empty.","title":"","component":"manual","version":"2.7.0","name":"columninfo-wiget-defaults","url":"/manual/latest/snippets/hop-concepts/columninfo-wiget-defaults.html","titles":[]},"401":{"id":401,"text":"Hop Environments are instances of projects that hold the actual runtime configurations and other metadata objects for a project. Example: the 'dev' environment for the 'Sales' project specifies to read from host '10.0.0.1' for the 'customers' database connection","title":"","component":"manual","version":"2.7.0","name":"environment","url":"/manual/latest/snippets/hop-concepts/environment.html","titles":[]},"402":{"id":402,"text":"Project Hop Projects are a conceptual grouping of configurations, variables, metadata objects and workflows and pipelines. Projects can inherit metadata from parent projects. A project contains one or more environments where the actual configuration is defined. Example: a 'Sales' project contains a 'customers' database connection and a number of workflows and pipelines. The runtime configurations, database connection properties etc are defined in the 'dev', 'uat' and 'prd' environments. Environment Hop Environments are instances of projects that hold the actual runtime configurations and other metadata objects for a project. Example: the 'dev' environment for the 'Sales' project specifies to read from host '10.0.0.1' for the 'customers' database connection","title":"","component":"manual","version":"2.7.0","name":"hop-projects-environments","url":"/manual/latest/snippets/hop-concepts/hop-projects-environments.html","titles":[{"text":"Projects and Environments","hash":"_projects_and_environments","id":1}]},"403":{"id":403,"text":"A Hop links Actions in a Workflow or Transforms in a Pipeline. In Workflows, Hops operate based on the exit status of previous Actions, Hops in Pipelines pass data between Transforms.","title":"","component":"manual","version":"2.7.0","name":"hop","url":"/manual/latest/snippets/hop-concepts/hop.html","titles":[]},"404":{"id":404,"text":"Action An Action is one operation performed in a Workflow. Actions are executed sequentially by default, with parallel execution as a configuration option. An Action returns a true or false exit code, which can be used (or ignored) in the Workflow’s execution. Hop A Hop links Actions in a Workflow or Transforms in a Pipeline. In Workflows, Hops operate based on the exit status of previous Actions, Hops in Pipelines pass data between Transforms. Pipeline Pipelines are the actual data workers. Operations in a Pipeline read, modify, enrich, clean and write data. Orchestration of Pipelines is done through othere Pipelines and/or Workflows. Transform A Transform is a unit of work performed in a Pipeline. Typical Transform operations are reading data from files, databases, performing lookups or joins, enriching, cleaning data and more. All transforms in a Pipeline are executed in parallel. Transforms process data and move batches of processed data on Hops for processing by subsequent Actions. Workflow A Workflow is a sequence of operations that are performed sequentially by default (with optional parallel execution). Workflows usually do not operate on the data directly, but perform orchestration tasks. Typical tasks in a Workflow consist of retrieving and archiving data, sending emails, error handling etc. )","title":"","component":"manual","version":"2.7.0","name":"item-types","url":"/manual/latest/snippets/hop-concepts/item-types.html","titles":[{"text":"Item types","hash":"_item_types","id":1}]},"405":{"id":405,"text":"If enabled, all data conversions (character decoding, data conversion, trimming, …​) for the data being read will be postponed as long as possible, effectively reading the data as binary fields. Enabling lazy conversion can significantly decrease the CPU cost of reading data. When to avoid: if the data conversion needs to be performed later in the stream anyway, postponing the conversion may slow things down instead of speeding up. When to use: use cases where Lazy Conversion may speed things up when 1) data is read and written to another file without conversion, 2) data needs to be sorted and doesn’t fit in memory. In this case, serialization to disk is faster with lazy conversion because encoding and type conversions are postponed, or 3) bulk-loading to database without the need for data conversion. Bulk loading utilities typically read text directly and the generation of this text is faster (this does not apply to Table Output).","title":"","component":"manual","version":"2.7.0","name":"lazy-loading","url":"/manual/latest/snippets/hop-concepts/lazy-loading.html","titles":[]},"406":{"id":406,"text":"Hop Metadata is the central storage repository for shared metadata like relational database connections, run configurations, servers, git repositories and so on. Metadata is persisted as json and is stored by default in a project’s base folder.","title":"","component":"manual","version":"2.7.0","name":"metadata","url":"/manual/latest/snippets/hop-concepts/metadata.html","titles":[]},"407":{"id":407,"text":"Pipelines are the actual data workers. Operations in a Pipeline read, modify, enrich, clean and write data. Orchestration of Pipelines is done through othere Pipelines and/or Workflows.","title":"","component":"manual","version":"2.7.0","name":"pipeline","url":"/manual/latest/snippets/hop-concepts/pipeline.html","titles":[]},"408":{"id":408,"text":"Hop Projects are a conceptual grouping of configurations, variables, metadata objects and workflows and pipelines. Projects can inherit metadata from parent projects. A project contains one or more environments where the actual configuration is defined. Example: a 'Sales' project contains a 'customers' database connection and a number of workflows and pipelines. The runtime configurations, database connection properties etc are defined in the 'dev', 'uat' and 'prd' environments.","title":"","component":"manual","version":"2.7.0","name":"project","url":"/manual/latest/snippets/hop-concepts/project.html","titles":[]},"409":{"id":409,"text":"A Transform is a unit of work performed in a Pipeline. Typical Transform operations are reading data from files, databases, performing lookups or joins, enriching, cleaning data and more. All transforms in a Pipeline are executed in parallel. Transforms process data and move batches of processed data on Hops for processing by subsequent Actions.","title":"","component":"manual","version":"2.7.0","name":"transform","url":"/manual/latest/snippets/hop-concepts/transform.html","titles":[]},"410":{"id":410,"text":"A Workflow is a sequence of operations that are performed sequentially by default (with optional parallel execution). Workflows usually do not operate on the data directly, but perform orchestration tasks. Typical tasks in a Workflow consist of retrieving and archiving data, sending emails, error handling etc. )","title":"","component":"manual","version":"2.7.0","name":"workflow","url":"/manual/latest/snippets/hop-concepts/workflow.html","titles":[]},"411":{"id":411,"text":"Hop Conf is a command line tool to manage various aspects of your Hop configuration: projects, environments, cloud configuration and more","title":"","component":"manual","version":"2.7.0","name":"hop-conf","url":"/manual/latest/snippets/hop-tools/hop-conf.html","titles":[]},"412":{"id":412,"text":"Hop Encrypt is a command line tool that obfuscates or encrypts a plain text password for use in XML, password or metadata files. Make sure to also copy the password encryption prefix to indicate the obfuscated nature of the password. Hop will then be able to make the distinction between regular plain text passwords and obfuscated ones.","title":"","component":"manual","version":"2.7.0","name":"hop-encrypt","url":"/manual/latest/snippets/hop-tools/hop-encrypt.html","titles":[]},"413":{"id":413,"text":"Hop Gui is the visual IDE where Hop data developers create, test, run and manage the life cycle for workflows and pipelines. In addition to functionality for development and life cycle management, Hop Gui contains tools and perspectives to manage projects and environments, to search and manage metadata, to manage and version control a large variety of files and to explore logging in a Neo4j graph.","title":"","component":"manual","version":"2.7.0","name":"hop-gui","url":"/manual/latest/snippets/hop-tools/hop-gui.html","titles":[]},"414":{"id":414,"text":"Hop Import is a command line tool to import PDI/Kettle jobs and transformations into Apache Hop. Hop Import does a lot more than just a code conversion from jobs to workflows and transformations to pipelines: database connections are converted to Apache Hop rdbms connections, variables are parsed and imported, and everything is bundled into a full Apache Hop project.","title":"","component":"manual","version":"2.7.0","name":"hop-import","url":"/manual/latest/snippets/hop-tools/hop-import.html","titles":[]},"415":{"id":415,"text":"Hop Run is a command line tool to run workflows and pipelines, with options to (list or) specify projects, environments, properties and run configurations.","title":"","component":"manual","version":"2.7.0","name":"hop-run","url":"/manual/latest/snippets/hop-tools/hop-run.html","titles":[]},"416":{"id":416,"text":"Hop Search is a command line tool to search all metadata available in a specific project or environment.","title":"","component":"manual","version":"2.7.0","name":"hop-search","url":"/manual/latest/snippets/hop-tools/hop-search.html","titles":[]},"417":{"id":417,"text":"Hop Server is a web service interface to manage and run workflows and pipelines.","title":"","component":"manual","version":"2.7.0","name":"hop-server","url":"/manual/latest/snippets/hop-tools/hop-server.html","titles":[]},"418":{"id":418,"text":"Hop Conf Hop Conf is a command line tool to manage various aspects of your Hop configuration: projects, environments, cloud configuration and more Hop Encrypt Hop Encrypt is a command line tool that obfuscates or encrypts a plain text password for use in XML, password or metadata files. Make sure to also copy the password encryption prefix to indicate the obfuscated nature of the password. Hop will then be able to make the distinction between regular plain text passwords and obfuscated ones. Hop Gui Hop Gui is the visual IDE where Hop data developers create, test, run and manage the life cycle for workflows and pipelines. In addition to functionality for development and life cycle management, Hop Gui contains tools and perspectives to manage projects and environments, to search and manage metadata, to manage and version control a large variety of files and to explore logging in a Neo4j graph. Hop Run Hop Run is a command line tool to run workflows and pipelines, with options to (list or) specify projects, environments, properties and run configurations. Hop Search Hop Search is a command line tool to search all metadata available in a specific project or environment. Hop Server Hop Server is a web service interface to manage and run workflows and pipelines. Hop Translate Hop Translator is a gui tool that allows non-technical users to translate Hop in their native language.","title":"","component":"manual","version":"2.7.0","name":"hop-tools","url":"/manual/latest/snippets/hop-tools/hop-tools.html","titles":[{"text":"Tools","hash":"_tools","id":1}]},"419":{"id":419,"text":"Hop Translator is a gui tool that allows non-technical users to translate Hop in their native language.","title":"","component":"manual","version":"2.7.0","name":"hop-translator","url":"/manual/latest/snippets/hop-tools/hop-translator.html","titles":[]},"420":{"id":420,"text":"You can see a list of defined variables by using CTRL-SPACE (CMD-SPACE on OSX) in the input field. This helper will insert a selected variable into the input field. Only environment variables and variables with the JVM scope are shown here. Variables that are created in pipeline or workflow with a parent, grant parent or root workflow job need to be entered manually","title":"","component":"manual","version":"2.7.0","name":"control-space","url":"/manual/latest/snippets/variables/control-space.html","titles":[]},"421":{"id":421,"text":"HOP_AUDIT_FOLDER Set this variable to a valid path on your machine to store Hop’s audit information. This information includes last opened files per project, zoom size and lots more.","title":"","component":"manual","version":"2.7.0","name":"hop-audit-folder","url":"/manual/latest/snippets/variables/hop-audit-folder.html","titles":[]},"422":{"id":422,"text":"HOP_CONFIG_FOLDER Hop stores your configuration in the config folder by default. Set this environment variable to point to a folder outside of your Hop installation to keep your configuration, projects and environment list etc, no matter which Hop version or installation you use. copy the contents of an existing hop/conf folder to the path set in HOP_CONFIG_FOLDER to move the configuration from one of your Hop installations to your new central location.","title":"","component":"manual","version":"2.7.0","name":"hop-config-folder","url":"/manual/latest/snippets/variables/hop-config-folder.html","titles":[]},"423":{"id":423,"text":"HOP_OPTIONS Set this variable to add JVM options, e.g. -Xmx=2g. This variables' value overrules the settings in the various scripts in your Apache Hop installation.","title":"","component":"manual","version":"2.7.0","name":"hop-options","url":"/manual/latest/snippets/variables/hop-options.html","titles":[]},"424":{"id":424,"text":"HOP_PLUGIN_BASE_FOLDERS Set this variable to point Hop to a comma separated list of folders where you want Hop to look for additional plugins. When using this variable it will also unset your default plugins folder, make sure to add the default plugin folder to the comma separated list. This can be a relative path to the installation eg. export HOP_PLUGIN_BASE_FOLDERS=./plugins,/additional/plugin/folder. The ./plugins will point to the plugins in the base installation folder","title":"","component":"manual","version":"2.7.0","name":"hop-plugin-base-folders","url":"/manual/latest/snippets/variables/hop-plugin-base-folders.html","titles":[]},"425":{"id":425,"text":"HOP_SHARED_JDBC_FOLDERS This is a comma separated list of folder containing JDBC drivers, default value is lib/jdbc. If you still need the default jdbc drivers when changing this you need to include the default folder path.","title":"","component":"manual","version":"2.7.0","name":"hop-shared-jdbc-folder","url":"/manual/latest/snippets/variables/hop-shared-jdbc-folder.html","titles":[]},"426":{"id":426,"text":"HOP_WINDOWS_SHELL_ENCODING This variable is for Windows users. It is possible that the shell encoding (the things you see in the CMD window) does not match your system encoding. This can cause confusion when using special characters in logging and Shell Action/transform. You can determine which codepage/encoding your system is using by executing following command in Powershell [System.Text.Encoding]::Default. You can then use the value shown at WindowsCodePage and set the HOP_WINDOWS_SHELL_ENCODING parameter to this value. To set Windows Variables go to System → System Properties → Environment Variables and define this on user or system scope","title":"","component":"manual","version":"2.7.0","name":"hop-windows-shell-encoding","url":"/manual/latest/snippets/variables/hop-windows-shell-encoding.html","titles":[]},"427":{"id":427,"text":"From avro.apache.org: Apache Avro™ is a data serialization system. To learn more about Avro, please read the current documentation. Hop supports Avro through a number of plugins. First and foremost we support Avro as a data type called \"Avro Record\". It simply describes a class of type org.apache.avro.generic.GenericRecord. This in turn encapsulates both an Avro schema and a set of values. Avro Decode: This allows you to extract Hop values from an Avro Record data type. Avro Encode: This allows you to extract Hop values from an Avro Record data type. If you want to send or receive Avro records using the Hop Kafka transforms it’s important to set a few options: Option Description Example value.converter.schema.registry.url Specify the URL of your Confluent schema registry. http://confluent-server:8081 schema.registry.url Specify the URL of your Confluent schema registry. http://confluent-server:8081 auto.register.schemas Instruct Kafka to automatically register the schema of the Avro record in the Confluent schema registry. true","title":"Avro","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/technology/avro/index.html","titles":[{"text":"Pipeline Transforms","hash":"_pipeline_transforms","id":1},{"text":"Kafka Producer transforms","hash":"_kafka_producer_transforms","id":2}]},"428":{"id":428,"text":"From Wikipedia: Microsoft Azure, commonly referred to as Azure (/ˈæʒər/), is a cloud computing service created by Microsoft for building, testing, deploying, and managing applications and services through Microsoft-managed data centers. It provides software as a service (SaaS), platform as a service (PaaS) and infrastructure as a service (IaaS) and supports many different programming languages, tools, and frameworks, including both Microsoft-specific and third-party software and systems. Hop supports Azure through a number of metadata types: Azure Event Hubs Listener: listens indefinitely to an Event Hub on the Microsoft Azure cloud platform. Azure Event Hubs Writer: allows you to write messages (events) to a streaming service bus called Event Hubs on the Microsoft Azure cloud platform. Apache VFS Support in Hop allows you to directly read from a multitude of file systems and protocols, including Azure: Azure Blob Storage: read from and write data directly in Azure Blob Storage","title":"Azure","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/technology/azure/index.html","titles":[{"text":"Pipeline Transforms","hash":"_pipeline_transforms","id":1},{"text":"VFS","hash":"_vfs","id":2}]},"429":{"id":429,"text":"From the Apache Cassandra website: The database is the right choice when you need scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data. Cassandra’s support for replicating across multiple datacenters is best-in-class, providing lower latency for your users and the peace of mind of knowing that you can survive regional outages. From Wikipedia: Apache Cassandra is a free and open-source, distributed, wide-column store, NoSQL database management system designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure. Cassandra offers support for clusters spanning multiple datacenters,[2] with asynchronous masterless replication allowing low latency operations for all clients. Cassandra was designed to implement a combination of Amazon’s Dynamo distributed storage and replication techniques combined with Google’s Bigtable data and storage engine model.[3] Hop supports Cassandra 4 (since version 2.2.0) with the following: Cassandra Connection: Create a connection to your Cassandra database cluster. Cassandra Exec CQL: Execute Cassandra CQL Cassandra Input: Reads from a Cassandra cluster through a CQL query. Cassandra Output: Write data to a table in a Cassandra cluster. SSTable Output: Write data to a filesystem directory as a Cassandra SSTable.","title":"Cassandra Technology","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/technology/cassandra/index.html","titles":[{"text":"Cassandra Support in Hop","hash":"_cassandra_support_in_hop","id":1},{"text":"Metadata Types","hash":"_metadata_types","id":2},{"text":"Workflow Actions","hash":"_workflow_actions","id":3},{"text":"Pipeline Transforms","hash":"_pipeline_transforms","id":4}]},"430":{"id":430,"text":"The Google technology stack is supported in Hop through a number of plugins. We briefly touch upon them below. BigQuery Input (Beam) BigQuery Output (Beam) Bigtable Input (Beam) Bigtable Output (Beam) GCP Pub/Sub Publisher (Beam) GCP Pub/Sub Subscriber (Beam) Check the external plugins for more information on a number of additional Google plugins that can’t be or won’t be included with Apache Hop (Google Sheets Input and Output, Google Analytics) Apache VFS Support in Hop allows you to directly read from a multitude of file systems and protocols, including Google: Google Drive: read and write data directly from and to Google Drive files and folders. Google Cloud Storage: read and write data directly from and to files and folders in Google Cloud Storage buckets When executing your pipeline using a Beam runner which is NOT DataFlow, make sure to pass the default Google cloud project ID by running: gcloud config set project This affects Google Cloud specific APIs like BigQuery, Pub/Sub and others.","title":"Google Technology","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/technology/google/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Pipeline Transforms","hash":"_pipeline_transforms","id":2},{"text":"VFS","hash":"_vfs","id":3},{"text":"Beam vs Google Cloud","hash":"_beam_vs_google_cloud","id":4}]},"431":{"id":431,"text":"Memgraph is largely compatible with Neo4j and can use a lot of the Neo4j functionality in Apache Hop. Memgraph focuses on in-memory, realtime and scalable analytics. The Memgraph compatibility with Neo4j allows you to use a lot of the Neo4j functionality in Apache Hop with Memgraph. The --bolt-server-name-for-init=Neo4j/ parameter needs to be set to allow Apache Hop to connect to a Memgraph database over the bolt protocol. More information is available in the memgraph docs. Example command to start a Memgraph server in a container: docker run -it -p 7687:7687 -p 7444:7444 -p 3000:3000 -e MEMGRAPH=\"--bolt-server-name-for-init=Neo4j/\" memgraph/memgraph-platform Neo4j connections: make sure to specify bolt instead of the default neo4j protocol most of the Neo4j graph output, Neo4j output, Cypher transforms and actions (except for index manipulation, see below) seem to work correctly. Please create a bug ticket if you find any issues. Memgraph’s index syntax differs from the Neo4j syntax, which causes the Neo4j index and Neo4j constraint actions to fail. Creating indexes through a Cypher action or a Cypher transform fails with an error similar to ERROR: org.neo4j.driver.exceptions.ClientException: Index manipulation not allowed in multicommand transactions.. Check the Memgraph docs for more information on indexing.","title":"Memgraph","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/technology/memgraph/index.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Run Memgraph in docker","hash":"_run_memgraph_in_docker","id":2},{"text":"What works","hash":"_what_works","id":3},{"text":"known issues","hash":"_known_issues","id":4}]},"432":{"id":432,"text":"Neo4j is an open source graph database which you can download from www.neo4j.com/download-center You can use it to represent information with nodes and relationships in a property graph. Neo4j doesn’t use indexes which allows it to traverse large graphs really quickly with so-called graph algorithms. For more information on these unique graph algorithms see: Neo4j Graph Algorithms Hop supports Neo4j through the following metadata objects You can use Neo4j to store logging and execution lineage of your workflows and pipelines. The way you do this is simply by setting the variable NEO4J_LOGGING_CONNECTION to the name of the Neo4j Connection where you want the logging and lineage to be written to. The Neo4j plugin offers a separate perspective to query this logging and lineage information. For example, it allows you to quickly jump to the place where an error occurred. This neat trick is performed by asking the database to find the shortest path between and execution node where an error occurred and without children and the \"grand parent\" node. The path you get is the exact path that was followed from for example the \"grand parent\" workflow to the exact transform where an error occurred. Neo4j Connection: create or manage a connection to a Neo4j database Neo4j Graph Model: crearte or manage a Neo4j (sub)graph model Neo4j Check Connection: check a connection to a Neo4j database Neo4j Cypher Script: execute a Cypher script or query Neo4j Index: Create or drop Neo4j indexes Neo4j Constraint: Create or drop Neo4j constraints Neo4j Cypher: execute a Cypher query on a Neo4j database using parameter info from input fields Neo4j Generate CSVs: Generate CSV files for nodes and relationships to be used with neo4j-import Neo4j Get Log Info: Queries the Neo4j logging graph for execution info Neo4j Graph Output: Writes to a Neo4j graph using an input fields mapping. Neo4j Import: Runs a Neo4j import command using the provided CSV files Neo4j Output: Write nodes and/or relationships to a Neo4j graph Neo4j Split Graph: Splits the nodes and relationships of a Neo4j graph The Neo4j examples included in the release downloads is described in document: Working with Neo4j data","title":"Neo4j","component":"manual","version":"2.7.0","name":"index","url":"/manual/latest/technology/neo4j/index.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Perspective: Execution lineage","hash":"_perspective_execution_lineage","id":2},{"text":"Metadata Types","hash":"_metadata_types","id":3},{"text":"Workflow Actions","hash":"_workflow_actions","id":4},{"text":"Pipeline Transforms","hash":"_pipeline_transforms","id":5},{"text":"Examples","hash":"_examples","id":6}]},"433":{"id":433,"text":"Table of Contents Introduction Samples setup Updating graphs Graph Output : The beers Wikipedia example Neo4j Output : parallel data loading Cypher : a simple unwind example Removing data : The Cleanup example Retrieving data Cypher : complex returns Bulk loading Using examples, this article explains how to get started with loading data into Neo4j and then getting it back out if needed. A graph is made up of nodes and relationships (also called edges). Relationships link up Nodes and both can have any number of properties. In that regard a graph is different from your typical 'relational database' which hints at the typical challenge when loading data into Neo4j and getting it back out: converting between relational and graph data. In this document we’ll sketch some possibilities to get started. To make the Neo4j examples work in the neo4j/ folder of your samples project you need to configure a few variables: NEO4J_HOSTNAME : The Neo4j server hostname NEO4J_PORT : The neo4j database port (default is 7687) NEO4J_USERNAME : The username NEO4J_PASSWORD : The password These variables can be easily set by creating a new environment which represents your situation. Create a new environment configuration file and set the variables in there. The Graph Output transform is a useful transform which is capable of updating multiple nodes and relationships at the same time. To get started with this transform you can take a look at workflow neo4j/beers-wikipedia-graph.hwf. This workflow takes the following actions: Ping Neo4j: Perform a network ping to the Neo4j server to see if it’s reachable. Check Neo4j: connect to the Neo4j server and returns a static value from it to see if it’s working as expected Create indexes for graph model Belgian Beers: Create indexes to get great performance when updating nodes or relationships Create constraints for graph model Belgian Beers: Create constraints to guarantee uniqueness of primary key properties Read and scrub the data: Load the raw HTML from wikipedia containing a table with Belgian Beers information. This information is scrubbed (cleaned up) and translated to English. Load data into a graph: Data is loaded into Neo4j using the Belgian Beers graph model and a field-to-graph mapping. The way that data is mapped to a graph model is quite simple. Take the Graph Output transform in the data loading pipeline: As you can see above this transform doesn’t require any technical knowledge. You can use the \"Map fields\" button to use a GUI to map the input fields on the left with the various node and relationship properties in your graph model. You can also do this manually. The Neo4j Output transform is useful for simple data loading into one node, two nodes and/or a relationship. It doesn’t require any knowledge of Cypher to use. Take a look at workflow neo4j/neo4j-output-parallel-load.hpl: In this particular example we simply map the fields into the properties of a single node so we can use the Neo4j Output transform instead of Graph Output described above. The advantage is in this case that we have a simpler mapping and can potentially load data faster. There is also no need for a graph model so this transform is great to handle simple scenarios very quickly without any fuss. What this sample also showcases is that you can load larger data sets in parallel. In fact this pipeline has a parameter called COPIES set to 4 by default which will load into Neo4j in 4 different threads in parallel. The Neo4j Cypher transform is the Swiss army knife in our Neo4j toolbox. It’s capable of doing pretty much everything Neo4j related if you have knowledge of Cypher. In example neo4j/neo4j-cypher-unwind-simple.hpl: In this particular example we always use the same Cypher statement. This allows us to group input data so we can use an UNWIND command which will dramatically speed up the performance. It’s a step up from batching different commands together. The first thing we need to do is collect all the input rows (mapped to parameter values) into a values map (on the Options tab): The parameters you want to pass to the Cypher statement are listed on the Parameters tab. Finally, we can construct the Cypher statement itself: UNWIND $events AS event MERGE (y:Year { year: event.year }) MERGE (y)<-[:IN]-(e:Event { id: event.id }) RETURN e.id AS x ORDER BY x Sometimes you might want to remove sets of data from Neo4j or indeed everything, for example during testing (see the Neo4j integration tests of the Hop project for examples). The included example is called neo4j/cleanup-remove-everything.hwf The way indexes and constraints are removed is by calling db.indexes() or db.constraints() and by iterating over those values to remove all of them. Nodes and relationships are deleted in batches to reduce the strain on the Neo4j database transaction handler. That handler might have a hard time deleting very large amounts of nodes or relationships because Neo4j is an ACID compliant database. As mentioned above, the Neo4j Cypher transform can not only be used to load data but also to retrieve it. Example pipeline neo4j/neo4j-cypher-complex-returns.hpl shows how to return complex data types like List, Map and Node from a Neo4j graph: The way this happens is that Node, Relationship and Path values can be mapped to Hop Graph or String (in JSON format) output fields. Neo4j List and Map data types are always converted to String fields in JSON format. Those can then be processed further in the rest of the pipeline. Sometimes we want to load years of historical data before we start updating our graph. In this case we can use the tool neo4j-admin import. This tool is designed to be very fast in bulk loading large amounts of data into a new graph database. It works by loading CSV files which are expected to be in a particular format to describe the various nodes and relationships in a graph. To help out with imports we have a number of tools at your disposal: The Graph data type: transforms Neo4j Output and Neo4j Graph Output have options to write their output to a field of type Graph. These transforms are capable of flagging the primary key field of nodes which encapsulates enough information to generate CSV files with…​ Neo4j Split Graph : With this transform we can split up the multiple nodes and relationships stored in a single Graph field produced by the Graph Output transform. You can then filter out particular nodes or relationships to guarantee uniqueness or other post processing. Neo4j Generate CSVs : this transform will help you with the creation of the CSV files for import. Neo4j Import : this transform will generate the neo4j-admin import statement for you and execute it. It uses the list of CSV files and their types (node/relationship) to do this as well as the options you selected in the transform dialog.","title":"Working with Neo4j data","component":"manual","version":"2.7.0","name":"working-with-neo4j-data","url":"/manual/latest/technology/neo4j/working-with-neo4j-data.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Samples setup","hash":"_samples_setup","id":2},{"text":"Updating graphs","hash":"_updating_graphs","id":3},{"text":"Graph Output : The beers Wikipedia example","hash":"_graph_output_the_beers_wikipedia_example","id":4},{"text":"Neo4j Output : parallel data loading","hash":"_neo4j_output_parallel_data_loading","id":5},{"text":"Cypher : a simple unwind example","hash":"_cypher_a_simple_unwind_example","id":6},{"text":"Removing data : The Cleanup example","hash":"_removing_data_the_cleanup_example","id":7},{"text":"Retrieving data","hash":"_retrieving_data","id":8},{"text":"Cypher : complex returns","hash":"_cypher_complex_returns","id":9},{"text":"Bulk loading","hash":"_bulk_loading","id":10}]},"434":{"id":434,"text":"The Abort action immediately stops (aborts) a running workflow. Option Description Name of the action The name of the workflow action. This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Message Message to add in log when aborting","title":"Abort","component":"manual","version":"2.7.0","name":"abort","url":"/manual/latest/workflow/actions/abort.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"435":{"id":435,"text":"The Add Filenames To Result action adds a set of files or folders to the result list of the workflow action. This list of filenames can then be used in the various workflow actions all around. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Include subfolders Include subfolders of the selected folders Copy previous results to? Passes the results of the previous action to the arguments of this action. Clear result filenames? This option clears the list of result files (from previous workflow actions) before creating a new list. File/Folder Specify the list of files or folders with wildcards (regular expressions) in this grid. You can add a different source/destination on each line.","title":"Add filenames to result","component":"manual","version":"2.7.0","name":"addresultfilenames","url":"/manual/latest/workflow/actions/addresultfilenames.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"436":{"id":436,"text":"The AS/400 Command action executes an AS/400 CL Commands. Option Description Action name The name of the workflow action. Server Host name or IP address. User name The user name associated with AS/400 server account. Password The password associated the AS/400 server account. Proxy host Proxy server host name or IP address. Proxy port Proxy server port number. Command to call The command to run on the AS/400. If the command is not library qualified, the library list will be used to find the command. This plugin tries to load the as400 library from the as400 database plugin.","title":"AS/400 Command","component":"manual","version":"2.7.0","name":"as400command","url":"/manual/latest/workflow/actions/as400command.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"437":{"id":437,"text":"The Cassandra Exec CQL action executes one or more CassandraQL statements on a Cassandra cluster. You can use it to create or drop key spaces, tables, indexes and so on. If all statements executed successfully the result will be true (success). Cassandra Connection: You can specify the name of the connection to use either as a fixed value or as a variable expression. There are buttons to the right of the input field to hel you manage the metadata. CQL Script: You can enter one or more CQL statements ending with a semi-colon on a new line. CREATE KEYSPACE IF NOT EXISTS hop WITH replication = {'class':'SimpleStrategy', 'replication_factor' : 3} ; It’s possible to perform one or more queries in this action. The output of the queries will be added to the result rows of the action. You can access these with the plugins like the Get Rows From Result transform or in the JavaScript action. Please note that result rows are kept in memory so this is intended for small queries, for example getting information from the system_schema tables.","title":"Cassandra Exec CQL","component":"manual","version":"2.7.0","name":"cassandra-exec-cql","url":"/manual/latest/workflow/actions/cassandra-exec-cql.html","titles":[{"text":"Options","hash":"_options","id":1},{"text":"Example:","hash":"_example","id":2},{"text":"Result rows","hash":"_result_rows","id":3}]},"438":{"id":438,"text":"The Check DB Connections workflow action verifies connectivity with one or several databases. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Connection List of connections. Wait After the connection was opened, wait x (s, min, hrs). Units of Time Specify the unit of measurement for the length of time to remain connected. Get connections Get available connects.","title":"Check Db connections","component":"manual","version":"2.7.0","name":"checkdbconnection","url":"/manual/latest/workflow/actions/checkdbconnection.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"439":{"id":439,"text":"The Check Files Locked action loops over a list of files to check if they are locked by another process. The way that it verified is by renaming a file to the same name as before. On certain operating systems (MS Windows systems in particular) this operation will fail if the file is locked. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Settings: Include subfolders Enable this option to also check files in subfolders of specified folders Settings: Copy previous results to args? Pass the result rows of a previous workflow action execution to the files list of this action. Files/Folders Here you can list a series of files or folders with wildcards. The wildcards are Java Regular expressions. For instance .*\\.txt would check any file with a .txt extension. Please note that you can use the Delete/Edit buttons to edit the list. You can also use the File/Folder and Wildcard actions right above the list to add new actions, browse for files and so on","title":"Check Files Locked","component":"manual","version":"2.7.0","name":"checkfilelocked","url":"/manual/latest/workflow/actions/checkfilelocked.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"440":{"id":440,"text":"The Columns Exist In A Table action verifies that one or more columns exist in a database table. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Connection The database connection to use Schema name The schema of the table to use Table name The name of the table to use Columns The list of column names to verify (one or more)","title":"Columns exist in a table","component":"manual","version":"2.7.0","name":"columnsexist","url":"/manual/latest/workflow/actions/columnsexist.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"441":{"id":441,"text":"The Copy Files action copies one of more files or folders. Option Description Workflow Action Name Indicates the name of the action. Source Environment Indicates the file system or specific cluster on which the item you want to input can be found. Options are Local and . Local: Specifies that the item specified in the File/Folder field is in a file system that is local to Hop. : Specifies that the item specified in the File/Folder field should use the path name in that field, exactly. Use this if you already know a file path and you simply want to copy and paste it into the window. Source File/Folder* * The file or directory to copy from. If you choose an option other than in the Source Environment field, click the button in the field to view the Open File window. Wildcard Defines the files that are copied in regular expression terms (instead of static file names), for instance: .*\\.txt would be any file with a .txt extension. Destination Environment Indicates the file system or specific cluster where you want the file to be placed. Options are Local and . Local: Specifies that the item specified in the File/Folder field is in a file system that is local to Hop. : Specifies that the item specified in the File/Folder field should use the path name in that field, exactly. Use this if you already know a file path and you simply want to copy and paste it into the window. Destination File Indicates the name of the destination environment. If you choose an option other than in the Destination Environment field, click the button in the field to view the Open File window. Option Description Include Subfolders If selected, all subdirectories within the chosen directory will be copied as well Destination is a file Determines whether the destination is a file or a directory Copy empty folders If selected, will copy all directories, even if they are empty the Include Subfolders option must be selected for this option to be valid. (Wildcard MUST be blank for this to work) Create destination folder If selected, will create the specified destination directory if it does not currently exist Replace existing files If selected, duplicate files in the destination directory will be overwritten Remove source files If selected, removes the source files after copy (a move procedure) Copy previous results to arguments Copies the previous results to arguments. Add files to result files name Any files that are copied will appear as a result from this action; shows a list of files that were copied in this action Option Description Open from Folder Indicates the path and name of the directory you want to browse. This directory becomes the active directory. Up One Level Displays the parent directory of the active directory shown in the Open from Folder field. Delete Deletes a folder from the active directory. Create Folder Creates a new folder in the active directory. Name Displays the active directory, which is the one that is listed in the Open from Folder field. Filter Applies a filter to the results displayed in the active directory contents.","title":"Copy Files","component":"manual","version":"2.7.0","name":"copyfiles","url":"/manual/latest/workflow/actions/copyfiles.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Settings","hash":"_settings","id":3},{"text":"Open File","hash":"_open_file","id":4}]},"442":{"id":442,"text":"The Copy Or Move Files From Result action allows you to copy, move or delete a number of files and/or folders to alternate locations on your file system. Option Description Workflow action name The name of the workflow action. Action Choose Copy, Move or Delete Destination folder Define the target folder Create destination folder use this option to create the destination folder when it does not exist Replace existing file use this option to overwrite existing files Remove source filenames from result use this option to remove the processed filenames from the list of result filenames Add destination filenames to result use this option to add the the processed target filenames to the list of result filenames Add date to filename add the date to the target filename, e.g. yyyyMMdd Add time to filename add the time to the target filename, e.g. HHmmss Specify date time format allows you to specify your own date-time format, e.g. yyyyMMdd_HHmmss Add date before extension when this option is not checked, the date/time is appended after the file extension Limit action to Define include and exclude wildcards Success on Success condition : select one of these option: Success when all works fine Success when at least x files moved (specify x in the limit field below) Success when number of errors lesser than (specify the max number of errors in the limit field below)","title":"Copy Or Move Files from result","component":"manual","version":"2.7.0","name":"copymoveresultfilenames","url":"/manual/latest/workflow/actions/copymoveresultfilenames.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"443":{"id":443,"text":"The Create File action creates an empty file. This is useful for creating trigger files from within workflows. Option Description Workflow action name The name of the workflow action. File name The name and path of the file to create an empty file. Fail if file exists The workflow action will follow the failure outgoing hop when the file to be created already exists (empty or not) and this option is switched on. The default is on.","title":"Create File","component":"manual","version":"2.7.0","name":"createfile","url":"/manual/latest/workflow/actions/createfile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"444":{"id":444,"text":"The Create Folder action creates a folder at the specified location. Option Description Workflow action name The name of the workflow action. Folder name The name of the folder to create (can be a full path) Fail if folder exists If you enable this option, this workflow action will fail if the specified folder already exists.","title":"Create Folder","component":"manual","version":"2.7.0","name":"createfolder","url":"/manual/latest/workflow/actions/createfolder.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"445":{"id":445,"text":"The Delay (Wait For) action creates a delay between workflows. Option Description Workflow action name The name of the workflow action. Wait for The delay to wait Unit time Specify the unit time (second, minute and hour)","title":"Delay (Wait For)","component":"manual","version":"2.7.0","name":"delay","url":"/manual/latest/workflow/actions/delay.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"446":{"id":446,"text":"The Delete File action deletes a file (empty or not). Option Description Workflow action name The name of the workflow action. File name The name and path of the file to delete. Fail if file doesn’t exist The workflow action will follow the failure outgoing hop when the file to be deleted does not exist anymore and this option is switched on. The default is off.","title":"Delete File","component":"manual","version":"2.7.0","name":"deletefile","url":"/manual/latest/workflow/actions/deletefile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"447":{"id":447,"text":"The Delete Files action deletes a set of files. Option Description Workflow action name The name of the workflow action. Include Subfolders Also delete the subfolders in the folder selection Copy previous results to args? Enable this if the set of files comes from a previous workflow action (as part of the result files) File/Folder The file or folder to delete Wildcard The regular expression matching files to delete if the previous option is a folder. For example to delete all files ending in .dat, the regular expression would be \".*\\.dat$\". Files/Folders The complete list of files/folders to delete","title":"Delete Files","component":"manual","version":"2.7.0","name":"deletefiles","url":"/manual/latest/workflow/actions/deletefiles.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"448":{"id":448,"text":"The Delete Folders action deletes a set of folders and their content. Option Description Workflow action name The name of the workflow action. Settings Copy previous results to args: Enable this option if the folders you want to delete come from the result files of the previous action in the workflow. Success on Success condition : select one of : * When no error reported : everything deleted just fine * When at least x folders processed : specify x in the Limit field below * When the number of errors less than : specify the max nr of errors in the limit field below Folders This is the list of all the folders to delete. You can use the Folder field and these buttons to maintain the list: Add : add Folder field to the list of folders Folder …​ : select a folder Delete : remove the selected folders from the list Edit : move the selected folder to the Folder field for editing","title":"Delete Folders","component":"manual","version":"2.7.0","name":"deletefolders","url":"/manual/latest/workflow/actions/deletefolders.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"449":{"id":449,"text":"The Delete Filenames From Result action deletes all the filenames that are in the result files list of the last workflow action. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Limit action to Enable this feature if you want to limit the deletion to certain filenames in the result file list. Wildcard The regular expression to limit the files to delete Exclude wildcard The regular expression to exclude certain files from being deleted.","title":"Delete filenames from result","component":"manual","version":"2.7.0","name":"deleteresultfilenames","url":"/manual/latest/workflow/actions/deleteresultfilenames.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"450":{"id":450,"text":"The DOS To Unix action converts files from Windows (DOS) Format (lines end with CR/LF) to Linux/Unix Format (lines end with LF) and vice versa. When the format is unknown, this action also has a guess function and converts to the other format. Option Description Workflow action name The name of the workflow action. Settings Include Subfolders: also process sub-folders Copy previous results to args : use the list of result files from the previous workflow action (actions) in stead of the static file list below. Files / Folders You can specify the list of files or folders with wildcards in this grid. You can add a different source/destination on each line. Conversion This can be: Windows to Unix: Convert files from Windows (DOS) Format (lines end with CR/LF) to Linux/Unix Format (lines end with LF) Unix to Windows: Convert files from Linux/Unix Format (lines end with LF) to Windows (DOS) Format (lines end with CR/LF) Guess: When the format is unknown, it converts to the other format. Option Description Success Condition This action will follow the success path if the selected condition is true. Current options are: \"Success if all files are processed\", \"Success if at least x files are processed\", \"Success when number of error files lesser than\". Nr Files specifies the number of files that have to meet the selected condition from above Add Filenames Adds the filenames that meet the selected condition to the workflow output stream. Conditions are: \"Do not add filenames\", \"Add all filenames\", \"Add only processed filenames\" or \"Add only error filenames\"","title":"Dos To Unix","component":"manual","version":"2.7.0","name":"dostounix","url":"/manual/latest/workflow/actions/dostounix.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Advanced","hash":"_advanced","id":4}]},"451":{"id":451,"text":"The DTD Validator action verifies if an XML file corresponds to a certain structure or format according to a Document Type Definition or DTD. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. XML File name The name of the XML file to validate DTD Intern Check this if the DTD is contained in the XML file DTD File name If the DTD is not internal, specify the DTD file to validate with.","title":"DTD Validator","component":"manual","version":"2.7.0","name":"dtdvalidator","url":"/manual/latest/workflow/actions/dtdvalidator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"452":{"id":452,"text":"The Dummy action does not add any functionality, but can be useful as a placeholder action or as a workflow layout helper.","title":"Dummy","component":"manual","version":"2.7.0","name":"dummy","url":"/manual/latest/workflow/actions/dummy.html","titles":[{"text":"Description","hash":"_description","id":1}]},"453":{"id":453,"text":"The JavaScript action runs Javascript code and returns a boolean expression. The result can be used to determine which action will be executed next. You can use functions, procedure calls, ANDs, ampersands, ORs, EQUALs, etc. The Javascript workflow action evaluates and returns a true or false. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. JavaScript The JavaScript field. The result of a JavaScript action is either true or false. In other words, it needs to end with a boolean expression. Here are a few possible evaluations to end your script with: lines_input > 100 or true or parent_workflow.getVariable(\"INPUT_DIRECTORY\").equals(\"/tmp\"); The following variables are available for the expression: Variable Description errors Number of errors in the previous workflow action (long). lines_input Number of rows read from database or file (long). lines_output Number of rows written to database or file (long). lines_updated Number of rows updated in a database table (long). lines_read number of rows read from a previous pipeline transform (long). lines_written Number of rows written to a next pipeline transform (long). files_retrieved Number of files retrieved from an FTP server (long). exit_status The exit status of a shell script (integer). nr The workflow action number of the previous workflow action (long); increments at every next workflow action. is_windows use if Hop runs on Windows (boolean). parent_workflow The parent workflow of the current workflow action. action The current workflow action. Here is how you can evaluate the content of a variable string: parent_workflow.getVariable(\"NR_OF_ROWS\") == 1000000; Since we have access to the parent_workflow object, we can also set variables in the parent workflow this way: parent_workflow.setVariable(\"NR_OF_ROWS\", \"1000000\"); For example you can do something like the following to manipulate variables within this workflow action: useDate = parent_workflow.getVariable(\"use_date\").equals(\"1\"); if (useDate == 0) { date = new java.util.Date(); date.setDate(date.getDate()-1); //Go back 1 full day dateFormat = new java.text.SimpleDateFormat(\"yyyyMMdd\"); newDateStr = dateFormat.format(date); parent_workflow.setVariable(\"start_date\", newDateStr); } true; When a workflow action finishes, the result of the execution will be a Result object exposed as \"previous_result\" to the JavaScript engine: Expression Alternative Data type Meaning previous_result.getResult() boolean true if the previous workflow action was executed successfully, false if there was some error. previous_result.getExitStatus() exit_status int exit status of previous shell script workflow action previous_result.getActionNr() nr int The action number is increased every time a workflow action is executed. previous_result.getNrErrors() errors long the number of errors, also available as variable \"errors\". previous_result.getNrLinesInput() lines_input long The number of rows read from a file or database. previous_result.getNrLinesOutput() lines_output long The number of rows written to a file or database. previous_result.getNrLinesRead() lines_read long The number of rows read from previous transforms. previous_result.getNrLinesUpdated() lines_updated long The number of rows updated in a file or database. previous_result.getNrLinesWritten() lines_written long The number of rows written to next transform. previous_result.getNrLinesDeleted() lines_deleted long The number of deleted rows. previous_result.getNrLinesRejected() lines_rejected long The number of rows rejected and passed to another transform via error handling. previous_result.getRows() List The result rows, see also below. previous_result.isStopped() boolean Flag to signal if the previous previous workflow action stopped or not. previous_result.getResultFilesList() List The list of all the files used in the previous workflow action (or actions). previous_result.getNrFilesRetrieved() files_retrieved int The number of files retrieved from FTP, SFTP, etc. previous_result.getLogText() String The log text of the execution of the previous workflow action and its children. previous_result.getLogChannelId() String The ID of the log channel of the previous workflow action. You can use this to look up information on the execution lineage in the log channel log table. The \"rows\" variable we expose to JavaScript helps you evaluate the result rows you passed to the next workflow action using the \"Copy rows to result\" transform. Here is an example script on how to use this array: var firstRow = rows[0]; firstRow.getString(\"name\", \"\").equals(\"Foo\") This script will follow the green workflow hop is the expression evaluates to true. This happens if field \"name\" contains String \"Foo\".","title":"JavaScript","component":"manual","version":"2.7.0","name":"eval","url":"/manual/latest/workflow/actions/eval.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Evaluation","hash":"_evaluation","id":3},{"text":"Variables","hash":"_variables","id":4},{"text":"Previous result","hash":"_previous_result","id":5},{"text":"Rows","hash":"_rows","id":6}]},"454":{"id":454,"text":"The Evaluate File Metrics action can be used to evaluate the size or count of files. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Source files The source type. Files/Folders Filenames result Previous result row Wildcard A regex wildcard. File Result field Wildcard result field Include subfolders result field Evaluate Type of evaluation Total files size Total file count File/Folder source The file or folder path. Wildcard A regex wildcard. Add Add the source to the Files/Folders list. File…​ Browse the filesystem for a file. Folder…​ Browse the filesystem for a folder. Files/Folders A list of files and/or folders. Delete Delete a source from the list. Edit Edit a source. Option Description Scale Bytes KBytes MBytes GBytes Success when If value is equal to If value is equal to If value is small than If value is smaller or equal If value is greater than If value is greater or equal If value is between If value in list If value not in list Value The value to compare.","title":"Evaluate File Metrics","component":"manual","version":"2.7.0","name":"evalfilesmetrics","url":"/manual/latest/workflow/actions/evalfilesmetrics.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Advanced","hash":"_advanced","id":4}]},"455":{"id":455,"text":"The Evaluate Row Numbers In A Table action you can define the success condition that can be evaluated and branch the workflow process by the result. You can either just test the number of rows in a target table, or write a custom SQL statement. For the success condition you can check the number of rows if they are: Equal to Different from Smaller than Smaller or equal to Greater than Greater or equal to Property Description Custom SQL Check this option when you want to specify a custom SQL statement in the below field Use variable substitution Variables in the SQL statements will be substituted. Clear list of result rows Clears the internal list of result rows before executing. Add rows to result Adds all rows returned from the SQL statement within the internal list of result rows. This list of result rows can then be used in subsequent workflow actions to loop over or e.g. within a pipeline by the Get rows from result transform.","title":"Evaluate row numbers in a table","component":"manual","version":"2.7.0","name":"evaluatetablecontent","url":"/manual/latest/workflow/actions/evaluatetablecontent.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"456":{"id":456,"text":"The File Compare workflow action compares the contents of 2 files. It returns true if the files are equal, false if different. When the contents of the files are the same the success outgoing hop will be followed, else the failure hop will be followed. Option Description Workflow action name The name of the workflow action. This name has to be unique in a single workflow. File name 1 The name and path of the file of the first file to compare. File name 2 The name and path of the file of the second file to compare.","title":"File compare","component":"manual","version":"2.7.0","name":"filecompare","url":"/manual/latest/workflow/actions/filecompare.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"457":{"id":457,"text":"The File Exists action verifies that a specified file exists on the server on which Hop is running. You must provide the file name. Hop returns a True or False value depending on whether the file exists. The File Exists workflow action can be an easy integration point with other systems. For example, suppose you have a three-part data warehouse load process. The first part runs in PERL. You have batch scripts that accesses data from a remote location, performs first-level row processing, and outputs the data to a specified directory. You do not want to start the workflow until this is done, so you put the workflow on a scheduler. As soon as the task is complete, the file is placed in a well-known location so that the \"file exists.\" That is the signal that launches the workflow for final processing. Option Description Workflow action name The name of the workflow action. This name has to be unique in a single workflow. Filename field Specify the filename and path of the file to verify. Click Browse to navigate to the source file or folder through the VFS browser. Result fieldname The field containing the result. Add filename to result Adds the filename to the result. Include file type Adds the type of file. File type field The field containing the type of file.","title":"File Exists","component":"manual","version":"2.7.0","name":"fileexists","url":"/manual/latest/workflow/actions/fileexists.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"458":{"id":458,"text":"The Checks If Files Exist action verifies that the specified files exist. The action returns true if the files exist, false if they don’t. Option Description Workflow action name The name of the workflow action. This name has to be unique in a single workflow. File/folder name The file or folder. Add Adds the file or folder to the Files/Folders table. File…​ Browse the filesystem for a file. Folder…​ Browse the filesystem for a folder. Files/Folders The table containing the files or folders to check. Delete Deletes the selected file or folder from the table. Edit Moves the file or folder from the table to the File/folder to the File/folder name edit field.","title":"Checks if files exist","component":"manual","version":"2.7.0","name":"filesexist","url":"/manual/latest/workflow/actions/filesexist.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"459":{"id":459,"text":"The Folder Is Empty action verifies if a folder is empty, that there are no regular files or sub-folders in the folder. Option Description Workflow action name The name of the workflow action. This name has to be unique in a single workflow. Folder name The name of the folder to verify for emptiness. Limit search to Limits the search for files to those with a certain wildcard (regular expression) Wildcard The wildcard (regular expression) to limit the files to look for with, for example: .*\\.txt$","title":"Folder is Empty","component":"manual","version":"2.7.0","name":"folderisempty","url":"/manual/latest/workflow/actions/folderisempty.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"460":{"id":460,"text":"The Folders Compare action compares two folders to determine if the content is identical; the result will either be true or false. Option Description Workflow action name The name of the workflow action. This name has to be unique in a single workflow. Include Subfolders Also compare the content of sub-folders. Compare Specify what to compare: All, Only files, Only folders, or Let me specify…​ Wildcard If you chose Let me specify in the previous option, you can specify the regular expression of files to compare. Compare file size Check this to compare file size, in opposed to just comparing folder names. Compare file content Checks if files have the same content. Note: this may cause slower processing speeds. File/Folder name 1 This is the first file or folder to compare File/Folder name 2 This is the second file or folder to compare","title":"Folders Compare","component":"manual","version":"2.7.0","name":"folderscompare","url":"/manual/latest/workflow/actions/folderscompare.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"461":{"id":461,"text":"The Get A File With FTP action retrieves one or more files from an FTP server. This workflow action does not \"crawl\" systems. It will not, for example, access a remote directory and go to other directories to find files that match a wildcard. This workflow retrieves files from one directory exclusively. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. FTP server name/IP address The name of the server or the IP address. Server Port Port number of the FTP server. Username The user name associated with FTP server account. Password The password associated the FTP server account. Proxy host Proxy server host name. Proxy port Proxy server port number. Proxy username Proxy server account user name. Proxy password Proxy server account password. Binary mode Enable if files must be transferred in binary mode. Timeout The FTP server timeout in seconds. Use Active FTP connection Enable if you are connecting to the FTP server using Active mode; you must set your firewall to accept connections to the port that your FTP client will open. The default is Passive mode. Control Encoding Encoding matters when retrieving file names that contain special characters. For Western Europe and the USA, ISO-8859-1 usually suffices. Select encoding that is valid for your server. Option Description Remote directory The remote directory on FTP server from which files are taken. Wildcard (regular expression) Regular expression when you want to select multiple files. For example: .txt$ : get all text files A.ENG:0-9.txt : files starting with A, ending with a number and .txt Remove files after retrieval Remove the files on the FTP server, but only after all selected files have been successfully transferred. Move to Folder Moves files to specified folder. Create Folder Creates folder that will contain files. Target Directory The directory where you want to place the retrieved files. Include date in filename Adds the system date to the filename (_20101231). Include time in filename Adds the system time to the filename (_235959). Specify date time format Enable to provide your own date/time format; the default is yyyyMMdd'_'HHmmss Date time format Select date time format. Add date before extension Adds date to the file name before the extension. Don’t overwrite files Enable to skip, rename, or fail if a file with an identical name already exists in the target directory. If file exists Action to take if a file with an identical name already exists in the target directory. Add filenames to result Enable to add the file name(s) read to the result of this workflow. Option Description Success on Sets conditions of success. Limit files Sets number of files associated with a condition of success. Option Description Host Socks Proxy host name. Port Socks Proxy port number. Username User name associated with the Socks Proxy account. Password Password associated with the Socks Proxy account.","title":"Get a file with FTP","component":"manual","version":"2.7.0","name":"ftp","url":"/manual/latest/workflow/actions/ftp.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Files","hash":"_files","id":4},{"text":"Advanced","hash":"_advanced","id":5},{"text":"Socks Proxy","hash":"_socks_proxy","id":6}]},"462":{"id":462,"text":"The FTP delete action deletes files on an FTP server. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Protocol FTP FTPS SFTP SSH FTP server name/IP address The name of the server or the IP address. Server Port Port number of the FTP server. Username The user name associated with FTP server account. Password The password associated the FTP server account. Connection type FTPS connection type. FTP Implicit SSL Authentication SSL Implicit SSL with crypted FTP connection Authentication TLS Implicit TLS Implicit TLS with crypted FTP connection Use proxy Whether or not to use a proxy. Proxy host Proxy server host name. Proxy port Proxy server port number. Proxy username Proxy server account user name. Proxy password Proxy server account password. Use Public Key Whether or not to use a public key with an SSH connection. Key file The public key file. Browse…​ Browse the filesystem for a public key file. Key passphrase The public key passphrase. Test connection Tests the configured connection. Option Description Timeout The timeout period. Use active FTP connection Enable if you are connecting to the FTP server using Active mode; you must set your firewall to accept connections to the port that your FTP client will open. The default is Passive mode. Copy previous results to args? Remote directory The directory on the remote FTP server. Check folder Checks if the directory exists. Wildcard (regular expression) Success on The success condition All works fine At least we delete x files Nr errors less than Limit files Sets a limit to the number of deleted files (default 10). Option Description Host Socks Proxy host name. Port Socks Proxy port number. Username User name associated with the Socks Proxy account. Password Password associated with the Socks Proxy account.","title":"FTP delete","component":"manual","version":"2.7.0","name":"ftpdelete","url":"/manual/latest/workflow/actions/ftpdelete.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Files","hash":"_files","id":4},{"text":"Socks Proxy","hash":"_socks_proxy","id":5}]},"463":{"id":463,"text":"The Put A File With FTP action uploads a file to an FTP server. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. FTP server name/IP address The name of the server or the IP address. Port Port number of the FTP server. Username The user name associated with FTP server account. Password The password associated the FTP server account. Proxy host Proxy server host name. Proxy port Proxy server port number. Proxy username Proxy server account user name. Proxy password Proxy server account password. Binary mode Enable if files must be transferred in binary mode. Timeout The FTP server timeout in seconds. Use Active FTP connection Enable if you are connecting to the FTP server using Active mode; you must set your firewall to accept connections to the port that your FTP client will open. The default is Passive mode. Control Encoding Encoding matters when retrieving file names that contain special characters. For Western Europe and the USA, ISO-8859-1 usually suffices. Select encoding that is valid for your server. Option Description Local directory The local directory from which to upload. Browse…​ Browse the filesystem for a local directory. Wildcard (regular expression) Remove files after transferal Whether or not to remove files after they’ve been uploaded. Don’t overwrite files Skip already existing files. Remote directory The remote directory. Test folder Test if the remote directory exists. Option Description Host Socks Proxy host name. Port Socks Proxy port number. Username User name associated with the Socks Proxy account. Password Password associated with the Socks Proxy account.","title":"Put a file with FTP","component":"manual","version":"2.7.0","name":"ftpput","url":"/manual/latest/workflow/actions/ftpput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Files","hash":"_files","id":4},{"text":"Socks Proxy","hash":"_socks_proxy","id":5}]},"464":{"id":464,"text":"The Get Mails (POP3/IMAP) action retrieves mails from a POP3 or IMAP server and stores them into one or more files. Option Description Server Settings Workflow action name The name of the workflow action. Source Host The host name or IP-address of the pop server. Use SSL If checked A secure connection will be used to communicate with the server. Use XOAUTH2 If checked XOAuth2 will be used to authenticate with the server. Port The port to run the SSL POP3 or IMAP connection over. Username The username to log in with. Password The password to log in with. Use proxy check to enable proxy authentication Proxy username proxy authorised user (only available if Use proxy is checked) Protocol Choose between POP3 IMAP MBOX Test connection Click this button to test the provided settings Target folder Target directory The directory in which you want to put the mail files. Create folder check to create the specified target directory if it doesn’t exist Target filename pattern The filename pattern (start of filename). The default pattern is name_{SYS|hhmmss_MMddyyyy|}_#IdFile#.mail Save message content check to save the message body text for retrieved email messages Get mail attachment check to save the attachments for retrieved email messages Different folder for attachment check to save the attachments for retrieved email messages in a different folder than the message body Attachment files folder the folder to store attachments for retrieved email messages in (only available if Different folder for attachment is checked) Attachment wildcard the wildcard to use to save attachments for retrieved email messages (none = all) Action: this dropdown box lets you specify the action to perform on the retrieved email messages: Get messages Move messages to folder (IMAP only since POP3 only knows one folder \"INBOX\") Delete messages Option Description POP3 settings Retrieve Select the e-mails to retrieve: All emails Retrieve first …​ emails Retrieve the .. first emails Allows you to specify the number of emails to retrieve if \"first …​ emails\" is selected. Delete emails after retrieval check to delete the mails on the pop server after retrieval. IMAP settings Option Description IMAP folder the folder on the IMAP server to retrieve messages from Include subfolders check to select messages for subfolders from the selected IMAP folder Retrieve choose one of Get all messages Get new messages Get old messages Get read messages Get unread messages Get flagged messages Get not flagged messages Get draft messages Get not draft messages Get answered messages Get not answered messages Retrieve the first…​emails specify the number of messages to retrieve After retrieved specfiy the action to perform on email messages after retrieval: Do nothing Delete message Move message to folder Move to folder move the retrieved messages to a different folder on the IMAP server (if Move message to folder was selected) Create folder create a folder on the IMAP server to move the messages to if it doesn’t exist. Option Description Header Sender (FROM) messages will be filtered on sender Recipient (TO) messages will be filtered on recipient Subject messages will be filtered on subject Content Option Description Body messages will be filtered on the specified text in the email body Received date Option Description Condition Choose a date or date range. The available options are None (default, don’t filter on received date) Equal to Date 1 Smaller than Date 1 Greater than Date 1 Between Date 1 and Date 2","title":"Get Mails (POP3/IMAP)","component":"manual","version":"2.7.0","name":"getpop","url":"/manual/latest/workflow/actions/getpop.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Settings","hash":"_settings","id":4},{"text":"Filters","hash":"_filters","id":5}]},"465":{"id":465,"text":"The HTTP Get action retrieves a file from a Web server using the HTTP protocol. This action could be used to access data on partner Web sites. For example, the daily data export or daily list of customers is located at a specified Web site. Also, SaaS providers may give you a URL to locate a report. You can call that URL to retrieve an Excel file or zip file that contains the data. Salesforce requires that you use SOAP APIs to retrieve data. If HTTP traffic is too heavy in your corporate environment, you may choose to use a proxy server with HTTP authentication. Option Description Workflow action name The name of the workflow action. URL The HTTP URL of the file to retrieve, or the directory name to store an uploaded file to. Run for every result row? Check this if you want to run this action for every row that was generated by a previous pipeline. Use the \"Copy rows to result\". If selected, an HTTP request will be made for each result. Otherwise, the file is only retrieved once Input field which contains URL If the \"Run for every result row?\" option is selected, the field specified here will determine the file URL for each row Input field which contains upload file name If the \"Run for every result row?\" option is selected, the field specified here will determine the local file that will be uploaded to the URL associated with the \"Input field which contains URL\" field. Input field which contains destination file name If the \"Run for every result row?\" option is selected, the field specified here will determine the local file where the result downloaded from the URL associated with the \"Input field which contains URL\" field. Username If the site requires authentication, use this username to log in Password If a username is defined, this is the password for it Proxy server for upload The URL of a proxy server that you want to connect to the HTTP URL through Proxy port If a proxy server is defined, this is the port number it listens on Ignore proxy for hosts A regular expression list of exceptions for proxy redirection. This may be useful when working on an intranet or VPN Upload file If you are uploading a file, this will be its name on the remote server Target file If you are downloading a file, this its name on your local filesystem Append to specified target file? If selected, and if the target file already exists, Hop will append all new data to the end of the file Add date and time to file name? If selected, the date and time of the HTTP request (in yyyMMdd_HHmmss format) will be added to the target filename Target file extension If the previous option is selected, this field specifies the extension (letters after the dot) of the target filename Add filename to result filename Any files that are copied will appear as a result from this action; shows a list of files that were copied in this action. Option Description # Order that the header should be processed Name The name of this HTTP header Value The actual header value to pass","title":"Http Get","component":"manual","version":"2.7.0","name":"http","url":"/manual/latest/workflow/actions/http.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Headers Tab","hash":"_headers_tab","id":4}]},"466":{"id":466,"text":"The Mail action sends a text or HTML email with optional file attachments. This action is used at the end of a workflow run in most instances. It can be used to announce both a workflow failure or success. For example, it is not uncommon at the end of a successful load, to send an email to a distribution list announcing that the load was successful and include a log file. If there are errors, an email can be sent to alert individuals on a distribution list. The Mail action requires an SMTP server. You can use authentication and security as part of the connection but you must have the SMTP credentials. You can attach files to your email messages such as error logs and regular logs. In addition, logs can be zipped into a single archive for convenience. Option Description Workflow action name The name of the workflow action. Destination Address The destination for the email; you can specify multiple addresses if you separate them with a space. Cc An identical copy of the message is also sent to all the addresses listed in the Cc: field. To enter more than one address in the Cc: field, separate them with a space. BCc Send to a recipient whose email address does not appear in the message Sender name Name of the person sending the email Sender address Email address of the person sending the email Reply to Email address of the person to which to send a reply Contact person The name of the contact person to be placed in the email Contact phone The contact telephone number to be placed in the email Option Description SMTP Server The SMTP server address Port The port on which the SMTP Server is running Use Authentication Enable to use authentication to the SMTP Server Use XOAUTH2 If checked XOAuth2 will be used to authenticate with the server. Authentication user SMTP user account name Authentication password SMTP user account password Use Secure Authentication? Enable to use secure authentication Secure Connection Type Select authentication type (SSL, TSL) Option Description Include date in message? Enable to include date in message Only send comment in mail body? If not enabled the email will contain information about the workflow and its execution in addition to the comment Use HTML in mail body The message is sent in HTML format Encoding Select encoding type Manage Priority Enable to manage priority. Note: The support of this flag is depending on the mail server. Priority Importance Sensitivity Subject Enter the subject of the mail into this field. Comment Enter the comment within the body of the mail into this field. Option Description Attach files to message? Enable to attach a file to your email message Select file type The files to send are defined within the internal files result set. Every file in this list is marked with a file type and you can select what type of file you want to send (see also the tips at the end of this document): General Log Error line Error Warning Zip files to single archive? Enable to have attachments achived in a zip file Name of the zip archive Define the filename of your zip archive Filename Name of a single image file to add. Note: This works only when Use HTML format is defined in the EMail Message tab. Content ID Automatically entered Image The full path to image (used when embedding multiple images) Click Edit to edit the path; click Delete to delete the path to the image Content ID The image content ID (used when embedding multiple images) Click Edit to edit the content ID; click Delete to delete the Content ID How to attach a particular file to the e-mail You can attach \"Result Files\" of a particular type(s) to the e-mail, either individually or as a single ZIP archive by checking the option \"Attach files to message\" and selecting the types to attach under \"Select the result files types to attach\". What is a Result File and how to create one? Well, just about any file created during a pipeline may become a Result File, you only need to mark it as such. There are several ways to do that: When creating a file with a transform that supports it, allow it to mark the file as a Result File. For example the \"Text file output\" transform has the check-box \"Add filenames to result\" on the File tab for that purpose. The file type will be General. Use the transform \"Set files in result\" from the workflow category to mark a file as a result file of a particular type. This transforms expects the file name to be in a field (you can use e.g. \"Generate Rows\" in combination with \"Add constants\" to produce a row containing the file name). Attaching pipeline’s log You may easily attach a log file with log of a pipeline run by the workflow prior to sending the mail as follows (suppose we have the workflow Start → Pipeline → Mail): In the Pipeline workflow action’s options, check \"Specify logfile?\" and enter a name and extension for the file. You can also specify the desired log level. In the Mail workflow action’s options, check \"Attach files to message\" and select (at least) the file type \"Log\". The next time the mail is send, it will have the pipeline’s log attached.","title":"Mail","component":"manual","version":"2.7.0","name":"mail","url":"/manual/latest/workflow/actions/mail.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Addresses Tab","hash":"_addresses_tab","id":3},{"text":"Server Tab","hash":"_server_tab","id":4},{"text":"Email Message Tab","hash":"_email_message_tab","id":5},{"text":"Attached Files Tab","hash":"_attached_files_tab","id":6},{"text":"Tips","hash":"_tips","id":7}]},"467":{"id":467,"text":"The Mail Validator action checks if an email address is valid or not. When the check passes the success hop will be followed otherwise it will go to the fail hop Option Description Workflow action name The name of the workflow action. email The email address, or list (separated by spaces) that have to be checked. SMTP check? By default, Hop will only check email address structure (using regular expression). If you want to perform a SMTP check, please select this option and fill Email sender (see after). Hop will extract domain name from the supplied email address (to check) and will try to get all exchangers from the domain name. Each exchanger will be queryed. Time out In order to perform a SMTP check, Hop will open a socket on the target SMTP host. Specify here the socket time out (by default 0). Email sender If you select \"SMTP check?\" option, this field is mandatory. Hop will need sender email address to query SMTP host. Default SMTP server If you know which SMTP server to query, please specify it here, Hop will then query only this one.","title":"Mail Validator","component":"manual","version":"2.7.0","name":"mailvalidator","url":"/manual/latest/workflow/actions/mailvalidator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"468":{"id":468,"text":"The Move Files action moves a number of files and/or folders to alternate locations on your file system. This works also on remote file systems (via VFS, e.g. with FTP. Example for a move (rename) of a file on a FTP server (username/password must be given for source and destination). File source: ftp://username:password@ftpserver/dir/testfile_partly.txt File destination: ftp://username:password@ftpserver/dir/testfile.txt Check \"Destination is a file\" in the \"Destination File\" tab. In this tab you can specify the files and/or folders to move. Option Description Workflow action name The name of the workflow action. Settings Include Subfolders: also move the content of sub-folders Move empty folders : also move empty folders Simulate : don’t actually move anything, just see if it’s possible at all. Copy previous results to args : use the result files from the previous workflow action (actions) as files and/or folders to move. Files / Folders You can specify the list of files or folders with destinations and wildcards in this grid. You can add a different source/destination on each line. NOTE: You can use the \"Add\" button to add a line to the Files/Folders list In this tab you can specify the destination of the files and/or folders and their new filenames. Option Description Destination file Create destination folder : use this option to create the destination folder Destination is a file Do not keep folder structure : flatten the sub-folder structure if any sub-folders are used Add date to destination filename (yyyyMMdd or 20091231) Add time to destination filename (HHmmss or 235959) Specify date time format : allows you to specify your own date-time format. The default is yyyyMMdd'_'HHmmss Add date before extension If destination file exists: select one of these options: Do nothing Overwrite destination file Create file with unique name Delete source file Move source file to folder : use the lower part of the dialog (next option in this grid) Fail Move to folder Destination folder : the target folder to move to Create folder Add date Add time Specify format : allows you to specify your own date-time format. The default is yyyyMMdd'_'HHmmss If file exists in destination folder: select one of these options: Do nothing Overwrite file Unique name Fail Option Description Success on Success condition : select one of these option: Success when all works fine Success when at least x files moved (specify x in the limit field below) Success when number of errors lesser than (specify the max number of errors in the limit field below) Result files name Add files to result files name : add the target file names to the list of result files of this workflow action for use in the next workflow actions.","title":"Move Files","component":"manual","version":"2.7.0","name":"movefiles","url":"/manual/latest/workflow/actions/movefiles.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Destination File Tab","hash":"_destination_file_tab","id":4},{"text":"Advanced Tab","hash":"_advanced_tab","id":5}]},"469":{"id":469,"text":"The Display Msgbox info action allow you to display a message box in a workflow so you can easily see where you are in the process. This action is only available using the Graphical User Interface to execute the workflow. The message box displays \"OK\" and \"Cancel\" buttons. Clicking on \"OK\" exits on the green hop Clicking on \"Cancel\" exits on the red hop When the question cannot be asked (no Graphical User Interface), the action always exits on the green hop. Option Description Workflow action name The name of the workflow action. Message title The title of the message Message body The message to display","title":"Display Msgbox info","component":"manual","version":"2.7.0","name":"msgboxinfo","url":"/manual/latest/workflow/actions/msgboxinfo.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"470":{"id":470,"text":"The MS SQL Server Bulk Loader action bulk loads data from a file into MSSQL. Option Description Workflow action name The name of the workflow action. Connection The database connection. Edit…​ Edit the database connection. New…​ Create a new database connection using the standard dialog. Wizard…​ Create a new database connection using the wizard dialog. Target schema The target schema. Target table name The target table. Truncate table Whether or not to truncate the table before starting the bulk load. Source File name The file to bulk load into MSSQL. Browse…​ Browse the filesystem to choose the source file. Data file type char, native, widechar, widenative Fields terminated by The field separation character. Rows terminated by The row termination character. Option Description Codepage OEM, ACP, RAW, specific Specific codepage Code page to use when specific is selected. Format file Path to format file. Browse Browse the filesystem to choose a format file. Fire triggers Check constraints Keep nulls Keep identity Tablock Start at line At which line to start. End at line At which line to end. Order by Which field to order with. Direction Ordering ascending (asc) or descending (desc). Error file Path to the error file. Browse…​ Browse the filesystem to a error file location. Add date time Whether or not to add the date and time. Max errors Batch size Rows per batch Add file to result filenames","title":"MS SQL Server Bulk Loader","component":"manual","version":"2.7.0","name":"mssqlbulkload","url":"/manual/latest/workflow/actions/mssqlbulkload.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Advanced Tab","hash":"_advanced_tab","id":4}]},"471":{"id":471,"text":"The MySQL Bulk File action bulk loads data from MySQL into a file. Option Description Workflow action name The name of the workflow action. Connection The database connection. Edit…​ Edit the database connection. New…​ Create a new database connection using the standard dialog. Wizard…​ Create a new database connection using the wizard dialog. Target schema The target schema. Target File name The target file. High Priority The priority to load the file with. Type OUTFILE, DUMPFILE Field separator The field separator to use. Fields enclosed by The field enclosure to use. Optionally enclosed Lines terminated by The line termination string to use. Names of columns Limit to the…​first lines If file exists Create new with unique name, Do Nothing, Fail Add file to result filenames","title":"MySQL Bulk File","component":"manual","version":"2.7.0","name":"mysqlbulkfile","url":"/manual/latest/workflow/actions/mysqlbulkfile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"472":{"id":472,"text":"The MySQL Bulk Loader action loads data from a text file into a MySQL table. Option Description Workflow action name The name of the workflow action. Connection The connection to the MySQL database to use. Target schema The schema of the table to load. Target table name The name of the table to load into. Source file name The name of the file to load. Local Check this if the file is local. Priority The priority to load the file with. Fields terminated by The field terminator to use. Fields enclosed by The field enclosure to use. Fields escaped by The escape character to use. Lines started by The line start string to use. Lines terminated by The line termination string to use. Fields The fields to load, separated by comma (,). Replace data Check this option if you want to replace the data in the target data. Ignore the first …​ lines Ignores the first …​ lines in the text file. Add files to result Check this option if you want to re-use the filename of the text file in a next workflow action.","title":"MySQL Bulk Loader","component":"manual","version":"2.7.0","name":"mysqlbulkload","url":"/manual/latest/workflow/actions/mysqlbulkload.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"473":{"id":473,"text":"The Check Neo4j Connections action lines up a list of Neo4j connections that you want to check for availability. A small static value will be retrieved from the server to see if it’s properly up-and-running. Enter the names of the connections you want to check in the dialog.","title":"Check Neo4j Connections","component":"manual","version":"2.7.0","name":"neo4j-checkconnections","url":"/manual/latest/workflow/actions/neo4j-checkconnections.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Configuration","hash":"_configuration","id":2}]},"474":{"id":474,"text":"The Neo4j Constraint action can be used to create or drop constraints on node or relationship properties in a Neo4j Graph Neo4j Connection : The name of the Neo4j connection to update indexes on Constraint updates to perform: You can specify your list of constraint updates here Update type : CREATE or DROP Type of object to index on: NODE or RELATIONSHIP Type of constraint: UNIQUE or NOT_NULL Constraint name: The name for your constraint (mandatory) Object name: the label of the node or relationship you want to update a constraint for Property: the property to put the constraint on","title":"Neo4j Constraint","component":"manual","version":"2.7.0","name":"neo4j-constraint","url":"/manual/latest/workflow/actions/neo4j-constraint.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"475":{"id":475,"text":"The Neo4j Cypher Script action executes Cypher statements in a workflow. As with all actions, the goal is not to retrieve data but to execute various statements like creating or dropping indexes, calling APOC procedures, add or delete some static data and so on. To allow you to enter semi-colons (;) in commands, strings and so on we require you to separate commands with a semi-colon on a new line Option Description Connection name The name of the connection on which you want to execute the cypher statements. Script The script with cypher commands seperated by a semi-colon (;) on a new line. For examples see below. Replace variables Check this option if you want to replace variables in the format ${VARIABLE_NAME} in the script prior to execution. CREATE INDEX idx_company_id on :Company(id) ; CREATE INDEX idx_company_id on :Company(id) ;","title":"Neo4j Cypher Script","component":"manual","version":"2.7.0","name":"neo4j-cypherscript","url":"/manual/latest/workflow/actions/neo4j-cypherscript.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Important","hash":"_important","id":2},{"text":"Configuration options","hash":"_configuration_options","id":3},{"text":"Example","hash":"_example","id":4}]},"476":{"id":476,"text":"The Neo4j Index action can be used to create or drop indexes on node or relationship properties in a Neo4j Graph Neo4j Connection : The name of the Neo4j connection to update indexes on Index updates to perform: You can specify your list of index updates here Update type : CREATE or DROP Type of object to index on: NODE or RELATIONSHIP Index name: optional but recommended name for your index Object name: the label of the node or relationship you want to update an index for Properties: the comma separated list of node or relationship properties to index","title":"Neo4j Index","component":"manual","version":"2.7.0","name":"neo4j-index","url":"/manual/latest/workflow/actions/neo4j-index.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"477":{"id":477,"text":"The Decrypt Files With PGP action can be used to decrypt files. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. GPG location The signature file path. Include subfolders Whether or not to include subfolders. Copy previous results to args File/Folder source The file to decrypt, can be added to the Files/Folders list using Add. File/Folder destination The destination of the decrypted files. Wildcard A regex wildcard. User ID Files/Folders The files to decrypt. Option Description Create destination folder Whether or not to create the destination folder. Destination is a file Whether or not the destination is a file. Do not keep folder structure Whether or not to keep the folder structure. Add date to filename Adds the date to the file name. Add time to filename Adds the time to the file name. Specify Date time format Whether or not to specify the date time format. Date time format The format of the date time. Add date before extension Before or after extension. If destination file exists Do nothing Overwrite the destination file Create file with unique name Delete source file Move source file to folder Fail Destination folder The destination folder. Create folder Whether or not to create the folder. Add date Adds the date. Add time Adds the time. Specify format Whether or not to specify the date time format. Add date before extension The format of the date time. If file exists in destination folder Do nothing Overwrite the destination file Create file with unique name Delete source file Move source file to folder Fail Option Description Success condition Which condition to validate for a successful run Success when all works Success when at least x files decrypted Success when number of errors lesser than Nr error lesser than Success if errors lesser than. Add files to result files name","title":"Decrypt files with PGP","component":"manual","version":"2.7.0","name":"pgpdecryptfiles","url":"/manual/latest/workflow/actions/pgpdecryptfiles.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Destination File Tab","hash":"_destination_file_tab","id":4},{"text":"Destination File Tab","hash":"_destination_file_tab_2","id":5}]},"478":{"id":478,"text":"The Encrypt Files With PGP action can be used to encrypt and sign files using the GnuPG package. GnuPG package must be installed in the runtime environment and encryption keys added to the runtime user keystore for this to function. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. GPG location The file path of the GnuPG executable (e.g. /usr/bin/gpg). Use ASCII mode Whether or not to use ASCII mode when encrypting. Include subfolders Whether or not to include subfolders. Copy previous results to args Action Encrypt, Sign, Sign and Encrypt File/Folder source The file to encrypt, can be added to the Files/Folders list using Add. File/Folder destination The destination of the encrypted files. Wildcard A regex wildcard. User ID User ID of the key in the runtime user keystore Files/Folders The files to encrypt. Option Description Create destination folder Whether or not to create the destination folder. Destination is a file Whether or not the destination is a file. Do not keep folder structure Whether or not to keep the folder structure. Add date to filename Adds the date to the file name. Add time to filename Adds the time to the file name. Specify Date time format Whether or not to specify the date time format. Date time format The format of the date time. Add date before extension Before or after extension. If destination file exists Do nothing Overwrite the destination file Create file with unique name Delete source file Move source file to folder Fail Destination folder The destination folder. Create folder Whether or not to create the folder. Add date Adds the date. Add time Adds the time. Specify format Whether or not to specify the date time format. Add date before extension The format of the date time. If file exists in destination folder Do nothing Overwrite the destination file Create file with unique name Delete source file Move source file to folder Fail Option Description Success condition Which condition to validate for a successful run Success when all works Success when at least x files decrypted Success when number of errors lesser than Nr error lesser than Success if errors lesser than. Add files to result files name","title":"Encrypt files with PGP","component":"manual","version":"2.7.0","name":"pgpencryptfiles","url":"/manual/latest/workflow/actions/pgpencryptfiles.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Destination File Tab","hash":"_destination_file_tab","id":4},{"text":"Destination File Tab","hash":"_destination_file_tab_2","id":5}]},"479":{"id":479,"text":"The Verify File Signature With PGP action can be used to verify a file signature to ensure its authenticity. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. GPG location The signature file path. Filename The signed file path. Use detached signature Whether or not to use a detached signature. Detached signature","title":"Verify file signature with PGP","component":"manual","version":"2.7.0","name":"pgpverify","url":"/manual/latest/workflow/actions/pgpverify.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"480":{"id":480,"text":"The Ping action can be used to ping a host using the ICMP protocol. The result it true when the host is reachable, otherwise false. Option Description Workflow action name The name of the workflow action. Host name/IP The name or the IP address of the host to ping Ping type Classic ping: This calls the ping as a command line of the operating system. The result is true when no packets (defined in the \"Nr. packets to send\" option) are lost. System ping: This option uses the Java implemented methods. The result is true when the host name can be resolved and the host is reachable within the given timeout period. System ping then classic ping: try both options (first the system ping and when that fails, try the classic ping) Timeout (ms) The timeout in ms when the system ping option is used. Nr. packets to send The number of packets to send (by default 2, only used by the Classic ping option).","title":"Ping","component":"manual","version":"2.7.0","name":"ping","url":"/manual/latest/workflow/actions/ping.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"481":{"id":481,"text":"The Pipeline action runs a previously-defined pipeline within a workflow. This action is the access point from your workflow to your actual data processing activity (pipeline). An example of a common workflow includes getting FTP files, checking existence of a necessary target database table, running a pipeline that populates that table, and e-mailing an error log if a pipeline fails. For this example, the Pipeline action defines which pipeline to run to populate the table. See also: The Workflow action that executes a sub-workflow from a workflow. The Workflow Executor transform that executes a workflow from a pipeline. The Pipeline Executor transform that executes a sub-pipeline from a pipeline. Option Description Action name Name of the action. Pipeline Specify your pipeline by entering in its path or clicking Browse. If you select a pipeline that has the same root path as the current pipeline, the variable ${Internal.Action.Current.Directory} will automatically be inserted in place of the common root path. For example, if the current pipeline’s path is /home/admin/pipeline.hpl and you select a pipeline in the folder /home/admin/path/sub.hpl than the path will automatically be converted to ${Internal.Action.Current.Directory}/path/sub.hpl. Pipelines previously specified by reference are automatically converted to be specified by name. Run Configuration The pipeline can run in different types of environment configurations. Specify a run configuration to control how the pipeline is executed. Option Description Execute for every result row Runs the pipeline once for every result row from a previous pipeline (or workflow) in the current workflow. Clear results rows before execution Makes sure the results rows are cleared before the pipeline starts. Clear results files before execution Makes sure the results files are cleared before the pipeline starts. Wait for remote pipeline to finish If you selected Server as your environment type, choose this option to block the workflow until the pipeline runs on the server. Follow local abort to remote pipeline If you selected Server as your environment type, choose this option to send the local abort signal remotely. By default, if you do not set logging, Hop will take generated log entries and create a log record inside the workflow. For example, suppose a workflow has three pipelines to run and you have not set logging. The pipelines will not log information to other files, locations, or special configurations. In this instance, the workflow runs and logs information into its master workflow log. In most instances, it is acceptable for logging information to be available in the workflow log. For example, if you have load dimensions, you want logs for your load dimension runs to display in the workflow logs. If there are errors in the pipelines, they will be displayed in the workflow logs. However, you want all your log information kept in one place, you must then set up logging. Option Description Specify logfile Specifies a separate logging file for running this pipeline. Name Specifies the directory and base name of the log file (C:\\logs for example). Extension Specifies the file name extension (.log or .txt for example). Log level Specifies the logging level for running the pipeline. See Logging for more details. Append logfile Appends the logfile as opposed to creating a new one. Create parent folder Creates a parent folder for the log file if it does not exist. Include date in filename Adds the system date to the filename with format YYYYMMDD (_20051231). Include time in filename Adds the system time to the filename with format HHMMSS (_235959). Pass params downstream: On the Parameters tab, select the pipeline transform checkbox to “Pass parameter values to sub pipeline”. The parameter must already exist in the pipeline (in pipeline properties for example) or alternatively, on the Parameters tab, you can specify new parameters. The Parameters tab allows you to override existing parameter values or NULL them by leaving the value empty. Pass field values upstream: The sub pipeline requires a Copy rows to result transform to send a row upstream. This requires a row to exist in the sub pipeline. Note that that rows do not exist in a workflow, but you can use a Get variables in a subsequent sub pipeline to use the first sub pipeline’s field values. Use Set variables if you want to pass a single value upstream from a pipeline to the workflow and act upon that variable. In this case, you can choose a scope of “valid in the parent workflow”. Option Description Copy results to parameters Copies the results from a previous pipeline as parameters of the pipeline using the Copy rows to result transform. Pass parameter values to sub pipeline Pass all parameters of the workflow down to the sub-pipeline. Parameter Specify the parameter name passed to the pipeline. Stream column name Specify the field of an incoming record from a previous pipeline as the parameter. Value Specify pipeline parameter values through one of the following actions: - Manually entering a value (ETL workflow for example). - Using another parameter to set the value (${Internal.workflow.Name} for example). - Using a combination of manually specified values and parameter values ({openvar}FILE_PREFIX}_${FILE_DATE}.txt for example). Get Parameters Get the existing parameters already associated by the pipeline.","title":"Pipeline","component":"manual","version":"2.7.0","name":"pipeline","url":"/manual/latest/workflow/actions/pipeline.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General","hash":"_general","id":3},{"text":"Options Tab","hash":"_options_tab","id":4},{"text":"Logging Tab","hash":"_logging_tab","id":5},{"text":"Parameters Tab","hash":"_parameters_tab","id":6}]},"482":{"id":482,"text":"The End Repeat action ends a repeating workflow which is executed by the Repeat action. It leaves a flag in the parent workflow to signal it can stop repeating at the next opportunity. The End Repeat action only works against its parent workflow when it’s being executed by the Repeat action. This action has no options. It works as a \"Success\" action and clears possible previous errors.","title":"End Repeat","component":"manual","version":"2.7.0","name":"repeat-end","url":"/manual/latest/workflow/actions/repeat-end.html","titles":[{"text":"Description","hash":"_description","id":1}]},"483":{"id":483,"text":"The Repeat action repeats the pipeline or workflow of your choice until a certain condition is met. The condition is either: A variable in the workflow is set or set to a certain value The End Repeat action is executed in the specified repeating workflow In addition to the workflow and pipeline executor transforms, the Repeat and End Repeat actions let you build loops from a workflow. It requires a workflow or pipeline and a run configuration to use. The action will continue to execute the specified workflow or pipeline until a condition is met: either a variable is set or a variable set to an specific optional value, or an End repeat action is triggered in a child workflow. If you use a variable name for the file to repeat, ensure a default parameter is set with a file extension so Hop knows if it is a pipeline or a workflow file. The samples project example: /loops/repeat-action.hwf and child-check-set-counter-value.hpl runs a pipeline that increments a ${COUNTER} variable with each run. If the variable values exceeds 10, a variable ${END_LOOP} is set. This variable is detected by the Repeat action, and the loop stops. Because the Variable scope of COUNTER in the workflow is set to “Valid in the current workflow”, when you set COUNTER in the child the new value goes upstream. Option Description Workflow action name The name of the workflow action. File to repeat The filename of the pipeline or workflow to execute repeatedly. Run configuration The pipeline or workflow run configuration to use. Please note that if you set a variable on a remote server the value is currently not reported back so only local workflow engines are currently supported. Stop repeating when this variable is set Specify the variable you want to be checked before stopping the repeat loop Optional variable value Only stop repeating when the above variable is set and contains this exact value Delay variable in seconds Allow file execution to repeat using specified value in seconds Keep variable values after execution This option keeps the variable values after a (repeating) pipeline or workflow execution to inject into the next iteration. Logging file In this group you can specify if you want to log to a file and how that should be done Parameters/Variables to set You can specify the values of any parameters or variables in this dialog. The values can contain variables themselves which will be resolved before every iteration. If the option Keep variable values after execution is set we evaluate the expression only once before the first execution of the file. To send Parameters to a Repeat Action, set the parameters/variables name and Value columns. Value can be hard-coded or reference a parameter/variable name. Parameters do not automatically flow through a Repeat Action.","title":"Repeat","component":"manual","version":"2.7.0","name":"repeat","url":"/manual/latest/workflow/actions/repeat.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Example","hash":"_example","id":2},{"text":"Options","hash":"_options","id":3}]},"484":{"id":484,"text":"The Run Pipeline Tests action runs a series of pipeline unit tests. The action is successful if all tests run without error. Errors are logged. Option Description Action Name The name of the action. Test names The names of the unit tests to execute","title":"Run Pipeline Tests","component":"manual","version":"2.7.0","name":"runpipelinetests","url":"/manual/latest/workflow/actions/runpipelinetests.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"485":{"id":485,"text":"The Send Nagios check action sends passive checks to Nagios. You can send monitoring information e.g. about start and end processes within your workflow. It needs the NCSA addon installed on the Nagios server (NSCA is a Linux/Unix daemon allows you to integrate passive alerts and checks from remote machines and applications with Nagios. Useful for processing security alerts, as well as redundant and distributed Nagios setups.) More details and setup instructions for the Nagios NSCA addon can be found at the Nagios Passive Checks documentation. Option Description Workflow action name The name of the workflow action. Host Name/IP Address Nagios server name / IP Address Server port Nagios server port (often 5667). Password The password to connect to the Nagios server NSCA (shared between the Nagios server and the client). This field can be set empty when connections without password are allowed. Connection Timeout Fail after the specified connection timeout. Response Timeout Fail after the specified response timeout. Host Name/IP Address Define your sender host name / IP Address. Service Name Define the service name used to log the events. Encryption mode Encryption mode for the connection. Level Log level: Unknown, OK, Warning, Critical. Message The message to get logged.","title":"Send Nagios check","component":"manual","version":"2.7.0","name":"sendnagiospassivecheck","url":"/manual/latest/workflow/actions/sendnagiospassivecheck.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"486":{"id":486,"text":"The Set Variables action sets variables at various scopes. Option Description Workflow action name The name of the workflow action. Name of properties file The name of the properties file. Variable scope Valid in the Java Virtual machine Valid in the current workflow Valid in the parent workflow Valid in the root workflow Variable substitution Whether or not to substitute variables. Variables A list of variables to set to a certain value at a certain scope.","title":"Set Variables","component":"manual","version":"2.7.0","name":"setvariables","url":"/manual/latest/workflow/actions/setvariables.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"487":{"id":487,"text":"The Get A File With SFTP action retrieves one or more files from an FTP server using the Secure FTP protocol. The action returns true if the specified file(s) or pattern were retrieved successfully, false it there were problems retrieving the file(s). Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. SFTP-server name / IP The name of the SFTP server or the IP address Port The TCP port to use. This is usually 22 User name The user name to log into the SFTP server Password The password to log into the SFTP server Use private keyfile Indicates whether or not a private keyfile is to be used. Private key filename If \"Use private keyfile\" is checked then this field is enabled. The file can be browsed to using the browse button to the right of the field. The Private Key should be in the PEM file format. For PuTTY-based Private Keys, use PuTTYgen to convert the file into \"OpenSSH\" format. Key passphrase If \"Use private keyfile\" is checked then this field is enabled. If a passphrase is required then enter it here. Remote directory The remote directory on the SFTP server from which we get the files Target directory The directory on the machine on which Hop runs in which you want to place the transferred files Wildcard Specify a regular expression here if you want to select multiple files. For example: .*txt$ : get all text files A.*[ENG:0-9].txt : files tarting with A ending with a number and .txt Remove files after retrieval? Remove the files after they have been successfully transferred. Option Description Copy previous results to args If files to send are dynamically generated by another pipeline or if you want to identify files to sent, check this option. Hop will select files list from previous result rows (not result files) and send theses files. Remote Directory The remote directory on the SFTP server from which we get the files. Use the \"test folder\" button to connect to the remote server and validate that the folder exists. Wildcard (regular expression) Specify a regular expression here if you want to select multiple files. For example: .*txt$ : get all text files A.*[ENG:0-9].txt : files tarting with A, ending with a number and .txt Remove files after retrieval Delete the remote file after the file is transferred. Target Directory The directory on the machine on which Hop runs in which you want to place the transferred files Create target folder Check this option if the destination folder does not exist and should be created. Add filenames to result If checked the name of the file is added to the result stream.","title":"Get a file with SFTP","component":"manual","version":"2.7.0","name":"sftp","url":"/manual/latest/workflow/actions/sftp.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Files Tab","hash":"_files_tab","id":4}]},"488":{"id":488,"text":"The Put files with SFTP action pushes one or more files to an FTP server using the Secure FTP protocol. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. SFTP-server name (IP) The name of the SFTP server or the IP address. SFTP port The TCP port to use. This is usually 22. User name The user name to log into the SFTP server. Password The password to log into the SFTP server. Use private keyfile Indicates whether or not a private keyfile is to be used. Private key filename If \"Use private keyfile\" is checked then this field is enabled. The file can be browsed to using the browse button to the right of the field. The Private Key should be in the PEM file format. For PuTTY-based Private Keys, use PuTTYgen to convert the file into \"OpenSSH\" format. Key passphrase If \"Use private keyfile\" is checked then this field is enabled. If a passphrase is required then enter it here. Proxy type The proxy type (SOCKS5, HTTP) of the specified proxy server. Proxy host The host name or the IP address of the proxy server. Proxy port The port of the proxy server to connect to. Proxy username The username to log into the proxy server as. Proxy password The password associated with \"Proxy username\". Compression The compression to use in the file transfer. Current options are \"none\" and \"zlib\". Option Description Copy previous results to args If files to send are dynamically generated by another workflow or if you want to identify files to sent, check this option. Hop will select files list from previous result rows (not result files, see next option) and send theses files. If the file can not be found, Hop will ignore it. Copy previous result files to args If files to send are dynamically generated by another pipeline or workflow action or if you want to identify files to sent, please check this option. Hop will select files from previous files result action and send theses files. If the file can not be found, Hop will ignore it. Local directory The directory on the machine on which Hop runs from which you want to ftp the files from Wildcard Specify a regular expression here if you want to select multiple files. For example: .*txt$ : get all text files A.*[ENG:0-9].txt : files tarting with A, ending with a number and .txt Success when no file Check this option if the workflow action has to success when there is no files to process otherwise the workflow will fail. After SFTP Put Action to take after the file is transferred. Actions are \"Do nothing\", \"Delete file\" and \"Move file to\". Destination folder Enabled if \"After SFTP Put\" is set to \"Move file to\". The destination on the source file for the move is specified here. Use to browse button to browse to destination folder. Create destination folder Enabled if \"After SFTP Put\" is set to \"Move file to\". If the \"Destination folder\" does not exists check this option to create it. Add filename to to result Enabled if \"After SFTP Put\" is seet to \"Do nothing\". If checked the name of the file is added to the result stream. Remote directory The remote directory on the SFTP server to which we put the files. Use the \"test folder\" button to connect to the remote server and validate that the folder exists. Create folder Check this option if the destination folder does not exist and should be created.","title":"Put a file with SFTP","component":"manual","version":"2.7.0","name":"sftpput","url":"/manual/latest/workflow/actions/sftpput.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Files Tab","hash":"_files_tab","id":4}]},"489":{"id":489,"text":"The Shell action executes a shell script on the host where the workflow is running. For example, suppose you have a program that reads five data tables and creates a file in a specified format. You know the program works. Shell allows you to do portions of your work in Hop but reuse the program that reads the data tables as needed. The Shell workflow action is platform agnostic; you can use a batch file, UNIX, and so on. When you use a Shell workflow action, Hop makes a Java call to execute a program in a specified location. The return status is provided by the operating system call. For example, in batch scripting a return value of 1 indicates that the script was successful; a return value of 0 (zero) indicates that it was unsuccessful. You can pass command line arguments and set up logging for the Shell workflow action. Option Description Workflow action name The name of the workflow action. Insert script Check this option when you want to execute the script in the Script tab instead of executing the Script file name. This is also useful, when you want to execute operating system commands like dir, ls or ipconfig without giving a specific path. This option creates a temporary script in the working directory and executes it. Note: Variables are resolved within the script when given. Script file name The filename of the shell script to start, should include full path else ${user.dir} is used as path. Working directory The directory that will be used as working directory for the shell script. The working directory only becomes active when the shell script starts so \"Filename\" should still include the full path to the script. When the field is left empty or the working directory is invalid ${user.dir} will be used as working directory. Specify log file Enable to specify a separate logging file for the execution of this workflow. Append logfile Enable to append to the logfile as opposed to creating a new one Name of log file The directory and base name of the log file (for example C:\\logs) Extension of the log file The filename extension (for example: log or txt) Include date in filename? Adds the system date to the filename. (_20051231) Include time in filename? Adds the system time to the filename. (_235959) Loglevel Specifies the logging level for the execution of the shell. See also the logging window in .14 Logging Copy previous results to arguments? The results from a previous pipeline can be sent to the shell script using the \"Copy rows to result\" transform. (as arguments) Execute once for every input row This implements looping. If the previous workflow action returns a set of result rows, you can have this shell script executed once for every row found. One row is passed to this script at every execution in combination with the copy previous result to arguments. The values of the corresponding result row can then be found on command line argument $1, $2, …​ (%1, %2, %3, …​ on Windows) Arguments table Specify the strings to use as arguments for the shell script.","title":"Shell Action","component":"manual","version":"2.7.0","name":"shell","url":"/manual/latest/workflow/actions/shell.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"490":{"id":490,"text":"The Simple Evaluation action evaluates contents or value of a variable or a field in the result stream. Connect two actions with the output of the Simple Evaluation. The green (success) hop will be called if the condition was evaluated successfully, the red (failure) one will be called if the condition wasn’t evaluated successfully. Option Description Workflow action name The name of the workflow action. Evaluate Evaluation type: field or variable. Field name The field to evaluate Type Data type. Success condition If value equal to If value different from If value contains If value not contains If value starts with If value not starts with If value ends with If value not ends with If value valid regex If value in list If value not in list Value The value to compare. Evaluating a variable Field Value Explanation Source: Evaluate Variable Select this to evaluate a variable set before Source: Variable name e. g. ${VAR1} Enter the variable name using the usual syntax Source: Type String, Number etc. The type of your variable Success on: Success when variable set When this option is selected, the true path is followed when the variable is set. Note: The workflow action checks if the variable is defined, so an empty or null value is also true. When testing this within Hop you need to delete the line with the variable in the variables section of the Execute a workflow window. And remember: Once this variable is set, the variable keeps existing, even when deleting it from the list. Success On: Success condition Equal/Non equal/etc. Select the condition to be met for a successful result Success On: Value Value to compare the variable to Evaluating a field Field Value Explanation Source: Evaluate Field from previous result Select this to evaluate a field value (generated by a pipeline using Copy rows to result) Source: Field name Enter the field name from the result row Source: Type String, Number etc. The type of your field Success On: Success condition Equal/Non equal/etc. Select the condition to be met for a successful result Success On: Value Value to compare the field to","title":"Simple Evaluation","component":"manual","version":"2.7.0","name":"simpleeval","url":"/manual/latest/workflow/actions/simpleeval.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Tips","hash":"_tips","id":3}]},"491":{"id":491,"text":"The SNMP Trap action sends alert messages to a remote SNMP-enabled device. Option Description Workflow action name The name of the workflow action. Server name / IP address The server host. Server port The server port. OID The object identifier. Test connection Can be used to test the connection. Target type Type of target: Community or User. Community string A user id or password that allows access to a router’s or other device’s statistics. User Passphrase Engine ID Retry Number of retries. Timeout Message The message to send.","title":"Snmp Trap","component":"manual","version":"2.7.0","name":"snmptrap","url":"/manual/latest/workflow/actions/snmptrap.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"492":{"id":492,"text":"The Snowflake Warehouse Manager action provides functionality to create, drop, resume, suspend, and alter warehouses. This allows Hop workflows to resume a warehouse before loading, and then suspend the warehouse as soon as it is done, along with resizing warehouses for portions of the load that may require more processing power. Connection: The connection to the Snowflake database to use Warehouse name: The name of the warehouse Action: (Create, Drop, Resume, Suspend, Alter) What is the action you wish to take against the warehouse. This action creates a new warehouse using the settings you provide. Replace?: If the warehouse already exists, replace the existing warehouse with your new settings. Fail if warehouse exists?: If the warehouse already exists the action will fail. If not checked and Replace? is not checked the action will perform no action if the warehouse already exists. Warehouse Size: (X-Small, Small, Medium, Large, X-Large, 2X-Large, 3X-Large) The size of the warehouse to create. Warehouse Type: (Standard, Enterprise) The type of warehouse to create. Enterprise warehouses have more memory available than Standard warehouses. Max cluster size: The maximum cluster size for clustered warehouses. Min cluster size: The minimum cluster size for clustered warehouses. Auto suspend: The number of minutes of inactivity after which the warehouse will automatically suspend. Auto resume?: Should the warehouse automatically resume when queries are run against it? Initially suspended?: Should the warehouse be created in a suspended state. Resource monitor: The resource monitor used for tracking Snowflake usage and billing. Comment: A comment to be included about the warehouse. This action removes a warehouse from Snowflake. Fail if warehouse does not exist?: If the warehouse does not exist, the action will fail. This action resumes a warehouse in Snowflake. The warehouse must be in a suspended state prior to this action, or the action will fail. Fail if warehouse does not exist?: If the warehouse does not exist, the action will fail. This action suspends a warehouse in Snowflake. The warehouse must be in a started state prior to this action, or the action will fail. Fail if warehouse does not exist?: If the warehouse does not exist, the action will fail. This action alters the warehouse, enabling users to re-size, change warehouse types, change auto-suspend settings, etc. Fail if warehouse does not exist?: If the warehouse does not exist, the action will fail. Warehouse Size: (X-Small, Small, Medium, Large, X-Large, 2X-Large, 3X-Large) The size of the warehouse to create. Warehouse Type: (Standard, Enterprise) The type of warehouse to create. Enterprise warehouses have more memory available than Standard warehouses. Max cluster size: The maximum cluster size for clustered warehouses. Min cluster size: The minimum cluster size for clustered warehouses. Auto suspend: The number of minutes of inactivity after which the warehouse will automatically suspend. Auto resume?: Should the warehouse automatically resume when queries are run against it? Resource monitor: The resource monitor used for tracking Snowflake usage and billing. Comment: A comment to be included about the warehouse.","title":"Snowflake Warehouse Manager","component":"manual","version":"2.7.0","name":"snowflake-whm","url":"/manual/latest/workflow/actions/snowflake-whm.html","titles":[{"text":"Options","hash":"_options","id":1},{"text":"Action: Create warehouse","hash":"_action_create_warehouse","id":2},{"text":"Action: Drop warehouse","hash":"_action_drop_warehouse","id":3},{"text":"Action: Resume warehouse","hash":"_action_resume_warehouse","id":4},{"text":"Action: Suspend warehouse","hash":"_action_suspend_warehouse","id":5},{"text":"Action: Alter warehouse","hash":"_action_alter_warehouse","id":6}]},"493":{"id":493,"text":"The SQL Script Executor action executes one or more SQL scripts from this action’s configuration or from a file. You can execute more than one SQL statement, as long as they are separated by semi-colons. The SQL workflow action is flexible; you can perform procedure calls, create and analyze tables, and more. Common uses associated with the SQL workflow action include truncating tables, drop index, partition loading, refreshing materialized views, disabling constraints, disabling statistics, and so on.. Option Description Workflow action name The name of the workflow action. Database Connection The database connection to use. SQL from file Enable this option to load the SQL statement from a file given by the SQL filename SQL filename The filename for the file with SQL statements. Send SQL as single statement? Enable this option to not separate the statement by semicolons. This is often useful when a script is given or multiple statements should be processed and committed as one single statement. Use variable substitution? Enables variables to be used in the SQL Script. SQL script The SQL script to execute. Multiple statements can be separated by semicolons.","title":"SQL Script Executor","component":"manual","version":"2.7.0","name":"sql","url":"/manual/latest/workflow/actions/sql.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"494":{"id":494,"text":"The Start action is the starting point for workflow execution. Every workflow needs to have one and only one start action. The start action has additional options to repeat a workflow, this works both in the local and remote workflow engine. When you activate the repeat option the workflow will continue to run and restart based on the interval you specify. This can be on a fixed day with a specific timestamp. Or every x seconds/minutes While this does not replace a scheduler it can be used for basic scheduling. Please note that using this will keep the workflow in a running state meaning the Java process will continue to exist and use resources on the system.","title":"Start","component":"manual","version":"2.7.0","name":"start","url":"/manual/latest/workflow/actions/start.html","titles":[{"text":"Description","hash":"_description","id":1}]},"495":{"id":495,"text":"The Success action clears any error state encountered in a workflow and forces it to a success state. Option Description Workflow action name The name of the workflow action.","title":"Success","component":"manual","version":"2.7.0","name":"success","url":"/manual/latest/workflow/actions/success.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"496":{"id":496,"text":"The Table Exists action verifies that a specified table exists on a database. You must provide a connection and the table name. Hop returns a True or False value depending on whether the table exists. Suppose you have an external system that creates a summary table or yesterday’s data extract. The external system may not have performed the action yet, so you set up a polling piece that waits for the staged data to arrive in the database. There is no point in processing the workflow until the data is available, so you can use this workflow action as a semaphore that polls the database to determine whether or not the table exists. Option Description Workflow action name The name of the workflow action. Connection The connection to use Schema name The schema name if applicable to your database Table name The name of the database table to check","title":"Table Exists","component":"manual","version":"2.7.0","name":"tableexists","url":"/manual/latest/workflow/actions/tableexists.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"497":{"id":497,"text":"The Telnet action tests a connection on a certain port over the Telnet protocol. Option Description Workflow action name The name of the workflow action. Host name/IP The host. Port The port. TimeOut (ms) The timeout period.","title":"Telnet a host","component":"manual","version":"2.7.0","name":"telnet","url":"/manual/latest/workflow/actions/telnet.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"498":{"id":498,"text":"The Truncate Tables action truncates one or several tables at once without writing 0 SQL command. Option Description Workflow action name The name of the workflow action. Connection Name of the database connection on which the tables reside. Use \"Edit…​\" and \"New…​\" to edit and/or create a new connection. Previous results to args? Check this option if you want to get in a dynamic way tables to truncate from results of previous workflow action. Click here to return tables name list This button will return all tables defined on the connection. Select tables (one or several) and press \"OK\". Tables name will be automatically added to \"Selected tables\" grid. Selected tables grid Specify here the tables to truncate (insert it manually or use the previous button). If the table is in a different schema that the default one, please specify the schema name. Delete Remove actions from grid (select one several actions and click on this button to remove it). OK Click on this button to save workflow action settings changes Cancel Discard workflow action settings changes","title":"Truncate Tables","component":"manual","version":"2.7.0","name":"truncatetables","url":"/manual/latest/workflow/actions/truncatetables.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"499":{"id":499,"text":"The Unzip action unzips one or more files to a specified target location. Option Description Workflow action name The name of the workflow action. Source files You can specify the list of source (zip) files in this section Get args from previous : check this option if you want to use the list of result files (from a previous workflow action) as the list of files to unzip. Zip file name : the name of the zip file or a folder if you want to use a wildcard. Source wildcard : if the previous option is a folder, you can enter a regular expression. wildcard here. For example to match \"/folder/test.zip\" a regex of \"te.\\.zip\" will come up empty. Use \".te.\\.zip\" instead to account for the folders ahead of it.* For Windows file paths, the direction of the slashes will be reversed in the match, so use \"\\/\" instead of \"\\\\\". Unzipped files This section allows us to specify what to do with the unzipped files Use zipfile name as root directory : check this if you want to create a separate directory for each zip filename (same name as file) Target directory : the target directory to unzip in Create folder : check this if you want to create the target folder Include wildcard : use this regular expression to select the files in the zip archives to extract Exclude wildcard : use this regular expression to select the files in the zip archives to extract Include date in filename : Include the current date in the unzipped filenames (format yyyyMMdd) Include time in filename : Include the time (format HHmmss) Specify the date time format yourself: allows you to specify the date time format yourself (default is: yyyyMMdd'_'HHmmss) If files exists : select the action to take if the target (unzipped) file exists: skip, overwrite, etc. After extraction : select the action to take after zip file extraction: Do nothing, Delete files, Move files Move files to : if the previous option is \"Move files\", you can select the target directory here. Advanced Add extracted file to result: add the extracted file names to the list of result files of this workflow action for use in the next workflow actions. Success condition: allows you to specify the success factor of this workflow action: when everything went well or if there were only X errors or if there were at least Y files extracted.","title":"Unzip","component":"manual","version":"2.7.0","name":"unzip","url":"/manual/latest/workflow/actions/unzip.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"500":{"id":500,"text":"The Wait For File action waits and periodically checks for a file. This workflow action will sleep and periodically check whether the specified file exists after which the flow will continue. The action can either wait indefinitely for the file or it can time out after a certain time. Option Description Workflow action name The name of the workflow action. Check cycle time The time in seconds between checking for the file. The file will be checked for in the start of the execution and then every \"check cycle time\" seconds until the maximum timeout is reached. A workflow can only be stopped every \"check cycle time\" as else the workflow action will be sleeping. A check cycle time of 30 or 60 seconds seems to be a good trade-off between the period until the file is detected and the required CPU usage. File name The name and path of the file to wait for. File size check When this is switched on, once the workflow action detects the specified file, and will only continue if the file size hasn’t changed the last check \"cycle time seconds\". This is useful in cases where a file is created in the final place, and another process is still writing to the file. (As a best practice, files should be written to a temporary location, and then moved when completed) Workflow action name The name of the workflow action. This name has to be unique in a single workflow. Maximum timeout The maximum timeout in number of seconds, or 0 to wait indefinitely. This is the number seconds after which the flow will continue even if the file was not created. When the timeout is reached the \"Success on timeout\" option will determine whether the outgoing success or failure hop will be followed. Success on timeout This option determines what to do when the \"Maximum timeout\" has been reached and the file has not been found. If enabled, the workflow action will evaluate successfully, and the outgoing success hop will be followed.","title":"Wait for file","component":"manual","version":"2.7.0","name":"waitforfile","url":"/manual/latest/workflow/actions/waitforfile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"501":{"id":501,"text":"The Wait For SQL action scans a database and checks if the database meets user-defined conditions. Option Description Workflow action name The name of the workflow action. Connection Identifies the database connection to use. Target schema Name of the table schema to evaluate. Target table name Name of the table to evaluate. Success when rows count Defines the evaluation method used to compare the number of rows with the given value. Row count value Defines the row count value used for the evaluation Maximum timeout After this timeout period, the workflow action continues with a fail, by default, or success, if the Success on timeout option is checked. Expressed in seconds, 0 is infinite. Check cycle time Sets the amount of time between evaluations, expressed in seconds. Success on timeout Defines workflow action success behavior when timeout is reached---when checked, reaching the maximum timeout limit causes the workflow action to succeed. When left unchecked, reaching the maximum timeout limit causes the workflow action to fail. Custom SQL Enables the use of custom SQL queries. Use variable substitution Replaces environment variables in the SQL script with their actual value. Clear list of result rows before execution Clears the list of result rows before running this workflow action. Add rows to result Includes returned rows to the result set.","title":"Wait for SQL","component":"manual","version":"2.7.0","name":"waitforsql","url":"/manual/latest/workflow/actions/waitforsql.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"502":{"id":502,"text":"The Check If Webservice is available action checks if a given URL (e.g. a Webservice URL) is valid, can be connected and data can be read from. If it connects within the given timeout and data can be read, it returns 'true', otherwise 'false'. Further information of the failing reason can be found in the log as an error log action. Option Description Workflow action name The name of the workflow action. URL Specifies the URL to validate. Connect timeout (ms) The connect timeout in ms. The value is depending on the quality of service of this URL and experiences. Read timeout (ms) After connection, the workflow action tries to read data. This value gives the read timeout in ms. The value is depending on the quality of service of this URL and experiences.","title":"Check if Webservice is available","component":"manual","version":"2.7.0","name":"webserviceavailable","url":"/manual/latest/workflow/actions/webserviceavailable.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"503":{"id":503,"text":"The Workflow action executes a previously defined workflow as a sub-worflow of the current one. For ease of use, it is also possible to create a new workflow within the dialog, pressing the New Workflow button. Use the Workflow action to execute a previously defined workflow. This allows you to perform \"functional decomposition.\" That is, you use them to break out workflows into more manageable units. For example, you should not write a data warehouse load using one workflow that contains 500 actions. It is better to create smaller workflows and compose them. See also: The Pipeline action that executes a pipeline from a workflow. The Workflow Executor transform that executes a workflow from a pipeline. The Pipeline Executor transform that executes a sub-pipeline from a pipeline. Option Description Action name Name of the action. Workflow Filename Specify the XML file name of the workflow to execute. Click to browse through your local files. Run configuration The workflow run configuration to use for this workflow action. Option Description Default Execute for every input row? Implements looping; if the previous workflow action returns a set of result rows, the workflow executes once for every row found. One row is passed to the workflow at every execution. For example, you can execute a workflow for each file found in a directory. false Wait for the remote workflow to finish? Enable to block until the workflow on the Hop Server has finished true By default, if you do not set logging, Hop will take log actions that are being generated and create a log record inside the workflow. For example, suppose a workflow has three pipelines to run and you have not set logging. The pipelines will not output logging information to other files, locations, or special configuration. In this instance, the workflow executes and puts logging information into its master workflow log. In most instances, it is acceptable for logging information to be available in the workflow log. For example, if you have load dimensions, you want logs for your load dimension runs to display in the workflow logs. If there are errors in the pipelines, they will be displayed in the workflow logs. If, however, you want all your log information kept in one place, you must set up logging. Option Description Default Specify logfile? Enable to specify a separate logging file for the execution of this workflow false Name of logfile The directory and base name of the log file; for example C:\\logs none Extension of logfile The file name extension; for example, log or txt none Loglevel Specifies the logging level for the execution of the workflow. none Append logfile? Enable to append to the logfile as opposed to creating a new one false Create parent folder Create the parent folder for the log file if it does not exist false Include date in logfile? Adds the system date to the filename with format YYYYMMDD (eg 20051231). false Include time in logfile? Adds the system time to the filename with format HHMMSS (eg 235959). See also the logging window in Logging false Specify which parameters will be passed to the sub-workflow: Option Description Default Copy results to parameter results from previous workflows or pipelines are passed down to this workflows action’s parameters false Pass parameter values down to the sub-workflow Enable this option to pass all parameters of the workflow down to the sub-workflow. true Parameters Specify the parameter names that will be passed to the workflow. - Stream column name Allows you to capture fields of incoming records of a result set as a parameter. - Value Allows you to specify the values for the sub-workflow’s parameters. You can do this by: Manually typing some text (Ex: ETL workflow) Using a parameter to set the value (Ex: ${Internal.workflow.Name}) Using a combination of manually specified text and parameter values (Ex: ${FILE_PREFIX}_${FILE_DATE}.txt) -","title":"Workflow","component":"manual","version":"2.7.0","name":"workflow","url":"/manual/latest/workflow/actions/workflow.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Main workflow options","hash":"_main_workflow_options","id":3},{"text":"Options Tab","hash":"_options_tab","id":4},{"text":"Logging Settings Tab","hash":"_logging_settings_tab","id":5},{"text":"Parameters Tab","hash":"_parameters_tab","id":6}]},"504":{"id":504,"text":"The Write To File action writes text to a file. Option Description Workflow action name The name of the workflow action. File name The file directory and name. Browse…​ Browse the filesystem for a file location. Create parent folder Whether to create the parent folder. Append file Will overwrite the previous file if unchecked, if checked it will append new text to the previous file. Encoding The encoding to use while writing the file. Text The text to write to the file.","title":"Write to File","component":"manual","version":"2.7.0","name":"writetofile","url":"/manual/latest/workflow/actions/writetofile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"505":{"id":505,"text":"The Write To Log action writes a specific string to the Hop logging system. This action is similar to the Write To Log transform. Typical use cases are logging variable values and additional, custom logging information to the Hop logging system. be careful when writing variables for (unencrypted) passwords or other sensitive information to the Hop logging system! If no fields are specified it will write out all fields to the log. If at least one field is specified it will only print out that field. Parameters and variables must be specified in the Log message section. A Logging level must be set. Set the Log detail level to Basic if you want parameters and variables to be printed out. Example to print parameter or variable in Log message section: COUNTER: ${COUNTER} If no fields exist, you will have to use a “Generate rows” transform to create a dummy row in order to print variables or parameters. If an error stops anything from being written to the log, then disable the Hops that fail, add logging, and re-run. Option Description Workflow action name The name of the workflow action. Log level The logging level to use Log subject The subject to use in the logging line(s) Log message The log message to write to the log","title":"Write to Log","component":"manual","version":"2.7.0","name":"writetolog","url":"/manual/latest/workflow/actions/writetolog.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"506":{"id":506,"text":"The Check If XML File Is Well-Formed action verifies if one or more files contain well-formed (allowed) XML content. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Include Subfolders Option to move the content of sub-folders. Copy previous results to args Check this to pass the results of the previous action into the arguments of this action. Files/Folders Specify the list of files or folders with wildcards (regular expressions) in this grid. You can add a different source/destination on each line. Note: You can use the Add button to add a line to the Files/Folders list. In this tab you can specify the files and/or folders to move. Option Description Success on Allows you to set specific success conditions: Success if all files are well formed, Success if at least x files are well formed, or Success when number of bad formed files less than. Result files name Specify which kind of filenames to add to the internal result file names: all filenames, only well formed filenames, or only bad filenames.","title":"Check if XML file is well-formed","component":"manual","version":"2.7.0","name":"xmlwellformed","url":"/manual/latest/workflow/actions/xmlwellformed.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Advanced Tab","hash":"_advanced_tab","id":4}]},"507":{"id":507,"text":"The XSD Validator action performs an XSD validation against data in a file or in an input field. XSD is short for XML Schema Definition. As such, there are 2 entities at work here: The XML you want to validate the layout for The XSD (Schema) file that describes what the XML file should look like. See also the XSD Validator pipeline transform. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. XML File name The name of the XML file XSD File name The name of the XSD file","title":"XSD Validator","component":"manual","version":"2.7.0","name":"xsdvalidator","url":"/manual/latest/workflow/actions/xsdvalidator.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"508":{"id":508,"text":"The XSL Transformation action transforms XML documents into other documents (XML or other format, such as HTML or plain text) using Extensible Stylesheet Language Transformations or XSLT. The original document is not changed; rather, a new document is created based on the content of the XML file. Option Description Workflow action name The name of the workflow action. Note: This name has to be unique in a single workflow. A workflow action can be placed several times on the canvas, however it will be the same workflow action. Get filenames from previous result When this option is checked, the XML File name, XSL File name and Output File name are read from the previous result set. When multilpe rows exists, it will loop. At this time XML File name is the first field in the result set, XSL File name the second fields and Output File name the third field. XML File name The full name of the source XML file XSL File name The full name of the XSL file Output File name The full name of the created document (result of XSL transformation) Transformer Factory You can select JAXP or SAXON as the transformer factory. If file exists Define the behavior when an output file with the same name exists Options : Create new with unique name : a new output file will be created Do nothing : nothing will be done Fail : the workflow will fail Result file name Add files to result files name : add the target file names to the list of result files of this workflow action for use in the next workflow actions.","title":"XSL Transformation","component":"manual","version":"2.7.0","name":"xslt","url":"/manual/latest/workflow/actions/xslt.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2}]},"509":{"id":509,"text":"The Zip File action creates a standard ZIP archive using the options you specify in the dialog. Option Description Workflow action name The name of the workflow action. Get arguments from previous This checkbox takes the filename specification from the result rows of a previous workflow action. This is what will be taken from the rows. The first field has to contain the filename or folder. The second field should contain the inclusion wildcard The third field should contain the exclusion wildcard. The fourth field should contain the target zip file (this can be different for each file). Source directory The source directory of the files to be zipped Include wildcard The wildcard (regular expression) of the files to include in the zip archive Exclude wildcard The wildcard (regular expression) of the files to exclude from the zip archive Include sub-folders Enable this option to search files in sub-folders Zip file name The full name of the destination archive Create parent folder Create the parent folder if it doesn’t exist Include date in filename Add the date to the file name Include time in filename Add the time to the file name Specify date time format Allows you to specify the date/time format mask, Date time format The date time format mask, like yyyy/MM/dd HHmmss Show filename Shows an example filename based on the options you specified Option Description Compression The compression level to be used (Default, Best Compression, Best speed) If zip file exists The action to take when there already is a file at the target destination. After zipping The action to take after zipping Move files to The target directory to move the source files to after zipping Create folder Create the folder to move to Stored source path depth This is the part of the source file path which is taken over in the ZIP file archive structure. Add Zip file to result Enable this option to add the target zip file(s) to the result","title":"Zip File","component":"manual","version":"2.7.0","name":"zipfile","url":"/manual/latest/workflow/actions/zipfile.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Options","hash":"_options","id":2},{"text":"General Tab","hash":"_general_tab","id":3},{"text":"Advanced Tab","hash":"_advanced_tab","id":4}]},"510":{"id":510,"text":"The local run configuration runs workflows on your local environment. This page describes the options that are specific to the local workflow engine. These options extend the general workflow run configuration options. Option Description Make this workflow transactional If you enable this there will always be just one connection used per database. At the end of the workflow there will be a commit or rollback (in case of error) on all named connections at the same time. Note that child pipelines and workflows are also automatically run as a transaction. Also be aware that while you can commit and rollback across multiple databases that this still means that you can have a successful commit on one database and a failure on another. This is not a two-phase-commit system. false Safe mode","title":"Local Workflow Engine","component":"manual","version":"2.7.0","name":"native-local-workflow-engine","url":"/manual/latest/workflow/workflow-run-configurations/native-local-workflow-engine.html","titles":[{"text":"Hop local workflow engine","hash":"_hop_local_workflow_engine","id":1},{"text":"Options","hash":"_options","id":2}]},"511":{"id":511,"text":"The remote run configuration runs workflows on a remote Hop Server. This run configuration requires little configuration, but has two prerequisites: a running Hop Server a Hop Server metadata definition in your project, pointing to your running Hop Server. This page describes the options that are specific to the remote workflow engine. These options extend the general workflow run configuration options. Option Description Hop server The remote Hop server to run your workflow on. Run Configuration The configuration to use on the remote Hop Server. In most configurations, this will be a local (locally on the server) runtime configuration. In rare cases you might want to run on yet another server using another remote workflow configuration. Server poll delay (ms) The delay in milliseconds between periodic polls to the remote server. If you don’t specify a value this defaults to 1000ms (1 second) Server poll interval (ms) The interval in milliseconds between periodic polls to the remote server. If you don’t specify a value this defaults to 2000ms (2 seconds) Export linked resources to server? Enable this option if you want to not only send the current workflow to the server but also other referenced workflows and pipelines. See below for detailed information Named resources reference source folder This is the reference source folder for the named resources that are being used (e.g. ${PROJECT_HOME}). See below for detailed information. Named resources reference target folder This is where you expect the source folder to map to on the server (e.g. /path/on/server). See below for detailed information. This option sends not just the parent workflow to the server but also all other referenced pipelines and workflows. For example if you have pipelines or workflows referenced in actions they will be sent to the server as well. All the used pipelines and workflows together with the XML presentation of the workflow execution configuration will be sent over to the server in the form of a ZIP archive. The server receives this archive and without unzipping runs the workflow. To make this function correctly, Hop changes the references as well as references to filenames. For example ${PROJECT_HOME}/update-dimensions.hwf will be changed to ${Internal.Entry.Current.Folder}/update-dimensions.hwf. As you can see Hop will try to use a relative path to the parent file. If you have are using data files then those file names will be renamed as well. For example, you might be reading a file called ${PROJECT_HOME}/files/bigfile.csv in a CSV File Input transform. During the export the referenced filename will be changed to ${DATA_PATH_1}/bigfile.csv. For every folder that is referenced a new variable will be defined and set in the execution configuration. By default, the path set for this variable will be the same as on the executing (local) machine. On the server this might not make a lot of sense. For this reason you can specify a reference source folder like ${PROJECT_HOME} in combination with a target folder like /server/. In that example variable DATA_PATH_1 will get value /server/files/. This in turn allows you to transfer required files in advance or map a folder into a docker container and so on. It gives you flexibility when executing remotely while having ease of development on your client.","title":"Remote Workflow Engine","component":"manual","version":"2.7.0","name":"native-remote-workflow-engine","url":"/manual/latest/workflow/workflow-run-configurations/native-remote-workflow-engine.html","titles":[{"text":"Hop Remote workflow engine","hash":"_hop_remote_workflow_engine","id":1},{"text":"Options","hash":"_options","id":2},{"text":"Export linked resources to server","hash":"_export_linked_resources_to_server","id":3}]},"512":{"id":512,"text":"Run configurations decouple the design and execution phases of Hop workflow development. A workflow is a definition of how data is processed, a run configurations defines where the workflow is executed. Hop supports a number of different runtime engines, each of which will be described in more detail in this section. Each run configuration comes with its own set of parameters and configuration options, all of which are stored as Hop Metadata. When starting a new workflow click New next to 'Workflow run configuration'. All run configurations have a name, description and an engine type, each engine type has its own set of configuration options. Once created, run configurations are available from the 'Workflow run configuration' list and are ready to use. The tab contains the name, description and the dropdown list for the workflow engine types. Option Description Name The name you want to use for this workflow run configuration. Description A description you want to use for this workflow run configuration (optional). Execution information location The Execution Information Location to use with this workflow run configuration. Engine type The available engine types are: Local workflow engine: this configuration runs pipelines on your machine Remote workflow engine: this configuration runs workflows on a Hop Server using a defined Run Configuration.","title":"Workflow Run Configurations","component":"manual","version":"2.7.0","name":"workflow-run-configurations","url":"/manual/latest/workflow/workflow-run-configurations/workflow-run-configurations.html","titles":[{"text":"Description","hash":"_description","id":1},{"text":"Choosing a Run Configuration","hash":"_choosing_a_run_configuration","id":2},{"text":"Options","hash":"_options","id":3}]},"513":{"id":513,"text":"Apache Hop pipelines can be scheduled and triggered in various ways. In this section we will walk through the steps needed to schedule a pipeline on Google Dataflow using Dataflow Templates. Apache Hop uses a flex template to launch a job on Google Dataflow. Before we can add a new pipeline in the Google Cloud Platform console we need to create a Google Storage bucket that contains 3 types of files. The pipelines you created using the Hop Gui and wish to schedule in Google Dataflow. Tip You can also create a Hop project using a Google Storage bucket this way you can directly create and edit Hop pipelines in GS For the pipeline to be able to use Hop metadata objects and other run configurations we need to generate a hop metadata.json file. This file can be generated from the GUI under Tools → Export metadata to JSON or using the export-metadata function from the Hop conf tool. The final part to get everything working is a metadata file used by Dataflow to stitch all the parts together. { \"defaultEnvironment\": {}, \"image\": \"apache/hop-dataflow-template:latest\", \"metadata\": { \"description\": \"This template allows you to start Hop pipelines on dataflow\", \"name\": \"Template to start a hop pipeline\", \"parameters\": [ { \"helpText\": \"Google storage location pointing to the Hop metadata file\", \"label\": \"Hop Metadata Location\", \"name\": \"hopMetadataLocation\", \"regexes\": [ \".*\" ] }, { \"helpText\": \"Google storage location pointing to the pipeline you wish to start\", \"label\": \"Hop Pipeline Location\", \"name\": \"hopPipelineLocation\", \"regexes\": [ \".*\" ] } ] }, \"sdkInfo\": { \"language\": \"JAVA\" } } Important You can change the docker image used in the metadata file Now we can go back to the console and \"Create data pipeline\" When selecting the Beam Flex template metadata file you will notice required parameters showing up. You can then add the path yo yhe Hop metadata and Hop pipeline stored in cloud storage.","title":"Google Dataflow Pipeline (Template)","component":"manual","version":"2.7.0","name":"google-dataflow-pipeline","url":"/manual/latest/pipeline/beam/dataflowPipeline/google-dataflow-pipeline.html","titles":[{"text":"Preparing your environment","hash":"_preparing_your_environment","id":1},{"text":"Hop pipelines","hash":"_hop_pipelines","id":2},{"text":"Hop Metadata","hash":"_hop_metadata","id":3},{"text":"Beam Flex template metadata file:","hash":"_beam_flex_template_metadata_file","id":4},{"text":"Creating a Dataflow pipeline","hash":"_creating_a_dataflow_pipeline","id":5}]},"514":{"id":514,"text":"This is the documentation of the official Apache Hop docker container published on: https://hub.docker.com/r/apache/hop It’s a Hop Docker image supporting both short-lived and long-lived setups. A short-lived setup executes a pipeline or workflow and stops right after. A long-lived setup starts a Hop server and waits for work. The docker container runs a minimal Linux system called Alpine. OpenJDK version 11 is then used to execute Apache Hop. The Linux user used to execute in the container is hop and the group is hop as well. Folder Description /opt/hop The installation location of the hop client package. /files This volume has read-write permissions for Linux user hop. You can use it for example to mount a folder that contains the hop and project config as well as the workflows and pipelines. /home/hop The initial working directory location of the docker container. You can provide values for the following environment variables: Environment Variable Default Description HOP_LOG_LEVEL Basic The log level. Use one of: None, Error, Minimal, Basic, Detailed, Debug or Rowlevel. HOP_LOG_PATH /opt/hop/hop.err.log The file path to the Hop log file. HOP_PROJECT_NAME Name of the Hop project to create in the container. You also need to specify the HOP_PROJECT_FOLDER variable. If you do not set this variable, no project or environment will be created. HOP_PROJECT_FOLDER HOP_PROJECT_DIRECTORY (Deprecated) Path to the home of the Hop project. HOP_PROJECT_CONFIG_FILE_NAME project-config.json Name of the project config file. HOP_ENVIRONMENT_NAME The name of the Hop environment to create in the container. If you do not set this variable, no environment will be created. When using an environment a project has to be created too HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS This is a comma separated list of paths to environment config files (including filename and file extension). HOP_OPTIONS -XX:+AggressiveHeap Any JRE options you want to set. The -XX:+AggressiveHeap option tells the container to use all memory assigned to it. HOP_SHARED_JDBC_FOLDERS Comma separated list to locations where JDBC drivers live (default is /lib/jdbc). HOP_CUSTOM_ENTRYPOINT_EXTENSION_SHELL_FILE_PATH Optional path to a custom entrypoint extension script file. You can use this for example to fetch Hop project files from S3 or gitlab. HOP_SYSTEM_PROPERTIES The system properties that should be set during execution. You can specify the properties as a comma separated list, e.g. PROP1=xxx,PROP2=yyy Here are the variables for short-lived containers, to execute a workflow or pipeline: Environment Variable Required Description HOP_FILE_PATH Yes The path to the Hop workflow or pipeline to execute. If you configured a project you can use a relative path to the project home folder. HOP_RUN_CONFIG Yes The name of the Hop run configuration to use to execute your pipeline or workflow. HOP_RUN_PARAMETERS No Optionally, you can specify the parameters that should be passed to the pipeline or workflow you are executing. You can specify them as a comma separated list, e.g. PARAM_1=aaa,PARAM_2=bbb. HOP_RUN_METADATA_EXPORT No You can specify a metadata export file here which will contain all required metadata elements. See also the metadata export option in the Hop Conf tool. Below are the variables you can use for a long-lived container, running Hop Server: Environment Variable Default value Description HOP_SERVER_HOSTNAME 0.0.0.0 (listen to anything) The IP address the server will listen to. HOP_SERVER_PORT 8080 The port the server will listen to. HOP_SERVER_SHUTDOWNPORT 8079 The port the server shutdown listener will listen to. HOP_SERVER_USER cluster The username to log into the Hop server. HOP_SERVER_PASS cluster The password to log into the Hop server HOP_SERVER_METADATA_FOLDER (optional) You can point to a folder containing metadata JSON files which are then available to the server. HOP_SERVER_MAX_LOG_LINES 0 (keep all logging in memory) The maximum number of log lines kept in memory by the server. HOP_SERVER_MAX_LOG_TIMEOUT 0 (never clean up log lines) The time (in minutes) it takes for a log line to be cleaned up in memory. HOP_SERVER_MAX_OBJECT_TIMEOUT 1440 (a day) The time (in minutes) it takes for a pipeline or workflow execution to be removed from the server status. HOP_SERVER_KEYSTORE (optional) The path to the Java keystore file you want to use to run the Hop server with SSL enabled to support https. HOP_SERVER_KEYSTORE_PASSWORD (optional) The password of the Java keystore file you want to use to run the Hop server with SSL enabled to support https HOP_SERVER_KEY_PASSWORD (optional) The password of the key if you want to use to run the Hop server with SSL enabled. If both passwords are the same you can omit setting this variable. Make sure to get the latest updates for the Hop image by pulling them: docker pull apache/hop: If you do not specify a value for : the value latest will be taken. Latest will contain the last officially released version of Apache Hop. You can also specify Development as a tag. That image will contain the last built Development snapshot of Apache Hop. rxq7777 The most common use case will be that you run a short-lived container to just complete one Hop workflow or pipeline. The first example below runs the sample switch-case-basic.hpl pipeline from the samples project. Replace with latest, Development or a release tag, and replace with the path to the config/projects/samples folder in your Hop installation to mount that folder as a volume. This will make the samples project folder available as the /files folder in the container. docker run -it --rm \\ --env HOP_LOG_LEVEL=Basic \\ --env HOP_FILE_PATH='${PROJECT_HOME}/transforms/switch-case-basic.hpl' \\ --env HOP_PROJECT_FOLDER=/files \\ --env HOP_PROJECT_NAME=samples \\ --env HOP_RUN_CONFIG=local \\ --name hop-test-container \\ -v :/files \\ apache/hop: The second example below runs a workflow. In addition to the most basic example below, this example adds the environment, based on HOP_ENVIRONMENT_NAME, HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS and run parameters with HOP_RUN_PARAMETERS docker run -it --rm \\ --env HOP_LOG_LEVEL=Basic \\ --env HOP_FILE_PATH='${PROJECT_HOME}/pipelines-and-workflows/main.hwf' \\ --env HOP_PROJECT_FOLDER=/files/project \\ --env HOP_PROJECT_NAME=project-a \\ --env HOP_ENVIRONMENT_NAME=project-a-test \\ --env HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS=/files/config/project-a-test.json \\ --env HOP_RUN_CONFIG=local \\ --env HOP_RUN_PARAMETERS=PARAM_LOG_MESSAGE=Hello,PARAM_WAIT_FOR_X_MINUTES=1 \\ -v /path/to/local/dir:/files \\ --name my-simple-hop-container \\ apache/hop: If you need a long-lived container, this option is also available. For more information on the long-lived container please also see the Hop Server documentation as it describes what can be done using the Hop Server Run this command to start a Hop Server in a docker container: docker run -it --rm \\ --env HOP_SERVER_USER=admin \\ --env HOP_SERVER_PASS=admin \\ --env HOP_SERVER_SHUTDOWNPORT=8080 \\ --env HOP_SERVER_PORT=8181 \\ --env HOP_SERVER_PORT=8180 \\ --env HOP_SERVER_HOSTNAME=0.0.0.0 \\ -p 8080:8080 \\ -p 8181:8181 \\ -p 8180:8180 \\ --name my-hop-server-container \\ apache/hop: localhost is a loopback to your machine, which may be the container but not the host (your laptop or server where your run the container). Use 0.0.0.0 instead to listen on all available interfaces. Hop Server is designed to receive all variables and metadata from executing clients. This means it needs little to no configuration to run. If you want to use the web-services functionality additional information on how to configure your webserver can be found on the user manual Web Service page. For this to work properly the HOP_SERVER_METADATA_FOLDER variable has to be set too. When started can then access the hop-server UI from your host at http://0.0.0.0:8181 or http://localhost:8181 To make the Hop Docker image even more flexible, we added a HOP_CUSTOM_ENTRYPOINT_EXTENSION_SHELL_FILE_PATH variable that accepts a path to a custom shell script (that you provide).This shell script will run when you start the container before your Hop project is registered with the container’s Hop config and before your Hop workflow or pipeline gets kicked off. This feature might come in handy when you want to run some custom logic upfront, e.g. source Hop project files from S3 or clone them from GitHub. The custom shell file can be provided in several ways (this is not a full list): via the mount point (/files) You create your own Dockerfile, define this image as the base and then use the COPY instruction to copy your custom shell file in your Docker image. For the last scenario mentioned, it could be something like this: We create a simple bash script called clone-git-repo.sh in a sub-folder called resources: #!/bin/bash cd /home/hop git clone ${GIT_REPO_URI} chown -R hop:hop /home/hop/${GIT_REPO_NAME} We also make it parameter-driven, so it any other team can use it.We create our custom Dockerfile like so: FROM apache/hop:Development ENV GIT_REPO_URI=https://... # example value: https://github.com/diethardsteiner/apache-hop-minimal-project.git ENV GIT_REPO_NAME=repo-name # example value: apache-hop-minimal-project USER root RUN apk update \\ && apk add --no-cache git # copy custom entrypoint extension shell script COPY --chown=hop:hop ./resources/clone-git-repo.sh /home/hop/clone-git-repo.sh USER hop Note that apart from defining the new environment variables (that go in line with the parameters we defined in the clone-git-repo.sh earlier on ), we also COPY the clone-git-repo.sh file to user hop’s home folder. Next let’s build a small script which builds our custom image and then tests it by spinning up a container and running a workflow: #!/bin/zsh DOCKER_IMG_CHECK=$(docker images | grep ds/custom-hop) if [ ! -z \"${DOCKER_IMG_CHECK}\" ]; then echo \"removing existing ds/custom-hop image\" docker rmi ds/custom-hop:latest fi docker build . -f custom.Dockerfile -t ds/custom-hop:latest echo \" ==== TESTING =====\" HOP_DOCKER_IMAGE=ds/custom-hop:latest PROJECT_DEPLOYMENT_DIR=/home/hop/apache-hop-minimal-project docker run -it --rm \\ --env HOP_LOG_LEVEL=Basic \\ --env HOP_FILE_PATH='${PROJECT_HOME}/main.hwf' \\ --env HOP_PROJECT_FOLDER=${PROJECT_DEPLOYMENT_DIR} \\ --env HOP_PROJECT_NAME=apache-hop-minimum-project \\ --env HOP_ENVIRONMENT_NAME=dev \\ --env HOP_ENVIRONMENT_CONFIG_FILE_NAME_PATHS=${PROJECT_DEPLOYMENT_DIR}/dev-config.json \\ --env HOP_RUN_CONFIG=local \\ --env HOP_CUSTOM_ENTRYPOINT_EXTENSION_SHELL_FILE_PATH=/home/hop/clone-git-repo.sh \\ --env GIT_REPO_URI=https://github.com/diethardsteiner/apache-hop-minimal-project.git \\ --env GIT_REPO_NAME=apache-hop-minimal-project \\ --name my-simple-hop-container \\ ${HOP_DOCKER_IMAGE}","title":"Docker container","component":"tech-manual","version":"2.7.0","name":"docker-container","url":"/tech-manual/latest/docker-container.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Operating system","hash":"_operating_system","id":2},{"text":"Container Folder Structure","hash":"_container_folder_structure","id":3},{"text":"Environment Variables","hash":"_environment_variables","id":4},{"text":"Updating the Hop docker container image","hash":"_updating_the_hop_docker_container_image","id":5},{"text":"How to run the Container","hash":"_how_to_run_the_container","id":6},{"text":"Custom Entrypoint Extension Shell Script","hash":"_custom_entrypoint_extension_shell_script","id":7}]},"515":{"id":515,"text":"","title":"Getting Started","component":"tech-manual","version":"2.7.0","name":"getting-started","url":"/tech-manual/latest/getting-started.html","titles":[]},"516":{"id":516,"text":"BrandGuideline_Hop.pdf","title":"Hop Logo and Icons","component":"tech-manual","version":"2.7.0","name":"hop-logo-and-icons","url":"/tech-manual/latest/hop-logo-and-icons.html","titles":[{"text":"CMYK for Printing","hash":"_cmyk_for_printing","id":1},{"text":"RGB for Web usage","hash":"_rgb_for_web_usage","id":2},{"text":"Style guide:","hash":"_style_guide","id":3}]},"517":{"id":517,"text":"Getting started Docker container Hop logo and icons Kettle/PDI and Hop","title":"Index Page","component":"tech-manual","version":"2.7.0","name":"index","url":"/tech-manual/latest/index.html","titles":[]},"518":{"id":518,"text":"Terminology Kettle Hop Parallel scalable data pipeline Transformation Pipeline An operation in a parallel pipeline Step Transform Sequential series of actions Job Workflow An action in a workflow Job Entry Action Shared metadata container Metastore Hop Metadata The graphical user interface Spoon Hop Gui Script to run data pipelines Pan Hop Run Script to run workflows Kitchen Hop Run Server for remote execution Carte Hop Server Script for configuration - Hop Config Configuration Kettle Hop System variables ${KETTLE_HOME}/.kettle/kettle.properties ${HOP_CONFIG_FOLDER}/hop-config.json or ./config/hop-config.json GUI preferences (fonts, colors, preferences…) ${KETTLE_HOME}/.kettle/kettle.properties ${HOP_CONFIG_FOLDER}/hop-config.json or ./config/hop-config.json Language choice ${KETTLE_HOME}/.kettle/.languageChoice ${HOP_CONFIG_FOLDER}/hop-config.json or ./config/hop-config.json Shared objects ${KETTLE_HOME}/.kettle/shared.xml All stored in Hop shared metadata GUI usage information ${KETTLE_HOME}/.kettle/kettle.properties ${HOP_AUDIT_FOLDER}// Shared metadata ${PENTAHO_METASTORE_FOLDER} or ${HOME}/.pentaho/metastore ${HOP_METADATA_FOLDER} or ${HOP_CONFIG_FOLDER}/metadata Environment/Project configurations ${KETTLE_HOME}/.kettle/environment/metastore ${HOP_CONFIG_FOLDER}/hop-config.json or ./config/hop-config.json Engine Kettle Hop Unit Testing Plugin Yes Apache Spark Support No (PDI EE only) Yes (Beam) Apache Flink Support No Yes (Beam) Google Cloud DataFlow Support No Yes (Beam) Feature Kettle Hop Projects and Lifecycle Configuration No Yes Search Information in projects and configurations No Yes Configuration management through UI and command line No Yes Standardized shared metadata No Yes Pluggable runtime engines No Yes Advanced GUI features: memory, native zooom, …​ No Yes Metadata Injection Yes Yes (most transforms) Mapping (sub-transformation/pipeline Yes Yes(simplified) Web Interface WebSpoon HopWeb APL 2.0 license compliance LGPL doubts regarding pentaho-metastore library Yes Pluggable metadata objects No Yes GUI plugin architecture XUL based (XML) Java annotations","title":"Hop vs Kettle - A Quick Comparison","component":"tech-manual","version":"2.7.0","name":"hop-vs-kettle","url":"/tech-manual/latest/hop-vs-kettle/hop-vs-kettle.html","titles":[{"text":"Concepts","hash":"_concepts","id":1},{"text":"Configuration","hash":"_configuration","id":2},{"text":"Engines","hash":"_engines","id":3},{"text":"Features","hash":"_features","id":4}]},"519":{"id":519,"text":"Hop wants to allow data engineers to be able to deliver high quality work, deliver that work fast and integrated with bleeding edge technology. We want Hop to be completely open source, and are eager to hear your feedback on our chat and just as eager to see your bug tickets and feature request in Github Issues. As an open source first project, we started the Apache Software Foundation incubation process in September 2020 and graduated as and ASF top level project in December 2021. Check our Q&A for more information on why Hop was created and what the project is all about. A couple of things have been renamed to align Apache Hop with modern data processing platforms. A lot has changed behind the scenes, but don’t worry, if you’re familiar with Kettle/PDI, you’ll feel right at home immediately. Kettle Hop Difference Spoon Hop Gui Spoon has been abandoned. Hop Gui was written from scratch. Check the Getting Started guide or the Hop Gui docs to find out more. Transformation Pipeline No conceptual changes. You’ll develop pipelines just like you would develop a transformation, but a pipeline in Hop can run on different runtimes Job Workflow No conceptual changes. You’ll develop a workflow just like you would develop a job, but a workflow in Hop can run on different runtimes Step Transform No conceptual changes. The underlying code has changed and the dialogs have been updated, but you’ll feel right at home. Job Entry Action No conceptual changes. The underlying code has changed and the dialogs have been updated, but you’ll feel right at home. Metastore Metadata All metadata objects in Hop are stored as metadata. This happens behind the scenes. Except for increased usability, as a Hop developer, you’ll hardly notice. Carte Hop Server Again, smooth sailing. A lot has changed behind the scenes, but you’ll hardly notice. Check the docs Pan/Kitchen/(Maitre) Hop Run Kitchen and Pan depended on the Spoon GUI code. With the rewrite of Spoon to Hop Gui, we’ve recreated the command line tools. We believe this now is more consistent while providing more options and being easier to use at the same time. Check the docs JNDI gone jndi in Kettle/PDI is based on an open source project that hasn’t been updated in about a decade. As there was no reason to keep this functionality in Hop, it was abandoned. Repositories gone Code repositories belong in a VCS these days. We’ve abandoned the file and database (and PDI EE repositories) repositories, but implemented Git integration instead. - Projects, Environments, Run Config The Kettle Environments Plugin has been integrated and significantly extended. Hop now has integrated functionality to support your projects, environments and run configurations. Check the docs. - Hop Config This is a new command line tool to configure your projects, environments and run configurations. Apache Beam has been deeply integrated in Hop. Beam allows us to run pipelines directly on Apache Spark Apache Flink Google Dataflow","title":"If You Know Kettle (Pentaho Data Integration)","component":"tech-manual","version":"2.7.0","name":"if-you-know-kettle","url":"/tech-manual/latest/hop-vs-kettle/if-you-know-kettle.html","titles":[{"text":"Why Hop?","hash":"_why_hop","id":1},{"text":"Concepts","hash":"_concepts","id":2},{"text":"Apache Beam","hash":"_apache_beam","id":3}]},"520":{"id":520,"text":"As stated in the Q&A, Apache Hop used Kettle (aka Pentaho Data Integration or PDI) as a starting point in late 2019. A lot has happened in the meantime on both Apache Hop and Pentaho Data Integration. Compatibility with Kettle/PDI was never a goal for Apache Hop, but since a lot of organizations have invested vast amounts of resources in Kettle/PDI project development, the Apache Hop community provides a way to import Kettle/PDI code into Hop and convert the imported code the Hop ways of working. jobs: convert to Workflows (kjb to hwf), job entries to actions transformations: convert to Pipelines (ktr to hpl), steps to transforms kettle.properties: import to project variables shared.xml: extract relational database connections to Hop relational database connection metadata objects jdbc.properties: extract JNDI (simple-jndi) relational database connections to Hop relational database connection metadata objects connections in jobs and transformations are extracted and converted to Hop relational database connection metadata objects import jobs, transformations and other files into a Hop project (selected or bootstrapped in specified folder) repository references are extracted and converted to file references no connection cleanup: only 1 copy of database connections with the same name but different configurations is kept. no metastore import To import your Kettle/PDI projects in Hop, select File → Import from Kettle/PDI or press CTRL-i. Add you import sources and target in the pop-up dialog you’ll be presented with: The options in this dialog are: Option Description Optional Import From The folder to import Kettle/PDI jobs and transformations from No Import in existing project check to import into an existing project, uncheck to import into a folder No Import in project Dropdown list of available projects to import the Kettle/PDI project into Conditional Import to folder Path to import the Kettle/PDI project to. All imported items will be imported into a Hop project in this folder. Conditional Path to kettle.properties Path to a kettle.properties file. All properties in this file will be imported as variables in the Hop project. Yes Path to shared.xml Path to a shared.xml file. All database connections in this file will be imported as Hop relational database connection metadata objects in the specified Hop project or folder. Yes Path to jdbc.properties Path to a jdbc.properties file. All Kettle/PDI JNDI database connections in this file will be imported as Hop (generic) relational database connection metadata objects in the specified Hop project or folder. Yes After entering your import details, click the 'Import' button. After a couple of seconds (even when importing large projects), you’ll be presented with a migration summary: The migration summary shows: number of jobs number of transformations number of other files number of variables number of database connections Only migrated items will be shown. Items that were not available in the specified folders or files for this import will not be shown. When multiple database connections with the same name but different configurations were found (see 'Known limitations'), a connnections.csv file will be created in the project folder. This file contains a list of all jobs and transformations, with the connections they use.","title":"Import Kettle (PDI) Projects in Apache Hop","component":"tech-manual","version":"2.7.0","name":"import-kettle-projects","url":"/tech-manual/latest/hop-vs-kettle/import-kettle-projects.html","titles":[{"text":"Imported Items","hash":"_imported_items","id":1},{"text":"Known limitations","hash":"_known_limitations","id":2},{"text":"Usage","hash":"_usage","id":3}]},"521":{"id":521,"text":"Hop initially (late 2019) started as a fork of the Kettle (Pentaho Data Integration). Hop and Kettle/PDI are independent projects, each with their own roadmap and priorities. Given these different roadmaps, architectural vision and development track, Hop and Kettle/PDI are incompatible. However, since Hop shares a common history with Kettle/PDI, we provide the Hop community a way to import existing PDI/Kettle projects into Hop as seamlessly as possible. Check the following pages to find out more: Hop vs Kettle: a comparison between the concepts and approaches in Kettle/PDI vs Hop If you know Kettle provides guidance on how to get started with Hop quickly if you’ve used Kettle/PDI before Import Kettle explains how your existing Kettle/PDI projects can be imported into Hop","title":"Hop vs Kettle","component":"tech-manual","version":"2.7.0","name":"index","url":"/tech-manual/latest/hop-vs-kettle/index.html","titles":[]},"522":{"id":522,"text":"Apache Hop’s logging architecture is mostly readable from our source code. In the following sections, we provide a general layout and concepts to get familiar with. The HopLogStore.getInstance() is where Channels are able to store and append their logs. HopLogStore is initialized when you run HopEnvironment.init() Every runtime object (IPipelineEngine, IWorkflowEngine, etc.) in Apache Hop has a log channel ID with which you can examine the HopLogStore for what was logged for an ID. The logging hierarchy is in LoggingRegistry.getInstance() To get logging text you can do something like: HopLogStore.getInstance().getAppender().getBuffer(pipeline.getLogChannelId(), true);","title":"Logging","component":"tech-manual","version":"2.7.0","name":"logging-architecture","url":"/tech-manual/latest/logging/logging-architecture.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"HopLogStore","hash":"_hoplogstore","id":2},{"text":"Channels","hash":"_channels","id":3},{"text":"Logging Registry","hash":"_logging_registry","id":4},{"text":"Log text","hash":"_log_text","id":5}]},"523":{"id":523,"text":"Example source code is available for a log4j plugin (somewhere - ask Matt).","title":"Introduction","component":"tech-manual","version":"2.7.0","name":"logging-plugins","url":"/tech-manual/latest/logging/logging-plugins.html","titles":[]},"524":{"id":524,"text":"UDJC (User Defined Java Classes) allow for logging statements such as logBasic(\"test\");. The logs are stored in the following manner: It goes to a Hop logging channel. It ends up in HopLogStore.getInstance() which is initialized when you run HopEnvironment.init() The logging hierarchy is in LoggingRegistry.getInstance() The logging text can be accessed with something like: HopLogStore.getInstance().getAppender().getBuffer(pipeline.getLogChannelId(), true);","title":"UDJC Logging","component":"tech-manual","version":"2.7.0","name":"udjc-logging","url":"/tech-manual/latest/logging/udjc-logging.html","titles":[{"text":"Introduction","hash":"_introduction","id":1}]},"525":{"id":525,"text":"Welcome to the Hop project! The size of the codebase can perhaps appear to be a bit daunting at first so remember: Don’t Panic! When it comes down to it the codebase is fairly simple in structure. Let’s go over the main modules in the source code: Like the name suggests this module contains the essentials to bootstrap Hop. It has the following types of things on board: Tools: hop-encrypt The plugin registry which keeps track of all the plugins: PluginRegistry Core data types: IValueMeta, ValueMetaString, …​ Rows of data: IRowMeta, RowMeta Logging: HopLogStore, ILogChannel,…​ Generic relational database handling: Database, IDatabaseMeta, …​ Internationalization a.k.a. i18n to translate stuff: BaseMessages Password obfuscation and encryption: Encr Other utility classes like: Const Plugin types: LoggingPluginType, ValueMetaPluginType, DatabasePluginType, ExtensionPointPluginType, TwoWayPasswordEncoderPluginType Bootstrap everything in core with : HopClientEnvironment.init() This module contains the actual framework to handle pipelines and workflows. Tools: hop-server, hop-run Pipelines : IPipelineMeta, Pipeline, IPipelineEngine, …​ Workflows : IWorkflowMeta, Workflow, …​ Web server: HopServer, StartPipelineServlet, …​ Auditing: AuditManager, AuditEvent, …​ Other stuff worth mentioning: partitioning, lineage, …​ Plugin types: RowDistributionPluginType, TransformPluginType, TransformDialogFragmentType, PartitionerPluginType, JobEntryPluginType,JobEntryDialogFragmentType, LogTablePluginType, LifecyclePluginType, HopLifecyclePluginType, HopServerPluginType, CompressionPluginType, AuthenticationProviderPluginType, AuthenticationConsumerPluginType, PipelineEnginePluginType Bootstrap everything in engine with : HopEnvironment.init() This module obviously contains everything related to the Hop GUI Tools: hop-gui, hop-translate Hop GUI: HopGui, HopDataOrchestrationPerspective, HopPipelineFileType, …​ Translator, a tool to help you translate Hop itself: Translator The rest is mostly a collection of re-usable dialogs and widgets This module contains the core metadata serialization API for every shared object in Hop The plugins module contains all the functionality in Hop which is not absolutely strictly essential. This means that you will find a lot of transforms and actions in this module. You can use this collection as a series of examples on how to build plugins for Hop.","title":"Getting Started","component":"dev-manual","version":"2.7.0","name":"getting-started","url":"/dev-manual/latest/getting-started.html","titles":[{"text":"Core","hash":"_core","id":1},{"text":"Engine","hash":"_engine","id":2},{"text":"UI","hash":"_ui","id":3},{"text":"Metadata","hash":"_metadata","id":4},{"text":"Plugins","hash":"_plugins","id":5}]},"526":{"id":526,"text":"Getting started Metadata plugins Porting Kettle plugins Setting up your development environment Integration Testing Plugin Development Plugin Samples SVG Files Creating your own plugin Internationalisation (i18n)","title":"Index Page","component":"dev-manual","version":"2.7.0","name":"index","url":"/dev-manual/latest/index.html","titles":[]},"527":{"id":527,"text":"The Apache Hop team has created an integration testing framework that is being used to test key components of the software. The integration tests run as a daily build on Jenkins and can be found here. There are two possible scenarios that you can follow, the first is adding a test to one of the existing projects containing tests. The second scenario is creating a new project. First start by creating a local clone of the Apache Hop repository, instruction to do this can be found here. Open the Hop gui and add one of the integration testing projects to your gui In this example we will be opening the transforms project and add an extra test in this project. When the UI asks to add an environment or lifecycle press no, using this is not supported naming convention inside the project when taking a look inside the project you will see a distinct naming pattern is used. each test consists of one workflow and one or more pipelines to execute the test. The workflow must always start with main- followed by number and a logical explanation of what the test is checking. the pipelines linked to the workflow start with the same number the workflow uses to make a clear distinction which pipelines are linked to which test. The workflows themselves can be straightforward, the exit code (success/abort) is used to determine if the workflow has passed or failed. note You can also make an integration test to test something that must fail. Then you simply link the false hop to a success and the true hop to an abort action. create a unit test Now you can add your own workflow to the project folder. Make sure you have a GitHub Issue number you can refer to when creating a pull request. You can also add a new project to the integration test folder. Give the project a meaningful name that explains the subject you will be testing. important the project should have a workflow engine named local You can also run the integration tests on your local system. There are 2 ways the integration tests can be run on your local system The entire test suite is available as a docker compose script to use this use following commands. This include all services available and needed for the tests. You need version 1.27.0 or higher of docker-compose Clean build HOP cd hop mvn clean install Run the Docker Compose script cd integration-tests/scripts ./run-tests-docker.sh # Optionally you can run a single project by adding the PROJECT_NAME variable to the script ./run-tests-docker.sh PROJECT_NAME=database Surefire Reports We generate xml reports that can be used by Jenkins to generate reports. these result reports can be found in the integration-tests/surefire-reports folder. A script is also provided to run the test without using Docker. This script is also used inside the automated test suite but can be used in a stand alone mode. This script can be found at following location hop/integration-tests/scripts/run-tests.sh. Be sure to export the needed system variables for the script to find the correct paths to run the tests. You can aslo run a single project by adding the project name to the command ./run-tests.sh projectname In some cases you want to check the logs to see if a specific value is present to mark your test as passed or failed. The script used in main-0001-static-partitioning can be helpful. Code used in JavaScript Action in the workflow: var txt = previous_result.getLogText(); var ok = true; var expectedVariables = [ \"partitioned.0 - Internal.Transform.Partition.ID = P1\", \"partitioned.1 - Internal.Transform.Partition.ID = P2\", \"partitioned.2 - Internal.Transform.Partition.ID = P3\" ]; for (var i = 0 ; i<expectedVariables.length ; i++) { var expectedVariable = expectedVariables[i]; if ( !txt.contains(expectedVariable)) { ok = false; log.logError(\"Expected variable expression '\"+expectedVariable+\"' was not logged at least once\"); } } var expectedValues = [ \"partitioned.1 - id = 1\", \"partitioned.2 - id = 2\", \"partitioned.0 - id = 3\", \"partitioned.1 - id = 4\", \"partitioned.2 - id = 5\", \"partitioned.0 - id = 6\", \"partitioned.1 - id = 7\", \"partitioned.2 - id = 8\", \"partitioned.0 - id = 9\", \"partitioned.1 - id = 10\", ]; for (var i = 0 ; i<expectedValues.length ; i++) { var expectedValue = expectedValues[i]; if ( !txt.contains(expectedValue)) { ok = false; log.logError(\"Value logged as '\"+expectedValue+\"' was not logged at least once\"); } } ok; This script reads the log returned by the previous pipeline and parses it to search for values. All files that are shipped with Apache software need to contain the Apache Software Foundation’s header. This also applies to all workflows and pipelines that are shipped as integration tests, samples or in any other form. To spare contributors the pain of manually having to add the ASF license header in workflows and pipeline, Hop Gui supports the HOP_LICENSE_HEADER_FILE project variable. Set this variable in your project and point it to a file containing the ASF Header’s text, e.g. integration-tests/asf-header.txt to let Hop include the ASF header in all of your workflows and pipelines. As with any other piece of code, run mvn apache-rat:check to verify all files contain the correct headers before contributing your test or sample workflows and pipelines.","title":"Integration Testing","component":"dev-manual","version":"2.7.0","name":"integration-testing","url":"/dev-manual/latest/integration-testing.html","titles":[{"text":"Adding tests to an existing project","hash":"_adding_tests_to_an_existing_project","id":1},{"text":"Adding a new project","hash":"_adding_a_new_project","id":2},{"text":"Running tests locally","hash":"_running_tests_locally","id":3},{"text":"Docker Compose","hash":"_docker_compose","id":4},{"text":"Testing script","hash":"_testing_script","id":5},{"text":"Special checks","hash":"_special_checks","id":6},{"text":"Set the HOP_LICENSE_HEADER_FILE project variable","hash":"_set_the_hop_license_header_file_project_variable","id":7}]},"528":{"id":528,"text":"Hop is already being used in many countries across the world where different languages are spoken. As such \"internationalisation\" represents the support for multiple languages in our software. Since it is such a long word it is typically abbreviated to i18n. The message bundles that contains the translations for the various parts of Hop are part of the source code. If you want to start any i18n efforts we recommend that you set up your development environment first as described here: Setting up your development environment In the Hop configuration file hop-config.json there is an entry called LocaleDefault which points to the locale string that you want to use. Such a locale string is always in the format: language code, underscore and country. For example, the default is en_US for English in the US. You can change the locale you want to use in the configuration file or in the Hop GUI under the Tools / options menu. Suppose we’re working on a class in file src/main/java/org/apache/hop/p1/Foo.java What we want to do is have an easy way to get our hands on a translated String. The easiest way to do this is with the standard BaseMessages class. For example, you can see the following pop up all over the place in the Apache Hop source code: org.apache.hop.i18n.BaseMessages.getString(PKG, \"Foo.MyMessage\"); If references a PKG variable typically defined at the top of the class like this: private static final Class PKG = Foo.class; // For Translator By doing this we know the location of the message bundles that will be used for translations. In this case the message bundles will be looked for in src/main/resources/org/apache/hop/p1/messages/ For the default locale en_US it will point to a file called messages_en_US.properties in that folder: src/main/resources/org/apache/hop/p1/messages/messages_en_US.properties In that file we can place an entry: Foo.MyMessage = My own personal message Many plugin and GUI annotations support i18n as well. Unfortunately it is not possible to use the method explained above to resolve keys into strings. Because of this we use the following format: i18n:package:key For example, the main File menu in the Hop GUI is defined with an annotation: @GuiMenuElement( root = ID_MAIN_MENU, id = ID_MAIN_MENU_FILE, label = \"i18n::HopGui.Menu.File\", parentId = ID_MAIN_MENU) With the i18n: prefix the Hop GUI registry knows that it can translate this using the given package and key. If there is no package defined it simply means: use the package from the current class. In our example it is org.apache.hop.ui.hopgui which means that we can find the message bundles for this class in ui/src/main/resources/org/apache/hop/ui/hopgui/messages/ and for locale en_US in : ui/src/main/resources/org/apache/hop/ui/hopgui/messages/messages_en_US.properties In there we can find the English translation: ... HopGui.Menu.File=&File .... If you think that it’s quite a bit of a pain to figure out the keys, locations, locale and so on: we agree! To make i18n easy and translating fun we created a tool called Hop Translator. Translator allows you to provide strings for the keys that you use in your source code. It will create the message bundles in the right location, in the right format (in UTF-8) and with the right Apache license header. To run translator simply build the code and then: cd assemblies/client/target/ unzip -q hop-*.zip cd hop sh hop-translator.sh translator.xml ../../../../ In other words, run Translator and point it to the location of the source code you want to analyze. Translator uses a simple Java code scanner to look for patterns like PKG BaseMessages.getString \"i18: So please give Translator a chance to pick up the i18n keys as well as the package in which they’re being used. If you think that it would be \"better\" to use things like clever prefixes and so on please remember that all you’re doing is making sure your keys can’t be found by Translator and as such are hard to translate. As much as possible, define the PKG variable to the same class as the one you’re working in. This will prevent message bundles from becoming too large and perhaps difficult to merge later on. To use Translator you need 2 things: the Hop source code and a recent build of Hop. With the latter you can start Translator like this: sh hop-translator.sh translator.xml /path/to/hop/source/code After a few seconds of code-scanning you’ll see the following interface: The default locale en_US will be selected by default. As an example, here is how we can translate the Hop GUI menu to Dutch: Select the hopgui package: org.apache.hop.ui.hopgui` Select locale nl_NL at the very top left Select any of the missing HopGui.Menu…​ keys In the following screenshot we selected HopGui.Menu.Edit.Cut: Now we can type in the translation for \"Cut selected to clipboard\" and hit the Apply button. Finally, when we’re done with all keys and packages we can use the \"Save\" button to make sure our efforts are not for nought: Once the files are saved you re-build Hop and test them by using the translated keys. Finally, don’t forget to commit and push changes as described here: Setting up your development environment Please reference a Github Issue and see if there aren’t any already for the locale you’re covering. As you can see in the screenshot above many packages for nl_NL are highlighted. That is because there are a lot of non-translated keys in those packages: light red: the message bundle is missing the darkest gray: over 50 keys are not translated dark gray: over 25 keys are not translated gray: over 10 keys are not translated light gray: over 5 keys are not translated the lightest gray: at least one key is not translated If you want to translate a new locale, simply add it to the translator.xml file available in the root of your Hop build.","title":"Hop internationalisation","component":"dev-manual","version":"2.7.0","name":"internationalisation","url":"/dev-manual/latest/internationalisation.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Translating changes source code","hash":"_translating_changes_source_code","id":2},{"text":"How is it configured?","hash":"_how_is_it_configured","id":3},{"text":"Translating strings","hash":"_translating_strings","id":4},{"text":"In Java code","hash":"_in_java_code","id":5},{"text":"In annotations","hash":"_in_annotations","id":6},{"text":"Translator concerns","hash":"_translator_concerns","id":7},{"text":"Do not be too smart","hash":"_do_not_be_too_smart","id":8},{"text":"Using Translator","hash":"_using_translator","id":9},{"text":"Translating keys","hash":"_translating_keys","id":10},{"text":"Highlighting codes","hash":"_highlighting_codes","id":11},{"text":"Adding a new locale","hash":"_adding_a_new_locale","id":12}]},"529":{"id":529,"text":"Writing metadata plugins is easy in Hop. Any Plain Old Java Object can be used as a starting point. This annotation signals to the Metadata plugin type that there is something worth looking at. The class which carries this annotation will contain the metadata. Here are the attributes of the @HopMetadata annotation: key : this uniquely identifies the plugin and will be the name of the folder in which the metadata resides when serialising to JSON (see below) name : a human-readable name description : an extended description image : the path to an image which helps identify the metadata in the Hop GUI The class with this annotation will be found either because it lives in the plugins/ folder of Hop or if it’s an internal class and is described in the file engine/src/main/resources/hop-metadata-plugins.xml Example: PartitionSchema.java All properties you want to have as part of the shared Hop Metadata should get the @HopMetadataProperty annotation. All top level classes flagged with @HopMetadata should have a name property of type String. Here are the @HopMetadataProperty attributes: key : optional key if you want it to be different from the name of the field password: set this to true if you want the String field to be encoded using the TwoWayPasswordEncoder of the IHopMetadataProvider interface. storeWithName: if you want to store a reference to another shared metadata object, you can set this to true, otherwise all the properties of the object will be stored. Here are the supported data types: enum : any enum is serialized using its name String : also see the password attribute above. Integer / int Long / long Boolean / boolean java.util.Date java.util.Map java.util.List : with T any of the data types listed here. POJO : Any class with more @HopMetadataProperty annotations in it. You also want to have a way to edit the metadata in the GUI. This can be done by extending the class MetadataEditor. Example: PartitionSchemaEditor.java The path to the Editor class will be found automatically by looking at the name of the metadata plugin class and then simply by appending Editor to it. If you prefer to keep metadata and GUI code separate the Hop GUI will also look in package org.apache.hop.ui instead of org.apache.hop Working examples: org.apache.hop.path.to.MyMetadata → org.apache.hop.path.to.MyMetadataEditor org.apache.hop.partition.PartitionSchema → org.apache.hop.ui.partition.PartitionSchemaEditor createControl() : create the various controls on the given parent Composite. The composite has a FormLayout set. setWidgetsContent(): Using the metadata object (or getMetadata()) you can set the content on the created controls. getWidgetsContent(): Grab the values of the various controls and modify the metadata save(): verify settings, grab metadata and call super.save() setFocus(): sets the focus on the metadata dialog or tab. Choose the control to set the focus to (usually the name). createButtonsForButtonBar(): if you want to add buttons at the bottom to do things like testing, viewing, …​ you can use this method As mentioned above, the key or ID the @HopMetadata plugin is used as a top level folder to store objects in. For the serialisation to JSON most simple data types are supported. However we suggest you use the KISS principle. If you want to serialize interfaces (for example like IDatabase used by DatabaseMeta) you might want to flag the interface with the @HopMetadataObject annotation. This annotation allows you to specify an object factory for those classes. Such an object factory implements interface IHopMetadataObjectFactory with the 2 following methods: public Object createObject( String id, Object parentObject ) throws HopException → Creates an object using an ID. The parent object is often another metadata object. You can use it to check if it implements IVariables so you can inherit variables from there. public String getObjectId( Object object ) throws HopException → Retrieves the object ID from the given object. We recommend that you check the instance of the object until the factory interface supports generics. (TODO)","title":"Metadata plugins","component":"dev-manual","version":"2.7.0","name":"metadata-plugins","url":"/dev-manual/latest/metadata-plugins.html","titles":[{"text":"@HopMetadata Annotation","hash":"_hopmetadata_annotation","id":1},{"text":"Metadata Properties","hash":"_metadata_properties","id":2},{"text":"An Editor class to edit the metadata","hash":"_an_editor_class_to_edit_the_metadata","id":3},{"text":"Some methods explained","hash":"_some_methods_explained","id":4},{"text":"Metadata serialisation","hash":"_metadata_serialisation","id":5}]},"530":{"id":530,"text":"This page explains how to develop new plugins with references to make development easy. Hop keeps a central registry of all the available Hop plugins. They are organized per plugin type (see below). The registry also keeps track of the class loaders that were created and used for the various plugins to avoid duplication. You can get a hold of this plugin registry at any place using PluginRegistry.getInstance() Plugins allow you to extend Hop functionality in over 20 different areas. Each of these plugin types are represented by a class which implements IPluginType For your convenience you can extend a class called BasePluginType. The responsibility of these classes is to register plugins of the given type in the Hop Plugin Registry. It looks for these plugins in various ways: It reads an XML file if the plugin classes to load are in the classpath. This technique is used for the core plugins and a number of GUI plugins. You can find them in core/src/resources, engine/src/resources and ui/src/resources. The location of the file is defined using the getXmlPluginFile() method. It scans the plugins/ subfolders and scans the jar files on the lookout for classes that have the annotation and interface specified in the plugin type. It then loads these classes and adds them to the plugin registry. You can use the plugin registry to search for plugins using an ID, a class name. You can list all plugins and types. Plugins contain a lot of information and implement the IPlugin interface. Here are a few of the main fields: Field Type Optional Description ids String[] Mandatory The unique ID of the plugin within its type. A plugin can have more than 1 ID to make it possible to merge multiple plugins into one and still remain backward compatible. name String Optional The name of the plugin as shown in the user interface description String Optional The description of the plugin as shown in the user interface category String Optional used to organize certain types of plugins in the UI, for example transforms and actions imageFile String Optional The path to the SVG file representing the icon of this plugin. documentationUrl String Optional The URL of the documentation for the plugin keywords String[] Optional The keywords which represent this plugin to make it easier to find it in the UI nativePlugin boolean false Indicates if the plugin can be found in the classpath (using XML or API) or in a plugin classpath Aside from this list you can find the main class, the libraries in the plugin classpath and so on. The information in the IPlugin objects is copied from the plugin annotations on the plugin classes by the PluginType class. In Hop all optional plugins are in the hop/plugins folder which contains the plugin categories: database: relational database plugins actions: workflow actions engines: pipeline and workflow engines transforms: pipeline transforms vfs: Virtual Files System plugins misc: miscellaneous plugins. Pick this category only when other plugin types don’t fit. Once you identified the category, create the plugin as a new maven sub module by carefully mentioning parent in your plugin pom file and adding new module in the parent project. This ensures adding the new plugin into maven build cycle. You can duplicate the reference plugin mentioned above as a starting point. When duplicating take time to modify the documentation and remove irrelevant to get the skeleton. THOUGHT: Can we create maven archetype? Contribution welcome. To add the plugins into final artifacts, you need to add it to hop/assemblies/plugins directory under right category as a maven sub module by carefully mentioning parent in your plugin pom file and adding new module in the parent project. This ensures adding the new plugin into maven build cycle. Define src/assembly/assembly.xml with necessary dependent jars required for the plugin to function. Review the jars which end up going into the plugin zip. If any jar which is already present in hop/lib directory, exclude it. This is done to keep the target hop artifact size as small as possible.","title":"Hop Plugin Development","component":"dev-manual","version":"2.7.0","name":"plugin-development","url":"/dev-manual/latest/plugin-development.html","titles":[{"text":"Plugin Registry","hash":"_plugin_registry","id":1},{"text":"Plugin types","hash":"_plugin_types","id":2},{"text":"Plugins","hash":"_plugins","id":3},{"text":"Where are the Hop plugins?","hash":"_where_are_the_hop_plugins","id":4},{"text":"Actions","hash":"_actions","id":5},{"text":"Steps to add new plugin","hash":"_steps_to_add_new_plugin","id":6},{"text":"Create skeleton","hash":"_create_skeleton","id":7},{"text":"Add to assemblies","hash":"_add_to_assemblies","id":8}]},"531":{"id":531,"text":"This document will explain how a developer can add samples to the plugins in the source code so that they will end up in the samples project in the Hop client distribution assembly. The samples project in the Hop distribution is located in the config/projects/samples folder. Its parent is the default project. This means that it’s not needed to add any metadata objects (like run configurations) to the samples projects that are already present in the default project. If a plugin places a samples/ folder under the src/main/ folder its content will be picked up and copied over the samples project folder. The content will end up exactly in the same folder structure. A few examples: Source Target plugins/transforms/addsequence/src/main/samples/transforms/add-sequence-add-a-unique-id.hpl config/projects/samples/transforms/add-sequence-add-a-unique-id.hpl plugins/engines/beam/src/main/samples/metadata/pipeline-run-configuration/Direct.json config/projects/samples/metadata/pipeline-run-configuration/Direct.json As you can see it’s easy to add extra metadata simply by putting it in the metadata/ folder under your samples/ folder in the plugin. The same goes for test data datasets and so on. If you have metadata objects, sample input files data sets or files that you might want to make available for all plugins, please add them to the following place in the source code: assemblies/static/src/main/resources/config/projects/samples When naming samples and folders please stick to the following basic rules: The filenames start with the name of the transform, action or plugin All lowercase No spaces in the filename or underscores: use dashes (-) Put plugins in the right folders: transform samples to in transforms/, action samples go in actions/ and so on. Keep things clean. If you need to add input files for your sample put them in a files/ sub-folder like transforms/files Please use our best practices guide to create the examples. Create notes in pipelines and workflows explaining what happens. Make the note font large enough: 11 or higher. All files that are shipped with Apache software need to contain the Apache Software Foundation’s header. This also applies to all workflows and pipelines that are shipped as integration tests, samples or in any other form. To spare contributors the pain of manually having to add the ASF license header in workflows and pipeline, Hop Gui supports the HOP_LICENSE_HEADER_FILE project variable. Set this variable in your project and point it to a file containing the ASF Header’s text, e.g. integration-tests/asf-header.txt to let Hop include the ASF header in all of your workflows and pipelines. As with any other piece of code, run mvn apache-rat:check to verify all files contain the correct headers before contributing your test or sample workflows and pipelines.","title":"Plugin samples","component":"dev-manual","version":"2.7.0","name":"plugin-samples","url":"/dev-manual/latest/plugin-samples.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"The Samples project","hash":"_the_samples_project","id":2},{"text":"Plugin samples","hash":"_plugin_samples","id":3},{"text":"Standard project content","hash":"_standard_project_content","id":4},{"text":"Naming standard","hash":"_naming_standard","id":5},{"text":"Set the HOP_LICENSE_HEADER_FILE project variable","hash":"_set_the_hop_license_header_file_project_variable","id":6}]},"532":{"id":532,"text":"You no longer need a Pentaho specific $HOME/.m2/settings.xml Change group pentaho-kettle to org.apache.hop Change dependency kettle-core to hop-core Change dependency kettle-engine to hop-engine Change dependency kettle-ui-swt to hop-ui-swt Hop doesn’t publish artifacts to Maven Central (yet). You need to include the Apache repository in your pom.xml. Apache https://repository.apache.org/snapshots/ Apache Repository true false To speed up searching for plugin annotations Apache Hop uses a Java Annotations Index: Jandex. Unless you have such an index in your plugin JAR file Hop will not pick it up. To add the index you simply need to add the plugin to your maven pom.xml: ... 3.0.5 ... ... ... io.smallrye jandex-maven-plugin ${jandex.version} ... io.smallrye jandex-maven-plugin make-index jandex For more information about Jandex, please see: https://github.com/wildfly/jandex-maven-plugin/ After the build and the Java annotations index was made you should see a file called META-INF/jandex.idx in your plugin JAR file. All interface classes have changed from Interface to I. For example: RowMetaInterface → IRowMeta Transformations are now called Pipelines. This means that the corresponding classes have changed. For example: - TransMeta is now called PipelineMeta - Trans is now called Pipeline Steps are now called Transforms. For example: StepMeta is now called TransformMeta StepMetaInterface is now called ITransformMeta BaseStep is now called BaseTransform StepDataInterface is now called ITransformData …​and so on === Transform Generics ITransform no longer expects you to pass ITransformMeta and ITransformData classes in the following methods: processRow() init() dispose() stopRunning() This greatly simplifies the code. Your need to let Hop know what the relationship is between your implementation of ITransform, ITransformMeta, ITransformData, for example: public class Sample extends BaseTransform implements ITransform { ... } The same is true for your implementation of ITransformMeta: public class SampleMeta extends BaseTransformMeta implements ITransformMeta { ... } Any references to Repository, including parameters and the saveRep() and loadRep() methods in Transforms and Actions can be safely removed VariableSpace was renamed to IVariables The API has also been cleaned up and simplified. For example, environmentSubstitute() is now called resolve() Please note that metadata objects (TransMeta, JobMeta, DatabaseMeta, …​) no longer implement VariableSpace (or IVariables). Only runtime objects like Pipeline, Workflow, ITransform and so on have a state in Hop. If you’re porting classes implementing an Extension Point plugin by implementing ExtensionPointInterface please note that you’ll receive an extra parameter which is IVariables. It aims to contain the variables of the parent object in the XP context. Obviously the interface name changed to IExtensionPoint. You can also use generics to specify the expected class of the receiving subject. These objects are no longer stored in a Pipeline or a Workflow, they are now fully shared objects so any references of those in the interface methods of Transforms and Actions can be safely removed: List databases List slaveServers The MetaStore code is unfortunately LGPL licensed and for that reason removed from the project. It was replaced by the general IHopMetadataProvider instead of the IMetaStore references. At any given time you can ask the current IHopMetadataProvider to give you a serializer for a metadata class. This IHopMetadataSerializer can then be used to CRUD objects as well as list and so on. For more information on how to implement Hop Metadata plugins, see: Metadata Plugins. MetaStore elements can now be managed in a standard way. In your transform dialogs you can use the widget: MetaSelectionLine This will take care of adding label, tooltip, combo box and a few buttons to manage the metastore elements.","title":"Porting Kettle Plugins","component":"dev-manual","version":"2.7.0","name":"porting-kettle-plugins","url":"/dev-manual/latest/porting-kettle-plugins.html","titles":[{"text":"Change maven dependencies","hash":"_change_maven_dependencies","id":1},{"text":"Jandex","hash":"_jandex","id":2},{"text":"API changes","hash":"_api_changes","id":3},{"text":"Interface naming","hash":"_interface_naming","id":4},{"text":"Transformations","hash":"_transformations","id":5},{"text":"Steps","hash":"_steps","id":6},{"text":"Repository","hash":"_repository","id":7},{"text":"VariableSpace","hash":"_variablespace","id":8},{"text":"Extension point plugins","hash":"_extension_point_plugins","id":9},{"text":"Slave Servers and Database Connections","hash":"_slave_servers_and_database_connections","id":10},{"text":"MetaStore → HopMetadata","hash":"_metastore_hopmetadata","id":11}]},"533":{"id":533,"text":"Thank you for wanting to help out with the development of Apache Hop. We really value your help. We assume you’re going to be using the IntelliJ IDEA integrated development environment. If you visit the Apache Hop code on github you’ll notice a Fork icon on the top right of the page: Use this button to create a copy of the complete Hop codebase. You can then work on this fork in all safety. We call this new fork \"origin\" and the master copy of the Hop codebase \"upstream\" from your point of view. Now that you have your own fork it’s time to clone it onto your work computer. We’re going to assume you set up github security with proper keys and so on. To get the URL of your fork you can use the copy button on this GitHub page: You can now run a command like this: git clone git@github.com:YourAccount/hop.git Once it’s done you’ll have a new hop folder containing the project. In IDEA you can use menu : File / New / Project from existing sources…​ This will ask you to navigate to our new hop folder. Then you need to choose to import the project from external model \"Maven\": Alternatively, you can develop remotely with IDEA and gitpod.io. You’ll need JetBrains Gateway with the Gitpod plugin as explained here. Gitpod will open your project in a web-based VS Code by default. After you change your proferences to IntelliJ, your browser will launch the remote development environment. Once you’ve started a gitpod workspace for your Apache Hop fork, all build operations etc work just like they would in your local development environment. The Hop gitpod configuration comes with a desktop that can be used to run Hop Gui and test your work. Your desktop can be accessed by prefixing your workspace’s url with 6080, e.g. https://6080-your-gitpod-url.gitpod.io. The default permissions in the Github-Githop integration are quite restrictive. You’ll need to allow yourself to write to your (public) repository before you will be able to push your changes. To build your fork you can use Maven. Run the following command to build Hop and run all unit tests: mvn clean install Please make sure all the files you added or changed have the proper license header. You can run the following command to verify this: mvn apache-rat:check IMPORTANT: At the very least make sure to run the above 2 commands before generating a pull request against the \"upstream\" Hop source code. Tip : to run Maven quicker in parallel and by skipping the unit tests you can use the following command: mvn -T4 -DskipTests=true clean install Replace 4 by the number of threads you can spend on your computer. Beyond following the obvious best practices of coding Java it’s important to note that we are using a code formatter called google-java-format To install it in IntelliJ IDEA: Go to File → Settings → Plugins. Activate the Marketplace tab. Search for the plugin google-java-format by Google. Install it. Restart IntelliJ IDEA. All code which gets accepted into Hop is re-formatted with google-java-format via the pull request validation system. Please consider setting up an APL copyright header. In Idea this is done like this: File / Settings…​ / Editor - Copyright Create a new copyright profile called \"APL\" with the following content: Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. Set this as the default copyright profile for all files. If you want to create samples for the Apache Hop project, to be included in the source code, you can set variable HOP_LICENSE_HEADER_FILE in your environment(s) and point it to a file containing the license above. It will automatically insert the license header in your .hpl and .hwf files. After a successful build, the Hop UI can be started. $ cd assemblies/client/target $ unzip hop-client-*.zip $ cd hop On Windows, run hop-gui.bat, on Mac and Linux, run hop-gui.sh To debug the Hop GUI or a long running pipeline or workflow you can change the launch scripts and uncomment the line with the 5005 port in it: # optional line for attaching a debugger # HOP_OPTIONS=\"${HOP_OPTIONS} -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005\" To debug the Hop GUI you should run hop-gui.bat DEBUG passing DEBUG as parameter On IntelliJ you can now start a remote debugging session using the menu: Run — Attach to process…​ You can now set breakpoints in your code and see what’s going on. Updating your fork can be done simply by committing locally and then pushing those changes to \"origin\". Make sure to always reference a #12345 GitHub issue! For example: git commit -m \"#12345 : My work description\" . After a while it’s likely your \"origin\" fork will be lagging behind with the main \"upstream\" Hop codebase. You can develop against the master branch of the codebase or you can create different branches for the features you’re building or the GitHub issue you’re fixing. In the commands below we assume you want to update your master branch. If this is not the case, replace master with the branch you’re interested in and later want to generate a pull request for. To update it you can add \"upstream\" to your local configuration: git remote add upstream git@github.com:apache/hop.git Then you can fetch all the changes from \"upstream\": git fetch upstream master We now want to catch up by pulling all the changes from \"upstream\" and by doing a rebase at the same time. git pull --rebase upstream master Now of-course we want to update our \"origin\" fork as well: git push --force-with-lease origin master Changes to the Hop codebase are done through Pull Requests. They’ll be built, compiled, tested and reviewed. On the github page of your \"origin\" fork you’ll now see something like the following: You can now choose to create the Pull Request using the shown button. If all goes well you should see something like the following: After you hit the green \"Create pull request\" button you will be presented with the opportunity to describe the changes. Make sure to reference the right GitHub Issue and leave useful tips for the reviewers of the changes. Again: as mentioned above please make sure your project builds and all tests succeed. Once you created the pull request we will run all sorts of tests and this will take some time. You can check the pull request to see how it’s doing: If the pull request doesn’t build you can look at the details and fix it easily by simply pushing another commit to your \"origin\" fork. It will be automatically added to the pull request and it will re-run the build and tests. If you want to review someone else’s pull request you can check out a pull request in a different branch. Before you do this, commit or stash all the changes you’re making yourself in the branch you’re currently using. Then fetch the pull request changes themselves, with 1234 being the pull request number and pr1234 the name of the new branch you want to create locally: git fetch upstream pull/1234/head:pr1234 Now we can check out this branch: git checkout pr1234 You now have the state of the source code in the pull request and you can build and test the project.","title":"Setting up your development environment","component":"dev-manual","version":"2.7.0","name":"setup-dev-environment","url":"/dev-manual/latest/setup-dev-environment.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Fork Apache Hop!","hash":"_fork_apache_hop","id":2},{"text":"Clone it","hash":"_clone_it","id":3},{"text":"Import the project","hash":"_import_the_project","id":4},{"text":"Building the project","hash":"_building_the_project","id":5},{"text":"Code formatting","hash":"_code_formatting","id":6},{"text":"Copyright","hash":"_copyright","id":7},{"text":"Run Apache Hop","hash":"_run_apache_hop","id":8},{"text":"Debugging on linux","hash":"_debugging_on_linux","id":9},{"text":"Debugging on Windows","hash":"_debugging_on_windows","id":10},{"text":"Attach debug process on IntelliJ","hash":"_attach_debug_process_on_intellij","id":11},{"text":"Committing work","hash":"_committing_work","id":12},{"text":"Updating your fork","hash":"_updating_your_fork","id":13},{"text":"Generating a pull request","hash":"_generating_a_pull_request","id":14},{"text":"Evaluating a pull request","hash":"_evaluating_a_pull_request","id":15}]},"534":{"id":534,"text":"This guide is to help you set up and start development on a plugin that will not be included in the Hop repository. For more information on plugin types and how to add them to the Hop repository check out following guide. The Apache software foundation has a strict policy on source licenses including all dependencies used to provide certain functionality. To see which dependencies are allowed in an Apache project check following page. If your plugin consists of code and dependencies in category A it can safely be added to the Hop repository and community can help maintain the code. If it uses category B or X it can no longer be added to the default distribution of Hop. This guides assumes your are using IntelliJ for your development, some steps might be different in Eclipse. Clone the skeleton repository found here Import the project in Intellij Start coding The sample project consists out of 3 main modules and 3 sub-modules the main modules are: hop-action-sample hop-transform-sample assemblies assemblies-action-sample assemblies-transform-sample debug In our sample repository one action and one transform are provided, they all work but they do not manipulate data or perform any actions. The assemblies module is used to create a distribution or test your action or transform during development. To debug the project create a new application configuration with following configuration: Important is the working directory, for hop to work including all the plugins provided by the project a certain folder structure is required. this is generated at the debug location using following pom. org.apache.hop hop-core ${hop.version} compile org.apache.hop hop-engine ${hop.version} compile org.apache.hop hop-ui-swt ${hop.version} compile org.apache.hop hop-assemblies-plugins-dist ${hop.version} zip * * compile org.project.hop assemblies-transform-sample ${project.version} zip * * compile org.project.hop assemblies-action-sample ${project.version} zip * * compile When compiling you will notice a plugins directory is added to the debug location, this contains all plugins distributed by the Apache Hop team, the assemblies for the sample transform and action follow the same logic to make sure they are copied to the correct location too, this allows the Hop plugin loader to find and load all the plugins for the GUI.","title":"Creating a remote plugin","component":"dev-manual","version":"2.7.0","name":"start-your-own-plugin","url":"/dev-manual/latest/start-your-own-plugin.html","titles":[{"text":"Getting started","hash":"_getting_started","id":1},{"text":"Project structure","hash":"_project_structure","id":2},{"text":"Debugging","hash":"_debugging","id":3}]},"535":{"id":535,"text":"When adding or modifying SVG files in the Apache Hop project we kindly ask developers to keep the concerns below in mind. We often find files in the codebase saved by Inkscape or other vector graphics tools that are not saved as \"Plain SVG\" or \"SVG\" file but as \"Inkscape SVG\" and so on. This causes a lot of extra information to be saved into the SVG files. Often the size of the small icons is easily doubled in size. Make sure that if you’re downloading a file from the Internet somewhere that the file has a license which is compatible with the Apache Public License v2.0. Since there are a lot of licenses out there so be very careful. Check with the other devs and on this page to make sure an SVG file can be included in the project. If you want to re-color or create icons that fit the Hop look & feel, please refer to Hop Branding guide for some guidance.","title":"SVG Files","component":"dev-manual","version":"2.7.0","name":"svg-files","url":"/dev-manual/latest/svg-files.html","titles":[{"text":"Plain SVG files please","hash":"_plain_svg_files_please","id":1},{"text":"Copyright","hash":"_copyright","id":2},{"text":"Colors scheme","hash":"_colors_scheme","id":3}]},"536":{"id":536,"text":"This guide can be used to upgrade your plugins to work with Hop 2.x Releases. Hop 2.x will contain breaking API changes to further cleanup the backend and improve the codebase for further development, this document will change a general overview on what has been changed and what you should do to upgrade your external plugins. If you need detailed information or support on upgrading your plugin you can contact the developers using our Dev mailing list. This release will be used to update some naming conventions that may inpact your development We are renaming boolean getters and setters to the isBoolean or hasBoolean naming convention https://github.com/apache/hop/pull/1291 The package name org.apache.hop.pipeline.transform.errorhandling did not cover the actual content of the package, therefore it has been renamed to org.apache.hop.pipeline.transform.stream If you use the errorhandling package in your plugin you will have to rename it to stream in order for it to be found in the next release. https://github.com/apache/hop/pull/1289 The interface ITransform and ITransformMeta are no longer generic. Only the BaseTransform and BaseTransformMeta implementation classes are generic. The getTransform and getTransformData methods of the BaseTransformMeta class are replaced by methods that use the generic parameters. Attention to the order of the parameterized classes is important, add additional parameters at the end:: Transform TransformMeta https://github.com/apache/hop/pull/1078","title":"Breaking changes to the API","component":"dev-manual","version":"2.7.0","name":"upgrading-to-20","url":"/dev-manual/latest/upgrading-to-20.html","titles":[{"text":"HOP-1605: Boolean naming convention","hash":"_hop_1605_boolean_naming_convention","id":1},{"text":"pull requests affecting this","hash":"_pull_requests_affecting_this","id":2},{"text":"HOP-1888: Rename package org.apache.hop.pipeline.transform.errorhandling","hash":"_hop_1888_rename_package_org_apache_hop_pipeline_transform_errorhandling","id":3},{"text":"pull requests affecting this","hash":"_pull_requests_affecting_this_2","id":4},{"text":"HOP-3262: Simplify the APIs of transforms","hash":"_hop_3262_simplify_the_apis_of_transforms","id":5},{"text":"pull requests affecting this","hash":"_pull_requests_affecting_this_3","id":6}]},"537":{"id":537,"text":"After the release manager creates a release as described in Creating a Release the voting process starts. This guide will contain some steps you can take to validate a release candidate and base your vote on. Each member will have his own way to check some parts of a release. There is no general rule on how to check a release, there is only a list on what has to be checked this list can be found in the official release documentation. Start by grabbing the artifacts mentioned in the vote mail. Either use the link provided in the mail or grab them here. In these examples a folder to check everything in was created in /tmp and the artifacts are already in place. mkdir /tmp/release_check cd /tmp/release_check First check would be to see if the keys and hashes are in order # check the sha512 sha512sum -c apache-hop-X.XX-src.tar.gz.sha512 sha512sum -c apache-hop-client-X.XX.zip.sha512 # should echo the artifact name and OK # check the gpg signature gpg --verify apache-hop-X.XX-src.tar.gz.asc gpg --verify apache-hop-client-X.XX.zip.asc # if it prints out gpg: Can't check signature: No public key fetch the key from public keyserver # 1. Check if the keyid matches a known key in the KEYS file https://dist.apache.org/repos/dist/dev/hop/KEYS # 2. grab the key from the public keyserver found in the release mail gpg --keyserver --receive-keys # verify the package again gpg --verify apache-hop-X.XX-src.tar.gz.asc gpg --verify apache-hop-client-X.XX.zip.asc # output should be: # gpg: Good signature from \"Owner Name \" [ultimate] If these steps pass we can start checking the content of the release. First step would be to download the matching source code from github. # replace branch with the branch name mentioned in the release mail git clone --depth 1 --branch X.XX-rcX https://github.com/apache/hop.git source_version # check if the git commit matches the commit mentioned in the release mail cd source_version git rev-parse --short HEAD # remove the .git folder rm -rf .git cd .. final step is to see if the content of the source repository matches the content of the downloaded archive. # unpack the downloaded source code tar -xvf apache-hop-X.XX-src.tar.gz # do a diff to see if they match diff -qr source_version apache-hop-X.XX # this should show no output indicating that all files match # the folder containing the source code can now be removed rm -rf source_version Check if the unpacked archive contains following files and if they are correct LICENSE check if mentioned licenses are available in the licenses folder NOTICE README check for build instructions Validate if all files contain the correct headers cd apache-hop-X.XX mvn apache-rat:check -debug Now build and test the released code # run maven clean install (you can add -T 4 to build multi threaded) mvn clean install # switch to the finished artifact, extract and test cd assemblies/client/target unzip hop-client-*.zip cd hop ./hop-gui.sh You can also check for unwanted binary files on the checked out tag (note: this requires the .git folder to still be present) git ls-files -z | xargs -0 file -b | sort | uniq -c","title":"Checking a Release","component":"dev-manual","version":"2.7.0","name":"checking-a-release","url":"/dev-manual/latest/apache-release/checking-a-release.html","titles":[{"text":"Possible checks that can be followed (Linux)","hash":"_possible_checks_that_can_be_followed_linux","id":1},{"text":"Extra checks","hash":"_extra_checks","id":2}]},"538":{"id":538,"text":"This document includes the steps needed to be taken by the release manager to create a successful release candidate. first step is to create a new release branch. The branch must follow following naming pattern releaseX.XX where X.XX is the release version number. In this example upstream is the apache/hop github repository git branch releaseX.XX upstream/master git checkout releaseX.XX git push upstream releaseX.XX:releaseX.XX mvn versions:set -DnewVersion=X.XX -DgenerateBackupPoms=false check the source code and search for X.XX-SNAPSHOT and replace it by X.XX Update following files and set the correct documentation version and name docs/hop-user-manual/antora.yml docs/hop-tech-manual/antora.yml docs/hop-dev-manual/antora.yml Remove the prerelease and display_version attributes Next up checking in the changes and adding a release tag. git add . git commit -m 'Create release version x.xx' git push upstream releaseX.XX:releaseX.XX git tag -a X.XX-rcX git push upstream tag X.XX-rcX start numbering the rc with 1 (rc1) Checkout the tag to a clean folder to avoid files that are ignored by git and remove the git folder. Next up is creating the tar.gz file git clone --depth 1 --branch X.XX-rcX https://github.com/apache/hop.git apache-hop-X.XX rm -rf apache-hop-X.XX/.git tar -czvf apache-hop-X.XX-src.tar.gz apache-hop-X.XX This part assumes you already have created and registered keys to sign the artifacts, for more information on creating and adding your keys see here gpg --armor --default-key username@apache.org --output apache-hop-X.XX-src.tar.gz.asc --detach-sig apache-hop-X.XX-src.tar.gz sha512sum apache-hop-X.XX-src.tar.gz > apache-hop-X.XX-src.tar.gz.sha512 # Validate gpg --verify apache-hop-X.XX-src.tar.gz.asc sha512sum -c apache-hop-X.XX-src.tar.gz.sha512 The client included in the release has to be build using the source code in the release. Use the source you just prepared to generate the client. # Copy source to temp build location cd apache-hop-X.XX/ # Run Build mvn -T 4 clean install -DskipTests=true # Copy client back (and rename) cp assemblies/client/target/hop-client-X.XX.zip ../apache-hop-client-X.XX.zip # Go back to root of your working dir cd .. As we now added a new binary file we also need to sign and create a sha512 for it. # Create keyfile and sha512 gpg --armor --default-key username@apache.org --output apache-hop-client-X.XX.zip.asc --detach-sig apache-hop-client-X.XX.zip sha512sum apache-hop-client-X.XX.zip > apache-hop-client-X.XX.zip.sha512 # Validate gpg --verify apache-hop-client-X.XX.zip.asc sha512sum -c apache-hop-client-X.XX.zip.sha512 When changes have been made to the helm chart a new release of this artifact is also needed. This assumes helm has been installed. # Copy source to temp build location cd apache-hop-X.XX/helm # Run helm package helm package hop # Copy client back (and rename) cp hop-X.XX.tgz ../../hop-X.XX.tgz # Go back to root of your working dir cd ../.. As we now added a new binary file we also need to sign and create a sha512 for it. # Create keyfile and sha512 gpg --armor --default-key username@apache.org --output hop-X.XX.tgz.asc --detach-sig hop-X.XX.tgz sha512sum hop-X.XX.tgz > hop-X.XX.tgz.sha512 # Validate gpg --verify hop-X.XX.tgz.asc sha512sum -c hop-X.XX.tgz.sha512 First step is to check out the SVN directory, and create a new directory svn co https://dist.apache.org/repos/dist/dev/hop hop_release cd hop_release svn mkdir apache-hop-x.xx-rcx Now copy over the following files in this new directory apache-hop-X.XX-src.tar.gz.sha512 apache-hop-X.XX-src.tar.gz.asc apache-hop-X.XX-src.tar.gz apache-hop-client-X.XX.zip.sha512 apache-hop-client-X.XX.zip.asc apache-hop-client-X.XX.zip Add and commit the files to svn cd apache-hop-x.xx-rcx svn add * svn status svn commit -m 'Add release files for Apache hop X.XX-rcX' Check if the files are uploaded here Mail Template Subject: [VOTE] Release Apache Hop X.XX-rcX TO: dev@hop.apache.org Hi All, Build instructions can be found in the README included. The tag to be voted on is X.XX-rcX (commit ): The release files, including signatures, digests, etc. can be found at: https://dist.apache.org/repos/dist/dev/hop/apache-hop-X.XX-rcX/ The SHA512 Checksum for these artifacts is: Release artifacts are signed with the following key: For more information about the contents of this release, see: Please vote on releasing this package as Apache Hop X.XX! The vote is open for 72 hours and passes if a majority of at least 3 +1 PMC votes are cast. [ ] +1 Release this package as Apache Hop X.XX [ ] +0 No opinion [ ] -1 Do not release this package because ... Best Regards, Subject: [RESULT] [VOTE] Release Apache Hop X.XX-rcX TO: dev@hop.apache.org Hello Team, The vote to release Apache Hop X.XX - RCX has passed/failed. +1 (binding): +1 (non-binding) +0 -1 (binding) -1 (non-binding) Thank you for reviewing this release candidate. Cheers, To generate and publish a key follow these steps, it is recommended to use your apache email as key alias. gpg --gen-key gpg -k @apache.org # get the ID for your key gpg --send-keys --keyserver php.mit.edu gpg --send-keys --keyserver keyserver.ubuntu.com Next step is to add your key to the key file in the Apache SVN repository. svn co https://dist.apache.org/repos/dist/dev/hop hop_release cd hop_release gpg --list-sigs >> KEYS gpg --armor --export >> KEYS svn commit -m \"added new public key to KEYS file\"","title":"Creating a release","component":"dev-manual","version":"2.7.0","name":"creating-a-release","url":"/dev-manual/latest/apache-release/creating-a-release.html","titles":[{"text":"Creating a release branch","hash":"_creating_a_release_branch","id":1},{"text":"update the version of the poms","hash":"_update_the_version_of_the_poms","id":2},{"text":"check for missing replaced poms","hash":"_check_for_missing_replaced_poms","id":3},{"text":"correctly set the documentation version","hash":"_correctly_set_the_documentation_version","id":4},{"text":"commit the changed version and add tag","hash":"_commit_the_changed_version_and_add_tag","id":5},{"text":"Creating the release artifacts","hash":"_creating_the_release_artifacts","id":6},{"text":"Sign the artifacts","hash":"_sign_the_artifacts","id":7},{"text":"Creating the client","hash":"_creating_the_client","id":8},{"text":"Creating the Helm chart (if needed)","hash":"_creating_the_helm_chart_if_needed","id":9},{"text":"Staging the files","hash":"_staging_the_files","id":10},{"text":"Send mail to dev list to announce new release candidate","hash":"_send_mail_to_dev_list_to_announce_new_release_candidate","id":11},{"text":"Send a result mail to the dev mailing list","hash":"_send_a_result_mail_to_the_dev_mailing_list","id":12},{"text":"Creating a key","hash":"_creating_a_key","id":13}]},"539":{"id":539,"text":"Creating a Release Checking a Release","title":"Release process","component":"dev-manual","version":"2.7.0","name":"index","url":"/dev-manual/latest/apache-release/index.html","titles":[]},"540":{"id":540,"text":"After the voting process has ended and the vote passed, following steps need to be taken to promote and create all release artifacts. The first step is to move the source code from the staging to the release folder in SVN, as the release candidate has been approved it will be renamed to the official release artifact. Checkout or update your svn repository pointing to the staging area # Checkout svn co https://dist.apache.org/repos/dist/dev/hop hop_release # Update svn update Checkout the release area svn co https://dist.apache.org/repos/dist/release/hop/ hop_public_release svn move the files from the staging area to the release area cd hop_public_release svn mkdir X.XX cd X.XX svn mv ~/svn/hop_release/apache-hop-X.XX-rcX/* . svn commit -m 'Move release files for Apache hop 1.2.0-rc1' To create the docker images you can use the build used to create the client, go to the folder with the code and do following steps first take a copy of the source code release and build the software (could be that you still have the build from the creating a release steps) unzip ./assemblies/client/target/hop-client-*.zip -d ./assemblies/client/target/ unzip ./assemblies/web/target/hop.war -d ./assemblies/web/target/webapp unzip ./assemblies/plugins/dist/target/hop-assemblies-*.zip -d ./assemblies/plugins/dist/target/ # Create image (make sure to add correct version) docker buildx build --platform linux/amd64,linux/arm64 . -f docker/Dockerfile -t docker.io/apache/hop:X.XX -t docker.io/apache/hop:latest --push # Create and push Hop Web docker buildx build --platform linux/amd64,linux/arm64 . -f docker/Dockerfile.web -t docker.io/apache/hop-web:X.XX -t docker.io/apache/hop-web:latest --push # Create and push Dataflow template # Create hop-fatjar.jar ./assemblies/client/target/hop/hop-conf.sh --generate-fat-jar=../hop-fatjar.jar # Create image docker buildx build --platform linux/amd64,linux/arm64 . -f docker/Dockerfile.dataflowTemplate -t docker.io/apache/hop-dataflow-template:X.XX -t docker.io/apache/hop-dataflow-template:latest --push docker buildx build --platform linux/amd64,linux/arm64 . -f docker/Dockerfile.web-fatjar -t docker.io/apache/hop-web:X.XX-beam -t docker.io/apache/hop-web:latest-beam --push edit following file and add a new release hop-website/content/download/index.adoc Update following file to add the release branch to the documentation hop-website/site.yaml Update following file to redirect the release to the latest version on the website hop-website/.htaccess push all changes to the master branch","title":"Promoting a release","component":"dev-manual","version":"2.7.0","name":"promoting-a-release","url":"/dev-manual/latest/apache-release/promoting-a-release.html","titles":[{"text":"Renaming and moving the source code","hash":"_renaming_and_moving_the_source_code","id":1},{"text":"Creating Dockerhub Artifacts","hash":"_creating_dockerhub_artifacts","id":2},{"text":"Update the website","hash":"_update_the_website","id":3}]},"541":{"id":541,"text":"See https://www.eclipse.org/forums/index.php/t/805303/ RAP is multi user framework by its nature. Every user session is associated with a display. In RAP, Display#getDefault() will not create a new display when it’s called from non-UI thread - read Display#getDefault JavaDoc. When you execute a code in a background thread, RAP needs to know for which UI session (display) it belongs. That’s why you have to provide the correct UISession/display from outside. Display.getDefault() cannot be used in non-UI thread with RAP/RWT. See https://bugs.eclipse.org/bugs/show_bug.cgi?id=569046 A menuitem with SWT.CASCADE without a submenu looks and behaves differently from SWT. SWT: The menuitem does not have a right arrow on the right hand of the menu text. The menuitem is clickable. RWT: The menuitem has a right arrow. The menuitem is NOT clickable. This method is not implemented in RAP/RWT. Hop Web now has 2 themes implemented: \"light\" and \"dark\". They are selected with the system environment variable HOP_WEB_THEME which you can pass to a docker container using --env HOP_WEB_THEME=dark. The default theme is light To change a theme you need to look in 2 different locations: The colors of the various widgets, windows, the icons used and so on are defined in css files: For the dark theme: rap/src/main/resources/org/apache/hop/ui/hopgui/dark-mode.css For the light theme: rap/src/main/resources/org/apache/hop/ui/hopgui/light-mode.css The Eclipse RAP theming reference is found here. When icons are moved, lassoed and so on we have a bit of JavaScript taking care of those operations. You can find the relevant files handling that over here: For the dark theme: rap/src/main/resources/org/apache/hop/ui/hopgui/canvas-dark.js For the light theme: rap/src/main/resources/org/apache/hop/ui/hopgui/canvas-light.js If you have built the project using mvn clean install you can build a local hop-web docker container to test with the following script: docker/create_hop_web_container.sh You can also do this incrementally for the following modules: core engine ui rap If you rebuild any of these modules after changes you can simply run docker/create_hop_web_container.sh and this script it will incorporate your changes in the container. To then run it simply execute: docker run -p 8080:8080 -e HOP_WEB_THEME=dark hop-web The main configuration of Hop is done through a single configuration file called hop-config.json and it is found in folder ${HOP_CONFIG_FOLDER} It is possible to set pass this standard Hop environment variable HOP_CONFIG_FOLDER to the docker container. You can point it to a mounted volume for example: docker run -p 8080:8080 -v /host/path/to/config:/config -e HOP_CONFIG_FOLDER=/config hop-web In the same way you can set the standard variable HOP_AUDIT_FOLDER to store GUI auditing and logging information.","title":"Developer Guide","component":"dev-manual","version":"2.7.0","name":"developer-guide","url":"/dev-manual/latest/hopweb/developer-guide.html","titles":[{"text":"Methods to use","hash":"_methods_to_use","id":1},{"text":"EnvironmentUtils.getInstance().isWeb() to see if the client is a web browser instead of a desktop app.","hash":"_environmentutils_getinstance_isweb_to_see_if_the_client_is_a_web_browser_instead_of_a_desktop_app","id":2},{"text":"Methods to avoid","hash":"_methods_to_avoid","id":3},{"text":"Display.getDefault() is not allowed","hash":"_display_getdefault_is_not_allowed","id":4},{"text":"SWT.CASCADE without submenu does not work","hash":"_swt_cascade_without_submenu_does_not_work","id":5},{"text":"CTabFolder.setSimple() is not allowed","hash":"_ctabfolder_setsimple_is_not_allowed","id":6},{"text":"Themes","hash":"_themes","id":7},{"text":"CSS","hash":"_css","id":8},{"text":"JS","hash":"_js","id":9},{"text":"Building the Hop Web docker container","hash":"_building_the_hop_web_docker_container","id":10},{"text":"Configuring Hop Web","hash":"_configuring_hop_web","id":11}]},"542":{"id":542,"text":"Due to the differences between RWT and SWT, there are some anti-patterns that should be avoided when developing webSpoon and (webSpoon-) compatible plugins. The singleton pattern is a design pattern where only one instance of a class is created. This pattern can be seen here and there in Spoon’s source code. An example is GUIResource, which mainly manages colors, fonts, and images. The following code snippet (excerpt of here) illustrates how it is ensured that GUIResource can only be instantiated once. The resources (colors, fonts, and images) are accessed through GUIResource.getInstance(). public class GUIResource { private static GUIResource guiResource; // Making the constructor private prevents instantiation from outside private GUIResource( Display display ) { ... } public static final GUIResource getInstance() { if ( guiResource != null ) { return guiResource; } guiResource = new GUIResource( PropsUI.getDisplay() ); return guiResource; } } Spoon is another example that takes the singleton pattern (not strictly as it can be instantiated more than once). If you look at the following code snippet (excerpt of here), you would notice that Display is a member field of Spoon. This means that Spoon can only manages a single instance of Display. The singleton pattern for Spoon class is nothing wrong for Spoon that servers only a single user, but makes troubles for webSpoon where Display is instantiated for each session. public class Spoon extends ApplicationWindow implements AddUndoPositionInterface, ..., PartitionSchemasProvider { private static Spoon staticSpoon; private Display display; public static Spoon getInstance() { return staticSpoon; } } Fortunately, RAP/RWT provides SingletonUtil as a remedy. Spoon.getInstance() in the following code will return an instance of Spoon that is unique to a session. As a result, each instance of Display can be referenced by their corresponding instance of Spoon. public class Spoon { private Display display; public static Spoon getInstance() { return SingletonUtil.getSessionInstance( Spoon.class ); } } The rule-of-thumb is that such a session-unique instance should accessed only by the corresponding session and not by any other. Let’s look at examples below how this rule can be violated. The code below violates the rule, but how? public class RepositoryOpenSaveDialog extends ThinDialog { private static final Image LOGO = GUIResource.getInstance().getImageLogoSmall(); } Let us assume that GUIResource has already been adapted to RAP/RWT and GUIResource.getInstance() returns a session-unique instance of GUIResource. An instance of Image returned by GUIResource.getInstance().getImageLogoSmall() also becomes session-unique. When RepositoryOpenSaveDialog is instantiated, say in session A, LOGO is instantiated and assigned with an instance of Image unique to session A. By the static modifier, LOGO keeps the reference to that particular instance ever after and returns that instance when accessed in any later sessions. Sharing session-unique instance of Image is not necessarily harmful especially when the image is inherently common to all sessions (e.g., the kettle small logo). However, issues like #92 happen when the session A gets terminated and the instance of Image is disposed, but accessed by another session. To resolve these issues, remove the static modifier as follows: public class RepositoryOpenSaveDialog extends ThinDialog { private final Image LOGO = GUIResource.getInstance().getImageLogoSmall(); } PDI plugins, even in webSpoon, have application scope instead of session scope and only one instance is instantiated for each one of these plugins (= effectively singleton). Let’s take a look at a modified snippet of HadoopClusterViewTreeExtension. public class HadoopClusterViewTreeExtension implements ExtensionPointInterface { private Spoon spoon = null; private Image hadoopClusterImage = null; public HadoopClusterViewTreeExtension() { spoon = Spoon.getInstance(); hadoopClusterImage = getHadoopClusterImage( spoon.getDisplay() ); } private void refreshNamedClusterSubtree( SelectionTreeExtension selectionTreeExtension ) { for ( NamedCluster namedCluster : namedClusters ) { createTreeItem( tiNcTitle, namedCluster.getName(), hadoopClusterImage ); } } } The constructor assigns a session-unique Spoon and (effectively) session-unique Image to its member fields. These member fields could be technically re-assigned but never in Spoon. In webSpoon, this code causes issues such as #23 and a non-reported issue resolved by adbb00a. To resolve the issues, stop caching session-unique instances in the member fields and retrieve them on-demand. The code below is the corrected one. public class HadoopClusterViewTreeExtension implements ExtensionPointInterface { // private Spoon spoon = null; // private Image hadoopClusterImage = null; public HadoopClusterViewTreeExtension() { // spoon = Spoon.getInstance(); // hadoopClusterImage = getHadoopClusterImage( spoon.getDisplay() ); } private void refreshNamedClusterSubtree( SelectionTreeExtension selectionTreeExtension ) { for ( NamedCluster namedCluster : namedClusters ) { createTreeItem( tiNcTitle, namedCluster.getName(), getHadoopClusterImage( Spoon.getInstance().getDisplay() ) ) ); } } } SWT can paint on any widgets or image, while RAP/RWT can only paint on Canvas widget. SWT supports the following codes: Image image = new Image( device, width, height ); GC gc = new GC( image ); gc.drawRectangle( 0, 0, 10, 20 ); but RWT does not. You can see an example of how this limitation has been overcame in pdi-dataservice-server-plugin.","title":"Developer Antipatterns","component":"dev-manual","version":"2.7.0","name":"hopweb-antipatterns","url":"/dev-manual/latest/hopweb/hopweb-antipatterns.html","titles":[{"text":"Avoid sharing session-unique instances among sessions","hash":"_avoid_sharing_session_unique_instances_among_sessions","id":1},{"text":"Example: use of the static modifier for session-unique instances","hash":"_example_use_of_the_static_modifier_for_session_unique_instances","id":2},{"text":"Example: caching session-unique instances in plugins","hash":"_example_caching_session_unique_instances_in_plugins","id":3},{"text":"Avoid use of unimplemented SWT APIs","hash":"_avoid_use_of_unimplemented_swt_apis","id":4},{"text":"Example: drawing on an Image","hash":"_example_drawing_on_an_image","id":5}]},"543":{"id":543,"text":"Hop Web is available as a Docker container image from Docker Hub. Check the user manual for Hop Web for more information. Hop currently doesn’t offer any standalone Hop Web builds. Running your own Hop Web environment is straightforward but requires you to build Hop. Follow the development environment setup guide to get the Hop source code and build Hop. The steps to set up the default Docker image are included in a helper script docker/create_hop_web_container.sh in the Hop code base. This should get you started to make modifications or create your own version entirely. Additional info in Building the Hop Web Docker container We’ll use Apache Tomcat in this example. If you use another application server, the process should be similar. Hop 2.x is built with Java 11, so you’ll need to download the latest Tomcat 9. Copy or extract the following files from your Hop build, where $CATALINA_HOME is your Tomcat installation folder. #unzip files for docker image unzip assemblies/web/target/hop.war -d $CATALINA_HOME/webapps/hop/ unzip assemblies/plugins/dist/target/hop-assemblies-*.zip -d $CATALINA_HOME/ Configure Tomcat to run Hop by adding the information below to $CATALINA_HOME/bin/startup.sh, anywhere before the last line (exec \"$PRGDIR\"/\"$EXECUTABLE\" start \"$@\") export HOP_AES_ENCODER_KEY= # specify where Hop should store audit information export HOP_AUDIT_FOLDER=\"${CATALINA_HOME}/webapps/hop/audit\" # specify where Hop should manage configuration metadata (e.g. projects and environments information). export HOP_CONFIG_FOLDER=\"${CATALINA_HOME}/webapps/hop/config\" # specify the hop log level export HOP_LOG_LEVEL=\"Basic\" # any additional JRE settings you want to pass on #export HOP_OPTIONS= # default Hop password encoder plugin export HOP_PASSWORD_ENCODER_PLUGIN=\"Hop\" # point Hop to the plugins folder export HOP_PLUGIN_BASE_FOLDERS=\"${CATALINA_HOME}/plugins\" # path to jdbc drivers export HOP_SHARED_JDBC_FOLDERS= # the theme to use (dark or light) export HOP_WEB_THEME=\"light\" # Set TOMCAT start variables export CATALINA_OPTS='${HOP_OPTIONS} -DHOP_AES_ENCODER_KEY=\"${HOP_AES_ENCODER_KEY}\" -DHOP_AUDIT_FOLDER=\"${HOP_AUDIT_FOLDER}\" -DHOP_CONFIG_FOLDER=\"${HOP_CONFIG_FOLDER}\" -DHOP_LOG_LEVEL=\"${HOP_LOG_LEVEL}\" -DHOP_PASSWORD_ENCODER_PLUGIN=\"${HOP_PASSWORD_ENCODER_PLUGIN}\" -DHOP_PLUGIN_BASE_FOLDERS=\"${HOP_PLUGIN_BASE_FOLDERS}\" -DHOP_SHARED_JDBC_FOLDERS=\"${HOP_SHARED_JDBC_FOLDERS}\" -DHOP_WEB_THEME=\"${HOP_WEB_THEME}\"' If you want to run Hop Web with the default and samples projects, make sure the project root path in hop-config.json is set to `${HOP_CONFIG_FOLDER}. On Linux or Mac, use the following sed command to fix this in one line: sed -i 's/config\\/projects/${HOP_CONFIG_FOLDER}\\/projects/g' webapps/hop/config/hop-config.json On Windows, modify hop-config.json to make sure projectsConf looks like the one below: \"projectsConfig\" : { \"enabled\" : true, \"projectMandatory\" : true, \"defaultProject\" : \"default\", \"standardParentProject\" : \"default\", \"projectConfigurations\" : [ { \"projectName\" : \"default\", \"projectHome\" : \"${HOP_CONFIG_FOLDER}/projects/default\", \"configFilename\" : \"project-config.json\" }, { \"projectName\" : \"samples\", \"projectHome\" : \"${HOP_CONFIG_FOLDER}/projects/samples\", \"configFilename\" : \"project-config.json\" } ] } Run bin/startup.sh (Linux/Mac) or bin/startup.bat (Windows). Hop Web should only take a couple of seconds to start. Access through http://localhost:8080/hop/ui to test. Developer Guide Hop Web Antipatterns","title":"Hop Web Development Guide","component":"dev-manual","version":"2.7.0","name":"index","url":"/dev-manual/latest/hopweb/index.html","titles":[{"text":"Building or customizing Hop Web","hash":"_building_or_customizing_hop_web","id":1},{"text":"Build Hop","hash":"_build_hop","id":2},{"text":"Tomcat Configuration","hash":"_tomcat_configuration","id":3},{"text":"Copy files","hash":"_copy_files","id":4},{"text":"Modify startup script","hash":"_modify_startup_script","id":5},{"text":"Start Tomcat","hash":"_start_tomcat","id":6},{"text":"Additional Guides","hash":"_additional_guides","id":7}]},"544":{"id":544,"text":"Table of Contents Initializing Plugin folders Hop Metadata Providers Variables Pipelines Loading pipeline metadata from a file Loading pipeline metadata from an input stream Construct pipeline metadata with the Hop API Pipeline execution Injecting data into a pipeline Retrieving rows from a pipeline Workflows Loading workflow metadata from a file Loading workflow metadata from an input stream Construct workflow metadata with the Hop API Workflow execution Logging Logging Registry Log lines First, we need to initialize the Hop API. This means we load configuration details, search for and load plugins and so on. You can do this with: HopEnvironment.init(); If you need to load plugins from different folders you can set system property HOP_PLUGIN_BASE_FOLDERS. The default value is plugins, the relative path to the installation folder plugins folder. You can add your own plugin folders with commas (,) separating the values. Shared metadata in Hop is handled by a HopMetadataProvider. When using the Hop GUI you store it in a project in the metadata/ folder. In that case you can point to such a folder with class JsonMetadataProvider. Note that you can serialize such a metadata collection into a single JSON string using SerializableMetadataProvider. This can be used to send metadata to remote servers and locations. When you have a provider you can ask it to give you a serializer with which you can add and retrieve all sorts of metadata objects. If you want to work with variables in your pipelines and workflows it makes sense to create a top level IVariables object. The easiest way to do this is with: IVariables variables = Variables.getADefaultVariableSpace(); This method also takes into account variables which are configured in hop-config.json (if that file can be found); You can get the pipeline metadata from a .hpl XML file using: PipelineMeta pipelineMeta = new PipelineMeta( \"path-to-your-filename.hpl\", // The filename metadataProvider, // See above true, // set internal variables variables // see above ); PipelineMeta pipelineMeta = new PipelineMeta( inputStream, // The stream to load from metadataProvider, // See above true, // set internal variables variables // see above ); Obviously you can start with an empty pipeline and add the transforms, hops you like: PipelineMeta pipelineMeta = new PipelineMeta(); // Generate 1M empty rows // RowGeneratorMeta rowGeneratorMeta = new RowGeneratorMeta(); rowGeneratorMeta.setRowLimit(\"1000000\"); TransformMeta rowGenerator = new TransformMeta(\"1M\", rowGeneratorMeta); rowGenerator.setLocation(50, 50); pipelineMeta.addTransform(rowGenerator); // Just a dummy placeholder for testing // DummyMeta dummyMeta = new DummyMeta(); TransformMeta dummy = new TransformMeta(\"Output\", dummyMeta); dummy.setLocation(250, 50); pipelineMeta.addTransform(dummy); // Add a hop between both // PipelineHopMeta generatorDummyHop = new PipelineHopMeta(rowGenerator, dummy); pipelineMeta.addPipelineHop(generatorDummyHop); The way a pipeline is executed depends on the run configuration you specify. To make it easy to get the engine we created a factory for you: IPipelineEngine pipelineEngine = PipelineEngineFactory.createPipelineEngine( variables, // see above \"local\", // The name of the run configuration defined in the metadata metadataProvider, // The metadata provider to resolve the run configuration details pipelineMeta // The pipeline metadata ); // We can now simply execute this engine... // pipelineEngine.execute(); // This execution runs in the background but we can wait for it to finish: // pipelineEngine.waitUnitlFinished(); // When it's done we can evalute the results: // Result result = pipelineEngine.getResult(); You can only inject data into a LocalPipelineEngine. Do so using the addRowProducer. Call this method after your run prepareExecution() so that the row producer can be attached to the correct transform copy. After starting the execution of the pipeline you can then use the RowProducer to put rows into the pipeline using putRow(). Make sure to call setFinished() when you’re done feeding rows into the pipeline. This again is only supported on the local pipeline engine LocalPipelineEngine. After prepareExecution() you can add row listeners to the various transforms: ITransform transform = localPipeline.getTransform(\"transform-name\", 0); transform.addRowListener(new RowAdapter() { void rowWrittenEvent( IRowMeta rowMeta, Object[] row ) throws HopTransformException { // A row was written during execution } }); You can get the workflow metadata from a .hwf XML file using: WorkflowMeta workflowMeta = new WorkflowMeta( variables, // see above \"path-to-your-filename.hwf\", // The filename metadataProvider // See above ); WorkflowMeta workflowMeta = new WorkflowMeta( inputStream, // the inputstream to read the metadata from metadataProvider, // See above variables // see above ); You typically start with an empty workflow and then add the actions and hops you want: WorkflowMeta workflowMeta = new WorkflowMeta(); // Add the Start action // ActionStart actionStart = new ActionStart(\"Start\"); ActionMeta startMeta = new ActionMeta(actionStart); startMeta.setLocation(50, 50); workflowMeta.addAction(startMeta); // Just a dummy placeholder for testing // ActionDummy actionDummy = new ActionDummy(\"Dummy\"); ActionMeta dummyMeta = new ActionMeta(dummyMeta); dummyMeta.setLocation(250, 50); workflowMeta.addAction(dummyMeta); // Add a hop between both // WorkflowHopMeta startDummyHop = new WorkflowHopMeta(startMeta, dummyMeta); workflowMeta.addWorkflowHop(generatorDummyHop); Workflow engines are also plugins. Which plugin is used to execute your workflow metadata is specified in a Workflow Run Configuration. To make it easy to get the engine we created a factory for you: IWorkflowEngine workflowEngine = WorkflowEngineFactory.createWorkflowEngine( variables, // see above \"local\", // The name of the run configuration defined in the metadata metadataProvider, // The metadata provider to resolve the run configuration details workflowMeta, // The workflow metadata parentLogging // The parent logging object ); // We can now execute this engine... // This execution does not run in the background. // When you get the result, the execution has completed. // Result result = workflowEngine.startExecution(); Everything that executes something worth our time is registering its own Log Channel in the hop LoggingRegistry. Every log channel gets its own unique ID with which we can see where a log line came from. You can access the Logging Registry using LoggingRegistry.getInstance(). It contains the execution hierarchy of Hop work. For example if you have the log channel ID of a parent you can see all its children with getLogChannelChildren() which will give you all the IDs of the child log channels. What we get is in effect the execution lineage. Whenever a log channel logs something using logBasic() or other logging variants, that text along with some basic information is kept in the Hop Log Store. You can get that one with HopLogStore.getInstance(). The logging lines are kept as logging events or class HopLoggingEvent in a logging buffer LoggingBuffer which you can access using HopLogStore.getInstance().getAppender(). If you want to grab the logging output of a pipeline, transform, workflow, action, …​ you need to start with the ID of the log channel associated with that runtime object. Usually you can do getLogChannel() and then get the ID or the shortcut: getLogChannelId(). If you want to get detailed information about every logging event you can ask for a list with: int lastNr = HopLogStore.getLastBufferLineNr(); List events = getLogBufferFromTo( logChannelId, false, 0, lastNr); The details allow you to see which line was an error, what the timestamp was, to which executable it belonged and so on. If you just want to see the flattened logging text you can ask the appender for the information: StringBuffer loggingText = HopLogStore.getAppender().getBuffer(logChannelId);","title":"The Hop SDK","component":"dev-manual","version":"2.7.0","name":"hop-sdk","url":"/dev-manual/latest/sdk/hop-sdk.html","titles":[{"text":"Initializing","hash":"_initializing","id":1},{"text":"Plugin folders","hash":"_plugin_folders","id":2},{"text":"Hop Metadata Providers","hash":"_hop_metadata_providers","id":3},{"text":"Variables","hash":"_variables","id":4},{"text":"Pipelines","hash":"_pipelines","id":5},{"text":"Loading pipeline metadata from a file","hash":"_loading_pipeline_metadata_from_a_file","id":6},{"text":"Loading pipeline metadata from an input stream","hash":"_loading_pipeline_metadata_from_an_input_stream","id":7},{"text":"Construct pipeline metadata with the Hop API","hash":"_construct_pipeline_metadata_with_the_hop_api","id":8},{"text":"Pipeline execution","hash":"_pipeline_execution","id":9},{"text":"Injecting data into a pipeline","hash":"_injecting_data_into_a_pipeline","id":10},{"text":"Retrieving rows from a pipeline","hash":"_retrieving_rows_from_a_pipeline","id":11},{"text":"Workflows","hash":"_workflows","id":12},{"text":"Loading workflow metadata from a file","hash":"_loading_workflow_metadata_from_a_file","id":13},{"text":"Loading workflow metadata from an input stream","hash":"_loading_workflow_metadata_from_an_input_stream","id":14},{"text":"Construct workflow metadata with the Hop API","hash":"_construct_workflow_metadata_with_the_hop_api","id":15},{"text":"Workflow execution","hash":"_workflow_execution","id":16},{"text":"Logging","hash":"_logging","id":17},{"text":"Logging Registry","hash":"_logging_registry","id":18},{"text":"Log lines","hash":"_log_lines","id":19}]},"545":{"id":545,"text":"The Hop SDK","title":"Index Page","component":"dev-manual","version":"2.7.0","name":"index","url":"/dev-manual/latest/sdk/index.html","titles":[]},"546":{"id":546,"text":"All files that are shipped with Apache software need to contain the Apache Software Foundation’s header. This also applies to all workflows and pipelines that are shipped as integration tests, samples or in any other form. To spare contributors the pain of manually having to add the ASF license header in workflows and pipeline, Hop Gui supports the HOP_LICENSE_HEADER_FILE project variable. Set this variable in your project and point it to a file containing the ASF Header’s text, e.g. integration-tests/asf-header.txt to let Hop include the ASF header in all of your workflows and pipelines. As with any other piece of code, run mvn apache-rat:check to verify all files contain the correct headers before contributing your test or sample workflows and pipelines.","title":"","component":"dev-manual","version":"2.7.0","name":"hop-license-header-file","url":"/dev-manual/latest/snippets/hop-license-header-file.html","titles":[{"text":"Set the HOP_LICENSE_HEADER_FILE project variable","hash":"_set_the_hop_license_header_file_project_variable","id":1}]}},"components":{},"componentVersions":{"manual/2.8.0":{"displayVersion":"2.8.0 (pre-release)","title":"User manual","version":"2.8.0","name":"manual","prerelease":true,"asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/next/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/next/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/next/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/next/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/next/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/next/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/next/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/next/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/next/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/next/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/next/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/next/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/next/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/next/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/next/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/next/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/next/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/next/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/next/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/next/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/next/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/next/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/next/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/next/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/next/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/next/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/next/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/next/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/next/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/next/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/next/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/next/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/next/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/next/pipeline/beam/beam-samples-spark.html","urlType":"internal"},{"content":"Google Cloud Dataflow","url":"/manual/next/pipeline/beam/beam-samples-dataflow.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/next/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/next/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/next/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/next/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/next/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/next/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/next/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/next/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/next/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/next/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/next/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/next/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/next/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/next/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/next/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/next/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/next/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/next/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/next/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/next/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/next/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/next/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/next/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/next/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/next/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/next/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/next/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/next/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/next/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/next/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/next/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/next/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/next/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/next/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/next/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/next/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/next/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/next/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/next/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/next/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/next/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/next/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/next/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/next/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/next/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/next/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/next/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/next/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/next/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/next/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/next/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/next/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/next/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/next/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/next/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/next/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/next/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/next/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/next/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/next/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/next/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/next/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/next/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Data Validator","url":"/manual/next/pipeline/transforms/validator.html","urlType":"internal"},{"content":"Delay row","url":"/manual/next/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/next/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/next/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/next/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/next/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/next/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/next/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/next/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/next/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/next/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/next/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/next/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/next/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/next/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/next/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/next/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/next/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/next/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/next/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Execution Information","url":"/manual/next/pipeline/transforms/execinfo.html","urlType":"internal"},{"content":"Fake data","url":"/manual/next/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/next/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/next/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/next/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/next/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/next/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/next/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/next/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/next/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/next/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/next/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/next/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/next/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/next/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/next/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/next/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/next/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/next/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Google Analytics Input","url":"/manual/next/pipeline/transforms/google-analytics.html","urlType":"internal"},{"content":"Google Sheets Input","url":"/manual/next/pipeline/transforms/google-sheets-input.html","urlType":"internal"},{"content":"Google Sheets Output","url":"/manual/next/pipeline/transforms/google-sheets-output.html","urlType":"internal"},{"content":"Group By","url":"/manual/next/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/next/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/next/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/next/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/next/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/next/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/next/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/next/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/next/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"JDBC Metadata","url":"/manual/next/pipeline/transforms/jdbcmetadata.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/next/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/next/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/next/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/next/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/next/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/next/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/next/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/next/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/next/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/next/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/next/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/next/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/next/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/next/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/next/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/next/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/next/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/next/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/next/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/next/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/next/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/next/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/next/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/next/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/next/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/next/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/next/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/next/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/next/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/next/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/next/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/next/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/next/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/next/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/next/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"Pipeline Data Probe","url":"/manual/next/pipeline/transforms/pipeline-data-probe.html","urlType":"internal"},{"content":"Pipeline Logging","url":"/manual/next/pipeline/transforms/pipeline-logging.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/next/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/next/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/next/pipeline/transforms/pipeline-executor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/next/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/next/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/next/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/next/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Redshift Bulk Loader","url":"/manual/next/pipeline/transforms/redshift-bulkloader.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/next/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/next/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/next/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/next/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/next/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/next/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/next/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/next/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/next/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/next/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/next/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/next/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/next/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/next/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/next/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/next/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Script","url":"/manual/next/pipeline/transforms/script.html","urlType":"internal"},{"content":"Select Values","url":"/manual/next/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/next/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/next/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/next/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/next/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/next/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/next/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/next/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/next/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/next/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/next/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/next/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/next/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/next/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/next/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/next/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/next/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/next/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/next/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/next/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/next/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/next/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/next/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/next/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/next/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/next/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/next/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/next/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/next/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/next/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/next/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/next/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/next/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/next/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/next/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Vertica Bulk Loader","url":"/manual/next/pipeline/transforms/verticabulkloader.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/next/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/next/pipeline/transforms/workflow-executor.html","urlType":"internal"},{"content":"Workflow Logging","url":"/manual/next/pipeline/transforms/workflow-logging.html","urlType":"internal"},{"content":"Write to log","url":"/manual/next/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/next/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/next/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/next/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/next/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/next/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/next/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/next/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/next/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/next/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/next/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/next/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/next/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/next/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/next/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/next/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/next/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/next/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/next/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/next/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/next/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/next/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/next/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/next/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/next/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/next/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/next/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/next/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/next/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/next/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/next/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/next/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/next/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/next/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/next/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/next/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/next/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/next/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/next/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/next/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/next/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/next/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/next/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/next/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/next/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/next/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/next/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/next/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mails (POP3/IMAP)","url":"/manual/next/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/next/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/next/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/next/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/next/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/next/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/next/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/next/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/next/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/next/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/next/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/next/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/next/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/next/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/next/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/next/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/next/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/next/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/next/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/next/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/next/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/next/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/next/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/next/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/next/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/next/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/next/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/next/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/next/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/next/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/next/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/next/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/next/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/next/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/next/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/next/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/next/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/next/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/next/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/next/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/next/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/next/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/next/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/next/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/next/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/next/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/next/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/next/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/next/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/next/database/databases/derby.html","urlType":"internal"},{"content":"DuckDB","url":"/manual/next/database/databases/duckdb.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/next/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/next/database/databases/as400.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/next/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/next/database/databases/db2.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/next/database/databases/doris.html","urlType":"internal"},{"content":"Exasol","url":"/manual/next/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/next/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/next/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/next/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/next/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/next/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/next/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/next/database/databases/universe.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/next/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/next/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/next/database/databases/ingres.html","urlType":"internal"},{"content":"Interbase","url":"/manual/next/database/databases/interbase.html","urlType":"internal"},{"content":"InterSystems Cache","url":"/manual/next/database/databases/cache.html","urlType":"internal"},{"content":"InterSystems Iris","url":"/manual/next/database/databases/iris.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/next/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/next/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/next/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/next/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/next/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/next/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/next/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/next/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/next/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/next/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/next/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/next/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/next/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/next/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/next/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/next/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/next/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/next/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/next/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/next/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/next/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/next/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/next/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/next/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/next/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/next/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/next/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/next/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/next/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/next/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/next/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/next/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/next/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/next/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/next/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/next/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/next/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/next/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/next/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/next/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/next/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/next/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/next/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/next/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/next/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/next/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/next/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/next/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/next/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/next/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/next/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/next/technology/cassandra/index.html","urlType":"internal"},{"content":"Memgraph","url":"/manual/next/technology/memgraph/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/next/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/next/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/next/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/next/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/next/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/next/hop-server/web-service.html","urlType":"internal"},{"content":"Async Web Service","url":"/manual/next/hop-server/async-web-service.html","urlType":"internal"}]},{"content":"Hop REST Web Application","url":"/manual/next/hop-rest/index.html","urlType":"internal"},{"content":"Hop Tools","url":"/manual/next/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/next/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/next/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/next/hop-tools/hop-gui.html","urlType":"internal"},{"content":"hop-run","url":"/manual/next/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/next/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/next/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/next/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/next/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/next/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/next/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/next/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/next/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/next/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/next/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Logging pipeline data with pipeline log","url":"/manual/next/how-to-guides/logging-pipeline-log.html","urlType":"internal"},{"content":"Logging workflow data with workflow log","url":"/manual/next/how-to-guides/logging-workflow-log.html","urlType":"internal"},{"content":"Loops in Apache Hop","url":"/manual/next/how-to-guides/loops-in-apache-hop.html","urlType":"internal"},{"content":"Parallel execution in workflows","url":"/manual/next/how-to-guides/workflows-parallel-execution.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/next/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]},{"content":"Community Posts","url":"/manual/next/community-blogs/index.html","urlType":"internal"}],"root":true,"order":0}]},"manual/2.7.0":{"displayVersion":"2.7.0","title":"User manual","version":"2.7.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/latest/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/latest/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/latest/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/latest/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/latest/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/latest/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/latest/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/latest/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/latest/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/latest/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/latest/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/latest/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/latest/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/latest/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/latest/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/latest/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/latest/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/latest/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/latest/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/latest/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/latest/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/latest/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/latest/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/latest/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/latest/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/latest/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/latest/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/latest/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/latest/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/latest/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/latest/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/latest/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/latest/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/latest/pipeline/beam/beam-samples-spark.html","urlType":"internal"},{"content":"Google Cloud Dataflow","url":"/manual/latest/pipeline/beam/beam-samples-dataflow.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/latest/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/latest/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/latest/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/latest/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/latest/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/latest/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/latest/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/latest/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/latest/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/latest/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/latest/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/latest/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/latest/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/latest/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/latest/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/latest/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/latest/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/latest/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/latest/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/latest/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/latest/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/latest/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/latest/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/latest/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/latest/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/latest/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/latest/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/latest/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/latest/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/latest/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/latest/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/latest/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/latest/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/latest/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/latest/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/latest/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/latest/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/latest/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/latest/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/latest/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/latest/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/latest/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/latest/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/latest/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/latest/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/latest/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/latest/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/latest/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/latest/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/latest/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/latest/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/latest/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/latest/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/latest/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/latest/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/latest/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/latest/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/latest/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/latest/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/latest/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Data Validator","url":"/manual/latest/pipeline/transforms/validator.html","urlType":"internal"},{"content":"Delay row","url":"/manual/latest/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/latest/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/latest/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/latest/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/latest/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/latest/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/latest/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/latest/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/latest/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/latest/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/latest/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/latest/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/latest/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/latest/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/latest/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/latest/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/latest/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/latest/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/latest/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Execution Information","url":"/manual/latest/pipeline/transforms/execinfo.html","urlType":"internal"},{"content":"Fake data","url":"/manual/latest/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/latest/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/latest/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/latest/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/latest/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/latest/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/latest/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/latest/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/latest/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/latest/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/latest/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/latest/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/latest/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/latest/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/latest/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/latest/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/latest/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/latest/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Google Analytics Input","url":"/manual/latest/pipeline/transforms/google-analytics.html","urlType":"internal"},{"content":"Google Sheets Input","url":"/manual/latest/pipeline/transforms/google-sheets-input.html","urlType":"internal"},{"content":"Google Sheets Output","url":"/manual/latest/pipeline/transforms/google-sheets-output.html","urlType":"internal"},{"content":"Group By","url":"/manual/latest/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/latest/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/latest/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/latest/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/latest/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/latest/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/latest/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/latest/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/latest/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"JDBC Metadata","url":"/manual/latest/pipeline/transforms/jdbcmetadata.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/latest/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/latest/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/latest/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/latest/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/latest/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/latest/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/latest/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/latest/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/latest/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/latest/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/latest/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/latest/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/latest/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/latest/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/latest/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/latest/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/latest/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/latest/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/latest/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/latest/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/latest/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/latest/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/latest/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/latest/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/latest/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/latest/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/latest/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/latest/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/latest/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/latest/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/latest/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/latest/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/latest/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/latest/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/latest/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"Pipeline Data Probe","url":"/manual/latest/pipeline/transforms/pipeline-data-probe.html","urlType":"internal"},{"content":"Pipeline Logging","url":"/manual/latest/pipeline/transforms/pipeline-logging.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/latest/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/latest/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/latest/pipeline/transforms/pipeline-executor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/latest/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/latest/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/latest/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/latest/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Redshift Bulk Loader","url":"/manual/latest/pipeline/transforms/redshift-bulkloader.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/latest/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/latest/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/latest/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/latest/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/latest/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/latest/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/latest/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/latest/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/latest/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/latest/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/latest/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/latest/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/latest/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/latest/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/latest/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/latest/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Script","url":"/manual/latest/pipeline/transforms/script.html","urlType":"internal"},{"content":"Select Values","url":"/manual/latest/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/latest/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/latest/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/latest/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/latest/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/latest/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/latest/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/latest/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/latest/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/latest/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/latest/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/latest/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/latest/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/latest/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/latest/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/latest/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/latest/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/latest/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/latest/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/latest/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/latest/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/latest/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/latest/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/latest/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/latest/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/latest/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/latest/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/latest/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/latest/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/latest/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/latest/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/latest/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/latest/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/latest/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/latest/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Vertica Bulk Loader","url":"/manual/latest/pipeline/transforms/verticabulkloader.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/latest/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/latest/pipeline/transforms/workflow-executor.html","urlType":"internal"},{"content":"Workflow Logging","url":"/manual/latest/pipeline/transforms/workflow-logging.html","urlType":"internal"},{"content":"Write to log","url":"/manual/latest/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/latest/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/latest/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/latest/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/latest/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/latest/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/latest/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/latest/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/latest/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/latest/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/latest/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/latest/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/latest/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/latest/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/latest/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/latest/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/latest/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/latest/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/latest/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/latest/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/latest/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/latest/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/latest/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/latest/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/latest/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/latest/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/latest/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/latest/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/latest/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/latest/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/latest/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/latest/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/latest/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/latest/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/latest/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/latest/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/latest/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/latest/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/latest/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/latest/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/latest/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/latest/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/latest/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/latest/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/latest/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/latest/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/latest/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/latest/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mails (POP3/IMAP)","url":"/manual/latest/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/latest/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/latest/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/latest/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/latest/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/latest/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/latest/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/latest/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/latest/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/latest/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/latest/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/latest/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/latest/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/latest/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/latest/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/latest/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/latest/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/latest/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/latest/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/latest/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/latest/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/latest/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/latest/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/latest/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/latest/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/latest/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/latest/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/latest/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/latest/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/latest/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/latest/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/latest/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/latest/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/latest/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/latest/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/latest/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/latest/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/latest/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/latest/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/latest/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/latest/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/latest/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/latest/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/latest/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/latest/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/latest/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/latest/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/latest/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/latest/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/latest/database/databases/derby.html","urlType":"internal"},{"content":"DuckDB","url":"/manual/latest/database/databases/duckdb.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/latest/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/latest/database/databases/as400.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/latest/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/latest/database/databases/db2.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/latest/database/databases/doris.html","urlType":"internal"},{"content":"Exasol","url":"/manual/latest/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/latest/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/latest/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/latest/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/latest/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/latest/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/latest/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/latest/database/databases/universe.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/latest/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/latest/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/latest/database/databases/ingres.html","urlType":"internal"},{"content":"Interbase","url":"/manual/latest/database/databases/interbase.html","urlType":"internal"},{"content":"InterSystems Cache","url":"/manual/latest/database/databases/cache.html","urlType":"internal"},{"content":"InterSystems Iris","url":"/manual/latest/database/databases/iris.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/latest/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/latest/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/latest/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/latest/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/latest/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/latest/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/latest/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/latest/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/latest/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/latest/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/latest/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/latest/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/latest/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/latest/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/latest/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/latest/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/latest/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/latest/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/latest/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/latest/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/latest/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/latest/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/latest/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/latest/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/latest/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/latest/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/latest/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/latest/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/latest/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/latest/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/latest/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/latest/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/latest/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/latest/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/latest/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/latest/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/latest/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/latest/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/latest/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/latest/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/latest/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/latest/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/latest/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/latest/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/latest/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/latest/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/latest/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/latest/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/latest/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/latest/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/latest/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/latest/technology/cassandra/index.html","urlType":"internal"},{"content":"Memgraph","url":"/manual/latest/technology/memgraph/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/latest/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/latest/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/latest/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/latest/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/latest/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/latest/hop-server/web-service.html","urlType":"internal"},{"content":"Async Web Service","url":"/manual/latest/hop-server/async-web-service.html","urlType":"internal"}]},{"content":"Hop REST Web Application","url":"/manual/latest/hop-rest/index.html","urlType":"internal"},{"content":"Hop Tools","url":"/manual/latest/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/latest/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/latest/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/latest/hop-tools/hop-gui.html","urlType":"internal"},{"content":"hop-run","url":"/manual/latest/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/latest/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/latest/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/latest/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/latest/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/latest/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/latest/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/latest/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/latest/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/latest/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/latest/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Logging pipeline data with pipeline log","url":"/manual/latest/how-to-guides/logging-pipeline-log.html","urlType":"internal"},{"content":"Logging workflow data with workflow log","url":"/manual/latest/how-to-guides/logging-workflow-log.html","urlType":"internal"},{"content":"Loops in Apache Hop","url":"/manual/latest/how-to-guides/loops-in-apache-hop.html","urlType":"internal"},{"content":"Parallel execution in workflows","url":"/manual/latest/how-to-guides/workflows-parallel-execution.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/latest/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]},{"content":"Community Posts","url":"/manual/latest/community-blogs/index.html","urlType":"internal"}],"root":true,"order":0}]},"manual/2.6.0":{"displayVersion":"2.6.0","title":"User manual","version":"2.6.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.6.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.6.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.6.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.6.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.6.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.6.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.6.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.6.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.6.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.6.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.6.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.6.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.6.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.6.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.6.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.6.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.6.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.6.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.6.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.6.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.6.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.6.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.6.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.6.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.6.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.6.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.6.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.6.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.6.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.6.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.6.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.6.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.6.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.6.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"},{"content":"Google Cloud Dataflow","url":"/manual/2.6.0/pipeline/beam/beam-samples-dataflow.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/2.6.0/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.6.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.6.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.6.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.6.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.6.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.6.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.6.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.6.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.6.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.6.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.6.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.6.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.6.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.6.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.6.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/2.6.0/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.6.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.6.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.6.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.6.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.6.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.6.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.6.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.6.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.6.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.6.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.6.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.6.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.6.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/2.6.0/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/2.6.0/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.6.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.6.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.6.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.6.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.6.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.6.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.6.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.6.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.6.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.6.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.6.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.6.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.6.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.6.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.6.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.6.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.6.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.6.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.6.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.6.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.6.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.6.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.6.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.6.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.6.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Data Validator","url":"/manual/2.6.0/pipeline/transforms/validator.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.6.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.6.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.6.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.6.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.6.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.6.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.6.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.6.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.6.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.6.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.6.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.6.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.6.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.6.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.6.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.6.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.6.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.6.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Execution Information","url":"/manual/2.6.0/pipeline/transforms/execinfo.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.6.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.6.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.6.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.6.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.6.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.6.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.6.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.6.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.6.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.6.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.6.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.6.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.6.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.6.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.6.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.6.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.6.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.6.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Google Analytics Input","url":"/manual/2.6.0/pipeline/transforms/google-analytics.html","urlType":"internal"},{"content":"Google Sheets Input","url":"/manual/2.6.0/pipeline/transforms/google-sheets-input.html","urlType":"internal"},{"content":"Google Sheets Output","url":"/manual/2.6.0/pipeline/transforms/google-sheets-output.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.6.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.6.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.6.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.6.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.6.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.6.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.6.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.6.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.6.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"JDBC Metadata","url":"/manual/2.6.0/pipeline/transforms/jdbcmetadata.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.6.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.6.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.6.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.6.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.6.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.6.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.6.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.6.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.6.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.6.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.6.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.6.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.6.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.6.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.6.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.6.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.6.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/2.6.0/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/2.6.0/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.6.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.6.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.6.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.6.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.6.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.6.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.6.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.6.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.6.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.6.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.6.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.6.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.6.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.6.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"Pipeline Data Probe","url":"/manual/2.6.0/pipeline/transforms/pipeline-data-probe.html","urlType":"internal"},{"content":"Pipeline Logging","url":"/manual/2.6.0/pipeline/transforms/pipeline-logging.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.6.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.6.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.6.0/pipeline/transforms/pipeline-executor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.6.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.6.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.6.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.6.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.6.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.6.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.6.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.6.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.6.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.6.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.6.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.6.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.6.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.6.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.6.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.6.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.6.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.6.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.6.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Script","url":"/manual/2.6.0/pipeline/transforms/script.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.6.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.6.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/2.6.0/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.6.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.6.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.6.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.6.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.6.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.6.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.6.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.6.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.6.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.6.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.6.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.6.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.6.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.6.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.6.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.6.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.6.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.6.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.6.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.6.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.6.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.6.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.6.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.6.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.6.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.6.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.6.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.6.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.6.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.6.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Vertica Bulk Loader","url":"/manual/2.6.0/pipeline/transforms/verticabulkloader.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.6.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.6.0/pipeline/transforms/workflow-executor.html","urlType":"internal"},{"content":"Workflow Logging","url":"/manual/2.6.0/pipeline/transforms/workflow-logging.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.6.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.6.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.6.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.6.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.6.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.6.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.6.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.6.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.6.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.6.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.6.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.6.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.6.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.6.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.6.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.6.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.6.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.6.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.6.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.6.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.6.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.6.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.6.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.6.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.6.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.6.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.6.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.6.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.6.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.6.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.6.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.6.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.6.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.6.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.6.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.6.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.6.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.6.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.6.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.6.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/2.6.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.6.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.6.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.6.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.6.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.6.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.6.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.6.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mails (POP3/IMAP)","url":"/manual/2.6.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.6.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.6.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.6.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.6.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.6.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.6.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.6.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.6.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.6.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.6.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.6.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.6.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.6.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.6.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.6.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.6.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.6.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.6.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.6.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.6.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.6.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.6.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.6.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/2.6.0/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.6.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.6.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.6.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.6.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.6.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.6.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.6.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.6.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.6.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.6.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.6.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.6.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.6.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.6.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.6.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.6.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.6.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.6.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.6.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.6.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.6.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.6.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.6.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.6.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.6.0/database/databases/derby.html","urlType":"internal"},{"content":"DuckDB","url":"/manual/2.6.0/database/databases/duckdb.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/2.6.0/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.6.0/database/databases/as400.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.6.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.6.0/database/databases/db2.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.6.0/database/databases/doris.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.6.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.6.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.6.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.6.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.6.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.6.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.6.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.6.0/database/databases/universe.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.6.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.6.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.6.0/database/databases/ingres.html","urlType":"internal"},{"content":"Interbase","url":"/manual/2.6.0/database/databases/interbase.html","urlType":"internal"},{"content":"InterSystems Cache","url":"/manual/2.6.0/database/databases/cache.html","urlType":"internal"},{"content":"InterSystems Iris","url":"/manual/2.6.0/database/databases/iris.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.6.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.6.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.6.0/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/2.6.0/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.6.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.6.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.6.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.6.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.6.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.6.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.6.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.6.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.6.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.6.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.6.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.6.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.6.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.6.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.6.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.6.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.6.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.6.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.6.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/2.6.0/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/2.6.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.6.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.6.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/2.6.0/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/2.6.0/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.6.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.6.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.6.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.6.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.6.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.6.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.6.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.6.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.6.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.6.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.6.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.6.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.6.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.6.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.6.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.6.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.6.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.6.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.6.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.6.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.6.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.6.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.6.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Memgraph","url":"/manual/2.6.0/technology/memgraph/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.6.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.6.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.6.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.6.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.6.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.6.0/hop-server/web-service.html","urlType":"internal"},{"content":"Async Web Service","url":"/manual/2.6.0/hop-server/async-web-service.html","urlType":"internal"}]},{"content":"Hop REST Web Application","url":"/manual/2.6.0/hop-rest/index.html","urlType":"internal"},{"content":"Hop Tools","url":"/manual/2.6.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.6.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.6.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.6.0/hop-tools/hop-gui.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.6.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.6.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.6.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.6.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.6.0/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.6.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.6.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.6.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.6.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.6.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/2.6.0/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Logging pipeline data with pipeline log","url":"/manual/2.6.0/how-to-guides/logging-pipeline-log.html","urlType":"internal"},{"content":"Logging workflow data with workflow log","url":"/manual/2.6.0/how-to-guides/logging-workflow-log.html","urlType":"internal"},{"content":"Loops in Apache Hop","url":"/manual/2.6.0/how-to-guides/loops-in-apache-hop.html","urlType":"internal"},{"content":"Parallel execution in workflows","url":"/manual/2.6.0/how-to-guides/workflows-parallel-execution.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/2.6.0/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]},{"content":"Community Posts","url":"/manual/2.6.0/community-blogs/index.html","urlType":"internal"}],"root":true,"order":0}]},"manual/2.5.0":{"displayVersion":"2.5.0","title":"User manual","version":"2.5.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.5.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.5.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.5.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.5.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.5.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.5.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.5.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.5.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.5.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.5.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.5.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.5.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.5.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.5.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.5.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.5.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.5.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.5.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.5.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.5.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.5.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.5.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.5.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.5.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.5.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.5.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.5.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.5.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.5.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.5.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.5.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.5.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.5.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.5.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/2.5.0/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.5.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.5.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.5.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.5.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.5.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.5.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.5.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.5.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.5.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.5.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.5.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.5.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.5.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.5.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.5.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/2.5.0/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.5.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.5.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.5.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.5.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.5.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.5.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.5.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.5.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.5.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.5.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.5.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.5.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.5.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/2.5.0/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/2.5.0/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.5.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.5.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.5.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.5.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.5.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.5.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.5.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.5.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.5.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.5.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.5.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.5.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.5.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.5.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.5.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.5.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.5.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.5.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.5.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.5.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.5.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.5.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.5.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.5.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.5.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.5.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.5.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.5.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.5.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.5.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.5.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.5.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.5.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.5.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.5.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.5.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.5.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.5.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.5.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.5.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.5.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.5.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.5.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Execution Information","url":"/manual/2.5.0/pipeline/transforms/execinfo.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.5.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.5.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.5.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.5.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.5.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.5.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.5.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.5.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.5.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.5.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.5.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.5.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.5.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.5.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.5.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.5.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.5.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.5.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.5.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.5.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.5.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.5.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.5.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.5.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.5.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.5.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.5.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"JDBC Metadata","url":"/manual/2.5.0/pipeline/transforms/jdbcmetadata.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.5.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.5.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.5.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.5.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.5.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.5.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.5.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.5.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.5.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.5.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.5.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.5.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.5.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.5.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.5.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.5.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.5.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/2.5.0/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/2.5.0/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.5.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.5.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.5.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.5.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.5.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.5.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.5.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.5.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.5.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.5.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.5.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.5.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.5.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.5.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"Pipeline Data Probe","url":"/manual/2.5.0/pipeline/transforms/pipeline-data-probe.html","urlType":"internal"},{"content":"Pipeline Logging","url":"/manual/2.5.0/pipeline/transforms/pipeline-logging.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.5.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.5.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.5.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.5.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.5.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.5.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.5.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.5.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.5.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.5.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.5.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.5.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.5.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.5.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.5.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.5.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.5.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.5.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.5.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.5.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.5.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.5.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Script","url":"/manual/2.5.0/pipeline/transforms/script.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.5.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.5.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/2.5.0/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.5.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.5.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.5.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.5.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.5.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.5.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.5.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.5.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.5.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.5.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.5.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.5.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.5.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.5.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.5.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.5.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.5.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.5.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.5.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.5.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.5.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.5.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.5.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.5.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.5.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.5.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.5.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.5.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.5.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Data Validator","url":"/manual/2.5.0/pipeline/transforms/validator.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.5.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Vertica Bulk Loader","url":"/manual/2.5.0/pipeline/transforms/verticabulkloader.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.5.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.5.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Workflow Logging","url":"/manual/2.5.0/pipeline/transforms/workflow-logging.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.5.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.5.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.5.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.5.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.5.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.5.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.5.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.5.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.5.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.5.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.5.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.5.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.5.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.5.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.5.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.5.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.5.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.5.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.5.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.5.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.5.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.5.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.5.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.5.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.5.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.5.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.5.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.5.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.5.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.5.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.5.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.5.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.5.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.5.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.5.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.5.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.5.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.5.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.5.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.5.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/2.5.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.5.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.5.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.5.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.5.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.5.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.5.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.5.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mails (POP3/IMAP)","url":"/manual/2.5.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.5.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.5.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.5.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.5.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.5.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.5.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.5.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.5.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.5.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.5.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.5.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.5.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.5.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.5.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.5.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.5.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.5.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.5.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.5.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.5.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.5.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.5.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.5.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/2.5.0/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.5.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.5.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.5.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.5.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.5.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.5.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.5.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.5.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.5.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.5.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.5.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.5.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.5.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.5.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.5.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.5.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.5.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.5.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.5.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.5.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.5.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.5.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.5.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.5.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.5.0/database/databases/derby.html","urlType":"internal"},{"content":"DuckDB","url":"/manual/2.5.0/database/databases/duckdb.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/2.5.0/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.5.0/database/databases/as400.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.5.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.5.0/database/databases/db2.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.5.0/database/databases/doris.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.5.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.5.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.5.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.5.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.5.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.5.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.5.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.5.0/database/databases/universe.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.5.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.5.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.5.0/database/databases/ingres.html","urlType":"internal"},{"content":"Interbase","url":"/manual/2.5.0/database/databases/interbase.html","urlType":"internal"},{"content":"InterSystems Cache","url":"/manual/2.5.0/database/databases/cache.html","urlType":"internal"},{"content":"InterSystems Iris","url":"/manual/2.5.0/database/databases/iris.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.5.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.5.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.5.0/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/2.5.0/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.5.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.5.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.5.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.5.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.5.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.5.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.5.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.5.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.5.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.5.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.5.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.5.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.5.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.5.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.5.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.5.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.5.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.5.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.5.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/2.5.0/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/2.5.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.5.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.5.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/2.5.0/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/2.5.0/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.5.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.5.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.5.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.5.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.5.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.5.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.5.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.5.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.5.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.5.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.5.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.5.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.5.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.5.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.5.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.5.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.5.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.5.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.5.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.5.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.5.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.5.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.5.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Memgraph","url":"/manual/2.5.0/technology/memgraph/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.5.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.5.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.5.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.5.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.5.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.5.0/hop-server/web-service.html","urlType":"internal"},{"content":"Async Web Service","url":"/manual/2.5.0/hop-server/async-web-service.html","urlType":"internal"}]},{"content":"Hop REST Web Application","url":"/manual/2.5.0/hop-rest/index.html","urlType":"internal"},{"content":"Hop Tools","url":"/manual/2.5.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.5.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.5.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.5.0/hop-tools/hop-gui.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.5.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.5.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.5.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.5.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.5.0/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.5.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.5.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.5.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.5.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.5.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/2.5.0/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Loops in Apache Hop","url":"/manual/2.5.0/how-to-guides/loops-in-apache-hop.html","urlType":"internal"},{"content":"Parallel execution in workflows","url":"/manual/2.5.0/how-to-guides/workflows-parallel-execution.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/2.5.0/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]},{"content":"Community Posts","url":"/manual/2.5.0/community-blogs/index.html","urlType":"internal"}],"root":true,"order":0}]},"manual/2.4.0":{"displayVersion":"2.4.0","title":"User manual","version":"2.4.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.4.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.4.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.4.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.4.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.4.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.4.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.4.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.4.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.4.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.4.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.4.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.4.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.4.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.4.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.4.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.4.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.4.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.4.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.4.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.4.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.4.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.4.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.4.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.4.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.4.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.4.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.4.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.4.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.4.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.4.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.4.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.4.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.4.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.4.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/2.4.0/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.4.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.4.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.4.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.4.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.4.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.4.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.4.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.4.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.4.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.4.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.4.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.4.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.4.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.4.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.4.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/2.4.0/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.4.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.4.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.4.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.4.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.4.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.4.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.4.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.4.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.4.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.4.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.4.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.4.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.4.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/2.4.0/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/2.4.0/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.4.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.4.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.4.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.4.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.4.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.4.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.4.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.4.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.4.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.4.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.4.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.4.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.4.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.4.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.4.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.4.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.4.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.4.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.4.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.4.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.4.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.4.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.4.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.4.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.4.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.4.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.4.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.4.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.4.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.4.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.4.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.4.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.4.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.4.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.4.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.4.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.4.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.4.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.4.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.4.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.4.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.4.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.4.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Execution Information","url":"/manual/2.4.0/pipeline/transforms/execinfo.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.4.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.4.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.4.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.4.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.4.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.4.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.4.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.4.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.4.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.4.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.4.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.4.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.4.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.4.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.4.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.4.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.4.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.4.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.4.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.4.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.4.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.4.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.4.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.4.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.4.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.4.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.4.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.4.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.4.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.4.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.4.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.4.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.4.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.4.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.4.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.4.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.4.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.4.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.4.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.4.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.4.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.4.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.4.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.4.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/2.4.0/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/2.4.0/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.4.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.4.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.4.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.4.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.4.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.4.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.4.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.4.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.4.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.4.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.4.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.4.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.4.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.4.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"Pipeline Data Probe","url":"/manual/2.4.0/pipeline/transforms/pipeline-data-probe.html","urlType":"internal"},{"content":"Pipeline Logging","url":"/manual/2.4.0/pipeline/transforms/pipeline-logging.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.4.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.4.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.4.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.4.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.4.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.4.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.4.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.4.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.4.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.4.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.4.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.4.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.4.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.4.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.4.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.4.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.4.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.4.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.4.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.4.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.4.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.4.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Script","url":"/manual/2.4.0/pipeline/transforms/script.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.4.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.4.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/2.4.0/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.4.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.4.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.4.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.4.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.4.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.4.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.4.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.4.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.4.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.4.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.4.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.4.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.4.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.4.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.4.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.4.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.4.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.4.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.4.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.4.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.4.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.4.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.4.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.4.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.4.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.4.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.4.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.4.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.4.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Data Validator","url":"/manual/2.4.0/pipeline/transforms/validator.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.4.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Vertica Bulk Loader","url":"/manual/2.4.0/pipeline/transforms/verticabulkloader.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.4.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.4.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Workflow Logging","url":"/manual/2.4.0/pipeline/transforms/workflow-logging.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.4.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.4.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.4.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.4.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.4.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.4.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.4.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.4.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.4.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.4.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.4.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.4.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.4.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.4.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.4.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.4.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.4.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.4.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.4.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.4.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.4.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.4.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.4.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.4.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.4.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.4.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.4.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.4.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.4.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.4.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.4.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.4.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.4.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.4.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.4.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.4.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.4.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.4.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.4.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.4.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/2.4.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.4.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.4.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.4.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.4.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.4.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.4.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.4.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/2.4.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.4.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.4.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.4.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.4.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.4.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.4.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.4.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.4.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.4.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.4.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.4.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.4.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.4.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.4.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.4.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.4.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.4.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.4.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.4.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.4.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.4.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.4.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.4.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/2.4.0/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.4.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.4.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.4.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.4.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.4.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.4.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.4.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.4.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.4.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.4.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.4.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.4.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.4.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.4.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.4.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.4.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.4.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.4.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.4.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.4.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.4.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.4.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.4.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.4.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.4.0/database/databases/derby.html","urlType":"internal"},{"content":"DuckDB","url":"/manual/2.4.0/database/databases/duckdb.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/2.4.0/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.4.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/2.4.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.4.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.4.0/database/databases/db2.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.4.0/database/databases/doris.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.4.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.4.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.4.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.4.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.4.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.4.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.4.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.4.0/database/databases/universe.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.4.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.4.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.4.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/2.4.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.4.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.4.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.4.0/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/2.4.0/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.4.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.4.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.4.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.4.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.4.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.4.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.4.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.4.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.4.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.4.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.4.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.4.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.4.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.4.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.4.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.4.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.4.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.4.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.4.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/2.4.0/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/2.4.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.4.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.4.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/2.4.0/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/2.4.0/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.4.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.4.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.4.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.4.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.4.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.4.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.4.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.4.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.4.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.4.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.4.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.4.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.4.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.4.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.4.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.4.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.4.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.4.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.4.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.4.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.4.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.4.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.4.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Memgraph","url":"/manual/2.4.0/technology/memgraph/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.4.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.4.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.4.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.4.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.4.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.4.0/hop-server/web-service.html","urlType":"internal"},{"content":"Async Web Service","url":"/manual/2.4.0/hop-server/async-web-service.html","urlType":"internal"}]},{"content":"Hop REST Web Application","url":"/manual/2.4.0/hop-rest/index.html","urlType":"internal"},{"content":"Hop Tools","url":"/manual/2.4.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.4.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.4.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.4.0/hop-tools/hop-gui.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.4.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.4.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.4.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.4.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.4.0/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.4.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.4.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.4.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.4.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.4.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/2.4.0/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/2.4.0/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]},{"content":"Community Posts","url":"/manual/2.4.0/community-blogs/index.html","urlType":"internal"}],"root":true,"order":0}]},"manual/2.3.0":{"displayVersion":"2.3.0","title":"User manual","version":"2.3.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.3.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.3.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.3.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.3.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.3.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.3.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.3.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.3.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.3.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.3.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.3.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.3.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.3.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.3.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.3.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.3.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.3.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.3.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.3.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.3.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.3.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.3.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.3.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.3.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.3.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.3.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.3.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.3.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.3.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.3.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.3.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.3.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.3.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.3.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/2.3.0/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.3.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.3.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.3.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.3.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.3.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.3.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.3.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.3.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.3.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.3.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.3.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.3.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.3.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.3.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.3.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/2.3.0/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.3.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.3.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.3.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.3.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.3.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.3.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.3.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.3.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.3.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.3.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.3.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.3.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.3.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/2.3.0/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/2.3.0/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.3.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.3.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.3.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.3.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.3.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.3.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.3.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.3.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.3.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.3.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.3.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.3.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.3.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.3.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.3.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.3.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.3.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.3.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.3.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.3.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.3.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.3.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.3.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.3.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.3.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.3.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.3.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.3.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.3.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.3.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.3.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.3.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.3.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.3.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.3.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.3.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.3.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.3.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.3.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.3.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.3.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.3.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.3.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.3.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.3.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.3.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.3.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.3.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.3.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.3.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.3.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.3.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.3.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.3.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.3.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.3.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.3.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.3.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.3.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.3.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.3.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.3.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.3.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.3.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.3.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.3.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.3.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.3.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.3.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.3.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.3.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.3.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.3.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.3.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.3.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.3.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.3.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.3.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.3.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.3.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.3.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.3.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.3.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.3.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.3.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.3.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.3.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/2.3.0/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/2.3.0/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.3.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.3.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.3.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.3.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.3.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.3.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.3.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.3.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.3.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.3.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.3.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.3.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.3.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.3.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"Pipeline Data Probe","url":"/manual/2.3.0/pipeline/transforms/pipeline-data-probe.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.3.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.3.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.3.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.3.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.3.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.3.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.3.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.3.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.3.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.3.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.3.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.3.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.3.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.3.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.3.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.3.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.3.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.3.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.3.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.3.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.3.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.3.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.3.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.3.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/2.3.0/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.3.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.3.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.3.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.3.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.3.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.3.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.3.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.3.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.3.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.3.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.3.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.3.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.3.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.3.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.3.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.3.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.3.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.3.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.3.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.3.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.3.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.3.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.3.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.3.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.3.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.3.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.3.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.3.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.3.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.3.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Vertica Bulk Loader","url":"/manual/2.3.0/pipeline/transforms/verticabulkloader.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.3.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.3.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.3.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.3.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.3.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.3.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.3.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.3.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.3.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.3.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.3.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.3.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.3.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.3.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.3.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.3.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.3.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.3.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.3.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.3.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.3.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.3.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.3.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.3.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.3.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.3.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.3.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.3.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.3.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.3.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.3.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.3.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.3.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.3.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.3.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.3.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.3.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.3.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.3.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.3.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.3.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.3.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/2.3.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.3.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.3.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.3.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.3.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.3.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.3.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.3.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/2.3.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.3.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.3.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.3.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.3.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.3.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.3.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.3.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.3.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.3.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.3.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.3.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.3.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.3.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.3.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.3.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.3.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.3.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.3.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.3.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.3.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.3.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.3.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.3.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/2.3.0/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.3.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.3.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.3.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.3.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.3.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.3.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.3.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.3.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.3.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.3.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.3.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.3.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.3.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.3.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.3.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.3.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.3.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.3.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.3.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.3.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.3.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.3.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.3.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.3.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.3.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.3.0/database/databases/doris.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/2.3.0/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.3.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/2.3.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.3.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.3.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.3.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.3.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.3.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.3.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.3.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.3.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.3.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.3.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/2.3.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.3.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.3.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.3.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/2.3.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.3.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.3.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.3.0/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/2.3.0/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.3.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.3.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.3.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.3.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.3.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.3.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.3.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.3.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.3.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.3.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.3.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.3.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.3.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.3.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.3.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.3.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.3.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.3.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.3.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/2.3.0/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/2.3.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.3.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.3.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/2.3.0/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/2.3.0/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.3.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.3.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.3.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.3.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.3.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.3.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.3.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.3.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.3.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.3.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.3.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.3.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.3.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.3.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.3.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.3.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.3.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.3.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.3.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.3.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.3.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.3.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.3.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.3.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.3.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.3.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.3.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.3.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.3.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/2.3.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.3.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.3.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.3.0/hop-tools/hop-gui.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.3.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.3.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.3.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.3.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.3.0/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.3.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.3.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.3.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.3.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.3.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/2.3.0/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/2.3.0/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]},{"content":"Community Posts","url":"/manual/2.3.0/community-blogs/index.html","urlType":"internal"}],"root":true,"order":0}]},"manual/2.2.0":{"displayVersion":"2.2.0","title":"User manual","version":"2.2.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.2.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.2.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.2.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.2.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.2.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.2.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.2.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.2.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.2.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.2.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.2.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.2.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.2.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.2.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.2.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.2.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.2.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.2.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.2.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.2.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.2.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.2.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.2.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.2.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.2.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.2.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.2.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.2.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.2.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.2.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.2.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.2.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.2.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.2.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/2.2.0/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.2.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.2.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.2.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.2.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.2.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.2.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.2.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.2.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.2.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.2.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.2.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.2.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.2.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.2.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.2.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/2.2.0/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.2.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.2.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.2.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.2.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.2.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.2.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.2.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.2.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.2.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.2.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.2.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.2.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.2.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/2.2.0/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/2.2.0/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.2.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.2.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.2.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.2.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.2.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.2.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.2.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.2.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.2.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.2.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.2.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.2.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.2.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.2.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.2.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.2.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.2.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.2.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.2.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.2.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.2.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.2.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.2.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.2.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.2.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.2.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.2.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.2.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.2.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.2.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.2.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.2.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.2.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.2.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.2.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.2.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.2.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.2.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.2.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.2.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.2.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.2.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.2.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.2.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.2.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.2.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.2.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.2.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.2.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.2.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.2.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.2.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.2.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.2.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.2.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.2.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.2.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.2.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.2.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.2.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.2.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.2.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.2.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.2.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.2.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.2.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.2.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.2.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.2.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.2.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.2.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.2.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.2.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.2.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.2.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.2.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.2.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.2.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.2.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.2.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.2.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.2.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.2.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.2.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.2.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.2.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.2.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.2.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/2.2.0/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.2.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/2.2.0/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.2.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.2.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.2.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.2.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.2.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.2.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.2.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.2.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.2.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.2.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.2.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.2.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Oracle Bulk Loader","url":"/manual/2.2.0/pipeline/transforms/orabulkloader.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.2.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.2.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.2.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.2.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.2.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.2.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.2.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.2.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.2.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.2.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.2.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.2.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.2.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.2.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.2.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.2.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.2.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.2.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.2.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.2.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.2.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.2.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.2.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.2.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.2.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.2.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.2.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/2.2.0/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.2.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.2.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.2.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.2.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/2.2.0/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.2.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.2.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.2.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.2.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.2.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.2.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.2.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.2.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.2.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.2.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.2.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.2.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.2.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.2.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.2.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.2.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.2.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.2.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.2.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.2.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.2.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.2.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.2.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.2.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.2.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.2.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.2.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.2.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.2.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.2.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.2.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.2.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.2.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.2.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.2.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.2.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.2.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.2.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.2.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.2.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.2.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.2.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.2.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.2.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.2.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.2.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.2.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.2.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.2.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.2.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.2.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.2.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.2.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.2.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.2.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.2.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.2.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.2.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.2.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.2.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.2.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.2.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.2.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.2.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.2.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.2.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.2.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.2.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.2.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/2.2.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.2.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.2.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.2.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.2.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.2.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.2.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.2.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/2.2.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.2.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.2.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.2.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.2.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.2.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.2.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.2.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.2.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.2.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.2.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.2.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.2.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.2.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.2.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.2.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.2.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.2.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.2.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.2.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.2.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.2.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.2.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.2.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/2.2.0/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.2.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.2.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.2.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.2.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.2.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.2.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.2.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.2.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.2.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.2.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.2.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.2.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.2.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.2.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.2.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.2.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.2.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.2.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.2.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.2.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.2.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.2.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.2.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.2.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.2.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.2.0/database/databases/doris.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/2.2.0/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.2.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/2.2.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.2.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.2.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.2.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.2.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.2.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.2.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.2.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.2.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.2.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.2.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/2.2.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.2.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.2.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.2.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/2.2.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.2.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.2.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.2.0/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/2.2.0/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.2.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.2.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.2.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.2.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.2.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.2.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.2.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.2.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.2.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.2.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.2.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.2.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.2.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.2.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.2.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.2.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.2.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.2.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.2.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/2.2.0/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/2.2.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.2.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.2.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/2.2.0/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/2.2.0/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.2.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.2.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.2.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.2.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.2.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.2.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.2.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.2.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.2.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.2.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.2.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.2.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.2.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.2.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.2.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.2.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.2.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.2.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.2.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.2.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.2.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.2.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.2.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.2.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.2.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.2.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.2.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.2.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.2.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/2.2.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.2.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.2.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.2.0/hop-gui/index.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.2.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.2.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.2.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.2.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.2.0/snippets/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.2.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.2.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.2.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.2.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.2.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/2.2.0/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/2.2.0/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]}],"root":true,"order":0}]},"manual/2.1.0":{"displayVersion":"2.1.0","title":"User manual","version":"2.1.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.1.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.1.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.1.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.1.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.1.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.1.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.1.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.1.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.1.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.1.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.1.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.1.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.1.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.1.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.1.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.1.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.1.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.1.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.1.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.1.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.1.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.1.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.1.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.1.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.1.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.1.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.1.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.1.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.1.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.1.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.1.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.1.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.1.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.1.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"}]},{"content":"Running a Hop pipeline using the Flink Kubernetes Operator","url":"/manual/2.1.0/pipeline/beam/flink-k8s-operator-running-hop-pipeline.html","urlType":"internal"}]},{"content":"Pipeline Run Configurations","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.1.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.1.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.1.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.1.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.1.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.1.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.1.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.1.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.1.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.1.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.1.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.1.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.1.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.1.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.1.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro Encode","url":"/manual/2.1.0/pipeline/transforms/avro-encode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.1.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.1.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.1.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.1.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.1.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.1.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.1.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.1.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.1.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.1.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.1.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.1.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.1.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Kinesis Consume","url":"/manual/2.1.0/pipeline/transforms/beamkinesisconsume.html","urlType":"internal"},{"content":"Beam Kinesis Produce","url":"/manual/2.1.0/pipeline/transforms/beamkinesisproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.1.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.1.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.1.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.1.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.1.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.1.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.1.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.1.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.1.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.1.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.1.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.1.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.1.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.1.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.1.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.1.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.1.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.1.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.1.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.1.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.1.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.1.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.1.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.1.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.1.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.1.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.1.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.1.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.1.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.1.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.1.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.1.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.1.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.1.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.1.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.1.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.1.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.1.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.1.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.1.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.1.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.1.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.1.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.1.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.1.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.1.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.1.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.1.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.1.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.1.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.1.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.1.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.1.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.1.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.1.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.1.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.1.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.1.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get ID from slave server","url":"/manual/2.1.0/pipeline/transforms/getserversequence.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.1.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.1.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.1.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.1.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.1.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.1.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.1.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.1.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.1.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.1.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.1.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.1.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.1.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.1.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.1.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.1.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.1.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.1.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.1.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.1.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.1.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.1.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.1.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.1.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.1.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.1.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.1.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.1.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.1.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.1.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"Microsoft Access Output","url":"/manual/2.1.0/pipeline/transforms/accessoutput.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.1.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Delete","url":"/manual/2.1.0/pipeline/transforms/mongodbdelete.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.1.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.1.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.1.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.1.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.1.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.1.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.1.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.1.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.1.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.1.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.1.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.1.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.1.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.1.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.1.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.1.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.1.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.1.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.1.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.1.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.1.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.1.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.1.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.1.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.1.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.1.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.1.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.1.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.1.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.1.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.1.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.1.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.1.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.1.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.1.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.1.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.1.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.1.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.1.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Server Status","url":"/manual/2.1.0/pipeline/transforms/serverstatus.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.1.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.1.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.1.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.1.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Snowflake Bulk Loader","url":"/manual/2.1.0/pipeline/transforms/snowflakebulkloader.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.1.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.1.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.1.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.1.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.1.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.1.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.1.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.1.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.1.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.1.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.1.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.1.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.1.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.1.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.1.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.1.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.1.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.1.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.1.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.1.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.1.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.1.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.1.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.1.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.1.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.1.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.1.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.1.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.1.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.1.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.1.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.1.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.1.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.1.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.1.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.1.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.1.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.1.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.1.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.1.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.1.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.1.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.1.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.1.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.1.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.1.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.1.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.1.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.1.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.1.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.1.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.1.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.1.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.1.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.1.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.1.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.1.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.1.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.1.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.1.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.1.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.1.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.1.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.1.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.1.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.1.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.1.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.1.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.1.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate row number in a table","url":"/manual/2.1.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.1.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.1.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.1.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.1.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.1.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.1.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.1.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/2.1.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.1.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.1.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.1.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.1.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.1.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.1.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.1.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.1.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.1.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.1.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.1.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.1.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.1.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.1.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.1.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.1.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.1.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.1.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.1.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.1.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.1.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.1.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.1.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"Snowflake Warehouse Manager","url":"/manual/2.1.0/workflow/actions/snowflake-whm.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.1.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.1.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.1.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.1.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.1.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.1.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.1.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.1.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.1.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.1.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.1.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.1.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.1.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.1.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.1.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.1.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.1.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.1.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.1.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.1.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.1.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.1.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.1.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.1.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.1.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.1.0/database/databases/doris.html","urlType":"internal"},{"content":"Apache Hive","url":"/manual/2.1.0/database/databases/apache-hive.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.1.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/2.1.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.1.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.1.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.1.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.1.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.1.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.1.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.1.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.1.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.1.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.1.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/2.1.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.1.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.1.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.1.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/2.1.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.1.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.1.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.1.0/database/databases/sapdb.html","urlType":"internal"},{"content":"Microsoft Access","url":"/manual/2.1.0/database/databases/access.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.1.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.1.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.1.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.1.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.1.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.1.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.1.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.1.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.1.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.1.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.1.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.1.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.1.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.1.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.1.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.1.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.1.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.1.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.1.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Asynchronous Web Service","url":"/manual/2.1.0/metadata-types/asyncwebservice.html","urlType":"internal"},{"content":"Beam File Definition","url":"/manual/2.1.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.1.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.1.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Execution Data Profile","url":"/manual/2.1.0/metadata-types/execution-data-profile.html","urlType":"internal"},{"content":"Execution Information Location","url":"/manual/2.1.0/metadata-types/execution-information-location.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.1.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.1.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.1.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.1.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.1.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.1.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.1.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.1.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.1.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.1.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.1.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.1.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.1.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.1.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.1.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.1.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.1.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.1.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.1.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.1.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.1.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.1.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.1.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.1.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.1.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.1.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.1.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.1.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.1.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/2.1.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.1.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.1.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.1.0/hop-gui/index.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.1.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.1.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.1.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.1.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.1.0/snippets/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.1.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.1.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.1.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.1.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.1.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"},{"content":"Joins and lookups","url":"/manual/2.1.0/how-to-guides/joins-lookups.html","urlType":"internal"},{"content":"Run Hop workflows and pipelines in Apache Airflow","url":"/manual/2.1.0/how-to-guides/run-hop-in-apache-airflow.html","urlType":"internal"}]}],"root":true,"order":0}]},"manual/2.0.0":{"displayVersion":"2.0.0","title":"User manual","version":"2.0.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/2.0.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/2.0.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/2.0.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/2.0.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/2.0.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/2.0.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/2.0.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/2.0.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/2.0.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/2.0.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/2.0.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/2.0.0/installation-configuration.html","urlType":"internal"},{"content":"Supported Java Versions","url":"/manual/2.0.0/supported-jvms.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/2.0.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/2.0.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/2.0.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/2.0.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/2.0.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/2.0.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/2.0.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/2.0.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/2.0.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/2.0.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/2.0.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/2.0.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/2.0.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/2.0.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/2.0.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/2.0.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/2.0.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/2.0.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/2.0.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/2.0.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/2.0.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"},{"content":"Apache Spark on Local","url":"/manual/2.0.0/pipeline/beam/spark-on-local-host.html","urlType":"internal"}]}]},{"content":"Pipeline Run Configurations","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/2.0.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/2.0.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.0.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/2.0.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/2.0.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.0.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/2.0.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/2.0.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/2.0.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/2.0.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/2.0.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/2.0.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/2.0.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/2.0.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/2.0.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/2.0.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Avro File Output","url":"/manual/2.0.0/pipeline/transforms/avro-file-output.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/2.0.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/2.0.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/2.0.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/2.0.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/2.0.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/2.0.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/2.0.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/2.0.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/2.0.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/2.0.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/2.0.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/2.0.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/2.0.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/2.0.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/2.0.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/2.0.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/2.0.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/2.0.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/2.0.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/2.0.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/2.0.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/2.0.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/2.0.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/2.0.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/2.0.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/2.0.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/2.0.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/2.0.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/2.0.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/2.0.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/2.0.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/2.0.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/2.0.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/2.0.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/2.0.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/2.0.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/2.0.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/2.0.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/2.0.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/2.0.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/2.0.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Doris Bulk Loader","url":"/manual/2.0.0/pipeline/transforms/dorisbulkloader.html","urlType":"internal"},{"content":"Drools Rule Accumulator","url":"/manual/2.0.0/pipeline/transforms/rulesaccumulator.html","urlType":"internal"},{"content":"Drools Rule Executor","url":"/manual/2.0.0/pipeline/transforms/rulesexecutor.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/2.0.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/2.0.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/2.0.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/2.0.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/2.0.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/2.0.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/2.0.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/2.0.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/2.0.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/2.0.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/2.0.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/2.0.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/2.0.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/2.0.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/2.0.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/2.0.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/2.0.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Formula","url":"/manual/2.0.0/pipeline/transforms/formula.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/2.0.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/2.0.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/2.0.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/2.0.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/2.0.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/2.0.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/2.0.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get ID from slave server","url":"/manual/2.0.0/pipeline/transforms/getserversequence.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/2.0.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/2.0.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/2.0.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/2.0.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/2.0.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/2.0.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/2.0.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/2.0.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/2.0.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/2.0.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/2.0.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/2.0.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.0.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/2.0.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/2.0.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/2.0.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/2.0.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/2.0.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/2.0.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/2.0.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/2.0.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.0.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.0.0/pipeline/transforms/mailvalidator.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/2.0.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/2.0.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/2.0.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/2.0.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/2.0.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/2.0.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/2.0.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/2.0.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/2.0.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/2.0.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/2.0.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/2.0.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/2.0.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/2.0.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/2.0.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/2.0.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/2.0.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/2.0.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/2.0.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/2.0.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/2.0.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/2.0.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/2.0.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/2.0.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/2.0.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/2.0.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/2.0.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/2.0.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/2.0.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/2.0.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/2.0.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/2.0.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/2.0.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/2.0.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/2.0.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/2.0.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/2.0.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/2.0.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/2.0.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/2.0.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/2.0.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/2.0.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/2.0.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/2.0.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/2.0.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/2.0.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/2.0.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/2.0.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/2.0.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/2.0.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.0.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/2.0.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/2.0.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/2.0.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/2.0.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/2.0.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/2.0.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/2.0.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/2.0.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/2.0.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/2.0.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/2.0.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/2.0.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/2.0.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/2.0.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/2.0.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.0.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/2.0.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/2.0.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/2.0.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/2.0.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/2.0.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/2.0.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/2.0.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/2.0.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/2.0.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/2.0.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/2.0.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/2.0.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/2.0.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/2.0.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/2.0.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/2.0.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/2.0.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/2.0.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.0.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.0.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/2.0.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/2.0.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/2.0.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/2.0.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/2.0.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/2.0.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/2.0.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/2.0.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/2.0.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/2.0.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/2.0.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/2.0.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/2.0.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/2.0.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/2.0.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/2.0.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/2.0.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/2.0.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/2.0.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/2.0.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/2.0.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/2.0.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/2.0.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/2.0.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/2.0.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/2.0.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/2.0.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/2.0.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/2.0.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/2.0.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/2.0.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/2.0.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/2.0.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/2.0.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate rows number in a table","url":"/manual/2.0.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/2.0.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/2.0.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/2.0.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/2.0.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/2.0.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/2.0.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/2.0.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/2.0.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/2.0.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/2.0.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/2.0.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/2.0.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/2.0.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/2.0.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/2.0.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/2.0.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/2.0.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/2.0.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/2.0.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/2.0.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/2.0.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/2.0.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/2.0.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/2.0.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/2.0.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/2.0.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/2.0.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/2.0.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/2.0.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/2.0.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/2.0.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/2.0.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/2.0.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/2.0.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/2.0.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/2.0.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/2.0.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/2.0.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/2.0.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/2.0.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/2.0.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/2.0.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/2.0.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/2.0.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/2.0.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/2.0.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/2.0.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/2.0.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/2.0.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/2.0.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/2.0.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/2.0.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/2.0.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/2.0.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/2.0.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/2.0.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/2.0.0/database/databases/doris.html","urlType":"internal"},{"content":"AS400","url":"/manual/2.0.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/2.0.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/2.0.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/2.0.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/2.0.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/2.0.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/2.0.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/2.0.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/2.0.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/2.0.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/2.0.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/2.0.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/2.0.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/2.0.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/2.0.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/2.0.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/2.0.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/2.0.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/2.0.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/2.0.0/database/databases/sapdb.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/2.0.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/2.0.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/2.0.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/2.0.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/2.0.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/2.0.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/2.0.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/2.0.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/2.0.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/2.0.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/2.0.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/2.0.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/2.0.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/2.0.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/2.0.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/2.0.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/2.0.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/2.0.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/2.0.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Beam File Definition","url":"/manual/2.0.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/2.0.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/2.0.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/2.0.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/2.0.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/2.0.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/2.0.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/2.0.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/2.0.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/2.0.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/2.0.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/2.0.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/2.0.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/2.0.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.0.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/2.0.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/2.0.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/2.0.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/2.0.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/2.0.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/2.0.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/2.0.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/2.0.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/2.0.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/2.0.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/2.0.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/2.0.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/2.0.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/2.0.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/2.0.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/2.0.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/2.0.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/2.0.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/2.0.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/2.0.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/2.0.0/hop-gui/index.html","urlType":"internal"},{"content":"hop-run","url":"/manual/2.0.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/2.0.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/2.0.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/2.0.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/2.0.0/snippets/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/2.0.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/2.0.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/2.0.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/2.0.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/2.0.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"}]}],"root":true,"order":0}]},"manual/1.2.0":{"displayVersion":"1.2.0","title":"User manual","version":"1.2.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/1.2.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/1.2.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/1.2.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/1.2.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/1.2.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/1.2.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/1.2.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/1.2.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/1.2.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/1.2.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/1.2.0/concepts.html","urlType":"internal"},{"content":"Installation and Configuration","url":"/manual/1.2.0/installation-configuration.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/1.2.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/1.2.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/1.2.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/1.2.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/1.2.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/1.2.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/1.2.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/1.2.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/1.2.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/1.2.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/1.2.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/1.2.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/1.2.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/1.2.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/1.2.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/1.2.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/1.2.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal","items":[{"content":"Running the Beam samples","url":"/manual/1.2.0/pipeline/beam/running-the-beam-samples.html","urlType":"internal","items":[{"content":"Direct Runner","url":"/manual/1.2.0/pipeline/beam/beam-samples-direct-runner.html","urlType":"internal"},{"content":"Apache Flink","url":"/manual/1.2.0/pipeline/beam/beam-samples-flink.html","urlType":"internal"},{"content":"Apache Spark","url":"/manual/1.2.0/pipeline/beam/beam-samples-spark.html","urlType":"internal"}]}]},{"content":"Pipeline Run Configurations","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/1.2.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/1.2.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/1.2.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/1.2.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/1.2.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/1.2.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/1.2.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/1.2.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/1.2.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/1.2.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/1.2.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/1.2.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/1.2.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/1.2.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/1.2.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/1.2.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/1.2.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/1.2.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/1.2.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/1.2.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/1.2.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/1.2.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/1.2.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/1.2.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/1.2.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/1.2.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/1.2.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/1.2.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/1.2.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/1.2.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/1.2.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/1.2.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/1.2.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/1.2.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/1.2.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/1.2.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/1.2.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/1.2.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/1.2.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/1.2.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/1.2.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/1.2.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/1.2.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/1.2.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/1.2.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/1.2.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/1.2.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/1.2.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/1.2.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/1.2.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/1.2.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/1.2.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/1.2.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/1.2.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/1.2.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/1.2.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/1.2.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/1.2.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/1.2.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/1.2.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/1.2.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/1.2.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/1.2.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/1.2.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/1.2.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/1.2.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/1.2.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/1.2.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/1.2.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/1.2.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/1.2.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/1.2.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/1.2.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/1.2.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/1.2.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/1.2.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/1.2.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/1.2.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/1.2.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/1.2.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/1.2.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get ID from slave server","url":"/manual/1.2.0/pipeline/transforms/getserversequence.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/1.2.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/1.2.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/1.2.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/1.2.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/1.2.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/1.2.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/1.2.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/1.2.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/1.2.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/1.2.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/1.2.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/1.2.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/1.2.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/1.2.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/1.2.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/1.2.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/1.2.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/1.2.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/1.2.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/1.2.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/1.2.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/1.2.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/1.2.0/pipeline/transforms/mailvalidator.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/1.2.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/1.2.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/1.2.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/1.2.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/1.2.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/1.2.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/1.2.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/1.2.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/1.2.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/1.2.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/1.2.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/1.2.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/1.2.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/1.2.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/1.2.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/1.2.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/1.2.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/1.2.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/1.2.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/1.2.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/1.2.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/1.2.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/1.2.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/1.2.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/1.2.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/1.2.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/1.2.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/1.2.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/1.2.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/1.2.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/1.2.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/1.2.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/1.2.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/1.2.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/1.2.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/1.2.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/1.2.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/1.2.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/1.2.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/1.2.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/1.2.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/1.2.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/1.2.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/1.2.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/1.2.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/1.2.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/1.2.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/1.2.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/1.2.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/1.2.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/1.2.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/1.2.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/1.2.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/1.2.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/1.2.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/1.2.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/1.2.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/1.2.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/1.2.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/1.2.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/1.2.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/1.2.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/1.2.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/1.2.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/1.2.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/1.2.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/1.2.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/1.2.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/1.2.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/1.2.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/1.2.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/1.2.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/1.2.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/1.2.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/1.2.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/1.2.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/1.2.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/1.2.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/1.2.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/1.2.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/1.2.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/1.2.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/1.2.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/1.2.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/1.2.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/1.2.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/1.2.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/1.2.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/1.2.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/1.2.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/1.2.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/1.2.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/1.2.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/1.2.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/1.2.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/1.2.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/1.2.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/1.2.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/1.2.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/1.2.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/1.2.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/1.2.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/1.2.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/1.2.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/1.2.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/1.2.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/1.2.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/1.2.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/1.2.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/1.2.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/1.2.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/1.2.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/1.2.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/1.2.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/1.2.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/1.2.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/1.2.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/1.2.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/1.2.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/1.2.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/1.2.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate rows number in a table","url":"/manual/1.2.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/1.2.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/1.2.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/1.2.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/1.2.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/1.2.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/1.2.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/1.2.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/1.2.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/1.2.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/1.2.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/1.2.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/1.2.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/1.2.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/1.2.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/1.2.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/1.2.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/1.2.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/1.2.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/1.2.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/1.2.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/1.2.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/1.2.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/1.2.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/1.2.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/1.2.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/1.2.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/1.2.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/1.2.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/1.2.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/1.2.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/1.2.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/1.2.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/1.2.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/1.2.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/1.2.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/1.2.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/1.2.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/1.2.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/1.2.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/1.2.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/1.2.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/1.2.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/1.2.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/1.2.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/1.2.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/1.2.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/1.2.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/1.2.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/1.2.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/1.2.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/1.2.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/1.2.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/1.2.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/1.2.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/1.2.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/1.2.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/1.2.0/database/databases/doris.html","urlType":"internal"},{"content":"AS400","url":"/manual/1.2.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/1.2.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/1.2.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/1.2.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/1.2.0/database/databases/exasol.html","urlType":"internal"},{"content":"Firebird","url":"/manual/1.2.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/1.2.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/1.2.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/1.2.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/1.2.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/1.2.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/1.2.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/1.2.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/1.2.0/database/databases/infobright.html","urlType":"internal"},{"content":"Informix","url":"/manual/1.2.0/database/databases/informix.html","urlType":"internal"},{"content":"Ingres","url":"/manual/1.2.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/1.2.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/1.2.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/1.2.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/1.2.0/database/databases/sapdb.html","urlType":"internal"},{"content":"MonetDB","url":"/manual/1.2.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/1.2.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/1.2.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/1.2.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/1.2.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/1.2.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/1.2.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/1.2.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/1.2.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/1.2.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/1.2.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/1.2.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/1.2.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/1.2.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/1.2.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/1.2.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/1.2.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/1.2.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/1.2.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Beam File Definition","url":"/manual/1.2.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/1.2.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/1.2.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/1.2.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/1.2.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/1.2.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/1.2.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/1.2.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/1.2.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/1.2.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/1.2.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/1.2.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/1.2.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/1.2.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/1.2.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/1.2.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/1.2.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/1.2.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/1.2.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/1.2.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/1.2.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/1.2.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/1.2.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/1.2.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/1.2.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/1.2.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/1.2.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/1.2.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/1.2.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/1.2.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/1.2.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/1.2.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/1.2.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/1.2.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/1.2.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/1.2.0/hop-gui/index.html","urlType":"internal"},{"content":"hop-run","url":"/manual/1.2.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/1.2.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/1.2.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/1.2.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/1.2.0/snippets/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/1.2.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/1.2.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/1.2.0/hop-usps.html","urlType":"internal"},{"content":"How-to guides","url":"/manual/1.2.0/how-to-guides/index.html","urlType":"internal","items":[{"content":"Hop web services in Docker","url":"/manual/1.2.0/how-to-guides/apache-hop-web-services-docker.html","urlType":"internal"}]}],"root":true,"order":0}]},"manual/1.1.0":{"displayVersion":"1.1.0","title":"User manual","version":"1.1.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/1.1.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/1.1.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/1.1.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/1.1.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/1.1.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/1.1.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/1.1.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/1.1.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/1.1.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/1.1.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/1.1.0/concepts.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/1.1.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/1.1.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Popup Dialog","url":"/manual/1.1.0/hop-gui/hop-gui-popup-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/1.1.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/1.1.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/1.1.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/1.1.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/1.1.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/1.1.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/1.1.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/1.1.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/1.1.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/1.1.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/1.1.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/1.1.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/1.1.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/1.1.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal"},{"content":"Pipeline Run Configurations","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/1.1.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/1.1.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/1.1.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/1.1.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/1.1.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/1.1.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/1.1.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/1.1.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/1.1.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/1.1.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/1.1.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/1.1.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/1.1.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Apache Tika","url":"/manual/1.1.0/pipeline/transforms/apache-tika.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/1.1.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/1.1.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/1.1.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/1.1.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/1.1.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/1.1.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/1.1.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/1.1.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/1.1.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/1.1.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/1.1.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/1.1.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/1.1.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/1.1.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/1.1.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/1.1.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/1.1.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/1.1.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/1.1.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/1.1.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/1.1.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/1.1.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/1.1.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/1.1.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/1.1.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/1.1.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/1.1.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/1.1.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/1.1.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/1.1.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/1.1.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/1.1.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/1.1.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/1.1.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/1.1.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/1.1.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/1.1.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/1.1.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/1.1.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/1.1.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"De-Serialize From File","url":"/manual/1.1.0/pipeline/transforms/serialize-de-from-file.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/1.1.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/1.1.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/1.1.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/1.1.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/1.1.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/1.1.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/1.1.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/1.1.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/1.1.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/1.1.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/1.1.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/1.1.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/1.1.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/1.1.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/1.1.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/1.1.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/1.1.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/1.1.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/1.1.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/1.1.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/1.1.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/1.1.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/1.1.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/1.1.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/1.1.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/1.1.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get ID from slave server","url":"/manual/1.1.0/pipeline/transforms/getserversequence.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/1.1.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/1.1.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/1.1.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/1.1.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/1.1.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/1.1.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/1.1.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/1.1.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/1.1.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/1.1.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/1.1.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/1.1.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/1.1.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/1.1.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/1.1.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/1.1.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/1.1.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/1.1.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/1.1.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/1.1.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/1.1.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/1.1.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/1.1.0/pipeline/transforms/mailvalidator.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/1.1.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/1.1.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/1.1.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/1.1.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/1.1.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/1.1.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata Input","url":"/manual/1.1.0/pipeline/transforms/metadata-input.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/1.1.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/1.1.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/1.1.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/1.1.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/1.1.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/1.1.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/1.1.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/1.1.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/1.1.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/1.1.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/1.1.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/1.1.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/1.1.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/1.1.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/1.1.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/1.1.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/1.1.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/1.1.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/1.1.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/1.1.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/1.1.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/1.1.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/1.1.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/1.1.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/1.1.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/1.1.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/1.1.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/1.1.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/1.1.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/1.1.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/1.1.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/1.1.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/1.1.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/1.1.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/1.1.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/1.1.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/1.1.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/1.1.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/1.1.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/1.1.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Serialize To File","url":"/manual/1.1.0/pipeline/transforms/serialize-to-file.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/1.1.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/1.1.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/1.1.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/1.1.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/1.1.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/1.1.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/1.1.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/1.1.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/1.1.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/1.1.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Standardize Phone Number","url":"/manual/1.1.0/pipeline/transforms/standardizephonenumber.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/1.1.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/1.1.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/1.1.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/1.1.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/1.1.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/1.1.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/1.1.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/1.1.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/1.1.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/1.1.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/1.1.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/1.1.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/1.1.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/1.1.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/1.1.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/1.1.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/1.1.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/1.1.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/1.1.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/1.1.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/1.1.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/1.1.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/1.1.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/1.1.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/1.1.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/1.1.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/1.1.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/1.1.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/1.1.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/1.1.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/1.1.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/1.1.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/1.1.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/1.1.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/1.1.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/1.1.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/1.1.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/1.1.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/1.1.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/1.1.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/1.1.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/1.1.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/1.1.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/1.1.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/1.1.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/1.1.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/1.1.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/1.1.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/1.1.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/1.1.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/1.1.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/1.1.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/1.1.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/1.1.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/1.1.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/1.1.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/1.1.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/1.1.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/1.1.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/1.1.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/1.1.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/1.1.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate rows number in a table","url":"/manual/1.1.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/1.1.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/1.1.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/1.1.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/1.1.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/1.1.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/1.1.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/1.1.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/1.1.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/1.1.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/1.1.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/1.1.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/1.1.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/1.1.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/1.1.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/1.1.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/1.1.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/1.1.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/1.1.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/1.1.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/1.1.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"Ping","url":"/manual/1.1.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/1.1.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/1.1.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/1.1.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/1.1.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/1.1.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/1.1.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/1.1.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/1.1.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/1.1.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/1.1.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/1.1.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/1.1.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/1.1.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/1.1.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/1.1.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/1.1.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/1.1.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/1.1.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/1.1.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/1.1.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/1.1.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/1.1.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/1.1.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/1.1.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/1.1.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/1.1.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/1.1.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/1.1.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/1.1.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/1.1.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/1.1.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/1.1.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/1.1.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/1.1.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/1.1.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/1.1.0/database/databases/doris.html","urlType":"internal"},{"content":"AS400","url":"/manual/1.1.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/1.1.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/1.1.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/1.1.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/1.1.0/database/databases/exasol.html","urlType":"internal"},{"content":"firebird","url":"/manual/1.1.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/1.1.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/1.1.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/1.1.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/1.1.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/1.1.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/1.1.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/1.1.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/1.1.0/database/databases/infobright.html","urlType":"internal"},{"content":"informix","url":"/manual/1.1.0/database/databases/informix.html","urlType":"internal"},{"content":"ingres","url":"/manual/1.1.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/1.1.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/1.1.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/1.1.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/1.1.0/database/databases/sapdb.html","urlType":"internal"},{"content":"monetdb","url":"/manual/1.1.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/1.1.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/1.1.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/1.1.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/1.1.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/1.1.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/1.1.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/1.1.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/1.1.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/1.1.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/1.1.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/1.1.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/1.1.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/1.1.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/1.1.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/1.1.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/1.1.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/1.1.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/1.1.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Beam File Definition","url":"/manual/1.1.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/1.1.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/1.1.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/1.1.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/1.1.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/1.1.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/1.1.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/1.1.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/1.1.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/1.1.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/1.1.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/1.1.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/1.1.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/1.1.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/1.1.0/hop-server/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/1.1.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/1.1.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/1.1.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/1.1.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/1.1.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/1.1.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/1.1.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/1.1.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/1.1.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/1.1.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/1.1.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/1.1.0/technology/neo4j/index.html","urlType":"internal","items":[{"content":"Working with Neo4j data","url":"/manual/1.1.0/technology/neo4j/working-with-neo4j-data.html","urlType":"internal"}]},{"content":"Google","url":"/manual/1.1.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/1.1.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/1.1.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/1.1.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/1.1.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/1.1.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/1.1.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/1.1.0/hop-gui/index.html","urlType":"internal"},{"content":"hop-run","url":"/manual/1.1.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/1.1.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/1.1.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/1.1.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/1.1.0/snippets/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/1.1.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/1.1.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/1.1.0/hop-usps.html","urlType":"internal"}],"root":true,"order":0}]},"manual/1.0.0":{"displayVersion":"1.0.0","title":"User manual","version":"1.0.0","name":"manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/manual/1.0.0/index.html","navigation":[{"items":[{"content":"Getting Started","url":"/manual/1.0.0/getting-started/index.html","urlType":"internal","items":[{"content":"What is Hop","url":"/manual/1.0.0/getting-started/hop-what-is-hop.html","urlType":"internal"},{"content":"Hop Concepts","url":"/manual/1.0.0/getting-started/hop-concepts.html","urlType":"internal"},{"content":"Download &amp; Install","url":"/manual/1.0.0/getting-started/hop-download-install.html","urlType":"internal"},{"content":"Tools","url":"/manual/1.0.0/getting-started/hop-tools.html","urlType":"internal"},{"content":"Hop Gui Overview","url":"/manual/1.0.0/getting-started/hop-gui.html","urlType":"internal"},{"content":"Pipelines","url":"/manual/1.0.0/getting-started/hop-gui-pipelines.html","urlType":"internal"},{"content":"Workflows","url":"/manual/1.0.0/getting-started/hop-gui-workflows.html","urlType":"internal"},{"content":"Next Steps","url":"/manual/1.0.0/getting-started/hop-next-steps.html","urlType":"internal"}]},{"content":"Concepts","url":"/manual/1.0.0/concepts.html","urlType":"internal"},{"content":"Hop Gui","url":"/manual/1.0.0/hop-gui/index.html","urlType":"internal","items":[{"content":"File Dialog","url":"/manual/1.0.0/hop-gui/file-dialog.html","urlType":"internal"},{"content":"Perspectives","url":"/manual/1.0.0/hop-gui/perspectives.html","urlType":"internal"},{"content":"Working with git","url":"/manual/1.0.0/hop-gui/hop-gui-git.html","urlType":"internal"},{"content":"Keyboard Shortcuts","url":"/manual/1.0.0/hop-gui/shortcuts.html","urlType":"internal"},{"content":"Hop Web","url":"/manual/1.0.0/hop-gui/hop-web.html","urlType":"internal"}]},{"content":"Projects","url":"/manual/1.0.0/projects/index.html","urlType":"internal","items":[{"content":"Projects &amp; Environments","url":"/manual/1.0.0/projects/projects-environments.html","urlType":"internal"},{"content":"Metadata","url":"/manual/1.0.0/projects/metadata.html","urlType":"internal"},{"content":"Advanced Configuration","url":"/manual/1.0.0/projects/advanced.html","urlType":"internal"}]},{"content":"Pipelines","url":"/manual/1.0.0/pipeline/pipelines.html","urlType":"internal","items":[{"content":"Pipeline Editor","url":"/manual/1.0.0/pipeline/hop-pipeline-editor.html","urlType":"internal"},{"content":"Create a Pipeline","url":"/manual/1.0.0/pipeline/create-pipeline.html","urlType":"internal"},{"content":"Run, Preview and Debug a Pipeline","url":"/manual/1.0.0/pipeline/run-preview-debug-pipeline.html","urlType":"internal"},{"content":"Error Handling","url":"/manual/1.0.0/pipeline/errorhandling.html","urlType":"internal"},{"content":"Getting started with Apache Beam","url":"/manual/1.0.0/pipeline/beam/getting-started-with-beam.html","urlType":"internal"},{"content":"Pipeline Run Configurations","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/pipeline-run-configurations.html","urlType":"internal","items":[{"content":"Beam Google DataFlow","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/beam-dataflow-pipeline-engine.html","urlType":"internal"},{"content":"Beam Direct","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/beam-direct-pipeline-engine.html","urlType":"internal"},{"content":"Beam Flink","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/beam-flink-pipeline-engine.html","urlType":"internal"},{"content":"Beam Spark","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/beam-spark-pipeline-engine.html","urlType":"internal"},{"content":"Native Local","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/native-local-pipeline-engine.html","urlType":"internal"},{"content":"Native Remote","url":"/manual/1.0.0/pipeline/pipeline-run-configurations/native-remote-pipeline-engine.html","urlType":"internal"}]},{"content":"Pipeline Unit Tests","url":"/manual/1.0.0/pipeline/pipeline-unit-testing.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/1.0.0/pipeline/metadata-injection.html","urlType":"internal"},{"content":"Partitioning","url":"/manual/1.0.0/pipeline/partitioning.html","urlType":"internal"},{"content":"Transforms","url":"/manual/1.0.0/pipeline/transforms.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/1.0.0/pipeline/transforms/abort.html","urlType":"internal"},{"content":"Add a checksum","url":"/manual/1.0.0/pipeline/transforms/addchecksum.html","urlType":"internal"},{"content":"Add Constants","url":"/manual/1.0.0/pipeline/transforms/addconstant.html","urlType":"internal"},{"content":"Add Sequence","url":"/manual/1.0.0/pipeline/transforms/addsequence.html","urlType":"internal"},{"content":"Add value fields changing sequence","url":"/manual/1.0.0/pipeline/transforms/addfieldschangesequence.html","urlType":"internal"},{"content":"Add XML","url":"/manual/1.0.0/pipeline/transforms/addxml.html","urlType":"internal"},{"content":"Analytic Query","url":"/manual/1.0.0/pipeline/transforms/analyticquery.html","urlType":"internal"},{"content":"Append Streams","url":"/manual/1.0.0/pipeline/transforms/append.html","urlType":"internal"},{"content":"Avro Decode","url":"/manual/1.0.0/pipeline/transforms/avro-decode.html","urlType":"internal"},{"content":"Avro File Input","url":"/manual/1.0.0/pipeline/transforms/avro-file-input.html","urlType":"internal"},{"content":"Azure Event Hubs Listener","url":"/manual/1.0.0/pipeline/transforms/azure-event-hubs-listener.html","urlType":"internal"},{"content":"Azure Event Hubs Writer","url":"/manual/1.0.0/pipeline/transforms/azure-event-hubs-writer.html","urlType":"internal"},{"content":"Beam Bigtable Input","url":"/manual/1.0.0/pipeline/transforms/beambigtableinput.html","urlType":"internal"},{"content":"Beam Bigtable Output","url":"/manual/1.0.0/pipeline/transforms/beambigtableoutput.html","urlType":"internal"},{"content":"Beam BigQuery Input","url":"/manual/1.0.0/pipeline/transforms/beambigqueryinput.html","urlType":"internal"},{"content":"Beam BigQuery Output","url":"/manual/1.0.0/pipeline/transforms/beambigqueryoutput.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Publish","url":"/manual/1.0.0/pipeline/transforms/beamgcppublisher.html","urlType":"internal"},{"content":"Beam GCP Pub/Sub : Subscribe","url":"/manual/1.0.0/pipeline/transforms/beamgcpsubscriber.html","urlType":"internal"},{"content":"Beam Input","url":"/manual/1.0.0/pipeline/transforms/beaminput.html","urlType":"internal"},{"content":"Beam Kafka Consume","url":"/manual/1.0.0/pipeline/transforms/beamkafkaconsume.html","urlType":"internal"},{"content":"Beam Kafka Produce","url":"/manual/1.0.0/pipeline/transforms/beamkafkaproduce.html","urlType":"internal"},{"content":"Beam Output","url":"/manual/1.0.0/pipeline/transforms/beamoutput.html","urlType":"internal"},{"content":"Beam Timestamp","url":"/manual/1.0.0/pipeline/transforms/beamtimestamp.html","urlType":"internal"},{"content":"Beam Window","url":"/manual/1.0.0/pipeline/transforms/beamwindow.html","urlType":"internal"},{"content":"Blocking transform","url":"/manual/1.0.0/pipeline/transforms/blockingtransform.html","urlType":"internal"},{"content":"Blocking until transforms finish","url":"/manual/1.0.0/pipeline/transforms/blockuntiltransformsfinish.html","urlType":"internal"},{"content":"Calculator","url":"/manual/1.0.0/pipeline/transforms/calculator.html","urlType":"internal"},{"content":"Cassandra Input","url":"/manual/1.0.0/pipeline/transforms/cassandra-input.html","urlType":"internal"},{"content":"Cassandra Output","url":"/manual/1.0.0/pipeline/transforms/cassandra-output.html","urlType":"internal"},{"content":"Cassandra SSTable Output","url":"/manual/1.0.0/pipeline/transforms/sstable-output.html","urlType":"internal"},{"content":"Call DB procedure","url":"/manual/1.0.0/pipeline/transforms/calldbproc.html","urlType":"internal"},{"content":"Change file encoding","url":"/manual/1.0.0/pipeline/transforms/changefileencoding.html","urlType":"internal"},{"content":"Check if file is locked","url":"/manual/1.0.0/pipeline/transforms/checkfilelocked.html","urlType":"internal"},{"content":"Check if webservice is available","url":"/manual/1.0.0/pipeline/transforms/checkwebserviceavailable.html","urlType":"internal"},{"content":"Clone row","url":"/manual/1.0.0/pipeline/transforms/clonerow.html","urlType":"internal"},{"content":"Closure","url":"/manual/1.0.0/pipeline/transforms/closure.html","urlType":"internal"},{"content":"Coalesce","url":"/manual/1.0.0/pipeline/transforms/coalesce.html","urlType":"internal"},{"content":"Column exists","url":"/manual/1.0.0/pipeline/transforms/columnexists.html","urlType":"internal"},{"content":"Combination lookup/update","url":"/manual/1.0.0/pipeline/transforms/combinationlookup.html","urlType":"internal"},{"content":"Concat Fields","url":"/manual/1.0.0/pipeline/transforms/concatfields.html","urlType":"internal"},{"content":"Copy rows to result","url":"/manual/1.0.0/pipeline/transforms/copyrowstoresult.html","urlType":"internal"},{"content":"Credit card validator","url":"/manual/1.0.0/pipeline/transforms/creditcardvalidator.html","urlType":"internal"},{"content":"CSV File Input","url":"/manual/1.0.0/pipeline/transforms/csvinput.html","urlType":"internal"},{"content":"Cube input","url":"/manual/1.0.0/pipeline/transforms/cubeinput.html","urlType":"internal"},{"content":"Cube output","url":"/manual/1.0.0/pipeline/transforms/cubeoutput.html","urlType":"internal"},{"content":"Database Join","url":"/manual/1.0.0/pipeline/transforms/databasejoin.html","urlType":"internal"},{"content":"Database Lookup","url":"/manual/1.0.0/pipeline/transforms/databaselookup.html","urlType":"internal"},{"content":"Data Grid","url":"/manual/1.0.0/pipeline/transforms/datagrid.html","urlType":"internal"},{"content":"Delay row","url":"/manual/1.0.0/pipeline/transforms/delay.html","urlType":"internal"},{"content":"Delete","url":"/manual/1.0.0/pipeline/transforms/delete.html","urlType":"internal"},{"content":"Detect Empty Stream","url":"/manual/1.0.0/pipeline/transforms/detectemptystream.html","urlType":"internal"},{"content":"Dimension lookup/update","url":"/manual/1.0.0/pipeline/transforms/dimensionlookup.html","urlType":"internal"},{"content":"Dummy (do nothing)","url":"/manual/1.0.0/pipeline/transforms/dummy.html","urlType":"internal"},{"content":"Dynamic SQL row","url":"/manual/1.0.0/pipeline/transforms/dynamicsqlrow.html","urlType":"internal"},{"content":"Edi to XML","url":"/manual/1.0.0/pipeline/transforms/edi2xml.html","urlType":"internal"},{"content":"Email Messages Input","url":"/manual/1.0.0/pipeline/transforms/emailinput.html","urlType":"internal"},{"content":"Enhanced JSON Output","url":"/manual/1.0.0/pipeline/transforms/enhancedjsonoutput.html","urlType":"internal"},{"content":"Excel input","url":"/manual/1.0.0/pipeline/transforms/excelinput.html","urlType":"internal"},{"content":"Excel writer","url":"/manual/1.0.0/pipeline/transforms/excelwriter.html","urlType":"internal"},{"content":"Execute a process","url":"/manual/1.0.0/pipeline/transforms/execprocess.html","urlType":"internal"},{"content":"Execute row SQL script","url":"/manual/1.0.0/pipeline/transforms/execsqlrow.html","urlType":"internal"},{"content":"Execute SQL script","url":"/manual/1.0.0/pipeline/transforms/execsql.html","urlType":"internal"},{"content":"Execute Unit Tests","url":"/manual/1.0.0/pipeline/transforms/exectests.html","urlType":"internal"},{"content":"Fake data","url":"/manual/1.0.0/pipeline/transforms/fake.html","urlType":"internal"},{"content":"File exists","url":"/manual/1.0.0/pipeline/transforms/fileexists.html","urlType":"internal"},{"content":"File Metadata","url":"/manual/1.0.0/pipeline/transforms/filemetadata.html","urlType":"internal"},{"content":"Files from result","url":"/manual/1.0.0/pipeline/transforms/filesfromresult.html","urlType":"internal"},{"content":"Files to result","url":"/manual/1.0.0/pipeline/transforms/filestoresult.html","urlType":"internal"},{"content":"Filter Rows","url":"/manual/1.0.0/pipeline/transforms/filterrows.html","urlType":"internal"},{"content":"Fuzzy match","url":"/manual/1.0.0/pipeline/transforms/fuzzymatch.html","urlType":"internal"},{"content":"Generate Random Value","url":"/manual/1.0.0/pipeline/transforms/generaterandomvalue.html","urlType":"internal"},{"content":"Get Data From XML","url":"/manual/1.0.0/pipeline/transforms/getdatafromxml.html","urlType":"internal"},{"content":"Get filenames","url":"/manual/1.0.0/pipeline/transforms/getfilenames.html","urlType":"internal"},{"content":"Get files rowcount","url":"/manual/1.0.0/pipeline/transforms/getfilesrowcount.html","urlType":"internal"},{"content":"Get records from stream","url":"/manual/1.0.0/pipeline/transforms/getrecordsfromstream.html","urlType":"internal"},{"content":"Get Rows from Result","url":"/manual/1.0.0/pipeline/transforms/getrowsfromresult.html","urlType":"internal"},{"content":"Get ID from slave server","url":"/manual/1.0.0/pipeline/transforms/getserversequence.html","urlType":"internal"},{"content":"Get SubFolder names","url":"/manual/1.0.0/pipeline/transforms/getsubfolders.html","urlType":"internal"},{"content":"Get System Info","url":"/manual/1.0.0/pipeline/transforms/getsystemdata.html","urlType":"internal"},{"content":"Get table names","url":"/manual/1.0.0/pipeline/transforms/gettablenames.html","urlType":"internal"},{"content":"Get variables","url":"/manual/1.0.0/pipeline/transforms/getvariable.html","urlType":"internal"},{"content":"Group By","url":"/manual/1.0.0/pipeline/transforms/groupby.html","urlType":"internal"},{"content":"HTTP client","url":"/manual/1.0.0/pipeline/transforms/http.html","urlType":"internal"},{"content":"HTTP Post","url":"/manual/1.0.0/pipeline/transforms/httppost.html","urlType":"internal"},{"content":"Identify last row in a stream","url":"/manual/1.0.0/pipeline/transforms/identifylastrow.html","urlType":"internal"},{"content":"If Null","url":"/manual/1.0.0/pipeline/transforms/ifnull.html","urlType":"internal"},{"content":"Injector","url":"/manual/1.0.0/pipeline/transforms/injector.html","urlType":"internal"},{"content":"Insert / Update","url":"/manual/1.0.0/pipeline/transforms/insertupdate.html","urlType":"internal"},{"content":"Java Filter","url":"/manual/1.0.0/pipeline/transforms/javafilter.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/1.0.0/pipeline/transforms/javascript.html","urlType":"internal"},{"content":"Join Rows","url":"/manual/1.0.0/pipeline/transforms/joinrows.html","urlType":"internal"},{"content":"JSON Input","url":"/manual/1.0.0/pipeline/transforms/jsoninput.html","urlType":"internal"},{"content":"JSON Output","url":"/manual/1.0.0/pipeline/transforms/jsonoutput.html","urlType":"internal"},{"content":"Kafka Consumer","url":"/manual/1.0.0/pipeline/transforms/kafkaconsumer.html","urlType":"internal"},{"content":"Kafka Producer","url":"/manual/1.0.0/pipeline/transforms/kafkaproducer.html","urlType":"internal"},{"content":"LDAP Input","url":"/manual/1.0.0/pipeline/transforms/ldapinput.html","urlType":"internal"},{"content":"LDAP Output","url":"/manual/1.0.0/pipeline/transforms/ldapoutput.html","urlType":"internal"},{"content":"Load file content in memory","url":"/manual/1.0.0/pipeline/transforms/loadfileinput.html","urlType":"internal"},{"content":"Mail","url":"/manual/1.0.0/pipeline/transforms/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/1.0.0/pipeline/transforms/mailvalidator.html","urlType":"internal"},{"content":"Mapping Input","url":"/manual/1.0.0/pipeline/transforms/mapping-input.html","urlType":"internal"},{"content":"Mapping Output","url":"/manual/1.0.0/pipeline/transforms/mapping-output.html","urlType":"internal"},{"content":"Memory Group By","url":"/manual/1.0.0/pipeline/transforms/memgroupby.html","urlType":"internal"},{"content":"Merge Join","url":"/manual/1.0.0/pipeline/transforms/mergejoin.html","urlType":"internal"},{"content":"Merge rows (diff)","url":"/manual/1.0.0/pipeline/transforms/mergerows.html","urlType":"internal"},{"content":"Metadata Injection","url":"/manual/1.0.0/pipeline/transforms/metainject.html","urlType":"internal"},{"content":"Metadata structure of stream","url":"/manual/1.0.0/pipeline/transforms/metastructure.html","urlType":"internal"},{"content":"MonetDB Bulk Loader","url":"/manual/1.0.0/pipeline/transforms/monetdbbulkloader.html","urlType":"internal"},{"content":"MongoDB Input","url":"/manual/1.0.0/pipeline/transforms/mongodbinput.html","urlType":"internal"},{"content":"MongoDB Output","url":"/manual/1.0.0/pipeline/transforms/mongodboutput.html","urlType":"internal"},{"content":"Multiway Merge Join","url":"/manual/1.0.0/pipeline/transforms/multimerge.html","urlType":"internal"},{"content":"Neo4j Cypher","url":"/manual/1.0.0/pipeline/transforms/neo4j-cypher.html","urlType":"internal"},{"content":"Neo4j Generate CSVs","url":"/manual/1.0.0/pipeline/transforms/neo4j-gencsv.html","urlType":"internal"},{"content":"Neo4j Get Logging Info","url":"/manual/1.0.0/pipeline/transforms/neo4j-getloginfo.html","urlType":"internal"},{"content":"Neo4j Graph Output","url":"/manual/1.0.0/pipeline/transforms/neo4j-graphoutput.html","urlType":"internal"},{"content":"Neo4j Import","url":"/manual/1.0.0/pipeline/transforms/neo4j-import.html","urlType":"internal"},{"content":"Neo4j Output","url":"/manual/1.0.0/pipeline/transforms/neo4j-output.html","urlType":"internal"},{"content":"Neo4j Split Graph","url":"/manual/1.0.0/pipeline/transforms/neo4j-split-graph.html","urlType":"internal"},{"content":"Null If","url":"/manual/1.0.0/pipeline/transforms/nullif.html","urlType":"internal"},{"content":"Number range","url":"/manual/1.0.0/pipeline/transforms/numberrange.html","urlType":"internal"},{"content":"Parquet File Input","url":"/manual/1.0.0/pipeline/transforms/parquet-file-input.html","urlType":"internal"},{"content":"Parquet File Output","url":"/manual/1.0.0/pipeline/transforms/parquet-file-output.html","urlType":"internal"},{"content":"PGP decrypt stream","url":"/manual/1.0.0/pipeline/transforms/pgpdecryptstream.html","urlType":"internal"},{"content":"PGP encrypt stream","url":"/manual/1.0.0/pipeline/transforms/pgpencryptstream.html","urlType":"internal"},{"content":"Pipeline Executor","url":"/manual/1.0.0/pipeline/transforms/pipelineexecutor.html","urlType":"internal"},{"content":"PostgreSQL Bulk Loader","url":"/manual/1.0.0/pipeline/transforms/postgresbulkloader.html","urlType":"internal"},{"content":"Process files","url":"/manual/1.0.0/pipeline/transforms/processfiles.html","urlType":"internal"},{"content":"Properties file Input","url":"/manual/1.0.0/pipeline/transforms/propertyinput.html","urlType":"internal"},{"content":"Properties file Output","url":"/manual/1.0.0/pipeline/transforms/propertyoutput.html","urlType":"internal"},{"content":"Regex Evaluation","url":"/manual/1.0.0/pipeline/transforms/regexeval.html","urlType":"internal"},{"content":"Replace in String","url":"/manual/1.0.0/pipeline/transforms/replacestring.html","urlType":"internal"},{"content":"Reservoir Sampling","url":"/manual/1.0.0/pipeline/transforms/reservoirsampling.html","urlType":"internal"},{"content":"REST Client","url":"/manual/1.0.0/pipeline/transforms/rest.html","urlType":"internal"},{"content":"Row Denormaliser","url":"/manual/1.0.0/pipeline/transforms/rowdenormaliser.html","urlType":"internal"},{"content":"Row Flattener","url":"/manual/1.0.0/pipeline/transforms/rowflattener.html","urlType":"internal"},{"content":"Row Generator","url":"/manual/1.0.0/pipeline/transforms/rowgenerator.html","urlType":"internal"},{"content":"Row Normaliser","url":"/manual/1.0.0/pipeline/transforms/rownormaliser.html","urlType":"internal"},{"content":"Run SSH commands","url":"/manual/1.0.0/pipeline/transforms/runssh.html","urlType":"internal"},{"content":"Salesforce Delete","url":"/manual/1.0.0/pipeline/transforms/salesforcedelete.html","urlType":"internal"},{"content":"Salesforce Input","url":"/manual/1.0.0/pipeline/transforms/salesforceinput.html","urlType":"internal"},{"content":"Salesforce Insert","url":"/manual/1.0.0/pipeline/transforms/salesforceinsert.html","urlType":"internal"},{"content":"Salesforce Update","url":"/manual/1.0.0/pipeline/transforms/salesforceupdate.html","urlType":"internal"},{"content":"Salesforce Upsert","url":"/manual/1.0.0/pipeline/transforms/salesforceupsert.html","urlType":"internal"},{"content":"Sample Rows","url":"/manual/1.0.0/pipeline/transforms/samplerows.html","urlType":"internal"},{"content":"SAS Input","url":"/manual/1.0.0/pipeline/transforms/sasinput.html","urlType":"internal"},{"content":"Select Values","url":"/manual/1.0.0/pipeline/transforms/selectvalues.html","urlType":"internal"},{"content":"Set field value to a constant","url":"/manual/1.0.0/pipeline/transforms/setvalueconstant.html","urlType":"internal"},{"content":"Set field Value to a field","url":"/manual/1.0.0/pipeline/transforms/setvaluefield.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/1.0.0/pipeline/transforms/setvariable.html","urlType":"internal"},{"content":"Simple Mapping","url":"/manual/1.0.0/pipeline/transforms/simple-mapping.html","urlType":"internal"},{"content":"Sort Rows","url":"/manual/1.0.0/pipeline/transforms/sort.html","urlType":"internal"},{"content":"Sorted Merge","url":"/manual/1.0.0/pipeline/transforms/sortedmerge.html","urlType":"internal"},{"content":"Split Fields","url":"/manual/1.0.0/pipeline/transforms/splitfields.html","urlType":"internal"},{"content":"Split fields to rows","url":"/manual/1.0.0/pipeline/transforms/splitfieldtorows.html","urlType":"internal"},{"content":"Splunk Input","url":"/manual/1.0.0/pipeline/transforms/splunkinput.html","urlType":"internal"},{"content":"SQL File Output","url":"/manual/1.0.0/pipeline/transforms/sqlfileoutput.html","urlType":"internal"},{"content":"Stream Lookup","url":"/manual/1.0.0/pipeline/transforms/streamlookup.html","urlType":"internal"},{"content":"Stream Schema Merge","url":"/manual/1.0.0/pipeline/transforms/streamschemamerge.html","urlType":"internal"},{"content":"String cut","url":"/manual/1.0.0/pipeline/transforms/stringcut.html","urlType":"internal"},{"content":"String operations","url":"/manual/1.0.0/pipeline/transforms/stringoperations.html","urlType":"internal"},{"content":"Switch / Case","url":"/manual/1.0.0/pipeline/transforms/switchcase.html","urlType":"internal"},{"content":"Synchronize after merge","url":"/manual/1.0.0/pipeline/transforms/synchronizeaftermerge.html","urlType":"internal"},{"content":"Table Compare","url":"/manual/1.0.0/pipeline/transforms/tablecompare.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/1.0.0/pipeline/transforms/tableexists.html","urlType":"internal"},{"content":"Table Input","url":"/manual/1.0.0/pipeline/transforms/tableinput.html","urlType":"internal"},{"content":"Table Output","url":"/manual/1.0.0/pipeline/transforms/tableoutput.html","urlType":"internal"},{"content":"Teradata Bulk Loader","url":"/manual/1.0.0/pipeline/transforms/terafast.html","urlType":"internal"},{"content":"Text File Input","url":"/manual/1.0.0/pipeline/transforms/textfileinput.html","urlType":"internal"},{"content":"Text File Output","url":"/manual/1.0.0/pipeline/transforms/textfileoutput.html","urlType":"internal"},{"content":"Token Replacement","url":"/manual/1.0.0/pipeline/transforms/tokenreplacement.html","urlType":"internal"},{"content":"Unique Rows","url":"/manual/1.0.0/pipeline/transforms/uniquerows.html","urlType":"internal"},{"content":"Unique Rows (HashSet)","url":"/manual/1.0.0/pipeline/transforms/uniquerowsbyhashset.html","urlType":"internal"},{"content":"Update","url":"/manual/1.0.0/pipeline/transforms/update.html","urlType":"internal"},{"content":"User Defined Java Class","url":"/manual/1.0.0/pipeline/transforms/userdefinedjavaclass.html","urlType":"internal"},{"content":"User Defined Java Expression","url":"/manual/1.0.0/pipeline/transforms/userdefinedjavaexpression.html","urlType":"internal"},{"content":"Value Mapper","url":"/manual/1.0.0/pipeline/transforms/valuemapper.html","urlType":"internal"},{"content":"Web services lookup","url":"/manual/1.0.0/pipeline/transforms/webservices.html","urlType":"internal"},{"content":"Workflow Executor","url":"/manual/1.0.0/pipeline/transforms/workflowexecutor.html","urlType":"internal"},{"content":"Write to log","url":"/manual/1.0.0/pipeline/transforms/writetolog.html","urlType":"internal"},{"content":"XML Input Stream (StAX)","url":"/manual/1.0.0/pipeline/transforms/xmlinputstream.html","urlType":"internal"},{"content":"XML Join","url":"/manual/1.0.0/pipeline/transforms/xmljoin.html","urlType":"internal"},{"content":"XML Output","url":"/manual/1.0.0/pipeline/transforms/xmloutput.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/1.0.0/pipeline/transforms/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/1.0.0/pipeline/transforms/xslt.html","urlType":"internal"},{"content":"Yaml Input","url":"/manual/1.0.0/pipeline/transforms/yamlinput.html","urlType":"internal"},{"content":"Zip file","url":"/manual/1.0.0/pipeline/transforms/zipfile.html","urlType":"internal"}]}]},{"content":"Workflows","url":"/manual/1.0.0/workflow/workflows.html","urlType":"internal","items":[{"content":"Create a Workflow","url":"/manual/1.0.0/workflow/create-workflow.html","urlType":"internal"},{"content":"Run and Debug a Workflow","url":"/manual/1.0.0/workflow/run-debug-workflow.html","urlType":"internal"},{"content":"Workflow Run Configurations","url":"/manual/1.0.0/workflow/workflow-run-configurations/workflow-run-configurations.html","urlType":"internal"},{"content":"Actions","url":"/manual/1.0.0/workflow/actions.html","urlType":"internal","items":[{"content":"Abort","url":"/manual/1.0.0/workflow/actions/abort.html","urlType":"internal"},{"content":"Add filenames to result","url":"/manual/1.0.0/workflow/actions/addresultfilenames.html","urlType":"internal"},{"content":"AS/400 Command","url":"/manual/1.0.0/workflow/actions/as400command.html","urlType":"internal"},{"content":"Cassandra Exec Cql","url":"/manual/1.0.0/workflow/actions/cassandra-exec-cql.html","urlType":"internal"},{"content":"Check Db connections","url":"/manual/1.0.0/workflow/actions/checkdbconnection.html","urlType":"internal"},{"content":"Check Files Locked","url":"/manual/1.0.0/workflow/actions/checkfilelocked.html","urlType":"internal"},{"content":"Check if Webservice is available","url":"/manual/1.0.0/workflow/actions/webserviceavailable.html","urlType":"internal"},{"content":"Check if XML file is well formed","url":"/manual/1.0.0/workflow/actions/xmlwellformed.html","urlType":"internal"},{"content":"Checks if files exists","url":"/manual/1.0.0/workflow/actions/filesexist.html","urlType":"internal"},{"content":"Columns exist in a table","url":"/manual/1.0.0/workflow/actions/columnsexist.html","urlType":"internal"},{"content":"Copy Files","url":"/manual/1.0.0/workflow/actions/copyfiles.html","urlType":"internal"},{"content":"Copy Or Move Files from result","url":"/manual/1.0.0/workflow/actions/copymoveresultfilenames.html","urlType":"internal"},{"content":"Create File","url":"/manual/1.0.0/workflow/actions/createfile.html","urlType":"internal"},{"content":"Create Folder","url":"/manual/1.0.0/workflow/actions/createfolder.html","urlType":"internal"},{"content":"Decrypt files with PGP","url":"/manual/1.0.0/workflow/actions/pgpdecryptfiles.html","urlType":"internal"},{"content":"Delay","url":"/manual/1.0.0/workflow/actions/delay.html","urlType":"internal"},{"content":"Delete File","url":"/manual/1.0.0/workflow/actions/deletefile.html","urlType":"internal"},{"content":"Delete filenames from result","url":"/manual/1.0.0/workflow/actions/deleteresultfilenames.html","urlType":"internal"},{"content":"Delete Files","url":"/manual/1.0.0/workflow/actions/deletefiles.html","urlType":"internal"},{"content":"Delete Folders","url":"/manual/1.0.0/workflow/actions/deletefolders.html","urlType":"internal"},{"content":"Display Msgbox info","url":"/manual/1.0.0/workflow/actions/msgboxinfo.html","urlType":"internal"},{"content":"Dos To Unix","url":"/manual/1.0.0/workflow/actions/dostounix.html","urlType":"internal"},{"content":"DTD Validator","url":"/manual/1.0.0/workflow/actions/dtdvalidator.html","urlType":"internal"},{"content":"Dummy","url":"/manual/1.0.0/workflow/actions/dummy.html","urlType":"internal"},{"content":"Encrypt files with PGP","url":"/manual/1.0.0/workflow/actions/pgpencryptfiles.html","urlType":"internal"},{"content":"End Repeat","url":"/manual/1.0.0/workflow/actions/repeat-end.html","urlType":"internal"},{"content":"Evaluate File Metrics","url":"/manual/1.0.0/workflow/actions/evalfilesmetrics.html","urlType":"internal"},{"content":"Evaluate rows number in a table","url":"/manual/1.0.0/workflow/actions/evaluatetablecontent.html","urlType":"internal"},{"content":"File compare","url":"/manual/1.0.0/workflow/actions/filecompare.html","urlType":"internal"},{"content":"File Exists","url":"/manual/1.0.0/workflow/actions/fileexists.html","urlType":"internal"},{"content":"Folder is Empty","url":"/manual/1.0.0/workflow/actions/folderisempty.html","urlType":"internal"},{"content":"Folders Compare","url":"/manual/1.0.0/workflow/actions/folderscompare.html","urlType":"internal"},{"content":"FTP delete","url":"/manual/1.0.0/workflow/actions/ftpdelete.html","urlType":"internal"},{"content":"Get a file with FTP","url":"/manual/1.0.0/workflow/actions/ftp.html","urlType":"internal"},{"content":"Get a file with SFTP","url":"/manual/1.0.0/workflow/actions/sftp.html","urlType":"internal"},{"content":"Get Mail from POP","url":"/manual/1.0.0/workflow/actions/getpop.html","urlType":"internal"},{"content":"Http Get","url":"/manual/1.0.0/workflow/actions/http.html","urlType":"internal"},{"content":"JavaScript","url":"/manual/1.0.0/workflow/actions/eval.html","urlType":"internal"},{"content":"Mail","url":"/manual/1.0.0/workflow/actions/mail.html","urlType":"internal"},{"content":"Mail Validator","url":"/manual/1.0.0/workflow/actions/mailvalidator.html","urlType":"internal"},{"content":"Move Files","url":"/manual/1.0.0/workflow/actions/movefiles.html","urlType":"internal"},{"content":"MS SQL Server Bulk Loader","url":"/manual/1.0.0/workflow/actions/mssqlbulkload.html","urlType":"internal"},{"content":"MySQL Bulk File","url":"/manual/1.0.0/workflow/actions/mysqlbulkfile.html","urlType":"internal"},{"content":"MySQL Bulk Loader","url":"/manual/1.0.0/workflow/actions/mysqlbulkload.html","urlType":"internal"},{"content":"Neo4j Check Connections","url":"/manual/1.0.0/workflow/actions/neo4j-checkconnections.html","urlType":"internal"},{"content":"Neo4j Constraint","url":"/manual/1.0.0/workflow/actions/neo4j-constraint.html","urlType":"internal"},{"content":"Neo4j Cypher Script","url":"/manual/1.0.0/workflow/actions/neo4j-cypherscript.html","urlType":"internal"},{"content":"Neo4j Index","url":"/manual/1.0.0/workflow/actions/neo4j-index.html","urlType":"internal"},{"content":"PGP Files","url":"/manual/1.0.0/workflow/actions/pgpfiles.html","urlType":"internal"},{"content":"Ping","url":"/manual/1.0.0/workflow/actions/ping.html","urlType":"internal"},{"content":"Pipeline","url":"/manual/1.0.0/workflow/actions/pipeline.html","urlType":"internal"},{"content":"Put a file with FTP","url":"/manual/1.0.0/workflow/actions/ftpput.html","urlType":"internal"},{"content":"Put a file with SFTP","url":"/manual/1.0.0/workflow/actions/sftpput.html","urlType":"internal"},{"content":"Repeat","url":"/manual/1.0.0/workflow/actions/repeat.html","urlType":"internal"},{"content":"Run Pipeline Tests","url":"/manual/1.0.0/workflow/actions/runpipelinetests.html","urlType":"internal"},{"content":"Send Nagios check","url":"/manual/1.0.0/workflow/actions/sendnagiospassivecheck.html","urlType":"internal"},{"content":"Set Variables","url":"/manual/1.0.0/workflow/actions/setvariables.html","urlType":"internal"},{"content":"Shell Action","url":"/manual/1.0.0/workflow/actions/shell.html","urlType":"internal"},{"content":"Simple Evaluation","url":"/manual/1.0.0/workflow/actions/simpleeval.html","urlType":"internal"},{"content":"Snmp Trap","url":"/manual/1.0.0/workflow/actions/snmptrap.html","urlType":"internal"},{"content":"SQL Script Executor","url":"/manual/1.0.0/workflow/actions/sql.html","urlType":"internal"},{"content":"Start","url":"/manual/1.0.0/workflow/actions/start.html","urlType":"internal"},{"content":"Success Action","url":"/manual/1.0.0/workflow/actions/success.html","urlType":"internal"},{"content":"Table Exists","url":"/manual/1.0.0/workflow/actions/tableexists.html","urlType":"internal"},{"content":"Telnet a host","url":"/manual/1.0.0/workflow/actions/telnet.html","urlType":"internal"},{"content":"Truncate Tables","url":"/manual/1.0.0/workflow/actions/truncatetables.html","urlType":"internal"},{"content":"Unzip","url":"/manual/1.0.0/workflow/actions/unzip.html","urlType":"internal"},{"content":"Verify file signature with PGP","url":"/manual/1.0.0/workflow/actions/pgpverify.html","urlType":"internal"},{"content":"Wait for file","url":"/manual/1.0.0/workflow/actions/waitforfile.html","urlType":"internal"},{"content":"Wait for SQL","url":"/manual/1.0.0/workflow/actions/waitforsql.html","urlType":"internal"},{"content":"Workflow","url":"/manual/1.0.0/workflow/actions/workflow.html","urlType":"internal"},{"content":"Write to File","url":"/manual/1.0.0/workflow/actions/writetofile.html","urlType":"internal"},{"content":"Write to Log","url":"/manual/1.0.0/workflow/actions/writetolog.html","urlType":"internal"},{"content":"XSD Validator","url":"/manual/1.0.0/workflow/actions/xsdvalidator.html","urlType":"internal"},{"content":"XSL Transformation","url":"/manual/1.0.0/workflow/actions/xslt.html","urlType":"internal"},{"content":"Zip File","url":"/manual/1.0.0/workflow/actions/zipfile.html","urlType":"internal"}]}]},{"content":"Variables","url":"/manual/1.0.0/variables.html","urlType":"internal"},{"content":"Virtual File System","url":"/manual/1.0.0/vfs.html","urlType":"internal","items":[{"content":"Amazon Web Services S3","url":"/manual/1.0.0/vfs/aws-s3-vfs.html","urlType":"internal"},{"content":"Microsoft Azure Storage","url":"/manual/1.0.0/vfs/azure-blob-storage-vfs.html","urlType":"internal"},{"content":"Dropbox","url":"/manual/1.0.0/vfs/dropbox-vfs.html","urlType":"internal"},{"content":"Google Cloud Storage","url":"/manual/1.0.0/vfs/google-cloud-storage-vfs.html","urlType":"internal"},{"content":"Google Drive","url":"/manual/1.0.0/vfs/google-drive-vfs.html","urlType":"internal"}]},{"content":"Relational Database Connections","url":"/manual/1.0.0/database/databases.html","urlType":"internal","items":[{"content":"Apache Derby","url":"/manual/1.0.0/database/databases/derby.html","urlType":"internal"},{"content":"Apache Doris","url":"/manual/1.0.0/database/databases/doris.html","urlType":"internal"},{"content":"AS400","url":"/manual/1.0.0/database/databases/as400.html","urlType":"internal"},{"content":"Cache","url":"/manual/1.0.0/database/databases/cache.html","urlType":"internal"},{"content":"ClickHouse","url":"/manual/1.0.0/database/databases/clickhouse.html","urlType":"internal"},{"content":"DB2","url":"/manual/1.0.0/database/databases/db2.html","urlType":"internal"},{"content":"Exasol","url":"/manual/1.0.0/database/databases/exasol.html","urlType":"internal"},{"content":"firebird","url":"/manual/1.0.0/database/databases/firebird.html","urlType":"internal"},{"content":"Google BigQuery","url":"/manual/1.0.0/database/databases/googlebigquery.html","urlType":"internal"},{"content":"Greenplum","url":"/manual/1.0.0/database/databases/greenplum.html","urlType":"internal"},{"content":"Gupta SQLBase","url":"/manual/1.0.0/database/databases/sqlbase.html","urlType":"internal"},{"content":"H2","url":"/manual/1.0.0/database/databases/h2.html","urlType":"internal"},{"content":"Hypersonic","url":"/manual/1.0.0/database/databases/hypersonic.html","urlType":"internal"},{"content":"IBM Universe","url":"/manual/1.0.0/database/databases/universe.html","urlType":"internal"},{"content":"InfiniDB","url":"/manual/1.0.0/database/databases/infinidb.html","urlType":"internal"},{"content":"Infobright DB","url":"/manual/1.0.0/database/databases/infobright.html","urlType":"internal"},{"content":"informix","url":"/manual/1.0.0/database/databases/informix.html","urlType":"internal"},{"content":"ingres","url":"/manual/1.0.0/database/databases/ingres.html","urlType":"internal"},{"content":"interbase","url":"/manual/1.0.0/database/databases/interbase.html","urlType":"internal"},{"content":"Kingbase ES","url":"/manual/1.0.0/database/databases/kingbasees.html","urlType":"internal"},{"content":"Mariadb","url":"/manual/1.0.0/database/databases/mariadb.html","urlType":"internal"},{"content":"MaxDB (SAP DB)","url":"/manual/1.0.0/database/databases/sapdb.html","urlType":"internal"},{"content":"monetdb","url":"/manual/1.0.0/database/databases/monetdb.html","urlType":"internal"},{"content":"MS SqlServer","url":"/manual/1.0.0/database/databases/mssql.html","urlType":"internal"},{"content":"MS SqlServer (Native)","url":"/manual/1.0.0/database/databases/mssqlnative.html","urlType":"internal"},{"content":"MySql","url":"/manual/1.0.0/database/databases/mysql.html","urlType":"internal"},{"content":"Netezza","url":"/manual/1.0.0/database/databases/netezza.html","urlType":"internal"},{"content":"Oracle","url":"/manual/1.0.0/database/databases/oracle.html","urlType":"internal"},{"content":"Oracle RDB","url":"/manual/1.0.0/database/databases/oraclerdb.html","urlType":"internal"},{"content":"PostgreSQL","url":"/manual/1.0.0/database/databases/postgresql.html","urlType":"internal"},{"content":"Redshift","url":"/manual/1.0.0/database/databases/redshift.html","urlType":"internal"},{"content":"Snowflake","url":"/manual/1.0.0/database/databases/snowflake.html","urlType":"internal"},{"content":"SqLite","url":"/manual/1.0.0/database/databases/sqlite.html","urlType":"internal"},{"content":"Sybase","url":"/manual/1.0.0/database/databases/sybase.html","urlType":"internal"},{"content":"Sybase IQ","url":"/manual/1.0.0/database/databases/sybaseiq.html","urlType":"internal"},{"content":"Teradata","url":"/manual/1.0.0/database/databases/teradata.html","urlType":"internal"},{"content":"Vectorwise","url":"/manual/1.0.0/database/databases/vectorwise.html","urlType":"internal"},{"content":"Vertica","url":"/manual/1.0.0/database/databases/vertica.html","urlType":"internal"}]},{"content":"Logging basics","url":"/manual/1.0.0/logging/logging-basics.html","urlType":"internal","items":[{"content":"Logging reflection","url":"/manual/1.0.0/logging/logging-reflection.html","urlType":"internal"}]},{"content":"Metadata Types","url":"/manual/1.0.0/metadata-types/index.html","urlType":"internal","items":[{"content":"Beam File Definition","url":"/manual/1.0.0/metadata-types/beam-file-definition.html","urlType":"internal"},{"content":"Cassandra Connection","url":"/manual/1.0.0/metadata-types/cassandra/cassandra-connection.html","urlType":"internal"},{"content":"Data Set","url":"/manual/1.0.0/metadata-types/data-set.html","urlType":"internal"},{"content":"Hop Server","url":"/manual/1.0.0/metadata-types/hop-server.html","urlType":"internal"},{"content":"MongoDB Connection","url":"/manual/1.0.0/metadata-types/mongodb-connection.html","urlType":"internal"},{"content":"Neo4j Connection","url":"/manual/1.0.0/metadata-types/neo4j/neo4j-connection.html","urlType":"internal"},{"content":"Neo4j Graph Model","url":"/manual/1.0.0/metadata-types/neo4j/neo4j-graphmodel.html","urlType":"internal"},{"content":"Partition Schema","url":"/manual/1.0.0/metadata-types/partition-schema.html","urlType":"internal"},{"content":"Pipeline Log","url":"/manual/1.0.0/metadata-types/pipeline-log.html","urlType":"internal"},{"content":"Pipeline Probe","url":"/manual/1.0.0/metadata-types/pipeline-probe.html","urlType":"internal"},{"content":"Pipeline Run Configuration","url":"/manual/1.0.0/metadata-types/pipeline-run-config.html","urlType":"internal"},{"content":"Pipeline Unit Test","url":"/manual/1.0.0/metadata-types/pipeline-unit-test.html","urlType":"internal"},{"content":"Relational Database Connection","url":"/manual/1.0.0/metadata-types/rdbms-connection.html","urlType":"internal"},{"content":"Splunk Connection","url":"/manual/1.0.0/metadata-types/splunk-connection.html","urlType":"internal"},{"content":"Web Service","url":"/manual/1.0.0/metadata-types/web-service.html","urlType":"internal"},{"content":"Workflow Log","url":"/manual/1.0.0/metadata-types/workflow-log.html","urlType":"internal"},{"content":"Workflow Run Configuration","url":"/manual/1.0.0/metadata-types/workflow-run-config.html","urlType":"internal"}]},{"content":"Passwords","url":"/manual/1.0.0/password/passwords.html","urlType":"internal","items":[{"content":"AES Two way password encoder","url":"/manual/1.0.0/password/passwords/aespasswords.html","urlType":"internal"}]},{"content":"Plugins","url":"/manual/1.0.0/plugins/plugins.html","urlType":"internal","items":[{"content":"External Plugins","url":"/manual/1.0.0/plugins/external-plugins.html","urlType":"internal"},{"content":"Kettle/PDI Import","url":"/manual/1.0.0/plugins/import/kettle-import.html","urlType":"internal"}]},{"content":"Samples","url":"/manual/1.0.0/samples/samples.html","urlType":"internal"},{"content":"Technology","url":"/manual/1.0.0/technology/technology.html","urlType":"internal","items":[{"content":"Azure","url":"/manual/1.0.0/technology/azure/index.html","urlType":"internal"},{"content":"Cassandra","url":"/manual/1.0.0/technology/cassandra/index.html","urlType":"internal"},{"content":"Neo4j","url":"/manual/1.0.0/technology/neo4j/index.html","urlType":"internal"},{"content":"Google","url":"/manual/1.0.0/technology/google/index.html","urlType":"internal"}]},{"content":"Hop Server","url":"/manual/1.0.0/hop-server/index.html","urlType":"internal","items":[{"content":"REST api","url":"/manual/1.0.0/hop-server/rest-api.html","urlType":"internal"},{"content":"Web Service","url":"/manual/1.0.0/hop-server/web-service.html","urlType":"internal"}]},{"content":"Hop Tools","url":"/manual/1.0.0/hop-tools/index.html","urlType":"internal","items":[{"content":"hop-conf","url":"/manual/1.0.0/hop-tools/hop-conf/hop-conf.html","urlType":"internal"},{"content":"hop-encrypt","url":"/manual/1.0.0/hop-tools/hop-encrypt.html","urlType":"internal"},{"content":"hop-gui","url":"/manual/1.0.0/hop-gui/index.html","urlType":"internal"},{"content":"hop-run","url":"/manual/1.0.0/hop-run/index.html","urlType":"internal"},{"content":"hop-search","url":"/manual/1.0.0/hop-tools/hop-search.html","urlType":"internal"},{"content":"hop-import","url":"/manual/1.0.0/hop-tools/hop-import.html","urlType":"internal"},{"content":"hop-server","url":"/manual/1.0.0/hop-server/index.html","urlType":"internal"},{"content":"hop-translator","url":"/manual/1.0.0/snippets/hop-tools/hop-translator.html","urlType":"internal"}]},{"content":"Best Practices","url":"/manual/1.0.0/best-practices/index.html","urlType":"internal"},{"content":"Pro Tips","url":"/manual/1.0.0/protips/index.html","urlType":"internal"},{"content":"Unique Selling Propositions","url":"/manual/1.0.0/hop-usps.html","urlType":"internal"}],"root":true,"order":0}]},"tech-manual/2.8.0":{"displayVersion":"2.8.0","title":"Technical Documentation","version":"2.8.0","name":"tech-manual","prerelease":true,"asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/tech-manual/next/index.html","navigation":[{"items":[{"content":"Getting started","url":"/tech-manual/next/getting-started.html","urlType":"internal"},{"content":"Docker container","url":"/tech-manual/next/docker-container.html","urlType":"internal"},{"content":"Kettle/PDI and Hop","url":"/tech-manual/next/hop-vs-kettle/index.html","urlType":"internal","items":[{"content":"Hop vs Kettle","url":"/tech-manual/next/hop-vs-kettle/hop-vs-kettle.html","urlType":"internal"},{"content":"If you know Kettle","url":"/tech-manual/next/hop-vs-kettle/if-you-know-kettle.html","urlType":"internal"},{"content":"Upgrade Kettle to Hop","url":"/tech-manual/next/hop-vs-kettle/import-kettle-projects.html","urlType":"internal"}]},{"content":"Logging Architecture","url":"/tech-manual/next/logging/logging-architecture.html","urlType":"internal","items":[{"content":"Logging from UDJC","url":"/tech-manual/next/logging/udjc-logging.html","urlType":"internal"},{"content":"Logging Plugin Architecture","url":"/tech-manual/next/logging/logging-plugins.html","urlType":"internal"}]},{"content":"Hop logo and icons","url":"/tech-manual/next/hop-logo-and-icons.html","urlType":"internal"}],"root":true,"order":0}]},"tech-manual/2.7.0":{"displayVersion":"2.7.0","title":"Technical Documentation","version":"2.7.0","name":"tech-manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/tech-manual/latest/index.html","navigation":[{"items":[{"content":"Getting started","url":"/tech-manual/latest/getting-started.html","urlType":"internal"},{"content":"Docker container","url":"/tech-manual/latest/docker-container.html","urlType":"internal"},{"content":"Kettle/PDI and Hop","url":"/tech-manual/latest/hop-vs-kettle/index.html","urlType":"internal","items":[{"content":"Hop vs Kettle","url":"/tech-manual/latest/hop-vs-kettle/hop-vs-kettle.html","urlType":"internal"},{"content":"If you know Kettle","url":"/tech-manual/latest/hop-vs-kettle/if-you-know-kettle.html","urlType":"internal"},{"content":"Upgrade Kettle to Hop","url":"/tech-manual/latest/hop-vs-kettle/import-kettle-projects.html","urlType":"internal"}]},{"content":"Logging Architecture","url":"/tech-manual/latest/logging/logging-architecture.html","urlType":"internal","items":[{"content":"Logging from UDJC","url":"/tech-manual/latest/logging/udjc-logging.html","urlType":"internal"},{"content":"Logging Plugin Architecture","url":"/tech-manual/latest/logging/logging-plugins.html","urlType":"internal"}]},{"content":"Hop logo and icons","url":"/tech-manual/latest/hop-logo-and-icons.html","urlType":"internal"}],"root":true,"order":0}]},"tech-manual/2.6.0":{"displayVersion":"2.6.0","title":"Technical Documentation","version":"2.6.0","name":"tech-manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/tech-manual/2.6.0/index.html","navigation":[{"items":[{"content":"Getting started","url":"/tech-manual/2.6.0/getting-started.html","urlType":"internal"},{"content":"Docker container","url":"/tech-manual/2.6.0/docker-container.html","urlType":"internal"},{"content":"Kettle/PDI and Hop","url":"/tech-manual/2.6.0/hop-vs-kettle/index.html","urlType":"internal","items":[{"content":"Hop vs Kettle","url":"/tech-manual/2.6.0/hop-vs-kettle/hop-vs-kettle.html","urlType":"internal"},{"content":"If you know Kettle","url":"/tech-manual/2.6.0/hop-vs-kettle/if-you-know-kettle.html","urlType":"internal"},{"content":"Upgrade Kettle to Hop","url":"/tech-manual/2.6.0/hop-vs-kettle/import-kettle-projects.html","urlType":"internal"}]},{"content":"Logging Architecture","url":"/tech-manual/2.6.0/logging/logging-architecture.html","urlType":"internal","items":[{"content":"Logging from UDJC","url":"/tech-manual/2.6.0/logging/udjc-logging.html","urlType":"internal"},{"content":"Logging Plugin Architecture","url":"/tech-manual/2.6.0/logging/logging-plugins.html","urlType":"internal"}]},{"content":"Hop logo and icons","url":"/tech-manual/2.6.0/hop-logo-and-icons.html","urlType":"internal"}],"root":true,"order":0}]},"tech-manual/2.5.0":{"displayVersion":"2.5.0","title":"Technical Documentation","version":"2.5.0","name":"tech-manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/tech-manual/2.5.0/index.html","navigation":[{"items":[{"content":"Getting started","url":"/tech-manual/2.5.0/getting-started.html","urlType":"internal"},{"content":"Docker container","url":"/tech-manual/2.5.0/docker-container.html","urlType":"internal"},{"content":"Kettle/PDI and Hop","url":"/tech-manual/2.5.0/hop-vs-kettle/index.html","urlType":"internal","items":[{"content":"Hop vs Kettle","url":"/tech-manual/2.5.0/hop-vs-kettle/hop-vs-kettle.html","urlType":"internal"},{"content":"If you know Kettle","url":"/tech-manual/2.5.0/hop-vs-kettle/if-you-know-kettle.html","urlType":"internal"},{"content":"Upgrade Kettle to Hop","url":"/tech-manual/2.5.0/hop-vs-kettle/import-kettle-projects.html","urlType":"internal"}]},{"content":"Logging Architecture","url":"/tech-manual/2.5.0/logging/logging-architecture.html","urlType":"internal","items":[{"content":"Logging from UDJC","url":"/tech-manual/2.5.0/logging/udjc-logging.html","urlType":"internal"},{"content":"Logging Plugin Architecture","url":"/tech-manual/2.5.0/logging/logging-plugins.html","urlType":"internal"}]},{"content":"Hop logo and icons","url":"/tech-manual/2.5.0/hop-logo-and-icons.html","urlType":"internal"}],"root":true,"order":0}]},"dev-manual/2.8.0":{"displayVersion":"2.8.0","title":"Development Documentation","version":"2.8.0","name":"dev-manual","prerelease":true,"asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/dev-manual/next/index.html","navigation":[{"items":[{"content":"Getting started","url":"/dev-manual/next/getting-started.html","urlType":"internal"},{"content":"Plugins Upgrades to 2.x","url":"/dev-manual/next/upgrading-to-20.html","urlType":"internal"},{"content":"Porting Kettle plugins","url":"/dev-manual/next/porting-kettle-plugins.html","urlType":"internal"},{"content":"Metadata plugins","url":"/dev-manual/next/metadata-plugins.html","urlType":"internal"},{"content":"Setting up your development environment","url":"/dev-manual/next/setup-dev-environment.html","urlType":"internal"},{"content":"Integration testing","url":"/dev-manual/next/integration-testing.html","urlType":"internal"},{"content":"Internationalisation (i18n)","url":"/dev-manual/next/internationalisation.html","urlType":"internal"},{"content":"Plugins Development","url":"/dev-manual/next/plugin-development.html","urlType":"internal"},{"content":"Plugins Samples","url":"/dev-manual/next/plugin-samples.html","urlType":"internal"},{"content":"SVG Files","url":"/dev-manual/next/svg-files.html","urlType":"internal","items":[{"content":"Creating your own plugin","url":"/dev-manual/next/start-your-own-plugin.html","urlType":"internal"}]},{"content":"Apache Release Process","url":"/dev-manual/next/apache-release/index.html","urlType":"internal","items":[{"content":"Creating a Release","url":"/dev-manual/next/apache-release/creating-a-release.html","urlType":"internal"},{"content":"Promoting a Release","url":"/dev-manual/next/apache-release/promoting-a-release.html","urlType":"internal"},{"content":"Checking a Release","url":"/dev-manual/next/apache-release/checking-a-release.html","urlType":"internal"}]},{"content":"Hop Web","url":"/dev-manual/next/hopweb/index.html","urlType":"internal","items":[{"content":"Hop Web Developer Guide","url":"/dev-manual/next/hopweb/developer-guide.html","urlType":"internal"},{"content":"Hop Web Antipatterns","url":"/dev-manual/next/hopweb/hopweb-antipatterns.html","urlType":"internal"}]},{"content":"SDK","url":"/dev-manual/next/sdk/index.html","urlType":"internal","items":[{"content":"The Hop SDK","url":"/dev-manual/next/sdk/hop-sdk.html","urlType":"internal"}]}],"root":true,"order":0}]},"dev-manual/2.7.0":{"displayVersion":"2.7.0","title":"Development Documentation","version":"2.7.0","name":"dev-manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/dev-manual/latest/index.html","navigation":[{"items":[{"content":"Getting started","url":"/dev-manual/latest/getting-started.html","urlType":"internal"},{"content":"Plugins Upgrades to 2.x","url":"/dev-manual/latest/upgrading-to-20.html","urlType":"internal"},{"content":"Porting Kettle plugins","url":"/dev-manual/latest/porting-kettle-plugins.html","urlType":"internal"},{"content":"Metadata plugins","url":"/dev-manual/latest/metadata-plugins.html","urlType":"internal"},{"content":"Setting up your development environment","url":"/dev-manual/latest/setup-dev-environment.html","urlType":"internal"},{"content":"Integration testing","url":"/dev-manual/latest/integration-testing.html","urlType":"internal"},{"content":"Internationalisation (i18n)","url":"/dev-manual/latest/internationalisation.html","urlType":"internal"},{"content":"Plugins Development","url":"/dev-manual/latest/plugin-development.html","urlType":"internal"},{"content":"Plugins Samples","url":"/dev-manual/latest/plugin-samples.html","urlType":"internal"},{"content":"SVG Files","url":"/dev-manual/latest/svg-files.html","urlType":"internal","items":[{"content":"Creating your own plugin","url":"/dev-manual/latest/start-your-own-plugin.html","urlType":"internal"}]},{"content":"Apache Release Process","url":"/dev-manual/latest/apache-release/index.html","urlType":"internal","items":[{"content":"Creating a Release","url":"/dev-manual/latest/apache-release/creating-a-release.html","urlType":"internal"},{"content":"Promoting a Release","url":"/dev-manual/latest/apache-release/promoting-a-release.html","urlType":"internal"},{"content":"Checking a Release","url":"/dev-manual/latest/apache-release/checking-a-release.html","urlType":"internal"}]},{"content":"Hop Web","url":"/dev-manual/latest/hopweb/index.html","urlType":"internal","items":[{"content":"Hop Web Developer Guide","url":"/dev-manual/latest/hopweb/developer-guide.html","urlType":"internal"},{"content":"Hop Web Antipatterns","url":"/dev-manual/latest/hopweb/hopweb-antipatterns.html","urlType":"internal"}]},{"content":"SDK","url":"/dev-manual/latest/sdk/index.html","urlType":"internal","items":[{"content":"The Hop SDK","url":"/dev-manual/latest/sdk/hop-sdk.html","urlType":"internal"}]}],"root":true,"order":0}]},"dev-manual/2.6.0":{"displayVersion":"2.6.0","title":"Development Documentation","version":"2.6.0","name":"dev-manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/dev-manual/2.6.0/index.html","navigation":[{"items":[{"content":"Getting started","url":"/dev-manual/2.6.0/getting-started.html","urlType":"internal"},{"content":"Plugins Upgrades to 2.x","url":"/dev-manual/2.6.0/upgrading-to-20.html","urlType":"internal"},{"content":"Porting Kettle plugins","url":"/dev-manual/2.6.0/porting-kettle-plugins.html","urlType":"internal"},{"content":"Metadata plugins","url":"/dev-manual/2.6.0/metadata-plugins.html","urlType":"internal"},{"content":"Setting up your development environment","url":"/dev-manual/2.6.0/setup-dev-environment.html","urlType":"internal"},{"content":"Integration testing","url":"/dev-manual/2.6.0/integration-testing.html","urlType":"internal"},{"content":"Internationalisation (i18n)","url":"/dev-manual/2.6.0/internationalisation.html","urlType":"internal"},{"content":"Plugins Development","url":"/dev-manual/2.6.0/plugin-development.html","urlType":"internal"},{"content":"Plugins Samples","url":"/dev-manual/2.6.0/plugin-samples.html","urlType":"internal"},{"content":"SVG Files","url":"/dev-manual/2.6.0/svg-files.html","urlType":"internal","items":[{"content":"Creating your own plugin","url":"/dev-manual/2.6.0/start-your-own-plugin.html","urlType":"internal"}]},{"content":"Apache Release Process","url":"/dev-manual/2.6.0/apache-release/index.html","urlType":"internal","items":[{"content":"Creating a Release","url":"/dev-manual/2.6.0/apache-release/creating-a-release.html","urlType":"internal"},{"content":"Promoting a Release","url":"/dev-manual/2.6.0/apache-release/promoting-a-release.html","urlType":"internal"},{"content":"Checking a Release","url":"/dev-manual/2.6.0/apache-release/checking-a-release.html","urlType":"internal"}]},{"content":"Hop Web","url":"/dev-manual/2.6.0/hopweb/index.html","urlType":"internal","items":[{"content":"Hop Web Developer Guide","url":"/dev-manual/2.6.0/hopweb/developer-guide.html","urlType":"internal"},{"content":"Hop Web Antipatterns","url":"/dev-manual/2.6.0/hopweb/hopweb-antipatterns.html","urlType":"internal"}]},{"content":"SDK","url":"/dev-manual/2.6.0/sdk/index.html","urlType":"internal","items":[{"content":"The Hop SDK","url":"/dev-manual/2.6.0/sdk/hop-sdk.html","urlType":"internal"}]}],"root":true,"order":0}]},"dev-manual/2.5.0":{"displayVersion":"2.5.0","title":"Development Documentation","version":"2.5.0","name":"dev-manual","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Apache Hop","site-url":"https://hop.apache.org"},"sourcemap":false,"extensions":[{}]},"url":"/dev-manual/2.5.0/index.html","navigation":[{"items":[{"content":"Getting started","url":"/dev-manual/2.5.0/getting-started.html","urlType":"internal"},{"content":"Plugins Upgrades to 2.x","url":"/dev-manual/2.5.0/upgrading-to-20.html","urlType":"internal"},{"content":"Porting Kettle plugins","url":"/dev-manual/2.5.0/porting-kettle-plugins.html","urlType":"internal"},{"content":"Metadata plugins","url":"/dev-manual/2.5.0/metadata-plugins.html","urlType":"internal"},{"content":"Setting up your development environment","url":"/dev-manual/2.5.0/setup-dev-environment.html","urlType":"internal"},{"content":"Integration testing","url":"/dev-manual/2.5.0/integration-testing.html","urlType":"internal"},{"content":"Internationalisation (i18n)","url":"/dev-manual/2.5.0/internationalisation.html","urlType":"internal"},{"content":"Plugins Development","url":"/dev-manual/2.5.0/plugin-development.html","urlType":"internal"},{"content":"Plugins Samples","url":"/dev-manual/2.5.0/plugin-samples.html","urlType":"internal"},{"content":"SVG Files","url":"/dev-manual/2.5.0/svg-files.html","urlType":"internal","items":[{"content":"Creating your own plugin","url":"/dev-manual/2.5.0/start-your-own-plugin.html","urlType":"internal"}]},{"content":"Apache Release Process","url":"/dev-manual/2.5.0/apache-release/index.html","urlType":"internal","items":[{"content":"Creating a Release","url":"/dev-manual/2.5.0/apache-release/creating-a-release.html","urlType":"internal"},{"content":"Promoting a Release","url":"/dev-manual/2.5.0/apache-release/promoting-a-release.html","urlType":"internal"},{"content":"Checking a Release","url":"/dev-manual/2.5.0/apache-release/checking-a-release.html","urlType":"internal"}]},{"content":"Hop Web","url":"/dev-manual/2.5.0/hopweb/index.html","urlType":"internal","items":[{"content":"Hop Web Developer Guide","url":"/dev-manual/2.5.0/hopweb/developer-guide.html","urlType":"internal"},{"content":"Hop Web Antipatterns","url":"/dev-manual/2.5.0/hopweb/hopweb-antipatterns.html","urlType":"internal"}]},{"content":"SDK","url":"/dev-manual/2.5.0/sdk/index.html","urlType":"internal","items":[{"content":"The Hop SDK","url":"/dev-manual/2.5.0/sdk/hop-sdk.html","urlType":"internal"}]}],"root":true,"order":0}]}}}})